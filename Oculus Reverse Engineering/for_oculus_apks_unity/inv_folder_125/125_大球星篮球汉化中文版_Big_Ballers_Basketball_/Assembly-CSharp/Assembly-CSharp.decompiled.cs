using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Runtime.Serialization;
using System.Text;
using System.Threading.Tasks;
using AdvancedPeopleSystem;
using BNG;
using Facebook.WitAi;
using Facebook.WitAi.Lib;
using Febucci.UI;
using Firebase;
using Firebase.Firestore;
using Il2CppDummyDll;
using MText;
using Normal.Realtime;
using Normal.Realtime.Serialization;
using Oculus.Platform;
using Oculus.Platform.Models;
using RootMotion.FinalIK;
using Shapes;
using Sigtrap.VrTunnellingPro;
using TMPro;
using Unity.RemoteConfig;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.InputSystem;
using UnityEngine.Networking;
using UnityEngine.Rendering;
using UnityEngine.SceneManagement;
using UnityEngine.UI;
using UnityEngine.Video;
using UnityEngine.XR;
using UnityStandardAssets.Utility;
using VRUiKits.Utils;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public class FollowLight2d : MonoBehaviour
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject toFollow;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0xCE5C60", Offset = "0xCE5C60", VA = "0xCE5C60")]
	private void Update()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0xCE5CC4", Offset = "0xCE5CC4", VA = "0xCE5CC4")]
	public FollowLight2d()
	{
	}
}
[Token(Token = "0x2000003")]
public class TablaSenoCoseno
{
	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool hasInstanced;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static float[] SenArray;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static float[] CosArray;

	[Token(Token = "0x6000003")]
	[Address(RVA = "0xDCCD68", Offset = "0xDCCD68", VA = "0xDCCD68")]
	public static void initSenCos()
	{
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0xDCCF28", Offset = "0xDCCF28", VA = "0xDCCF28")]
	public TablaSenoCoseno()
	{
	}
}
[Token(Token = "0x2000004")]
public class rotate : MonoBehaviour
{
	[Token(Token = "0x6000006")]
	[Address(RVA = "0xB03444", Offset = "0xB03444", VA = "0xB03444")]
	private void Start()
	{
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0xB03448", Offset = "0xB03448", VA = "0xB03448")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0xB034BC", Offset = "0xB034BC", VA = "0xB034BC")]
	public rotate()
	{
	}
}
[Token(Token = "0x2000005")]
public class Camera_control : MonoBehaviour
{
	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speedH;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float speedV;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float yaw;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float pitch;

	[Token(Token = "0x6000009")]
	[Address(RVA = "0xF0A8F8", Offset = "0xF0A8F8", VA = "0xF0A8F8")]
	private void Start()
	{
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0xF0A8FC", Offset = "0xF0A8FC", VA = "0xF0A8FC")]
	private void Update()
	{
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0xF0A9E8", Offset = "0xF0A9E8", VA = "0xF0A9E8")]
	public Camera_control()
	{
	}
}
[Token(Token = "0x2000006")]
public class Skybox_rotator : MonoBehaviour
{
	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text skyboxNameText;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Material> skyboxes;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int currentSkybox;

	[Token(Token = "0x600000C")]
	[Address(RVA = "0xDBCB2C", Offset = "0xDBCB2C", VA = "0xDBCB2C")]
	private void Start()
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0xDBCC00", Offset = "0xDBCC00", VA = "0xDBCC00")]
	private void Update()
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0xDBCB30", Offset = "0xDBCB30", VA = "0xDBCB30")]
	private void SetSkybox()
	{
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0xDBCC84", Offset = "0xDBCC84", VA = "0xDBCC84")]
	public Skybox_rotator()
	{
	}
}
[Token(Token = "0x2000007")]
public class ColorPicker : MonoBehaviour
{
	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Image mainImage;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RectTransform pickerIcon;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image colorPreview;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _activeCursor;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector2 offset;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UIControllerDEMO UIControllerDEMO;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Canvas Canvas;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Color _findColor;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector2 realSize;

	[Token(Token = "0x6000010")]
	[Address(RVA = "0xB68828", Offset = "0xB68828", VA = "0xB68828")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0xB68884", Offset = "0xB68884", VA = "0xB68884")]
	public void CursorEnter()
	{
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0xB688EC", Offset = "0xB688EC", VA = "0xB688EC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0xB688FC", Offset = "0xB688FC", VA = "0xB688FC")]
	public void CursorMove()
	{
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0xB68A90", Offset = "0xB68A90", VA = "0xB68A90")]
	public void CursorPickSkin()
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0xB68AD0", Offset = "0xB68AD0", VA = "0xB68AD0")]
	public void CursorPickEye()
	{
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0xB68B10", Offset = "0xB68B10", VA = "0xB68B10")]
	public void CursorPickHair()
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0xB68B50", Offset = "0xB68B50", VA = "0xB68B50")]
	public void CursorPickUnderpants()
	{
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0xB68B90", Offset = "0xB68B90", VA = "0xB68B90")]
	public void CursorExit()
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0xB68BF4", Offset = "0xB68BF4", VA = "0xB68BF4")]
	public ColorPicker()
	{
	}
}
[Token(Token = "0x2000008")]
public class UICharacterRotate : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler
{
	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UIControllerDEMO uIController;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float mouseRotateCharacterPower;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool toogle;

	[Token(Token = "0x600001A")]
	[Address(RVA = "0xE8F090", Offset = "0xE8F090", VA = "0xE8F090", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0xE8F0A8", Offset = "0xE8F0A8", VA = "0xE8F0A8", Slot = "5")]
	public void OnPointerUp(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0xE8F0B8", Offset = "0xE8F0B8", VA = "0xE8F0B8")]
	private void Update()
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0xE8F1E0", Offset = "0xE8F1E0", VA = "0xE8F1E0")]
	public UICharacterRotate()
	{
	}
}
[Token(Token = "0x2000009")]
public class UIControllerDEMO : MonoBehaviour
{
	[Token(Token = "0x200000A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x795A30", Offset = "0x795A30")]
	private sealed class <>c__DisplayClass75_0
	{
		[Token(Token = "0x4000047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int index;

		[Token(Token = "0x4000048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UIControllerDEMO <>4__this;

		[Token(Token = "0x600004E")]
		[Address(RVA = "0xCC5A7C", Offset = "0xCC5A7C", VA = "0xCC5A7C")]
		public <>c__DisplayClass75_0()
		{
		}

		[Token(Token = "0x600004F")]
		[Address(RVA = "0xCC5A84", Offset = "0xCC5A84", VA = "0xCC5A84")]
		internal void <SavesPanel_Select>b__0()
		{
		}
	}

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x798050", Offset = "0x798050")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x798050", Offset = "0x798050")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x798050", Offset = "0x798050")]
	public CharacterCustomization CharacterCustomization;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7980C4", Offset = "0x7980C4")]
	public Text playbutton_text;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text bake_text;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text lod_text;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text panelNameText;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UnityEngine.UI.Slider fatSlider;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEngine.UI.Slider musclesSlider;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UnityEngine.UI.Slider thinSlider;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UnityEngine.UI.Slider slimnessSlider;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public UnityEngine.UI.Slider breastSlider;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public UnityEngine.UI.Slider heightSlider;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public UnityEngine.UI.Slider legSlider;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public UnityEngine.UI.Slider headSizeSlider;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public UnityEngine.UI.Slider headOffsetSlider;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public UnityEngine.UI.Slider[] faceShapeSliders;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public RectTransform HairPanel;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public RectTransform BeardPanel;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public RectTransform ShirtPanel;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public RectTransform PantsPanel;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public RectTransform ShoesPanel;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public RectTransform HatPanel;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public RectTransform AccessoryPanel;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public RectTransform BackpackPanel;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public RectTransform FaceEditPanel;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public RectTransform BaseEditPanel;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public RectTransform SkinColorPanel;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public RectTransform EyeColorPanel;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public RectTransform HairColorPanel;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public RectTransform UnderpantsColorPanel;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public RectTransform EmotionsPanel;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public RectTransform SavesPanel;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public RectTransform SavesPanelList;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public RectTransform SavesPrefab;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public List<RectTransform> SavesList;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Image SkinColorButtonColor;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Image EyeColorButtonColor;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Image HairColorButtonColor;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public Image UnderpantsColorButtonColor;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Vector3[] CameraPositionForPanels;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public Vector3[] CameraEulerForPanels;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private int currentPanelIndex;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public Camera Camera;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public RectTransform femaleUI;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public RectTransform maleUI;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private int lodIndex;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	private bool walk_active;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17D")]
	private bool canvasVisible;

	[Token(Token = "0x600001E")]
	[Address(RVA = "0xE8F1F0", Offset = "0xE8F1F0", VA = "0xE8F1F0")]
	public void SwitchCharacterSettings(string name)
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0xE8F320", Offset = "0xE8F320", VA = "0xE8F320")]
	public void ShowFaceEdit()
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0xE8F3C8", Offset = "0xE8F3C8", VA = "0xE8F3C8")]
	public void ShowBaseEdit()
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0xE8F46C", Offset = "0xE8F46C", VA = "0xE8F46C")]
	public void SetFaceShape(int index)
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0xE8F558", Offset = "0xE8F558", VA = "0xE8F558")]
	public void SetHeadOffset()
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0xE8F5AC", Offset = "0xE8F5AC", VA = "0xE8F5AC")]
	public void BodyFat()
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0xE8F600", Offset = "0xE8F600", VA = "0xE8F600")]
	public void BodyMuscles()
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0xE8F654", Offset = "0xE8F654", VA = "0xE8F654")]
	public void BodyThin()
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0xE8F6A8", Offset = "0xE8F6A8", VA = "0xE8F6A8")]
	public void BodySlimness()
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0xE8F6FC", Offset = "0xE8F6FC", VA = "0xE8F6FC")]
	public void BodyBreast()
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0xE8F8DC", Offset = "0xE8F8DC", VA = "0xE8F8DC")]
	public void SetHeight()
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0xE8F924", Offset = "0xE8F924", VA = "0xE8F924")]
	public void SetHeadSize()
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0xE8F96C", Offset = "0xE8F96C", VA = "0xE8F96C")]
	public void Lod_Event(int next)
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0xE8F9F4", Offset = "0xE8F9F4", VA = "0xE8F9F4")]
	public void SetNewSkinColor(Color color)
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0xE8FA6C", Offset = "0xE8FA6C", VA = "0xE8FA6C")]
	public void SetNewEyeColor(Color color)
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0xE8FAE4", Offset = "0xE8FAE4", VA = "0xE8FAE4")]
	public void SetNewHairColor(Color color)
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0xE8FB5C", Offset = "0xE8FB5C", VA = "0xE8FB5C")]
	public void SetNewUnderpantsColor(Color color)
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0xE8FBD4", Offset = "0xE8FBD4", VA = "0xE8FBD4")]
	public void VisibleSkinColorPanel(bool v)
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0xE8FE8C", Offset = "0xE8FE8C", VA = "0xE8FE8C")]
	public void VisibleEyeColorPanel(bool v)
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0xE8FED0", Offset = "0xE8FED0", VA = "0xE8FED0")]
	public void VisibleHairColorPanel(bool v)
	{
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0xE8FF14", Offset = "0xE8FF14", VA = "0xE8FF14")]
	public void VisibleUnderpantsColorPanel(bool v)
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0xE8FF58", Offset = "0xE8FF58", VA = "0xE8FF58")]
	public void ShirtPanel_Select(bool v)
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0xE8FFA8", Offset = "0xE8FFA8", VA = "0xE8FFA8")]
	public void PantsPanel_Select(bool v)
	{
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0xE8FFF8", Offset = "0xE8FFF8", VA = "0xE8FFF8")]
	public void ShoesPanel_Select(bool v)
	{
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0xE90048", Offset = "0xE90048", VA = "0xE90048")]
	public void BackpackPanel_Select(bool v)
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0xE90098", Offset = "0xE90098", VA = "0xE90098")]
	public void HairPanel_Select(bool v)
	{
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0xE900F4", Offset = "0xE900F4", VA = "0xE900F4")]
	public void BeardPanel_Select(bool v)
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0xE90150", Offset = "0xE90150", VA = "0xE90150")]
	public void HatPanel_Select(bool v)
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0xE901AC", Offset = "0xE901AC", VA = "0xE901AC")]
	public void EmotionsPanel_Select(bool v)
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0xE90208", Offset = "0xE90208", VA = "0xE90208")]
	public void AccessoryPanel_Select(bool v)
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0xE90264", Offset = "0xE90264", VA = "0xE90264")]
	public void SavesPanel_Select(bool v)
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0xE906A4", Offset = "0xE906A4", VA = "0xE906A4")]
	public void SaveSelect(int index)
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0xE90750", Offset = "0xE90750", VA = "0xE90750")]
	public void EmotionsChange_Event(int index)
	{
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0xE90800", Offset = "0xE90800", VA = "0xE90800")]
	public void HairChange_Event(int index)
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0xE90824", Offset = "0xE90824", VA = "0xE90824")]
	public void BeardChange_Event(int index)
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0xE90848", Offset = "0xE90848", VA = "0xE90848")]
	public void ShirtChange_Event(int index)
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0xE9086C", Offset = "0xE9086C", VA = "0xE9086C")]
	public void PantsChange_Event(int index)
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0xE90890", Offset = "0xE90890", VA = "0xE90890")]
	public void ShoesChange_Event(int index)
	{
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0xE908B4", Offset = "0xE908B4", VA = "0xE908B4")]
	public void BackpackChange_Event(int index)
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0xE908D8", Offset = "0xE908D8", VA = "0xE908D8")]
	public void HatChange_Event(int index)
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0xE908FC", Offset = "0xE908FC", VA = "0xE908FC")]
	public void AccessoryChange_Event(int index)
	{
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0xE8FC18", Offset = "0xE8FC18", VA = "0xE8FC18")]
	public void HideAllPanels()
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0xE90920", Offset = "0xE90920", VA = "0xE90920")]
	public void SaveToFile()
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0xE90980", Offset = "0xE90980", VA = "0xE90980")]
	public void ClearFromFile()
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0xE909CC", Offset = "0xE909CC", VA = "0xE909CC")]
	public void Randimize()
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0xE909E8", Offset = "0xE909E8", VA = "0xE909E8")]
	public void PlayAnim()
	{
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0xE90AAC", Offset = "0xE90AAC", VA = "0xE90AAC")]
	private void Update()
	{
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0xE90CD8", Offset = "0xE90CD8", VA = "0xE90CD8")]
	public UIControllerDEMO()
	{
	}
}
[Token(Token = "0x200000B")]
public class FixNonUniformScale : MonoBehaviour
{
	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool running;

	[Token(Token = "0x6000050")]
	[Address(RVA = "0xE7BE90", Offset = "0xE7BE90", VA = "0xE7BE90")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0xE7BF18", Offset = "0xE7BF18", VA = "0xE7BF18")]
	public void MakeUniform()
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0xE7C2E4", Offset = "0xE7C2E4", VA = "0xE7C2E4")]
	public FixNonUniformScale()
	{
	}
}
[Token(Token = "0x200000C")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x795A40", Offset = "0x795A40")]
public class BasketballAudioControl : MonoBehaviour
{
	[Token(Token = "0x200000D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x795A78", Offset = "0x795A78")]
	private sealed class <PlayGoalNormalCoroutine>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BasketballAudioControl <>4__this;

		[Token(Token = "0x17000001")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000061")]
			[Address(RVA = "0xB04348", Offset = "0xB04348", VA = "0xB04348", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000002")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000063")]
			[Address(RVA = "0xB04390", Offset = "0xB04390", VA = "0xB04390", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600005E")]
		[Address(RVA = "0xB0424C", Offset = "0xB0424C", VA = "0xB0424C")]
		[DebuggerHidden]
		public <PlayGoalNormalCoroutine>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x600005F")]
		[Address(RVA = "0xB04278", Offset = "0xB04278", VA = "0xB04278", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000060")]
		[Address(RVA = "0xB0427C", Offset = "0xB0427C", VA = "0xB0427C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000062")]
		[Address(RVA = "0xB04350", Offset = "0xB04350", VA = "0xB04350", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200000E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x795A88", Offset = "0x795A88")]
	private sealed class <PlayGoalClearCoroutine>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BasketballAudioControl <>4__this;

		[Token(Token = "0x17000003")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000067")]
			[Address(RVA = "0xB040B0", Offset = "0xB040B0", VA = "0xB040B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000004")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000069")]
			[Address(RVA = "0xB040F8", Offset = "0xB040F8", VA = "0xB040F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000064")]
		[Address(RVA = "0xB03FB4", Offset = "0xB03FB4", VA = "0xB03FB4")]
		[DebuggerHidden]
		public <PlayGoalClearCoroutine>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x6000065")]
		[Address(RVA = "0xB03FE0", Offset = "0xB03FE0", VA = "0xB03FE0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000066")]
		[Address(RVA = "0xB03FE4", Offset = "0xB03FE4", VA = "0xB03FE4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000068")]
		[Address(RVA = "0xB040B8", Offset = "0xB040B8", VA = "0xB040B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200000F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x795A98", Offset = "0x795A98")]
	private sealed class <PlayGoalSetBigRingCoroutine>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400006A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400006B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BasketballAudioControl <>4__this;

		[Token(Token = "0x17000005")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600006D")]
			[Address(RVA = "0xB04494", Offset = "0xB04494", VA = "0xB04494", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000006")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600006F")]
			[Address(RVA = "0xB044DC", Offset = "0xB044DC", VA = "0xB044DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600006A")]
		[Address(RVA = "0xB04398", Offset = "0xB04398", VA = "0xB04398")]
		[DebuggerHidden]
		public <PlayGoalSetBigRingCoroutine>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x600006B")]
		[Address(RVA = "0xB043C4", Offset = "0xB043C4", VA = "0xB043C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600006C")]
		[Address(RVA = "0xB043C8", Offset = "0xB043C8", VA = "0xB043C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600006E")]
		[Address(RVA = "0xB0449C", Offset = "0xB0449C", VA = "0xB0449C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000010")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x795AA8", Offset = "0x795AA8")]
	private sealed class <PlayGoalHoopMovementCoroutine>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400006C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400006D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400006E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BasketballAudioControl <>4__this;

		[Token(Token = "0x17000007")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000073")]
			[Address(RVA = "0xB041FC", Offset = "0xB041FC", VA = "0xB041FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000008")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000075")]
			[Address(RVA = "0xB04244", Offset = "0xB04244", VA = "0xB04244", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000070")]
		[Address(RVA = "0xB04100", Offset = "0xB04100", VA = "0xB04100")]
		[DebuggerHidden]
		public <PlayGoalHoopMovementCoroutine>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x6000071")]
		[Address(RVA = "0xB0412C", Offset = "0xB0412C", VA = "0xB0412C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000072")]
		[Address(RVA = "0xB04130", Offset = "0xB04130", VA = "0xB04130", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000074")]
		[Address(RVA = "0xB04204", Offset = "0xB04204", VA = "0xB04204", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static BasketballAudioControl Instance;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7980D8", Offset = "0x7980D8")]
	[SerializeField]
	private AudioSource goalNormalAudioSource;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioClip goalNormal;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float goalNormalDelay;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x798144", Offset = "0x798144")]
	[SerializeField]
	private AudioSource goalClearAudioSource;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AudioClip goalClear;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float goalClearDelay;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7981B0", Offset = "0x7981B0")]
	[SerializeField]
	private AudioSource goalSetBigRingAudioSource;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private AudioClip goalSetBigRing;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private float goalSetBigRingDelay;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x79821C", Offset = "0x79821C")]
	[SerializeField]
	private AudioSource goalHoopMovementAudioSource;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private AudioClip goalHoopMovement;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private float goalHoopMovementDelay;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x798288", Offset = "0x798288")]
	[SerializeField]
	private AudioSource failAudioSource;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private AudioClip[] failCollisions;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7982E4", Offset = "0x7982E4")]
	public AudioSource poleAudioSource;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public ThrowingObject.AudioData poleCollisions;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x79831C", Offset = "0x79831C")]
	public AudioSource backboardAudioSource;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ThrowingObject.AudioData backboardCollisions;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x798354", Offset = "0x798354")]
	public AudioSource ringAudioSource;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public ThrowingObject.AudioData ringCollisions;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x79838C", Offset = "0x79838C")]
	public AudioSource netAudioSource;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public ThrowingObject.AudioData netCollisions;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7983C4", Offset = "0x7983C4")]
	public AudioSource floorAudioSource;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public ThrowingObject.AudioData floorCollisions;

	[Token(Token = "0x6000053")]
	[Address(RVA = "0xAEAC2C", Offset = "0xAEAC2C", VA = "0xAEAC2C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0xAEAC80", Offset = "0xAEAC80", VA = "0xAEAC80")]
	public void PlayGoalNormal()
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0xAEACAC", Offset = "0xAEACAC", VA = "0xAEACAC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7A62A4", Offset = "0x7A62A4")]
	public IEnumerator PlayGoalNormalCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0xAEAD24", Offset = "0xAEAD24", VA = "0xAEAD24")]
	public void PlayGoalClear()
	{
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0xAEAD50", Offset = "0xAEAD50", VA = "0xAEAD50")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7A6304", Offset = "0x7A6304")]
	public IEnumerator PlayGoalClearCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0xAEADC8", Offset = "0xAEADC8", VA = "0xAEADC8")]
	public void PlayGoalSetBigRing()
	{
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0xAEADF4", Offset = "0xAEADF4", VA = "0xAEADF4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7A6364", Offset = "0x7A6364")]
	public IEnumerator PlayGoalSetBigRingCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0xAEAE6C", Offset = "0xAEAE6C", VA = "0xAEAE6C")]
	public void PlayGoalHoopMovement()
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0xAEAE98", Offset = "0xAEAE98", VA = "0xAEAE98")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7A63C4", Offset = "0x7A63C4")]
	public IEnumerator PlayGoalHoopMovementCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0xAEAF10", Offset = "0xAEAF10", VA = "0xAEAF10")]
	public void PlayFail()
	{
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0xAEAF74", Offset = "0xAEAF74", VA = "0xAEAF74")]
	public BasketballAudioControl()
	{
	}
}
[Token(Token = "0x2000011")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x795AB8", Offset = "0x795AB8")]
public class BasketballBallControl : MonoBehaviour
{
	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ThrowingObject throwingObject;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SphereCollider sphereCollider;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Material failMaterial;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isFloored;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool isRingTriggerPassed;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	private bool isNetTriggerPassed;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	private bool isFail;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool isGoaled;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	private bool isClear;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action OnFail;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Action<bool> OnGoal;

	[Token(Token = "0x6000076")]
	[Address(RVA = "0xAEB07C", Offset = "0xAEB07C", VA = "0xAEB07C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0xAEB110", Offset = "0xAEB110", VA = "0xAEB110")]
	public static BasketballBallControl GetComponent(ThrowingObject throwingObject)
	{
		return null;
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0xAEB1E8", Offset = "0xAEB1E8", VA = "0xAEB1E8")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0xAEB318", Offset = "0xAEB318", VA = "0xAEB318")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0xAEB514", Offset = "0xAEB514", VA = "0xAEB514")]
	private void OnCollisionEnter(Collision other)
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0xAEB740", Offset = "0xAEB740", VA = "0xAEB740")]
	private void ResetBall()
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0xAEB284", Offset = "0xAEB284", VA = "0xAEB284")]
	private void SetGoaled()
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0xAEB480", Offset = "0xAEB480", VA = "0xAEB480")]
	private void SetFailed()
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0xAEB750", Offset = "0xAEB750", VA = "0xAEB750")]
	public BasketballBallControl()
	{
	}
}
[Token(Token = "0x2000012")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x795AF0", Offset = "0x795AF0")]
public class BasketballGameControl : MonoBehaviour
{
	[Token(Token = "0x2000013")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x795B28", Offset = "0x795B28")]
	private sealed class <AnnulSphereCollidersOfCurrentBallForNetCoroutine>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x4000097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ThrowingObject throwingObject;

		[Token(Token = "0x4000098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public BasketballGameControl <>4__this;

		[Token(Token = "0x17000009")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000099")]
			[Address(RVA = "0xB0462C", Offset = "0xB0462C", VA = "0xB0462C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600009B")]
			[Address(RVA = "0xB04674", Offset = "0xB04674", VA = "0xB04674", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000096")]
		[Address(RVA = "0xB044E4", Offset = "0xB044E4", VA = "0xB044E4")]
		[DebuggerHidden]
		public <AnnulSphereCollidersOfCurrentBallForNetCoroutine>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x6000097")]
		[Address(RVA = "0xB04510", Offset = "0xB04510", VA = "0xB04510", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000098")]
		[Address(RVA = "0xB04514", Offset = "0xB04514", VA = "0xB04514", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600009A")]
		[Address(RVA = "0xB04634", Offset = "0xB04634", VA = "0xB04634", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000014")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x795B38", Offset = "0x795B38")]
	private sealed class <SetBigRingCoroutine>d__44 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400009A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400009B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BasketballGameControl <>4__this;

		[Token(Token = "0x1700000B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600009F")]
			[Address(RVA = "0xB04790", Offset = "0xB04790", VA = "0xB04790", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000A1")]
			[Address(RVA = "0xB047D8", Offset = "0xB047D8", VA = "0xB047D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600009C")]
		[Address(RVA = "0xB0467C", Offset = "0xB0467C", VA = "0xB0467C")]
		[DebuggerHidden]
		public <SetBigRingCoroutine>d__44(int <>1__state)
		{
		}

		[Token(Token = "0x600009D")]
		[Address(RVA = "0xB046A8", Offset = "0xB046A8", VA = "0xB046A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600009E")]
		[Address(RVA = "0xB046AC", Offset = "0xB046AC", VA = "0xB046AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000A0")]
		[Address(RVA = "0xB04798", Offset = "0xB04798", VA = "0xB04798", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000015")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x795B48", Offset = "0x795B48")]
	private sealed class <SetNormalRingCoroutine>d__45 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400009C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400009D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400009E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BasketballGameControl <>4__this;

		[Token(Token = "0x1700000D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000A5")]
			[Address(RVA = "0xB048C8", Offset = "0xB048C8", VA = "0xB048C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000A7")]
			[Address(RVA = "0xB04910", Offset = "0xB04910", VA = "0xB04910", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000A2")]
		[Address(RVA = "0xB047E0", Offset = "0xB047E0", VA = "0xB047E0")]
		[DebuggerHidden]
		public <SetNormalRingCoroutine>d__45(int <>1__state)
		{
		}

		[Token(Token = "0x60000A3")]
		[Address(RVA = "0xB0480C", Offset = "0xB0480C", VA = "0xB0480C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000A4")]
		[Address(RVA = "0xB04810", Offset = "0xB04810", VA = "0xB04810", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000A6")]
		[Address(RVA = "0xB048D0", Offset = "0xB048D0", VA = "0xB048D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ThrowControl throwControl;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject canvasArrowDirectional;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float timeScale;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int pointsCombo;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x79844C", Offset = "0x79844C")]
	private ScoreBestControl scoreBestControl;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private ScoreCurrentControl scoreCurrentControl;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7984A8", Offset = "0x7984A8")]
	[SerializeField]
	private float pointsGoalNormal;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private float pointsGoalClear;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private bool isPointsComboOn;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x798514", Offset = "0x798514")]
	[SerializeField]
	private bool isPointsDistanceToBasketOn;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private float pointsDistanceToBasketFactor;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float distanceToBasket;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x798570", Offset = "0x798570")]
	private int bigRingComboAimOfGoalsClear;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7985BC", Offset = "0x7985BC")]
	private int bigRingLimitOfGoalsAny;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int bigRingCurrentGoalsAnyCount;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int bigRingComboOfCurrentGoalsClear;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool isBigRing;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x798608", Offset = "0x798608")]
	private BasketballHoopControl basketballHoopControl;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Transform hoopMovementPivot;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private int hoopMovementComboAimOfGoals;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int hoopMovementComboOfCurrentGoals;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x798674", Offset = "0x798674")]
	[SerializeField]
	private PopupTextControl textPopupScore;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private PopupTextControl textPopupScoreClear;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7986D0", Offset = "0x7986D0")]
	[SerializeField]
	private UnityEvent OnUnityStart;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private UnityEvent OnInitialized;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Transform cameraMain;

	[Token(Token = "0x600007F")]
	[Address(RVA = "0xAEB758", Offset = "0xAEB758", VA = "0xAEB758")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0xAEB764", Offset = "0xAEB764", VA = "0xAEB764")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0xAEB8F0", Offset = "0xAEB8F0", VA = "0xAEB8F0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0xAEBA7C", Offset = "0xAEBA7C", VA = "0xAEBA7C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0xAEBB5C", Offset = "0xAEBB5C", VA = "0xAEBB5C")]
	private void InitGame()
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0xAEBCD0", Offset = "0xAEBCD0", VA = "0xAEBCD0")]
	public void StartGame()
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0xAEBBB4", Offset = "0xAEBBB4", VA = "0xAEBBB4")]
	private void InitNetAndDistanceToBasket()
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0xAEBD10", Offset = "0xAEBD10", VA = "0xAEBD10")]
	private void CalculateDistanceToBasket(ThrowingObject throwingObject)
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0xAEBDD4", Offset = "0xAEBDD4", VA = "0xAEBDD4")]
	private void RegisterSphereCollidersOfCurrentBallForNet(ThrowingObject throwingObject)
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0xAEBEA0", Offset = "0xAEBEA0", VA = "0xAEBEA0")]
	private void AnnulSphereCollidersOfCurrentBallForNet(ThrowingObject throwingObject, float delay)
	{
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0xAEBECC", Offset = "0xAEBECC", VA = "0xAEBECC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7A6564", Offset = "0x7A6564")]
	private IEnumerator AnnulSphereCollidersOfCurrentBallForNetCoroutine(ThrowingObject throwingObject, float delay)
	{
		return null;
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0xAEBF70", Offset = "0xAEBF70", VA = "0xAEBF70")]
	private void Goal(bool isClearBall)
	{
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0xAEC200", Offset = "0xAEC200", VA = "0xAEC200")]
	private void Fail()
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0xAEC1A0", Offset = "0xAEC1A0", VA = "0xAEC1A0")]
	private void AddScore(int value)
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0xAEC29C", Offset = "0xAEC29C", VA = "0xAEC29C")]
	private void SetHoopMovement(bool value)
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0xAEC174", Offset = "0xAEC174", VA = "0xAEC174")]
	private void CheckBigRingReset()
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0xAEC108", Offset = "0xAEC108", VA = "0xAEC108")]
	private void CheckBigRingBonus()
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0xAEC370", Offset = "0xAEC370", VA = "0xAEC370")]
	private void ResetBigRing()
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0xAEC3DC", Offset = "0xAEC3DC", VA = "0xAEC3DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7A65C4", Offset = "0x7A65C4")]
	private IEnumerator SetBigRingCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0xAEC454", Offset = "0xAEC454", VA = "0xAEC454")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7A6624", Offset = "0x7A6624")]
	private IEnumerator SetNormalRingCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0xAEC4CC", Offset = "0xAEC4CC", VA = "0xAEC4CC")]
	public BasketballGameControl()
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0xAEC50C", Offset = "0xAEC50C", VA = "0xAEC50C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A6684", Offset = "0x7A6684")]
	private void <InitNetAndDistanceToBasket>b__32_0(ThrowingObject throwingObject)
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0xAEC538", Offset = "0xAEC538", VA = "0xAEC538")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A6694", Offset = "0x7A6694")]
	private void <InitNetAndDistanceToBasket>b__32_1(ThrowingObject throwingObject)
	{
	}
}
[Token(Token = "0x2000016")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x795B58", Offset = "0x795B58")]
public class BasketballHoopControl : MonoBehaviour
{
	[Token(Token = "0x2000017")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x795B90", Offset = "0x795B90")]
	private sealed class <RotateAroundCoroutine>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BasketballHoopControl <>4__this;

		[Token(Token = "0x40000BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 rotationalPivot;

		[Token(Token = "0x1700000F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000B5")]
			[Address(RVA = "0xB04F28", Offset = "0xB04F28", VA = "0xB04F28", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000010")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000B7")]
			[Address(RVA = "0xB04F70", Offset = "0xB04F70", VA = "0xB04F70", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000B2")]
		[Address(RVA = "0xB04918", Offset = "0xB04918", VA = "0xB04918")]
		[DebuggerHidden]
		public <RotateAroundCoroutine>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x60000B3")]
		[Address(RVA = "0xB04944", Offset = "0xB04944", VA = "0xB04944", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000B4")]
		[Address(RVA = "0xB04948", Offset = "0xB04948", VA = "0xB04948", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000B6")]
		[Address(RVA = "0xB04F30", Offset = "0xB04F30", VA = "0xB04F30", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private BasketballRingControl basketballRingControl;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private BasketballNetControl basketballNetControl;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject hoop;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject hoopPivot;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x79876C", Offset = "0x79876C")]
	[SerializeField]
	private float movementDelay;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7987B8", Offset = "0x7987B8")]
	[SerializeField]
	private float rotationalAngleMin;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float rotationalAngleMax;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x798814", Offset = "0x798814")]
	[SerializeField]
	private float positionZStepMin;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float positionZStepMax;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float positionZInit;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float positionZCurrent;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool isFirstSetPositionZ;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float rotationalAngleRandom;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool isFirstRotation;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	private bool isRotationAroundCoroutine;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 vectorDiffHoopAndRotationalPivotInit;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 vectorDiffHoopAndRotationalPivotCurrent;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float angleHoopAndRotationalPivotAbs;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float angleHoopAndRotationalPivot;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x798870", Offset = "0x798870")]
	private bool isDelayBeforeZSettingOn;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[SerializeField]
	private float delayBeforeZSetting;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7988CC", Offset = "0x7988CC")]
	private MaterialControl backBoardFadingControl;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private MaterialControl poleFadingControl;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private MaterialControl netFadingControl;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private MaterialControl ringHolderFadingControl;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private MaterialControl ringFadingControl;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x798958", Offset = "0x798958")]
	private ExplosionControl explosionControlOnFadeOut;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private ExplosionControl explosionControlOnFadeIn;

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0xAEC3B0", Offset = "0xAEC3B0", VA = "0xAEC3B0")]
	public void RotateAround(Vector3 rotationalPivot)
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0xAEC580", Offset = "0xAEC580", VA = "0xAEC580")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7A6794", Offset = "0x7A6794")]
	private IEnumerator RotateAroundCoroutine(Vector3 rotationalPivot)
	{
		return null;
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0xAEC61C", Offset = "0xAEC61C", VA = "0xAEC61C")]
	private void SetPositionZ(bool isCancel)
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0xAEC69C", Offset = "0xAEC69C", VA = "0xAEC69C")]
	private void RotateAroundBase(Vector3 rotationPivot)
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0xAEBDA8", Offset = "0xAEBDA8", VA = "0xAEBDA8")]
	public Vector3 GetRingPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0xAEBE88", Offset = "0xAEBE88", VA = "0xAEBE88")]
	public void RegisterSphereColliderForNet(SphereCollider sphereCollider)
	{
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0xAEC960", Offset = "0xAEC960", VA = "0xAEC960")]
	public void AnnulSphereColliderForNet(SphereCollider sphereCollider)
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0xAECA8C", Offset = "0xAECA8C", VA = "0xAECA8C")]
	public void SetBigRing()
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0xAECB34", Offset = "0xAECB34", VA = "0xAECB34")]
	public void SetNormalRing()
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0xAECBE4", Offset = "0xAECBE4", VA = "0xAECBE4")]
	public BasketballHoopControl()
	{
	}
}
[Token(Token = "0x2000018")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x795BA0", Offset = "0x795BA0")]
public class BasketballNetControl : MonoBehaviour
{
	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Cloth cloth;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ClothSphereColliderPair[] clothSphereColliderPairs;

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0xAEC818", Offset = "0xAEC818", VA = "0xAEC818")]
	public void RegisterSphereCollider(SphereCollider collider)
	{
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0xAEC978", Offset = "0xAEC978", VA = "0xAEC978")]
	public void AnnulSphereCollider(SphereCollider collider)
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0xAED9D4", Offset = "0xAED9D4", VA = "0xAED9D4")]
	public BasketballNetControl()
	{
	}
}
[Token(Token = "0x2000019")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x795BD8", Offset = "0x795BD8")]
public class BasketballRingControl : MonoBehaviour
{
	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Vector3 localScaleOnBigSize;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 localPositionAtStart;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Vector3 localPositionOnBigSize;

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0xAEDA3C", Offset = "0xAEDA3C", VA = "0xAEDA3C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0xAECAA4", Offset = "0xAECAA4", VA = "0xAECAA4")]
	public void SetBigSize()
	{
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0xAECB4C", Offset = "0xAECB4C", VA = "0xAECB4C")]
	public void SetNormalSize()
	{
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0xAEDA78", Offset = "0xAEDA78", VA = "0xAEDA78")]
	public BasketballRingControl()
	{
	}
}
[Token(Token = "0x200001A")]
public static class BasketballTagControl
{
	[Token(Token = "0x40000C4")]
	public const string Pole = "Pole";

	[Token(Token = "0x40000C5")]
	public const string Backboard = "Backboard";

	[Token(Token = "0x40000C6")]
	public const string Ring = "Ring";

	[Token(Token = "0x40000C7")]
	public const string RingTrigger = "RingTrigger";

	[Token(Token = "0x40000C8")]
	public const string Net = "Net";

	[Token(Token = "0x40000C9")]
	public const string NetTrigger = "NetTrigger";

	[Token(Token = "0x40000CA")]
	public const string FailZone = "FailZone";

	[Token(Token = "0x40000CB")]
	public const string Floor = "Floor";
}
[Token(Token = "0x200001B")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x795C10", Offset = "0x795C10")]
public class ArrowDirectionalControl : MonoBehaviour
{
	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform cameraMain;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform pivot;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Image image;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform target;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 direction;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 directionLocalEulerAngles;

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0xAE5E34", Offset = "0xAE5E34", VA = "0xAE5E34")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0xAE5E54", Offset = "0xAE5E54", VA = "0xAE5E54")]
	private void Update()
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0xAE5E58", Offset = "0xAE5E58", VA = "0xAE5E58")]
	private void SetArrowDirection()
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0xAE5FC0", Offset = "0xAE5FC0", VA = "0xAE5FC0")]
	public ArrowDirectionalControl()
	{
	}
}
[Token(Token = "0x200001C")]
public static class DebugPrinter
{
	[Token(Token = "0x60000C3")]
	[Address(RVA = "0xB75634", Offset = "0xB75634", VA = "0xB75634")]
	public static void Print(object message)
	{
	}
}
[Token(Token = "0x200001D")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x795C48", Offset = "0x795C48")]
public class MaterialCounter : MonoBehaviour
{
	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string messageByDefault;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private KeyCode keyPrint;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private bool isPrintedOnDestroy;

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0x1196C28", Offset = "0x1196C28", VA = "0x1196C28")]
	private void Update()
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0x1196D34", Offset = "0x1196D34", VA = "0x1196D34")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0x1196DA4", Offset = "0x1196DA4", VA = "0x1196DA4")]
	public static void Print(string messagge)
	{
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0x1196CA0", Offset = "0x1196CA0", VA = "0x1196CA0")]
	public static void Print()
	{
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0x1196E38", Offset = "0x1196E38", VA = "0x1196E38")]
	public static int Count()
	{
		return default(int);
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0x1196EC8", Offset = "0x1196EC8", VA = "0x1196EC8")]
	public MaterialCounter()
	{
	}
}
[Token(Token = "0x200001E")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x795C80", Offset = "0x795C80")]
public class NumberDebugger
{
	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float valuePreviousForDebugFloatAbsChanging;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int counterForDebugFloatAbsChanging;

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0x12F5A50", Offset = "0x12F5A50", VA = "0x12F5A50")]
	public void DebugFloatAbsChanging(float delta, float valueCurrent)
	{
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0x12F5CD4", Offset = "0x12F5CD4", VA = "0x12F5CD4")]
	public NumberDebugger()
	{
	}
}
[Token(Token = "0x200001F")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x795CB8", Offset = "0x795CB8")]
public class OneTimeEventControl : MonoBehaviour
{
	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public KeyCode oneTimeFunctionKey;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent OnPressOneTimeFunctionKey;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isOneTimeFunctionCalled;

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0x12FC08C", Offset = "0x12FC08C", VA = "0x12FC08C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0x12FC0E4", Offset = "0x12FC0E4", VA = "0x12FC0E4")]
	public OneTimeEventControl()
	{
	}
}
[Token(Token = "0x2000020")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x795CF0", Offset = "0x795CF0")]
public class ExplosionControl : MonoBehaviour
{
	[Token(Token = "0x2000021")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x795D28", Offset = "0x795D28")]
	private sealed class <ShowCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ExplosionControl <>4__this;

		[Token(Token = "0x17000011")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000D6")]
			[Address(RVA = "0xB0A0D0", Offset = "0xB0A0D0", VA = "0xB0A0D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000012")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000D8")]
			[Address(RVA = "0xB0A118", Offset = "0xB0A118", VA = "0xB0A118", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000D3")]
		[Address(RVA = "0xB09EEC", Offset = "0xB09EEC", VA = "0xB09EEC")]
		[DebuggerHidden]
		public <ShowCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60000D4")]
		[Address(RVA = "0xB09F18", Offset = "0xB09F18", VA = "0xB09F18", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000D5")]
		[Address(RVA = "0xB09F1C", Offset = "0xB09F1C", VA = "0xB09F1C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000D7")]
		[Address(RVA = "0xB0A0D8", Offset = "0xB0A0D8", VA = "0xB0A0D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject explosion;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform pivot;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x798A64", Offset = "0x798A64")]
	[SerializeField]
	private float delayBeforeShowing;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float delayBeforeDisabling;

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0xE783F8", Offset = "0xE783F8", VA = "0xE783F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0xE78418", Offset = "0xE78418", VA = "0xE78418")]
	public void Show()
	{
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0xE7846C", Offset = "0xE7846C", VA = "0xE7846C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7A6844", Offset = "0x7A6844")]
	private IEnumerator ShowCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0xE784E4", Offset = "0xE784E4", VA = "0xE784E4")]
	public ExplosionControl()
	{
	}
}
[Token(Token = "0x2000022")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x795D38", Offset = "0x795D38")]
public class BreathControl : MonoBehaviour
{
	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 period;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 amplitude;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 distanceCurrent;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 positionOnStart;

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0xAF0714", Offset = "0xAF0714", VA = "0xAF0714")]
	protected void Start()
	{
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0xAF0750", Offset = "0xAF0750", VA = "0xAF0750")]
	protected void Update()
	{
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0xAF0834", Offset = "0xAF0834", VA = "0xAF0834")]
	public BreathControl()
	{
	}
}
[Token(Token = "0x2000023")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x795D70", Offset = "0x795D70")]
public class RotationByKeysControl : MonoBehaviour
{
	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x798AC0", Offset = "0x798AC0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x798AC0", Offset = "0x798AC0")]
	public Transform horizontal;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string horizontalAxis;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float speedHorizontal;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x798B20", Offset = "0x798B20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x798B20", Offset = "0x798B20")]
	public Transform vertical;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string verticalAxis;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float speedVertical;

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0xC8C8B0", Offset = "0xC8C8B0", VA = "0xC8C8B0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0xC8C94C", Offset = "0xC8C94C", VA = "0xC8C94C")]
	public RotationByKeysControl()
	{
	}
}
[Token(Token = "0x2000024")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x795DA8", Offset = "0x795DA8")]
public class RotationByMouseControl : MonoBehaviour
{
	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x798B80", Offset = "0x798B80")]
	public bool isRotationWithButton;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int button;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x798BB8", Offset = "0x798BB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x798BB8", Offset = "0x798BB8")]
	public Transform horizontal;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string horizontalAxis;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float speedHorizontal;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x798C18", Offset = "0x798C18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x798C18", Offset = "0x798C18")]
	public Transform vertical;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string verticalAxis;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float speedVertical;

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0xC8C9DC", Offset = "0xC8C9DC", VA = "0xC8C9DC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0xC8CA20", Offset = "0xC8CA20", VA = "0xC8CA20")]
	private void Rotate()
	{
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0xC8CABC", Offset = "0xC8CABC", VA = "0xC8CABC")]
	public RotationByMouseControl()
	{
	}
}
[Token(Token = "0x2000025")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x795DE0", Offset = "0x795DE0")]
public class TranslationByKeysControl : MonoBehaviour
{
	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x798C78", Offset = "0x798C78")]
	public Transform xAxis;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string xAxisName;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float xAxisSpeed;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x798CB0", Offset = "0x798CB0")]
	public Transform yAxis;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float yAxisSpeed;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x798CE8", Offset = "0x798CE8")]
	public Transform zAxis;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string zAxisName;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float zAxisSpeed;

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0xE870F8", Offset = "0xE870F8", VA = "0xE870F8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0xE87124", Offset = "0xE87124", VA = "0xE87124")]
	private void TranslateXUpdate()
	{
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0xE87248", Offset = "0xE87248", VA = "0xE87248")]
	private void TranslateZUpdate()
	{
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0xE871E8", Offset = "0xE871E8", VA = "0xE871E8")]
	private void TranslateYUpdate()
	{
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0xE87310", Offset = "0xE87310", VA = "0xE87310")]
	private void TranslateYAxis(float speed)
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0xE873C4", Offset = "0xE873C4", VA = "0xE873C4")]
	public TranslationByKeysControl()
	{
	}
}
[Token(Token = "0x2000026")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x795E18", Offset = "0x795E18")]
public class PlayerPrefsControl : MonoBehaviour
{
	[Token(Token = "0x60000E7")]
	[Address(RVA = "0xBEE998", Offset = "0xBEE998", VA = "0xBEE998")]
	public void DeleteAll()
	{
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0xBEE9A0", Offset = "0xBEE9A0", VA = "0xBEE9A0")]
	public PlayerPrefsControl()
	{
	}
}
[Token(Token = "0x2000027")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x795E50", Offset = "0x795E50")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x795E50", Offset = "0x795E50")]
public class RandomObjectPooler : MonoBehaviour
{
	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x798D20", Offset = "0x798D20")]
	public int initPooledAmount;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform poolParent;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x798D38", Offset = "0x798D38")]
	private bool isDebugLogging;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x798D70", Offset = "0x798D70")]
	public Transform positionAtInit;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform rotationAtInit;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x798D80", Offset = "0x798D80")]
	public GameObject prefab;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x798DB8", Offset = "0x798DB8")]
	public bool areRandomizedObjects;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject[] prefabs;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x798DF0", Offset = "0x798DF0")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x798DF0", Offset = "0x798DF0")]
	public UnityEvent OnInitialized;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public List<GameObject> pooledObjects;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameObject currentInstantiated;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public List<MonoBehaviour> controlScripts;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private MonoBehaviour controlScriptTempForRegistration;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Type controlScriptType;

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0xC87154", Offset = "0xC87154", VA = "0xC87154")]
	private void Start()
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0xC87158", Offset = "0xC87158", VA = "0xC87158")]
	private void InitAndPopulatePool()
	{
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0xC87508", Offset = "0xC87508", VA = "0xC87508")]
	public void InitControlScripts(Type type)
	{
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0xC87258", Offset = "0xC87258", VA = "0xC87258")]
	private GameObject InstantiateObject(int index)
	{
		return null;
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0xC8759C", Offset = "0xC8759C", VA = "0xC8759C")]
	public GameObject GetPooledObject()
	{
		return null;
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0xC87738", Offset = "0xC87738", VA = "0xC87738")]
	public MonoBehaviour RegisterControlScript(GameObject gameObject)
	{
		return null;
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0xC879B8", Offset = "0xC879B8", VA = "0xC879B8")]
	public RandomObjectPooler()
	{
	}
}
[Token(Token = "0x2000028")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x795EB0", Offset = "0x795EB0")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x795EB0", Offset = "0x795EB0")]
public class LoadScreenControl : MonoBehaviour
{
	[Token(Token = "0x2000029")]
	public delegate void LoadEvent();

	[Token(Token = "0x200002A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x795F10", Offset = "0x795F10")]
	private sealed class <doLoadLevel>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400010F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LoadScreenControl <>4__this;

		[Token(Token = "0x4000112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string customLoadScene;

		[Token(Token = "0x4000113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string name;

		[Token(Token = "0x4000114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool manualActivation;

		[Token(Token = "0x4000115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private AsyncOperation <async>5__2;

		[Token(Token = "0x17000014")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000105")]
			[Address(RVA = "0xB0F330", Offset = "0xB0F330", VA = "0xB0F330", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000015")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000107")]
			[Address(RVA = "0xB0F378", Offset = "0xB0F378", VA = "0xB0F378", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000102")]
		[Address(RVA = "0xB0F040", Offset = "0xB0F040", VA = "0xB0F040")]
		[DebuggerHidden]
		public <doLoadLevel>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000103")]
		[Address(RVA = "0xB0F06C", Offset = "0xB0F06C", VA = "0xB0F06C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000104")]
		[Address(RVA = "0xB0F070", Offset = "0xB0F070", VA = "0xB0F070", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000106")]
		[Address(RVA = "0xB0F338", Offset = "0xB0F338", VA = "0xB0F338", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200002B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x795F20", Offset = "0x795F20")]
	private sealed class <doLoadLevelAddictive>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LoadScreenControl <>4__this;

		[Token(Token = "0x4000119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string name;

		[Token(Token = "0x400011A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AsyncOperation <async>5__2;

		[Token(Token = "0x17000016")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600010B")]
			[Address(RVA = "0xB0F54C", Offset = "0xB0F54C", VA = "0xB0F54C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000017")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600010D")]
			[Address(RVA = "0xB0F594", Offset = "0xB0F594", VA = "0xB0F594", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000108")]
		[Address(RVA = "0xB0F380", Offset = "0xB0F380", VA = "0xB0F380")]
		[DebuggerHidden]
		public <doLoadLevelAddictive>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6000109")]
		[Address(RVA = "0xB0F3AC", Offset = "0xB0F3AC", VA = "0xB0F3AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600010A")]
		[Address(RVA = "0xB0F3B0", Offset = "0xB0F3B0", VA = "0xB0F3B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600010C")]
		[Address(RVA = "0xB0F554", Offset = "0xB0F554", VA = "0xB0F554", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LoadScreenControl instance;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int Progress;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool _activeScene;

	[Token(Token = "0x17000013")]
	public static LoadScreenControl Instance
	{
		[Token(Token = "0x60000F0")]
		[Address(RVA = "0x1187974", Offset = "0x1187974", VA = "0x1187974")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000001")]
	public event LoadEvent OnStartWaitingEventToActivateScene
	{
		[Token(Token = "0x60000F4")]
		[Address(RVA = "0x1187BF4", Offset = "0x1187BF4", VA = "0x1187BF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A68F4", Offset = "0x7A68F4")]
		add
		{
		}
		[Token(Token = "0x60000F5")]
		[Address(RVA = "0x1187C94", Offset = "0x1187C94", VA = "0x1187C94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A6904", Offset = "0x7A6904")]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event LoadEvent OnStartLoadEventAddictive
	{
		[Token(Token = "0x60000F8")]
		[Address(RVA = "0x1187E08", Offset = "0x1187E08", VA = "0x1187E08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A6974", Offset = "0x7A6974")]
		add
		{
		}
		[Token(Token = "0x60000F9")]
		[Address(RVA = "0x1187EA8", Offset = "0x1187EA8", VA = "0x1187EA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A6984", Offset = "0x7A6984")]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event LoadEvent OnEndLoadEventAddictive
	{
		[Token(Token = "0x60000FA")]
		[Address(RVA = "0x1187F48", Offset = "0x1187F48", VA = "0x1187F48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A6994", Offset = "0x7A6994")]
		add
		{
		}
		[Token(Token = "0x60000FB")]
		[Address(RVA = "0x1187FE8", Offset = "0x1187FE8", VA = "0x1187FE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A69A4", Offset = "0x7A69A4")]
		remove
		{
		}
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0x1187AC8", Offset = "0x1187AC8", VA = "0x1187AC8")]
	public void LoadScene(string levelName, bool manualSceneActivation = false, string customLoadScene = "LoadScreen")
	{
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0x1187BDC", Offset = "0x1187BDC", VA = "0x1187BDC")]
	public void LoadLevel(string levelName, string customLoadScene)
	{
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0x1187BE8", Offset = "0x1187BE8", VA = "0x1187BE8")]
	public void ActivateScene()
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0x1187B20", Offset = "0x1187B20", VA = "0x1187B20")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7A6914", Offset = "0x7A6914")]
	private IEnumerator doLoadLevel(string name, string customLoadScene, bool manualActivation)
	{
		return null;
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0x1187D34", Offset = "0x1187D34", VA = "0x1187D34")]
	public void LoadLevelAddictive(string name)
	{
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0x1187D74", Offset = "0x1187D74", VA = "0x1187D74")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7A69B4", Offset = "0x7A69B4")]
	private IEnumerator doLoadLevelAddictive(string name)
	{
		return null;
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0x1188088", Offset = "0x1188088", VA = "0x1188088")]
	public LoadScreenControl()
	{
	}
}
[Token(Token = "0x200002C")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x795F30", Offset = "0x795F30")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x795F30", Offset = "0x795F30")]
public class LoadScreenProgressControl : MonoBehaviour
{
	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private UnityEngine.UI.Slider slider;

	[Token(Token = "0x600010E")]
	[Address(RVA = "0x1188090", Offset = "0x1188090", VA = "0x1188090")]
	private void Start()
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0x11880EC", Offset = "0x11880EC", VA = "0x11880EC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0x1188130", Offset = "0x1188130", VA = "0x1188130")]
	public LoadScreenProgressControl()
	{
	}
}
[Token(Token = "0x200002D")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x795F90", Offset = "0x795F90")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x795F90", Offset = "0x795F90")]
public class LoadingAnimationControl : MonoBehaviour
{
	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RectTransform fillAreaTransform;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image fillArea;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x798E8C", Offset = "0x798E8C")]
	public float rotationSpeed;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float openSpeed;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float closeSpeed;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x798EC4", Offset = "0x798EC4")]
	public float sizeOnTop;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float sizeOnBottom;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float fillAreaCurrentSize;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool isFillAreaOnTop;

	[Token(Token = "0x6000111")]
	[Address(RVA = "0x1188138", Offset = "0x1188138", VA = "0x1188138")]
	private void Update()
	{
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0x1188190", Offset = "0x1188190", VA = "0x1188190")]
	private void ChangeFillAreaSize()
	{
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0x1188234", Offset = "0x1188234", VA = "0x1188234")]
	public LoadingAnimationControl()
	{
	}
}
[Token(Token = "0x200002E")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x795FF0", Offset = "0x795FF0")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x795FF0", Offset = "0x795FF0")]
public class MenuSceneControl : MonoBehaviour
{
	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string nameOfSceneWithLoadScreen;

	[Token(Token = "0x6000114")]
	[Address(RVA = "0x1F539EC", Offset = "0x1F539EC", VA = "0x1F539EC")]
	public void LoadSceneWithScreenOrientationLandscapeLeft(string sceneName)
	{
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0x1F53A60", Offset = "0x1F53A60", VA = "0x1F53A60")]
	public void LoadSceneWithScreenOrientationPortrait(string sceneName)
	{
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0x1F53A94", Offset = "0x1F53A94", VA = "0x1F53A94")]
	public void LoadSceneWithScreenOrientationAuto(string sceneName)
	{
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0x1F53A20", Offset = "0x1F53A20", VA = "0x1F53A20")]
	private void LoadScene(string sceneName)
	{
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0x1F53AC8", Offset = "0x1F53AC8", VA = "0x1F53AC8")]
	public void ReloadCurrentScene()
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0x1F53B78", Offset = "0x1F53B78", VA = "0x1F53B78")]
	public void QuitGame()
	{
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0x1F53B80", Offset = "0x1F53B80", VA = "0x1F53B80")]
	public void OpenLink(string link = "https://makaka.org/support")
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0x1F53B8C", Offset = "0x1F53B8C", VA = "0x1F53B8C")]
	public MenuSceneControl()
	{
	}
}
[Token(Token = "0x200002F")]
public class DontDestroyOnLoadCustom : MonoBehaviour
{
	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool isLoaded;

	[Token(Token = "0x600011C")]
	[Address(RVA = "0xB7C614", Offset = "0xB7C614", VA = "0xB7C614")]
	private void Awake()
	{
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0xB7C72C", Offset = "0xB7C72C", VA = "0xB7C72C")]
	public DontDestroyOnLoadCustom()
	{
	}
}
[Token(Token = "0x2000030")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x796050", Offset = "0x796050")]
public class PopupTextControl : MonoBehaviour
{
	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMeshProUGUI text;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform pivot;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isFirstEnable;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Color color;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x798F2C", Offset = "0x798F2C")]
	private float speed;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x798F78", Offset = "0x798F78")]
	private float rotationSpeed;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private Vector3 rotationStart;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Vector3 rotationFinish;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x798FE4", Offset = "0x798FE4")]
	[SerializeField]
	private float fadingDelay;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private float fadingSpeed;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float timer;

	[Token(Token = "0x600011E")]
	[Address(RVA = "0xC85478", Offset = "0xC85478", VA = "0xC85478")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0xC85548", Offset = "0xC85548", VA = "0xC85548")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0xC85598", Offset = "0xC85598", VA = "0xC85598")]
	private void Update()
	{
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0xC85758", Offset = "0xC85758", VA = "0xC85758")]
	public void ResetText()
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0xC857C4", Offset = "0xC857C4", VA = "0xC857C4")]
	public void SetText(string text)
	{
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0xC857E8", Offset = "0xC857E8", VA = "0xC857E8")]
	public PopupTextControl()
	{
	}
}
[Token(Token = "0x2000031")]
public class ScoreBaseControl
{
	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string thousandLiteral;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string millionLiteral;

	[Token(Token = "0x6000124")]
	[Address(RVA = "0xC8D790", Offset = "0xC8D790", VA = "0xC8D790")]
	public static float Truncate(float value, int digits)
	{
		return default(float);
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0xC8D824", Offset = "0xC8D824", VA = "0xC8D824")]
	public static string Round(float value, int digits)
	{
		return null;
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0xC8D8EC", Offset = "0xC8D8EC", VA = "0xC8D8EC")]
	public ScoreBaseControl()
	{
	}
}
[Token(Token = "0x2000032")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x796088", Offset = "0x796088")]
public class ScoreBestControl : MonoBehaviour
{
	[Token(Token = "0x2000033")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7960C0", Offset = "0x7960C0")]
	private sealed class <PlayBestScoreSoundCoroutine>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400013E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400013F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x4000141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ScoreBestControl <>4__this;

		[Token(Token = "0x17000018")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000134")]
			[Address(RVA = "0xCBFE68", Offset = "0xCBFE68", VA = "0xCBFE68", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000019")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000136")]
			[Address(RVA = "0xCBFEB0", Offset = "0xCBFEB0", VA = "0xCBFEB0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000131")]
		[Address(RVA = "0xCBFD38", Offset = "0xCBFD38", VA = "0xCBFD38")]
		[DebuggerHidden]
		public <PlayBestScoreSoundCoroutine>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6000132")]
		[Address(RVA = "0xCBFD64", Offset = "0xCBFD64", VA = "0xCBFD64", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000133")]
		[Address(RVA = "0xCBFD68", Offset = "0xCBFD68", VA = "0xCBFD68", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000135")]
		[Address(RVA = "0xCBFE70", Offset = "0xCBFE70", VA = "0xCBFE70", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000034")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7960D0", Offset = "0x7960D0")]
	private sealed class <PlayBestScoreAnimationCoroutine>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x4000145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ScoreBestControl <>4__this;

		[Token(Token = "0x1700001A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600013A")]
			[Address(RVA = "0xCBFCE8", Offset = "0xCBFCE8", VA = "0xCBFCE8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600013C")]
			[Address(RVA = "0xCBFD30", Offset = "0xCBFD30", VA = "0xCBFD30", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000137")]
		[Address(RVA = "0xCBFBF0", Offset = "0xCBFBF0", VA = "0xCBFBF0")]
		[DebuggerHidden]
		public <PlayBestScoreAnimationCoroutine>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6000138")]
		[Address(RVA = "0xCBFC1C", Offset = "0xCBFC1C", VA = "0xCBFC1C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000139")]
		[Address(RVA = "0xCBFC20", Offset = "0xCBFC20", VA = "0xCBFC20", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600013B")]
		[Address(RVA = "0xCBFCF0", Offset = "0xCBFCF0", VA = "0xCBFCF0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMeshProUGUI text;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int value;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string playerPrefsKey;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private int valueAtFirstStart;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x799060", Offset = "0x799060")]
	[SerializeField]
	private Animator animator;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7990AC", Offset = "0x7990AC")]
	[SerializeField]
	private float animationDelay;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string animationTrigger;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7990EC", Offset = "0x7990EC")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7990EC", Offset = "0x7990EC")]
	private float soundDelay;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private AudioSource audioSource;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private AudioClip[] sounds;

	[Token(Token = "0x6000128")]
	[Address(RVA = "0xC8D980", Offset = "0xC8D980", VA = "0xC8D980")]
	private void Start()
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0xC8D9C8", Offset = "0xC8D9C8", VA = "0xC8D9C8")]
	private void SetValue(int value)
	{
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0xC8DA0C", Offset = "0xC8DA0C", VA = "0xC8DA0C")]
	public int GetValue()
	{
		return default(int);
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0xC8DA14", Offset = "0xC8DA14", VA = "0xC8DA14")]
	private void PlayBestScoreSound()
	{
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0xC8DACC", Offset = "0xC8DACC", VA = "0xC8DACC")]
	private void PlayBestScoreAnimation()
	{
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0xC8DA44", Offset = "0xC8DA44", VA = "0xC8DA44")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7A6AB4", Offset = "0x7A6AB4")]
	private IEnumerator PlayBestScoreSoundCoroutine(float delay)
	{
		return null;
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0xC8DAFC", Offset = "0xC8DAFC", VA = "0xC8DAFC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7A6B14", Offset = "0x7A6B14")]
	private IEnumerator PlayBestScoreAnimationCoroutine(float delay)
	{
		return null;
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0xC8DB84", Offset = "0xC8DB84", VA = "0xC8DB84")]
	public void SaveAndShow(int value)
	{
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0xC8DBF0", Offset = "0xC8DBF0", VA = "0xC8DBF0")]
	public ScoreBestControl()
	{
	}
}
[Token(Token = "0x2000035")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x7960E0", Offset = "0x7960E0")]
public class ScoreCurrentControl : MonoBehaviour
{
	[Token(Token = "0x2000036")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x796118", Offset = "0x796118")]
	private sealed class <PlayResetAnimationCoroutine>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400014C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400014D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400014E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x400014F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ScoreCurrentControl <>4__this;

		[Token(Token = "0x1700001C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000148")]
			[Address(RVA = "0xCBFFB0", Offset = "0xCBFFB0", VA = "0xCBFFB0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600014A")]
			[Address(RVA = "0xCBFFF8", Offset = "0xCBFFF8", VA = "0xCBFFF8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000145")]
		[Address(RVA = "0xCBFEB8", Offset = "0xCBFEB8", VA = "0xCBFEB8")]
		[DebuggerHidden]
		public <PlayResetAnimationCoroutine>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000146")]
		[Address(RVA = "0xCBFEE4", Offset = "0xCBFEE4", VA = "0xCBFEE4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000147")]
		[Address(RVA = "0xCBFEE8", Offset = "0xCBFEE8", VA = "0xCBFEE8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000149")]
		[Address(RVA = "0xCBFFB8", Offset = "0xCBFFB8", VA = "0xCBFFB8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMeshProUGUI text;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int value;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private int valueAtStart;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x799190", Offset = "0x799190")]
	[SerializeField]
	private Animator animator;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7991DC", Offset = "0x7991DC")]
	[SerializeField]
	private float resetAnimationDelay;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string resetAnimationTrigger;

	[Token(Token = "0x600013D")]
	[Address(RVA = "0xC8DC84", Offset = "0xC8DC84", VA = "0xC8DC84")]
	private void Start()
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0xC8DC8C", Offset = "0xC8DC8C", VA = "0xC8DC8C")]
	private void SetValue(int score)
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0xC8DCD0", Offset = "0xC8DCD0", VA = "0xC8DCD0")]
	public void Add(int value)
	{
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0xC8DD1C", Offset = "0xC8DD1C", VA = "0xC8DD1C")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0xC8DDB0", Offset = "0xC8DDB0", VA = "0xC8DDB0")]
	public int GetValue()
	{
		return default(int);
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0xC8DD80", Offset = "0xC8DD80", VA = "0xC8DD80")]
	private void PlayResetAnimation()
	{
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0xC8DDB8", Offset = "0xC8DDB8", VA = "0xC8DDB8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7A6C14", Offset = "0x7A6C14")]
	private IEnumerator PlayResetAnimationCoroutine(float delay)
	{
		return null;
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0xC8DE40", Offset = "0xC8DE40", VA = "0xC8DE40")]
	public ScoreCurrentControl()
	{
	}
}
[Token(Token = "0x2000037")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x796128", Offset = "0x796128")]
public class MaterialControl : MonoBehaviour
{
	[Token(Token = "0x2000038")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x796160", Offset = "0x796160")]
	private sealed class <FadeCoroutine>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400015D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400015E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400015F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MaterialControl <>4__this;

		[Token(Token = "0x4000160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool isFadeIn;

		[Token(Token = "0x4000161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool isResetColorToStandardInTheBeginning;

		[Token(Token = "0x4000162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool isResetFadingInTheEnd;

		[Token(Token = "0x1700001E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000158")]
			[Address(RVA = "0xCBAD94", Offset = "0xCBAD94", VA = "0xCBAD94", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600015A")]
			[Address(RVA = "0xCBADDC", Offset = "0xCBADDC", VA = "0xCBADDC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000155")]
		[Address(RVA = "0xCBAB18", Offset = "0xCBAB18", VA = "0xCBAB18")]
		[DebuggerHidden]
		public <FadeCoroutine>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6000156")]
		[Address(RVA = "0xCBAB44", Offset = "0xCBAB44", VA = "0xCBAB44", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000157")]
		[Address(RVA = "0xCBAB48", Offset = "0xCBAB48", VA = "0xCBAB48", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000159")]
		[Address(RVA = "0xCBAD9C", Offset = "0xCBAD9C", VA = "0xCBAD9C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Renderer renderer3D;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material materialStandardShared;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material materialStandardClone;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x79922C", Offset = "0x79922C")]
	private bool isParameterChangingOnAtStart;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private string parameter;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x799288", Offset = "0x799288")]
	private float parameterOnStart;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private float parameterMax;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float parameterMin;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float parameterCurrent;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7992F4", Offset = "0x7992F4")]
	public float delayOut;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float delayIn;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x79932C", Offset = "0x79932C")]
	private AnimationCurve speedOut;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private AnimationCurve speedIn;

	[Token(Token = "0x600014B")]
	[Address(RVA = "0x119679C", Offset = "0x119679C", VA = "0x119679C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0x11967D8", Offset = "0x11967D8", VA = "0x11967D8")]
	private void Start()
	{
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0x1196964", Offset = "0x1196964", VA = "0x1196964")]
	public void Fade(bool isFadeIn, bool isResetFadingInTheEnd, bool isResetColorToStandardInTheBeginning = false)
	{
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0x119699C", Offset = "0x119699C", VA = "0x119699C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7A6CC4", Offset = "0x7A6CC4")]
	public IEnumerator FadeCoroutine(bool isFadeIn, bool isResetFadingInTheEnd, bool isResetColorToStandardInTheBeginning = false)
	{
		return null;
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0x1196874", Offset = "0x1196874", VA = "0x1196874")]
	private void Step()
	{
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0x1196A64", Offset = "0x1196A64", VA = "0x1196A64")]
	private void ResetFade()
	{
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0x1196A48", Offset = "0x1196A48", VA = "0x1196A48")]
	public void SetMaterial(Material material)
	{
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0x1196A7C", Offset = "0x1196A7C", VA = "0x1196A7C")]
	private void SetMaterialStandard()
	{
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0x1196AA0", Offset = "0x1196AA0", VA = "0x1196AA0")]
	public void SetRendererEnabled(bool enabled)
	{
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0x1196B5C", Offset = "0x1196B5C", VA = "0x1196B5C")]
	public MaterialControl()
	{
	}
}
[Token(Token = "0x2000039")]
public class TagSelectorAttribute : PropertyAttribute
{
	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string Untagged;

	[Token(Token = "0x600015B")]
	[Address(RVA = "0xDCCF34", Offset = "0xDCCF34", VA = "0xDCCF34")]
	public TagSelectorAttribute()
	{
	}
}
[Token(Token = "0x200003A")]
public class PublisherReadme : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x200003B")]
	public class Section
	{
		[Token(Token = "0x4000167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string heading;

		[Token(Token = "0x4000168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string text;

		[Token(Token = "0x4000169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string linkText;

		[Token(Token = "0x400016A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string url;

		[Token(Token = "0x600015E")]
		[Address(RVA = "0xCBFA0C", Offset = "0xCBFA0C", VA = "0xCBFA0C")]
		public Section()
		{
		}
	}

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D icon;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string title;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Section[] sections;

	[Token(Token = "0x600015D")]
	[Address(RVA = "0xC86760", Offset = "0xC86760", VA = "0xC86760")]
	public PublisherReadme()
	{
	}
}
[Token(Token = "0x200003C")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x796170", Offset = "0x796170")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x796170", Offset = "0x796170")]
public class ThrowControl : MonoBehaviour
{
	[Token(Token = "0x200003D")]
	public enum Mode
	{
		[Token(Token = "0x400019B")]
		Flick,
		[Token(Token = "0x400019C")]
		ClickOrTap
	}

	[Serializable]
	[Token(Token = "0x200003E")]
	public class UnityEventWithThrowingObject : UnityEvent<ThrowingObject>
	{
		[Token(Token = "0x6000174")]
		[Address(RVA = "0xCC4DE4", Offset = "0xCC4DE4", VA = "0xCC4DE4")]
		public UnityEventWithThrowingObject()
		{
		}
	}

	[Token(Token = "0x200003F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7961D0", Offset = "0x7961D0")]
	private sealed class <InitThrowingObjectsCoroutine>d__53 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400019D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400019E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400019F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ThrowControl <>4__this;

		[Token(Token = "0x40001A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x17000021")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000178")]
			[Address(RVA = "0xCC43C0", Offset = "0xCC43C0", VA = "0xCC43C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000022")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600017A")]
			[Address(RVA = "0xCC4408", Offset = "0xCC4408", VA = "0xCC4408", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000175")]
		[Address(RVA = "0xCC3F68", Offset = "0xCC3F68", VA = "0xCC3F68")]
		[DebuggerHidden]
		public <InitThrowingObjectsCoroutine>d__53(int <>1__state)
		{
		}

		[Token(Token = "0x6000176")]
		[Address(RVA = "0xCC3F94", Offset = "0xCC3F94", VA = "0xCC3F94", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000177")]
		[Address(RVA = "0xCC3F98", Offset = "0xCC3F98", VA = "0xCC3F98", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000179")]
		[Address(RVA = "0xCC43C8", Offset = "0xCC43C8", VA = "0xCC43C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000040")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7961E0", Offset = "0x7961E0")]
	private sealed class <OnTouchForFlickCoroutine>d__57 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ThrowControl <>4__this;

		[Token(Token = "0x17000023")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600017E")]
			[Address(RVA = "0xCC45B0", Offset = "0xCC45B0", VA = "0xCC45B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000024")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000180")]
			[Address(RVA = "0xCC45F8", Offset = "0xCC45F8", VA = "0xCC45F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600017B")]
		[Address(RVA = "0xCC4410", Offset = "0xCC4410", VA = "0xCC4410")]
		[DebuggerHidden]
		public <OnTouchForFlickCoroutine>d__57(int <>1__state)
		{
		}

		[Token(Token = "0x600017C")]
		[Address(RVA = "0xCC443C", Offset = "0xCC443C", VA = "0xCC443C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600017D")]
		[Address(RVA = "0xCC4440", Offset = "0xCC4440", VA = "0xCC4440", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600017F")]
		[Address(RVA = "0xCC45B8", Offset = "0xCC45B8", VA = "0xCC45B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000041")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7961F0", Offset = "0x7961F0")]
	private sealed class <ThrowCoroutine>d__58 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ThrowingObject throwingObject;

		[Token(Token = "0x40001A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ThrowControl <>4__this;

		[Token(Token = "0x40001A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector2 inputPositionFirst;

		[Token(Token = "0x40001A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector2 inputPositionLast;

		[Token(Token = "0x17000025")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000184")]
			[Address(RVA = "0xCC4D94", Offset = "0xCC4D94", VA = "0xCC4D94", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000026")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000186")]
			[Address(RVA = "0xCC4DDC", Offset = "0xCC4DDC", VA = "0xCC4DDC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000181")]
		[Address(RVA = "0xCC498C", Offset = "0xCC498C", VA = "0xCC498C")]
		[DebuggerHidden]
		public <ThrowCoroutine>d__58(int <>1__state)
		{
		}

		[Token(Token = "0x6000182")]
		[Address(RVA = "0xCC49B8", Offset = "0xCC49B8", VA = "0xCC49B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000183")]
		[Address(RVA = "0xCC49BC", Offset = "0xCC49BC", VA = "0xCC49BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000185")]
		[Address(RVA = "0xCC4D9C", Offset = "0xCC4D9C", VA = "0xCC4D9C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000042")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x796200", Offset = "0x796200")]
	private sealed class <FadeOutCoroutine>d__59 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x40001AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ThrowControl <>4__this;

		[Token(Token = "0x40001AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ThrowingObject throwingObject;

		[Token(Token = "0x17000027")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600018A")]
			[Address(RVA = "0xCC3B38", Offset = "0xCC3B38", VA = "0xCC3B38", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000028")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600018C")]
			[Address(RVA = "0xCC3B80", Offset = "0xCC3B80", VA = "0xCC3B80", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000187")]
		[Address(RVA = "0xCC3A2C", Offset = "0xCC3A2C", VA = "0xCC3A2C")]
		[DebuggerHidden]
		public <FadeOutCoroutine>d__59(int <>1__state)
		{
		}

		[Token(Token = "0x6000188")]
		[Address(RVA = "0xCC3A58", Offset = "0xCC3A58", VA = "0xCC3A58", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000189")]
		[Address(RVA = "0xCC3A5C", Offset = "0xCC3A5C", VA = "0xCC3A5C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600018B")]
		[Address(RVA = "0xCC3B40", Offset = "0xCC3B40", VA = "0xCC3B40", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000043")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x796210", Offset = "0x796210")]
	private sealed class <ResetCoroutine>d__60 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x40001B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ThrowControl <>4__this;

		[Token(Token = "0x40001B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ThrowingObject throwingObject;

		[Token(Token = "0x17000029")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000190")]
			[Address(RVA = "0xCC493C", Offset = "0xCC493C", VA = "0xCC493C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000192")]
			[Address(RVA = "0xCC4984", Offset = "0xCC4984", VA = "0xCC4984", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600018D")]
		[Address(RVA = "0xCC4600", Offset = "0xCC4600", VA = "0xCC4600")]
		[DebuggerHidden]
		public <ResetCoroutine>d__60(int <>1__state)
		{
		}

		[Token(Token = "0x600018E")]
		[Address(RVA = "0xCC462C", Offset = "0xCC462C", VA = "0xCC462C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600018F")]
		[Address(RVA = "0xCC4630", Offset = "0xCC4630", VA = "0xCC4630", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000191")]
		[Address(RVA = "0xCC4944", Offset = "0xCC4944", VA = "0xCC4944", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000044")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x796220", Offset = "0x796220")]
	private sealed class <GetNextThrowCoroutine>d__62 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ThrowControl <>4__this;

		[Token(Token = "0x40001B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float delay;

		[Token(Token = "0x1700002B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000196")]
			[Address(RVA = "0xCC3F18", Offset = "0xCC3F18", VA = "0xCC3F18", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000198")]
			[Address(RVA = "0xCC3F60", Offset = "0xCC3F60", VA = "0xCC3F60", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000193")]
		[Address(RVA = "0xCC3B88", Offset = "0xCC3B88", VA = "0xCC3B88")]
		[DebuggerHidden]
		public <GetNextThrowCoroutine>d__62(int <>1__state)
		{
		}

		[Token(Token = "0x6000194")]
		[Address(RVA = "0xCC3BB4", Offset = "0xCC3BB4", VA = "0xCC3BB4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000195")]
		[Address(RVA = "0xCC3BB8", Offset = "0xCC3BB8", VA = "0xCC3BB8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000197")]
		[Address(RVA = "0xCC3F20", Offset = "0xCC3F20", VA = "0xCC3F20", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000045")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x796230", Offset = "0x796230")]
	private sealed class <ChangeLayerCoroutine>d__66 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x40001BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ThrowControl <>4__this;

		[Token(Token = "0x40001BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject to;

		[Token(Token = "0x40001BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int layerIndex;

		[Token(Token = "0x1700002D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600019C")]
			[Address(RVA = "0xCC39DC", Offset = "0xCC39DC", VA = "0xCC39DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600019E")]
			[Address(RVA = "0xCC3A24", Offset = "0xCC3A24", VA = "0xCC3A24", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000199")]
		[Address(RVA = "0xCC38E8", Offset = "0xCC38E8", VA = "0xCC38E8")]
		[DebuggerHidden]
		public <ChangeLayerCoroutine>d__66(int <>1__state)
		{
		}

		[Token(Token = "0x600019A")]
		[Address(RVA = "0xCC3914", Offset = "0xCC3914", VA = "0xCC3914", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600019B")]
		[Address(RVA = "0xCC3918", Offset = "0xCC3918", VA = "0xCC3918", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600019D")]
		[Address(RVA = "0xCC39E4", Offset = "0xCC39E4", VA = "0xCC39E4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RandomObjectPooler randomObjectPooler;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent OnInitialized;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x799398", Offset = "0x799398")]
	private List<ThrowingObject> <throwingObjectsRegistered>k__BackingField;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ThrowingObject throwingObjectTempForRegistration;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7993A8", Offset = "0x7993A8")]
	public CharacterController characterControllerFPS;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float characterControllerFPSSpeedCurrent;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7993E0", Offset = "0x7993E0")]
	public Camera cameraMain;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x799418", Offset = "0x799418")]
	public Mode modeAtAwake;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool isTouchForFlick;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x799450", Offset = "0x799450")]
	public bool isFullPathForFlick;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float lerpTimeFactorOnTouchForFlick;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x799488", Offset = "0x799488")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x799488", Offset = "0x799488")]
	public bool isInputPositionFixed;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7994E8", Offset = "0x7994E8")]
	public float inputPositionFixedScreenFactorX;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x799504", Offset = "0x799504")]
	public float inputPositionFixedScreenFactorY;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Vector2 inputSensitivity;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float forceFactorExtra;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float torqueFactorExtra;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float torqueAngleExtra;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform parentOnThrow;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public UnityEventWithThrowingObject OnThrow;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x799520", Offset = "0x799520")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x799520", Offset = "0x799520")]
	public float nextThrowGettingDelay;

	[Token(Token = "0x4000180")]
	private const float nextCoroutineCallTryDelay = 0.1f;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private bool isNextThrowGetting;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private GameObject gameObjectTemp;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private ThrowingObject throwingObjectTemp;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public UnityEventWithThrowingObject OnNextThrowGetting;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x799578", Offset = "0x799578")]
	public bool isTagCustomSetOnInit;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "TagSelectorAttribute", RVA = "0x7995B0", Offset = "0x7995B0")]
	public string tagCustomOnInit;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7995C0", Offset = "0x7995C0")]
	public bool isLayerChangingOn;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7995F8", Offset = "0x7995F8")]
	public float layerChangingOnThrowDelay;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public LayerMask layerMaskOnThrow;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public LayerMask layerMaskOnReset;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x799610", Offset = "0x799610")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x799610", Offset = "0x799610")]
	public float delayAfterLayerChanging;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private int layerIndexOnThrow;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int layerIndexOnReset;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x799664", Offset = "0x799664")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x799664", Offset = "0x799664")]
	public float resetDelay;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public UnityEventWithThrowingObject OnReset;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private GameObject gameObjectCurrent;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private ThrowingObject throwingObjectCurrent;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private RaycastHit raycastHit;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private bool isInputBegan;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x125")]
	private bool isInputEnded;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x126")]
	private bool isInputHeldDown;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Vector3 inputPositionCurrent;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private Vector3 inputPositionPivot;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7996B8", Offset = "0x7996B8")]
	public bool isFadingOn;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7996F0", Offset = "0x7996F0")]
	public UnityEventWithThrowingObject OnFadingOut;

	[Token(Token = "0x17000020")]
	public List<ThrowingObject> throwingObjectsRegistered
	{
		[Token(Token = "0x600015F")]
		[Address(RVA = "0xE803C0", Offset = "0xE803C0", VA = "0xE803C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A6D74", Offset = "0x7A6D74")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000160")]
		[Address(RVA = "0xE803C8", Offset = "0xE803C8", VA = "0xE803C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A6D84", Offset = "0x7A6D84")]
		private set
		{
		}
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0xE803D0", Offset = "0xE803D0", VA = "0xE803D0")]
	public void InitThrowingObjects()
	{
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0xE803FC", Offset = "0xE803FC", VA = "0xE803FC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7A6D94", Offset = "0x7A6D94")]
	private IEnumerator InitThrowingObjectsCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0xE80474", Offset = "0xE80474", VA = "0xE80474")]
	public void GetFirstThrow()
	{
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0xE804E4", Offset = "0xE804E4", VA = "0xE804E4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0xE808EC", Offset = "0xE808EC", VA = "0xE808EC")]
	private Vector3 GetInputPositionFixed()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0xE80940", Offset = "0xE80940", VA = "0xE80940")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7A6DF4", Offset = "0x7A6DF4")]
	private IEnumerator OnTouchForFlickCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0xE809B8", Offset = "0xE809B8", VA = "0xE809B8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7A6E54", Offset = "0x7A6E54")]
	private IEnumerator ThrowCoroutine(Vector2 inputPositionFirst, Vector2 inputPositionLast, ThrowingObject throwingObject)
	{
		return null;
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0xE80A74", Offset = "0xE80A74", VA = "0xE80A74")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7A6EB4", Offset = "0x7A6EB4")]
	private IEnumerator FadeOutCoroutine(float delay, ThrowingObject throwingObject)
	{
		return null;
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0xE80B18", Offset = "0xE80B18", VA = "0xE80B18")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7A6F14", Offset = "0x7A6F14")]
	private IEnumerator ResetCoroutine(float delay, ThrowingObject throwingObject)
	{
		return null;
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0xE804B0", Offset = "0xE804B0", VA = "0xE804B0")]
	private void GetNextThrow(float delay)
	{
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0xE80BBC", Offset = "0xE80BBC", VA = "0xE80BBC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7A6F74", Offset = "0x7A6F74")]
	private IEnumerator GetNextThrowCoroutine(float delay)
	{
		return null;
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0xE80C44", Offset = "0xE80C44", VA = "0xE80C44")]
	public ThrowingObject RegisterOrGetThrowingObject(GameObject gameObject)
	{
		return null;
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0xE80E8C", Offset = "0xE80E8C", VA = "0xE80E8C")]
	public void PlayRandomSoundDependingOnSpeed(ThrowingObject.AudioData audioData, GameObject to, bool isStoppedBeforePlay)
	{
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0xE80F60", Offset = "0xE80F60", VA = "0xE80F60")]
	public void SetMaterial(Material material, GameObject to)
	{
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0xE810B0", Offset = "0xE810B0", VA = "0xE810B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7A6FD4", Offset = "0x7A6FD4")]
	private IEnumerator ChangeLayerCoroutine(float delay, GameObject to, int layerIndex)
	{
		return null;
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0xE8115C", Offset = "0xE8115C", VA = "0xE8115C")]
	private void ChangeLayer(GameObject to, int layerIndex)
	{
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0xE8117C", Offset = "0xE8117C", VA = "0xE8117C")]
	private int LayerMaskValueToIndex(int value)
	{
		return default(int);
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0xE811A0", Offset = "0xE811A0", VA = "0xE811A0")]
	private void InitLayerIndexes()
	{
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0xE81218", Offset = "0xE81218", VA = "0xE81218")]
	public ThrowControl()
	{
	}
}
[Token(Token = "0x2000046")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x796240", Offset = "0x796240")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x796240", Offset = "0x796240")]
public class ThrowingObject : MonoBehaviour
{
	[Token(Token = "0x2000047")]
	public enum CameraAxes
	{
		[Token(Token = "0x40001DF")]
		CameraMainTransformUp,
		[Token(Token = "0x40001E0")]
		CameraMainTransformForward,
		[Token(Token = "0x40001E1")]
		CameraMainTransformRight,
		[Token(Token = "0x40001E2")]
		CameraMainTransformUpRight,
		[Token(Token = "0x40001E3")]
		CameraMainTransformLeft,
		[Token(Token = "0x40001E4")]
		CameraMainTransformUpLeft
	}

	[Token(Token = "0x2000048")]
	public enum RotationsForNextThrow
	{
		[Token(Token = "0x40001E6")]
		Default,
		[Token(Token = "0x40001E7")]
		Random,
		[Token(Token = "0x40001E8")]
		Custom
	}

	[Serializable]
	[Token(Token = "0x2000049")]
	public class AudioData
	{
		[Token(Token = "0x40001E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioClip[] audioClips;

		[Token(Token = "0x40001EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float speedClampMin;

		[Token(Token = "0x40001EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float speedClampMax;

		[Token(Token = "0x40001EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x799AE0", Offset = "0x799AE0")]
		public float pitchMin;

		[Token(Token = "0x40001ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float pitchFactor;

		[Token(Token = "0x40001EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float volumeFactor;

		[Token(Token = "0x60001B2")]
		[Address(RVA = "0xCC4E30", Offset = "0xCC4E30", VA = "0xCC4E30")]
		public AudioData()
		{
		}

		[Token(Token = "0x60001B3")]
		[Address(RVA = "0xCC4E44", Offset = "0xCC4E44", VA = "0xCC4E44")]
		public AudioData(AudioClip[] audioClips, float speedClampMin = 0f, float speedClampMax = 15f, float pitchMin = 0.8f, float pitchFactor = 0.02f, float volumeFactor = 0.125f)
		{
		}
	}

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody rigidbody3D;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Collider[] colliders3D;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MaterialControl materialControl;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x799728", Offset = "0x799728")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x799728", Offset = "0x799728")]
	public bool flagCustom;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x799788", Offset = "0x799788")]
	public MonoBehaviour monoBehaviourCustom;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7997C0", Offset = "0x7997C0")]
	[SerializeField]
	private float forceFactor;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 forceDirection;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector2 strength;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector2 strengthFactor;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private CameraAxes forceDirectionExtra;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 forceDirectionExtraVector3;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x79981C", Offset = "0x79981C")]
	public CameraAxes torqueAxis;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 torqueAxisVector3;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float torqueAngleBasic;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[SerializeField]
	private float torqueAngle;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private float torqueFactor;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Quaternion torqueRotation;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x799874", Offset = "0x799874")]
	[SerializeField]
	private float maxAngularVelocityAtAwake;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7998C0", Offset = "0x7998C0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7998C0", Offset = "0x7998C0")]
	[SerializeField]
	private bool isCenterOfMassByDefaultLoggedAtAwake;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
	[SerializeField]
	private bool isCenterOfMassCustomUsedAtAwake;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[SerializeField]
	private Vector3 centerOfMassCustomAtAwake;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Quaternion rotationByDefault;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x799950", Offset = "0x799950")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x799950", Offset = "0x799950")]
	public Vector2 positionInViewportOnReset;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7999B0", Offset = "0x7999B0")]
	public float cameraNearClipPlaneFactorOnReset;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7999E8", Offset = "0x7999E8")]
	[SerializeField]
	private bool isObjectRotatedInThrowDirection;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private RotationsForNextThrow rotationOnReset;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[SerializeField]
	private Vector3 rotationOnResetCustom;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x799A54", Offset = "0x799A54")]
	private AudioSource audioSourceWhoosh;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private AudioData audioDataWhoosh;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[HideInInspector]
	public bool isThrown;

	[Token(Token = "0x14000004")]
	public event Action OnThrow
	{
		[Token(Token = "0x600019F")]
		[Address(RVA = "0xE812EC", Offset = "0xE812EC", VA = "0xE812EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A7264", Offset = "0x7A7264")]
		add
		{
		}
		[Token(Token = "0x60001A0")]
		[Address(RVA = "0xE8138C", Offset = "0xE8138C", VA = "0xE8138C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A7274", Offset = "0x7A7274")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action OnResetPhysicsBase
	{
		[Token(Token = "0x60001A1")]
		[Address(RVA = "0xE8142C", Offset = "0xE8142C", VA = "0xE8142C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A7284", Offset = "0x7A7284")]
		add
		{
		}
		[Token(Token = "0x60001A2")]
		[Address(RVA = "0xE814D0", Offset = "0xE814D0", VA = "0xE814D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A7294", Offset = "0x7A7294")]
		remove
		{
		}
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0xE81574", Offset = "0xE81574", VA = "0xE81574")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0xE817F8", Offset = "0xE817F8", VA = "0xE817F8")]
	public void SetRendererEnabled(bool enabled)
	{
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0xE81010", Offset = "0xE81010", VA = "0xE81010")]
	public void SetMaterial(Material material)
	{
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0xE81898", Offset = "0xE81898", VA = "0xE81898")]
	public void ThrowBase(Vector2 inputPositionFirst, Vector2 inputPositionLast, Vector2 inputSensitivity, Transform cameraMain, int screenHight, float forceFactorExtra, float torqueFactorExtra, float torqueAngleExtra)
	{
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0xE81BD8", Offset = "0xE81BD8", VA = "0xE81BD8")]
	private Vector3 GetCameraAxis(Transform cameraMain, CameraAxes cameraAxis)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0xE81D5C", Offset = "0xE81D5C", VA = "0xE81D5C")]
	public void ResetPhysicsBase()
	{
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0xE81DE0", Offset = "0xE81DE0", VA = "0xE81DE0")]
	public void ResetPosition(Camera cameraMain)
	{
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0xE81E54", Offset = "0xE81E54", VA = "0xE81E54")]
	public void ResetRotation(Transform parent)
	{
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0xE82004", Offset = "0xE82004", VA = "0xE82004")]
	private Quaternion GetRandomRotation()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0xE82090", Offset = "0xE82090", VA = "0xE82090")]
	public void PlayAudioWhoosh()
	{
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0xE80F54", Offset = "0xE80F54", VA = "0xE80F54")]
	public void PlayAudioRandomlyDependingOnSpeed(AudioData audioData, bool isStoppedBeforePlay)
	{
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0xE8209C", Offset = "0xE8209C", VA = "0xE8209C")]
	public void PlayAudioRandomlyDependingOnSpeed(AudioData audioData, bool isStoppedBeforePlay, AudioSource audioSource)
	{
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0xE82194", Offset = "0xE82194", VA = "0xE82194")]
	public void ActivateTriggersOnColliders(bool isTrigger)
	{
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0xE82210", Offset = "0xE82210", VA = "0xE82210")]
	public void SetCollidersEnabled(bool enabled)
	{
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0xE8228C", Offset = "0xE8228C", VA = "0xE8228C")]
	public ThrowingObject()
	{
	}
}
[Token(Token = "0x200004A")]
public class FreeCam : MonoBehaviour
{
	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float movementSpeed;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fastMovementSpeed;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float freeLookSensitivity;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float zoomSensitivity;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float fastZoomSensitivity;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool looking;

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0xCE5E78", Offset = "0xCE5E78", VA = "0xCE5E78")]
	private void Update()
	{
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0xCE66B0", Offset = "0xCE66B0", VA = "0xCE66B0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0xCE665C", Offset = "0xCE665C", VA = "0xCE665C")]
	public void StartLooking()
	{
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0xCE6688", Offset = "0xCE6688", VA = "0xCE6688")]
	public void StopLooking()
	{
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0xCE66D8", Offset = "0xCE66D8", VA = "0xCE66D8")]
	public FreeCam()
	{
	}
}
[Token(Token = "0x200004B")]
public class FreeCamera : MonoBehaviour
{
	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool enableInputCapture;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool holdRightMouseCapture;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float lookSpeed;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float moveSpeed;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float sprintSpeed;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_inputCaptured;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float m_yaw;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float m_pitch;

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0xCE66F4", Offset = "0xCE66F4", VA = "0xCE66F4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0xCE6700", Offset = "0xCE6700", VA = "0xCE6700")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0xCE6740", Offset = "0xCE6740", VA = "0xCE6740")]
	private void CaptureInput()
	{
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0xCE679C", Offset = "0xCE679C", VA = "0xCE679C")]
	private void ReleaseInput()
	{
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0xCE67D4", Offset = "0xCE67D4", VA = "0xCE67D4")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0xCE6818", Offset = "0xCE6818", VA = "0xCE6818")]
	private void Update()
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0xCE6C04", Offset = "0xCE6C04", VA = "0xCE6C04")]
	public FreeCamera()
	{
	}
}
[Token(Token = "0x200004C")]
public class SuperCamera : MonoBehaviour
{
	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject pivot;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public KeyCode resetShortcut;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x799AF8", Offset = "0x799AF8")]
	public float rotationSensibility;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool invertRotationX;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool invertRotationY;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x799B14", Offset = "0x799B14")]
	public float translationSensibility;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool invertTranslationX;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool invertTranslationY;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float zoomMax;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float zoomMin;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x799B30", Offset = "0x799B30")]
	public float wheelSensibility;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float delayDoubleClic;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 oldCamPos;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion oldCamRot;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 oldMousePos;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float timeDoubleClic;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool firstClic;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 pivotPos;

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0xDC6964", Offset = "0xDC6964", VA = "0xDC6964")]
	private void Start()
	{
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0xDC69F8", Offset = "0xDC69F8", VA = "0xDC69F8")]
	private void Update()
	{
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0xDC7104", Offset = "0xDC7104", VA = "0xDC7104")]
	public SuperCamera()
	{
	}
}
[Token(Token = "0x200004D")]
public class UIButton_ShowNext : MonoBehaviour
{
	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] GameObjectsList;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int shownGameObjectIndex;

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0xE8EF24", Offset = "0xE8EF24", VA = "0xE8EF24")]
	private void Start()
	{
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0xE8EF98", Offset = "0xE8EF98", VA = "0xE8EF98")]
	public void SelectNextGameObject()
	{
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0xE8F054", Offset = "0xE8F054", VA = "0xE8F054")]
	public void SelectPreviousGameObject()
	{
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0xE8EFC4", Offset = "0xE8EFC4", VA = "0xE8EFC4")]
	public void SelectGameObject(int index)
	{
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0xE8F080", Offset = "0xE8F080", VA = "0xE8F080")]
	public UIButton_ShowNext()
	{
	}
}
[Token(Token = "0x200004E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7962A0", Offset = "0x7962A0")]
public class DebugLogPanel : MonoBehaviour
{
	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x799B4C", Offset = "0x799B4C")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x799B4C", Offset = "0x799B4C")]
	private LogType LogLevel;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x799BBC", Offset = "0x799BBC")]
	[SerializeField]
	private int maxNumberOfMessages;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x799C08", Offset = "0x799C08")]
	private bool includeStackTrace;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x799C54", Offset = "0x799C54")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x799C54", Offset = "0x799C54")]
	private bool playSoundOnMessage;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	private bool newMessageArrived;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private TextMeshPro debugText;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Queue<string> messageQueue;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioSource messageSound;

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0xB75114", Offset = "0xB75114", VA = "0xB75114")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0xB7523C", Offset = "0xB7523C", VA = "0xB7523C")]
	private void Application_logMessageReceivedThreaded(string condition, string stackTrace, LogType type)
	{
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0xB75440", Offset = "0xB75440", VA = "0xB75440")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0xB754BC", Offset = "0xB754BC", VA = "0xB754BC")]
	private void PrintQueue()
	{
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0xB755F8", Offset = "0xB755F8", VA = "0xB755F8")]
	private void Update()
	{
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0xB75624", Offset = "0xB75624", VA = "0xB75624")]
	public DebugLogPanel()
	{
	}
}
[Token(Token = "0x200004F")]
public class DeleteMe : MonoBehaviour
{
	[Token(Token = "0x60001CE")]
	[Address(RVA = "0xB78580", Offset = "0xB78580", VA = "0xB78580")]
	private void Start()
	{
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0xB78584", Offset = "0xB78584", VA = "0xB78584")]
	private void Update()
	{
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0xB7862C", Offset = "0xB7862C", VA = "0xB7862C")]
	public DeleteMe()
	{
	}
}
[Token(Token = "0x2000050")]
public class DunkGrabTrigger : MonoBehaviour
{
	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform _playerController;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CharacterController _characterController;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private HingeJoint _hingeJoint;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isFollowing;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform _handTransform;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Grabber _grabber;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 _initialHandPosition;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 _initialPlayerPosition;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Stopwatch _stopwatchHangTime;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 offset;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Camera _mainCamera;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private ControllerHand _handSide;

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0xE6D6A4", Offset = "0xE6D6A4", VA = "0xE6D6A4")]
	private void Start()
	{
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0xE6D790", Offset = "0xE6D790", VA = "0xE6D790")]
	private void Update()
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0xE6D80C", Offset = "0xE6D80C", VA = "0xE6D80C")]
	private void follow2()
	{
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0xE6DAE8", Offset = "0xE6DAE8", VA = "0xE6DAE8")]
	private void endRimRang()
	{
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0xE6DCA4", Offset = "0xE6DCA4", VA = "0xE6DCA4")]
	public void StartDunk2(Transform handA, ControllerHand handSide, Grabber grabber)
	{
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0xE6DEF4", Offset = "0xE6DEF4", VA = "0xE6DEF4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0xE6E1E4", Offset = "0xE6E1E4", VA = "0xE6E1E4")]
	private bool isObjectInViewOfCamera(Transform checkedObject)
	{
		return default(bool);
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0xE6E25C", Offset = "0xE6E25C", VA = "0xE6E25C")]
	public DunkGrabTrigger()
	{
	}
}
[Token(Token = "0x2000051")]
public class EditAnimatorTest : MonoBehaviour
{
	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator _animator;

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0xE778AC", Offset = "0xE778AC", VA = "0xE778AC")]
	private void Start()
	{
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0xE77908", Offset = "0xE77908", VA = "0xE77908")]
	private void Update()
	{
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0xE77990", Offset = "0xE77990", VA = "0xE77990")]
	public EditAnimatorTest()
	{
	}
}
[Token(Token = "0x2000052")]
[ExecuteInEditMode]
public class MC_CreateMatCap : MonoBehaviour
{
	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera screenshotCamera;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material previewMaterial;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x799CC4", Offset = "0x799CC4")]
	public bool revealOnSave;

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0x118B4E8", Offset = "0x118B4E8", VA = "0x118B4E8")]
	public MC_CreateMatCap()
	{
	}
}
[Token(Token = "0x2000053")]
public class MC_AutoRotate : MonoBehaviour
{
	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 rotation;

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0x118B474", Offset = "0x118B474", VA = "0x118B474")]
	private void Update()
	{
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0x118B4E0", Offset = "0x118B4E0", VA = "0x118B4E0")]
	public MC_AutoRotate()
	{
	}
}
[Token(Token = "0x2000054")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x796310", Offset = "0x796310")]
public class MC_SwitchTexture : MonoBehaviour, IPointerClickHandler, IEventSystemHandler
{
	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture[] textures;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material targetMaterial;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RawImage image;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int index;

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0x118B4F8", Offset = "0x118B4F8", VA = "0x118B4F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0x118B5FC", Offset = "0x118B5FC", VA = "0x118B5FC", Slot = "4")]
	public void OnPointerClick(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0x118B630", Offset = "0x118B630", VA = "0x118B630")]
	public void NextTexture()
	{
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0x118B664", Offset = "0x118B664", VA = "0x118B664")]
	public void PrevTexture()
	{
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0x118B55C", Offset = "0x118B55C", VA = "0x118B55C")]
	private void ReloadTexture()
	{
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0x118B69C", Offset = "0x118B69C", VA = "0x118B69C")]
	public MC_SwitchTexture()
	{
	}
}
[Token(Token = "0x2000055")]
public class EpiShowcase : MonoBehaviour
{
	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x799CFC", Offset = "0x799CFC")]
	public GameObject[] showcaseObjects;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public KeyCode nextKey;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public KeyCode prevKey;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x799D34", Offset = "0x799D34")]
	public bool useObjectRotation;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject rotationObject;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float rotationSpeed;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int index;

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0xE77B74", Offset = "0xE77B74", VA = "0xE77B74")]
	private void Update()
	{
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0xE77CFC", Offset = "0xE77CFC", VA = "0xE77CFC")]
	public EpiShowcase()
	{
	}
}
[Token(Token = "0x2000056")]
public class MultiplayerScoreboard : MonoBehaviour
{
	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro homeScoreText;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro awayScoreText;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshPro timeText;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshPro courtInfo;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Stopwatch timeStopwatch;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Stopwatch shotClockStopwatch;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private StringBuilder _sb;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int _courtSideIndex;

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0x1F5F768", Offset = "0x1F5F768", VA = "0x1F5F768")]
	private void Start()
	{
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0x1F5F86C", Offset = "0x1F5F86C", VA = "0x1F5F86C")]
	private void Update()
	{
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0x1F5FE60", Offset = "0x1F5FE60", VA = "0x1F5FE60")]
	public MultiplayerScoreboard()
	{
	}
}
[Token(Token = "0x2000057")]
public class MultiplayerSoundFXManager : MonoBehaviour
{
	[Token(Token = "0x2000058")]
	public enum SoundEffect
	{
		[Token(Token = "0x4000242")]
		Offense,
		[Token(Token = "0x4000243")]
		Defense,
		[Token(Token = "0x4000244")]
		NiceShot,
		[Token(Token = "0x4000245")]
		NailedIt,
		[Token(Token = "0x4000246")]
		PerfectAim,
		[Token(Token = "0x4000247")]
		PlayBall,
		[Token(Token = "0x4000248")]
		Winner,
		[Token(Token = "0x4000249")]
		GameOn,
		[Token(Token = "0x400024A")]
		Loser,
		[Token(Token = "0x400024B")]
		Fireworks,
		[Token(Token = "0x400024C")]
		BallSlap
	}

	[Token(Token = "0x2000059")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x796370", Offset = "0x796370")]
	private sealed class <CoPlayDelayedClip>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400024D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400024E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400024F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delaySeconds;

		[Token(Token = "0x4000250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MultiplayerSoundFXManager <>4__this;

		[Token(Token = "0x4000251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SoundEffect soundEffect;

		[Token(Token = "0x1700002F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001F4")]
			[Address(RVA = "0xCBBB3C", Offset = "0xCBBB3C", VA = "0xCBBB3C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000030")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001F6")]
			[Address(RVA = "0xCBBB84", Offset = "0xCBBB84", VA = "0xCBBB84", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001F1")]
		[Address(RVA = "0xCBBA18", Offset = "0xCBBA18", VA = "0xCBBA18")]
		[DebuggerHidden]
		public <CoPlayDelayedClip>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x60001F2")]
		[Address(RVA = "0xCBBA44", Offset = "0xCBBA44", VA = "0xCBBA44", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001F3")]
		[Address(RVA = "0xCBBA48", Offset = "0xCBBA48", VA = "0xCBBA48", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001F5")]
		[Address(RVA = "0xCBBB44", Offset = "0xCBBB44", VA = "0xCBBB44", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MultiplayerSoundFXManager Instance;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource audioSource;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SerializableDictionary<SoundEffect, AudioClip> test;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SoundEffect[] goodScoreSoundEffects;

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0x1F5FED4", Offset = "0x1F5FED4", VA = "0x1F5FED4")]
	private void Start()
	{
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0x1F5FF58", Offset = "0x1F5FF58", VA = "0x1F5FF58")]
	public void PlayOneShot(AudioSource source, SoundEffect soundEffect)
	{
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0x1F5FFD4", Offset = "0x1F5FFD4", VA = "0x1F5FFD4")]
	public void PlayOneShot(SoundEffect soundEffect)
	{
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0x1F60050", Offset = "0x1F60050", VA = "0x1F60050")]
	public void PlayOneShotDelayed(SoundEffect soundEffect, float delaySeconds)
	{
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0x1F6007C", Offset = "0x1F6007C", VA = "0x1F6007C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7A72A4", Offset = "0x7A72A4")]
	private IEnumerator CoPlayDelayedClip(SoundEffect soundEffect, float delaySeconds)
	{
		return null;
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0x1F60114", Offset = "0x1F60114", VA = "0x1F60114")]
	public SoundEffect getRandomScoreEffect()
	{
		return default(SoundEffect);
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0x1F60168", Offset = "0x1F60168", VA = "0x1F60168")]
	public MultiplayerSoundFXManager()
	{
	}
}
[Token(Token = "0x200005A")]
public class OvrAvatarTestDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 headPos;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion headRot;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0xBDFDA4", Offset = "0xBDFDA4", VA = "0xBDFDA4")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0xBDFF08", Offset = "0xBDFF08", VA = "0xBDFF08")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0xBE02A4", Offset = "0xBE02A4", VA = "0xBE02A4")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0xBE0448", Offset = "0xBE0448", VA = "0xBE0448", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0xBE0478", Offset = "0xBE0478", VA = "0xBE0478")]
	public OvrAvatarTestDriver()
	{
	}
}
[Token(Token = "0x200005B")]
public class PoseEditHelper : MonoBehaviour
{
	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform poseRoot;

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0xC858D4", Offset = "0xC858D4", VA = "0xC858D4")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0xC8595C", Offset = "0xC8595C", VA = "0xC8595C")]
	private void DrawJoints(Transform joint)
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0xC85AD0", Offset = "0xC85AD0", VA = "0xC85AD0")]
	public PoseEditHelper()
	{
	}
}
[Token(Token = "0x200005C")]
public class GazeTargetSpawner : MonoBehaviour
{
	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject GazeTargetPrefab;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int NumberOfDummyTargets;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int RadiusMultiplier;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool isVisible;

	[Token(Token = "0x17000031")]
	public bool IsVisible
	{
		[Token(Token = "0x60001FF")]
		[Address(RVA = "0xCEFB3C", Offset = "0xCEFB3C", VA = "0xCEFB3C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000200")]
		[Address(RVA = "0xCEFB44", Offset = "0xCEFB44", VA = "0xCEFB44")]
		set
		{
		}
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0xCEFC80", Offset = "0xCEFC80", VA = "0xCEFC80")]
	private void Start()
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0xCEFE48", Offset = "0xCEFE48", VA = "0xCEFE48")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0xCEFE50", Offset = "0xCEFE50", VA = "0xCEFE50")]
	public GazeTargetSpawner()
	{
	}
}
[Token(Token = "0x200005D")]
public class RemoteLoopbackManager : MonoBehaviour
{
	[Token(Token = "0x200005E")]
	private class PacketLatencyPair
	{
		[Token(Token = "0x400025F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte[] PacketData;

		[Token(Token = "0x4000260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float FakeLatency;

		[Token(Token = "0x600020A")]
		[Address(RVA = "0xCBFA14", Offset = "0xCBFA14", VA = "0xCBFA14")]
		public PacketLatencyPair()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200005F")]
	public class SimulatedLatencySettings
	{
		[Token(Token = "0x4000261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x799D7C", Offset = "0x799D7C")]
		public float FakeLatencyMax;

		[Token(Token = "0x4000262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x799D94", Offset = "0x799D94")]
		public float FakeLatencyMin;

		[Token(Token = "0x4000263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x799DAC", Offset = "0x799DAC")]
		public float LatencyWeight;

		[Token(Token = "0x4000264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x799DC4", Offset = "0x799DC4")]
		public int MaxSamples;

		[Token(Token = "0x4000265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal float AverageWindow;

		[Token(Token = "0x4000266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal float LatencySum;

		[Token(Token = "0x4000267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal LinkedList<float> LatencyValues;

		[Token(Token = "0x600020B")]
		[Address(RVA = "0xCBFA1C", Offset = "0xCBFA1C", VA = "0xCBFA1C")]
		public float NextValue()
		{
			return default(float);
		}

		[Token(Token = "0x600020C")]
		[Address(RVA = "0xCBFB54", Offset = "0xCBFB54", VA = "0xCBFB54")]
		public SimulatedLatencySettings()
		{
		}
	}

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OvrAvatar LocalAvatar;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar LoopbackAvatar;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimulatedLatencySettings LatencySettings;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int PacketSequence;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LinkedList<PacketLatencyPair> packetQueue;

	[Token(Token = "0x6000204")]
	[Address(RVA = "0xC8A17C", Offset = "0xC8A17C", VA = "0xC8A17C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0xC8A2D4", Offset = "0xC8A2D4", VA = "0xC8A2D4")]
	private void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0xC8A6B8", Offset = "0xC8A6B8", VA = "0xC8A6B8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0xC8A604", Offset = "0xC8A604", VA = "0xC8A604")]
	private void SendPacketData(byte[] data)
	{
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0xC8A9E8", Offset = "0xC8A9E8", VA = "0xC8A9E8")]
	private void ReceivePacketData(byte[] data)
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0xC8ACD0", Offset = "0xC8ACD0", VA = "0xC8ACD0")]
	public RemoteLoopbackManager()
	{
	}
}
[Token(Token = "0x2000060")]
public class P2PManager
{
	[Token(Token = "0x2000061")]
	private enum MessageType : byte
	{
		[Token(Token = "0x4000269")]
		Update = 1
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0xBE1444", Offset = "0xBE1444", VA = "0xBE1444")]
	public P2PManager()
	{
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0xBE1524", Offset = "0xBE1524", VA = "0xBE1524")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0xBE1608", Offset = "0xBE1608", VA = "0xBE1608")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0xBE1688", Offset = "0xBE1688", VA = "0xBE1688")]
	private void PeerConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0xBE17F8", Offset = "0xBE17F8", VA = "0xBE17F8")]
	private void ConnectionStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0xBE1A38", Offset = "0xBE1A38", VA = "0xBE1A38")]
	public void SendAvatarUpdate(ulong userID, Transform rootTransform, uint sequence, byte[] avatarPacket)
	{
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0xBE1E28", Offset = "0xBE1E28", VA = "0xBE1E28")]
	public void GetRemotePackets()
	{
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0xBE20E4", Offset = "0xBE20E4", VA = "0xBE20E4")]
	public void processAvatarPacket(RemotePlayer remote, ref byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0xBE1C04", Offset = "0xBE1C04", VA = "0xBE1C04")]
	private void PackByte(byte b, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0xBE2018", Offset = "0xBE2018", VA = "0xBE2018")]
	private byte ReadByte(byte[] buf, ref int offset)
	{
		return default(byte);
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0xBE1CE8", Offset = "0xBE1CE8", VA = "0xBE1CE8")]
	private void PackFloat(float f, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0xBE231C", Offset = "0xBE231C", VA = "0xBE231C")]
	private float ReadFloat(byte[] buf, ref int offset)
	{
		return default(float);
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0xBE1C4C", Offset = "0xBE1C4C", VA = "0xBE1C4C")]
	private void PackULong(ulong u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0xBE205C", Offset = "0xBE205C", VA = "0xBE205C")]
	private ulong ReadULong(byte[] buf, ref int offset)
	{
		return default(ulong);
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0xBE1D8C", Offset = "0xBE1D8C", VA = "0xBE1D8C")]
	private void PackUInt32(uint u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0xBE23A4", Offset = "0xBE23A4", VA = "0xBE23A4")]
	private uint ReadUInt32(byte[] buf, ref int offset)
	{
		return default(uint);
	}
}
[Token(Token = "0x2000062")]
public class PlayerController : SocialPlatformManager
{
	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Camera spyCamera;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject cameraRig;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool showUI;

	[Token(Token = "0x600021D")]
	[Address(RVA = "0xBE5968", Offset = "0xBE5968", VA = "0xBE5968", Slot = "5")]
	public override void Awake()
	{
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0xBE59AC", Offset = "0xBE59AC", VA = "0xBE59AC", Slot = "6")]
	public override void Start()
	{
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0xBE59E4", Offset = "0xBE59E4", VA = "0xBE59E4", Slot = "4")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0xBE5A0C", Offset = "0xBE5A0C", VA = "0xBE5A0C")]
	private void checkInput()
	{
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0xBE5BA8", Offset = "0xBE5BA8", VA = "0xBE5BA8")]
	private void ToggleCamera()
	{
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0xBE5C28", Offset = "0xBE5C28", VA = "0xBE5C28")]
	private void ToggleUI()
	{
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0xBE5C7C", Offset = "0xBE5C7C", VA = "0xBE5C7C")]
	public PlayerController()
	{
	}
}
[Token(Token = "0x2000063")]
public class RemotePlayer
{
	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong remoteUserID;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool stillInRoom;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public PeerConnectionState p2pConnectionState;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PeerConnectionState voipConnectionState;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar RemoteAvatar;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 receivedRootPosition;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 receivedRootPositionPrior;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Quaternion receivedRootRotation;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Quaternion receivedRootRotationPrior;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VoipAudioSourceHiLevel voipSource;

	[Token(Token = "0x6000224")]
	[Address(RVA = "0xC8AD8C", Offset = "0xC8AD8C", VA = "0xC8AD8C")]
	public RemotePlayer()
	{
	}
}
[Token(Token = "0x2000064")]
public class RoomManager
{
	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong roomID;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ulong invitedRoomID;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool amIServer;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool startupDone;

	[Token(Token = "0x6000225")]
	[Address(RVA = "0xC8AD94", Offset = "0xC8AD94", VA = "0xC8AD94")]
	public RoomManager()
	{
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0xC8AE98", Offset = "0xC8AE98", VA = "0xC8AE98")]
	private void AcceptingInviteCallback(Message<string> msg)
	{
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0xC8B018", Offset = "0xC8B018", VA = "0xC8B018")]
	public bool CheckForInvite()
	{
		return default(bool);
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0xC8B154", Offset = "0xC8B154", VA = "0xC8B154")]
	public void CreateRoom()
	{
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0xC8B228", Offset = "0xC8B228", VA = "0xC8B228")]
	private void CreateAndJoinPrivateRoomCallback(Message<Oculus.Platform.Models.Room> msg)
	{
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0xC8B364", Offset = "0xC8B364", VA = "0xC8B364")]
	private void OnLaunchInviteWorkflowComplete(Message msg)
	{
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0xC8B048", Offset = "0xC8B048", VA = "0xC8B048")]
	public void JoinExistingRoom(ulong roomID)
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0xC8B3EC", Offset = "0xC8B3EC", VA = "0xC8B3EC")]
	private void JoinRoomCallback(Message<Oculus.Platform.Models.Room> msg)
	{
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0xC8BB98", Offset = "0xC8BB98", VA = "0xC8BB98")]
	private void RoomUpdateCallback(Message<Oculus.Platform.Models.Room> msg)
	{
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0xC8BEEC", Offset = "0xC8BEEC", VA = "0xC8BEEC")]
	public void LeaveCurrentRoom()
	{
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0xC8B720", Offset = "0xC8B720", VA = "0xC8B720")]
	private void ProcessRoomData(Message<Oculus.Platform.Models.Room> msg)
	{
	}
}
[Token(Token = "0x2000065")]
public class SocialPlatformManager : MonoBehaviour
{
	[Token(Token = "0x2000066")]
	public enum State
	{
		[Token(Token = "0x40002A1")]
		INITIALIZING,
		[Token(Token = "0x40002A2")]
		CHECKING_LAUNCH_STATE,
		[Token(Token = "0x40002A3")]
		CREATING_A_ROOM,
		[Token(Token = "0x40002A4")]
		WAITING_IN_A_ROOM,
		[Token(Token = "0x40002A5")]
		JOINING_A_ROOM,
		[Token(Token = "0x40002A6")]
		CONNECTED_IN_A_ROOM,
		[Token(Token = "0x40002A7")]
		LEAVING_A_ROOM,
		[Token(Token = "0x40002A8")]
		SHUTDOWN
	}

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 START_ROTATION_ONE;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly Vector3 START_POSITION_ONE;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 START_ROTATION_TWO;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static readonly Vector3 START_POSITION_TWO;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly Vector3 START_ROTATION_THREE;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static readonly Vector3 START_POSITION_THREE;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static readonly Vector3 START_ROTATION_FOUR;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private static readonly Vector3 START_POSITION_FOUR;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static readonly Color BLACK;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static readonly Color WHITE;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static readonly Color CYAN;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static readonly Color BLUE;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static readonly Color GREEN;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float voiceCurrent;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private uint packetSequence;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar localAvatarPrefab;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar remoteAvatarPrefab;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject helpPanel;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected MeshRenderer helpMesh;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material riftMaterial;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material gearMaterial;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected OvrAvatar localAvatar;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected GameObject localTrackingSpace;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected GameObject localPlayerHead;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Dictionary<ulong, RemotePlayer> remoteUsers;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject roomSphere;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected MeshRenderer sphereMesh;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject roomFloor;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected MeshRenderer floorMesh;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected State currentState;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected static SocialPlatformManager s_instance;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected RoomManager roomManager;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected P2PManager p2pManager;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected VoipManager voipManager;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected ulong myID;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected string myOculusID;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public static readonly float VOIP_SCALE;

	[Token(Token = "0x17000032")]
	public static State CurrentState
	{
		[Token(Token = "0x600023C")]
		[Address(RVA = "0xDC13C0", Offset = "0xDC13C0", VA = "0xDC13C0")]
		get
		{
			return default(State);
		}
	}

	[Token(Token = "0x17000033")]
	public static ulong MyID
	{
		[Token(Token = "0x600023D")]
		[Address(RVA = "0xDC1430", Offset = "0xDC1430", VA = "0xDC1430")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x17000034")]
	public static string MyOculusID
	{
		[Token(Token = "0x600023E")]
		[Address(RVA = "0xDC1510", Offset = "0xDC1510", VA = "0xDC1510")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0xDBF51C", Offset = "0xDBF51C", VA = "0xDBF51C", Slot = "4")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0xDBF8C0", Offset = "0xDBF8C0", VA = "0xDBF8C0", Slot = "5")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0xDC0030", Offset = "0xDC0030", VA = "0xDC0030")]
	private void InitCallback(Message<PlatformInitialize> msg)
	{
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0xDC0350", Offset = "0xDC0350", VA = "0xDC0350", Slot = "6")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0xDC0354", Offset = "0xDC0354", VA = "0xDC0354")]
	private void IsEntitledCallback(Message msg)
	{
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0xDC0474", Offset = "0xDC0474", VA = "0xDC0474")]
	private void GetLoggedInUserCallback(Message<User> msg)
	{
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0xDC0BC8", Offset = "0xDC0BC8", VA = "0xDC0BC8")]
	private void GetLoggedInUserFriendsAndRoomsCallback(Message<UserAndRoomList> msg)
	{
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0xDC0FBC", Offset = "0xDC0FBC", VA = "0xDC0FBC")]
	public void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0xDC11CC", Offset = "0xDC11CC", VA = "0xDC11CC")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0xDC1354", Offset = "0xDC1354", VA = "0xDC1354")]
	public void AddUser(ulong userID, ref RemotePlayer remoteUser)
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0xDBFCBC", Offset = "0xDBFCBC", VA = "0xDBFCBC")]
	public void LogOutputLine(string line)
	{
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0xDC01D8", Offset = "0xDC01D8", VA = "0xDC01D8")]
	public static void TerminateWithError(Message msg)
	{
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0xDBFD70", Offset = "0xDBFD70", VA = "0xDBFD70")]
	public static void TransitionToState(State newState)
	{
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0xDC1638", Offset = "0xDC1638", VA = "0xDC1638")]
	private static void SetSphereColorForState()
	{
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0xDC17B4", Offset = "0xDC17B4", VA = "0xDC17B4")]
	public static void SetFloorColorForState(bool host)
	{
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0xDC1898", Offset = "0xDC1898", VA = "0xDC1898")]
	public static void MarkAllRemoteUsersAsNotInRoom()
	{
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0xDC19F4", Offset = "0xDC19F4", VA = "0xDC19F4")]
	public static void MarkRemoteUserInRoom(ulong userID)
	{
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0xDC1AD8", Offset = "0xDC1AD8", VA = "0xDC1AD8")]
	public static void ForgetRemoteUsersNotInRoom()
	{
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0xDC0290", Offset = "0xDC0290", VA = "0xDC0290")]
	public static void LogOutput(string line)
	{
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0xDC2020", Offset = "0xDC2020", VA = "0xDC2020")]
	public static bool IsUserInRoom(ulong userID)
	{
		return default(bool);
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0xDC20B4", Offset = "0xDC20B4", VA = "0xDC20B4")]
	public static void AddRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0xDC1E0C", Offset = "0xDC1E0C", VA = "0xDC1E0C")]
	public static void RemoveRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0xDC22C0", Offset = "0xDC22C0", VA = "0xDC22C0")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0xDBF498", Offset = "0xDBF498", VA = "0xDBF498")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x7A7354", Offset = "0x7A7354")]
	public static void MicFilter(short[] pcmData, UIntPtr pcmDataLength, int frequency, int numChannels)
	{
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0xDC2404", Offset = "0xDC2404", VA = "0xDC2404")]
	public static RemotePlayer GetRemoteUser(ulong userID)
	{
		return null;
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0xDC24E0", Offset = "0xDC24E0", VA = "0xDC24E0")]
	public SocialPlatformManager()
	{
	}
}
[Token(Token = "0x2000067")]
public class VoipManager
{
	[Token(Token = "0x600024E")]
	[Address(RVA = "0xACFAB4", Offset = "0xACFAB4", VA = "0xACFAB4")]
	public VoipManager()
	{
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0xACFB94", Offset = "0xACFB94", VA = "0xACFB94")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0xACFC78", Offset = "0xACFC78", VA = "0xACFC78")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0xACFCF8", Offset = "0xACFCF8", VA = "0xACFCF8")]
	private void VoipConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0xACFE68", Offset = "0xACFE68", VA = "0xACFE68")]
	private void VoipStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}
}
[Token(Token = "0x2000068")]
public class GazeTarget : MonoBehaviour
{
	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarGazeTargetType Type;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ovrAvatarGazeTargets RuntimeTargetList;

	[Token(Token = "0x6000253")]
	[Address(RVA = "0xCEF7F8", Offset = "0xCEF7F8", VA = "0xCEF7F8")]
	static GazeTarget()
	{
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0xCEF880", Offset = "0xCEF880", VA = "0xCEF880")]
	private void Start()
	{
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0xCEF9F4", Offset = "0xCEF9F4", VA = "0xCEF9F4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0xCEFA58", Offset = "0xCEFA58", VA = "0xCEFA58")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0xCEF8BC", Offset = "0xCEF8BC", VA = "0xCEF8BC")]
	private void UpdateGazeTarget()
	{
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0xCEFB1C", Offset = "0xCEFB1C", VA = "0xCEFB1C")]
	private ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0xCEFB34", Offset = "0xCEFB34", VA = "0xCEFB34")]
	public GazeTarget()
	{
	}
}
[Serializable]
[Token(Token = "0x2000069")]
public class AvatarLayer
{
	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int layerIndex;

	[Token(Token = "0x600025A")]
	[Address(RVA = "0xAE835C", Offset = "0xAE835C", VA = "0xAE835C")]
	public AvatarLayer()
	{
	}
}
[Serializable]
[Token(Token = "0x200006A")]
public class PacketRecordSettings
{
	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal bool RecordingFrames;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float UpdateRate;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal float AccumulatedTime;

	[Token(Token = "0x600025B")]
	[Address(RVA = "0xBE242C", Offset = "0xBE242C", VA = "0xBE242C")]
	public PacketRecordSettings()
	{
	}
}
[Token(Token = "0x200006B")]
public class OvrAvatar : MonoBehaviour
{
	[Token(Token = "0x200006C")]
	public class PacketEventArgs : EventArgs
	{
		[Token(Token = "0x4000308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly OvrAvatarPacket Packet;

		[Token(Token = "0x6000290")]
		[Address(RVA = "0xCBC7F8", Offset = "0xCBC7F8", VA = "0xCBC7F8")]
		public PacketEventArgs(OvrAvatarPacket packet)
		{
		}
	}

	[Token(Token = "0x200006D")]
	public enum HandType
	{
		[Token(Token = "0x400030A")]
		Right,
		[Token(Token = "0x400030B")]
		Left,
		[Token(Token = "0x400030C")]
		Max
	}

	[Token(Token = "0x200006E")]
	public enum HandJoint
	{
		[Token(Token = "0x400030E")]
		HandBase,
		[Token(Token = "0x400030F")]
		IndexBase,
		[Token(Token = "0x4000310")]
		IndexTip,
		[Token(Token = "0x4000311")]
		ThumbBase,
		[Token(Token = "0x4000312")]
		ThumbTip,
		[Token(Token = "0x4000313")]
		Max
	}

	[Token(Token = "0x200006F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x796380", Offset = "0x796380")]
	private sealed class <WaitForMouthAudioSource>d__137 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatar <>4__this;

		[Token(Token = "0x17000035")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000294")]
			[Address(RVA = "0xCBC7A8", Offset = "0xCBC7A8", VA = "0xCBC7A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000036")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000296")]
			[Address(RVA = "0xCBC7F0", Offset = "0xCBC7F0", VA = "0xCBC7F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000291")]
		[Address(RVA = "0xCBC5CC", Offset = "0xCBC5CC", VA = "0xCBC5CC")]
		[DebuggerHidden]
		public <WaitForMouthAudioSource>d__137(int <>1__state)
		{
		}

		[Token(Token = "0x6000292")]
		[Address(RVA = "0xCBC5F8", Offset = "0xCBC5F8", VA = "0xCBC5F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000293")]
		[Address(RVA = "0xCBC5FC", Offset = "0xCBC5FC", VA = "0xCBC5FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000295")]
		[Address(RVA = "0xCBC7B0", Offset = "0xCBC7B0", VA = "0xCBC7B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x799DDC", Offset = "0x799DDC")]
	public IntPtr sdkAvatar;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string oculusUserID;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatarDriver Driver;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x799E14", Offset = "0x799E14")]
	public bool EnableBody;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool EnableHands;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool EnableBase;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool EnableExpressive;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x799E4C", Offset = "0x799E4C")]
	public bool RecordPackets;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool UseSDKPackets;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PacketRecordSettings PacketSettings;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x799E84", Offset = "0x799E84")]
	public bool StartWithControllers;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AvatarLayer FirstPersonLayer;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AvatarLayer ThirdPersonLayer;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool ShowFirstPerson;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool ShowThirdPerson;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	internal ovrAvatarCapabilities Capabilities;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x799EBC", Offset = "0x799EBC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x799EBC", Offset = "0x799EBC")]
	internal ovrAvatarAssetLevelOfDetail LevelOfDetail;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x799F2C", Offset = "0x799F2C")]
	private bool CombineMeshes;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x799F64", Offset = "0x799F64")]
	public bool UseTransparentRenderQueue;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x799F9C", Offset = "0x799F9C")]
	public Shader Monochrome_SurfaceShader;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Shader Monochrome_SurfaceShader_SelfOccluding;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Shader Monochrome_SurfaceShader_PBS;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Shader Skinshaded_SurfaceShader_SingleComponent;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Shader Skinshaded_VertFrag_SingleComponent;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Shader Skinshaded_VertFrag_CombinedMesh;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Shader Skinshaded_Expressive_SurfaceShader_SingleComponent;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Shader Skinshaded_Expressive_VertFrag_SingleComponent;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Shader Skinshaded_Expressive_VertFrag_CombinedMesh;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Shader Loader_VertFrag_CombinedMesh;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Shader EyeLens;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Shader ControllerShader;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x799FD4", Offset = "0x799FD4")]
	public bool CanOwnMicrophone;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79A00C", Offset = "0x79A00C")]
	public bool EnableLaughter;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject MouthAnchor;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform LeftHandCustomPose;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform RightHandCustomPose;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private HashSet<ulong> assetLoadingIds;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool assetsFinishedLoading;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private OvrAvatarMaterialManager materialManager;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool waitingForCombinedMesh;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool doneExpressiveGlobalInit;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Vector4 clothingAlphaOffset;

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private ulong clothingAlphaTexture;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private OVRLipSyncMicInput micInput;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private OVRLipSyncContext lipsyncContext;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private OVRLipSync.Frame currentFrame;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float[] visemes;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private AudioSource audioSource;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private ONSPAudioSource spatializedSource;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private List<float[]> voiceUpdates;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ovrAvatarVisemes RuntimeVisemes;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Transform cachedLeftHandCustomPose;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Transform[] cachedCustomLeftHandJoints;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private ovrAvatarTransform[] cachedLeftHandTransforms;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Transform cachedRightHandCustomPose;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Transform[] cachedCustomRightHandJoints;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private ovrAvatarTransform[] cachedRightHandTransforms;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool showLeftController;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x189")]
	private bool showRightController;

	[Token(Token = "0x40002EA")]
	private const bool USE_MOBILE_TEXTURE_FORMAT = true;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 MOUTH_HEAD_OFFSET;

	[Token(Token = "0x40002EC")]
	private const string MOUTH_HELPER_NAME = "MouthAnchor";

	[Token(Token = "0x40002ED")]
	private const int VISEME_COUNT = 16;

	[Token(Token = "0x40002EE")]
	private const float ACTION_UNIT_ONSET_SPEED = 30f;

	[Token(Token = "0x40002EF")]
	private const float ACTION_UNIT_FALLOFF_SPEED = 20f;

	[Token(Token = "0x40002F0")]
	private const float VISEME_LEVEL_MULTIPLIER = 1.5f;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	internal ulong oculusUserIDInternal;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	internal OvrAvatarBase Base;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	internal OvrAvatarTouchController ControllerLeft;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	internal OvrAvatarTouchController ControllerRight;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	internal OvrAvatarBody Body;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	internal OvrAvatarHand HandLeft;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	internal OvrAvatarHand HandRight;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	internal ovrAvatarLookAndFeelVersion LookAndFeelVersion;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	internal ovrAvatarLookAndFeelVersion FallbackLookAndFeelVersion;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private OvrAvatarPacket CurrentUnityPacket;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public EventHandler<PacketEventArgs> PacketRecorded;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static string[,] HandJoints;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static Vector3 MOUTH_POSITION_OFFSET;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static string VOICE_PROPERTY;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static string MOUTH_POSITION_PROPERTY;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static string MOUTH_DIRECTION_PROPERTY;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static string MOUTH_SCALE_PROPERTY;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static float MOUTH_SCALE_GLOBAL;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private static float MOUTH_MAX_GLOBAL;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static string NECK_JONT;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public float VoiceAmplitude;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	public bool EnableMouthVertexAnimation;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static ovrAvatarLights ovrLights;

	[Token(Token = "0x600025C")]
	[Address(RVA = "0x12FCB60", Offset = "0x12FCB60", VA = "0x12FCB60")]
	static OvrAvatar()
	{
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0x12FD000", Offset = "0x12FD000", VA = "0x12FD000")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0x12FD094", Offset = "0x12FD094", VA = "0x12FD094")]
	public void AssetLoadedCallback(OvrAvatarAsset asset)
	{
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0x12FD0FC", Offset = "0x12FD0FC", VA = "0x12FD0FC")]
	public void CombinedMeshLoadedCallback(IntPtr assetPtr)
	{
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0x12FD22C", Offset = "0x12FD22C", VA = "0x12FD22C")]
	private OvrAvatarSkinnedMeshRenderComponent AddSkinnedMeshRenderComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender)
	{
		return null;
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0x12FD30C", Offset = "0x12FD30C", VA = "0x12FD30C")]
	private OvrAvatarSkinnedMeshRenderPBSComponent AddSkinnedMeshRenderPBSComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS)
	{
		return null;
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0x12FD3E8", Offset = "0x12FD3E8", VA = "0x12FD3E8")]
	private OvrAvatarSkinnedMeshPBSV2RenderComponent AddSkinnedMeshRenderPBSV2Component(IntPtr renderPart, GameObject go, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRenderPBSV2, bool isBodyPartZero, bool isControllerModel)
	{
		return null;
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0x12FD5CC", Offset = "0x12FD5CC", VA = "0x12FD5CC")]
	public static IntPtr GetRenderPart(ovrAvatarComponent component, uint renderPartIndex)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0x12FD6A8", Offset = "0x12FD6A8", VA = "0x12FD6A8")]
	private static string GetRenderPartName(ovrAvatarComponent component, uint renderPartIndex)
	{
		return null;
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0x12FD720", Offset = "0x12FD720", VA = "0x12FD720")]
	internal static void ConvertTransform(float[] transform, ref ovrAvatarTransform target)
	{
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0x12FD808", Offset = "0x12FD808", VA = "0x12FD808")]
	internal static void ConvertTransform(ovrAvatarTransform transform, Transform target)
	{
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0x12FD894", Offset = "0x12FD894", VA = "0x12FD894")]
	public static ovrAvatarTransform CreateOvrAvatarTransform(Vector3 position, Quaternion orientation)
	{
		return default(ovrAvatarTransform);
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0x12FD91C", Offset = "0x12FD91C", VA = "0x12FD91C")]
	private static ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0x12FD934", Offset = "0x12FD934", VA = "0x12FD934")]
	private void BuildRenderComponents()
	{
	}

	[Token(Token = "0x600026A")]
	private void AddAvatarComponent<T>(ref T root, ovrAvatarComponent nativeComponent) where T : OvrAvatarComponent
	{
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0x12FDDE4", Offset = "0x12FDDE4", VA = "0x12FDDE4")]
	private void UpdateCustomPoses()
	{
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0x12FE164", Offset = "0x12FE164", VA = "0x12FE164")]
	private static bool UpdatePoseRoot(Transform poseRoot, ref Transform cachedPoseRoot, ref Transform[] cachedPoseJoints, ref ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0x12FE350", Offset = "0x12FE350", VA = "0x12FE350")]
	private static bool UpdateTransforms(Transform[] joints, ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0x12FE59C", Offset = "0x12FE59C", VA = "0x12FE59C")]
	private static void OrderJoints(Transform transform, List<Transform> joints)
	{
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0x12FE690", Offset = "0x12FE690", VA = "0x12FE690")]
	private void AvatarSpecificationCallback(IntPtr avatarSpecification)
	{
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0x12FECFC", Offset = "0x12FECFC", VA = "0x12FECFC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0x12FF034", Offset = "0x12FF034", VA = "0x12FF034")]
	private void Update()
	{
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0x12FFA6C", Offset = "0x12FFA6C", VA = "0x12FFA6C")]
	public static ovrAvatarHandInputState CreateInputState(ovrAvatarTransform transform, OvrAvatarDriver.ControllerPose pose)
	{
		return default(ovrAvatarHandInputState);
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0x12FFAC0", Offset = "0x12FFAC0", VA = "0x12FFAC0")]
	public void ShowControllers(bool show)
	{
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0x12FE94C", Offset = "0x12FE94C", VA = "0x12FE94C")]
	public void ShowLeftController(bool show)
	{
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0x12FE9F0", Offset = "0x12FE9F0", VA = "0x12FE9F0")]
	public void ShowRightController(bool show)
	{
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0x12FFAF0", Offset = "0x12FFAF0", VA = "0x12FFAF0")]
	public void UpdateVoiceVisualization(float[] voiceSamples)
	{
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0x12FF40C", Offset = "0x12FF40C", VA = "0x12FF40C")]
	private void RecordFrame()
	{
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0x12FFD64", Offset = "0x12FFD64", VA = "0x12FFD64")]
	private void RecordUnityFrame()
	{
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0x12FFB54", Offset = "0x12FFB54", VA = "0x12FFB54")]
	private void RecordSDKFrame()
	{
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0x1300038", Offset = "0x1300038", VA = "0x1300038")]
	private void AddRenderParts(OvrAvatarComponent ovrComponent, ovrAvatarComponent component, Transform parent)
	{
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0x13004B4", Offset = "0x13004B4", VA = "0x13004B4")]
	public void RefreshBodyParts()
	{
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0x13008B8", Offset = "0x13008B8", VA = "0x13008B8")]
	public ovrAvatarBodyComponent? GetBodyComponent()
	{
		return null;
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0x1300A0C", Offset = "0x1300A0C", VA = "0x1300A0C")]
	public Transform GetHandTransform(HandType hand, HandJoint joint)
	{
		return null;
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0x1300BF0", Offset = "0x1300BF0", VA = "0x1300BF0")]
	public void GetPointingDirection(HandType hand, ref Vector3 forward, ref Vector3 up)
	{
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0x12FF5EC", Offset = "0x12FF5EC", VA = "0x12FF5EC")]
	private void UpdateVoiceBehavior()
	{
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0x1300CC4", Offset = "0x1300CC4", VA = "0x1300CC4")]
	private bool IsValidMic()
	{
		return default(bool);
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0x12FF41C", Offset = "0x12FF41C", VA = "0x12FF41C")]
	private void InitPostLoad()
	{
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0x1300DB4", Offset = "0x1300DB4", VA = "0x1300DB4")]
	private static void ExpressiveGlobalInit()
	{
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0x1301468", Offset = "0x1301468", VA = "0x1301468")]
	private static void InitializeLights()
	{
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0x130194C", Offset = "0x130194C", VA = "0x130194C")]
	private static ovrAvatarLight CreateLightDirectional(uint id, Vector3 direction, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0x1301974", Offset = "0x1301974", VA = "0x1301974")]
	private static ovrAvatarLight CreateLightPoint(uint id, Vector3 position, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0x130199C", Offset = "0x130199C", VA = "0x130199C")]
	private static ovrAvatarLight CreateLightSpot(uint id, Vector3 position, Vector3 direction, float spotAngleDeg, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0x12FF8F8", Offset = "0x12FF8F8", VA = "0x12FF8F8")]
	private void UpdateExpressive()
	{
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0x1300E84", Offset = "0x1300E84", VA = "0x1300E84")]
	private void ConfigureHelpers()
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0x1301DCC", Offset = "0x1301DCC", VA = "0x1301DCC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7A73B4", Offset = "0x7A73B4")]
	private IEnumerator WaitForMouthAudioSource()
	{
		return null;
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0x1301E44", Offset = "0x1301E44", VA = "0x1301E44")]
	public void DestroyHelperObjects()
	{
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0x1301C8C", Offset = "0x1301C8C", VA = "0x1301C8C")]
	public GameObject CreateHelperObject(Transform parent, Vector3 localPositionOffset, string helperName, string helperTag = "")
	{
		return null;
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0x1301F08", Offset = "0x1301F08", VA = "0x1301F08")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0x1301FF0", Offset = "0x1301FF0", VA = "0x1301FF0")]
	public void UpdateVoiceData(float[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0x13019D8", Offset = "0x13019D8", VA = "0x13019D8")]
	private void UpdateFacewave()
	{
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0x13020D8", Offset = "0x13020D8", VA = "0x13020D8")]
	public OvrAvatar()
	{
	}
}
[Token(Token = "0x2000070")]
public class OvrAvatarAsset
{
	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong assetID;

	[Token(Token = "0x6000297")]
	[Address(RVA = "0x13022D4", Offset = "0x13022D4", VA = "0x13022D4")]
	public OvrAvatarAsset()
	{
	}
}
[Token(Token = "0x2000071")]
public class OvrAvatarAssetMesh : OvrAvatarAsset
{
	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh mesh;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAvatarSkinnedMeshPose skinnedBindPose;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string[] jointNames;

	[Token(Token = "0x6000298")]
	[Address(RVA = "0x13023A4", Offset = "0x13023A4", VA = "0x13023A4")]
	public OvrAvatarAssetMesh(ulong _assetId, IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0x130365C", Offset = "0x130365C", VA = "0x130365C")]
	private void LoadSubmeshes(IntPtr asset, IntPtr indexBufferPtr, ulong indexCount)
	{
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0x1303230", Offset = "0x1303230", VA = "0x1303230")]
	private void LoadBlendShapes(IntPtr asset, long vertexCount)
	{
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0x1302FB4", Offset = "0x1302FB4", VA = "0x1302FB4")]
	private void SetSkinnedBindPose(IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0x130309C", Offset = "0x130309C", VA = "0x130309C")]
	private void GetVertexAndIndexData(IntPtr asset, ovrAvatarAssetType meshType, out long vertexCount, out IntPtr vertexBuffer, out uint indexCount, out IntPtr indexBuffer)
	{
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0x13038EC", Offset = "0x13038EC", VA = "0x13038EC")]
	public SkinnedMeshRenderer CreateSkinnedMeshRendererOnObject(GameObject target)
	{
		return null;
	}
}
[Token(Token = "0x2000072")]
public class OvrAvatarAssetTexture : OvrAvatarAsset
{
	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D texture;

	[Token(Token = "0x400031C")]
	private const int ASTCHeaderSize = 16;

	[Token(Token = "0x600029E")]
	[Address(RVA = "0x1303EB4", Offset = "0x1303EB4", VA = "0x1303EB4")]
	public OvrAvatarAssetTexture(ulong _assetId, IntPtr asset)
	{
	}
}
[Token(Token = "0x2000073")]
public class OvrAvatarBase : OvrAvatarComponent
{
	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ovrAvatarBaseComponent component;

	[Token(Token = "0x600029F")]
	[Address(RVA = "0x1304130", Offset = "0x1304130", VA = "0x1304130")]
	private void Update()
	{
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0x1304590", Offset = "0x1304590", VA = "0x1304590")]
	public OvrAvatarBase()
	{
	}
}
[Token(Token = "0x2000074")]
public class OvrAvatarBody : OvrAvatarComponent
{
	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ovrAvatarBodyComponent component;

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0x1300748", Offset = "0x1300748", VA = "0x1300748")]
	public ovrAvatarComponent? GetNativeAvatarComponent()
	{
		return null;
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0x13046C0", Offset = "0x13046C0", VA = "0x13046C0")]
	private void Update()
	{
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0x13047F0", Offset = "0x13047F0", VA = "0x13047F0")]
	public OvrAvatarBody()
	{
	}
}
[Token(Token = "0x2000075")]
public class OvrAvatarComponent : MonoBehaviour
{
	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string[] LayerKeywords;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string[] LayerSampleModeParameters;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly string[] LayerBlendModeParameters;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly string[] LayerMaskTypeParameters;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly string[] LayerColorParameters;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static readonly string[] LayerSurfaceParameters;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly string[] LayerSampleParametersParameters;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static readonly string[] LayerMaskParametersParameters;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static readonly string[] LayerMaskAxisParameters;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<Material, ovrAvatarMaterialState> materialStates;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<OvrAvatarRenderComponent> RenderParts;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected OvrAvatar owner;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected ovrAvatarComponent nativeAvatarComponent;

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0x1304850", Offset = "0x1304850", VA = "0x1304850")]
	public void SetOvrAvatarOwner(OvrAvatar ovrAvatarOwner)
	{
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0x1304260", Offset = "0x1304260", VA = "0x1304260")]
	public void UpdateAvatar(IntPtr nativeComponent)
	{
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0x1304858", Offset = "0x1304858", VA = "0x1304858")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0x13048B8", Offset = "0x13048B8", VA = "0x13048B8")]
	public void UpdateAvatarMaterial(Material mat, ovrAvatarMaterialState matState)
	{
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0x130506C", Offset = "0x130506C", VA = "0x130506C")]
	public static Texture2D GetLoadedTexture(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0x13045F0", Offset = "0x13045F0", VA = "0x13045F0")]
	public OvrAvatarComponent()
	{
	}
}
[Token(Token = "0x2000076")]
public abstract class OvrAvatarDriver : MonoBehaviour
{
	[Token(Token = "0x2000077")]
	public enum PacketMode
	{
		[Token(Token = "0x4000330")]
		SDK,
		[Token(Token = "0x4000331")]
		Unity
	}

	[Token(Token = "0x2000078")]
	public struct ControllerPose
	{
		[Token(Token = "0x4000332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarButton buttons;

		[Token(Token = "0x4000333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ovrAvatarTouch touches;

		[Token(Token = "0x4000334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 joystickPosition;

		[Token(Token = "0x4000335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float indexTrigger;

		[Token(Token = "0x4000336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float handTrigger;

		[Token(Token = "0x4000337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isActive;

		[Token(Token = "0x60002B1")]
		[Address(RVA = "0xCBC878", Offset = "0xCBC878", VA = "0xCBC878")]
		public static ControllerPose Interpolate(ControllerPose a, ControllerPose b, float t)
		{
			return default(ControllerPose);
		}
	}

	[Token(Token = "0x2000079")]
	public struct PoseFrame
	{
		[Token(Token = "0x4000338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 headPosition;

		[Token(Token = "0x4000339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion headRotation;

		[Token(Token = "0x400033A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 handLeftPosition;

		[Token(Token = "0x400033B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion handLeftRotation;

		[Token(Token = "0x400033C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 handRightPosition;

		[Token(Token = "0x400033D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Quaternion handRightRotation;

		[Token(Token = "0x400033E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float voiceAmplitude;

		[Token(Token = "0x400033F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ControllerPose controllerLeftPose;

		[Token(Token = "0x4000340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public ControllerPose controllerRightPose;

		[Token(Token = "0x60002B2")]
		[Address(RVA = "0xCBC954", Offset = "0xCBC954", VA = "0xCBC954")]
		public static PoseFrame Interpolate(PoseFrame a, PoseFrame b, float t)
		{
			return default(PoseFrame);
		}
	}

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PacketMode Mode;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected PoseFrame CurrentPose;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private ovrAvatarControllerType ControllerType;

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0x13069A4", Offset = "0x13069A4", VA = "0x13069A4")]
	public PoseFrame GetCurrentPose()
	{
		return default(PoseFrame);
	}

	[Token(Token = "0x60002AC")]
	public abstract void UpdateTransforms(IntPtr sdkAvatar);

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0x13069B4", Offset = "0x13069B4", VA = "0x13069B4")]
	private void Start()
	{
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0x12FEA94", Offset = "0x12FEA94", VA = "0x12FEA94")]
	public void UpdateTransformsFromPose(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0x1306A3C", Offset = "0x1306A3C", VA = "0x1306A3C")]
	public static bool GetIsTrackedRemote()
	{
		return default(bool);
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0x1306A44", Offset = "0x1306A44", VA = "0x1306A44")]
	protected OvrAvatarDriver()
	{
	}
}
[Token(Token = "0x200007A")]
public class OvrAvatarHand : OvrAvatarComponent
{
	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarHandComponent component;

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0x1306A54", Offset = "0x1306A54", VA = "0x1306A54")]
	private void Update()
	{
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0x1306BC4", Offset = "0x1306BC4", VA = "0x1306BC4")]
	public OvrAvatarHand()
	{
	}
}
[Token(Token = "0x200007B")]
public class OvrAvatarLocalDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 centerEyePosition;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion centerEyeRotation;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0x1306C2C", Offset = "0x1306C2C", VA = "0x1306C2C")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0x1306D90", Offset = "0x1306D90", VA = "0x1306D90")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0x130712C", Offset = "0x130712C", VA = "0x130712C")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0x1307350", Offset = "0x1307350", VA = "0x1307350", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0x130737C", Offset = "0x130737C", VA = "0x130737C")]
	public OvrAvatarLocalDriver()
	{
	}
}
[Token(Token = "0x200007C")]
public class OvrAvatarMaterialManager : MonoBehaviour
{
	[Token(Token = "0x200007D")]
	public enum TextureType
	{
		[Token(Token = "0x4000367")]
		DiffuseTextures,
		[Token(Token = "0x4000368")]
		NormalMaps,
		[Token(Token = "0x4000369")]
		RoughnessMaps,
		[Token(Token = "0x400036A")]
		Count
	}

	[Token(Token = "0x200007E")]
	public struct AvatarComponentMaterialProperties
	{
		[Token(Token = "0x400036B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarBodyPartType TypeIndex;

		[Token(Token = "0x400036C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Color Color;

		[Token(Token = "0x400036D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D[] Textures;

		[Token(Token = "0x400036E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float DiffuseIntensity;

		[Token(Token = "0x400036F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RimIntensity;

		[Token(Token = "0x4000370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ReflectionIntensity;
	}

	[Token(Token = "0x200007F")]
	public struct AvatarTextureArrayProperties
	{
		[Token(Token = "0x4000371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D[] Textures;

		[Token(Token = "0x4000372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2DArray TextureArray;
	}

	[Token(Token = "0x2000080")]
	public struct AvatarMaterialPropertyBlock
	{
		[Token(Token = "0x4000373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector4[] Colors;

		[Token(Token = "0x4000374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float[] DiffuseIntensities;

		[Token(Token = "0x4000375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float[] RimIntensities;

		[Token(Token = "0x4000376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] ReflectionIntensities;
	}

	[Serializable]
	[Token(Token = "0x2000081")]
	public class AvatarMaterialConfig
	{
		[Token(Token = "0x4000377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AvatarComponentMaterialProperties[] ComponentMaterialProperties;

		[Token(Token = "0x4000378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AvatarMaterialPropertyBlock MaterialPropertyBlock;

		[Token(Token = "0x60002C9")]
		[Address(RVA = "0xCBD398", Offset = "0xCBD398", VA = "0xCBD398")]
		public AvatarMaterialConfig()
		{
		}
	}

	[Token(Token = "0x2000082")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x796390", Offset = "0x796390")]
	private sealed class <RunLoadingAnimation>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400037A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400037B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatarMaterialManager <>4__this;

		[Token(Token = "0x400037C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action callBack;

		[Token(Token = "0x400037D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <srcBlend>5__2;

		[Token(Token = "0x400037E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <dstBlend>5__3;

		[Token(Token = "0x400037F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string <lightModeTag>5__4;

		[Token(Token = "0x4000380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string <renderTypeTag>5__5;

		[Token(Token = "0x4000381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string <renderQueueTag>5__6;

		[Token(Token = "0x4000382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string <ignoreProjectorTag>5__7;

		[Token(Token = "0x4000383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int <renderQueue>5__8;

		[Token(Token = "0x4000384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool <transparentQueue>5__9;

		[Token(Token = "0x17000037")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002CD")]
			[Address(RVA = "0xCBD348", Offset = "0xCBD348", VA = "0xCBD348", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000038")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002CF")]
			[Address(RVA = "0xCBD390", Offset = "0xCBD390", VA = "0xCBD390", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002CA")]
		[Address(RVA = "0xCBCC58", Offset = "0xCBCC58", VA = "0xCBCC58")]
		[DebuggerHidden]
		public <RunLoadingAnimation>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x60002CB")]
		[Address(RVA = "0xCBCC84", Offset = "0xCBCC84", VA = "0xCBCC84", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002CC")]
		[Address(RVA = "0xCBCC88", Offset = "0xCBCC88", VA = "0xCBCC88", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002CE")]
		[Address(RVA = "0xCBD350", Offset = "0xCBD350", VA = "0xCBD350", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer TargetRenderer;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AvatarTextureArrayProperties[] TextureArrays;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly string[] TextureTypeToShaderProperties;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AvatarMaterialConfig LocalAvatarConfig;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<ReflectionProbeBlendInfo> ReflectionProbes;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader CombinedShader;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string AVATAR_SHADER_LOADER;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string AVATAR_SHADER_MAINTEX;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string AVATAR_SHADER_NORMALMAP;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string AVATAR_SHADER_ROUGHNESSMAP;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string AVATAR_SHADER_COLOR;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string AVATAR_SHADER_DIFFUSEINTENSITY;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string AVATAR_SHADER_RIMINTENSITY;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string AVATAR_SHADER_REFLECTIONINTENSITY;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static string AVATAR_SHADER_CUBEMAP;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static string AVATAR_SHADER_ALPHA;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static string AVATAR_SHADER_LOADING_DIMMER;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static string AVATAR_SHADER_IRIS_COLOR;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static string AVATAR_SHADER_LIP_COLOR;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static string AVATAR_SHADER_BROW_COLOR;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static string AVATAR_SHADER_LASH_COLOR;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static string AVATAR_SHADER_SCLERA_COLOR;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static string AVATAR_SHADER_GUM_COLOR;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static string AVATAR_SHADER_TEETH_COLOR;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static string AVATAR_SHADER_LIP_SMOOTHNESS;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static float[] DiffuseIntensities;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static float[] RimIntensities;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static float[] ReflectionIntensities;

	[Token(Token = "0x4000362")]
	private const float LOADING_ANIMATION_AMPLITUDE = 0.5f;

	[Token(Token = "0x4000363")]
	private const float LOADING_ANIMATION_PERIOD = 0.35f;

	[Token(Token = "0x4000364")]
	private const float LOADING_ANIMATION_CURVE_SCALE = 0.25f;

	[Token(Token = "0x4000365")]
	private const float LOADING_ANIMATION_DIMMER_MIN = 0.3f;

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0x13073C8", Offset = "0x13073C8", VA = "0x13073C8")]
	public void CreateTextureArrays()
	{
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0x13075A8", Offset = "0x13075A8", VA = "0x13075A8")]
	public void SetRenderer(Renderer renderer)
	{
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0x13075E8", Offset = "0x13075E8", VA = "0x13075E8")]
	public void OnCombinedMeshReady()
	{
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0x1307D7C", Offset = "0x1307D7C", VA = "0x1307D7C")]
	public void AddTextureIDToTextureManager(ulong assetID, bool isSingleComponent)
	{
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0x1307DE8", Offset = "0x1307DE8", VA = "0x1307DE8")]
	private void DeleteTextureSet()
	{
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0x1307684", Offset = "0x1307684", VA = "0x1307684")]
	public void InitTextureArrays()
	{
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0x1307E3C", Offset = "0x1307E3C", VA = "0x1307E3C")]
	private void ProcessTexturesWithMips(Texture2D[] textures, int texArrayResolution, Texture2DArray texArray)
	{
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0x1307AD8", Offset = "0x1307AD8", VA = "0x1307AD8")]
	private void SetMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0x1307F2C", Offset = "0x1307F2C", VA = "0x1307F2C")]
	private void ApplyMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0x13081D0", Offset = "0x13081D0", VA = "0x13081D0")]
	public static ovrAvatarBodyPartType GetComponentType(string objectName)
	{
		return default(ovrAvatarBodyPartType);
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0x13082F8", Offset = "0x13082F8", VA = "0x13082F8")]
	private ulong GetTextureIDForType(ovrAvatarPBSMaterialState materialState, TextureType type)
	{
		return default(ulong);
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0x1308330", Offset = "0x1308330", VA = "0x1308330")]
	public void ValidateTextures(ovrAvatarPBSMaterialState[] materialStates)
	{
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0x1307CE8", Offset = "0x1307CE8", VA = "0x1307CE8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7A7464", Offset = "0x7A7464")]
	private IEnumerator RunLoadingAnimation(Action callBack)
	{
		return null;
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0x1309298", Offset = "0x1309298", VA = "0x1309298")]
	public OvrAvatarMaterialManager()
	{
	}
}
[Token(Token = "0x2000083")]
public class OvrAvatarPacket
{
	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr ovrNativePacket;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<float> frameTimes;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<OvrAvatarDriver.PoseFrame> frames;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<byte[]> encodedAudioPackets;

	[Token(Token = "0x17000039")]
	public float Duration
	{
		[Token(Token = "0x60002D0")]
		[Address(RVA = "0xBDA778", Offset = "0xBDA778", VA = "0xBDA778")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700003A")]
	public OvrAvatarDriver.PoseFrame FinalFrame
	{
		[Token(Token = "0x60002D1")]
		[Address(RVA = "0xBDA7EC", Offset = "0xBDA7EC", VA = "0xBDA7EC")]
		get
		{
			return default(OvrAvatarDriver.PoseFrame);
		}
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0xBDA87C", Offset = "0xBDA87C", VA = "0xBDA87C")]
	public OvrAvatarPacket()
	{
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0xBDA9A8", Offset = "0xBDA9A8", VA = "0xBDA9A8")]
	public OvrAvatarPacket(OvrAvatarDriver.PoseFrame initialPose)
	{
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0xBDAB74", Offset = "0xBDAB74", VA = "0xBDAB74")]
	private OvrAvatarPacket(List<float> frameTimes, List<OvrAvatarDriver.PoseFrame> frames, List<byte[]> audioPackets)
	{
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0xBDACE0", Offset = "0xBDACE0", VA = "0xBDACE0")]
	public void AddFrame(OvrAvatarDriver.PoseFrame frame, float deltaSeconds)
	{
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0xBDADB8", Offset = "0xBDADB8", VA = "0xBDADB8")]
	public OvrAvatarDriver.PoseFrame GetPoseFrame(float seconds)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0xBDAFE8", Offset = "0xBDAFE8", VA = "0xBDAFE8")]
	public static OvrAvatarPacket Read(Stream stream)
	{
		return null;
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0xBDB2C4", Offset = "0xBDB2C4", VA = "0xBDB2C4")]
	public void Write(Stream stream)
	{
	}
}
[Token(Token = "0x2000084")]
internal static class BinaryWriterExtensions
{
	[Token(Token = "0x60002D9")]
	[Address(RVA = "0xAEF4D4", Offset = "0xAEF4D4", VA = "0xAEF4D4")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.PoseFrame frame)
	{
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0xAEF5E8", Offset = "0xAEF5E8", VA = "0xAEF5E8")]
	public static void Write(this BinaryWriter writer, Vector3 vec3)
	{
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0xAEF794", Offset = "0xAEF794", VA = "0xAEF794")]
	public static void Write(this BinaryWriter writer, Vector2 vec2)
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0xAEF658", Offset = "0xAEF658", VA = "0xAEF658")]
	public static void Write(this BinaryWriter writer, Quaternion quat)
	{
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0xAEF6EC", Offset = "0xAEF6EC", VA = "0xAEF6EC")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.ControllerPose pose)
	{
	}
}
[Token(Token = "0x2000085")]
internal static class BinaryReaderExtensions
{
	[Token(Token = "0x60002DE")]
	[Address(RVA = "0xAEF0D4", Offset = "0xAEF0D4", VA = "0xAEF0D4")]
	public static OvrAvatarDriver.PoseFrame ReadPoseFrame(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0xAEF478", Offset = "0xAEF478", VA = "0xAEF478")]
	public static Vector2 ReadVector2(this BinaryReader reader)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0xAEF274", Offset = "0xAEF274", VA = "0xAEF274")]
	public static Vector3 ReadVector3(this BinaryReader reader)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0xAEF2EC", Offset = "0xAEF2EC", VA = "0xAEF2EC")]
	public static Quaternion ReadQuaternion(this BinaryReader reader)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0xAEF388", Offset = "0xAEF388", VA = "0xAEF388")]
	public static OvrAvatarDriver.ControllerPose ReadControllerPose(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.ControllerPose);
	}
}
[Token(Token = "0x2000086")]
public class OvrAvatarRemoteDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Queue<OvrAvatarPacket> packetQueue;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private IntPtr CurrentSDKPacket;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float CurrentPacketTime;

	[Token(Token = "0x400038C")]
	private const int MinPacketQueue = 1;

	[Token(Token = "0x400038D")]
	private const int MaxPacketQueue = 4;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int CurrentSequence;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool isStreaming;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private OvrAvatarPacket currentPacket;

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0xBDB4EC", Offset = "0xBDB4EC", VA = "0xBDB4EC")]
	public void QueuePacket(int sequence, OvrAvatarPacket packet)
	{
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0xBDB574", Offset = "0xBDB574", VA = "0xBDB574", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0xBDB590", Offset = "0xBDB590", VA = "0xBDB590")]
	private void UpdateFromSDKPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0xBDB734", Offset = "0xBDB734", VA = "0xBDB734")]
	private void UpdateFromUnityPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0xBDB924", Offset = "0xBDB924", VA = "0xBDB924")]
	public OvrAvatarRemoteDriver()
	{
	}
}
[Token(Token = "0x2000087")]
public class OvrAvatarRenderComponent : MonoBehaviour
{
	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool firstSkinnedUpdate;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SkinnedMeshRenderer mesh;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] bones;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isBodyComponent;

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0xBDB9C0", Offset = "0xBDB9C0", VA = "0xBDB9C0")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0xBDBAA4", Offset = "0xBDBAA4", VA = "0xBDBAA4")]
	protected SkinnedMeshRenderer CreateSkinnedMesh(ulong assetID, ovrAvatarVisibilityFlags visibilityMask, int thirdPersonLayer, int firstPersonLayer)
	{
		return null;
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0xBDBF10", Offset = "0xBDBF10", VA = "0xBDBF10")]
	protected void UpdateSkinnedMesh(OvrAvatar avatar, Transform[] bones, ovrAvatarTransform localTransform, ovrAvatarVisibilityFlags visibilityMask, IntPtr renderPart)
	{
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0xBDC2D0", Offset = "0xBDC2D0", VA = "0xBDC2D0")]
	protected Material CreateAvatarMaterial(string name, Shader shader)
	{
		return null;
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0xBDC3DC", Offset = "0xBDC3DC", VA = "0xBDC3DC")]
	public OvrAvatarRenderComponent()
	{
	}
}
[Token(Token = "0x2000088")]
[Flags]
public enum ovrAvatarCapabilities
{
	[Token(Token = "0x4000396")]
	Body = 1,
	[Token(Token = "0x4000397")]
	Hands = 2,
	[Token(Token = "0x4000398")]
	Base = 4,
	[Token(Token = "0x4000399")]
	BodyTilt = 0x10,
	[Token(Token = "0x400039A")]
	Expressive = 0x20,
	[Token(Token = "0x400039B")]
	All = -1
}
[Token(Token = "0x2000089")]
public enum ovrAvatarMessageType
{
	[Token(Token = "0x400039D")]
	AvatarSpecification,
	[Token(Token = "0x400039E")]
	AssetLoaded,
	[Token(Token = "0x400039F")]
	Count
}
[Token(Token = "0x200008A")]
public struct ovrAvatarMessage_AvatarSpecification
{
	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public IntPtr avatarSpec;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ulong oculusUserID;
}
[Token(Token = "0x200008B")]
public struct ovrAvatarMessage_AssetLoaded
{
	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ulong assetID;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr asset;
}
[Token(Token = "0x200008C")]
public enum ovrAvatarAssetType
{
	[Token(Token = "0x40003A5")]
	Mesh,
	[Token(Token = "0x40003A6")]
	Texture,
	[Token(Token = "0x40003A7")]
	Pose,
	[Token(Token = "0x40003A8")]
	Material,
	[Token(Token = "0x40003A9")]
	CombinedMesh,
	[Token(Token = "0x40003AA")]
	PBSMaterial,
	[Token(Token = "0x40003AB")]
	FailedLoad,
	[Token(Token = "0x40003AC")]
	Count
}
[Token(Token = "0x200008D")]
public struct ovrAvatarMeshVertex
{
	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public byte[] blendIndices;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float[] blendWeights;
}
[Token(Token = "0x200008E")]
public struct ovrAvatarMeshVertexV2
{
	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float r;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float g;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float b;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float a;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public byte[] blendIndices;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float[] blendWeights;
}
[Token(Token = "0x200008F")]
public struct ovrAvatarBlendVertex
{
	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;
}
[Token(Token = "0x2000090")]
public struct ovrAvatarMeshAssetData
{
	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x2000091")]
public struct ovrAvatarMeshAssetDataV2
{
	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x2000092")]
public enum ovrAvatarTextureFormat
{
	[Token(Token = "0x40003E1")]
	RGB24,
	[Token(Token = "0x40003E2")]
	DXT1,
	[Token(Token = "0x40003E3")]
	DXT5,
	[Token(Token = "0x40003E4")]
	ASTC_RGB_6x6,
	[Token(Token = "0x40003E5")]
	ASTC_RGB_6x6_MIPMAPS,
	[Token(Token = "0x40003E6")]
	Count
}
[Token(Token = "0x2000093")]
public struct ovrAvatarTextureAssetData
{
	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTextureFormat format;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint sizeX;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public uint sizeY;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public uint mipCount;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong textureDataSize;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr textureData;
}
[Token(Token = "0x2000094")]
public enum ovrAvatarRenderPartType
{
	[Token(Token = "0x40003EE")]
	SkinnedMeshRender,
	[Token(Token = "0x40003EF")]
	SkinnedMeshRenderPBS,
	[Token(Token = "0x40003F0")]
	ProjectorRender,
	[Token(Token = "0x40003F1")]
	SkinnedMeshRenderPBS_V2,
	[Token(Token = "0x40003F2")]
	Count
}
[Token(Token = "0x2000095")]
public enum ovrAvatarLogLevel
{
	[Token(Token = "0x40003F4")]
	Unknown,
	[Token(Token = "0x40003F5")]
	Default,
	[Token(Token = "0x40003F6")]
	Verbose,
	[Token(Token = "0x40003F7")]
	Debug,
	[Token(Token = "0x40003F8")]
	Info,
	[Token(Token = "0x40003F9")]
	Warn,
	[Token(Token = "0x40003FA")]
	Error,
	[Token(Token = "0x40003FB")]
	Fatal,
	[Token(Token = "0x40003FC")]
	Silent
}
[Token(Token = "0x2000096")]
public struct ovrAvatarTransform
{
	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 position;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Quaternion orientation;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 scale;
}
[Token(Token = "0x2000097")]
[Flags]
public enum ovrAvatarButton
{
	[Token(Token = "0x4000401")]
	One = 1,
	[Token(Token = "0x4000402")]
	Two = 2,
	[Token(Token = "0x4000403")]
	Three = 4,
	[Token(Token = "0x4000404")]
	Joystick = 8
}
[Token(Token = "0x2000098")]
[Flags]
public enum ovrAvatarTouch
{
	[Token(Token = "0x4000406")]
	One = 1,
	[Token(Token = "0x4000407")]
	Two = 2,
	[Token(Token = "0x4000408")]
	Joystick = 4,
	[Token(Token = "0x4000409")]
	ThumbRest = 8,
	[Token(Token = "0x400040A")]
	Index = 0x10,
	[Token(Token = "0x400040B")]
	Pointing = 0x40,
	[Token(Token = "0x400040C")]
	ThumbUp = 0x80
}
[Token(Token = "0x2000099")]
public struct ovrAvatarHandInputState
{
	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarButton buttonMask;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public ovrAvatarTouch touchMask;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float joystickX;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float joystickY;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float indexTrigger;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float handTrigger;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isActive;
}
[Token(Token = "0x200009A")]
public struct ovrAvatarComponent
{
	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint renderPartCount;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr renderParts;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string name;
}
[Token(Token = "0x200009B")]
internal struct ovrAvatarComponent_Offsets
{
	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long transform;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int renderPartCount;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int renderParts;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int name;
}
[Token(Token = "0x200009C")]
public struct ovrAvatarBaseComponent
{
	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 basePosition;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr renderComponent;
}
[Token(Token = "0x200009D")]
public struct ovrAvatarBodyComponent
{
	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform leftEyeTransform;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarTransform rightEyeTransform;

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ovrAvatarTransform centerEyeTransform;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public IntPtr renderComponent;
}
[Token(Token = "0x200009E")]
public struct ovrAvatarBodyComponent_Offsets
{
	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long leftEyeTransform;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long rightEyeTransform;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long centerEyeTransform;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long renderComponent;
}
[Token(Token = "0x200009F")]
public struct ovrAvatarControllerComponent
{
	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x20000A0")]
public struct ovrAvatarHandComponent
{
	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x20000A1")]
public enum ovrAvatarMaterialLayerBlendMode
{
	[Token(Token = "0x400042C")]
	Add,
	[Token(Token = "0x400042D")]
	Multiply,
	[Token(Token = "0x400042E")]
	Count
}
[Token(Token = "0x20000A2")]
public enum ovrAvatarMaterialLayerSampleMode
{
	[Token(Token = "0x4000430")]
	Color,
	[Token(Token = "0x4000431")]
	Texture,
	[Token(Token = "0x4000432")]
	TextureSingleChannel,
	[Token(Token = "0x4000433")]
	Parallax,
	[Token(Token = "0x4000434")]
	Count
}
[Token(Token = "0x20000A3")]
public enum ovrAvatarMaterialMaskType
{
	[Token(Token = "0x4000436")]
	None,
	[Token(Token = "0x4000437")]
	Positional,
	[Token(Token = "0x4000438")]
	ViewReflection,
	[Token(Token = "0x4000439")]
	Fresnel,
	[Token(Token = "0x400043A")]
	Pulse,
	[Token(Token = "0x400043B")]
	Count
}
[Token(Token = "0x20000A4")]
public enum ovrAvatarControllerType
{
	[Token(Token = "0x400043D")]
	Touch,
	[Token(Token = "0x400043E")]
	Malibu,
	[Token(Token = "0x400043F")]
	Go,
	[Token(Token = "0x4000440")]
	Quest,
	[Token(Token = "0x4000441")]
	Count
}
[Token(Token = "0x20000A5")]
public enum ovrAvatarAssetLevelOfDetail
{
	[Token(Token = "0x4000443")]
	Lowest = 1,
	[Token(Token = "0x4000444")]
	Medium = 3,
	[Token(Token = "0x4000445")]
	Highest = 5
}
[Token(Token = "0x20000A6")]
public enum ovrAvatarLookAndFeelVersion
{
	[Token(Token = "0x4000447")]
	Unknown = -1,
	[Token(Token = "0x4000448")]
	One,
	[Token(Token = "0x4000449")]
	Two
}
[Token(Token = "0x20000A7")]
public struct ovrAvatarMaterialLayerState
{
	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarMaterialLayerBlendMode blendMode;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarMaterialMaskType maskType;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector4 layerColor;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector4 sampleParameters;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong sampleTexture;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector4 sampleScaleOffset;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector4 maskParameters;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 maskAxis;

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0xB0273C", Offset = "0xB0273C", VA = "0xB0273C")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0xB0276C", Offset = "0xB0276C", VA = "0xB0276C", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0xB02988", Offset = "0xB02988", VA = "0xB02988", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x20000A8")]
public struct ovrAvatarMaterialState
{
	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarMaterialMaskType baseMaskType;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector4 baseMaskParameters;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector4 baseMaskAxis;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong alphaMaskTextureID;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 alphaMaskScaleOffset;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong normalMapTextureID;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 normalMapScaleOffset;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong parallaxMapTextureID;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector4 parallaxMapScaleOffset;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ulong roughnessMapTextureID;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector4 roughnessMapScaleOffset;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public uint layerCount;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ovrAvatarMaterialLayerState[] layers;

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0xB02A6C", Offset = "0xB02A6C", VA = "0xB02A6C")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0xB02A9C", Offset = "0xB02A9C", VA = "0xB02A9C", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0xB02E38", Offset = "0xB02E38", VA = "0xB02E38", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x20000A9")]
public struct ovrAvatarExpressiveParameters
{
	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 irisColor;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector4 scleraColor;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector4 lashColor;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector4 browColor;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 lipColor;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector4 teethColor;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector4 gumColor;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float browLashIntensity;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float lipSmoothness;

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0xB01CCC", Offset = "0xB01CCC", VA = "0xB01CCC")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0xB01CFC", Offset = "0xB01CFC", VA = "0xB01CFC", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0xB01F8C", Offset = "0xB01F8C", VA = "0xB01F8C", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x20000AA")]
public struct ovrAvatarPBSMaterialState
{
	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong albedoTextureID;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector4 albedoMultiplier;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ulong metallicnessTextureID;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float glossinessScale;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong normalTextureID;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong heightTextureID;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ulong occlusionTextureID;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong emissionTextureID;

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 emissionMultiplier;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong detailMaskTextureID;

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ulong detailAlbedoTextureID;

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ulong detailNormalTextureID;

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0xB02FA0", Offset = "0xB02FA0", VA = "0xB02FA0")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0xB02FD0", Offset = "0xB02FD0", VA = "0xB02FD0", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0xB031C0", Offset = "0xB031C0", VA = "0xB031C0", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x20000AB")]
public class OvrAvatarAssetMaterial : OvrAvatarAsset
{
	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarMaterialState material;

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0x13022DC", Offset = "0x13022DC", VA = "0x13022DC")]
	public OvrAvatarAssetMaterial(ulong id, IntPtr mat)
	{
	}
}
[Token(Token = "0x20000AC")]
public struct ovrAvatarSkinnedMeshPose
{
	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint jointCount;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarTransform[] jointTransform;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int[] jointParents;

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr[] jointNames;
}
[Token(Token = "0x20000AD")]
[Flags]
public enum ovrAvatarVisibilityFlags
{
	[Token(Token = "0x400047E")]
	FirstPerson = 1,
	[Token(Token = "0x400047F")]
	ThirdPerson = 2,
	[Token(Token = "0x4000480")]
	SelfOccluding = 4
}
[Token(Token = "0x20000AE")]
public struct ovrAvatarRenderPart_SkinnedMeshRender
{
	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarMaterialState materialState;

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x20000AF")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS
{
	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong albedoTextureAssetID;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong surfaceTextureAssetID;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x20000B0")]
public struct ovrAvatarRenderPart_ProjectorRender
{
	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint componentIndex;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public uint renderPartIndex;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ovrAvatarMaterialState materialState;
}
[Token(Token = "0x20000B1")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2
{
	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarPBSMaterialState materialState;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x20000B2")]
public enum ovrAvatarHandGesture
{
	[Token(Token = "0x4000496")]
	Default,
	[Token(Token = "0x4000497")]
	GripSphere,
	[Token(Token = "0x4000498")]
	GripCube,
	[Token(Token = "0x4000499")]
	Count
}
[Token(Token = "0x20000B3")]
public enum ovrAvatarBodyPartType
{
	[Token(Token = "0x400049B")]
	Body,
	[Token(Token = "0x400049C")]
	Clothing,
	[Token(Token = "0x400049D")]
	Eyewear,
	[Token(Token = "0x400049E")]
	Hair,
	[Token(Token = "0x400049F")]
	Beard,
	[Token(Token = "0x40004A0")]
	Count
}
[Token(Token = "0x20000B4")]
public struct ovrAvatarBlendShapeParams
{
	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint blendShapeParamCount;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] blendShapeParams;
}
[Token(Token = "0x20000B5")]
internal struct ovrAvatarBlendShapeParams_Offsets
{
	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int blendShapeParamCount;

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long blendShapeParams;
}
[Token(Token = "0x20000B6")]
public struct ovrAvatarVisemes
{
	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint visemeParamCount;

	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] visemeParams;
}
[Token(Token = "0x20000B7")]
internal struct ovrAvatarVisemes_Offsets
{
	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int visemeParamCount;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long visemeParams;
}
[Token(Token = "0x20000B8")]
public enum ovrAvatarGazeTargetType
{
	[Token(Token = "0x40004AA")]
	AvatarHead,
	[Token(Token = "0x40004AB")]
	AvatarHand,
	[Token(Token = "0x40004AC")]
	Object,
	[Token(Token = "0x40004AD")]
	ObjectStatic,
	[Token(Token = "0x40004AE")]
	Count
}
[Token(Token = "0x20000B9")]
public struct ovrAvatarGazeTarget
{
	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public Vector3 worldPosition;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarGazeTargetType type;
}
[Token(Token = "0x20000BA")]
internal struct ovrAvatarGazeTarget_Offsets
{
	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int id;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int worldPosition;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int type;
}
[Token(Token = "0x20000BB")]
public struct ovrAvatarGazeTargets
{
	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint targetCount;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarGazeTarget[] targets;
}
[Token(Token = "0x20000BC")]
internal struct ovrAvatarGazeTargets_Offsets
{
	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int targetCount;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long targets;
}
[Token(Token = "0x20000BD")]
public enum ovrAvatarLightType
{
	[Token(Token = "0x40004BA")]
	Point,
	[Token(Token = "0x40004BB")]
	Direction,
	[Token(Token = "0x40004BC")]
	Spot,
	[Token(Token = "0x40004BD")]
	Count
}
[Token(Token = "0x20000BE")]
public struct ovrAvatarLight
{
	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarLightType type;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float intensity;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 worldDirection;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 worldPosition;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float range;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float spotAngleDeg;
}
[Token(Token = "0x20000BF")]
internal struct ovrAvatarLight_Offsets
{
	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long id;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long type;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long intensity;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long worldDirection;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static long worldPosition;

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static long range;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static long spotAngleDeg;
}
[Token(Token = "0x20000C0")]
public struct ovrAvatarLights
{
	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float ambientIntensity;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint lightCount;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarLight[] lights;
}
[Token(Token = "0x20000C1")]
internal struct ovrAvatarLights_Offsets
{
	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long ambientIntensity;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long lightCount;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long lights;
}
[Token(Token = "0x20000C2")]
[Flags]
public enum ovrAvatarDebugContext : uint
{
	[Token(Token = "0x40004D3")]
	None = 0u,
	[Token(Token = "0x40004D4")]
	GazeTarget = 1u,
	[Token(Token = "0x40004D5")]
	Any = uint.MaxValue
}
[Token(Token = "0x20000C3")]
public struct ovrAvatarDebugLine
{
	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 startPoint;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 endPoint;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 color;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IntPtr text;
}
[Token(Token = "0x20000C4")]
public struct ovrAvatarDebugTransform
{
	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr text;
}
[Token(Token = "0x20000C5")]
public delegate void specificationCallback(IntPtr specification);
[Token(Token = "0x20000C6")]
public delegate void assetLoadedCallback(OvrAvatarAsset asset);
[Token(Token = "0x20000C7")]
public delegate void combinedMeshLoadedCallback(IntPtr asset);
[Token(Token = "0x20000C8")]
public class OvrAvatarSDKManager : MonoBehaviour
{
	[Token(Token = "0x20000C9")]
	public struct AvatarSpecRequestParams
	{
		[Token(Token = "0x40004EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong _userId;

		[Token(Token = "0x40004EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public specificationCallback _callback;

		[Token(Token = "0x40004ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool _useCombinedMesh;

		[Token(Token = "0x40004EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ovrAvatarAssetLevelOfDetail _lod;

		[Token(Token = "0x40004EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool _forceMobileTextureFormat;

		[Token(Token = "0x40004F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ovrAvatarLookAndFeelVersion _lookVersion;

		[Token(Token = "0x40004F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ovrAvatarLookAndFeelVersion _fallbackVersion;

		[Token(Token = "0x40004F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool _enableExpressive;

		[Token(Token = "0x600031F")]
		[Address(RVA = "0xCBD3A0", Offset = "0xCBD3A0", VA = "0xCBD3A0")]
		public AvatarSpecRequestParams(ulong userId, specificationCallback callback, bool useCombinedMesh, ovrAvatarAssetLevelOfDetail lod, bool forceMobileTextureFormat, ovrAvatarLookAndFeelVersion lookVersion, ovrAvatarLookAndFeelVersion fallbackVersion, bool enableExpressive)
		{
		}
	}

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSDKManager _instance;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool initialized;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<ulong, HashSet<specificationCallback>> specificationCallbacks;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<ulong, HashSet<assetLoadedCallback>> assetLoadedCallbacks;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<IntPtr, combinedMeshLoadedCallback> combinedMeshLoadedCallbacks;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<ulong, OvrAvatarAsset> assetCache;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OvrAvatarTextureCopyManager textureCopyManager;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarLogLevel LoggingLevel;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Queue<AvatarSpecRequestParams> avatarSpecificationQueue;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<int> loadingAvatars;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool avatarSpecRequestAvailable;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float lastDispatchedAvatarSpecRequestTime;

	[Token(Token = "0x40004EA")]
	private const float AVATAR_SPEC_REQUEST_TIMEOUT = 5f;

	[Token(Token = "0x1700003B")]
	public static OvrAvatarSDKManager Instance
	{
		[Token(Token = "0x600030E")]
		[Address(RVA = "0xBDBC9C", Offset = "0xBDBC9C", VA = "0xBDBC9C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0xBDC3EC", Offset = "0xBDC3EC", VA = "0xBDC3EC")]
	private bool Initialize()
	{
		return default(bool);
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0xBDC73C", Offset = "0xBDC73C", VA = "0xBDC73C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0xBDC7AC", Offset = "0xBDC7AC", VA = "0xBDC7AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0xBDD18C", Offset = "0xBDD18C", VA = "0xBDD18C")]
	public bool IsAvatarSpecWaiting()
	{
		return default(bool);
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0xBDD1E0", Offset = "0xBDD1E0", VA = "0xBDD1E0")]
	public bool IsAvatarLoading()
	{
		return default(bool);
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0xBDD234", Offset = "0xBDD234", VA = "0xBDD234")]
	public void AddLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0xBDD298", Offset = "0xBDD298", VA = "0xBDD298")]
	public void RemoveLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0xBDD2FC", Offset = "0xBDD2FC", VA = "0xBDD2FC")]
	public void RequestAvatarSpecification(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0xBDCF8C", Offset = "0xBDCF8C", VA = "0xBDCF8C")]
	private void DispatchAvatarSpecificationRequest(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0xBDD3D8", Offset = "0xBDD3D8", VA = "0xBDD3D8")]
	public void BeginLoadingAsset(ulong assetId, ovrAvatarAssetLevelOfDetail lod, assetLoadedCallback callback)
	{
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0xBDD52C", Offset = "0xBDD52C", VA = "0xBDD52C")]
	public void RegisterCombinedMeshCallback(IntPtr sdkAvatar, combinedMeshLoadedCallback callback)
	{
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0xBDBE94", Offset = "0xBDBE94", VA = "0xBDBE94")]
	public OvrAvatarAsset GetAsset(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0xBDD620", Offset = "0xBDD620", VA = "0xBDD620")]
	public void DeleteAssetFromCache(ulong assetId)
	{
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0xBDC6F0", Offset = "0xBDC6F0", VA = "0xBDC6F0")]
	public string GetAppId()
	{
		return null;
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0xBDD700", Offset = "0xBDD700", VA = "0xBDD700")]
	public OvrAvatarTextureCopyManager GetTextureCopyManager()
	{
		return null;
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0xBDD780", Offset = "0xBDD780", VA = "0xBDD780")]
	public OvrAvatarSDKManager()
	{
	}
}
[Token(Token = "0x20000CA")]
public sealed class OvrAvatarSettings : ScriptableObject
{
	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSettings instance;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string ovrAppID;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string ovrGearAppID;

	[Token(Token = "0x1700003C")]
	public static string AppID
	{
		[Token(Token = "0x6000320")]
		[Address(RVA = "0xBDD6C0", Offset = "0xBDD6C0", VA = "0xBDD6C0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000321")]
		[Address(RVA = "0xBDD8F0", Offset = "0xBDD8F0", VA = "0xBDD8F0")]
		set
		{
		}
	}

	[Token(Token = "0x1700003D")]
	public static string MobileAppID
	{
		[Token(Token = "0x6000322")]
		[Address(RVA = "0xBDD6E0", Offset = "0xBDD6E0", VA = "0xBDD6E0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000323")]
		[Address(RVA = "0xBDD920", Offset = "0xBDD920", VA = "0xBDD920")]
		set
		{
		}
	}

	[Token(Token = "0x1700003E")]
	public static OvrAvatarSettings Instance
	{
		[Token(Token = "0x6000324")]
		[Address(RVA = "0xBDD798", Offset = "0xBDD798", VA = "0xBDD798")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000325")]
		[Address(RVA = "0xBDD950", Offset = "0xBDD950", VA = "0xBDD950")]
		set
		{
		}
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0xBDD9A4", Offset = "0xBDD9A4", VA = "0xBDD9A4")]
	public OvrAvatarSettings()
	{
	}
}
[Token(Token = "0x20000CB")]
public class OvrAvatarSkinnedMeshRenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Shader surface;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader surfaceSelfOccluding;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool previouslyActive;

	[Token(Token = "0x6000327")]
	[Address(RVA = "0xBDF51C", Offset = "0xBDF51C", VA = "0xBDF51C")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender, Shader surface, Shader surfaceSelfOccluding, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0xBDF810", Offset = "0xBDF810", VA = "0xBDF810")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0xBDF6A8", Offset = "0xBDF6A8", VA = "0xBDF6A8")]
	private void UpdateMeshMaterial(ovrAvatarVisibilityFlags visibilityMask, SkinnedMeshRenderer rootMesh)
	{
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0xBDFA50", Offset = "0xBDFA50", VA = "0xBDFA50")]
	public OvrAvatarSkinnedMeshRenderComponent()
	{
	}
}
[Token(Token = "0x20000CC")]
public class OvrAvatarSkinnedMeshRenderPBSComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool isMaterialInitilized;

	[Token(Token = "0x600032B")]
	[Address(RVA = "0xBDFA60", Offset = "0xBDFA60", VA = "0xBDFA60")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS, Shader shader, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0xBDFBBC", Offset = "0xBDFBBC", VA = "0xBDFBBC")]
	internal void UpdateSkinnedMeshRenderPBS(OvrAvatar avatar, IntPtr renderPart, Material mat)
	{
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0xBDFD94", Offset = "0xBDFD94", VA = "0xBDFD94")]
	public OvrAvatarSkinnedMeshRenderPBSComponent()
	{
	}
}
[Token(Token = "0x20000CD")]
public class OvrAvatarSkinnedMeshPBSV2RenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OvrAvatarMaterialManager avatarMaterialManager;

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool previouslyActive;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool isCombinedMaterial;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private ovrAvatarExpressiveParameters ExpressiveParameters;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool EnableExpressive;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int blendShapeCount;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ovrAvatarBlendShapeParams blendShapeParams;

	[Token(Token = "0x4000501")]
	private const string MAIN_MATERIAL_NAME = "main_material";

	[Token(Token = "0x4000502")]
	private const string EYE_MATERIAL_NAME = "eye_material";

	[Token(Token = "0x4000503")]
	private const string DEFAULT_MATERIAL_NAME = "_material";

	[Token(Token = "0x600032E")]
	[Address(RVA = "0xBDDA10", Offset = "0xBDDA10", VA = "0xBDDA10")]
	internal void Initialize(IntPtr renderPart, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRender, OvrAvatarMaterialManager materialManager, int thirdPersonLayer, int firstPersonLayer, bool combinedMesh, ovrAvatarAssetLevelOfDetail lod, bool assignExpressiveParams, OvrAvatar avatar, bool isControllerModel)
	{
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0xBDEA48", Offset = "0xBDEA48", VA = "0xBDEA48")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0xBDEC84", Offset = "0xBDEC84", VA = "0xBDEC84")]
	private void InitializeSingleComponentMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0xBDE148", Offset = "0xBDE148", VA = "0xBDE148")]
	private void InitializeCombinedMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0xBDDE6C", Offset = "0xBDDE6C", VA = "0xBDDE6C")]
	private void SetMaterialTransparent(Material mat)
	{
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0xBDDFD0", Offset = "0xBDDFD0", VA = "0xBDDFD0")]
	private void SetMaterialOpaque(Material mat)
	{
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0xBDF50C", Offset = "0xBDF50C", VA = "0xBDF50C")]
	public OvrAvatarSkinnedMeshPBSV2RenderComponent()
	{
	}
}
[Token(Token = "0x20000CE")]
public class OvrAvatarTextureCopyManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20000CF")]
	public struct FallbackTextureSet
	{
		[Token(Token = "0x4000512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool Initialized;

		[Token(Token = "0x4000513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2D DiffuseRoughness;

		[Token(Token = "0x4000514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture2D Normal;
	}

	[Token(Token = "0x20000D0")]
	private struct CopyTextureParams
	{
		[Token(Token = "0x4000515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture Src;

		[Token(Token = "0x4000516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture Dst;

		[Token(Token = "0x4000517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Mip;

		[Token(Token = "0x4000518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int SrcSize;

		[Token(Token = "0x4000519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int DstElement;

		[Token(Token = "0x600033F")]
		[Address(RVA = "0xCBDA9C", Offset = "0xCBDA9C", VA = "0xCBDA9C")]
		public CopyTextureParams(Texture src, Texture dst, int mip, int srcSize, int dstElement)
		{
		}
	}

	[Token(Token = "0x20000D1")]
	public struct TextureSet
	{
		[Token(Token = "0x400051A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Dictionary<ulong, bool> TextureIDSingleMeshPair;

		[Token(Token = "0x400051B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool IsProcessed;

		[Token(Token = "0x6000340")]
		[Address(RVA = "0xCBDAF8", Offset = "0xCBDAF8", VA = "0xCBDAF8")]
		public TextureSet(Dictionary<ulong, bool> textureIDSingleMeshPair, bool isProcessed)
		{
		}
	}

	[Token(Token = "0x20000D2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x796410", Offset = "0x796410")]
	private sealed class <DeleteTextureSetCoroutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400051C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400051D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400051E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextureSet textureSetToDelete;

		[Token(Token = "0x400051F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public OvrAvatarTextureCopyManager <>4__this;

		[Token(Token = "0x4000520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int gameobjectID;

		[Token(Token = "0x1700003F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000344")]
			[Address(RVA = "0xCBDA4C", Offset = "0xCBDA4C", VA = "0xCBDA4C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000040")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000346")]
			[Address(RVA = "0xCBDA94", Offset = "0xCBDA94", VA = "0xCBDA94", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000341")]
		[Address(RVA = "0xCBD41C", Offset = "0xCBD41C", VA = "0xCBD41C")]
		[DebuggerHidden]
		public <DeleteTextureSetCoroutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6000342")]
		[Address(RVA = "0xCBD448", Offset = "0xCBD448", VA = "0xCBD448", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000343")]
		[Address(RVA = "0xCBD44C", Offset = "0xCBD44C", VA = "0xCBD44C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000345")]
		[Address(RVA = "0xCBDA54", Offset = "0xCBDA54", VA = "0xCBDA54", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FallbackTextureSet[] FallbackTextureSets;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Queue<CopyTextureParams> texturesToCopy;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, TextureSet> textureSets;

	[Token(Token = "0x4000507")]
	private const int TEXTURES_TO_COPY_QUEUE_CAPACITY = 256;

	[Token(Token = "0x4000508")]
	private const int COPIES_PER_FRAME = 8;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_DIFFUSE_ROUGHNESS;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_NORMAL;

	[Token(Token = "0x400050B")]
	private const string PATH_HIGHEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_2048";

	[Token(Token = "0x400050C")]
	private const string PATH_MEDIUM_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_1024";

	[Token(Token = "0x400050D")]
	private const string PATH_LOWEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_256";

	[Token(Token = "0x400050E")]
	private const string PATH_HIGHEST_NORMAL = "FallbackTextures/fallback_normal_2048";

	[Token(Token = "0x400050F")]
	private const string PATH_MEDIUM_NORMAL = "FallbackTextures/fallback_normal_1024";

	[Token(Token = "0x4000510")]
	private const string PATH_LOWEST_NORMAL = "FallbackTextures/fallback_normal_256";

	[Token(Token = "0x4000511")]
	private const int GPU_TEXTURE_COPY_WAIT_TIME = 10;

	[Token(Token = "0x6000335")]
	[Address(RVA = "0xBE04BC", Offset = "0xBE04BC", VA = "0xBE04BC")]
	public OvrAvatarTextureCopyManager()
	{
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0xBE099C", Offset = "0xBE099C", VA = "0xBE099C")]
	public void Update()
	{
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0xBE0B9C", Offset = "0xBE0B9C", VA = "0xBE0B9C")]
	public int GetTextureCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0xBE0BE8", Offset = "0xBE0BE8", VA = "0xBE0BE8")]
	public void CopyTexture(Texture src, Texture dst, int mipLevel, int mipSize, int dstElement, bool useQueue = true)
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0xBE0B10", Offset = "0xBE0B10", VA = "0xBE0B10")]
	private void CopyTexture(CopyTextureParams copyTextureParams)
	{
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0xBE0D94", Offset = "0xBE0D94", VA = "0xBE0D94")]
	public void AddTextureIDToTextureSet(int gameobjectID, ulong textureID, bool isSingleMesh)
	{
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0xBE0F9C", Offset = "0xBE0F9C", VA = "0xBE0F9C")]
	public void DeleteTextureSet(int gameobjectID)
	{
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0xBE1040", Offset = "0xBE1040", VA = "0xBE1040")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7A75B4", Offset = "0x7A75B4")]
	private IEnumerator DeleteTextureSetCoroutine(TextureSet textureSetToDelete, int gameobjectID)
	{
		return null;
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0xBDD38C", Offset = "0xBDD38C", VA = "0xBDD38C")]
	public void CheckFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0xBE10EC", Offset = "0xBE10EC", VA = "0xBE10EC")]
	private void InitFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}
}
[Token(Token = "0x20000D3")]
public class OvrAvatarTouchController : OvrAvatarComponent
{
	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarControllerComponent component;

	[Token(Token = "0x6000347")]
	[Address(RVA = "0xBE1264", Offset = "0xBE1264", VA = "0xBE1264")]
	private void Update()
	{
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0xBE13D8", Offset = "0xBE13D8", VA = "0xBE13D8")]
	public OvrAvatarTouchController()
	{
	}
}
[Token(Token = "0x20000D4")]
public class DebugUIBuilder : MonoBehaviour
{
	[Token(Token = "0x20000D5")]
	public delegate void OnClick();

	[Token(Token = "0x20000D6")]
	public delegate void OnToggleValueChange(Toggle t);

	[Token(Token = "0x20000D7")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x20000D8")]
	public delegate bool ActiveUpdate();

	[Token(Token = "0x20000D9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x796420", Offset = "0x796420")]
	private sealed class <>c__DisplayClass38_0
	{
		[Token(Token = "0x4000540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnClick handler;

		[Token(Token = "0x6000368")]
		[Address(RVA = "0xB08A30", Offset = "0xB08A30", VA = "0xB08A30")]
		public <>c__DisplayClass38_0()
		{
		}

		[Token(Token = "0x6000369")]
		[Address(RVA = "0xB08A38", Offset = "0xB08A38", VA = "0xB08A38")]
		internal void <AddButton>b__0()
		{
		}
	}

	[Token(Token = "0x20000DA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x796430", Offset = "0x796430")]
	private sealed class <>c__DisplayClass40_0
	{
		[Token(Token = "0x4000541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnSlider onValueChanged;

		[Token(Token = "0x600036A")]
		[Address(RVA = "0xB08C5C", Offset = "0xB08C5C", VA = "0xB08C5C")]
		public <>c__DisplayClass40_0()
		{
		}

		[Token(Token = "0x600036B")]
		[Address(RVA = "0xB08C64", Offset = "0xB08C64", VA = "0xB08C64")]
		internal void <AddSlider>b__0(float f)
		{
		}
	}

	[Token(Token = "0x20000DB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x796440", Offset = "0x796440")]
	private sealed class <>c__DisplayClass42_0
	{
		[Token(Token = "0x4000542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4000543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x600036C")]
		[Address(RVA = "0xB08EB0", Offset = "0xB08EB0", VA = "0xB08EB0")]
		public <>c__DisplayClass42_0()
		{
		}

		[Token(Token = "0x600036D")]
		[Address(RVA = "0xB08EB8", Offset = "0xB08EB8", VA = "0xB08EB8")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x20000DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x796450", Offset = "0x796450")]
	private sealed class <>c__DisplayClass43_0
	{
		[Token(Token = "0x4000544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4000545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x600036E")]
		[Address(RVA = "0xB0924C", Offset = "0xB0924C", VA = "0xB0924C")]
		public <>c__DisplayClass43_0()
		{
		}

		[Token(Token = "0x600036F")]
		[Address(RVA = "0xB09254", Offset = "0xB09254", VA = "0xB09254")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x20000DD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x796460", Offset = "0x796460")]
	private sealed class <>c__DisplayClass44_0
	{
		[Token(Token = "0x4000546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange handler;

		[Token(Token = "0x4000547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle tb;

		[Token(Token = "0x6000370")]
		[Address(RVA = "0xB09274", Offset = "0xB09274", VA = "0xB09274")]
		public <>c__DisplayClass44_0()
		{
		}

		[Token(Token = "0x6000371")]
		[Address(RVA = "0xB0927C", Offset = "0xB0927C", VA = "0xB0927C")]
		internal void <AddRadio>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x4000523")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x4000524")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x4000525")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform[] additionalButtonPrefab;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private RectTransform textPrefab;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool[] reEnable;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x4000534")]
	private const float elementSpacing = 16f;

	[Token(Token = "0x4000535")]
	public const float marginH = 16f;

	[Token(Token = "0x4000536")]
	public const float marginV = 16f;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector2[] insertPositions;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3 menuOffset;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private OVRCameraRig rig;

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private LaserPointer lp;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private LineRenderer lr;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public bool isHorizontal;

	[Token(Token = "0x6000349")]
	[Address(RVA = "0xB756C8", Offset = "0xB756C8", VA = "0xB756C8")]
	public void Awake()
	{
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0xB75BF8", Offset = "0xB75BF8", VA = "0xB75BF8")]
	public void Show()
	{
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0xB761F4", Offset = "0xB761F4", VA = "0xB761F4")]
	public void Hide()
	{
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0xB75FB0", Offset = "0xB75FB0", VA = "0xB75FB0")]
	private void Relayout()
	{
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0xB763B0", Offset = "0xB763B0", VA = "0xB763B0")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0xB766D0", Offset = "0xB766D0", VA = "0xB766D0")]
	public RectTransform AddButton(string label, [Optional] OnClick handler, int buttonIndex = -1, int targetCanvas = 0, bool highResolutionText = false)
	{
		return null;
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0xB76A98", Offset = "0xB76A98", VA = "0xB76A98")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0xB76B9C", Offset = "0xB76B9C", VA = "0xB76B9C")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0xB76D80", Offset = "0xB76D80", VA = "0xB76D80")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0xB76E24", Offset = "0xB76E24", VA = "0xB76E24")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0xB77014", Offset = "0xB77014", VA = "0xB77014")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0xB7721C", Offset = "0xB7721C", VA = "0xB7721C")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0xB77520", Offset = "0xB77520", VA = "0xB77520")]
	public RectTransform AddTextField(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0xB7761C", Offset = "0xB7761C", VA = "0xB7761C")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0xB776C8", Offset = "0xB776C8", VA = "0xB776C8")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x20000DE")]
public class HandedInputSelector : MonoBehaviour
{
	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRInputModule m_InputModule;

	[Token(Token = "0x6000372")]
	[Address(RVA = "0xF539F4", Offset = "0xF539F4", VA = "0xF539F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0xF53AA4", Offset = "0xF53AA4", VA = "0xF53AA4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0xF53B64", Offset = "0xF53B64", VA = "0xF53B64")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0xF53BA0", Offset = "0xF53BA0", VA = "0xF53BA0")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x20000DF")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x20000E0")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x4000554")]
		On,
		[Token(Token = "0x4000555")]
		Off,
		[Token(Token = "0x4000556")]
		OnWhenHitTarget
	}

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursorVisual;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_restoreOnInputAcquired;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _startPoint;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _forward;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _endPoint;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _hitTarget;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x17000041")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x6000377")]
		[Address(RVA = "0x1185E20", Offset = "0x1185E20", VA = "0x1185E20")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x6000376")]
		[Address(RVA = "0x1185DDC", Offset = "0x1185DDC", VA = "0x1185DDC")]
		set
		{
		}
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0x1185E28", Offset = "0x1185E28", VA = "0x1185E28")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0x1185E84", Offset = "0x1185E84", VA = "0x1185E84")]
	private void Start()
	{
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0x1185FC8", Offset = "0x1185FC8", VA = "0x1185FC8", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0x1185FE4", Offset = "0x1185FE4", VA = "0x1185FE4", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0x1186038", Offset = "0x1186038", VA = "0x1186038")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0x11861F4", Offset = "0x11861F4", VA = "0x11861F4")]
	private void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0x1186308", Offset = "0x1186308", VA = "0x1186308")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0x1186398", Offset = "0x1186398", VA = "0x1186398")]
	public void OnInputFocusLost()
	{
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0x1186464", Offset = "0x1186464", VA = "0x1186464")]
	public void OnInputFocusAcquired()
	{
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0x1186518", Offset = "0x1186518", VA = "0x1186518")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0x1186604", Offset = "0x1186604", VA = "0x1186604")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x20000E1")]
public class CharacterCameraConstraint : MonoBehaviour
{
	[Token(Token = "0x4000557")]
	private const float FADE_RAY_LENGTH = 0.25f;

	[Token(Token = "0x4000558")]
	private const float FADE_OVERLAP_MAXIMUM = 0.1f;

	[Token(Token = "0x4000559")]
	private const float FADE_AMOUNT_MAXIMUM = 1f;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79A124", Offset = "0x79A124")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79A15C", Offset = "0x79A15C")]
	public LayerMask CollideLayers;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79A194", Offset = "0x79A194")]
	public float HeightOffset;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79A1CC", Offset = "0x79A1CC")]
	public float MinimumHeight;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79A204", Offset = "0x79A204")]
	public float MaximumHeight;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CapsuleCollider _character;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SimpleCapsuleWithStickMovement _simplePlayerController;

	[Token(Token = "0x6000383")]
	[Address(RVA = "0xF0B8F4", Offset = "0xF0B8F4", VA = "0xF0B8F4")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0xF0B8FC", Offset = "0xF0B8FC", VA = "0xF0B8FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0xF0B988", Offset = "0xF0B988", VA = "0xF0B988")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0xF0BA1C", Offset = "0xF0BA1C", VA = "0xF0BA1C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0xF0BAB0", Offset = "0xF0BAB0", VA = "0xF0BAB0")]
	private void CameraUpdate()
	{
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0xF0BDDC", Offset = "0xF0BDDC", VA = "0xF0BDDC")]
	private bool CheckCameraOverlapped()
	{
		return default(bool);
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0xF0C00C", Offset = "0xF0C00C", VA = "0xF0C00C")]
	private bool CheckCameraNearClipping(out float result)
	{
		return default(bool);
	}
}
[Token(Token = "0x20000E2")]
public class LocomotionController : MonoBehaviour
{
	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CapsuleCollider CharacterController;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleCapsuleWithStickMovement PlayerController;

	[Token(Token = "0x600038A")]
	[Address(RVA = "0x118825C", Offset = "0x118825C", VA = "0x118825C")]
	private void Start()
	{
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0x1188328", Offset = "0x1188328", VA = "0x1188328")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x20000E3")]
public class LocomotionTeleport : MonoBehaviour
{
	[Token(Token = "0x20000E4")]
	public enum States
	{
		[Token(Token = "0x4000587")]
		Ready,
		[Token(Token = "0x4000588")]
		Aim,
		[Token(Token = "0x4000589")]
		CancelAim,
		[Token(Token = "0x400058A")]
		PreTeleport,
		[Token(Token = "0x400058B")]
		CancelTeleport,
		[Token(Token = "0x400058C")]
		Teleporting,
		[Token(Token = "0x400058D")]
		PostTeleport
	}

	[Token(Token = "0x20000E5")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x400058F")]
		None,
		[Token(Token = "0x4000590")]
		Aim,
		[Token(Token = "0x4000591")]
		PreTeleport,
		[Token(Token = "0x4000592")]
		Teleport
	}

	[Token(Token = "0x20000E6")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x4000594")]
		Point,
		[Token(Token = "0x4000595")]
		Sphere,
		[Token(Token = "0x4000596")]
		Capsule
	}

	[Token(Token = "0x20000E7")]
	public class AimData
	{
		[Token(Token = "0x4000597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x4000598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TargetValid;

		[Token(Token = "0x4000599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3? Destination;

		[Token(Token = "0x400059A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Radius;

		[Token(Token = "0x400059B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x79A61C", Offset = "0x79A61C")]
		private List<Vector3> <Points>k__BackingField;

		[Token(Token = "0x17000045")]
		public List<Vector3> Points
		{
			[Token(Token = "0x60003C1")]
			[Address(RVA = "0xCB8FB0", Offset = "0xCB8FB0", VA = "0xCB8FB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A7ADC", Offset = "0x7A7ADC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60003C2")]
			[Address(RVA = "0xCB8FB8", Offset = "0xCB8FB8", VA = "0xCB8FB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A7AEC", Offset = "0x7A7AEC")]
			private set
			{
			}
		}

		[Token(Token = "0x60003C0")]
		[Address(RVA = "0xCB8F2C", Offset = "0xCB8F2C", VA = "0xCB8F2C")]
		public AimData()
		{
		}

		[Token(Token = "0x60003C3")]
		[Address(RVA = "0xCB8FC0", Offset = "0xCB8FC0", VA = "0xCB8FC0")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x20000E8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x796470", Offset = "0x796470")]
	private sealed class <ReadyStateCoroutine>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400059C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400059D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400059E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000046")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003C7")]
			[Address(RVA = "0xCB8D78", Offset = "0xCB8D78", VA = "0xCB8D78", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000047")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003C9")]
			[Address(RVA = "0xCB8DC0", Offset = "0xCB8DC0", VA = "0xCB8DC0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003C4")]
		[Address(RVA = "0xCB8C3C", Offset = "0xCB8C3C", VA = "0xCB8C3C")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x60003C5")]
		[Address(RVA = "0xCB8C68", Offset = "0xCB8C68", VA = "0xCB8C68", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003C6")]
		[Address(RVA = "0xCB8C6C", Offset = "0xCB8C6C", VA = "0xCB8C6C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003C8")]
		[Address(RVA = "0xCB8D80", Offset = "0xCB8D80", VA = "0xCB8D80", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000E9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x796480", Offset = "0x796480")]
	private sealed class <AimStateCoroutine>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400059F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000048")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003CD")]
			[Address(RVA = "0xCB86A8", Offset = "0xCB86A8", VA = "0xCB86A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000049")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003CF")]
			[Address(RVA = "0xCB86F0", Offset = "0xCB86F0", VA = "0xCB86F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003CA")]
		[Address(RVA = "0xCB8520", Offset = "0xCB8520", VA = "0xCB8520")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x60003CB")]
		[Address(RVA = "0xCB854C", Offset = "0xCB854C", VA = "0xCB854C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003CC")]
		[Address(RVA = "0xCB8550", Offset = "0xCB8550", VA = "0xCB8550", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003CE")]
		[Address(RVA = "0xCB86B0", Offset = "0xCB86B0", VA = "0xCB86B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000EA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x796490", Offset = "0x796490")]
	private sealed class <CancelAimStateCoroutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700004A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003D3")]
			[Address(RVA = "0xCB87D4", Offset = "0xCB87D4", VA = "0xCB87D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003D5")]
			[Address(RVA = "0xCB881C", Offset = "0xCB881C", VA = "0xCB881C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003D0")]
		[Address(RVA = "0xCB86F8", Offset = "0xCB86F8", VA = "0xCB86F8")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x60003D1")]
		[Address(RVA = "0xCB8724", Offset = "0xCB8724", VA = "0xCB8724", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003D2")]
		[Address(RVA = "0xCB8728", Offset = "0xCB8728", VA = "0xCB8728", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003D4")]
		[Address(RVA = "0xCB87DC", Offset = "0xCB87DC", VA = "0xCB87DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000EB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7964A0", Offset = "0x7964A0")]
	private sealed class <PreTeleportStateCoroutine>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700004C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003D9")]
			[Address(RVA = "0xCB8BEC", Offset = "0xCB8BEC", VA = "0xCB8BEC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003DB")]
			[Address(RVA = "0xCB8C34", Offset = "0xCB8C34", VA = "0xCB8C34", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003D6")]
		[Address(RVA = "0xCB8AD0", Offset = "0xCB8AD0", VA = "0xCB8AD0")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x60003D7")]
		[Address(RVA = "0xCB8AFC", Offset = "0xCB8AFC", VA = "0xCB8AFC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003D8")]
		[Address(RVA = "0xCB8B00", Offset = "0xCB8B00", VA = "0xCB8B00", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003DA")]
		[Address(RVA = "0xCB8BF4", Offset = "0xCB8BF4", VA = "0xCB8BF4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7964B0", Offset = "0x7964B0")]
	private sealed class <CancelTeleportStateCoroutine>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700004E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003DF")]
			[Address(RVA = "0xCB8900", Offset = "0xCB8900", VA = "0xCB8900", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003E1")]
			[Address(RVA = "0xCB8948", Offset = "0xCB8948", VA = "0xCB8948", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003DC")]
		[Address(RVA = "0xCB8824", Offset = "0xCB8824", VA = "0xCB8824")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x60003DD")]
		[Address(RVA = "0xCB8850", Offset = "0xCB8850", VA = "0xCB8850", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003DE")]
		[Address(RVA = "0xCB8854", Offset = "0xCB8854", VA = "0xCB8854", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003E0")]
		[Address(RVA = "0xCB8908", Offset = "0xCB8908", VA = "0xCB8908", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000ED")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7964C0", Offset = "0x7964C0")]
	private sealed class <TeleportingStateCoroutine>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000050")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003E5")]
			[Address(RVA = "0xCB8EDC", Offset = "0xCB8EDC", VA = "0xCB8EDC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000051")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003E7")]
			[Address(RVA = "0xCB8F24", Offset = "0xCB8F24", VA = "0xCB8F24", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003E2")]
		[Address(RVA = "0xCB8DC8", Offset = "0xCB8DC8", VA = "0xCB8DC8")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x60003E3")]
		[Address(RVA = "0xCB8DF4", Offset = "0xCB8DF4", VA = "0xCB8DF4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003E4")]
		[Address(RVA = "0xCB8DF8", Offset = "0xCB8DF8", VA = "0xCB8DF8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003E6")]
		[Address(RVA = "0xCB8EE4", Offset = "0xCB8EE4", VA = "0xCB8EE4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000EE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7964D0", Offset = "0x7964D0")]
	private sealed class <PostTeleportStateCoroutine>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000052")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003EB")]
			[Address(RVA = "0xCB8A80", Offset = "0xCB8A80", VA = "0xCB8A80", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000053")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003ED")]
			[Address(RVA = "0xCB8AC8", Offset = "0xCB8AC8", VA = "0xCB8AC8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003E8")]
		[Address(RVA = "0xCB8950", Offset = "0xCB8950", VA = "0xCB8950")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x60003E9")]
		[Address(RVA = "0xCB897C", Offset = "0xCB897C", VA = "0xCB897C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003EA")]
		[Address(RVA = "0xCB8980", Offset = "0xCB8980", VA = "0xCB8980", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003EC")]
		[Address(RVA = "0xCB8A88", Offset = "0xCB8A88", VA = "0xCB8A88", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79A23C", Offset = "0x79A23C")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79A274", Offset = "0x79A274")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79A2AC", Offset = "0x79A2AC")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79A2E4", Offset = "0x79A2E4")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79A31C", Offset = "0x79A31C")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79A354", Offset = "0x79A354")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79A38C", Offset = "0x79A38C")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79A3C4", Offset = "0x79A3C4")]
	public bool EnableRotationDuringPostTeleport;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x79A3FC", Offset = "0x79A3FC")]
	private States <CurrentState>k__BackingField;

	[NonSerialized]
	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79A40C", Offset = "0x79A40C")]
	public TeleportDestination TeleportDestinationPrefab;

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79A444", Offset = "0x79A444")]
	public int TeleportDestinationLayer;

	[NonSerialized]
	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x79A48C", Offset = "0x79A48C")]
	private LocomotionController <LocomotionController>k__BackingField;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79A49C", Offset = "0x79A49C")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79A4D4", Offset = "0x79A4D4")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79A50C", Offset = "0x79A50C")]
	public float AimCollisionRadius;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79A544", Offset = "0x79A544")]
	public float AimCollisionHeight;

	[Token(Token = "0x17000042")]
	public States CurrentState
	{
		[Token(Token = "0x600038E")]
		[Address(RVA = "0x118968C", Offset = "0x118968C", VA = "0x118968C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A7664", Offset = "0x7A7664")]
		get
		{
			return default(States);
		}
		[Token(Token = "0x600038F")]
		[Address(RVA = "0x1189694", Offset = "0x1189694", VA = "0x1189694")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A7674", Offset = "0x7A7674")]
		private set
		{
		}
	}

	[Token(Token = "0x17000043")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x6000393")]
		[Address(RVA = "0x11898B8", Offset = "0x11898B8", VA = "0x11898B8")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x17000044")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x6000394")]
		[Address(RVA = "0x11898E0", Offset = "0x11898E0", VA = "0x11898E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A76A4", Offset = "0x7A76A4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000395")]
		[Address(RVA = "0x11898E8", Offset = "0x11898E8", VA = "0x11898E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A76B4", Offset = "0x7A76B4")]
		private set
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x6000390")]
		[Address(RVA = "0x118969C", Offset = "0x118969C", VA = "0x118969C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A7684", Offset = "0x7A7684")]
		add
		{
		}
		[Token(Token = "0x6000391")]
		[Address(RVA = "0x118973C", Offset = "0x118973C", VA = "0x118973C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A7694", Offset = "0x7A7694")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action EnterStateReady
	{
		[Token(Token = "0x600039F")]
		[Address(RVA = "0x1189F28", Offset = "0x1189F28", VA = "0x1189F28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A76FC", Offset = "0x7A76FC")]
		add
		{
		}
		[Token(Token = "0x60003A0")]
		[Address(RVA = "0x1189FC8", Offset = "0x1189FC8", VA = "0x1189FC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A770C", Offset = "0x7A770C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action EnterStateAim
	{
		[Token(Token = "0x60003A2")]
		[Address(RVA = "0x118A068", Offset = "0x118A068", VA = "0x118A068")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A777C", Offset = "0x7A777C")]
		add
		{
		}
		[Token(Token = "0x60003A3")]
		[Address(RVA = "0x118A108", Offset = "0x118A108", VA = "0x118A108")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A778C", Offset = "0x7A778C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x60003A4")]
		[Address(RVA = "0x118A1A8", Offset = "0x118A1A8", VA = "0x118A1A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A779C", Offset = "0x7A779C")]
		add
		{
		}
		[Token(Token = "0x60003A5")]
		[Address(RVA = "0x118A248", Offset = "0x118A248", VA = "0x118A248")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A77AC", Offset = "0x7A77AC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action ExitStateAim
	{
		[Token(Token = "0x60003A7")]
		[Address(RVA = "0x118A358", Offset = "0x118A358", VA = "0x118A358")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A77BC", Offset = "0x7A77BC")]
		add
		{
		}
		[Token(Token = "0x60003A8")]
		[Address(RVA = "0x118A3F8", Offset = "0x118A3F8", VA = "0x118A3F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A77CC", Offset = "0x7A77CC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action EnterStateCancelAim
	{
		[Token(Token = "0x60003AA")]
		[Address(RVA = "0x118A510", Offset = "0x118A510", VA = "0x118A510")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A783C", Offset = "0x7A783C")]
		add
		{
		}
		[Token(Token = "0x60003AB")]
		[Address(RVA = "0x118A5B0", Offset = "0x118A5B0", VA = "0x118A5B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A784C", Offset = "0x7A784C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000C")]
	public event Action EnterStatePreTeleport
	{
		[Token(Token = "0x60003AD")]
		[Address(RVA = "0x118A6C8", Offset = "0x118A6C8", VA = "0x118A6C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A78BC", Offset = "0x7A78BC")]
		add
		{
		}
		[Token(Token = "0x60003AE")]
		[Address(RVA = "0x118A768", Offset = "0x118A768", VA = "0x118A768")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A78CC", Offset = "0x7A78CC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public event Action EnterStateCancelTeleport
	{
		[Token(Token = "0x60003B0")]
		[Address(RVA = "0x118A880", Offset = "0x118A880", VA = "0x118A880")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A793C", Offset = "0x7A793C")]
		add
		{
		}
		[Token(Token = "0x60003B1")]
		[Address(RVA = "0x118A920", Offset = "0x118A920", VA = "0x118A920")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A794C", Offset = "0x7A794C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event Action EnterStateTeleporting
	{
		[Token(Token = "0x60003B3")]
		[Address(RVA = "0x118AA38", Offset = "0x118AA38", VA = "0x118AA38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A79BC", Offset = "0x7A79BC")]
		add
		{
		}
		[Token(Token = "0x60003B4")]
		[Address(RVA = "0x118AAD8", Offset = "0x118AAD8", VA = "0x118AAD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A79CC", Offset = "0x7A79CC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000F")]
	public event Action EnterStatePostTeleport
	{
		[Token(Token = "0x60003B6")]
		[Address(RVA = "0x118ABF0", Offset = "0x118ABF0", VA = "0x118ABF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A7A3C", Offset = "0x7A7A3C")]
		add
		{
		}
		[Token(Token = "0x60003B7")]
		[Address(RVA = "0x118AC90", Offset = "0x118AC90", VA = "0x118AC90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A7A4C", Offset = "0x7A7A4C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000010")]
	public event Action<Transform, Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x60003B9")]
		[Address(RVA = "0x118ADA8", Offset = "0x118ADA8", VA = "0x118ADA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A7ABC", Offset = "0x7A7ABC")]
		add
		{
		}
		[Token(Token = "0x60003BA")]
		[Address(RVA = "0x118AE48", Offset = "0x118AE48", VA = "0x118AE48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A7ACC", Offset = "0x7A7ACC")]
		remove
		{
		}
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0x1189338", Offset = "0x1189338", VA = "0x1189338")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0x118935C", Offset = "0x118935C", VA = "0x118935C")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0x11897DC", Offset = "0x11897DC", VA = "0x11897DC")]
	public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0x11898F0", Offset = "0x11898F0", VA = "0x11898F0")]
	public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, out RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0x1189B3C", Offset = "0x1189B3C", VA = "0x1189B3C")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x7A76C4", Offset = "0x7A76C4")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0x1189BF0", Offset = "0x1189BF0", VA = "0x1189BF0")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0x1189CF0", Offset = "0x1189CF0", VA = "0x1189CF0")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0x1189D0C", Offset = "0x1189D0C", VA = "0x1189D0C")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0x1189DD0", Offset = "0x1189DD0", VA = "0x1189DD0")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0x1189E14", Offset = "0x1189E14", VA = "0x1189E14")]
	private void Awake()
	{
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0x1189E78", Offset = "0x1189E78", VA = "0x1189E78", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0x1189F20", Offset = "0x1189F20", VA = "0x1189F20", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0x1189EA8", Offset = "0x1189EA8", VA = "0x1189EA8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7A771C", Offset = "0x7A771C")]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0x118A2E8", Offset = "0x118A2E8", VA = "0x118A2E8")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0x118A498", Offset = "0x118A498", VA = "0x118A498")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7A77DC", Offset = "0x7A77DC")]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0x118A650", Offset = "0x118A650", VA = "0x118A650")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7A785C", Offset = "0x7A785C")]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0x118A808", Offset = "0x118A808", VA = "0x118A808")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7A78DC", Offset = "0x7A78DC")]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0x118A9C0", Offset = "0x118A9C0", VA = "0x118A9C0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7A795C", Offset = "0x7A795C")]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0x118AB78", Offset = "0x118AB78", VA = "0x118AB78")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7A79DC", Offset = "0x7A79DC")]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0x118AD30", Offset = "0x118AD30", VA = "0x118AD30")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7A7A5C", Offset = "0x7A7A5C")]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0x118AEE8", Offset = "0x118AEE8", VA = "0x118AEE8")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0x118B028", Offset = "0x118B028", VA = "0x118B028")]
	public Vector3 GetCharacterPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0x118B05C", Offset = "0x118B05C", VA = "0x118B05C")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0x118B124", Offset = "0x118B124", VA = "0x118B124")]
	public void DoWarp(Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0x118B21C", Offset = "0x118B21C", VA = "0x118B21C")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x20000EF")]
public class SimpleCapsuleWithStickMovement : MonoBehaviour
{
	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableLinearMovement;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool EnableRotation;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool HMDRotatesPlayer;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool RotationEitherThumbstick;

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RotationAngle;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool ReadyToSnapTurn;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x14000011")]
	public event Action CameraUpdated
	{
		[Token(Token = "0x60003EE")]
		[Address(RVA = "0xC95C80", Offset = "0xC95C80", VA = "0xC95C80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A7D2C", Offset = "0x7A7D2C")]
		add
		{
		}
		[Token(Token = "0x60003EF")]
		[Address(RVA = "0xC95D20", Offset = "0xC95D20", VA = "0xC95D20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A7D3C", Offset = "0x7A7D3C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000012")]
	public event Action PreCharacterMove
	{
		[Token(Token = "0x60003F0")]
		[Address(RVA = "0xC95DC0", Offset = "0xC95DC0", VA = "0xC95DC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A7D4C", Offset = "0x7A7D4C")]
		add
		{
		}
		[Token(Token = "0x60003F1")]
		[Address(RVA = "0xC95E60", Offset = "0xC95E60", VA = "0xC95E60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A7D5C", Offset = "0x7A7D5C")]
		remove
		{
		}
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0xC95F00", Offset = "0xC95F00", VA = "0xC95F00")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0xC95FEC", Offset = "0xC95FEC", VA = "0xC95FEC")]
	private void Start()
	{
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0xC95FF0", Offset = "0xC95FF0", VA = "0xC95FF0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0xC96064", Offset = "0xC96064", VA = "0xC96064")]
	private void RotatePlayerToHMD()
	{
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0xC96188", Offset = "0xC96188", VA = "0xC96188")]
	private void StickMovement()
	{
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0xC96370", Offset = "0xC96370", VA = "0xC96370")]
	private void SnapTurn()
	{
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0xC96578", Offset = "0xC96578", VA = "0xC96578")]
	public SimpleCapsuleWithStickMovement()
	{
	}
}
[Token(Token = "0x20000F0")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x60003F9")]
	[Address(RVA = "0xDCD140", Offset = "0xDCD140", VA = "0xDCD140", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0xDCD1E0", Offset = "0xDCD1E0", VA = "0xDCD1E0", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x60003FB")]
	public abstract void GetPoints(List<Vector3> points);

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0xDCD2D0", Offset = "0xDCD2D0", VA = "0xDCD2D0")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x20000F1")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79A64C", Offset = "0x79A64C")]
	public float Range;

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0xDCD2E0", Offset = "0xDCD2E0", VA = "0xDCD2E0", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0xDCD3DC", Offset = "0xDCD3DC", VA = "0xDCD3DC")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x20000F2")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79A684", Offset = "0x79A684")]
	public float Range;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79A6BC", Offset = "0x79A6BC")]
	public float MinimumElevation;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79A6F4", Offset = "0x79A6F4")]
	public float Gravity;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79A72C", Offset = "0x79A72C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79A72C", Offset = "0x79A72C")]
	public float AimVelocity;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79A788", Offset = "0x79A788")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79A788", Offset = "0x79A788")]
	public float AimStep;

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0xDCD3EC", Offset = "0xDCD3EC", VA = "0xDCD3EC", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0xDCD57C", Offset = "0xDCD57C", VA = "0xDCD57C")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x20000F3")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79A7E0", Offset = "0x79A7E0")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _enterAimStateAction;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _exitAimStateAction;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] _linePoints;

	[Token(Token = "0x6000401")]
	[Address(RVA = "0xDCD590", Offset = "0xDCD590", VA = "0xDCD590")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0xDCD6CC", Offset = "0xDCD6CC", VA = "0xDCD6CC")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0xDCD6FC", Offset = "0xDCD6FC", VA = "0xDCD6FC")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0xDCD72C", Offset = "0xDCD72C", VA = "0xDCD72C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0xDCD7DC", Offset = "0xDCD7DC", VA = "0xDCD7DC", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0xDCD848", Offset = "0xDCD848", VA = "0xDCD848", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0xDCD8B0", Offset = "0xDCD8B0", VA = "0xDCD8B0")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x20000F4")]
public class TeleportDestination : MonoBehaviour
{
	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x79A818", Offset = "0x79A818")]
	private bool <IsValidDestination>k__BackingField;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79A828", Offset = "0x79A828")]
	public Transform PositionIndicator;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79A860", Offset = "0x79A860")]
	public Transform OrientationIndicator;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79A898", Offset = "0x79A898")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _eventsActive;

	[Token(Token = "0x17000054")]
	public bool IsValidDestination
	{
		[Token(Token = "0x6000408")]
		[Address(RVA = "0xDCD9D4", Offset = "0xDCD9D4", VA = "0xDCD9D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A7D6C", Offset = "0x7A7D6C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000409")]
		[Address(RVA = "0xDCD9DC", Offset = "0xDCD9DC", VA = "0xDCD9DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A7D7C", Offset = "0x7A7D7C")]
		private set
		{
		}
	}

	[Token(Token = "0x14000013")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x600040E")]
		[Address(RVA = "0xDCDB98", Offset = "0xDCDB98", VA = "0xDCDB98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A7D8C", Offset = "0x7A7D8C")]
		add
		{
		}
		[Token(Token = "0x600040F")]
		[Address(RVA = "0xDCDC38", Offset = "0xDCDC38", VA = "0xDCDC38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A7D9C", Offset = "0x7A7D9C")]
		remove
		{
		}
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0xDCD9E8", Offset = "0xDCD9E8", VA = "0xDCD9E8")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0xDCDA80", Offset = "0xDCDA80", VA = "0xDCDA80")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0xDCDB54", Offset = "0xDCDB54", VA = "0xDCDB54")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0xDCDB94", Offset = "0xDCDB94", VA = "0xDCDB94")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0xDCDCD8", Offset = "0xDCDCD8", VA = "0xDCDCD8")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0xDCDD3C", Offset = "0xDCDD3C", VA = "0xDCDD3C")]
	public void Recycle()
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0xDCDD5C", Offset = "0xDCDD5C", VA = "0xDCDD5C", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x20000F5")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x20000F6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7964E0", Offset = "0x7964E0")]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x17000055")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600041F")]
			[Address(RVA = "0xCC22D0", Offset = "0xCC22D0", VA = "0xCC22D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000056")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000421")]
			[Address(RVA = "0xCC2318", Offset = "0xCC2318", VA = "0xCC2318", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600041C")]
		[Address(RVA = "0xCC2208", Offset = "0xCC2208", VA = "0xCC2208")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x600041D")]
		[Address(RVA = "0xCC2234", Offset = "0xCC2234", VA = "0xCC2234", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600041E")]
		[Address(RVA = "0xCC2238", Offset = "0xCC2238", VA = "0xCC2238", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000420")]
		[Address(RVA = "0xCC22D8", Offset = "0xCC22D8", VA = "0xCC22D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000F7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7964F0", Offset = "0x7964F0")]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x17000057")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000425")]
			[Address(RVA = "0xCC21B8", Offset = "0xCC21B8", VA = "0xCC21B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000058")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000427")]
			[Address(RVA = "0xCC2200", Offset = "0xCC2200", VA = "0xCC2200", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000422")]
		[Address(RVA = "0xCC20EC", Offset = "0xCC20EC", VA = "0xCC20EC")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000423")]
		[Address(RVA = "0xCC2118", Offset = "0xCC2118", VA = "0xCC2118", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000424")]
		[Address(RVA = "0xCC211C", Offset = "0xCC211C", VA = "0xCC211C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000426")]
		[Address(RVA = "0xCC21C0", Offset = "0xCC21C0", VA = "0xCC21C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _startReadyAction;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x6000413")]
	[Address(RVA = "0xDCDF70", Offset = "0xDCDF70", VA = "0xDCDF70")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0xDCE044", Offset = "0xDCE044", VA = "0xDCE044", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0xDCE0A4", Offset = "0xDCE0A4", VA = "0xDCE0A4", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0xDCE164", Offset = "0xDCE164", VA = "0xDCE164")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7A7DAC", Offset = "0x7A7DAC")]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0xDCE1DC", Offset = "0xDCE1DC", VA = "0xDCE1DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7A7E0C", Offset = "0x7A7E0C")]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000418")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x6000419")]
	public abstract void GetAimData(out Ray aimRay);

	[Token(Token = "0x600041A")]
	[Address(RVA = "0xDCE254", Offset = "0xDCE254", VA = "0xDCE254")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A7E6C", Offset = "0x7A7E6C")]
	private void <.ctor>b__2_0()
	{
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0xDCE280", Offset = "0xDCE280", VA = "0xDCE280")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A7E7C", Offset = "0x7A7E7C")]
	private void <.ctor>b__2_1()
	{
	}
}
[Token(Token = "0x20000F8")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x79A8E0", Offset = "0x79A8E0")]
	private Transform <Pointer>k__BackingField;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79A8F0", Offset = "0x79A8F0")]
	public OVRInput.RawButton AimButton;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79A928", Offset = "0x79A928")]
	public OVRInput.RawButton TeleportButton;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79A960", Offset = "0x79A960")]
	public bool FastTeleport;

	[Token(Token = "0x17000059")]
	public Transform Pointer
	{
		[Token(Token = "0x6000428")]
		[Address(RVA = "0xDCE2AC", Offset = "0xDCE2AC", VA = "0xDCE2AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A7F2C", Offset = "0x7A7F2C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000429")]
		[Address(RVA = "0xDCE2B4", Offset = "0xDCE2B4", VA = "0xDCE2B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A7F3C", Offset = "0x7A7F3C")]
		private set
		{
		}
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0xDCE2BC", Offset = "0xDCE2BC", VA = "0xDCE2BC", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0xDCE414", Offset = "0xDCE414", VA = "0xDCE414", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0xDCE4CC", Offset = "0xDCE4CC", VA = "0xDCE4CC")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x20000F9")]
public class TeleportInputHandlerTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x20000FA")]
	public enum InputModes
	{
		[Token(Token = "0x40005E7")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x40005E8")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x40005E9")]
		ThumbstickTeleport,
		[Token(Token = "0x40005EA")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x20000FB")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x40005EC")]
		A,
		[Token(Token = "0x40005ED")]
		B,
		[Token(Token = "0x40005EE")]
		LeftTrigger,
		[Token(Token = "0x40005EF")]
		LeftThumbstick,
		[Token(Token = "0x40005F0")]
		RightTrigger,
		[Token(Token = "0x40005F1")]
		RightThumbstick,
		[Token(Token = "0x40005F2")]
		X,
		[Token(Token = "0x40005F3")]
		Y
	}

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LeftHand;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform RightHand;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79A998", Offset = "0x79A998")]
	public InputModes InputMode;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79A9D0", Offset = "0x79A9D0")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79AA08", Offset = "0x79AA08")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79AA40", Offset = "0x79AA40")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x600042D")]
	[Address(RVA = "0xDCE4D0", Offset = "0xDCE4D0", VA = "0xDCE4D0")]
	private void Start()
	{
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0xDCE4D4", Offset = "0xDCE4D4", VA = "0xDCE4D4", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0xDCE8BC", Offset = "0xDCE8BC", VA = "0xDCE8BC", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0xDCE97C", Offset = "0xDCE97C", VA = "0xDCE97C")]
	public TeleportInputHandlerTouch()
	{
	}
}
[Token(Token = "0x20000FC")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x20000FD")]
	public enum OrientationModes
	{
		[Token(Token = "0x40005F8")]
		HeadRelative,
		[Token(Token = "0x40005F9")]
		ForwardFacing
	}

	[Token(Token = "0x20000FE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x796500", Offset = "0x796500")]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x1700005A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600043D")]
			[Address(RVA = "0xCC2400", Offset = "0xCC2400", VA = "0xCC2400", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600043F")]
			[Address(RVA = "0xCC2448", Offset = "0xCC2448", VA = "0xCC2448", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600043A")]
		[Address(RVA = "0xCC2320", Offset = "0xCC2320", VA = "0xCC2320")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x600043B")]
		[Address(RVA = "0xCC234C", Offset = "0xCC234C", VA = "0xCC234C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600043C")]
		[Address(RVA = "0xCC2350", Offset = "0xCC2350", VA = "0xCC2350", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600043E")]
		[Address(RVA = "0xCC2408", Offset = "0xCC2408", VA = "0xCC2408", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _updateOrientationAction;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x6000431")]
	[Address(RVA = "0xDCEA60", Offset = "0xDCEA60", VA = "0xDCEA60")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0xDCEB54", Offset = "0xDCEB54", VA = "0xDCEB54")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0xDCEB5C", Offset = "0xDCEB5C", VA = "0xDCEB5C", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0xDCEBA8", Offset = "0xDCEBA8", VA = "0xDCEBA8", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0xDCEBF0", Offset = "0xDCEBF0", VA = "0xDCEBF0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7A7F4C", Offset = "0x7A7F4C")]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000436")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x6000437")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x6000438")]
	[Address(RVA = "0xDCEC68", Offset = "0xDCEC68", VA = "0xDCEC68")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0xDCED24", Offset = "0xDCED24", VA = "0xDCED24")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A7FAC", Offset = "0x7A7FAC")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x20000FF")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x6000440")]
	[Address(RVA = "0xDCED50", Offset = "0xDCED50", VA = "0xDCED50", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0xDCED54", Offset = "0xDCED54", VA = "0xDCED54", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0xDCEDD0", Offset = "0xDCEDD0", VA = "0xDCEDD0")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x2000100")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79AA78", Offset = "0x79AA78")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79AAB0", Offset = "0x79AAB0")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79AAE8", Offset = "0x79AAE8")]
	public float AimDistanceThreshold;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79AB20", Offset = "0x79AB20")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _initialRotation;

	[Token(Token = "0x6000443")]
	[Address(RVA = "0xDCEDD4", Offset = "0xDCEDD4", VA = "0xDCEDD4", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0xDCEE00", Offset = "0xDCEE00", VA = "0xDCEE00", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0xDCF1B0", Offset = "0xDCF1B0", VA = "0xDCF1B0")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x2000101")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79AB58", Offset = "0x79AB58")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79AB90", Offset = "0x79AB90")]
	public OVRInput.Controller Thumbstick;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79ABC8", Offset = "0x79ABC8")]
	public float RotateStickThreshold;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _initialRotation;

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion _currentRotation;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 _lastValidDirection;

	[Token(Token = "0x6000446")]
	[Address(RVA = "0xDCF1B4", Offset = "0xDCF1B4", VA = "0xDCF1B4", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0xDCF1F8", Offset = "0xDCF1F8", VA = "0xDCF1F8", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0xDCF5A0", Offset = "0xDCF5A0", VA = "0xDCF5A0")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x2000102")]
public class TeleportPoint : MonoBehaviour
{
	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dimmingSpeed;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fullIntensity;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowIntensity;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform destTransform;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastLookAtTime;

	[Token(Token = "0x6000449")]
	[Address(RVA = "0xDCF708", Offset = "0xDCF708", VA = "0xDCF708")]
	private void Start()
	{
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0xDCF70C", Offset = "0xDCF70C", VA = "0xDCF70C")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0xDCF714", Offset = "0xDCF714", VA = "0xDCF714")]
	private void Update()
	{
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0xDCF7D0", Offset = "0xDCF7D0", VA = "0xDCF7D0")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0xDCF7F8", Offset = "0xDCF7F8", VA = "0xDCF7F8")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x2000103")]
public abstract class TeleportSupport : MonoBehaviour
{
	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x79AC00", Offset = "0x79AC00")]
	private LocomotionTeleport <LocomotionTeleport>k__BackingField;

	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _eventsActive;

	[Token(Token = "0x1700005C")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x600044E")]
		[Address(RVA = "0xDCF810", Offset = "0xDCF810", VA = "0xDCF810")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A800C", Offset = "0x7A800C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600044F")]
		[Address(RVA = "0xDCF818", Offset = "0xDCF818", VA = "0xDCF818")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A801C", Offset = "0x7A801C")]
		private set
		{
		}
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0xDCD174", Offset = "0xDCD174", VA = "0xDCD174", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0xDCD29C", Offset = "0xDCD29C", VA = "0xDCD29C", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0xDCF820", Offset = "0xDCF820", VA = "0xDCF820")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x7A802C", Offset = "0x7A802C")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0xDCD83C", Offset = "0xDCD83C", VA = "0xDCD83C", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0xDCD8A8", Offset = "0xDCD8A8", VA = "0xDCD8A8", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0xDCD2D8", Offset = "0xDCD2D8", VA = "0xDCD2D8")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x2000104")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x2000105")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x796510", Offset = "0x796510")]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x1700005D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000461")]
			[Address(RVA = "0xCC2720", Offset = "0xCC2720", VA = "0xCC2720", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000463")]
			[Address(RVA = "0xCC2768", Offset = "0xCC2768", VA = "0xCC2768", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600045E")]
		[Address(RVA = "0xCC2450", Offset = "0xCC2450", VA = "0xCC2450")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x600045F")]
		[Address(RVA = "0xCC247C", Offset = "0xCC247C", VA = "0xCC247C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000460")]
		[Address(RVA = "0xCC2480", Offset = "0xCC2480", VA = "0xCC2480", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000462")]
		[Address(RVA = "0xCC2728", Offset = "0xCC2728", VA = "0xCC2728", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79AC10", Offset = "0x79AC10")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<Vector3> _aimPoints;

	[Token(Token = "0x4000613")]
	private const float ERROR_MARGIN = 0.1f;

	[Token(Token = "0x6000456")]
	[Address(RVA = "0xDCF8FC", Offset = "0xDCF8FC", VA = "0xDCF8FC")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x6000457")]
	[Address(RVA = "0xDCFA0C", Offset = "0xDCFA0C", VA = "0xDCFA0C", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0xDCFA38", Offset = "0xDCFA38", VA = "0xDCFA38", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000459")]
	[Address(RVA = "0xDCFA60", Offset = "0xDCFA60", VA = "0xDCFA60")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7A8064", Offset = "0x7A8064")]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0xDCFAD8", Offset = "0xDCFAD8", VA = "0xDCFAD8", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x600045B")]
	protected abstract bool ConsiderTeleport(Vector3 start, ref Vector3 end);

	[Token(Token = "0x600045C")]
	[Address(RVA = "0xDCFAF4", Offset = "0xDCFAF4", VA = "0xDCFAF4", Slot = "10")]
	public virtual Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0xDCFC14", Offset = "0xDCFC14", VA = "0xDCFC14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A80C4", Offset = "0x7A80C4")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x2000106")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int NavMeshAreaMask;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshPath _path;

	[Token(Token = "0x6000464")]
	[Address(RVA = "0xDCFC40", Offset = "0xDCFC40", VA = "0xDCFC40")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0xDCFCA4", Offset = "0xDCFCA4", VA = "0xDCFCA4", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0xDCFD9C", Offset = "0xDCFD9C", VA = "0xDCFD9C", Slot = "10")]
	public override Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0xDCFE94", Offset = "0xDCFE94", VA = "0xDCFE94")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x7A8124", Offset = "0x7A8124")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0xDCFE98", Offset = "0xDCFE98", VA = "0xDCFE98")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x2000107")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79AC48", Offset = "0x79AC48")]
	public float LOSOffset;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79AC80", Offset = "0x79AC80")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x6000469")]
	[Address(RVA = "0xDCFEA4", Offset = "0xDCFEA4", VA = "0xDCFEA4", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0xDD00B0", Offset = "0xDD00B0", VA = "0xDD00B0")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x2000108")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x600046B")]
	[Address(RVA = "0xDD00BC", Offset = "0xDD00BC", VA = "0xDD00BC", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0xDD01B4", Offset = "0xDD01B4", VA = "0xDD01B4")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x2000109")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x600046D")]
	[Address(RVA = "0xE7E5C8", Offset = "0xE7E5C8", VA = "0xE7E5C8", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0xE7E65C", Offset = "0xE7E65C", VA = "0xE7E65C", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600046F")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x6000470")]
	[Address(RVA = "0xE7E6F0", Offset = "0xE7E6F0", VA = "0xE7E6F0")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x200010A")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x200010B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x796520", Offset = "0x796520")]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400061E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400061F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x4000621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x4000622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <teleportTime>5__3;

		[Token(Token = "0x4000623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <teleported>5__4;

		[Token(Token = "0x1700005F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000477")]
			[Address(RVA = "0xCC28A8", Offset = "0xCC28A8", VA = "0xCC28A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000060")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000479")]
			[Address(RVA = "0xCC28F0", Offset = "0xCC28F0", VA = "0xCC28F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000474")]
		[Address(RVA = "0xCC2770", Offset = "0xCC2770", VA = "0xCC2770")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000475")]
		[Address(RVA = "0xCC279C", Offset = "0xCC279C", VA = "0xCC279C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000476")]
		[Address(RVA = "0xCC27A0", Offset = "0xCC27A0", VA = "0xCC27A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000478")]
		[Address(RVA = "0xCC28B0", Offset = "0xCC28B0", VA = "0xCC28B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79ACB8", Offset = "0x79ACB8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79ACB8", Offset = "0x79ACB8")]
	public float TransitionDuration;

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79AD10", Offset = "0x79AD10")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79AD10", Offset = "0x79AD10")]
	public float TeleportDelay;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79AD64", Offset = "0x79AD64")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x6000471")]
	[Address(RVA = "0xE7E6F8", Offset = "0xE7E6F8", VA = "0xE7E6F8", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0xE7E724", Offset = "0xE7E724", VA = "0xE7E724")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7A815C", Offset = "0x7A815C")]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0xE7E79C", Offset = "0xE7E79C", VA = "0xE7E79C")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x200010C")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x600047A")]
	[Address(RVA = "0xE7E948", Offset = "0xE7E948", VA = "0xE7E948", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x600047B")]
	[Address(RVA = "0xE7E964", Offset = "0xE7E964", VA = "0xE7E964")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x200010D")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x200010E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x796530", Offset = "0x796530")]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x4000629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x400062A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x17000061")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000482")]
			[Address(RVA = "0xCC2A64", Offset = "0xCC2A64", VA = "0xCC2A64", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000062")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000484")]
			[Address(RVA = "0xCC2AAC", Offset = "0xCC2AAC", VA = "0xCC2AAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600047F")]
		[Address(RVA = "0xCC28F8", Offset = "0xCC28F8", VA = "0xCC28F8")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000480")]
		[Address(RVA = "0xCC2924", Offset = "0xCC2924", VA = "0xCC2924", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000481")]
		[Address(RVA = "0xCC2928", Offset = "0xCC2928", VA = "0xCC2928", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000483")]
		[Address(RVA = "0xCC2A6C", Offset = "0xCC2A6C", VA = "0xCC2A6C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79AD9C", Offset = "0x79AD9C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79AD9C", Offset = "0x79AD9C")]
	public float TransitionDuration;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x600047C")]
	[Address(RVA = "0xE7E96C", Offset = "0xE7E96C", VA = "0xE7E96C", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0xE7E998", Offset = "0xE7E998", VA = "0xE7E998")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7A820C", Offset = "0x7A820C")]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0xE7EA10", Offset = "0xE7EA10", VA = "0xE7EA10")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x200010F")]
public static class NativeVideoPlayer
{
	[Token(Token = "0x2000110")]
	public enum PlabackState
	{
		[Token(Token = "0x4000643")]
		Idle = 1,
		[Token(Token = "0x4000644")]
		Preparing,
		[Token(Token = "0x4000645")]
		Buffering,
		[Token(Token = "0x4000646")]
		Ready,
		[Token(Token = "0x4000647")]
		Ended
	}

	[Token(Token = "0x2000111")]
	public enum StereoMode
	{
		[Token(Token = "0x4000649")]
		Unknown = -1,
		[Token(Token = "0x400064A")]
		Mono,
		[Token(Token = "0x400064B")]
		TopBottom,
		[Token(Token = "0x400064C")]
		LeftRight,
		[Token(Token = "0x400064D")]
		Mesh
	}

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr? _Activity;

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IntPtr? _VideoPlayerClass;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly jvalue[] EmptyParams;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static IntPtr getIsPlayingMethodId;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static IntPtr getCurrentPlaybackStateMethodId;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static IntPtr getDurationMethodId;

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static IntPtr getStereoModeMethodId;

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static IntPtr getWidthMethodId;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static IntPtr getHeightMethodId;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static IntPtr getPlaybackPositionMethodId;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static IntPtr setPlaybackPositionMethodId;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static jvalue[] setPlaybackPositionParams;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static IntPtr playVideoMethodId;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static jvalue[] playVideoParams;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static IntPtr stopMethodId;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static IntPtr resumeMethodId;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static IntPtr pauseMethodId;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static IntPtr setPlaybackSpeedMethodId;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static jvalue[] setPlaybackSpeedParams;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private static IntPtr setLoopingMethodId;

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private static jvalue[] setLoopingParams;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private static IntPtr setListenerRotationQuaternionMethodId;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private static jvalue[] setListenerRotationQuaternionParams;

	[Token(Token = "0x17000063")]
	private static IntPtr VideoPlayerClass
	{
		[Token(Token = "0x6000485")]
		[Address(RVA = "0x12F3D9C", Offset = "0x12F3D9C", VA = "0x12F3D9C")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000064")]
	private static IntPtr Activity
	{
		[Token(Token = "0x6000486")]
		[Address(RVA = "0x12F40CC", Offset = "0x12F40CC", VA = "0x12F40CC")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000065")]
	public static bool IsAvailable
	{
		[Token(Token = "0x6000487")]
		[Address(RVA = "0x12F439C", Offset = "0x12F439C", VA = "0x12F439C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000066")]
	public static bool IsPlaying
	{
		[Token(Token = "0x6000488")]
		[Address(RVA = "0x12F440C", Offset = "0x12F440C", VA = "0x12F440C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000067")]
	public static PlabackState CurrentPlaybackState
	{
		[Token(Token = "0x6000489")]
		[Address(RVA = "0x12F451C", Offset = "0x12F451C", VA = "0x12F451C")]
		get
		{
			return default(PlabackState);
		}
	}

	[Token(Token = "0x17000068")]
	public static long Duration
	{
		[Token(Token = "0x600048A")]
		[Address(RVA = "0x12F4630", Offset = "0x12F4630", VA = "0x12F4630")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x17000069")]
	public static StereoMode VideoStereoMode
	{
		[Token(Token = "0x600048B")]
		[Address(RVA = "0x12F4744", Offset = "0x12F4744", VA = "0x12F4744")]
		get
		{
			return default(StereoMode);
		}
	}

	[Token(Token = "0x1700006A")]
	public static int VideoWidth
	{
		[Token(Token = "0x600048C")]
		[Address(RVA = "0x12F4858", Offset = "0x12F4858", VA = "0x12F4858")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700006B")]
	public static int VideoHeight
	{
		[Token(Token = "0x600048D")]
		[Address(RVA = "0x12F496C", Offset = "0x12F496C", VA = "0x12F496C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700006C")]
	public static long PlaybackPosition
	{
		[Token(Token = "0x600048E")]
		[Address(RVA = "0x12F4A80", Offset = "0x12F4A80", VA = "0x12F4A80")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x600048F")]
		[Address(RVA = "0x12F4B94", Offset = "0x12F4B94", VA = "0x12F4B94")]
		set
		{
		}
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0x12F4D08", Offset = "0x12F4D08", VA = "0x12F4D08")]
	public static void PlayVideo(string path, string drmLicenseUrl, IntPtr surfaceObj)
	{
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0x12F4F34", Offset = "0x12F4F34", VA = "0x12F4F34")]
	public static void Stop()
	{
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0x12F5048", Offset = "0x12F5048", VA = "0x12F5048")]
	public static void Play()
	{
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0x12F515C", Offset = "0x12F515C", VA = "0x12F515C")]
	public static void Pause()
	{
	}

	[Token(Token = "0x6000494")]
	[Address(RVA = "0x12F5270", Offset = "0x12F5270", VA = "0x12F5270")]
	public static void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0x12F53EC", Offset = "0x12F53EC", VA = "0x12F53EC")]
	public static void SetLooping(bool looping)
	{
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0x12F5564", Offset = "0x12F5564", VA = "0x12F5564")]
	public static void SetListenerRotation(Quaternion rotation)
	{
	}
}
[Token(Token = "0x2000112")]
public class ButtonDownListener : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x14000014")]
	public event Action onButtonDown
	{
		[Token(Token = "0x6000498")]
		[Address(RVA = "0xAF2DD8", Offset = "0xAF2DD8", VA = "0xAF2DD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A82BC", Offset = "0x7A82BC")]
		add
		{
		}
		[Token(Token = "0x6000499")]
		[Address(RVA = "0xAF2E78", Offset = "0xAF2E78", VA = "0xAF2E78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A82CC", Offset = "0x7A82CC")]
		remove
		{
		}
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0xAF2F18", Offset = "0xAF2F18", VA = "0xAF2F18", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0xAF2F2C", Offset = "0xAF2F2C", VA = "0xAF2F2C")]
	public ButtonDownListener()
	{
	}
}
[Token(Token = "0x2000113")]
public class MediaPlayerImage : Image
{
	[Token(Token = "0x2000114")]
	public enum ButtonType
	{
		[Token(Token = "0x4000651")]
		Play,
		[Token(Token = "0x4000652")]
		Pause,
		[Token(Token = "0x4000653")]
		FastForward,
		[Token(Token = "0x4000654")]
		Rewind,
		[Token(Token = "0x4000655")]
		SkipForward,
		[Token(Token = "0x4000656")]
		SkipBack,
		[Token(Token = "0x4000657")]
		Stop
	}

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private ButtonType m_ButtonType;

	[Token(Token = "0x1700006D")]
	public ButtonType buttonType
	{
		[Token(Token = "0x600049C")]
		[Address(RVA = "0x1196F44", Offset = "0x1196F44", VA = "0x1196F44")]
		get
		{
			return default(ButtonType);
		}
		[Token(Token = "0x600049D")]
		[Address(RVA = "0x1196F4C", Offset = "0x1196F4C", VA = "0x1196F4C")]
		set
		{
		}
	}

	[Token(Token = "0x600049E")]
	[Address(RVA = "0x1196F70", Offset = "0x1196F70", VA = "0x1196F70", Slot = "44")]
	protected override void OnPopulateMesh(VertexHelper toFill)
	{
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0x1198408", Offset = "0x1198408", VA = "0x1198408")]
	public MediaPlayerImage()
	{
	}
}
[Token(Token = "0x2000115")]
public class MoviePlayerSample : MonoBehaviour
{
	[Token(Token = "0x2000116")]
	public enum VideoShape
	{
		[Token(Token = "0x400066C")]
		_360,
		[Token(Token = "0x400066D")]
		_180,
		[Token(Token = "0x400066E")]
		Quad
	}

	[Token(Token = "0x2000117")]
	public enum VideoStereo
	{
		[Token(Token = "0x4000670")]
		Mono,
		[Token(Token = "0x4000671")]
		TopBottom,
		[Token(Token = "0x4000672")]
		LeftRight,
		[Token(Token = "0x4000673")]
		BottomTop
	}

	[Token(Token = "0x2000118")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x796540", Offset = "0x796540")]
	private sealed class <Start>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x17000071")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004B6")]
			[Address(RVA = "0xCBB8D4", Offset = "0xCBB8D4", VA = "0xCBB8D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000072")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004B8")]
			[Address(RVA = "0xCBB91C", Offset = "0xCBB91C", VA = "0xCBB91C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004B3")]
		[Address(RVA = "0xCBB6E0", Offset = "0xCBB6E0", VA = "0xCBB6E0")]
		[DebuggerHidden]
		public <Start>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x60004B4")]
		[Address(RVA = "0xCBB70C", Offset = "0xCBB70C", VA = "0xCBB70C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004B5")]
		[Address(RVA = "0xCBB710", Offset = "0xCBB710", VA = "0xCBB710", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004B7")]
		[Address(RVA = "0xCBB8DC", Offset = "0xCBB8DC", VA = "0xCBB8DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000119")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x796550", Offset = "0x796550")]
	private sealed class <>c__DisplayClass34_0
	{
		[Token(Token = "0x4000677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string moviePath;

		[Token(Token = "0x4000678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string drmLicencesUrl;

		[Token(Token = "0x4000679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x60004B9")]
		[Address(RVA = "0xCBB5E8", Offset = "0xCBB5E8", VA = "0xCBB5E8")]
		public <>c__DisplayClass34_0()
		{
		}

		[Token(Token = "0x60004BA")]
		[Address(RVA = "0xCBB5F0", Offset = "0xCBB5F0", VA = "0xCBB5F0")]
		internal void <Play>b__0()
		{
		}
	}

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool videoPausedBeforeAppPause;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVROverlay overlay;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer mediaRenderer;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x79AE24", Offset = "0x79AE24")]
	private bool <IsPlaying>k__BackingField;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x79AE34", Offset = "0x79AE34")]
	private long <Duration>k__BackingField;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x79AE44", Offset = "0x79AE44")]
	private long <PlaybackPosition>k__BackingField;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RenderTexture copyTexture;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material externalTex2DMaterial;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string MovieName;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string DrmLicenseUrl;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool LoopVideo;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public VideoShape Shape;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VideoStereo Stereo;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool AutoDetectStereoLayout;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	public bool DisplayMono;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VideoShape _LastShape;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private VideoStereo _LastStereo;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _LastDisplayMono;

	[Token(Token = "0x1700006E")]
	public bool IsPlaying
	{
		[Token(Token = "0x60004A0")]
		[Address(RVA = "0x1F5CA68", Offset = "0x1F5CA68", VA = "0x1F5CA68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A82DC", Offset = "0x7A82DC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004A1")]
		[Address(RVA = "0x1F5CA70", Offset = "0x1F5CA70", VA = "0x1F5CA70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A82EC", Offset = "0x7A82EC")]
		private set
		{
		}
	}

	[Token(Token = "0x1700006F")]
	public long Duration
	{
		[Token(Token = "0x60004A2")]
		[Address(RVA = "0x1F5CA7C", Offset = "0x1F5CA7C", VA = "0x1F5CA7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A82FC", Offset = "0x7A82FC")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x60004A3")]
		[Address(RVA = "0x1F5CA84", Offset = "0x1F5CA84", VA = "0x1F5CA84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A830C", Offset = "0x7A830C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000070")]
	public long PlaybackPosition
	{
		[Token(Token = "0x60004A4")]
		[Address(RVA = "0x1F5CA8C", Offset = "0x1F5CA8C", VA = "0x1F5CA8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A831C", Offset = "0x7A831C")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x60004A5")]
		[Address(RVA = "0x1F5CA94", Offset = "0x1F5CA94", VA = "0x1F5CA94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A832C", Offset = "0x7A832C")]
		private set
		{
		}
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0x1F5CA9C", Offset = "0x1F5CA9C", VA = "0x1F5CA9C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0x1F5CD48", Offset = "0x1F5CD48", VA = "0x1F5CD48")]
	private bool IsLocalVideo(string movieName)
	{
		return default(bool);
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0x1F5CDAC", Offset = "0x1F5CDAC", VA = "0x1F5CDAC")]
	private void UpdateShapeAndStereo()
	{
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0x1F5D0E4", Offset = "0x1F5D0E4", VA = "0x1F5D0E4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7A833C", Offset = "0x7A833C")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0x1F5D15C", Offset = "0x1F5D15C", VA = "0x1F5D15C")]
	public void Play(string moviePath, string drmLicencesUrl)
	{
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0x1F5D444", Offset = "0x1F5D444", VA = "0x1F5D444")]
	public void Play()
	{
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0x1F5D4D8", Offset = "0x1F5D4D8", VA = "0x1F5D4D8")]
	public void Pause()
	{
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0x1F5D568", Offset = "0x1F5D568", VA = "0x1F5D568")]
	public void SeekTo(long position)
	{
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0x1F5D66C", Offset = "0x1F5D66C", VA = "0x1F5D66C")]
	private void Update()
	{
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0x1F5DC34", Offset = "0x1F5DC34", VA = "0x1F5DC34")]
	public void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0x1F5DCEC", Offset = "0x1F5DCEC", VA = "0x1F5DCEC")]
	public void Stop()
	{
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0x1F5DD7C", Offset = "0x1F5DD7C", VA = "0x1F5DD7C")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0x1F5DE68", Offset = "0x1F5DE68", VA = "0x1F5DE68")]
	public MoviePlayerSample()
	{
	}
}
[Token(Token = "0x200011A")]
public class MoviePlayerSampleControls : MonoBehaviour
{
	[Token(Token = "0x200011B")]
	private enum PlaybackState
	{
		[Token(Token = "0x4000690")]
		Playing,
		[Token(Token = "0x4000691")]
		Paused,
		[Token(Token = "0x4000692")]
		Rewinding,
		[Token(Token = "0x4000693")]
		FastForwarding
	}

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MoviePlayerSample Player;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInputModule InputModule;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRGazePointer GazePointer;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject LeftHand;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject RightHand;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Canvas Canvas;

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ButtonDownListener PlayPause;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MediaPlayerImage PlayPauseImage;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UnityEngine.UI.Slider ProgressBar;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ButtonDownListener FastForward;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MediaPlayerImage FastForwardImage;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ButtonDownListener Rewind;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MediaPlayerImage RewindImage;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float TimeoutTime;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _isVisible;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _lastButtonTime;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool _didSeek;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private long _seekPreviousPosition;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private long _rewindStartPosition;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float _rewindStartTime;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private PlaybackState _state;

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0x1F5DE78", Offset = "0x1F5DE78", VA = "0x1F5DE78")]
	private void Start()
	{
	}

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0x1F5E184", Offset = "0x1F5E184", VA = "0x1F5E184")]
	private void OnPlayPauseClicked()
	{
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0x1F5E2B0", Offset = "0x1F5E2B0", VA = "0x1F5E2B0")]
	private void OnFastForwardClicked()
	{
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0x1F5E3BC", Offset = "0x1F5E3BC", VA = "0x1F5E3BC")]
	private void OnRewindClicked()
	{
	}

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0x1F5E49C", Offset = "0x1F5E49C", VA = "0x1F5E49C")]
	private void OnSeekBarMoved(float value)
	{
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0x1F5E390", Offset = "0x1F5E390", VA = "0x1F5E390")]
	private void Seek(long pos)
	{
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0x1F5E4FC", Offset = "0x1F5E4FC", VA = "0x1F5E4FC")]
	private void Update()
	{
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0x1F5E070", Offset = "0x1F5E070", VA = "0x1F5E070")]
	private void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0x1F5E860", Offset = "0x1F5E860", VA = "0x1F5E860")]
	public MoviePlayerSampleControls()
	{
	}
}
[Token(Token = "0x200011C")]
public static class VectorUtil
{
	[Token(Token = "0x60004C4")]
	[Address(RVA = "0xACE364", Offset = "0xACE364", VA = "0xACE364")]
	public static Vector4 ToVector(this Rect rect)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x200011D")]
public class AppDeeplinkUI : MonoBehaviour
{
	[Token(Token = "0x4000694")]
	private const ulong UNITY_COMPANION_APP_ID = 3535750239844224uL;

	[Token(Token = "0x4000695")]
	private const ulong UNREAL_COMPANION_APP_ID = 4055411724486843uL;

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform deeplinkAppId;

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform deeplinkMessage;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform uiLaunchType;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RectTransform uiLaunchSource;

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RectTransform uiDeepLinkMessage;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool inMenu;

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0xAE5320", Offset = "0xAE5320", VA = "0xAE5320")]
	private void Start()
	{
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0xAE5734", Offset = "0xAE5734", VA = "0xAE5734")]
	private void Update()
	{
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0xAE59C0", Offset = "0xAE59C0", VA = "0xAE59C0")]
	private void LaunchUnrealDeeplinkSample()
	{
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0xAE5B28", Offset = "0xAE5B28", VA = "0xAE5B28")]
	private void LaunchSelf()
	{
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0xAE5C94", Offset = "0xAE5C94", VA = "0xAE5C94")]
	private void LaunchOtherApp()
	{
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0xAE5E24", Offset = "0xAE5E24", VA = "0xAE5E24")]
	public AppDeeplinkUI()
	{
	}
}
[Token(Token = "0x200011E")]
public class CustomDebugUI : MonoBehaviour
{
	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform textPrefab;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CustomDebugUI instance;

	[Token(Token = "0x400069E")]
	private const BindingFlags privateFlags = BindingFlags.Instance | BindingFlags.NonPublic;

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0xB74930", Offset = "0xB74930", VA = "0xB74930")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0xB74984", Offset = "0xB74984", VA = "0xB74984")]
	private void Start()
	{
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0xB74988", Offset = "0xB74988", VA = "0xB74988")]
	private void Update()
	{
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0xB7498C", Offset = "0xB7498C", VA = "0xB7498C")]
	public RectTransform AddTextField(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0xB74C00", Offset = "0xB74C00", VA = "0xB74C00")]
	public void RemoveFromCanvas(RectTransform element, int targetCanvas = 0)
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0xB74E30", Offset = "0xB74E30", VA = "0xB74E30")]
	public CustomDebugUI()
	{
	}
}
[Token(Token = "0x200011F")]
public class DebugUISample : MonoBehaviour
{
	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inMenu;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text sliderText;

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0xB7774C", Offset = "0xB7774C", VA = "0xB7774C")]
	private void Start()
	{
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0xB77C68", Offset = "0xB77C68", VA = "0xB77C68")]
	public void TogglePressed(Toggle t)
	{
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0xB77D28", Offset = "0xB77D28", VA = "0xB77D28")]
	public void RadioPressed(string radioLabel, string group, Toggle t)
	{
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0xB77FA8", Offset = "0xB77FA8", VA = "0xB77FA8")]
	public void SliderPressed(float f)
	{
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0xB78088", Offset = "0xB78088", VA = "0xB78088")]
	private void Update()
	{
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0xB7816C", Offset = "0xB7816C", VA = "0xB7816C")]
	private void LogButtonPressed()
	{
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0xB781E0", Offset = "0xB781E0", VA = "0xB781E0")]
	public DebugUISample()
	{
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0xB781E8", Offset = "0xB781E8", VA = "0xB781E8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A83FC", Offset = "0x7A83FC")]
	private void <Start>b__2_0(Toggle t)
	{
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0xB7824C", Offset = "0xB7824C", VA = "0xB7824C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A840C", Offset = "0x7A840C")]
	private void <Start>b__2_1(Toggle t)
	{
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0xB782B0", Offset = "0xB782B0", VA = "0xB782B0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A841C", Offset = "0x7A841C")]
	private void <Start>b__2_2(Toggle t)
	{
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0xB78314", Offset = "0xB78314", VA = "0xB78314")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A842C", Offset = "0x7A842C")]
	private void <Start>b__2_3(Toggle t)
	{
	}
}
[Token(Token = "0x2000120")]
public class AnalyticsUI : MonoBehaviour
{
	[Token(Token = "0x60004DC")]
	[Address(RVA = "0xAE22A0", Offset = "0xAE22A0", VA = "0xAE22A0")]
	public AnalyticsUI()
	{
	}
}
[Token(Token = "0x2000121")]
public class SampleUI : MonoBehaviour
{
	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform collectionButton;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform inputText;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform valueText;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool inMenu;

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0xC8CE48", Offset = "0xC8CE48", VA = "0xC8CE48")]
	private void Start()
	{
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0xC8CEEC", Offset = "0xC8CEEC", VA = "0xC8CEEC")]
	private void Update()
	{
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0xC8CFD8", Offset = "0xC8CFD8", VA = "0xC8CFD8")]
	private string GetText()
	{
		return null;
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0xC8D038", Offset = "0xC8D038", VA = "0xC8D038")]
	public SampleUI()
	{
	}
}
[Token(Token = "0x2000122")]
public class StartCrashlytics : MonoBehaviour
{
	[Token(Token = "0x60004E1")]
	[Address(RVA = "0xDC4D48", Offset = "0xDC4D48", VA = "0xDC4D48")]
	public StartCrashlytics()
	{
	}
}
[Token(Token = "0x2000123")]
public class HandsActiveChecker : MonoBehaviour
{
	[Token(Token = "0x2000124")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x796570", Offset = "0x796570")]
	private sealed class <GetCenterEye>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandsActiveChecker <>4__this;

		[Token(Token = "0x17000073")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004E9")]
			[Address(RVA = "0xB0C758", Offset = "0xB0C758", VA = "0xB0C758", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000074")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004EB")]
			[Address(RVA = "0xB0C7A0", Offset = "0xB0C7A0", VA = "0xB0C7A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004E6")]
		[Address(RVA = "0xB0C5DC", Offset = "0xB0C5DC", VA = "0xB0C5DC")]
		[DebuggerHidden]
		public <GetCenterEye>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60004E7")]
		[Address(RVA = "0xB0C608", Offset = "0xB0C608", VA = "0xB0C608", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004E8")]
		[Address(RVA = "0xB0C60C", Offset = "0xB0C60C", VA = "0xB0C60C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004EA")]
		[Address(RVA = "0xB0C760", Offset = "0xB0C760", VA = "0xB0C760", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _notificationPrefab;

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _notification;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRCameraRig _cameraRig;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _centerEye;

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0xF53BA8", Offset = "0xF53BA8", VA = "0xF53BA8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0xF53CC4", Offset = "0xF53CC4", VA = "0xF53CC4")]
	private void Update()
	{
	}

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0xF53C4C", Offset = "0xF53C4C", VA = "0xF53C4C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7A843C", Offset = "0x7A843C")]
	private IEnumerator GetCenterEye()
	{
		return null;
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0xF53E70", Offset = "0xF53E70", VA = "0xF53E70")]
	public HandsActiveChecker()
	{
	}
}
[Token(Token = "0x2000125")]
[ExecuteInEditMode]
public class CharacterCapsule : MonoBehaviour
{
	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterController _character;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _height;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _radius;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79AE74", Offset = "0x79AE74")]
	public int SubdivisionsU;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79AE90", Offset = "0x79AE90")]
	public int SubdivisionsV;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _subdivisionU;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _subdivisionV;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] _vertices;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] _triangles;

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0xF0C4D8", Offset = "0xF0C4D8", VA = "0xF0C4D8")]
	private void Update()
	{
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0xF0CF20", Offset = "0xF0CF20", VA = "0xF0CF20")]
	public CharacterCapsule()
	{
	}
}
[Token(Token = "0x2000126")]
public class LocomotionSampleSupport : MonoBehaviour
{
	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocomotionController lc;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool inMenu;

	[Token(Token = "0x17000075")]
	private LocomotionTeleport TeleportController
	{
		[Token(Token = "0x60004EE")]
		[Address(RVA = "0x1188B98", Offset = "0x1188B98", VA = "0x1188B98")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0x1188BEC", Offset = "0x1188BEC", VA = "0x1188BEC")]
	public void Start()
	{
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0x1189014", Offset = "0x1189014", VA = "0x1189014")]
	public void Update()
	{
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0x1189100", Offset = "0x1189100", VA = "0x1189100")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x7A84EC", Offset = "0x7A84EC")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x60004F2")]
	public static TActivate ActivateCategory<TCategory, TActivate>(GameObject target) where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x60004F3")]
	protected void ActivateHandlers<TInput, TAim, TTarget, TOrientation, TTransition>() where TInput : TeleportInputHandler where TAim : TeleportAimHandler where TTarget : TeleportTargetHandler where TOrientation : TeleportOrientationHandler where TTransition : TeleportTransition
	{
	}

	[Token(Token = "0x60004F4")]
	protected void ActivateInput<TActivate>() where TActivate : TeleportInputHandler
	{
	}

	[Token(Token = "0x60004F5")]
	protected void ActivateAim<TActivate>() where TActivate : TeleportAimHandler
	{
	}

	[Token(Token = "0x60004F6")]
	protected void ActivateTarget<TActivate>() where TActivate : TeleportTargetHandler
	{
	}

	[Token(Token = "0x60004F7")]
	protected void ActivateOrientation<TActivate>() where TActivate : TeleportOrientationHandler
	{
	}

	[Token(Token = "0x60004F8")]
	protected void ActivateTransition<TActivate>() where TActivate : TeleportTransition
	{
	}

	[Token(Token = "0x60004F9")]
	protected TActivate ActivateCategory<TCategory, TActivate>() where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0x1189164", Offset = "0x1189164", VA = "0x1189164")]
	protected void UpdateToggle(Toggle toggle, bool enabled)
	{
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0x11891A0", Offset = "0x11891A0", VA = "0x11891A0")]
	private void SetupNonCap()
	{
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0x1189210", Offset = "0x1189210", VA = "0x1189210")]
	private void SetupTeleportDefaults()
	{
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0x1189380", Offset = "0x1189380", VA = "0x1189380")]
	protected GameObject AddInstance(GameObject template, string label)
	{
		return null;
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0x118945C", Offset = "0x118945C", VA = "0x118945C")]
	private void SetupNodeTeleport()
	{
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0x1188F0C", Offset = "0x1188F0C", VA = "0x1188F0C")]
	private void SetupTwoStickTeleport()
	{
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0x1189524", Offset = "0x1189524", VA = "0x1189524")]
	private void SetupWalkOnly()
	{
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0x118958C", Offset = "0x118958C", VA = "0x118958C")]
	private void SetupLeftStrafeRightTeleport()
	{
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0x1189684", Offset = "0x1189684", VA = "0x1189684")]
	public LocomotionSampleSupport()
	{
	}
}
[Token(Token = "0x2000127")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x796590", Offset = "0x796590")]
public class OVROverlayCanvas : MonoBehaviour
{
	[Token(Token = "0x2000128")]
	public enum DrawMode
	{
		[Token(Token = "0x40006CD")]
		Opaque,
		[Token(Token = "0x40006CE")]
		OpaqueWithClip,
		[Token(Token = "0x40006CF")]
		TransparentDefaultAlpha,
		[Token(Token = "0x40006D0")]
		TransparentCorrectAlpha
	}

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[HideInInspector]
	private Shader _transparentShader;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	[SerializeField]
	private Shader _opaqueShader;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform _rectTransform;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Canvas _canvas;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera _camera;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OVROverlay _overlay;

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture _renderTexture;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mesh _quad;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material _defaultMat;

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int MaxTextureSize;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int MinTextureSize;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float PixelsPerUnit;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int DrawRate;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int DrawFrameOffset;

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool Expensive;

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int Layer;

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public DrawMode Opacity;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool ScaleViewport;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Plane[] _FrustumPlanes;

	[Token(Token = "0x17000076")]
	public bool overlayEnabled
	{
		[Token(Token = "0x6000509")]
		[Address(RVA = "0x12F7260", Offset = "0x12F7260", VA = "0x12F7260")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600050A")]
		[Address(RVA = "0x12F72F0", Offset = "0x12F72F0", VA = "0x12F72F0")]
		set
		{
		}
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0x12F5CDC", Offset = "0x12F5CDC", VA = "0x12F5CDC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0x12F68CC", Offset = "0x12F68CC", VA = "0x12F68CC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0x12F694C", Offset = "0x12F694C", VA = "0x12F694C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0x12F6A3C", Offset = "0x12F6A3C", VA = "0x12F6A3C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0x12F6B2C", Offset = "0x12F6B2C", VA = "0x12F6B2C", Slot = "4")]
	protected virtual bool ShouldRender()
	{
		return default(bool);
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0x12F6D38", Offset = "0x12F6D38", VA = "0x12F6D38")]
	private void Update()
	{
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0x12F73BC", Offset = "0x12F73BC", VA = "0x12F73BC")]
	public OVROverlayCanvas()
	{
	}
}
[Token(Token = "0x2000129")]
public class AugmentedObject : MonoBehaviour
{
	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform shadow;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool groundShadow;

	[Token(Token = "0x600050D")]
	[Address(RVA = "0xAE5FD8", Offset = "0xAE5FD8", VA = "0xAE5FD8")]
	private void Start()
	{
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0xAE61C0", Offset = "0xAE61C0", VA = "0xAE61C0")]
	private void Update()
	{
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0xAE6348", Offset = "0xAE6348", VA = "0xAE6348")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0xAE6350", Offset = "0xAE6350", VA = "0xAE6350")]
	public void Release()
	{
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0xAE6338", Offset = "0xAE6338", VA = "0xAE6338")]
	private void ToggleShadowType()
	{
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0xAE6358", Offset = "0xAE6358", VA = "0xAE6358")]
	public AugmentedObject()
	{
	}
}
[Token(Token = "0x200012A")]
public class BrushController : MonoBehaviour
{
	[Token(Token = "0x200012B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7965F0", Offset = "0x7965F0")]
	private sealed class <FadeCameraClearColor>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fadeTime;

		[Token(Token = "0x40006DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Color newColor;

		[Token(Token = "0x40006DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <timer>5__2;

		[Token(Token = "0x40006DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color <currentColor>5__3;

		[Token(Token = "0x17000077")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600051D")]
			[Address(RVA = "0xB05C5C", Offset = "0xB05C5C", VA = "0xB05C5C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000078")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600051F")]
			[Address(RVA = "0xB05CA4", Offset = "0xB05CA4", VA = "0xB05CA4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600051A")]
		[Address(RVA = "0xB05B2C", Offset = "0xB05B2C", VA = "0xB05B2C")]
		[DebuggerHidden]
		public <FadeCameraClearColor>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x600051B")]
		[Address(RVA = "0xB05B58", Offset = "0xB05B58", VA = "0xB05B58", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600051C")]
		[Address(RVA = "0xB05B5C", Offset = "0xB05B5C", VA = "0xB05B5C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600051E")]
		[Address(RVA = "0xB05C64", Offset = "0xB05C64", VA = "0xB05C64", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200012C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x796600", Offset = "0x796600")]
	private sealed class <FadeSphere>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BrushController <>4__this;

		[Token(Token = "0x40006E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x40006E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color newColor;

		[Token(Token = "0x40006E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool disableOnFinish;

		[Token(Token = "0x40006E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <timer>5__2;

		[Token(Token = "0x40006E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Color <currentColor>5__3;

		[Token(Token = "0x17000079")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000523")]
			[Address(RVA = "0xB05E64", Offset = "0xB05E64", VA = "0xB05E64", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000525")]
			[Address(RVA = "0xB05EAC", Offset = "0xB05EAC", VA = "0xB05EAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000520")]
		[Address(RVA = "0xB05CAC", Offset = "0xB05CAC", VA = "0xB05CAC")]
		[DebuggerHidden]
		public <FadeSphere>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000521")]
		[Address(RVA = "0xB05CD8", Offset = "0xB05CD8", VA = "0xB05CD8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000522")]
		[Address(RVA = "0xB05CDC", Offset = "0xB05CDC", VA = "0xB05CDC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000524")]
		[Address(RVA = "0xB05E6C", Offset = "0xB05E6C", VA = "0xB05E6C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PassthroughBrush brush;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer backgroundSphere;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IEnumerator grabRoutine;

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IEnumerator releaseRoutine;

	[Token(Token = "0x6000513")]
	[Address(RVA = "0xAF0854", Offset = "0xAF0854", VA = "0xAF0854")]
	private void Start()
	{
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0xAF0B28", Offset = "0xAF0B28", VA = "0xAF0B28")]
	private void Update()
	{
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0xAF0B84", Offset = "0xAF0B84", VA = "0xAF0B84")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0xAF0D04", Offset = "0xAF0D04", VA = "0xAF0D04")]
	public void Release()
	{
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0xAF0DD8", Offset = "0xAF0DD8", VA = "0xAF0DD8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7A8524", Offset = "0x7A8524")]
	private IEnumerator FadeCameraClearColor(Color newColor, float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0xAF0C40", Offset = "0xAF0C40", VA = "0xAF0C40")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7A8584", Offset = "0x7A8584")]
	private IEnumerator FadeSphere(Color newColor, float fadeTime, bool disableOnFinish = false)
	{
		return null;
	}

	[Token(Token = "0x6000519")]
	[Address(RVA = "0xAF0E74", Offset = "0xAF0E74", VA = "0xAF0E74")]
	public BrushController()
	{
	}
}
[Token(Token = "0x200012D")]
public class EnableUnpremultipliedAlpha : MonoBehaviour
{
	[Token(Token = "0x6000526")]
	[Address(RVA = "0xE77A04", Offset = "0xE77A04", VA = "0xE77A04")]
	private void Start()
	{
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0xE77A64", Offset = "0xE77A64", VA = "0xE77A64")]
	public EnableUnpremultipliedAlpha()
	{
	}
}
[Token(Token = "0x200012E")]
public class Flashlight : MonoBehaviour
{
	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject lightVolume;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Light spotlight;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject bulbGlow;

	[Token(Token = "0x6000528")]
	[Address(RVA = "0xE7C2EC", Offset = "0xE7C2EC", VA = "0xE7C2EC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0xE7C420", Offset = "0xE7C420", VA = "0xE7C420")]
	public void ToggleFlashlight()
	{
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0xE7C4B4", Offset = "0xE7C4B4", VA = "0xE7C4B4")]
	public void EnableFlashlight(bool doEnable)
	{
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0xE7C51C", Offset = "0xE7C51C", VA = "0xE7C51C")]
	public Flashlight()
	{
	}
}
[Token(Token = "0x200012F")]
public class FlashlightController : MonoBehaviour
{
	[Token(Token = "0x2000130")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x796610", Offset = "0x796610")]
	private sealed class <FadeLighting>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FlashlightController <>4__this;

		[Token(Token = "0x40006F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x40006F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color newColor;

		[Token(Token = "0x40006F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float sceneLightIntensity;

		[Token(Token = "0x40006F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <timer>5__2;

		[Token(Token = "0x40006FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Color <currentColor>5__3;

		[Token(Token = "0x40006FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float <currentLight>5__4;

		[Token(Token = "0x1700007B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000538")]
			[Address(RVA = "0xB0AEA8", Offset = "0xB0AEA8", VA = "0xB0AEA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600053A")]
			[Address(RVA = "0xB0AEF0", Offset = "0xB0AEF0", VA = "0xB0AEF0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000535")]
		[Address(RVA = "0xB0AC9C", Offset = "0xB0AC9C", VA = "0xB0AC9C")]
		[DebuggerHidden]
		public <FadeLighting>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6000536")]
		[Address(RVA = "0xB0ACC8", Offset = "0xB0ACC8", VA = "0xB0ACC8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000537")]
		[Address(RVA = "0xB0ACCC", Offset = "0xB0ACCC", VA = "0xB0ACCC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000539")]
		[Address(RVA = "0xB0AEB0", Offset = "0xB0AEB0", VA = "0xB0AEB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Light sceneLight;

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform flashlightRoot;

	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 localPosition;

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Quaternion localRotation;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMesh infoText;

	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GrabObject externalController;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private OVRSkeleton[] skeletons;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private OVRHand[] hands;

	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int handIndex;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool pinching;

	[Token(Token = "0x600052C")]
	[Address(RVA = "0xE7C638", Offset = "0xE7C638", VA = "0xE7C638")]
	private void Start()
	{
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0xE7C91C", Offset = "0xE7C91C", VA = "0xE7C91C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0xE7CC6C", Offset = "0xE7CC6C", VA = "0xE7CC6C")]
	private void FindHands()
	{
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0xE7CFC8", Offset = "0xE7CFC8", VA = "0xE7CFC8")]
	private void AlignWithHand(OVRHand hand, OVRSkeleton skeleton)
	{
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0xE7D2CC", Offset = "0xE7D2CC", VA = "0xE7D2CC")]
	private void AlignWithController(OVRInput.Controller controller)
	{
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0xE7D3C0", Offset = "0xE7D3C0", VA = "0xE7D3C0")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0xE7D58C", Offset = "0xE7D58C", VA = "0xE7D58C")]
	public void Release()
	{
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0xE7D4D8", Offset = "0xE7D4D8", VA = "0xE7D4D8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7A8684", Offset = "0x7A8684")]
	private IEnumerator FadeLighting(Color newColor, float sceneLightIntensity, float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0xE7D674", Offset = "0xE7D674", VA = "0xE7D674")]
	public FlashlightController()
	{
	}
}
[Token(Token = "0x2000131")]
public class GrabObject : MonoBehaviour
{
	[Token(Token = "0x2000132")]
	public enum ManipulationType
	{
		[Token(Token = "0x4000705")]
		Default,
		[Token(Token = "0x4000706")]
		ForcedHand,
		[Token(Token = "0x4000707")]
		DollyHand,
		[Token(Token = "0x4000708")]
		DollyAttached,
		[Token(Token = "0x4000709")]
		HorizontalScaled,
		[Token(Token = "0x400070A")]
		VerticalScaled,
		[Token(Token = "0x400070B")]
		Menu
	}

	[Token(Token = "0x2000133")]
	public delegate void GrabbedObject(OVRInput.Controller grabHand);

	[Token(Token = "0x2000134")]
	public delegate void ReleasedObject();

	[Token(Token = "0x2000135")]
	public delegate void SetCursorPosition(Vector3 cursorPosition);

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x79AF1C", Offset = "0x79AF1C")]
	public string ObjectName;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x79AF2C", Offset = "0x79AF2C")]
	public string ObjectInstructions;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ManipulationType objectManipulationType;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool showLaserWhileGrabbed;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Quaternion grabbedRotation;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GrabbedObject GrabbedObjectDelegate;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ReleasedObject ReleasedObjectDelegate;

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SetCursorPosition CursorPositionDelegate;

	[Token(Token = "0x600053B")]
	[Address(RVA = "0xCF0060", Offset = "0xCF0060", VA = "0xCF0060")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0xCF00BC", Offset = "0xCF00BC", VA = "0xCF00BC")]
	public void Release()
	{
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0xCF00D0", Offset = "0xCF00D0", VA = "0xCF00D0")]
	public void CursorPos(Vector3 cursorPos)
	{
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0xCF00E4", Offset = "0xCF00E4", VA = "0xCF00E4")]
	public GrabObject()
	{
	}
}
[Token(Token = "0x2000136")]
public class HandMeshMask : MonoBehaviour
{
	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRSkeleton referenceHand;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material maskMaterial;

	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79AF4C", Offset = "0x79AF4C")]
	public int radialDivisions;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79AF84", Offset = "0x79AF84")]
	public float borderSize;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79AFBC", Offset = "0x79AFBC")]
	public float fingerTaper;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79AFF4", Offset = "0x79AFF4")]
	public float fingerTipLength;

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79B02C", Offset = "0x79B02C")]
	public float webOffset;

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float handScale;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject maskMeshObject;

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Mesh maskMesh;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] handVertices;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector2[] handUVs;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color32[] handColors;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int[] handTriangles;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int vertCounter;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int triCounter;

	[Token(Token = "0x600054B")]
	[Address(RVA = "0xCF7010", Offset = "0xCF7010", VA = "0xCF7010")]
	private void Awake()
	{
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0xCF7210", Offset = "0xCF7210", VA = "0xCF7210")]
	private void Update()
	{
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0xCF741C", Offset = "0xCF741C", VA = "0xCF741C")]
	private void CreateHandMesh()
	{
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0xCF7AA0", Offset = "0xCF7AA0", VA = "0xCF7AA0")]
	private void AddKnuckleMesh(int knuckleVerts, float point1scale, float point2scale, Vector3 point1, Vector3 point2)
	{
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0xCF80D0", Offset = "0xCF80D0", VA = "0xCF80D0")]
	private void AddPalmMesh(int knuckleVerts)
	{
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0xCFA74C", Offset = "0xCFA74C", VA = "0xCFA74C")]
	private void AddVertex(Vector3 position, Vector2 uv, Color color)
	{
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0xCFA808", Offset = "0xCFA808", VA = "0xCFA808")]
	public HandMeshMask()
	{
	}
}
[Token(Token = "0x2000137")]
public class HandMeshUI : MonoBehaviour
{
	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SphereCollider[] knobs;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMesh[] readouts;

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int rightHeldKnob;

	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int leftHeldKnob;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public OVRSkeleton leftHand;

	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public OVRSkeleton rightHand;

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public HandMeshMask leftMask;

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public HandMeshMask rightMask;

	[Token(Token = "0x6000552")]
	[Address(RVA = "0xF4E85C", Offset = "0xF4E85C", VA = "0xF4E85C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0xF4EB94", Offset = "0xF4EB94", VA = "0xF4EB94")]
	private void Update()
	{
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0xF4E904", Offset = "0xF4E904", VA = "0xF4E904")]
	private void SetSliderValue(int sliderID, float value, bool isNormalized)
	{
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0xF4EF84", Offset = "0xF4EF84", VA = "0xF4EF84")]
	private void CheckForHands()
	{
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0xF4F474", Offset = "0xF4F474", VA = "0xF4F474")]
	public HandMeshUI()
	{
	}
}
[Token(Token = "0x2000138")]
public class ObjectManipulator : MonoBehaviour
{
	[Token(Token = "0x2000139")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x796620", Offset = "0x796620")]
	private sealed class <StartDemo>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectManipulator <>4__this;

		[Token(Token = "0x400073A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timer>5__2;

		[Token(Token = "0x400073B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <fadeTime>5__3;

		[Token(Token = "0x1700007D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000566")]
			[Address(RVA = "0xCBC2A8", Offset = "0xCBC2A8", VA = "0xCBC2A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000568")]
			[Address(RVA = "0xCBC2F0", Offset = "0xCBC2F0", VA = "0xCBC2F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000563")]
		[Address(RVA = "0xCBBFD8", Offset = "0xCBBFD8", VA = "0xCBBFD8")]
		[DebuggerHidden]
		public <StartDemo>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6000564")]
		[Address(RVA = "0xCBC004", Offset = "0xCBC004", VA = "0xCBC004", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000565")]
		[Address(RVA = "0xCBC008", Offset = "0xCBC008", VA = "0xCBC008", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000567")]
		[Address(RVA = "0xCBC2B0", Offset = "0xCBC2B0", VA = "0xCBC2B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRInput.Controller controller;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject hoverObject;

	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject grabObject;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float grabTime;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 localGrabOffset;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Quaternion localGrabRotation;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 camGrabPosition;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion camGrabRotation;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 handGrabPosition;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Quaternion handGrabRotation;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 cursorPosition;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float rotationOffset;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public LineRenderer laser;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform objectInfo;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public TextMesh objectNameLabel;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public TextMesh objectInstructionsLabel;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Image objectInfoBG;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject demoObjects;

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public OVRPassthroughLayer passthrough;

	[Token(Token = "0x6000557")]
	[Address(RVA = "0x12F8938", Offset = "0x12F8938", VA = "0x12F8938")]
	private void Start()
	{
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0x12F8B70", Offset = "0x12F8B70", VA = "0x12F8B70")]
	private void Update()
	{
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0x12F97C0", Offset = "0x12F97C0", VA = "0x12F97C0")]
	private void GrabHoverObject(GameObject grbObj, Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0x12FA3C8", Offset = "0x12FA3C8", VA = "0x12FA3C8")]
	private void ReleaseObject()
	{
	}

	[Token(Token = "0x600055B")]
	[Address(RVA = "0x12F8AF8", Offset = "0x12F8AF8", VA = "0x12F8AF8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7A8734", Offset = "0x7A8734")]
	private IEnumerator StartDemo()
	{
		return null;
	}

	[Token(Token = "0x600055C")]
	[Address(RVA = "0x12F8DDC", Offset = "0x12F8DDC", VA = "0x12F8DDC")]
	private void FindHoverObject(Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x600055D")]
	[Address(RVA = "0x12F9A84", Offset = "0x12F9A84", VA = "0x12F9A84")]
	private void ManipulateObject(GameObject obj, Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0x12FA68C", Offset = "0x12FA68C", VA = "0x12FA68C")]
	private void ClampGrabOffset(ref Vector3 localOffset, float thumbY)
	{
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0x12FA718", Offset = "0x12FA718", VA = "0x12FA718")]
	private Vector3 ClampScale(Vector3 localScale, Vector2 thumb)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0x12FA748", Offset = "0x12FA748", VA = "0x12FA748")]
	private void CheckForDominantHand()
	{
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0x12FA554", Offset = "0x12FA554", VA = "0x12FA554")]
	private void AssignInstructions(GrabObject targetObject)
	{
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0x12FA86C", Offset = "0x12FA86C", VA = "0x12FA86C")]
	public ObjectManipulator()
	{
	}
}
[Token(Token = "0x200013A")]
public class OverlayPassthrough : MonoBehaviour
{
	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x6000569")]
	[Address(RVA = "0x12FC8F8", Offset = "0x12FC8F8", VA = "0x12FC8F8")]
	private void Start()
	{
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0x12FCA90", Offset = "0x12FCA90", VA = "0x12FCA90")]
	private void Update()
	{
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0x12FCB58", Offset = "0x12FCB58", VA = "0x12FCB58")]
	public OverlayPassthrough()
	{
	}
}
[Token(Token = "0x200013B")]
public class PassthroughBrush : MonoBehaviour
{
	[Token(Token = "0x200013C")]
	public enum BrushState
	{
		[Token(Token = "0x4000748")]
		Idle,
		[Token(Token = "0x4000749")]
		Inking
	}

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject lineSegmentPrefab;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject lineContainer;

	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool forceActive;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LineRenderer currentLineSegment;

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Vector3> inkPositions;

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float minInkDist;

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float strokeWidth;

	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float strokeLength;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private BrushState brushStatus;

	[Token(Token = "0x600056C")]
	[Address(RVA = "0xBE2CF4", Offset = "0xBE2CF4", VA = "0xBE2CF4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0xBE2CFC", Offset = "0xBE2CFC", VA = "0xBE2CFC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0xBE2FE4", Offset = "0xBE2FE4", VA = "0xBE2FE4")]
	private void StartLine(Vector3 inkPos)
	{
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0xBE31DC", Offset = "0xBE31DC", VA = "0xBE31DC")]
	private void UpdateLine(Vector3 inkPos)
	{
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0xBE3384", Offset = "0xBE3384", VA = "0xBE3384")]
	public void ClearLines()
	{
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0xBE2EF0", Offset = "0xBE2EF0", VA = "0xBE2EF0")]
	public void UndoInkLine()
	{
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0xBE3460", Offset = "0xBE3460", VA = "0xBE3460")]
	public PassthroughBrush()
	{
	}
}
[Token(Token = "0x200013D")]
public class PassthroughController : MonoBehaviour
{
	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x6000573")]
	[Address(RVA = "0xBE34F8", Offset = "0xBE34F8", VA = "0xBE34F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0xBE3690", Offset = "0xBE3690", VA = "0xBE3690")]
	private void Update()
	{
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0xBE37F4", Offset = "0xBE37F4", VA = "0xBE37F4")]
	public PassthroughController()
	{
	}
}
[Token(Token = "0x200013E")]
public class PassthroughProjectionSurface : MonoBehaviour
{
	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshRenderer quadOutline;

	[Token(Token = "0x6000576")]
	[Address(RVA = "0xBE37FC", Offset = "0xBE37FC", VA = "0xBE37FC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0xBE3A10", Offset = "0xBE3A10", VA = "0xBE3A10")]
	private void Update()
	{
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0xBE3BE0", Offset = "0xBE3BE0", VA = "0xBE3BE0")]
	public PassthroughProjectionSurface()
	{
	}
}
[Token(Token = "0x200013F")]
public class PassthroughStyler : MonoBehaviour
{
	[Token(Token = "0x2000140")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x796630", Offset = "0x796630")]
	private sealed class <FadeToCurrentStyle>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400075D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400075E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400075F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PassthroughStyler <>4__this;

		[Token(Token = "0x4000760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x4000761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timer>5__2;

		[Token(Token = "0x4000762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <brightness>5__3;

		[Token(Token = "0x4000763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <contrast>5__4;

		[Token(Token = "0x4000764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <posterize>5__5;

		[Token(Token = "0x4000765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Color <edgeCol>5__6;

		[Token(Token = "0x1700007F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600058B")]
			[Address(RVA = "0xCBDF48", Offset = "0xCBDF48", VA = "0xCBDF48", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000080")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600058D")]
			[Address(RVA = "0xCBDF90", Offset = "0xCBDF90", VA = "0xCBDF90", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000588")]
		[Address(RVA = "0xCBDD64", Offset = "0xCBDD64", VA = "0xCBDD64")]
		[DebuggerHidden]
		public <FadeToCurrentStyle>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6000589")]
		[Address(RVA = "0xCBDD90", Offset = "0xCBDD90", VA = "0xCBDD90", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600058A")]
		[Address(RVA = "0xCBDD94", Offset = "0xCBDD94", VA = "0xCBDD94", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600058C")]
		[Address(RVA = "0xCBDF50", Offset = "0xCBDF50", VA = "0xCBDF50", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000141")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x796640", Offset = "0x796640")]
	private sealed class <FadeToDefaultPassthrough>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PassthroughStyler <>4__this;

		[Token(Token = "0x4000769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x400076A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timer>5__2;

		[Token(Token = "0x400076B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <brightness>5__3;

		[Token(Token = "0x400076C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <contrast>5__4;

		[Token(Token = "0x400076D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <posterize>5__5;

		[Token(Token = "0x400076E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Color <edgeCol>5__6;

		[Token(Token = "0x17000081")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000591")]
			[Address(RVA = "0xCBE1BC", Offset = "0xCBE1BC", VA = "0xCBE1BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000082")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000593")]
			[Address(RVA = "0xCBE204", Offset = "0xCBE204", VA = "0xCBE204", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600058E")]
		[Address(RVA = "0xCBDF98", Offset = "0xCBDF98", VA = "0xCBDF98")]
		[DebuggerHidden]
		public <FadeToDefaultPassthrough>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x600058F")]
		[Address(RVA = "0xCBDFC4", Offset = "0xCBDFC4", VA = "0xCBDFC4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000590")]
		[Address(RVA = "0xCBDFC8", Offset = "0xCBDFC8", VA = "0xCBDFC8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000592")]
		[Address(RVA = "0xCBE1C4", Offset = "0xCBE1C4", VA = "0xCBE1C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IEnumerator fadeIn;

	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IEnumerator fadeOut;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RectTransform[] menuOptions;

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RectTransform colorWheel;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture2D colorTexture;

	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 cursorPosition;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool settingColor;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color savedColor;

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float savedBrightness;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float savedContrast;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float savedPosterize;

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public CanvasGroup mainCanvas;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject[] compactObjects;

	[Token(Token = "0x6000579")]
	[Address(RVA = "0xBE3BE8", Offset = "0xBE3BE8", VA = "0xBE3BE8")]
	private void Start()
	{
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0xBE3F20", Offset = "0xBE3F20", VA = "0xBE3F20")]
	private void Update()
	{
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0xBE4178", Offset = "0xBE4178", VA = "0xBE4178")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0xBE42FC", Offset = "0xBE42FC", VA = "0xBE42FC")]
	public void Release()
	{
	}

	[Token(Token = "0x600057D")]
	[Address(RVA = "0xBE4274", Offset = "0xBE4274", VA = "0xBE4274")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7A87E4", Offset = "0x7A87E4")]
	private IEnumerator FadeToCurrentStyle(float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0xBE43EC", Offset = "0xBE43EC", VA = "0xBE43EC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7A8844", Offset = "0x7A8844")]
	private IEnumerator FadeToDefaultPassthrough(float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0xBE4474", Offset = "0xBE4474", VA = "0xBE4474")]
	public void OnBrightnessChanged(float newValue)
	{
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0xBE4494", Offset = "0xBE4494", VA = "0xBE4494")]
	public void OnContrastChanged(float newValue)
	{
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0xBE44B4", Offset = "0xBE44B4", VA = "0xBE44B4")]
	public void OnPosterizeChanged(float newValue)
	{
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0xBE44D4", Offset = "0xBE44D4", VA = "0xBE44D4")]
	public void OnAlphaChanged(float newValue)
	{
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0xBE3EA4", Offset = "0xBE3EA4", VA = "0xBE3EA4")]
	private void ShowFullMenu(bool doShow)
	{
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0xBE4538", Offset = "0xBE4538", VA = "0xBE4538")]
	public void Cursor(Vector3 cP)
	{
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0xBE4544", Offset = "0xBE4544", VA = "0xBE4544")]
	public void DoColorDrag(bool doDrag)
	{
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0xBE3F38", Offset = "0xBE3F38", VA = "0xBE3F38")]
	public void GetColorFromWheel()
	{
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0xBE4550", Offset = "0xBE4550", VA = "0xBE4550")]
	public PassthroughStyler()
	{
	}
}
[Token(Token = "0x2000142")]
public class PassthroughSurface : MonoBehaviour
{
	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x6000594")]
	[Address(RVA = "0xBE4594", Offset = "0xBE4594", VA = "0xBE4594")]
	private void Start()
	{
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0xBE4654", Offset = "0xBE4654", VA = "0xBE4654")]
	public PassthroughSurface()
	{
	}
}
[Token(Token = "0x2000143")]
public class SPPquad : MonoBehaviour
{
	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRInput.Controller controllerHand;

	[Token(Token = "0x6000596")]
	[Address(RVA = "0xC8CB58", Offset = "0xC8CB58", VA = "0xC8CB58")]
	private void Start()
	{
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0xC8CD9C", Offset = "0xC8CD9C", VA = "0xC8CD9C")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0xC8CDF4", Offset = "0xC8CDF4", VA = "0xC8CDF4")]
	public void Release()
	{
	}

	[Token(Token = "0x6000599")]
	[Address(RVA = "0xC8CE40", Offset = "0xC8CE40", VA = "0xC8CE40")]
	public SPPquad()
	{
	}
}
[Token(Token = "0x2000144")]
public class SceneSampler : MonoBehaviour
{
	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int currentSceneIndex;

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject displayText;

	[Token(Token = "0x600059A")]
	[Address(RVA = "0xC8D3EC", Offset = "0xC8D3EC", VA = "0xC8D3EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600059B")]
	[Address(RVA = "0xC8D464", Offset = "0xC8D464", VA = "0xC8D464")]
	private void Update()
	{
	}

	[Token(Token = "0x600059C")]
	[Address(RVA = "0xC8D788", Offset = "0xC8D788", VA = "0xC8D788")]
	public SceneSampler()
	{
	}
}
[Token(Token = "0x2000145")]
public class SelectivePassthroughExperience : MonoBehaviour
{
	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject leftMaskObject;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject rightMaskObject;

	[Token(Token = "0x600059D")]
	[Address(RVA = "0xC91248", Offset = "0xC91248", VA = "0xC91248")]
	private void Update()
	{
	}

	[Token(Token = "0x600059E")]
	[Address(RVA = "0xC916D0", Offset = "0xC916D0", VA = "0xC916D0")]
	public SelectivePassthroughExperience()
	{
	}
}
[Token(Token = "0x2000146")]
public class Anchor : MonoBehaviour
{
	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ulong anchorHandle_;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Canvas canvas_;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform pivot_;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject anchorMenu_;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isSelected_;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool isHovered_;

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private TextMeshProUGUI anchorName_;

	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject saveIcon_;

	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Image labelImage_;

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Color labelBaseColor_;

	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Color labelHighlightColor_;

	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Color labelSelectedColor_;

	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private AnchorUIManager uiManager_;

	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private MeshRenderer[] renderers_;

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int menuIndex_;

	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private List<UnityEngine.UI.Button> buttonList_;

	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private UnityEngine.UI.Button selectedButton_;

	[Token(Token = "0x17000083")]
	public ulong anchorHandle
	{
		[Token(Token = "0x600059F")]
		[Address(RVA = "0xAE22A8", Offset = "0xAE22A8", VA = "0xAE22A8")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0xAE22B0", Offset = "0xAE22B0", VA = "0xAE22B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0xAE2398", Offset = "0xAE2398", VA = "0xAE2398")]
	private void Update()
	{
	}

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0xAE2600", Offset = "0xAE2600", VA = "0xAE2600")]
	public void OnSaveLocalButtonPressed()
	{
	}

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0xAE2668", Offset = "0xAE2668", VA = "0xAE2668")]
	public void OnHideButtonPressed()
	{
	}

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0xAE26CC", Offset = "0xAE26CC", VA = "0xAE26CC")]
	public void OnEraseButtonPressed()
	{
	}

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0xAE2730", Offset = "0xAE2730", VA = "0xAE2730")]
	public void OnHoverStart()
	{
	}

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0xAE2838", Offset = "0xAE2838", VA = "0xAE2838")]
	public void OnHoverEnd()
	{
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0xAE2958", Offset = "0xAE2958", VA = "0xAE2958")]
	public void OnSelect()
	{
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0xAE2A8C", Offset = "0xAE2A8C", VA = "0xAE2A8C")]
	public void SetAnchorHandle(ulong handle)
	{
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0xAE2B20", Offset = "0xAE2B20", VA = "0xAE2B20")]
	public void ShowSaveIcon()
	{
	}

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0xAE23DC", Offset = "0xAE23DC", VA = "0xAE23DC")]
	private void BillboardPanel(Transform panel)
	{
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0xAE24F0", Offset = "0xAE24F0", VA = "0xAE24F0")]
	private void HandleMenuNavigation()
	{
	}

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0xAE2B40", Offset = "0xAE2B40", VA = "0xAE2B40")]
	private void NavigateToIndexInMenu(bool moveNext)
	{
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0xAE2C58", Offset = "0xAE2C58", VA = "0xAE2C58")]
	public Anchor()
	{
	}
}
[Token(Token = "0x2000147")]
public class AnchorHelpers
{
	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Camera camera;

	[Token(Token = "0x17000084")]
	private static Camera MainCamera
	{
		[Token(Token = "0x60005AE")]
		[Address(RVA = "0xAE2C60", Offset = "0xAE2C60", VA = "0xAE2C60")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0xAE2D18", Offset = "0xAE2D18", VA = "0xAE2D18")]
	public static OVRPlugin.Posef UnityWorldSpacePoseToTrackingSpacePose(Transform pose)
	{
		return default(OVRPlugin.Posef);
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0xAE2D94", Offset = "0xAE2D94", VA = "0xAE2D94")]
	public static OVRPose TrackingSpacePoseToUnityWorldSpacePose(OVRPlugin.Posef pose)
	{
		return default(OVRPose);
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0xAE2E08", Offset = "0xAE2E08", VA = "0xAE2E08")]
	public static OVRPose getTransformUnityWorldFromDevice()
	{
		return default(OVRPose);
	}

	[Token(Token = "0x60005B2")]
	public static T ByteArrayToStruct<T>(byte[] bytes) where T : struct
	{
		return (T)null;
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0xAE2E60", Offset = "0xAE2E60", VA = "0xAE2E60")]
	public static string UuidToString(byte[] encodedMessage)
	{
		return null;
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0xAE3104", Offset = "0xAE3104", VA = "0xAE3104")]
	public static byte[] StringToUuid(string str)
	{
		return null;
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0xAE327C", Offset = "0xAE327C", VA = "0xAE327C")]
	private static int GetHexVal(char hex)
	{
		return default(int);
	}

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0xAE3340", Offset = "0xAE3340", VA = "0xAE3340")]
	public AnchorHelpers()
	{
	}
}
[Token(Token = "0x2000148")]
public abstract class AnchorSession : MonoBehaviour
{
	[Token(Token = "0x2000149")]
	public enum StorageLocation
	{
		[Token(Token = "0x4000791")]
		LOCAL
	}

	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AnchorSession Instance;

	[Token(Token = "0x400078B")]
	public const ulong kInvalidHandle = ulong.MaxValue;

	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Dictionary<ulong, Anchor> handleToAnchor;

	[Token(Token = "0x400078D")]
	protected const int maxEvents = 5;

	[Token(Token = "0x400078E")]
	protected const float eventPollingRate = 0.1f;

	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected GameObject anchorPrefab_;

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0xAE3348", Offset = "0xAE3348", VA = "0xAE3348", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0xAE3074", Offset = "0xAE3074", VA = "0xAE3074")]
	public static void Log(string message)
	{
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0xAE3450", Offset = "0xAE3450", VA = "0xAE3450")]
	protected static bool isFlagSet(uint bitset, uint flag)
	{
		return default(bool);
	}

	[Token(Token = "0x60005BA")]
	public abstract ulong CreateSpatialAnchor(Transform T_UnityWorld_Anchor);

	[Token(Token = "0x60005BB")]
	public abstract void DestroyAnchor(ulong anchorHandle);

	[Token(Token = "0x60005BC")]
	public abstract void SaveAnchor(ulong anchorHandle, StorageLocation location);

	[Token(Token = "0x60005BD")]
	public abstract void EraseAnchor(ulong anchorHandle);

	[Token(Token = "0x60005BE")]
	public abstract void QueryAllLocalAnchors();

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0xAE345C", Offset = "0xAE345C", VA = "0xAE345C")]
	protected AnchorSession()
	{
	}
}
[Token(Token = "0x200014A")]
public class AnchorSpawner : MonoBehaviour
{
	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AnchorSpawner Instance;

	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject anchorPrefab_;

	[Token(Token = "0x17000085")]
	public GameObject AnchorPrefab
	{
		[Token(Token = "0x60005C0")]
		[Address(RVA = "0xAE34E0", Offset = "0xAE34E0", VA = "0xAE34E0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0xAE34E8", Offset = "0xAE34E8", VA = "0xAE34E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0xAE35E8", Offset = "0xAE35E8", VA = "0xAE35E8")]
	public void PlaceAnchorAtTransform(Transform transform)
	{
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0xAE381C", Offset = "0xAE381C", VA = "0xAE381C")]
	public AnchorSpawner()
	{
	}
}
[Token(Token = "0x200014B")]
public class AnchorUIManager : MonoBehaviour
{
	[Token(Token = "0x200014C")]
	public enum AnchorMode
	{
		[Token(Token = "0x40007A7")]
		Create,
		[Token(Token = "0x40007A8")]
		Select
	}

	[Token(Token = "0x200014D")]
	private delegate void PrimaryPressDelegate();

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AnchorUIManager Instance;

	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject mainMenu_;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject createModeButton_;

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject selectModeButton_;

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform trackedDevice_;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform raycastOrigin_;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool drawRaycast_;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private LineRenderer lineRenderer_;

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Anchor hoveredAnchor_;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Anchor selectedAnchor_;

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AnchorMode mode_;

	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private List<UnityEngine.UI.Button> buttonList_;

	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int menuIndex_;

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private UnityEngine.UI.Button selectedButton_;

	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private GameObject placementPreview_;

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Transform anchorPlacementTransform_;

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private PrimaryPressDelegate primaryPressDelegate_;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool isFocused_;

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0xAE3824", Offset = "0xAE3824", VA = "0xAE3824")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0xAE38FC", Offset = "0xAE38FC", VA = "0xAE38FC")]
	private void Start()
	{
	}

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0xAE3A68", Offset = "0xAE3A68", VA = "0xAE3A68")]
	private void Update()
	{
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0xAE3EBC", Offset = "0xAE3EBC", VA = "0xAE3EBC")]
	public void OnCreateModeButtonPressed()
	{
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0xAE3F2C", Offset = "0xAE3F2C", VA = "0xAE3F2C")]
	public void OnLoadAnchorsButtonPressed()
	{
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0xAE39F0", Offset = "0xAE39F0", VA = "0xAE39F0")]
	private void ToggleCreateMode()
	{
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0xAE3FB4", Offset = "0xAE3FB4", VA = "0xAE3FB4")]
	private void StartPlacementMode()
	{
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0xAE403C", Offset = "0xAE403C", VA = "0xAE403C")]
	private void EndPlacementMode()
	{
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0xAE4068", Offset = "0xAE4068", VA = "0xAE4068")]
	private void StartSelectMode()
	{
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0xAE3F88", Offset = "0xAE3F88", VA = "0xAE3F88")]
	private void EndSelectMode()
	{
	}

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0xAE3DAC", Offset = "0xAE3DAC", VA = "0xAE3DAC")]
	private void HandleMenuNavigation()
	{
	}

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0xAE41A4", Offset = "0xAE41A4", VA = "0xAE41A4")]
	private void NavigateToIndexInMenu(bool moveNext)
	{
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0xAE40F0", Offset = "0xAE40F0", VA = "0xAE40F0")]
	private void ShowAnchorPreview()
	{
	}

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0xAE4110", Offset = "0xAE4110", VA = "0xAE4110")]
	private void HideAnchorPreview()
	{
	}

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0xAE42BC", Offset = "0xAE42BC", VA = "0xAE42BC")]
	private void PlaceAnchor()
	{
	}

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0xAE4130", Offset = "0xAE4130", VA = "0xAE4130")]
	private void ShowRaycastLine()
	{
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0xAE416C", Offset = "0xAE416C", VA = "0xAE416C")]
	private void HideRaycastLine()
	{
	}

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0xAE3B74", Offset = "0xAE3B74", VA = "0xAE3B74")]
	private void ControllerRaycast()
	{
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0xAE4318", Offset = "0xAE4318", VA = "0xAE4318")]
	private void HoverAnchor(Anchor anchor)
	{
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0xAE434C", Offset = "0xAE434C", VA = "0xAE434C")]
	private void UnhoverAnchor()
	{
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0xAE43E8", Offset = "0xAE43E8", VA = "0xAE43E8")]
	private void SelectAnchor()
	{
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0xAE4564", Offset = "0xAE4564", VA = "0xAE4564")]
	public AnchorUIManager()
	{
	}
}
[Token(Token = "0x200014E")]
public class SpatialAnchorSession : AnchorSession
{
	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Dictionary<ulong, ulong> locateAnchorRequest;

	[Token(Token = "0x40007AA")]
	private const string numUuids = "numUuids";

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0xDC2754", Offset = "0xDC2754", VA = "0xDC2754")]
	private void Start()
	{
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0xDC29A0", Offset = "0xDC29A0", VA = "0xDC29A0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0xDC2BEC", Offset = "0xDC2BEC", VA = "0xDC2BEC")]
	private void SpatialEntitySetComponentEnabled(ulong requestId, bool result, OVRPlugin.SpatialEntityComponentType componentType, ulong space)
	{
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0xDC2DFC", Offset = "0xDC2DFC", VA = "0xDC2DFC")]
	private void SpatialAnchorSaved(ulong requestId, ulong space, bool result, OVRPlugin.SpatialEntityUuid uuid)
	{
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0xDC32EC", Offset = "0xDC32EC", VA = "0xDC32EC")]
	private void SpatialEntityStorageErase(ulong requestId, bool result, OVRPlugin.SpatialEntityUuid uuid, OVRPlugin.SpatialEntityStorageLocation location)
	{
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0xDC361C", Offset = "0xDC361C", VA = "0xDC361C")]
	private void SpatialEntityQueryResults(ulong requestId, int numResults, OVRPlugin.SpatialEntityQueryResult[] results)
	{
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0xDC3D40", Offset = "0xDC3D40", VA = "0xDC3D40")]
	private void SpatialEntityQueryComplete(ulong requestId, bool result, int numFound)
	{
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0xDC3210", Offset = "0xDC3210", VA = "0xDC3210")]
	private string GetUuidString(OVRPlugin.SpatialEntityUuid uuid)
	{
		return null;
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0xDC3904", Offset = "0xDC3904", VA = "0xDC3904")]
	private void tryEnableComponent(ulong anchorHandle, OVRPlugin.SpatialEntityComponentType type)
	{
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0xDC2CDC", Offset = "0xDC2CDC", VA = "0xDC2CDC")]
	private void CreateAnchorGameobject(ulong anchorHandle)
	{
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0xDC3F94", Offset = "0xDC3F94", VA = "0xDC3F94")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0xDC4244", Offset = "0xDC4244", VA = "0xDC4244", Slot = "5")]
	public override ulong CreateSpatialAnchor(Transform T_UnityWorld_Anchor)
	{
		return default(ulong);
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0xDC43E4", Offset = "0xDC43E4", VA = "0xDC43E4", Slot = "6")]
	public override void DestroyAnchor(ulong anchorHandle)
	{
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0xDC45A0", Offset = "0xDC45A0", VA = "0xDC45A0", Slot = "8")]
	public override void EraseAnchor(ulong anchorHandle)
	{
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0xDC476C", Offset = "0xDC476C", VA = "0xDC476C")]
	public void QueryAnchorByUuid()
	{
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0xDC4A64", Offset = "0xDC4A64", VA = "0xDC4A64", Slot = "9")]
	public override void QueryAllLocalAnchors()
	{
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0xDC4B54", Offset = "0xDC4B54", VA = "0xDC4B54", Slot = "7")]
	public override void SaveAnchor(ulong anchorHandle, StorageLocation location)
	{
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0xDC4CC4", Offset = "0xDC4CC4", VA = "0xDC4CC4")]
	public SpatialAnchorSession()
	{
	}
}
[Token(Token = "0x200014F")]
public class StartMenu : MonoBehaviour
{
	[Token(Token = "0x2000150")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x796650", Offset = "0x796650")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x40007AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int sceneIndex;

		[Token(Token = "0x40007AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StartMenu <>4__this;

		[Token(Token = "0x60005F3")]
		[Address(RVA = "0xCC14C8", Offset = "0xCC14C8", VA = "0xCC14C8")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x60005F4")]
		[Address(RVA = "0xCC14D0", Offset = "0xCC14D0", VA = "0xCC14D0")]
		internal void <Start>b__0()
		{
		}
	}

	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVROverlay overlay;

	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVROverlay text;

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig vrRig;

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0xDC4D50", Offset = "0xDC4D50", VA = "0xDC4D50")]
	private void Start()
	{
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0xDC4F6C", Offset = "0xDC4F6C", VA = "0xDC4F6C")]
	private void LoadScene(int idx)
	{
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0xDC507C", Offset = "0xDC507C", VA = "0xDC507C")]
	public StartMenu()
	{
	}
}
[Token(Token = "0x2000151")]
public class PlayerListManager : MonoBehaviour
{
	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PlayerListRow[] _playerListRows;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PlayerListRow _playerListRow;

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0xBE6058", Offset = "0xBE6058", VA = "0xBE6058")]
	private void Start()
	{
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0xBE6108", Offset = "0xBE6108", VA = "0xBE6108")]
	private void Update()
	{
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0xBE6978", Offset = "0xBE6978", VA = "0xBE6978")]
	public PlayerListManager()
	{
	}
}
[Token(Token = "0x2000152")]
public class PlayerListRow : MonoBehaviour
{
	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int rowIndex;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UserInfoModel player;

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isMuted;

	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float voiceVolume;

	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool isReported;

	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string userName;

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public uint userId;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEngine.UI.Button muteButton;

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Image _muteImageBackground;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Color _muteImageColor;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public UnityEngine.UI.Button reportButton;

	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TextMeshProUGUI muteButtonText;

	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public TextMeshProUGUI reportButtonText;

	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public TextMeshProUGUI userNameText;

	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public TextMeshProUGUI gameModeText;

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public TextMeshProUGUI teamText;

	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public TextMeshProUGUI userIdText;

	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private StringBuilder _sb;

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0xBE69E0", Offset = "0xBE69E0", VA = "0xBE69E0")]
	private void Start()
	{
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0xBE6B04", Offset = "0xBE6B04", VA = "0xBE6B04")]
	private void Update()
	{
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0xBE717C", Offset = "0xBE717C", VA = "0xBE717C")]
	public PlayerListRow()
	{
	}

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0xBE71FC", Offset = "0xBE71FC", VA = "0xBE71FC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A8944", Offset = "0x7A8944")]
	private void <Start>b__18_0()
	{
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0xBE72E8", Offset = "0xBE72E8", VA = "0xBE72E8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A8954", Offset = "0x7A8954")]
	private void <Start>b__18_1()
	{
	}
}
[Token(Token = "0x2000153")]
public class SliderScript : MonoBehaviour
{
	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Sharpen _sharpen;

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0xDBD464", Offset = "0xDBD464", VA = "0xDBD464")]
	private void Update()
	{
	}

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0xDBD4E4", Offset = "0xDBD4E4", VA = "0xDBD4E4")]
	public void MoveSlider(UnityEngine.UI.Slider a)
	{
	}

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0xDBD528", Offset = "0xDBD528", VA = "0xDBD528")]
	public SliderScript()
	{
	}
}
[Token(Token = "0x2000154")]
[ExecuteInEditMode]
public class Sharpen : MonoBehaviour
{
	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79B1B4", Offset = "0x79B1B4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79B1B4", Offset = "0x79B1B4")]
	public float Sharpness;

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material material;

	[Token(Token = "0x6000600")]
	[Address(RVA = "0xC91CF8", Offset = "0xC91CF8", VA = "0xC91CF8")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x6000601")]
	[Address(RVA = "0xC91DF8", Offset = "0xC91DF8", VA = "0xC91DF8")]
	public Sharpen()
	{
	}
}
[Token(Token = "0x2000155")]
public class TestDunkForce : MonoBehaviour
{
	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ConfigurableJoint SwingBodyConfigJoint;

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HingeJoint RimHingeJoint;

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Rigidbody swingRB;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float TESTForceMultiplyer;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform pendant;

	[Token(Token = "0x6000602")]
	[Address(RVA = "0xE7EA64", Offset = "0xE7EA64", VA = "0xE7EA64")]
	private void Start()
	{
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0xE7EA68", Offset = "0xE7EA68", VA = "0xE7EA68")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0xE7EB0C", Offset = "0xE7EB0C", VA = "0xE7EB0C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000605")]
	[Address(RVA = "0xE7EB10", Offset = "0xE7EB10", VA = "0xE7EB10")]
	public void SetConfigJointPos(Vector3 newPos)
	{
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0xE7EAB0", Offset = "0xE7EAB0", VA = "0xE7EAB0")]
	public void AddSwingForce(Vector3 velocity)
	{
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0xE7EBB8", Offset = "0xE7EBB8", VA = "0xE7EBB8")]
	public Vector3 GetSwingForce()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000608")]
	[Address(RVA = "0xE7EB64", Offset = "0xE7EB64", VA = "0xE7EB64")]
	private void ResetSwingVelocity()
	{
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0xE7EBD4", Offset = "0xE7EBD4", VA = "0xE7EBD4")]
	public TestDunkForce()
	{
	}
}
[Token(Token = "0x2000156")]
public class ChatController : MonoBehaviour
{
	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_InputField ChatInputField;

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text ChatDisplayOutput;

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Scrollbar ChatScrollbar;

	[Token(Token = "0x600060A")]
	[Address(RVA = "0xF1C318", Offset = "0xF1C318", VA = "0xF1C318")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0xF1C3DC", Offset = "0xF1C3DC", VA = "0xF1C3DC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0xF1C4A0", Offset = "0xF1C4A0", VA = "0xF1C4A0")]
	private void AddToChatOutput(string newText)
	{
	}

	[Token(Token = "0x600060D")]
	[Address(RVA = "0xF1C93C", Offset = "0xF1C93C", VA = "0xF1C93C")]
	public ChatController()
	{
	}
}
[Token(Token = "0x2000157")]
public class DropdownSample : MonoBehaviour
{
	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMeshProUGUI text;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TMP_Dropdown dropdownWithoutPlaceholder;

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TMP_Dropdown dropdownWithPlaceholder;

	[Token(Token = "0x600060E")]
	[Address(RVA = "0xE6D590", Offset = "0xE6D590", VA = "0xE6D590")]
	public void OnButtonClick()
	{
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0xE6D69C", Offset = "0xE6D69C", VA = "0xE6D69C")]
	public DropdownSample()
	{
	}
}
[Token(Token = "0x2000158")]
public class EnvMapAnimator : MonoBehaviour
{
	[Token(Token = "0x2000159")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x796670", Offset = "0x796670")]
	private sealed class <Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnvMapAnimator <>4__this;

		[Token(Token = "0x40007D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Matrix4x4 <matrix>5__2;

		[Token(Token = "0x17000086")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000616")]
			[Address(RVA = "0xB09E9C", Offset = "0xB09E9C", VA = "0xB09E9C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000087")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000618")]
			[Address(RVA = "0xB09EE4", Offset = "0xB09EE4", VA = "0xB09EE4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000613")]
		[Address(RVA = "0xB09CB4", Offset = "0xB09CB4", VA = "0xB09CB4")]
		[DebuggerHidden]
		public <Start>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000614")]
		[Address(RVA = "0xB09CE0", Offset = "0xB09CE0", VA = "0xB09CE0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000615")]
		[Address(RVA = "0xB09CE4", Offset = "0xB09CE4", VA = "0xB09CE4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000617")]
		[Address(RVA = "0xB09EA4", Offset = "0xB09EA4", VA = "0xB09EA4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 RotationSpeeds;

	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private TMP_Text m_textMeshPro;

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material m_material;

	[Token(Token = "0x6000610")]
	[Address(RVA = "0xE77A6C", Offset = "0xE77A6C", VA = "0xE77A6C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0xE77AF4", Offset = "0xE77AF4", VA = "0xE77AF4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7A8964", Offset = "0x7A8964")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0xE77B6C", Offset = "0xE77B6C", VA = "0xE77B6C")]
	public EnvMapAnimator()
	{
	}
}
[Token(Token = "0x200015A")]
public class ExampleCardItemAction : MonoBehaviour
{
	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform title;

	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform description;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Text titleText;

	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Text descriptionText;

	[Token(Token = "0x6000619")]
	[Address(RVA = "0xE77D10", Offset = "0xE77D10", VA = "0xE77D10")]
	private void Awake()
	{
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0xE77E28", Offset = "0xE77E28", VA = "0xE77E28")]
	private void Start()
	{
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0xE77EE0", Offset = "0xE77EE0", VA = "0xE77EE0")]
	private void ShowDescription(Card card)
	{
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0xE77FE0", Offset = "0xE77FE0", VA = "0xE77FE0")]
	public ExampleCardItemAction()
	{
	}
}
[Token(Token = "0x200015B")]
public class ExampleDynamicCardList : MonoBehaviour
{
	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CardListManager clm;

	[Token(Token = "0x600061D")]
	[Address(RVA = "0xE77FE8", Offset = "0xE77FE8", VA = "0xE77FE8")]
	private void Start()
	{
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0xE77FEC", Offset = "0xE77FEC", VA = "0xE77FEC")]
	public void UpdateList()
	{
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0xE780E0", Offset = "0xE780E0", VA = "0xE780E0")]
	public ExampleDynamicCardList()
	{
	}
}
[Token(Token = "0x200015C")]
public class ExampleOptionControl : MonoBehaviour
{
	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OptionsManager optionsManager;

	[Token(Token = "0x6000620")]
	[Address(RVA = "0xE780E8", Offset = "0xE780E8", VA = "0xE780E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0xE781AC", Offset = "0xE781AC", VA = "0xE781AC")]
	private void SwitchInteractionMode(int i)
	{
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0xE783E8", Offset = "0xE783E8", VA = "0xE783E8")]
	public ExampleOptionControl()
	{
	}
}
[Token(Token = "0x200015D")]
public class InvokeKeyboard : MonoBehaviour, ISelectHandler, IEventSystemHandler, IDeselectHandler
{
	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject keyboard;

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool hideKeyboardOnDeslect;

	[Token(Token = "0x6000623")]
	[Address(RVA = "0xF5E690", Offset = "0xF5E690", VA = "0xF5E690", Slot = "4")]
	public void OnSelect(BaseEventData eventData)
	{
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0xF5E6E0", Offset = "0xF5E6E0", VA = "0xF5E6E0", Slot = "5")]
	public void OnDeselect(BaseEventData eventData)
	{
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0xF5E738", Offset = "0xF5E738", VA = "0xF5E738")]
	public InvokeKeyboard()
	{
	}
}
[Token(Token = "0x200015E")]
public class SwitchUI : MonoBehaviour
{
	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> canvas;

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int currentIndex;

	[Token(Token = "0x6000626")]
	[Address(RVA = "0xDC712C", Offset = "0xDC712C", VA = "0xDC712C")]
	public void NextUI()
	{
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0xDC7224", Offset = "0xDC7224", VA = "0xDC7224")]
	public SwitchUI()
	{
	}
}
[Token(Token = "0x200015F")]
public static class DebugUtils
{
	[Serializable]
	[Token(Token = "0x2000160")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x796680", Offset = "0x796680")]
	private sealed class <>c
	{
		[Token(Token = "0x40007E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40007E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<object, string> <>9__0_0;

		[Token(Token = "0x600062B")]
		[Address(RVA = "0xB096BC", Offset = "0xB096BC", VA = "0xB096BC")]
		public <>c()
		{
		}

		[Token(Token = "0x600062C")]
		[Address(RVA = "0xB096C4", Offset = "0xB096C4", VA = "0xB096C4")]
		internal string <ToString>b__0_0(object o)
		{
			return null;
		}
	}

	[Serializable]
	[Token(Token = "0x2000161")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x796690", Offset = "0x796690")]
	private sealed class <>c__1<TKey, TValue>
	{
		[Token(Token = "0x40007E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c__1<TKey, TValue> <>9;

		[Token(Token = "0x40007E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Func<KeyValuePair<TKey, TValue>, string> <>9__1_0;

		[Token(Token = "0x600062E")]
		public <>c__1()
		{
		}

		[Token(Token = "0x600062F")]
		internal string <ToString>b__1_0(KeyValuePair<TKey, TValue> kvp)
		{
			return null;
		}
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0xB78378", Offset = "0xB78378", VA = "0xB78378")]
	public static string ToString(Array array)
	{
		return null;
	}

	[Token(Token = "0x6000629")]
	public static string ToString<TKey, TValue>(Dictionary<TKey, TValue> dict)
	{
		return null;
	}
}
[Token(Token = "0x2000162")]
public class SerializableDictionaryExample : MonoBehaviour
{
	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private StringStringDictionary m_stringStringDictionary;

	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ObjectColorDictionary m_objectColorDictionary;

	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public StringColorArrayDictionary m_stringColorArrayDictionary;

	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public StringHashSet m_stringHashSet;

	[Token(Token = "0x17000088")]
	public IDictionary<string, string> StringStringDictionary
	{
		[Token(Token = "0x6000630")]
		[Address(RVA = "0xC916E0", Offset = "0xC916E0", VA = "0xC916E0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000631")]
		[Address(RVA = "0xC916E8", Offset = "0xC916E8", VA = "0xC916E8")]
		set
		{
		}
	}

	[Token(Token = "0x6000632")]
	[Address(RVA = "0xC9174C", Offset = "0xC9174C", VA = "0xC9174C")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000633")]
	[Address(RVA = "0xC91928", Offset = "0xC91928", VA = "0xC91928")]
	public SerializableDictionaryExample()
	{
	}
}
[Serializable]
[Token(Token = "0x2000163")]
public class StringStringDictionary : SerializableDictionary<string, string>
{
	[Token(Token = "0x6000634")]
	[Address(RVA = "0xDC6090", Offset = "0xDC6090", VA = "0xDC6090")]
	public StringStringDictionary()
	{
	}
}
[Serializable]
[Token(Token = "0x2000164")]
public class ObjectColorDictionary : SerializableDictionary<UnityEngine.Object, Color>
{
	[Token(Token = "0x6000635")]
	[Address(RVA = "0x12F88EC", Offset = "0x12F88EC", VA = "0x12F88EC")]
	public ObjectColorDictionary()
	{
	}
}
[Serializable]
[Token(Token = "0x2000165")]
public class ColorArrayStorage : SerializableDictionary.Storage<Color[]>
{
	[Token(Token = "0x6000636")]
	[Address(RVA = "0xF1D1C8", Offset = "0xF1D1C8", VA = "0xF1D1C8")]
	public ColorArrayStorage()
	{
	}
}
[Serializable]
[Token(Token = "0x2000166")]
public class StringColorArrayDictionary : SerializableDictionary<string, Color[], ColorArrayStorage>
{
	[Token(Token = "0x6000637")]
	[Address(RVA = "0xDC5FF8", Offset = "0xDC5FF8", VA = "0xDC5FF8")]
	public StringColorArrayDictionary()
	{
	}
}
[Serializable]
[Token(Token = "0x2000167")]
public class MyClass
{
	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int i;

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string str;

	[Token(Token = "0x6000638")]
	[Address(RVA = "0x1F601F4", Offset = "0x1F601F4", VA = "0x1F601F4")]
	public MyClass()
	{
	}
}
[Serializable]
[Token(Token = "0x2000168")]
public class QuaternionMyClassDictionary : SerializableDictionary<Quaternion, MyClass>
{
	[Token(Token = "0x6000639")]
	[Address(RVA = "0xC86768", Offset = "0xC86768", VA = "0xC86768")]
	public QuaternionMyClassDictionary()
	{
	}
}
[Serializable]
[Token(Token = "0x2000169")]
public class StringHashSet : SerializableHashSet<string>
{
	[Token(Token = "0x600063A")]
	[Address(RVA = "0xDC6044", Offset = "0xDC6044", VA = "0xDC6044")]
	public StringHashSet()
	{
	}
}
[Token(Token = "0x200016A")]
public abstract class SerializableDictionaryBase
{
	[Token(Token = "0x200016B")]
	public abstract class Storage
	{
		[Token(Token = "0x600063C")]
		[Address(RVA = "0xCC050C", Offset = "0xCC050C", VA = "0xCC050C")]
		protected Storage()
		{
		}
	}

	[Token(Token = "0x200016C")]
	protected class Dictionary<TKey, TValue> : System.Collections.Generic.Dictionary<TKey, TValue>
	{
		[Token(Token = "0x600063D")]
		public Dictionary()
		{
		}

		[Token(Token = "0x600063E")]
		public Dictionary(IDictionary<TKey, TValue> dict)
		{
		}

		[Token(Token = "0x600063F")]
		public Dictionary(SerializationInfo info, StreamingContext context)
		{
		}
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0xC916D8", Offset = "0xC916D8", VA = "0xC916D8")]
	protected SerializableDictionaryBase()
	{
	}
}
[Serializable]
[Token(Token = "0x200016D")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x7966A0", Offset = "0x7966A0")]
public abstract class SerializableDictionaryBase<TKey, TValue, TValueStorage> : SerializableDictionaryBase, IDictionary<TKey, TValue>, ICollection<KeyValuePair<TKey, TValue>>, IEnumerable<KeyValuePair<TKey, TValue>>, IEnumerable, IDictionary, System.Collections.ICollection, ISerializationCallbackReceiver, IDeserializationCallback, ISerializable
{
	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Dictionary<TKey, TValue> m_dict;

	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private TKey[] m_keys;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private TValueStorage[] m_values;

	[Token(Token = "0x17000089")]
	public ICollection<TKey> Keys
	{
		[Token(Token = "0x6000647")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700008A")]
	public ICollection<TValue> Values
	{
		[Token(Token = "0x6000648")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700008B")]
	public int Count
	{
		[Token(Token = "0x6000649")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700008C")]
	public bool IsReadOnly
	{
		[Token(Token = "0x600064A")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700008D")]
	public TValue Item
	{
		[Token(Token = "0x600064B")]
		get
		{
			return (TValue)null;
		}
		[Token(Token = "0x600064C")]
		set
		{
		}
	}

	[Token(Token = "0x1700008E")]
	public bool IsFixedSize
	{
		[Token(Token = "0x6000658")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700008F")]
	private System.Collections.ICollection System.Collections.IDictionary.Keys
	{
		[Token(Token = "0x6000659")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000090")]
	private System.Collections.ICollection System.Collections.IDictionary.Values
	{
		[Token(Token = "0x600065A")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000091")]
	public bool IsSynchronized
	{
		[Token(Token = "0x600065B")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000092")]
	public object SyncRoot
	{
		[Token(Token = "0x600065C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000093")]
	public object Item
	{
		[Token(Token = "0x600065D")]
		get
		{
			return null;
		}
		[Token(Token = "0x600065E")]
		set
		{
		}
	}

	[Token(Token = "0x6000640")]
	public SerializableDictionaryBase()
	{
	}

	[Token(Token = "0x6000641")]
	public SerializableDictionaryBase(IDictionary<TKey, TValue> dict)
	{
	}

	[Token(Token = "0x6000642")]
	protected abstract void SetValue(TValueStorage[] storage, int i, TValue value);

	[Token(Token = "0x6000643")]
	protected abstract TValue GetValue(TValueStorage[] storage, int i);

	[Token(Token = "0x6000644")]
	public void CopyFrom(IDictionary<TKey, TValue> dict)
	{
	}

	[Token(Token = "0x6000645")]
	public void OnAfterDeserialize()
	{
	}

	[Token(Token = "0x6000646")]
	public void OnBeforeSerialize()
	{
	}

	[Token(Token = "0x600064D")]
	public void Add(TKey key, TValue value)
	{
	}

	[Token(Token = "0x600064E")]
	public bool ContainsKey(TKey key)
	{
		return default(bool);
	}

	[Token(Token = "0x600064F")]
	public bool Remove(TKey key)
	{
		return default(bool);
	}

	[Token(Token = "0x6000650")]
	public bool TryGetValue(TKey key, out TValue value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000651")]
	public void Add(KeyValuePair<TKey, TValue> item)
	{
	}

	[Token(Token = "0x6000652")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000653")]
	public bool Contains(KeyValuePair<TKey, TValue> item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000654")]
	public void CopyTo(KeyValuePair<TKey, TValue>[] array, int arrayIndex)
	{
	}

	[Token(Token = "0x6000655")]
	public bool Remove(KeyValuePair<TKey, TValue> item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000656")]
	public IEnumerator<KeyValuePair<TKey, TValue>> GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x6000657")]
	private IEnumerator System.Collections.IEnumerable.GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x600065F")]
	public void Add(object key, object value)
	{
	}

	[Token(Token = "0x6000660")]
	public bool Contains(object key)
	{
		return default(bool);
	}

	[Token(Token = "0x6000661")]
	private IDictionaryEnumerator System.Collections.IDictionary.GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x6000662")]
	public void Remove(object key)
	{
	}

	[Token(Token = "0x6000663")]
	public void CopyTo(Array array, int index)
	{
	}

	[Token(Token = "0x6000664")]
	public void OnDeserialization(object sender)
	{
	}

	[Token(Token = "0x6000665")]
	protected SerializableDictionaryBase(SerializationInfo info, StreamingContext context)
	{
	}

	[Token(Token = "0x6000666")]
	public void GetObjectData(SerializationInfo info, StreamingContext context)
	{
	}
}
[Token(Token = "0x200016E")]
public static class SerializableDictionary
{
	[Token(Token = "0x200016F")]
	public class Storage<T> : SerializableDictionaryBase.Storage
	{
		[Token(Token = "0x40007F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T data;

		[Token(Token = "0x6000667")]
		public Storage()
		{
		}
	}
}
[Serializable]
[Token(Token = "0x2000170")]
public class SerializableDictionary<TKey, TValue> : SerializableDictionaryBase<TKey, TValue, TValue>
{
	[Token(Token = "0x6000668")]
	public SerializableDictionary()
	{
	}

	[Token(Token = "0x6000669")]
	public SerializableDictionary(IDictionary<TKey, TValue> dict)
	{
	}

	[Token(Token = "0x600066A")]
	protected SerializableDictionary(SerializationInfo info, StreamingContext context)
	{
	}

	[Token(Token = "0x600066B")]
	protected override TValue GetValue(TValue[] storage, int i)
	{
		return (TValue)null;
	}

	[Token(Token = "0x600066C")]
	protected override void SetValue(TValue[] storage, int i, TValue value)
	{
	}
}
[Serializable]
[Token(Token = "0x2000171")]
public class SerializableDictionary<TKey, TValue, TValueStorage> : SerializableDictionaryBase<TKey, TValue, TValueStorage> where TValueStorage : SerializableDictionary.Storage<TValue>, new()
{
	[Token(Token = "0x600066D")]
	public SerializableDictionary()
	{
	}

	[Token(Token = "0x600066E")]
	public SerializableDictionary(IDictionary<TKey, TValue> dict)
	{
	}

	[Token(Token = "0x600066F")]
	protected SerializableDictionary(SerializationInfo info, StreamingContext context)
	{
	}

	[Token(Token = "0x6000670")]
	protected override TValue GetValue(TValueStorage[] storage, int i)
	{
		return (TValue)null;
	}

	[Token(Token = "0x6000671")]
	protected override void SetValue(TValueStorage[] storage, int i, TValue value)
	{
	}
}
[Token(Token = "0x2000172")]
public abstract class SerializableHashSetBase
{
	[Token(Token = "0x2000173")]
	public abstract class Storage
	{
		[Token(Token = "0x6000673")]
		[Address(RVA = "0xCC0514", Offset = "0xCC0514", VA = "0xCC0514")]
		protected Storage()
		{
		}
	}

	[Token(Token = "0x2000174")]
	protected class HashSet<TValue> : System.Collections.Generic.HashSet<TValue>
	{
		[Token(Token = "0x6000674")]
		public HashSet()
		{
		}

		[Token(Token = "0x6000675")]
		public HashSet(ISet<TValue> set)
		{
		}

		[Token(Token = "0x6000676")]
		public HashSet(SerializationInfo info, StreamingContext context)
		{
		}
	}

	[Token(Token = "0x6000672")]
	[Address(RVA = "0xC91930", Offset = "0xC91930", VA = "0xC91930")]
	protected SerializableHashSetBase()
	{
	}
}
[Serializable]
[Token(Token = "0x2000175")]
public abstract class SerializableHashSet<T> : SerializableHashSetBase, ISet<T>, ICollection<T>, IEnumerable<T>, IEnumerable, ISerializationCallbackReceiver, IDeserializationCallback, ISerializable
{
	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private HashSet<T> m_hashSet;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private T[] m_keys;

	[Token(Token = "0x17000094")]
	public int Count
	{
		[Token(Token = "0x600067C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000095")]
	public bool IsReadOnly
	{
		[Token(Token = "0x600067D")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000677")]
	public SerializableHashSet()
	{
	}

	[Token(Token = "0x6000678")]
	public SerializableHashSet(ISet<T> set)
	{
	}

	[Token(Token = "0x6000679")]
	public void CopyFrom(ISet<T> set)
	{
	}

	[Token(Token = "0x600067A")]
	public void OnAfterDeserialize()
	{
	}

	[Token(Token = "0x600067B")]
	public void OnBeforeSerialize()
	{
	}

	[Token(Token = "0x600067E")]
	public bool Add(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x600067F")]
	public void ExceptWith(IEnumerable<T> other)
	{
	}

	[Token(Token = "0x6000680")]
	public void IntersectWith(IEnumerable<T> other)
	{
	}

	[Token(Token = "0x6000681")]
	public bool IsProperSubsetOf(IEnumerable<T> other)
	{
		return default(bool);
	}

	[Token(Token = "0x6000682")]
	public bool IsProperSupersetOf(IEnumerable<T> other)
	{
		return default(bool);
	}

	[Token(Token = "0x6000683")]
	public bool IsSubsetOf(IEnumerable<T> other)
	{
		return default(bool);
	}

	[Token(Token = "0x6000684")]
	public bool IsSupersetOf(IEnumerable<T> other)
	{
		return default(bool);
	}

	[Token(Token = "0x6000685")]
	public bool Overlaps(IEnumerable<T> other)
	{
		return default(bool);
	}

	[Token(Token = "0x6000686")]
	public bool SetEquals(IEnumerable<T> other)
	{
		return default(bool);
	}

	[Token(Token = "0x6000687")]
	public void SymmetricExceptWith(IEnumerable<T> other)
	{
	}

	[Token(Token = "0x6000688")]
	public void UnionWith(IEnumerable<T> other)
	{
	}

	[Token(Token = "0x6000689")]
	private void System.Collections.Generic.ICollection<T>.Add(T item)
	{
	}

	[Token(Token = "0x600068A")]
	public void Clear()
	{
	}

	[Token(Token = "0x600068B")]
	public bool Contains(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x600068C")]
	public void CopyTo(T[] array, int arrayIndex)
	{
	}

	[Token(Token = "0x600068D")]
	public bool Remove(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x600068E")]
	public IEnumerator<T> GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x600068F")]
	private IEnumerator System.Collections.IEnumerable.GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x6000690")]
	public void OnDeserialization(object sender)
	{
	}

	[Token(Token = "0x6000691")]
	protected SerializableHashSet(SerializationInfo info, StreamingContext context)
	{
	}

	[Token(Token = "0x6000692")]
	public void GetObjectData(SerializationInfo info, StreamingContext context)
	{
	}
}
[Token(Token = "0x2000176")]
public class test : MonoBehaviour
{
	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject pivot;

	[Token(Token = "0x6000693")]
	[Address(RVA = "0xB03798", Offset = "0xB03798", VA = "0xB03798")]
	private void Start()
	{
	}

	[Token(Token = "0x6000694")]
	[Address(RVA = "0xB03990", Offset = "0xB03990", VA = "0xB03990")]
	private void Update()
	{
	}

	[Token(Token = "0x6000695")]
	[Address(RVA = "0xB03994", Offset = "0xB03994", VA = "0xB03994")]
	public test()
	{
	}
}
[Token(Token = "0x2000177")]
public class Credits : MonoBehaviour
{
	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string credits;

	[Token(Token = "0x6000696")]
	[Address(RVA = "0xB73B64", Offset = "0xB73B64", VA = "0xB73B64")]
	private void Start()
	{
	}

	[Token(Token = "0x6000697")]
	[Address(RVA = "0xB73C94", Offset = "0xB73C94", VA = "0xB73C94")]
	private void Update()
	{
	}

	[Token(Token = "0x6000698")]
	[Address(RVA = "0xB73C98", Offset = "0xB73C98", VA = "0xB73C98")]
	public Credits()
	{
	}
}
[Token(Token = "0x2000178")]
public class AchievementsManager : MonoBehaviour
{
	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AchievementsManager Instance;

	[Token(Token = "0x40007F6")]
	private const string API_SCORE_10_BASKETS_IN_SESSION = "SCORE_10_BASKETS_IN_SESSION";

	[Token(Token = "0x40007F7")]
	private const string API_SCORE_100_BASKETS_IN_SESSION = "SCORE_100_BASKETS_IN_SESSION";

	[Token(Token = "0x40007F8")]
	private const string API_SCORE_1000_BASKETS_IN_SESSION = "SCORE_1000_BASKETS_IN_SESSION";

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int basketsScoredInSession;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool m_likesToWinUnlocked;

	[Token(Token = "0x17000096")]
	public bool LikesToWin
	{
		[Token(Token = "0x6000699")]
		[Address(RVA = "0xAE1AF4", Offset = "0xAE1AF4", VA = "0xAE1AF4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600069A")]
	[Address(RVA = "0xAE1AFC", Offset = "0xAE1AFC", VA = "0xAE1AFC")]
	private void Start()
	{
	}

	[Token(Token = "0x600069B")]
	[Address(RVA = "0xAE1B50", Offset = "0xAE1B50", VA = "0xAE1B50")]
	public void CheckForAchievmentUpdates()
	{
	}

	[Token(Token = "0x600069C")]
	[Address(RVA = "0xAE1CF8", Offset = "0xAE1CF8", VA = "0xAE1CF8")]
	public void RecordBasketScored()
	{
	}

	[Token(Token = "0x600069D")]
	[Address(RVA = "0xAE1DE8", Offset = "0xAE1DE8", VA = "0xAE1DE8")]
	private void UnlockScore10BasketsInSession()
	{
	}

	[Token(Token = "0x600069E")]
	[Address(RVA = "0xAE1E3C", Offset = "0xAE1E3C", VA = "0xAE1E3C")]
	private void UnlockScore100BasketsInSession()
	{
	}

	[Token(Token = "0x600069F")]
	[Address(RVA = "0xAE1EDC", Offset = "0xAE1EDC", VA = "0xAE1EDC")]
	private void UnlockScore1000BasketsInSession()
	{
	}

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0xAE1F7C", Offset = "0xAE1F7C", VA = "0xAE1F7C")]
	public AchievementsManager()
	{
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0xAE1F84", Offset = "0xAE1F84", VA = "0xAE1F84")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A8A14", Offset = "0x7A8A14")]
	private void <CheckForAchievmentUpdates>b__9_0(Message<AchievementProgressList> msg)
	{
	}
}
[Token(Token = "0x2000179")]
public class NCHandEvents : MonoBehaviour
{
	[Token(Token = "0x60006A2")]
	[Address(RVA = "0x1F63374", Offset = "0x1F63374", VA = "0x1F63374")]
	private void Start()
	{
	}

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0x1F63378", Offset = "0x1F63378", VA = "0x1F63378")]
	private void Update()
	{
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0x1F6337C", Offset = "0x1F6337C", VA = "0x1F6337C")]
	public NCHandEvents()
	{
	}
}
[Token(Token = "0x200017A")]
public class AutoVRIKModelV2 : MonoBehaviour
{
	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RealtimeAvatar realtimeAvatar;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlayerSync playerSync;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public NCNetworkPlayer networkPlayer;

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private VRIK vrik;

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera mainCamera;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float _mouthSize;

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float _targetMouthSize;

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int LODDistance;

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int LODHighDistance;

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0xAE79CC", Offset = "0xAE79CC", VA = "0xAE79CC")]
	private void Start()
	{
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0xAE7DA8", Offset = "0xAE7DA8", VA = "0xAE7DA8")]
	private void Update()
	{
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0xAE8104", Offset = "0xAE8104", VA = "0xAE8104")]
	private int calcLODLevel()
	{
		return default(int);
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0xAE8208", Offset = "0xAE8208", VA = "0xAE8208")]
	public AutoVRIKModelV2()
	{
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0xAE821C", Offset = "0xAE821C", VA = "0xAE821C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A8A24", Offset = "0x7A8A24")]
	private void <Start>b__5_0()
	{
	}
}
[Token(Token = "0x200017B")]
public class BackgroundMusic : MonoBehaviour
{
	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static BackgroundMusic Instance;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip[] myMusic;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int currentSong;

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AudioSource audioSource;

	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text text;

	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEngine.UI.Slider volumeSlider;

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0xAE9A2C", Offset = "0xAE9A2C", VA = "0xAE9A2C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0xAE9BF8", Offset = "0xAE9BF8", VA = "0xAE9BF8")]
	private void Update()
	{
	}

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0xAE9E40", Offset = "0xAE9E40", VA = "0xAE9E40")]
	public void playNextSong()
	{
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0xAE9AE8", Offset = "0xAE9AE8", VA = "0xAE9AE8")]
	public void playSong(int newSong)
	{
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0xAE9CC8", Offset = "0xAE9CC8", VA = "0xAE9CC8")]
	public void playRandomSong()
	{
	}

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0xAE9E6C", Offset = "0xAE9E6C", VA = "0xAE9E6C")]
	private string cleanNameOfSong(string name)
	{
		return null;
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0xAE9F40", Offset = "0xAE9F40", VA = "0xAE9F40")]
	public BackgroundMusic()
	{
	}
}
[Token(Token = "0x200017C")]
public class BallController : MonoBehaviour
{
	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public NCGrabbableBasketball[] balls;

	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform center;

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int frame;

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0xAE9F48", Offset = "0xAE9F48", VA = "0xAE9F48")]
	private void Start()
	{
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0xAE9FC4", Offset = "0xAE9FC4", VA = "0xAE9FC4")]
	private void deactivateBall(NCGrabbableBasketball ball)
	{
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0xAEA154", Offset = "0xAEA154", VA = "0xAEA154")]
	private void Update()
	{
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0xAEA70C", Offset = "0xAEA70C", VA = "0xAEA70C")]
	public BallController()
	{
	}
}
[Token(Token = "0x200017D")]
public class BallersSlowmo : MonoBehaviour
{
	[Token(Token = "0x200017E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7966D8", Offset = "0x7966D8")]
	private sealed class <resumeTimeRoutine>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BallersSlowmo <>4__this;

		[Token(Token = "0x17000098")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006C0")]
			[Address(RVA = "0xB03F64", Offset = "0xB03F64", VA = "0xB03F64", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000099")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006C2")]
			[Address(RVA = "0xB03FAC", Offset = "0xB03FAC", VA = "0xB03FAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006BD")]
		[Address(RVA = "0xB03D94", Offset = "0xB03D94", VA = "0xB03D94")]
		[DebuggerHidden]
		public <resumeTimeRoutine>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x60006BE")]
		[Address(RVA = "0xB03DC0", Offset = "0xB03DC0", VA = "0xB03DC0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006BF")]
		[Address(RVA = "0xB03DC4", Offset = "0xB03DC4", VA = "0xB03DC4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006C1")]
		[Address(RVA = "0xB03F6C", Offset = "0xB03F6C", VA = "0xB03F6C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79B278", Offset = "0x79B278")]
	public float SlowTimeScale;

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79B2B0", Offset = "0x79B2B0")]
	public AudioClip SlowTimeClip;

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79B2E8", Offset = "0x79B2E8")]
	public AudioClip SpeedupTimeClip;

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _slowingTime;

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool routineRunning;

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioSource audioSource;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool ForceTimeScale;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Stopwatch _stopwatchRewind;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private IEnumerator resumeRoutine;

	[Token(Token = "0x17000097")]
	public bool TimeSlowing
	{
		[Token(Token = "0x60006B5")]
		[Address(RVA = "0xAEA714", Offset = "0xAEA714", VA = "0xAEA714")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0xAEA71C", Offset = "0xAEA71C", VA = "0xAEA71C")]
	private void Start()
	{
	}

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0xAEA778", Offset = "0xAEA778", VA = "0xAEA778")]
	private void Update()
	{
	}

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0xAEAA74", Offset = "0xAEAA74", VA = "0xAEAA74", Slot = "4")]
	public virtual bool SlowTimeInputDown()
	{
		return default(bool);
	}

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0xAEA88C", Offset = "0xAEA88C", VA = "0xAEA88C")]
	public void SlowTime()
	{
	}

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0xAEAA00", Offset = "0xAEAA00", VA = "0xAEAA00")]
	public void ResumeTime()
	{
	}

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0xAEAB3C", Offset = "0xAEAB3C", VA = "0xAEAB3C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7A8A34", Offset = "0x7A8A34")]
	private IEnumerator resumeTimeRoutine()
	{
		return null;
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0xAEABB4", Offset = "0xAEABB4", VA = "0xAEABB4")]
	public BallersSlowmo()
	{
	}
}
[Token(Token = "0x200017F")]
public class BigLocomotion : MonoBehaviour
{
	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float jumpForce;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float lastJump;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody rb;

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0xAEEE60", Offset = "0xAEEE60", VA = "0xAEEE60")]
	private void Start()
	{
	}

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0xAEEEBC", Offset = "0xAEEEBC", VA = "0xAEEEBC")]
	private void Update()
	{
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0xAEEF8C", Offset = "0xAEEF8C", VA = "0xAEEF8C")]
	public void addJumpForce()
	{
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0xAEF0C4", Offset = "0xAEF0C4", VA = "0xAEF0C4")]
	public BigLocomotion()
	{
	}
}
[Token(Token = "0x2000180")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7966E8", Offset = "0x7966E8")]
public class BuildVersionManager : MonoBehaviour
{
	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string buildID;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int buildNumber;

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0xAF0E7C", Offset = "0xAF0E7C", VA = "0xAF0E7C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0xAF0ED8", Offset = "0xAF0ED8", VA = "0xAF0ED8")]
	public BuildVersionManager()
	{
	}
}
[Token(Token = "0x2000181")]
public class ClothAddBasketballColliders : MonoBehaviour
{
	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Cloth _cloth;

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0xF1CEA8", Offset = "0xF1CEA8", VA = "0xF1CEA8")]
	private void Start()
	{
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0xF1D104", Offset = "0xF1D104", VA = "0xF1D104")]
	private void Update()
	{
	}

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0xF1D108", Offset = "0xF1D108", VA = "0xF1D108")]
	public ClothAddBasketballColliders()
	{
	}
}
[Token(Token = "0x2000182")]
public class CourtController : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000183")]
	public class CourtSide
	{
		[Token(Token = "0x4000826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ScoreZone scoreZone;

		[Token(Token = "0x4000827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int score;

		[Token(Token = "0x4000828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Stopwatch stopwatch;

		[Token(Token = "0x60006D3")]
		[Address(RVA = "0xB085D4", Offset = "0xB085D4", VA = "0xB085D4")]
		public void ScoreFieldGoal(Vector3 releasePosition)
		{
		}

		[Token(Token = "0x60006D4")]
		[Address(RVA = "0xB086D4", Offset = "0xB086D4", VA = "0xB086D4")]
		private static bool is3Pointer(ScoreZone scoreZone, Vector3 releasePosition)
		{
			return default(bool);
		}

		[Token(Token = "0x60006D5")]
		[Address(RVA = "0xB0877C", Offset = "0xB0877C", VA = "0xB0877C")]
		private static bool is4Pointer(ScoreZone scoreZone, Vector3 releasePosition)
		{
			return default(bool);
		}

		[Token(Token = "0x60006D6")]
		[Address(RVA = "0xB0866C", Offset = "0xB0866C", VA = "0xB0866C")]
		public static int calcPoints(ScoreZone scoreZone, Vector3 releasePosition)
		{
			return default(int);
		}

		[Token(Token = "0x60006D7")]
		[Address(RVA = "0xB08824", Offset = "0xB08824", VA = "0xB08824")]
		public CourtSide()
		{
		}
	}

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform spawnLocationCenter;

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public NCNetworkManager.CourtName courtName;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform playerController;

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CharacterController characterController;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform coreInteractionEnvironment;

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public CourtSide[] courtSides;

	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material skyboxMaterial;

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0xB72C10", Offset = "0xB72C10", VA = "0xB72C10")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0xB72EA4", Offset = "0xB72EA4", VA = "0xB72EA4")]
	public CourtSide GetSideFromID(ScoreZone side)
	{
		return null;
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0xB730B0", Offset = "0xB730B0", VA = "0xB730B0")]
	public int GetSideIndexFromID(ScoreZone side)
	{
		return default(int);
	}

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0xB73064", Offset = "0xB73064", VA = "0xB73064")]
	private bool isSaveGameObject(GameObject a, GameObject b)
	{
		return default(bool);
	}

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0xB731C0", Offset = "0xB731C0", VA = "0xB731C0")]
	public void spawnPlayerAtCourt()
	{
	}

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0xB733D4", Offset = "0xB733D4", VA = "0xB733D4")]
	public void exitCourt()
	{
	}

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0xB733FC", Offset = "0xB733FC", VA = "0xB733FC")]
	public CourtController()
	{
	}
}
[Token(Token = "0x2000184")]
public class CourtMenuButton : MonoBehaviour
{
	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public NCNetworkManager.CourtName courtName;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public GameController.GameMode gameMode;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int index;

	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int numPlayers;

	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int maxPlayers;

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Sprite courtSprite;

	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI heading;

	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Image image;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEngine.UI.Button imageButton;

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMeshProUGUI selectCourtText;

	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextMeshProUGUI gameModeText;

	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public UnityEngine.UI.Button selectCourtButton;

	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TextMeshProUGUI bottomText;

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0xB73458", Offset = "0xB73458", VA = "0xB73458")]
	private void Start()
	{
	}

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0xB7380C", Offset = "0xB7380C", VA = "0xB7380C")]
	private void Update()
	{
	}

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0xB73714", Offset = "0xB73714", VA = "0xB73714")]
	private static string GetColumnName(int index)
	{
		return null;
	}

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0xB73B10", Offset = "0xB73B10", VA = "0xB73B10")]
	public CourtMenuButton()
	{
	}
}
[Token(Token = "0x2000185")]
public class CourtManager : MonoBehaviour
{
	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int selectedCourt;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CourtController[] courtControllers;

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0xB73404", Offset = "0xB73404", VA = "0xB73404")]
	private void Start()
	{
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0xB73408", Offset = "0xB73408", VA = "0xB73408")]
	private void Update()
	{
	}

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0xB7340C", Offset = "0xB7340C", VA = "0xB7340C")]
	public void switchCourt()
	{
	}

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0xB73410", Offset = "0xB73410", VA = "0xB73410")]
	public CourtController GetCourtController()
	{
		return null;
	}

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0xB73450", Offset = "0xB73450", VA = "0xB73450")]
	public CourtManager()
	{
	}
}
[Token(Token = "0x2000186")]
public class DiscordWebhook : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000187")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x796758", Offset = "0x796758")]
	private sealed class <>c
	{
		[Token(Token = "0x400083B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400083C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<bool> <>9__5_0;

		[Token(Token = "0x400083D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<bool> <>9__6_0;

		[Token(Token = "0x60006E8")]
		[Address(RVA = "0xB09748", Offset = "0xB09748", VA = "0xB09748")]
		public <>c()
		{
		}

		[Token(Token = "0x60006E9")]
		[Address(RVA = "0xB09750", Offset = "0xB09750", VA = "0xB09750")]
		internal void <SendWebhook>b__5_0(bool success)
		{
		}

		[Token(Token = "0x60006EA")]
		[Address(RVA = "0xB097D8", Offset = "0xB097D8", VA = "0xB097D8")]
		internal void <SendPrivateWebhook>b__6_0(bool success)
		{
		}
	}

	[Token(Token = "0x2000188")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x796768", Offset = "0x796768")]
	private sealed class <sendWebhook>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400083E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400083F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string message;

		[Token(Token = "0x4000841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string link;

		[Token(Token = "0x4000842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action<bool> action;

		[Token(Token = "0x4000843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UnityWebRequest <www>5__2;

		[Token(Token = "0x1700009A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006EF")]
			[Address(RVA = "0xB09BB8", Offset = "0xB09BB8", VA = "0xB09BB8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006F1")]
			[Address(RVA = "0xB09C00", Offset = "0xB09C00", VA = "0xB09C00", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006EB")]
		[Address(RVA = "0xB09860", Offset = "0xB09860", VA = "0xB09860")]
		[DebuggerHidden]
		public <sendWebhook>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60006EC")]
		[Address(RVA = "0xB0988C", Offset = "0xB0988C", VA = "0xB0988C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006ED")]
		[Address(RVA = "0xB09964", Offset = "0xB09964", VA = "0xB09964", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006EE")]
		[Address(RVA = "0xB098A8", Offset = "0xB098A8", VA = "0xB098A8")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x60006F0")]
		[Address(RVA = "0xB09BC0", Offset = "0xB09BC0", VA = "0xB09BC0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string webhookLink;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string privateWebhookLink;

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DiscordWebhook Instance;

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0xB79DD4", Offset = "0xB79DD4", VA = "0xB79DD4")]
	private void Start()
	{
	}

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0xB79E28", Offset = "0xB79E28", VA = "0xB79E28")]
	public void SendWebhookWithAnalytics(string msg)
	{
	}

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0xB7A204", Offset = "0xB7A204", VA = "0xB7A204")]
	public void SendWebhook(string msg)
	{
	}

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0xB7A47C", Offset = "0xB7A47C", VA = "0xB7A47C")]
	public void SendPrivateWebhook(string msg)
	{
	}

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0xB7A3D4", Offset = "0xB7A3D4", VA = "0xB7A3D4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7A8AE4", Offset = "0x7A8AE4")]
	private IEnumerator sendWebhook(string link, string message, Action<bool> action)
	{
		return null;
	}

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0xB7A64C", Offset = "0xB7A64C", VA = "0xB7A64C")]
	public DiscordWebhook()
	{
	}
}
[Token(Token = "0x2000189")]
public class Dribbling : MonoBehaviour
{
	[Token(Token = "0x200018A")]
	public enum DribbleState
	{
		[Token(Token = "0x4000863")]
		DownDribble,
		[Token(Token = "0x4000864")]
		Homing,
		[Token(Token = "0x4000865")]
		Attached,
		[Token(Token = "0x4000866")]
		Losing,
		[Token(Token = "0x4000867")]
		Held,
		[Token(Token = "0x4000868")]
		None
	}

	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private DribbleState previousDribbleState;

	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public DribbleState dribbleState;

	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform left;

	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform leftTracker;

	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform right;

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform rightTracker;

	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ControllerHand controllingHand;

	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Transform playerCenter;

	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float maxRadius;

	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float loseRadius;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private RaycastHit hit;

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float distance;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float idealMagnitude;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Stopwatch attachTime;

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Stopwatch assistTime;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Stopwatch vibrationTimeStopwatch;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Rigidbody rb;

	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int maxSteps;

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private int homingStep;

	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Vector3 lastPlayerPosition;

	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private Vector3 lastAddedMovementVelocity;

	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Transform playerController;

	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private RealtimeView _realtimeView;

	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private RealtimeTransform _realtimeTransform;

	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private NCGrabbableBasketball grabbableBasketball;

	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public bool isBallDribbled;

	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float assistThreshold;

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Vector3 _perfectBallDir;

	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private float _assist;

	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public bool wasLastCollisionHand;

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0xB7CE20", Offset = "0xB7CE20", VA = "0xB7CE20")]
	private void Start()
	{
	}

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0xB7D1CC", Offset = "0xB7D1CC", VA = "0xB7D1CC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0xB7D698", Offset = "0xB7D698", VA = "0xB7D698")]
	private void Update()
	{
	}

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0xB7E2C4", Offset = "0xB7E2C4", VA = "0xB7E2C4")]
	public static bool isDownRelease(Vector3 handVel)
	{
		return default(bool);
	}

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0xB7E20C", Offset = "0xB7E20C", VA = "0xB7E20C")]
	public static bool isDownDribble(Vector3 prevHandVel, Vector3 handVel)
	{
		return default(bool);
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0xB7E330", Offset = "0xB7E330", VA = "0xB7E330")]
	public Vector3 calcBasicHomingV1(Rigidbody ball, Transform target)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0xB7D50C", Offset = "0xB7D50C", VA = "0xB7D50C")]
	public Vector3 calcBasicHomingV3(Rigidbody ball, Transform target)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0xB7E4C8", Offset = "0xB7E4C8", VA = "0xB7E4C8")]
	public Vector3 calcBasicHomingV2(Rigidbody ball, Transform target)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0xB7E5B8", Offset = "0xB7E5B8", VA = "0xB7E5B8")]
	public Vector3 calcBasicHomingV3(Rigidbody ball, Transform target, float maxAssistDirPercentage, int homingStep)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0xB7E708", Offset = "0xB7E708", VA = "0xB7E708")]
	public Vector3 calcBasicHomingV4(Rigidbody ball, Transform target)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0xB7E7E8", Offset = "0xB7E7E8", VA = "0xB7E7E8")]
	public Vector3 calcControlledBallDownDribbleV1(Vector3 handVel, Rigidbody ball)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0xB7EAD0", Offset = "0xB7EAD0", VA = "0xB7EAD0")]
	private void OnCollisionExit(Collision collision)
	{
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0xB7ECA0", Offset = "0xB7ECA0", VA = "0xB7ECA0")]
	public Dribbling()
	{
	}
}
[Token(Token = "0x200018B")]
public class FaceCamera : MonoBehaviour
{
	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Camera _camera;

	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform _cameraTransform;

	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 _distance;

	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 _originalScale;

	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float _sqrMagnitude;

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0xE789DC", Offset = "0xE789DC", VA = "0xE789DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0xE78A58", Offset = "0xE78A58", VA = "0xE78A58")]
	private void Update()
	{
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0xE78B8C", Offset = "0xE78B8C", VA = "0xE78B8C")]
	public FaceCamera()
	{
	}
}
[Token(Token = "0x200018C")]
public class FakeShadowFollow : MonoBehaviour
{
	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform track;

	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxScale;

	[Token(Token = "0x4000870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minScale;

	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float yPos;

	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float yPosMax;

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 offset;

	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 initialScale;

	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform _transform;

	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 _trackPosition;

	[Token(Token = "0x6000702")]
	[Address(RVA = "0xE78DFC", Offset = "0xE78DFC", VA = "0xE78DFC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0xE78E98", Offset = "0xE78E98", VA = "0xE78E98")]
	private void Update()
	{
	}

	[Token(Token = "0x6000704")]
	[Address(RVA = "0xE78F60", Offset = "0xE78F60", VA = "0xE78F60")]
	public FakeShadowFollow()
	{
	}
}
[Token(Token = "0x200018D")]
public class FirebaseManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200018E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x796778", Offset = "0x796778")]
	private sealed class <>c
	{
		[Token(Token = "0x4000880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<Task> <>9__14_0;

		[Token(Token = "0x600070F")]
		[Address(RVA = "0xB0A994", Offset = "0xB0A994", VA = "0xB0A994")]
		public <>c()
		{
		}

		[Token(Token = "0x6000710")]
		[Address(RVA = "0xB0A99C", Offset = "0xB0A99C", VA = "0xB0A99C")]
		internal void <updateRoomCount>b__14_0(Task transactionResultTask)
		{
		}
	}

	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static FirebaseManager Instance;

	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private FirebaseApp app;

	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private FirebaseFirestore db;

	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ListenerRegistration listener;

	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<string, int> _roomsPlayerCounts;

	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isParrelSyncClone;

	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Stopwatch _every3Seconds;

	[Token(Token = "0x400087F")]
	private const string rooms = "roomsV3";

	[Token(Token = "0x1700009C")]
	public Dictionary<string, int> roomsPlayerCounts
	{
		[Token(Token = "0x6000707")]
		[Address(RVA = "0xE7A738", Offset = "0xE7A738", VA = "0xE7A738")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0xE7A3F4", Offset = "0xE7A3F4", VA = "0xE7A3F4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0xE7A584", Offset = "0xE7A584", VA = "0xE7A584")]
	private void Update()
	{
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0xE7A6E0", Offset = "0xE7A6E0", VA = "0xE7A6E0")]
	private CollectionReference roomsCollection()
	{
		return null;
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0xE7A740", Offset = "0xE7A740", VA = "0xE7A740")]
	private DocumentReference roomRef(string roomName)
	{
		return null;
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0xE7A7B4", Offset = "0xE7A7B4", VA = "0xE7A7B4")]
	public void updateRoomCount(string roomName, int count)
	{
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0xE7AB34", Offset = "0xE7AB34", VA = "0xE7AB34")]
	public FirebaseManager()
	{
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0xE7ABF0", Offset = "0xE7ABF0", VA = "0xE7ABF0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A8B94", Offset = "0x7A8B94")]
	private void <Awake>b__7_0(Task<DependencyStatus> task)
	{
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0xE7ADAC", Offset = "0xE7ADAC", VA = "0xE7ADAC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A8BA4", Offset = "0x7A8BA4")]
	private void <Update>b__8_0(Task<QuerySnapshot> task2)
	{
	}
}
[Token(Token = "0x200018F")]
public class GameController : MonoBehaviour
{
	[Token(Token = "0x2000190")]
	public enum GameMode
	{
		[Token(Token = "0x40008E8")]
		OneVsOne,
		[Token(Token = "0x40008E9")]
		MiniGameFreeThrow,
		[Token(Token = "0x40008EA")]
		MiniGameAroundTheWorld,
		[Token(Token = "0x40008EB")]
		open_court,
		[Token(Token = "0x40008EC")]
		pick_up_game_mode,
		[Token(Token = "0x40008ED")]
		None
	}

	[Token(Token = "0x2000191")]
	public class GameRules
	{
		[Token(Token = "0x40008EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameMode gameType;

		[Token(Token = "0x40008EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool powerModesAllowed;

		[Token(Token = "0x40008F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public bool canSpawnBalls;

		[Token(Token = "0x40008F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		public bool enforceOutOfBounds;

		[Token(Token = "0x40008F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
		public bool forceDefaultGravity;

		[Token(Token = "0x40008F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool forceDefaultDribblingRange;

		[Token(Token = "0x40008F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool canJump;

		[Token(Token = "0x40008F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool canMove;

		[Token(Token = "0x40008F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool canRemoteGrab;

		[Token(Token = "0x40008F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool canSteal;

		[Token(Token = "0x40008F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public bool canUseReplays;

		[Token(Token = "0x6000751")]
		[Address(RVA = "0xB0B3DC", Offset = "0xB0B3DC", VA = "0xB0B3DC")]
		public GameRules()
		{
		}
	}

	[Token(Token = "0x2000192")]
	public enum PowerMode
	{
		[Token(Token = "0x40008FA")]
		None,
		[Token(Token = "0x40008FB")]
		SuperSizeMe,
		[Token(Token = "0x40008FC")]
		MiniMe,
		[Token(Token = "0x40008FD")]
		Zen
	}

	[Token(Token = "0x2000193")]
	public enum NetworkHeldBy
	{
		[Token(Token = "0x40008FF")]
		ME,
		[Token(Token = "0x4000900")]
		SOMEONE_ELSE,
		[Token(Token = "0x4000901")]
		NO_ONE
	}

	[Token(Token = "0x2000194")]
	public enum RecordingState
	{
		[Token(Token = "0x4000903")]
		NONE,
		[Token(Token = "0x4000904")]
		RECORDING,
		[Token(Token = "0x4000905")]
		REPLAYING
	}

	[Token(Token = "0x2000195")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x796788", Offset = "0x796788")]
	private sealed class <waitAndChangeGraphics>d__90 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x1700009D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000755")]
			[Address(RVA = "0xB0B258", Offset = "0xB0B258", VA = "0xB0B258", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000757")]
			[Address(RVA = "0xB0B2A0", Offset = "0xB0B2A0", VA = "0xB0B2A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000752")]
		[Address(RVA = "0xB0B110", Offset = "0xB0B110", VA = "0xB0B110")]
		[DebuggerHidden]
		public <waitAndChangeGraphics>d__90(int <>1__state)
		{
		}

		[Token(Token = "0x6000753")]
		[Address(RVA = "0xB0B13C", Offset = "0xB0B13C", VA = "0xB0B13C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000754")]
		[Address(RVA = "0xB0B140", Offset = "0xB0B140", VA = "0xB0B140", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000756")]
		[Address(RVA = "0xB0B260", Offset = "0xB0B260", VA = "0xB0B260", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000196")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x796798", Offset = "0x796798")]
	private sealed class <waitAndGoToLobby>d__91 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400090A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameController <>4__this;

		[Token(Token = "0x1700009F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600075B")]
			[Address(RVA = "0xB0B38C", Offset = "0xB0B38C", VA = "0xB0B38C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600075D")]
			[Address(RVA = "0xB0B3D4", Offset = "0xB0B3D4", VA = "0xB0B3D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000758")]
		[Address(RVA = "0xB0B2A8", Offset = "0xB0B2A8", VA = "0xB0B2A8")]
		[DebuggerHidden]
		public <waitAndGoToLobby>d__91(int <>1__state)
		{
		}

		[Token(Token = "0x6000759")]
		[Address(RVA = "0xB0B2D4", Offset = "0xB0B2D4", VA = "0xB0B2D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600075A")]
		[Address(RVA = "0xB0B2D8", Offset = "0xB0B2D8", VA = "0xB0B2D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600075C")]
		[Address(RVA = "0xB0B394", Offset = "0xB0B394", VA = "0xB0B394", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000197")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7967A8", Offset = "0x7967A8")]
	private sealed class <DownloadImage>d__121 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400090B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400090C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400090D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string mediaUrl;

		[Token(Token = "0x400090E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RawImage image;

		[Token(Token = "0x400090F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnityWebRequest <request>5__2;

		[Token(Token = "0x170000A1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000761")]
			[Address(RVA = "0xB0B0C0", Offset = "0xB0B0C0", VA = "0xB0B0C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000763")]
			[Address(RVA = "0xB0B108", Offset = "0xB0B108", VA = "0xB0B108", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600075E")]
		[Address(RVA = "0xB0AEF8", Offset = "0xB0AEF8", VA = "0xB0AEF8")]
		[DebuggerHidden]
		public <DownloadImage>d__121(int <>1__state)
		{
		}

		[Token(Token = "0x600075F")]
		[Address(RVA = "0xB0AF24", Offset = "0xB0AF24", VA = "0xB0AF24", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000760")]
		[Address(RVA = "0xB0AF28", Offset = "0xB0AF28", VA = "0xB0AF28", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000762")]
		[Address(RVA = "0xB0B0C8", Offset = "0xB0B0C8", VA = "0xB0B0C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GameController Instance;

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static float AVG_PLAYER_HEIGHT;

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public InputActionReference OpenSettingsMenuActon;

	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject playerAdvanceXRRig;

	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BNGPlayerController playerController;

	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform playerControllerTransform;

	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PlayerRotation playerRotation;

	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public PlayerTeleport playerTeleport;

	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SmoothLocomotion playerSmoothLocomotion;

	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public CharacterController characterController;

	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TunnellingMobile vrTunnellingMobile;

	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform Headset;

	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform RightController;

	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform LeftController;

	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject ballsHolder;

	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public NCGrabbableBasketball[] gameBalls;

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public NCGrabbableBasketball[] grabbableBasketballsNC;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int currentBall;

	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public PlayerPositions playerPositions;

	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool isRecording;

	[Token(Token = "0x4000896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float timeScale;

	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Vector3 gravity;

	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float bounceThreshold;

	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector3 stephCurryFreeThrow;

	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Transform testPositionA;

	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Transform testPositionB;

	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform testPositionC;

	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform leftShootingTracker;

	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Transform rightShootingTracker;

	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Transform leftDribblingTracker;

	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Transform rightDribblingTracker;

	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private UnityEngine.XR.InputDevice head;

	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public string oculusUserName;

	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public ulong oculusId;

	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public string oculusImageUrl;

	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Toggle preventMotionSicknessCheckbox;

	[Token(Token = "0x40008A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public BallersSlowmo ballersSlowmo;

	[Token(Token = "0x40008A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public OVRManager.FixedFoveatedRenderingLevel fixedFoveatedRenderingLevel;

	[Token(Token = "0x40008A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	public float voiceAvgAmp;

	[Token(Token = "0x40008A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public NCNetworkManager.CourtName currentCourt;

	[Token(Token = "0x40008AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private Dictionary<NCNetworkManager.CourtName, CourtController> courts;

	[Token(Token = "0x40008AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public bool isDebug;

	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public GameObject debugLog;

	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public GameObject debugMenu;

	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public Vector3 lastReleaseVelocity;

	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	public Vector3 lastReleaseAngularVelocity;

	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public string debugText;

	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public AudioClip footStepA;

	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public AudioClip footStepB;

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public float playerHeight;

	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	public float floorLevel;

	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public bool isRewinding;

	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public UnityEngine.UI.Button randomizeAvatarButton;

	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public UnityEngine.UI.Button saveAvatarButton;

	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public Transform headIKTracker;

	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public Transform leftLowPolyTracker;

	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public Transform rightLowPolyTracker;

	[Token(Token = "0x40008BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public Transform headReplayTracker;

	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public Transform leftReplayTracker;

	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public Transform rightReplayTracker;

	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public CharacterCustomization replayCharacterCustomization;

	[Token(Token = "0x40008BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public Light mixedLight;

	[Token(Token = "0x40008C0")]
	public const string DEVELOPER_USERNAME = "VRBasketballGod";

	[Token(Token = "0x40008C1")]
	public const string BACKBOARD_NAME_START = "Backboard";

	[Token(Token = "0x40008C2")]
	public const string RIM_NAME_START = "Collider";

	[Token(Token = "0x40008C3")]
	public const string FLOOR_NAME = "CourtPlane";

	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public Transform groundLocation;

	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public GameRules currentRules;

	[Token(Token = "0x40008C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static GameRules freePlayRules;

	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static GameRules rules1v1;

	[Token(Token = "0x40008C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static GameRules rulesStrict;

	[Token(Token = "0x40008C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public Rigidbody leftCurrentlyHeldBall;

	[Token(Token = "0x40008CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public Rigidbody rightCurrentlyHeldBall;

	[Token(Token = "0x40008CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public ScreenFader screenFader;

	[Token(Token = "0x40008CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public bool forceMuteMic;

	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public RealtimeView realtimeView;

	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public Realtime realtime;

	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public CompetitiveGameSync gameSync;

	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public OVRManager ovrManager;

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public VRUISystem vrifEventSystem;

	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public PowerMode powerMode;

	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
	public Vector3 handOffsetFromBall;

	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	public Vector3 handOffsetFromBallOther;

	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	private Stopwatch photonTakeOverTimeLimited;

	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	private Stopwatch lastSpawnBallTime;

	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	private Vector3 normalSize;

	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
	private Vector3 shaqSize;

	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	private Vector3 muggsySize;

	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
	private int _heightCheckFramecountFreqHack;

	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	private PlayerPositions _playerPositionsReplay;

	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	private PlayerPositions.PlayerPosition _playerPosition;

	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	public int framesRecorded;

	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
	private Vector3 xrHeadPos;

	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	private Vector3 xrHeadVel;

	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D4")]
	private Vector3 xrRightVel;

	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	private Vector3 xrLeftVel;

	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2EC")]
	private Vector3 xrRightAngVel;

	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	private Vector3 xrLeftAngVel;

	[Token(Token = "0x40008E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	private PlayerPositions.PlayerPosition playerPosition;

	[Token(Token = "0x40008E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	private int _debugCount;

	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x314")]
	public RecordingState recordingState;

	[Token(Token = "0x6000711")]
	[Address(RVA = "0xCE72F8", Offset = "0xCE72F8", VA = "0xCE72F8")]
	static GameController()
	{
	}

	[Token(Token = "0x6000712")]
	[Address(RVA = "0xCE7634", Offset = "0xCE7634", VA = "0xCE7634")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0xCE84DC", Offset = "0xCE84DC", VA = "0xCE84DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7A8BB4", Offset = "0x7A8BB4")]
	private IEnumerator waitAndChangeGraphics()
	{
		return null;
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0xCE87EC", Offset = "0xCE87EC", VA = "0xCE87EC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7A8C14", Offset = "0x7A8C14")]
	private IEnumerator waitAndGoToLobby()
	{
		return null;
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0xCE8864", Offset = "0xCE8864", VA = "0xCE8864")]
	private void Start()
	{
	}

	[Token(Token = "0x6000716")]
	[Address(RVA = "0xCE8868", Offset = "0xCE8868", VA = "0xCE8868")]
	public NCGrabbableBasketball currentGameBall()
	{
		return null;
	}

	[Token(Token = "0x6000717")]
	[Address(RVA = "0xCE88C0", Offset = "0xCE88C0", VA = "0xCE88C0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000718")]
	[Address(RVA = "0xCEACC0", Offset = "0xCEACC0", VA = "0xCEACC0")]
	private void recordReplayPlayerPositions()
	{
	}

	[Token(Token = "0x6000719")]
	[Address(RVA = "0xCEA130", Offset = "0xCEA130", VA = "0xCEA130")]
	public void attemptSpawnBall()
	{
	}

	[Token(Token = "0x600071A")]
	[Address(RVA = "0xCE8538", Offset = "0xCE8538", VA = "0xCE8538")]
	private bool decideIfIsDebug()
	{
		return default(bool);
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0xCEB3EC", Offset = "0xCEB3EC", VA = "0xCEB3EC")]
	private void setDisplayFrequency(float hz)
	{
	}

	[Token(Token = "0x600071C")]
	[Address(RVA = "0xCEB464", Offset = "0xCEB464", VA = "0xCEB464")]
	public void SetHzRate(UIManager.HzSelector hzSelector)
	{
	}

	[Token(Token = "0x600071D")]
	[Address(RVA = "0xCEB514", Offset = "0xCEB514", VA = "0xCEB514")]
	public void set72hz()
	{
	}

	[Token(Token = "0x600071E")]
	[Address(RVA = "0xCEB5B4", Offset = "0xCEB5B4", VA = "0xCEB5B4")]
	public void set90hz()
	{
	}

	[Token(Token = "0x600071F")]
	[Address(RVA = "0xCEB654", Offset = "0xCEB654", VA = "0xCEB654")]
	public void set120hz()
	{
	}

	[Token(Token = "0x6000720")]
	[Address(RVA = "0xCEB6F4", Offset = "0xCEB6F4", VA = "0xCEB6F4")]
	public void toggleDebug()
	{
	}

	[Token(Token = "0x6000721")]
	[Address(RVA = "0xCEB704", Offset = "0xCEB704", VA = "0xCEB704")]
	public void GoToCourt(NCNetworkManager.CourtName name)
	{
	}

	[Token(Token = "0x6000722")]
	[Address(RVA = "0xCEA0D8", Offset = "0xCEA0D8", VA = "0xCEA0D8")]
	public CourtController GetCourt()
	{
		return null;
	}

	[Token(Token = "0x6000723")]
	[Address(RVA = "0xCEBAD4", Offset = "0xCEBAD4", VA = "0xCEBAD4")]
	public void loadImage(string ImageURL)
	{
	}

	[Token(Token = "0x6000724")]
	[Address(RVA = "0xCEBB50", Offset = "0xCEBB50", VA = "0xCEBB50")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7A8C74", Offset = "0x7A8C74")]
	private IEnumerator DownloadImage(string mediaUrl, RawImage image)
	{
		return null;
	}

	[Token(Token = "0x6000725")]
	[Address(RVA = "0xCEBBE4", Offset = "0xCEBBE4", VA = "0xCEBBE4")]
	private bool isSettingMenuButtonPressed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000726")]
	[Address(RVA = "0xCEAB74", Offset = "0xCEAB74", VA = "0xCEAB74")]
	private void toggleSettingMenu()
	{
	}

	[Token(Token = "0x6000727")]
	[Address(RVA = "0xCEBC84", Offset = "0xCEBC84", VA = "0xCEBC84")]
	private void savePlayerPrefs()
	{
	}

	[Token(Token = "0x6000728")]
	[Address(RVA = "0xCEBE80", Offset = "0xCEBE80", VA = "0xCEBE80")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x6000729")]
	[Address(RVA = "0xCEBE84", Offset = "0xCEBE84", VA = "0xCEBE84")]
	public void restoreDefaults()
	{
	}

	[Token(Token = "0x600072A")]
	[Address(RVA = "0xCE8574", Offset = "0xCE8574", VA = "0xCE8574")]
	private void loadPlayerPrefs()
	{
	}

	[Token(Token = "0x600072B")]
	[Address(RVA = "0xCEBFB8", Offset = "0xCEBFB8", VA = "0xCEBFB8")]
	public CharacterCustomizationSetup loadAvatarPrefs()
	{
		return null;
	}

	[Token(Token = "0x600072C")]
	[Address(RVA = "0xCEC0C0", Offset = "0xCEC0C0", VA = "0xCEC0C0")]
	public void saveAvatarPrefs(CharacterCustomization characterCustomization)
	{
	}

	[Token(Token = "0x600072D")]
	[Address(RVA = "0xCEA6E8", Offset = "0xCEA6E8", VA = "0xCEA6E8")]
	public void facePlayerTowardsTransform(Transform targetTransform)
	{
	}

	[Token(Token = "0x600072E")]
	[Address(RVA = "0xCEC194", Offset = "0xCEC194", VA = "0xCEC194")]
	private void setStephCurrySimulation(Rigidbody ball)
	{
	}

	[Token(Token = "0x600072F")]
	[Address(RVA = "0xCEC214", Offset = "0xCEC214", VA = "0xCEC214")]
	public Vector3 getSecondToLastHandVelocity(ControllerHand handSide)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000730")]
	[Address(RVA = "0xCEC454", Offset = "0xCEC454", VA = "0xCEC454")]
	public Vector3 getLastHandVelocity(ControllerHand handSide)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000731")]
	[Address(RVA = "0xCEC6A0", Offset = "0xCEC6A0", VA = "0xCEC6A0")]
	public Vector3 getLastHeadVelocity()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000732")]
	[Address(RVA = "0xCEC7C8", Offset = "0xCEC7C8", VA = "0xCEC7C8")]
	public bool wasShotByLocalPlayer(NCGrabbableBasketball grabbableBasketball)
	{
		return default(bool);
	}

	[Token(Token = "0x6000733")]
	[Address(RVA = "0xCEC878", Offset = "0xCEC878", VA = "0xCEC878", Slot = "4")]
	public virtual bool isRightGripDown()
	{
		return default(bool);
	}

	[Token(Token = "0x6000734")]
	[Address(RVA = "0xCEC9BC", Offset = "0xCEC9BC", VA = "0xCEC9BC")]
	private void doHaptics(ControllerHand touchingHand)
	{
	}

	[Token(Token = "0x6000735")]
	[Address(RVA = "0xCEAFF8", Offset = "0xCEAFF8", VA = "0xCEAFF8")]
	public NetworkHeldBy normcoreHeldBy(RealtimeView realtimeView)
	{
		return default(NetworkHeldBy);
	}

	[Token(Token = "0x6000736")]
	[Address(RVA = "0xCECA44", Offset = "0xCECA44", VA = "0xCECA44")]
	public bool normcoreIsUnOwned(RealtimeTransform realtimeTransform)
	{
		return default(bool);
	}

	[Token(Token = "0x6000737")]
	[Address(RVA = "0xCECAE8", Offset = "0xCECAE8", VA = "0xCECAE8")]
	public int normcorePlayerID(RealtimeView realtimeView)
	{
		return default(int);
	}

	[Token(Token = "0x6000738")]
	[Address(RVA = "0xCECB04", Offset = "0xCECB04", VA = "0xCECB04")]
	public void normcoreGrabBall(NCGrabbableBasketball grabbableBasketball)
	{
	}

	[Token(Token = "0x6000739")]
	[Address(RVA = "0xCEC7CC", Offset = "0xCEC7CC", VA = "0xCEC7CC")]
	public bool normcoreIsControlledLocally(NCGrabbableBasketball grabbableBasketball)
	{
		return default(bool);
	}

	[Token(Token = "0x600073A")]
	[Address(RVA = "0xCEB104", Offset = "0xCEB104", VA = "0xCEB104")]
	public bool normcoreIsControlledRemotely(NCGrabbableBasketball grabbableBasketball)
	{
		return default(bool);
	}

	[Token(Token = "0x600073B")]
	[Address(RVA = "0xCEB1B0", Offset = "0xCEB1B0", VA = "0xCEB1B0")]
	public void ncTakeControlPosAndVel(RealtimeView realtimeView, RealtimeTransform realtimeTransform)
	{
	}

	[Token(Token = "0x600073C")]
	[Address(RVA = "0xCECB20", Offset = "0xCECB20", VA = "0xCECB20")]
	public void normcoreGrabBall(RealtimeView realtimeView, RealtimeTransform realtimeTransform)
	{
	}

	[Token(Token = "0x600073D")]
	[Address(RVA = "0xCECC1C", Offset = "0xCECC1C", VA = "0xCECC1C")]
	public void normcoreReleaseOwnershipIfNotHeldBySomeone(RealtimeView realtimeView)
	{
	}

	[Token(Token = "0x600073E")]
	[Address(RVA = "0xCECCB8", Offset = "0xCECCB8", VA = "0xCECCB8")]
	public void setBallShotVelocityFromHandFlightPath(ControllerHand handSide, Rigidbody ball)
	{
	}

	[Token(Token = "0x600073F")]
	[Address(RVA = "0xCED1B8", Offset = "0xCED1B8", VA = "0xCED1B8")]
	public void setBallDribbleVelocityFromHandFlightPath(ControllerHand handSide, Rigidbody ball)
	{
	}

	[Token(Token = "0x6000740")]
	[Address(RVA = "0xCED310", Offset = "0xCED310", VA = "0xCED310")]
	private void setBallDribbleVelocityFromHandFlightPath(PlayerPositions pps, Rigidbody ball)
	{
	}

	[Token(Token = "0x6000741")]
	[Address(RVA = "0xCECCC8", Offset = "0xCECCC8", VA = "0xCECCC8")]
	private void setBallVelocityFromHandFlightPath(PlayerPositions fp, Rigidbody ball, ControllerHand handSide)
	{
	}

	[Token(Token = "0x6000742")]
	[Address(RVA = "0xCED52C", Offset = "0xCED52C", VA = "0xCED52C")]
	public void SetGripButtonForBasketballGrabbables(GrabButton button)
	{
	}

	[Token(Token = "0x6000743")]
	[Address(RVA = "0xCED5DC", Offset = "0xCED5DC", VA = "0xCED5DC")]
	public void ToggleHoldTypeForBasketballGrabbables()
	{
	}

	[Token(Token = "0x6000744")]
	[Address(RVA = "0xCED6C4", Offset = "0xCED6C4", VA = "0xCED6C4")]
	private void setToggleHoldTypeForBasketball(Grabbable grabbableBasketball)
	{
	}

	[Token(Token = "0x6000745")]
	[Address(RVA = "0xCEB2B8", Offset = "0xCEB2B8", VA = "0xCEB2B8")]
	private Vector3 getPositionAboveHand(ControllerHand handSide, float height)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000746")]
	[Address(RVA = "0xCED6F8", Offset = "0xCED6F8", VA = "0xCED6F8")]
	public CourtController.CourtSide GetCourtSide(ScoreZone scoreZone)
	{
		return null;
	}

	[Token(Token = "0x6000747")]
	[Address(RVA = "0xCED728", Offset = "0xCED728", VA = "0xCED728")]
	public int GetCourtSideIndex(ScoreZone scoreZone)
	{
		return default(int);
	}

	[Token(Token = "0x6000748")]
	[Address(RVA = "0xCED758", Offset = "0xCED758", VA = "0xCED758")]
	public void scoredFieldGoal(ScoreZone scoreZone, Vector3 releasePosition)
	{
	}

	[Token(Token = "0x6000749")]
	[Address(RVA = "0xCED7A0", Offset = "0xCED7A0", VA = "0xCED7A0")]
	public void setIsHandCollisionEnabled(HandCollision hand, bool isEnabled)
	{
	}

	[Token(Token = "0x600074A")]
	[Address(RVA = "0xCED7A4", Offset = "0xCED7A4", VA = "0xCED7A4")]
	public string getRoomName()
	{
		return null;
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0xCED808", Offset = "0xCED808", VA = "0xCED808")]
	public bool getIsConnected()
	{
		return default(bool);
	}

	[Token(Token = "0x600074C")]
	[Address(RVA = "0xCED824", Offset = "0xCED824", VA = "0xCED824")]
	public void openDiscordInvite()
	{
	}

	[Token(Token = "0x600074D")]
	[Address(RVA = "0xCED86C", Offset = "0xCED86C", VA = "0xCED86C")]
	public bool isLeftHand(GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x600074E")]
	[Address(RVA = "0xCED8E0", Offset = "0xCED8E0", VA = "0xCED8E0")]
	public bool isRightHand(GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x600074F")]
	[Address(RVA = "0xCED954", Offset = "0xCED954", VA = "0xCED954")]
	public bool isHand(GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000750")]
	[Address(RVA = "0xCED98C", Offset = "0xCED98C", VA = "0xCED98C")]
	public GameController()
	{
	}
}
[Token(Token = "0x2000198")]
public class GrabbableObject : GrabbableEvents
{
	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RealtimeView realtimeView;

	[Token(Token = "0x4000911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RealtimeTransform realtimeTransform;

	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Rigidbody _rb;

	[Token(Token = "0x4000913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Grabber _currentGrabber;

	[Token(Token = "0x6000764")]
	[Address(RVA = "0xCF2374", Offset = "0xCF2374", VA = "0xCF2374")]
	private void Start()
	{
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0xCF2430", Offset = "0xCF2430", VA = "0xCF2430", Slot = "6")]
	public override void OnGrab(Grabber grabber)
	{
	}

	[Token(Token = "0x6000766")]
	[Address(RVA = "0xCF2534", Offset = "0xCF2534", VA = "0xCF2534", Slot = "7")]
	public override void OnRelease()
	{
	}

	[Token(Token = "0x6000767")]
	[Address(RVA = "0xCF2638", Offset = "0xCF2638", VA = "0xCF2638")]
	public GrabbableObject()
	{
	}
}
[Token(Token = "0x2000199")]
public class GrabbableRim : GrabbableEvents
{
	[Token(Token = "0x4000914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool HapticsOnValidPickup;

	[Token(Token = "0x4000915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool HapticsOnValidRemotePickup;

	[Token(Token = "0x4000916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool HapticsOnCollision;

	[Token(Token = "0x4000917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool HapticsOnGrab;

	[Token(Token = "0x4000918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float VibrateFrequency;

	[Token(Token = "0x4000919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float VibrateAmplitude;

	[Token(Token = "0x400091A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float VibrateDuration;

	[Token(Token = "0x400091B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Grabber currentGrabber;

	[Token(Token = "0x400091C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ControllerHand handSide;

	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private DunkGrabTrigger _dunkGrabTrigger;

	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 lastPosition;

	[Token(Token = "0x6000768")]
	[Address(RVA = "0xCF2640", Offset = "0xCF2640", VA = "0xCF2640")]
	private void Start()
	{
	}

	[Token(Token = "0x6000769")]
	[Address(RVA = "0xCF269C", Offset = "0xCF269C", VA = "0xCF269C")]
	private void Update()
	{
	}

	[Token(Token = "0x600076A")]
	[Address(RVA = "0xCF26D8", Offset = "0xCF26D8", VA = "0xCF26D8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600076B")]
	[Address(RVA = "0xCF26DC", Offset = "0xCF26DC", VA = "0xCF26DC", Slot = "6")]
	public override void OnGrab(Grabber grabber)
	{
	}

	[Token(Token = "0x600076C")]
	[Address(RVA = "0xCF276C", Offset = "0xCF276C", VA = "0xCF276C", Slot = "7")]
	public override void OnRelease()
	{
	}

	[Token(Token = "0x600076D")]
	[Address(RVA = "0xCF2764", Offset = "0xCF2764", VA = "0xCF2764")]
	private void doHaptics(ControllerHand touchingHand)
	{
	}

	[Token(Token = "0x600076E")]
	[Address(RVA = "0xCF2808", Offset = "0xCF2808", VA = "0xCF2808")]
	private void doHaptics(ControllerHand touchingHand, float intensity)
	{
	}

	[Token(Token = "0x600076F")]
	[Address(RVA = "0xCF28C4", Offset = "0xCF28C4", VA = "0xCF28C4")]
	private void OnCollisionExit(Collision collision)
	{
	}

	[Token(Token = "0x6000770")]
	[Address(RVA = "0xCF293C", Offset = "0xCF293C", VA = "0xCF293C")]
	public GrabbableRim()
	{
	}
}
[Token(Token = "0x200019A")]
public class JumpingTest : MonoBehaviour
{
	[Token(Token = "0x6000771")]
	[Address(RVA = "0xF5F024", Offset = "0xF5F024", VA = "0xF5F024")]
	private void Start()
	{
	}

	[Token(Token = "0x6000772")]
	[Address(RVA = "0xF5F028", Offset = "0xF5F028", VA = "0xF5F028")]
	private void Update()
	{
	}

	[Token(Token = "0x6000773")]
	[Address(RVA = "0xF5F0C4", Offset = "0xF5F0C4", VA = "0xF5F0C4")]
	public JumpingTest()
	{
	}
}
[Token(Token = "0x200019B")]
public class LeaderboardManager : MonoBehaviour
{
	[Token(Token = "0x200019C")]
	public delegate void OnMostWinsLeaderboardUpdated(SortedDictionary<int, LeaderboardEntry> entries);

	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LeaderboardManager Instance;

	[Token(Token = "0x4000920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string LEADERBOARD_API_FREE_THROW_CHALLENGE;

	[Token(Token = "0x4000921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string LEADERBOARD_API_AROUND_THE_WORLD_CHALLENGE;

	[Token(Token = "0x4000922")]
	private const int TOP_N_COUNT = 10;

	[Token(Token = "0x4000923")]
	private const float LEADERBOARD_POLL_FREQ = 30f;

	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float m_nextCheckTime;

	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool m_foundLocalUserMostWinsEntry;

	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private long m_numWins;

	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OnMostWinsLeaderboardUpdated m_mostWinsCallback;

	[Token(Token = "0x4000928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int attempts;

	[Token(Token = "0x4000929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int maxAttempts;

	[Token(Token = "0x400092A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public LeaderboardEntryList topScoreLeaderboardList;

	[Token(Token = "0x400092B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LeaderboardEntryList topScoresAroundTheWorldList;

	[Token(Token = "0x170000A3")]
	public OnMostWinsLeaderboardUpdated MostWinsLeaderboardUpdatedCallback
	{
		[Token(Token = "0x6000776")]
		[Address(RVA = "0x1186F48", Offset = "0x1186F48", VA = "0x1186F48")]
		set
		{
		}
	}

	[Token(Token = "0x6000774")]
	[Address(RVA = "0x1186C94", Offset = "0x1186C94", VA = "0x1186C94")]
	private void Start()
	{
	}

	[Token(Token = "0x6000775")]
	[Address(RVA = "0x1186D28", Offset = "0x1186D28", VA = "0x1186D28")]
	public void CheckForUpdates(string leaderboardID)
	{
	}

	[Token(Token = "0x6000777")]
	[Address(RVA = "0x1186DB8", Offset = "0x1186DB8", VA = "0x1186DB8")]
	private void QueryTopScoreLeaderboard(string leaderboardID)
	{
	}

	[Token(Token = "0x6000778")]
	[Address(RVA = "0x1186F50", Offset = "0x1186F50", VA = "0x1186F50")]
	private void TopScoresFreeThrowsGetEntriesCallback(Message<LeaderboardEntryList> msg)
	{
	}

	[Token(Token = "0x6000779")]
	[Address(RVA = "0x1186FCC", Offset = "0x1186FCC", VA = "0x1186FCC")]
	private void TopScoresAroundTheWorldGetEntriesCallback(Message<LeaderboardEntryList> msg)
	{
	}

	[Token(Token = "0x600077A")]
	[Address(RVA = "0x1187048", Offset = "0x1187048", VA = "0x1187048")]
	public void SubmitFreeThrowChallengeScores(string leaderboardID, int score)
	{
	}

	[Token(Token = "0x600077B")]
	[Address(RVA = "0x1187070", Offset = "0x1187070", VA = "0x1187070")]
	public void SubmitAroundTheWorldChallengeTime(string leaderboardID, long milliseconds)
	{
	}

	[Token(Token = "0x600077C")]
	[Address(RVA = "0x11870B8", Offset = "0x11870B8", VA = "0x11870B8")]
	public LeaderboardManager()
	{
	}
}
[Token(Token = "0x200019D")]
public class MagnusEffect : MonoBehaviour
{
	[Token(Token = "0x400092C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float intensity;

	[Token(Token = "0x400092D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isEnabled;

	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody rb;

	[Token(Token = "0x400092F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Collider ballCollider;

	[Token(Token = "0x6000782")]
	[Address(RVA = "0x1195BE4", Offset = "0x1195BE4", VA = "0x1195BE4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000783")]
	[Address(RVA = "0x1195C70", Offset = "0x1195C70", VA = "0x1195C70")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000784")]
	[Address(RVA = "0x1195D14", Offset = "0x1195D14", VA = "0x1195D14")]
	public static Vector3 calcMagnusForce(Rigidbody rigidbody, float intensity)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000785")]
	[Address(RVA = "0x1195E78", Offset = "0x1195E78", VA = "0x1195E78")]
	public MagnusEffect()
	{
	}
}
[Token(Token = "0x200019E")]
public class MenuRoomsTable : MonoBehaviour
{
	[Token(Token = "0x200019F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7967B8", Offset = "0x7967B8")]
	private sealed class <>c__DisplayClass13_0
	{
		[Token(Token = "0x400093D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CourtMenuButton button;

		[Token(Token = "0x600078A")]
		[Address(RVA = "0xCBADE4", Offset = "0xCBADE4", VA = "0xCBADE4")]
		public <>c__DisplayClass13_0()
		{
		}

		[Token(Token = "0x600078B")]
		[Address(RVA = "0xCBADEC", Offset = "0xCBADEC", VA = "0xCBADEC")]
		internal void <Start>b__0()
		{
		}

		[Token(Token = "0x600078C")]
		[Address(RVA = "0xCBAF2C", Offset = "0xCBAF2C", VA = "0xCBAF2C")]
		internal void <Start>b__1()
		{
		}
	}

	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MenuRoomsTable Instance;

	[Token(Token = "0x4000931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform menuOrigin;

	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int distanceBetweenButtons;

	[Token(Token = "0x4000933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int distanceHorizBetweenButtons;

	[Token(Token = "0x4000934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public NCNetworkManager.CourtName[] cols;

	[Token(Token = "0x4000935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameController.GameMode[] rows;

	[Token(Token = "0x4000936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject streetMenuButtonPrefab;

	[Token(Token = "0x4000937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<CourtMenuButton> stadiumButtons;

	[Token(Token = "0x4000938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<CourtMenuButton> streetButtons;

	[Token(Token = "0x4000939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<CourtMenuButton> lowpolyButtons;

	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<CourtMenuButton> indoorButtons;

	[Token(Token = "0x400093B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Dictionary<string, CourtMenuButton> courtsMap;

	[Token(Token = "0x400093C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Sprite[] courtImageSprites;

	[Token(Token = "0x6000787")]
	[Address(RVA = "0x1F532DC", Offset = "0x1F532DC", VA = "0x1F532DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000788")]
	[Address(RVA = "0x1F537EC", Offset = "0x1F537EC", VA = "0x1F537EC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000789")]
	[Address(RVA = "0x1F537F0", Offset = "0x1F537F0", VA = "0x1F537F0")]
	public MenuRoomsTable()
	{
	}
}
[Token(Token = "0x20001A0")]
public class MiniGame : MonoBehaviour
{
	[Token(Token = "0x20001A1")]
	public enum MiniGameChallenge
	{
		[Token(Token = "0x4000946")]
		None,
		[Token(Token = "0x4000947")]
		FreeThrow,
		[Token(Token = "0x4000948")]
		AroundTheWorld
	}

	[Token(Token = "0x20001A2")]
	public enum MiniGamePhase
	{
		[Token(Token = "0x400094A")]
		PreStart,
		[Token(Token = "0x400094B")]
		Started,
		[Token(Token = "0x400094C")]
		Ended
	}

	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private MiniGameChallenge currentMinigame;

	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MiniGame Instance;

	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip readySetGoSound;

	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip scoreSpecialEffect;

	[Token(Token = "0x4000942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip endSoundEffect;

	[Token(Token = "0x4000943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public MinigameFreeThrows.MinigameFreeThrowData freeThrowState;

	[Token(Token = "0x4000944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public MinigameAroundTheWorld.MinigameAroundTheWorldData aroundTheWorldState;

	[Token(Token = "0x600078D")]
	[Address(RVA = "0x1F53E34", Offset = "0x1F53E34", VA = "0x1F53E34")]
	private void Start()
	{
	}

	[Token(Token = "0x600078E")]
	[Address(RVA = "0x1F54178", Offset = "0x1F54178", VA = "0x1F54178")]
	public void OnMinigamePlayerScore(ScoreZone scoreZoneOrigin)
	{
	}

	[Token(Token = "0x600078F")]
	[Address(RVA = "0x1F544F8", Offset = "0x1F544F8", VA = "0x1F544F8")]
	public void StartFreeThrowMiniGame(ScoreZone initiatingScoreZone, Transform startLocation, AudioSource audioSource, Disc controlDiskZone)
	{
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0x1F54918", Offset = "0x1F54918", VA = "0x1F54918")]
	public void StartAroundTheWorldMiniGame(ScoreZone initiatingScoreZone, Transform[] locations, AudioSource audioSource)
	{
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0x1F54104", Offset = "0x1F54104", VA = "0x1F54104")]
	public void CleanupMiniGames()
	{
	}

	[Token(Token = "0x6000792")]
	[Address(RVA = "0x1F54E40", Offset = "0x1F54E40", VA = "0x1F54E40")]
	private void Update()
	{
	}

	[Token(Token = "0x6000793")]
	[Address(RVA = "0x1F559E8", Offset = "0x1F559E8", VA = "0x1F559E8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000794")]
	[Address(RVA = "0x1F559EC", Offset = "0x1F559EC", VA = "0x1F559EC")]
	public MiniGame()
	{
	}
}
[Token(Token = "0x20001A3")]
public class MiniGameManager : MonoBehaviour
{
	[Token(Token = "0x400094D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MiniGameManager Instance;

	[Token(Token = "0x400094E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MiniGame curentMiniGame;

	[Token(Token = "0x6000795")]
	[Address(RVA = "0x1F559F4", Offset = "0x1F559F4", VA = "0x1F559F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000796")]
	[Address(RVA = "0x1F55A48", Offset = "0x1F55A48", VA = "0x1F55A48")]
	private void Update()
	{
	}

	[Token(Token = "0x6000797")]
	[Address(RVA = "0x1F55A4C", Offset = "0x1F55A4C", VA = "0x1F55A4C")]
	public void setMiniGame(MiniGame miniGame)
	{
	}

	[Token(Token = "0x6000798")]
	[Address(RVA = "0x1F55A54", Offset = "0x1F55A54", VA = "0x1F55A54")]
	public MiniGameManager()
	{
	}
}
[Token(Token = "0x20001A4")]
public static class MinigameAroundTheWorld
{
	[Token(Token = "0x20001A5")]
	public class MinigameAroundTheWorldData
	{
		[Token(Token = "0x400094F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ScoreZone scoreZone;

		[Token(Token = "0x4000950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MiniGame.MiniGamePhase currentPhase;

		[Token(Token = "0x4000951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Stopwatch stopwatch;

		[Token(Token = "0x4000952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Modular3DText timerText;

		[Token(Token = "0x4000953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Modular3DText scoreText;

		[Token(Token = "0x4000954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float preStartTimeLimit;

		[Token(Token = "0x4000955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float timeLimit;

		[Token(Token = "0x4000956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AudioSource audioSource;

		[Token(Token = "0x4000957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioClip endSoundEffect;

		[Token(Token = "0x4000958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AudioClip readySetGoSound;

		[Token(Token = "0x4000959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AudioClip scoreSpecialEffect;

		[Token(Token = "0x400095A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform[] locations;

		[Token(Token = "0x400095B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int currentIndexLocation;

		[Token(Token = "0x400095C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float radiusLimiter;

		[Token(Token = "0x400095D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Disc currentDiskZone;

		[Token(Token = "0x400095E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public CourtController.CourtSide courtSide;

		[Token(Token = "0x600079D")]
		[Address(RVA = "0xCBB06C", Offset = "0xCBB06C", VA = "0xCBB06C")]
		public MinigameAroundTheWorldData()
		{
		}
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0x1F54964", Offset = "0x1F54964", VA = "0x1F54964")]
	public static void StartGame(MinigameAroundTheWorldData s, ScoreZone initiatingScoreZone, Transform[] locations, AudioSource audioSource)
	{
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0x1F55400", Offset = "0x1F55400", VA = "0x1F55400")]
	public static void Update(MinigameAroundTheWorldData s)
	{
	}

	[Token(Token = "0x600079B")]
	[Address(RVA = "0x1F54D58", Offset = "0x1F54D58", VA = "0x1F54D58")]
	public static void Cleanup(MinigameAroundTheWorldData s)
	{
	}

	[Token(Token = "0x600079C")]
	[Address(RVA = "0x1F543E8", Offset = "0x1F543E8", VA = "0x1F543E8")]
	public static void OnPlayerScore(MinigameAroundTheWorldData fts, ScoreZone scoreZoneOrigin)
	{
	}
}
[Token(Token = "0x20001A6")]
public static class MinigameFreeThrows
{
	[Token(Token = "0x20001A7")]
	public class MinigameFreeThrowData
	{
		[Token(Token = "0x4000960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ScoreZone scoreZone;

		[Token(Token = "0x4000961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MiniGame.MiniGamePhase currentPhase;

		[Token(Token = "0x4000962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Stopwatch stopwatch;

		[Token(Token = "0x4000963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Modular3DText timerText;

		[Token(Token = "0x4000964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Modular3DText scoreText;

		[Token(Token = "0x4000965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float preStartTimeLimit;

		[Token(Token = "0x4000966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float timeLimit;

		[Token(Token = "0x4000967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AudioSource audioSource;

		[Token(Token = "0x4000968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioClip endSoundEffect;

		[Token(Token = "0x4000969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AudioClip readySetGoSound;

		[Token(Token = "0x400096A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AudioClip scoreSpecialEffect;

		[Token(Token = "0x400096B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int score;

		[Token(Token = "0x400096C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Disc currentDiscZone;

		[Token(Token = "0x400096D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform locationStart;

		[Token(Token = "0x400096E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float radiusLimiter;

		[Token(Token = "0x400096F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Disc currentDiskZone;

		[Token(Token = "0x4000970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public CourtController.CourtSide courtSide;

		[Token(Token = "0x60007A3")]
		[Address(RVA = "0xCBB074", Offset = "0xCBB074", VA = "0xCBB074")]
		public MinigameFreeThrowData()
		{
		}
	}

	[Token(Token = "0x400095F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GameController.GameRules rules;

	[Token(Token = "0x600079E")]
	[Address(RVA = "0x1F55ABC", Offset = "0x1F55ABC", VA = "0x1F55ABC")]
	static MinigameFreeThrows()
	{
	}

	[Token(Token = "0x600079F")]
	[Address(RVA = "0x1F5459C", Offset = "0x1F5459C", VA = "0x1F5459C")]
	public static void StartGame(MinigameFreeThrowData fts, ScoreZone initiatingScoreZone, Transform startLocation, AudioSource audioSource, Disc controlDiskZone)
	{
	}

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0x1F54ED4", Offset = "0x1F54ED4", VA = "0x1F54ED4")]
	public static void Update(MinigameFreeThrowData s)
	{
	}

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0x1F54C60", Offset = "0x1F54C60", VA = "0x1F54C60")]
	public static void Cleanup(MinigameFreeThrowData s)
	{
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0x1F54270", Offset = "0x1F54270", VA = "0x1F54270")]
	public static void OnPlayerScore(MinigameFreeThrowData fts, ScoreZone scoreZoneOrigin)
	{
	}
}
[Token(Token = "0x20001A8")]
public class MultiplayerManager : MonoBehaviour
{
	[Token(Token = "0x4000971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MultiplayerManager Instance;

	[Token(Token = "0x4000972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] players;

	[Token(Token = "0x4000973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject ballsHolder;

	[Token(Token = "0x4000974")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody[] balls;

	[Token(Token = "0x60007A4")]
	[Address(RVA = "0x1F5F6D0", Offset = "0x1F5F6D0", VA = "0x1F5F6D0")]
	private void Start()
	{
	}

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0x1F5F75C", Offset = "0x1F5F75C", VA = "0x1F5F75C")]
	private void Update()
	{
	}

	[Token(Token = "0x60007A6")]
	[Address(RVA = "0x1F5F760", Offset = "0x1F5F760", VA = "0x1F5F760")]
	public MultiplayerManager()
	{
	}
}
[Token(Token = "0x20001A9")]
public class NetCollisionZone : MonoBehaviour
{
	[Token(Token = "0x60007A7")]
	[Address(RVA = "0x12F57C8", Offset = "0x12F57C8", VA = "0x12F57C8")]
	private void Start()
	{
	}

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0x12F57CC", Offset = "0x12F57CC", VA = "0x12F57CC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0x12F58E4", Offset = "0x12F58E4", VA = "0x12F58E4")]
	public NetCollisionZone()
	{
	}
}
[Token(Token = "0x20001AA")]
public class NetworkGameStateManager : MonoBehaviour
{
	[Token(Token = "0x20001AB")]
	public enum OneVsOneState
	{
		[Token(Token = "0x4000978")]
		WAITING_FOR_MORE_PLAYERS,
		[Token(Token = "0x4000979")]
		ROUND_WAITING_ON_OFFENSE,
		[Token(Token = "0x400097A")]
		ROUND_PLAYING,
		[Token(Token = "0x400097B")]
		ENDED
	}

	[Token(Token = "0x4000975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static NetworkGameStateManager Instance;

	[Token(Token = "0x4000976")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CompetitiveGameSync currentState;

	[Token(Token = "0x60007AA")]
	[Address(RVA = "0x12F58EC", Offset = "0x12F58EC", VA = "0x12F58EC")]
	private void Start()
	{
	}

	[Token(Token = "0x60007AB")]
	[Address(RVA = "0x12F5970", Offset = "0x12F5970", VA = "0x12F5970")]
	public NetworkGameStateManager()
	{
	}
}
[Token(Token = "0x20001AC")]
[AttributeAttribute(Name = "RealtimeModelAttribute", RVA = "0x7967C8", Offset = "0x7967C8")]
public class BasketballModel : RealtimeModel
{
	[Token(Token = "0x20001AD")]
	public delegate void PropertyChangedHandler<in T>(BasketballModel model, T value);

	[Token(Token = "0x20001AE")]
	public enum PropertyID : uint
	{
		[Token(Token = "0x4000985")]
		IsHeld = 2u,
		[Token(Token = "0x4000986")]
		ForceRelease = 4u,
		[Token(Token = "0x4000987")]
		LastUserIdHeld = 5u
	}

	[Token(Token = "0x400097C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[AttributeAttribute(Name = "RealtimePropertyAttribute", RVA = "0x79B330", Offset = "0x79B330")]
	private bool _isHeld;

	[Token(Token = "0x400097D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "RealtimePropertyAttribute", RVA = "0x79B34C", Offset = "0x79B34C")]
	private int _forceRelease;

	[Token(Token = "0x400097E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[AttributeAttribute(Name = "RealtimePropertyAttribute", RVA = "0x79B368", Offset = "0x79B368")]
	private uint _lastUserIdHeld;

	[Token(Token = "0x4000981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private ReliableProperty<bool> _isHeldProperty;

	[Token(Token = "0x4000982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private ReliableProperty<int> _forceReleaseProperty;

	[Token(Token = "0x4000983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private ReliableProperty<uint> _lastUserIdHeldProperty;

	[Token(Token = "0x170000A4")]
	public bool isHeld
	{
		[Token(Token = "0x60007AC")]
		[Address(RVA = "0xAECC14", Offset = "0xAECC14", VA = "0xAECC14")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60007AD")]
		[Address(RVA = "0xAECC60", Offset = "0xAECC60", VA = "0xAECC60")]
		set
		{
		}
	}

	[Token(Token = "0x170000A5")]
	public int forceRelease
	{
		[Token(Token = "0x60007AE")]
		[Address(RVA = "0xAECE38", Offset = "0xAECE38", VA = "0xAECE38")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60007AF")]
		[Address(RVA = "0xAECE84", Offset = "0xAECE84", VA = "0xAECE84")]
		set
		{
		}
	}

	[Token(Token = "0x170000A6")]
	public uint lastUserIdHeld
	{
		[Token(Token = "0x60007B0")]
		[Address(RVA = "0xAED050", Offset = "0xAED050", VA = "0xAED050")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60007B1")]
		[Address(RVA = "0xAED09C", Offset = "0xAED09C", VA = "0xAED09C")]
		set
		{
		}
	}

	[Token(Token = "0x14000015")]
	public event PropertyChangedHandler<bool> isHeldDidChange
	{
		[Token(Token = "0x60007B2")]
		[Address(RVA = "0xAED134", Offset = "0xAED134", VA = "0xAED134")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A8DC4", Offset = "0x7A8DC4")]
		add
		{
		}
		[Token(Token = "0x60007B3")]
		[Address(RVA = "0xAED1D4", Offset = "0xAED1D4", VA = "0xAED1D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A8DD4", Offset = "0x7A8DD4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000016")]
	public event PropertyChangedHandler<int> forceReleaseDidChange
	{
		[Token(Token = "0x60007B4")]
		[Address(RVA = "0xAED274", Offset = "0xAED274", VA = "0xAED274")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A8DE4", Offset = "0x7A8DE4")]
		add
		{
		}
		[Token(Token = "0x60007B5")]
		[Address(RVA = "0xAED314", Offset = "0xAED314", VA = "0xAED314")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A8DF4", Offset = "0x7A8DF4")]
		remove
		{
		}
	}

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0xAED3B4", Offset = "0xAED3B4", VA = "0xAED3B4")]
	public BasketballModel()
	{
	}

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0xAED504", Offset = "0xAED504", VA = "0xAED504", Slot = "7")]
	protected override void OnParentReplaced(RealtimeModel previousParent, RealtimeModel currentParent)
	{
	}

	[Token(Token = "0x60007B8")]
	[Address(RVA = "0xAECD10", Offset = "0xAECD10", VA = "0xAECD10")]
	private void FireIsHeldDidChange(bool value)
	{
	}

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0xAECF28", Offset = "0xAECF28", VA = "0xAECF28")]
	private void FireForceReleaseDidChange(int value)
	{
	}

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0xAED5A0", Offset = "0xAED5A0", VA = "0xAED5A0", Slot = "8")]
	protected override int WriteLength(StreamContext context)
	{
		return default(int);
	}

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0xAED6A0", Offset = "0xAED6A0", VA = "0xAED6A0", Slot = "9")]
	protected override void Write(WriteStream stream, StreamContext context)
	{
	}

	[Token(Token = "0x60007BC")]
	[Address(RVA = "0xAED7D4", Offset = "0xAED7D4", VA = "0xAED7D4", Slot = "10")]
	protected override void Read(ReadStream stream, StreamContext context)
	{
	}

	[Token(Token = "0x60007BD")]
	[Address(RVA = "0xAED994", Offset = "0xAED994", VA = "0xAED994")]
	private void UpdateBackingFields()
	{
	}
}
[Token(Token = "0x20001AF")]
public class BasketballSync : RealtimeComponent<BasketballModel>
{
	[Token(Token = "0x4000988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private NCGrabbableBasketball _grabbableBasketball;

	[Token(Token = "0x4000989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public uint debugLastReleaseUserId;

	[Token(Token = "0x60007C2")]
	[Address(RVA = "0xAEDAA8", Offset = "0xAEDAA8", VA = "0xAEDAA8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007C3")]
	[Address(RVA = "0xAEDB04", Offset = "0xAEDB04", VA = "0xAEDB04")]
	private void Update()
	{
	}

	[Token(Token = "0x60007C4")]
	[Address(RVA = "0xAEDC5C", Offset = "0xAEDC5C", VA = "0xAEDC5C", Slot = "22")]
	protected override void OnRealtimeModelReplaced(BasketballModel previousModel, BasketballModel currentModel)
	{
	}

	[Token(Token = "0x60007C5")]
	[Address(RVA = "0xAEDBB8", Offset = "0xAEDBB8", VA = "0xAEDBB8")]
	public void TriggerForceRelease()
	{
	}

	[Token(Token = "0x60007C6")]
	[Address(RVA = "0xAEDD74", Offset = "0xAEDD74", VA = "0xAEDD74")]
	public void DidForceReleaseChangeEvent(BasketballModel currentModel, int value)
	{
	}

	[Token(Token = "0x60007C7")]
	[Address(RVA = "0xAEDE00", Offset = "0xAEDE00", VA = "0xAEDE00")]
	public void SetLastReleaseUserId(uint userId)
	{
	}

	[Token(Token = "0x60007C8")]
	[Address(RVA = "0xAEDE58", Offset = "0xAEDE58", VA = "0xAEDE58")]
	public uint GetLastReleaseUserId()
	{
		return default(uint);
	}

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0xAEDEA0", Offset = "0xAEDEA0", VA = "0xAEDEA0")]
	public BasketballSync()
	{
	}
}
[Serializable]
[Token(Token = "0x20001B0")]
[AttributeAttribute(Name = "RealtimeModelAttribute", RVA = "0x7967DC", Offset = "0x7967DC")]
public class CompetitiveGameModel : RealtimeModel
{
	[Token(Token = "0x20001B1")]
	public delegate void PropertyChangedHandler<in T>(CompetitiveGameModel model, T value);

	[Token(Token = "0x20001B2")]
	public enum PropertyID : uint
	{
		[Token(Token = "0x40009A7")]
		NetCompScore1 = 1u,
		[Token(Token = "0x40009A8")]
		NetCompScore2 = 2u,
		[Token(Token = "0x40009A9")]
		NetFreePlayScore1 = 3u,
		[Token(Token = "0x40009AA")]
		NetFreePlayScore2 = 4u,
		[Token(Token = "0x40009AB")]
		OffensiveTeam = 7u,
		[Token(Token = "0x40009AC")]
		Players = 8u,
		[Token(Token = "0x40009AD")]
		NetFreePlayScore3 = 9u,
		[Token(Token = "0x40009AE")]
		NetFreePlayScore4 = 10u,
		[Token(Token = "0x40009AF")]
		NetFreePlayScore5 = 11u,
		[Token(Token = "0x40009B0")]
		NetFreePlayScore6 = 12u
	}

	[Token(Token = "0x400098A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[AttributeAttribute(Name = "RealtimePropertyAttribute", RVA = "0x79B3A4", Offset = "0x79B3A4")]
	private int _netCompScore1;

	[Token(Token = "0x400098B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "RealtimePropertyAttribute", RVA = "0x79B3C0", Offset = "0x79B3C0")]
	private int _netCompScore2;

	[Token(Token = "0x400098C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[AttributeAttribute(Name = "RealtimePropertyAttribute", RVA = "0x79B3DC", Offset = "0x79B3DC")]
	private int _netFreePlayScore1;

	[Token(Token = "0x400098D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "RealtimePropertyAttribute", RVA = "0x79B3F8", Offset = "0x79B3F8")]
	private int _netFreePlayScore2;

	[Token(Token = "0x400098E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[AttributeAttribute(Name = "RealtimePropertyAttribute", RVA = "0x79B414", Offset = "0x79B414")]
	private int _offensiveTeam;

	[Token(Token = "0x400098F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "RealtimePropertyAttribute", RVA = "0x79B430", Offset = "0x79B430")]
	private RealtimeDictionary<UserInfoModel> _players;

	[Token(Token = "0x4000990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "RealtimePropertyAttribute", RVA = "0x79B44C", Offset = "0x79B44C")]
	private int _netFreePlayScore3;

	[Token(Token = "0x4000991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[AttributeAttribute(Name = "RealtimePropertyAttribute", RVA = "0x79B468", Offset = "0x79B468")]
	private int _netFreePlayScore4;

	[Token(Token = "0x4000992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "RealtimePropertyAttribute", RVA = "0x79B484", Offset = "0x79B484")]
	private int _netFreePlayScore5;

	[Token(Token = "0x4000993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[AttributeAttribute(Name = "RealtimePropertyAttribute", RVA = "0x79B4A0", Offset = "0x79B4A0")]
	private int _netFreePlayScore6;

	[Token(Token = "0x400099C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private ReliableProperty<int> _netCompScore1Property;

	[Token(Token = "0x400099D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private ReliableProperty<int> _netCompScore2Property;

	[Token(Token = "0x400099E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private ReliableProperty<int> _netFreePlayScore1Property;

	[Token(Token = "0x400099F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private ReliableProperty<int> _netFreePlayScore2Property;

	[Token(Token = "0x40009A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private ReliableProperty<int> _offensiveTeamProperty;

	[Token(Token = "0x40009A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private ModelProperty<RealtimeDictionary<UserInfoModel>> _playersProperty;

	[Token(Token = "0x40009A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private ReliableProperty<int> _netFreePlayScore3Property;

	[Token(Token = "0x40009A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private ReliableProperty<int> _netFreePlayScore4Property;

	[Token(Token = "0x40009A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private ReliableProperty<int> _netFreePlayScore5Property;

	[Token(Token = "0x40009A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private ReliableProperty<int> _netFreePlayScore6Property;

	[Token(Token = "0x170000A7")]
	public int netCompScore1
	{
		[Token(Token = "0x60007CB")]
		[Address(RVA = "0xB68DA4", Offset = "0xB68DA4", VA = "0xB68DA4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60007CC")]
		[Address(RVA = "0xB68DF0", Offset = "0xB68DF0", VA = "0xB68DF0")]
		set
		{
		}
	}

	[Token(Token = "0x170000A8")]
	public int netCompScore2
	{
		[Token(Token = "0x60007CD")]
		[Address(RVA = "0xB68FBC", Offset = "0xB68FBC", VA = "0xB68FBC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60007CE")]
		[Address(RVA = "0xB69008", Offset = "0xB69008", VA = "0xB69008")]
		set
		{
		}
	}

	[Token(Token = "0x170000A9")]
	public int netFreePlayScore1
	{
		[Token(Token = "0x60007CF")]
		[Address(RVA = "0xB691D4", Offset = "0xB691D4", VA = "0xB691D4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60007D0")]
		[Address(RVA = "0xB69220", Offset = "0xB69220", VA = "0xB69220")]
		set
		{
		}
	}

	[Token(Token = "0x170000AA")]
	public int netFreePlayScore2
	{
		[Token(Token = "0x60007D1")]
		[Address(RVA = "0xB693EC", Offset = "0xB693EC", VA = "0xB693EC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60007D2")]
		[Address(RVA = "0xB69438", Offset = "0xB69438", VA = "0xB69438")]
		set
		{
		}
	}

	[Token(Token = "0x170000AB")]
	public int offensiveTeam
	{
		[Token(Token = "0x60007D3")]
		[Address(RVA = "0xB69604", Offset = "0xB69604", VA = "0xB69604")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60007D4")]
		[Address(RVA = "0xB69650", Offset = "0xB69650", VA = "0xB69650")]
		set
		{
		}
	}

	[Token(Token = "0x170000AC")]
	public int netFreePlayScore3
	{
		[Token(Token = "0x60007D5")]
		[Address(RVA = "0xB696E8", Offset = "0xB696E8", VA = "0xB696E8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60007D6")]
		[Address(RVA = "0xB69734", Offset = "0xB69734", VA = "0xB69734")]
		set
		{
		}
	}

	[Token(Token = "0x170000AD")]
	public int netFreePlayScore4
	{
		[Token(Token = "0x60007D7")]
		[Address(RVA = "0xB69900", Offset = "0xB69900", VA = "0xB69900")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60007D8")]
		[Address(RVA = "0xB6994C", Offset = "0xB6994C", VA = "0xB6994C")]
		set
		{
		}
	}

	[Token(Token = "0x170000AE")]
	public int netFreePlayScore5
	{
		[Token(Token = "0x60007D9")]
		[Address(RVA = "0xB69B18", Offset = "0xB69B18", VA = "0xB69B18")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60007DA")]
		[Address(RVA = "0xB69B64", Offset = "0xB69B64", VA = "0xB69B64")]
		set
		{
		}
	}

	[Token(Token = "0x170000AF")]
	public int netFreePlayScore6
	{
		[Token(Token = "0x60007DB")]
		[Address(RVA = "0xB69D30", Offset = "0xB69D30", VA = "0xB69D30")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60007DC")]
		[Address(RVA = "0xB69D7C", Offset = "0xB69D7C", VA = "0xB69D7C")]
		set
		{
		}
	}

	[Token(Token = "0x170000B0")]
	public RealtimeDictionary<UserInfoModel> players
	{
		[Token(Token = "0x60007DD")]
		[Address(RVA = "0xB69F48", Offset = "0xB69F48", VA = "0xB69F48")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000017")]
	public event PropertyChangedHandler<int> netCompScore1DidChange
	{
		[Token(Token = "0x60007DE")]
		[Address(RVA = "0xB69F50", Offset = "0xB69F50", VA = "0xB69F50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A8E04", Offset = "0x7A8E04")]
		add
		{
		}
		[Token(Token = "0x60007DF")]
		[Address(RVA = "0xB69FF0", Offset = "0xB69FF0", VA = "0xB69FF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A8E14", Offset = "0x7A8E14")]
		remove
		{
		}
	}

	[Token(Token = "0x14000018")]
	public event PropertyChangedHandler<int> netCompScore2DidChange
	{
		[Token(Token = "0x60007E0")]
		[Address(RVA = "0xB6A090", Offset = "0xB6A090", VA = "0xB6A090")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A8E24", Offset = "0x7A8E24")]
		add
		{
		}
		[Token(Token = "0x60007E1")]
		[Address(RVA = "0xB6A130", Offset = "0xB6A130", VA = "0xB6A130")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A8E34", Offset = "0x7A8E34")]
		remove
		{
		}
	}

	[Token(Token = "0x14000019")]
	public event PropertyChangedHandler<int> netFreePlayScore1DidChange
	{
		[Token(Token = "0x60007E2")]
		[Address(RVA = "0xB6A1D0", Offset = "0xB6A1D0", VA = "0xB6A1D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A8E44", Offset = "0x7A8E44")]
		add
		{
		}
		[Token(Token = "0x60007E3")]
		[Address(RVA = "0xB6A270", Offset = "0xB6A270", VA = "0xB6A270")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A8E54", Offset = "0x7A8E54")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001A")]
	public event PropertyChangedHandler<int> netFreePlayScore2DidChange
	{
		[Token(Token = "0x60007E4")]
		[Address(RVA = "0xB6A310", Offset = "0xB6A310", VA = "0xB6A310")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A8E64", Offset = "0x7A8E64")]
		add
		{
		}
		[Token(Token = "0x60007E5")]
		[Address(RVA = "0xB6A3B0", Offset = "0xB6A3B0", VA = "0xB6A3B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A8E74", Offset = "0x7A8E74")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001B")]
	public event PropertyChangedHandler<int> netFreePlayScore3DidChange
	{
		[Token(Token = "0x60007E6")]
		[Address(RVA = "0xB6A450", Offset = "0xB6A450", VA = "0xB6A450")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A8E84", Offset = "0x7A8E84")]
		add
		{
		}
		[Token(Token = "0x60007E7")]
		[Address(RVA = "0xB6A4F0", Offset = "0xB6A4F0", VA = "0xB6A4F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A8E94", Offset = "0x7A8E94")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001C")]
	public event PropertyChangedHandler<int> netFreePlayScore4DidChange
	{
		[Token(Token = "0x60007E8")]
		[Address(RVA = "0xB6A590", Offset = "0xB6A590", VA = "0xB6A590")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A8EA4", Offset = "0x7A8EA4")]
		add
		{
		}
		[Token(Token = "0x60007E9")]
		[Address(RVA = "0xB6A630", Offset = "0xB6A630", VA = "0xB6A630")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A8EB4", Offset = "0x7A8EB4")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001D")]
	public event PropertyChangedHandler<int> netFreePlayScore5DidChange
	{
		[Token(Token = "0x60007EA")]
		[Address(RVA = "0xB6A6D0", Offset = "0xB6A6D0", VA = "0xB6A6D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A8EC4", Offset = "0x7A8EC4")]
		add
		{
		}
		[Token(Token = "0x60007EB")]
		[Address(RVA = "0xB6A770", Offset = "0xB6A770", VA = "0xB6A770")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A8ED4", Offset = "0x7A8ED4")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001E")]
	public event PropertyChangedHandler<int> netFreePlayScore6DidChange
	{
		[Token(Token = "0x60007EC")]
		[Address(RVA = "0xB6A810", Offset = "0xB6A810", VA = "0xB6A810")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A8EE4", Offset = "0x7A8EE4")]
		add
		{
		}
		[Token(Token = "0x60007ED")]
		[Address(RVA = "0xB6A8B0", Offset = "0xB6A8B0", VA = "0xB6A8B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A8EF4", Offset = "0x7A8EF4")]
		remove
		{
		}
	}

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0xB68D20", Offset = "0xB68D20", VA = "0xB68D20")]
	public CompetitiveGameModel ShallowCopy()
	{
		return null;
	}

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0xB6A950", Offset = "0xB6A950", VA = "0xB6A950")]
	public CompetitiveGameModel()
	{
	}

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0xB6ACA8", Offset = "0xB6ACA8", VA = "0xB6ACA8", Slot = "7")]
	protected override void OnParentReplaced(RealtimeModel previousParent, RealtimeModel currentParent)
	{
	}

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0xB68E94", Offset = "0xB68E94", VA = "0xB68E94")]
	private void FireNetCompScore1DidChange(int value)
	{
	}

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0xB690AC", Offset = "0xB690AC", VA = "0xB690AC")]
	private void FireNetCompScore2DidChange(int value)
	{
	}

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0xB692C4", Offset = "0xB692C4", VA = "0xB692C4")]
	private void FireNetFreePlayScore1DidChange(int value)
	{
	}

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0xB694DC", Offset = "0xB694DC", VA = "0xB694DC")]
	private void FireNetFreePlayScore2DidChange(int value)
	{
	}

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0xB697D8", Offset = "0xB697D8", VA = "0xB697D8")]
	private void FireNetFreePlayScore3DidChange(int value)
	{
	}

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0xB699F0", Offset = "0xB699F0", VA = "0xB699F0")]
	private void FireNetFreePlayScore4DidChange(int value)
	{
	}

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0xB69C08", Offset = "0xB69C08", VA = "0xB69C08")]
	private void FireNetFreePlayScore5DidChange(int value)
	{
	}

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0xB69E20", Offset = "0xB69E20", VA = "0xB69E20")]
	private void FireNetFreePlayScore6DidChange(int value)
	{
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0xB6AD7C", Offset = "0xB6AD7C", VA = "0xB6AD7C", Slot = "8")]
	protected override int WriteLength(StreamContext context)
	{
		return default(int);
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0xB6AFD0", Offset = "0xB6AFD0", VA = "0xB6AFD0", Slot = "9")]
	protected override void Write(WriteStream stream, StreamContext context)
	{
	}

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0xB6B26C", Offset = "0xB6B26C", VA = "0xB6B26C", Slot = "10")]
	protected override void Read(ReadStream stream, StreamContext context)
	{
	}

	[Token(Token = "0x60007FB")]
	[Address(RVA = "0xB6B5E8", Offset = "0xB6B5E8", VA = "0xB6B5E8")]
	private void UpdateBackingFields()
	{
	}
}
[Token(Token = "0x20001B3")]
public class CompetitiveGameSync : RealtimeComponent<CompetitiveGameModel>
{
	[Serializable]
	[Token(Token = "0x20001B4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7967F0", Offset = "0x7967F0")]
	private sealed class <>c
	{
		[Token(Token = "0x40009C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40009C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<NCNetworkPlayer> <>9__29_0;

		[Token(Token = "0x6000845")]
		[Address(RVA = "0xB07CC0", Offset = "0xB07CC0", VA = "0xB07CC0")]
		public <>c()
		{
		}

		[Token(Token = "0x6000846")]
		[Address(RVA = "0xB07CC8", Offset = "0xB07CC8", VA = "0xB07CC8")]
		internal int <onStartGameClicked>b__29_0(NCNetworkPlayer a, NCNetworkPlayer b)
		{
			return default(int);
		}
	}

	[Token(Token = "0x20001B5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x796800", Offset = "0x796800")]
	private sealed class <delayedPreRoundStart>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CompetitiveGameSync <>4__this;

		[Token(Token = "0x40009CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CompetitiveGameModel currentModel;

		[Token(Token = "0x40009CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool isLocalPlayerOffense;

		[Token(Token = "0x170000B2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600084A")]
			[Address(RVA = "0xB081B4", Offset = "0xB081B4", VA = "0xB081B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600084C")]
			[Address(RVA = "0xB081FC", Offset = "0xB081FC", VA = "0xB081FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000847")]
		[Address(RVA = "0xB08074", Offset = "0xB08074", VA = "0xB08074")]
		[DebuggerHidden]
		public <delayedPreRoundStart>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x6000848")]
		[Address(RVA = "0xB080A0", Offset = "0xB080A0", VA = "0xB080A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000849")]
		[Address(RVA = "0xB080A4", Offset = "0xB080A4", VA = "0xB080A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600084B")]
		[Address(RVA = "0xB081BC", Offset = "0xB081BC", VA = "0xB081BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001B6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x796810", Offset = "0x796810")]
	private sealed class <delayedFacePlayerTowardsTransform>d__54 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float seconds;

		[Token(Token = "0x40009D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform newBallLocation;

		[Token(Token = "0x170000B4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000850")]
			[Address(RVA = "0xB07E74", Offset = "0xB07E74", VA = "0xB07E74", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000852")]
			[Address(RVA = "0xB07EBC", Offset = "0xB07EBC", VA = "0xB07EBC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600084D")]
		[Address(RVA = "0xB07D50", Offset = "0xB07D50", VA = "0xB07D50")]
		[DebuggerHidden]
		public <delayedFacePlayerTowardsTransform>d__54(int <>1__state)
		{
		}

		[Token(Token = "0x600084E")]
		[Address(RVA = "0xB07D7C", Offset = "0xB07D7C", VA = "0xB07D7C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600084F")]
		[Address(RVA = "0xB07D80", Offset = "0xB07D80", VA = "0xB07D80", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000851")]
		[Address(RVA = "0xB07E7C", Offset = "0xB07E7C", VA = "0xB07E7C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001B7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x796820", Offset = "0x796820")]
	private sealed class <delayedMoveBall>d__55 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float seconds;

		[Token(Token = "0x40009D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public NCGrabbableBasketball ball;

		[Token(Token = "0x40009D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 newLocation;

		[Token(Token = "0x170000B6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000856")]
			[Address(RVA = "0xB08024", Offset = "0xB08024", VA = "0xB08024", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000858")]
			[Address(RVA = "0xB0806C", Offset = "0xB0806C", VA = "0xB0806C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000853")]
		[Address(RVA = "0xB07EC4", Offset = "0xB07EC4", VA = "0xB07EC4")]
		[DebuggerHidden]
		public <delayedMoveBall>d__55(int <>1__state)
		{
		}

		[Token(Token = "0x6000854")]
		[Address(RVA = "0xB07EF0", Offset = "0xB07EF0", VA = "0xB07EF0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000855")]
		[Address(RVA = "0xB07EF4", Offset = "0xB07EF4", VA = "0xB07EF4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000857")]
		[Address(RVA = "0xB0802C", Offset = "0xB0802C", VA = "0xB0802C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public CompetitiveGameModel modelReadOnly;

	[Token(Token = "0x40009B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RealtimeAvatarManager realtimeAvatarManager;

	[Token(Token = "0x40009B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public new RealtimeView realtimeView;

	[Token(Token = "0x40009B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Realtime _realtime;

	[Token(Token = "0x40009B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NetworkGameStateManager _networkGameStateManager;

	[Token(Token = "0x40009B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private CourtController.CourtSide _currentCourtSide;

	[Token(Token = "0x40009B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int debugNetFreePlayScore1;

	[Token(Token = "0x40009B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int debugNetFreePlayScore2;

	[Token(Token = "0x40009B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameController.GameMode debugGameMode;

	[Token(Token = "0x40009BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public NetworkGameStateManager.OneVsOneState debugGameState;

	[Token(Token = "0x40009BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int debugOffenseTeam;

	[Token(Token = "0x40009BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int player1Team;

	[Token(Token = "0x40009BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int player1Score;

	[Token(Token = "0x40009BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int player2Team;

	[Token(Token = "0x40009BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int player2Score;

	[Token(Token = "0x40009C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public int player3Team;

	[Token(Token = "0x40009C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int player3Score;

	[Token(Token = "0x40009C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public int playerCount;

	[Token(Token = "0x40009C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private NetworkGameStateManager.OneVsOneState _previousLocalPlayerGameState;

	[Token(Token = "0x40009C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int _previousComputedCompScore1;

	[Token(Token = "0x40009C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int _previousComputedCompScore2;

	[Token(Token = "0x170000B1")]
	public float roundTimeElapsed
	{
		[Token(Token = "0x6000809")]
		[Address(RVA = "0xB6EB9C", Offset = "0xB6EB9C", VA = "0xB6EB9C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000800")]
	[Address(RVA = "0xB6B678", Offset = "0xB6B678", VA = "0xB6B678")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000801")]
	[Address(RVA = "0xB6B7CC", Offset = "0xB6B7CC", VA = "0xB6B7CC")]
	private void userInfoModelAdded(RealtimeDictionary<UserInfoModel> dictionary, uint key, UserInfoModel newModel, bool remote)
	{
	}

	[Token(Token = "0x6000802")]
	[Address(RVA = "0xB6BAA8", Offset = "0xB6BAA8", VA = "0xB6BAA8")]
	private void userInfoModelReplaced(RealtimeDictionary<UserInfoModel> dictionary, uint key, UserInfoModel oldModel, UserInfoModel newModel, bool remote)
	{
	}

	[Token(Token = "0x6000803")]
	[Address(RVA = "0xB6B930", Offset = "0xB6B930", VA = "0xB6B930")]
	private bool isLocalPlayer(uint key)
	{
		return default(bool);
	}

	[Token(Token = "0x6000804")]
	[Address(RVA = "0xB6BC9C", Offset = "0xB6BC9C", VA = "0xB6BC9C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000805")]
	[Address(RVA = "0xB6DA24", Offset = "0xB6DA24", VA = "0xB6DA24", Slot = "22")]
	protected override void OnRealtimeModelReplaced(CompetitiveGameModel previousModel, CompetitiveGameModel currentModel)
	{
	}

	[Token(Token = "0x6000806")]
	[Address(RVA = "0xB6DD08", Offset = "0xB6DD08", VA = "0xB6DD08")]
	private void AvatarCreated(RealtimeAvatarManager avatarManager, RealtimeAvatar avatar, bool isLocalAvatar)
	{
	}

	[Token(Token = "0x6000807")]
	[Address(RVA = "0xB6E0CC", Offset = "0xB6E0CC", VA = "0xB6E0CC")]
	private void AvatarDestroyed(RealtimeAvatarManager avatarManager, RealtimeAvatar avatar, bool isLocalAvatar)
	{
	}

	[Token(Token = "0x6000808")]
	[Address(RVA = "0xB6E188", Offset = "0xB6E188", VA = "0xB6E188")]
	public void onStartGameClicked(Dictionary<int, NCNetworkPlayer> players, GameController.GameMode gameMode, int courtSideIndex)
	{
	}

	[Token(Token = "0x600080A")]
	[Address(RVA = "0xB6ED2C", Offset = "0xB6ED2C", VA = "0xB6ED2C")]
	public void ResetStopwatchForHoop(int hoopIndex)
	{
	}

	[Token(Token = "0x600080B")]
	[Address(RVA = "0xB6F014", Offset = "0xB6F014", VA = "0xB6F014")]
	public TimeSpan GetLocalStopwatchCountDown(int seconds)
	{
		return default(TimeSpan);
	}

	[Token(Token = "0x600080C")]
	[Address(RVA = "0xB6F0AC", Offset = "0xB6F0AC", VA = "0xB6F0AC")]
	private void LocalPlayerGameModeDidChange(UserInfoModel currentModel, GameController.GameMode gameMode)
	{
	}

	[Token(Token = "0x600080D")]
	[Address(RVA = "0xB6F2A0", Offset = "0xB6F2A0", VA = "0xB6F2A0")]
	private void ResetLocalPlayerAfterGame(GameController.GameMode value)
	{
	}

	[Token(Token = "0x600080E")]
	[Address(RVA = "0xB6F500", Offset = "0xB6F500", VA = "0xB6F500")]
	private void SetLocalPlayerGameMode(GameController.GameMode value)
	{
	}

	[Token(Token = "0x600080F")]
	[Address(RVA = "0xB6F3B0", Offset = "0xB6F3B0", VA = "0xB6F3B0")]
	public void SetPlayerGameMode(int playerId, GameController.GameMode value)
	{
	}

	[Token(Token = "0x6000810")]
	[Address(RVA = "0xB6E86C", Offset = "0xB6E86C", VA = "0xB6E86C")]
	private void SetAllPlayersGameState(NetworkGameStateManager.OneVsOneState value, int hoopIndex)
	{
	}

	[Token(Token = "0x6000811")]
	[Address(RVA = "0xB6F7A4", Offset = "0xB6F7A4", VA = "0xB6F7A4")]
	private void SetAllPlayersGameState(NetworkGameStateManager.OneVsOneState value)
	{
	}

	[Token(Token = "0x6000812")]
	[Address(RVA = "0xB6F7D4", Offset = "0xB6F7D4", VA = "0xB6F7D4")]
	private void LocalPlayerCompScored(int team, int score)
	{
	}

	[Token(Token = "0x6000813")]
	[Address(RVA = "0xB6F990", Offset = "0xB6F990", VA = "0xB6F990")]
	public void TriggerOutOfBounds(NCGrabbableBasketball grabbableBasketball)
	{
	}

	[Token(Token = "0x6000814")]
	[Address(RVA = "0xB6FA98", Offset = "0xB6FA98", VA = "0xB6FA98")]
	private NCNetworkPlayer GetNetworkPlayer(NCGrabbableBasketball grabbableBasketball)
	{
		return null;
	}

	[Token(Token = "0x6000815")]
	[Address(RVA = "0xB6FBFC", Offset = "0xB6FBFC", VA = "0xB6FBFC")]
	private NCNetworkPlayer GetNetworkPlayerByNcID(int id)
	{
		return null;
	}

	[Token(Token = "0x6000816")]
	[Address(RVA = "0xB6FC88", Offset = "0xB6FC88", VA = "0xB6FC88")]
	private CourtController.CourtSide GetCompCourtSide()
	{
		return null;
	}

	[Token(Token = "0x6000817")]
	[Address(RVA = "0xB6D748", Offset = "0xB6D748", VA = "0xB6D748")]
	public int computeCompTeamScore(int team, int courtSideIndex)
	{
		return default(int);
	}

	[Token(Token = "0x6000818")]
	[Address(RVA = "0xB6FC90", Offset = "0xB6FC90", VA = "0xB6FC90")]
	private bool didLocalPlayerScorePoint(NCGrabbableBasketball ball)
	{
		return default(bool);
	}

	[Token(Token = "0x6000819")]
	[Address(RVA = "0xB6FD68", Offset = "0xB6FD68", VA = "0xB6FD68")]
	public void ScoreOneVsOneEvent(ScoreZone scoreZone, NCGrabbableBasketball ball)
	{
	}

	[Token(Token = "0x600081A")]
	[Address(RVA = "0xB6FFE4", Offset = "0xB6FFE4", VA = "0xB6FFE4")]
	public void ScoreFreePlayEvent(ScoreZone scoreZone, NCGrabbableBasketball ball)
	{
	}

	[Token(Token = "0x600081B")]
	[Address(RVA = "0xB702C0", Offset = "0xB702C0", VA = "0xB702C0")]
	public void StartOneVsOneRoundIfApplicableEvent(NCGrabbableBasketball grabbableBasketball)
	{
	}

	[Token(Token = "0x600081C")]
	[Address(RVA = "0xB70318", Offset = "0xB70318", VA = "0xB70318")]
	private NCNetworkPlayer GetLocalPlayer()
	{
		return null;
	}

	[Token(Token = "0x600081D")]
	[Address(RVA = "0xB6CE10", Offset = "0xB6CE10", VA = "0xB6CE10")]
	public void OneVsOneGameStateDidChange(NetworkGameStateManager.OneVsOneState previousState, NetworkGameStateManager.OneVsOneState currentState, int previousCompScore1, int previousCompScore2, CompetitiveGameModel currentModel)
	{
	}

	[Token(Token = "0x600081E")]
	[Address(RVA = "0xB70374", Offset = "0xB70374", VA = "0xB70374")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7A8F04", Offset = "0x7A8F04")]
	private IEnumerator delayedPreRoundStart(CompetitiveGameModel currentModel, bool isLocalPlayerOffense)
	{
		return null;
	}

	[Token(Token = "0x600081F")]
	[Address(RVA = "0xB70414", Offset = "0xB70414", VA = "0xB70414")]
	private void setupPreRoundStart(CompetitiveGameModel currentModel, bool isLocalPlayerOffense)
	{
	}

	[Token(Token = "0x6000820")]
	[Address(RVA = "0xB709F8", Offset = "0xB709F8", VA = "0xB709F8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7A8F64", Offset = "0x7A8F64")]
	private IEnumerator delayedFacePlayerTowardsTransform(Transform newBallLocation, float seconds)
	{
		return null;
	}

	[Token(Token = "0x6000821")]
	[Address(RVA = "0xB70954", Offset = "0xB70954", VA = "0xB70954")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7A8FC4", Offset = "0x7A8FC4")]
	private IEnumerator delayedMoveBall(NCGrabbableBasketball ball, Vector3 newLocation, float seconds)
	{
		return null;
	}

	[Token(Token = "0x6000822")]
	[Address(RVA = "0xB6BF08", Offset = "0xB6BF08", VA = "0xB6BF08")]
	private void testingEditorCommands()
	{
	}

	[Token(Token = "0x6000823")]
	[Address(RVA = "0xB6E820", Offset = "0xB6E820", VA = "0xB6E820")]
	public RealtimeDictionary<UserInfoModel> GetPlayersDictionary()
	{
		return null;
	}

	[Token(Token = "0x6000824")]
	[Address(RVA = "0xB70D54", Offset = "0xB70D54", VA = "0xB70D54")]
	public int GetPlayerCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0xB70DAC", Offset = "0xB70DAC", VA = "0xB70DAC")]
	public int GetScore(int playerId)
	{
		return default(int);
	}

	[Token(Token = "0x6000826")]
	[Address(RVA = "0xB70E54", Offset = "0xB70E54", VA = "0xB70E54")]
	public int GetTeam(int playerId)
	{
		return default(int);
	}

	[Token(Token = "0x6000827")]
	[Address(RVA = "0xB70A80", Offset = "0xB70A80", VA = "0xB70A80")]
	public void IncrementScore(int playerId, int add)
	{
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0xB70EFC", Offset = "0xB70EFC", VA = "0xB70EFC")]
	public void SetScore(int playerId, int score)
	{
	}

	[Token(Token = "0x6000829")]
	[Address(RVA = "0xB6F458", Offset = "0xB6F458", VA = "0xB6F458")]
	public void SetTeam(int playerId, int team)
	{
	}

	[Token(Token = "0x600082A")]
	[Address(RVA = "0xB70FA4", Offset = "0xB70FA4", VA = "0xB70FA4")]
	public GameController.GameMode GetGameMode(int playerId)
	{
		return default(GameController.GameMode);
	}

	[Token(Token = "0x600082B")]
	[Address(RVA = "0xB71044", Offset = "0xB71044", VA = "0xB71044")]
	public NetworkGameStateManager.OneVsOneState GetGameState(int playerId)
	{
		return default(NetworkGameStateManager.OneVsOneState);
	}

	[Token(Token = "0x600082C")]
	[Address(RVA = "0xB6F8D4", Offset = "0xB6F8D4", VA = "0xB6F8D4")]
	public void IncrementLocalPlayerScore(int add)
	{
	}

	[Token(Token = "0x600082D")]
	[Address(RVA = "0xB710E4", Offset = "0xB710E4", VA = "0xB710E4")]
	public void SetLocalPlayerScore(int score)
	{
	}

	[Token(Token = "0x600082E")]
	[Address(RVA = "0xB6DFB4", Offset = "0xB6DFB4", VA = "0xB6DFB4")]
	public void SetLocalPlayerReputation(int reputation)
	{
	}

	[Token(Token = "0x600082F")]
	[Address(RVA = "0xB711A0", Offset = "0xB711A0", VA = "0xB711A0")]
	public void SetLocalPlayerTeam(int team)
	{
	}

	[Token(Token = "0x6000830")]
	[Address(RVA = "0xB6FB50", Offset = "0xB6FB50", VA = "0xB6FB50")]
	public int GetLocalPlayerTeam()
	{
		return default(int);
	}

	[Token(Token = "0x6000831")]
	[Address(RVA = "0xB7125C", Offset = "0xB7125C", VA = "0xB7125C")]
	public int GetLocalPlayerScore()
	{
		return default(int);
	}

	[Token(Token = "0x6000832")]
	[Address(RVA = "0xB70898", Offset = "0xB70898", VA = "0xB70898")]
	private int GetLocalPlayerId()
	{
		return default(int);
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0xB6EC30", Offset = "0xB6EC30", VA = "0xB6EC30")]
	private UserInfoModel GetLocalPlayerModel()
	{
		return null;
	}

	[Token(Token = "0x6000834")]
	[Address(RVA = "0xB6D640", Offset = "0xB6D640", VA = "0xB6D640")]
	public int GetLocalPlayerHoopIndex()
	{
		return default(int);
	}

	[Token(Token = "0x6000835")]
	[Address(RVA = "0xB6CD30", Offset = "0xB6CD30", VA = "0xB6CD30")]
	public GameController.GameMode GetLocalPlayerGameMode()
	{
		return default(GameController.GameMode);
	}

	[Token(Token = "0x6000836")]
	[Address(RVA = "0xB6CC50", Offset = "0xB6CC50", VA = "0xB6CC50")]
	public NetworkGameStateManager.OneVsOneState GetLocalPlayerGameState()
	{
		return default(NetworkGameStateManager.OneVsOneState);
	}

	[Token(Token = "0x6000837")]
	[Address(RVA = "0xB71308", Offset = "0xB71308", VA = "0xB71308")]
	public void SetUserGameState(int playerId, NetworkGameStateManager.OneVsOneState gameState)
	{
	}

	[Token(Token = "0x6000838")]
	[Address(RVA = "0xB713B0", Offset = "0xB713B0", VA = "0xB713B0")]
	public void SetLocalPlayerGameState(NetworkGameStateManager.OneVsOneState gameState)
	{
	}

	[Token(Token = "0x6000839")]
	[Address(RVA = "0xB7146C", Offset = "0xB7146C", VA = "0xB7146C")]
	public bool isCompGamePlaying()
	{
		return default(bool);
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0xB71734", Offset = "0xB71734", VA = "0xB71734")]
	public bool isCompGamePlayingOnHoopIndex(int hoopIndex)
	{
		return default(bool);
	}

	[Token(Token = "0x600083B")]
	[Address(RVA = "0xB71A24", Offset = "0xB71A24", VA = "0xB71A24")]
	public void SetTeam(uint playerId, int team)
	{
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0xB71ACC", Offset = "0xB71ACC", VA = "0xB71ACC")]
	public void SetReadyStatus(uint playerId, UIManager.ReadyStatus readyStatus)
	{
	}

	[Token(Token = "0x600083D")]
	[Address(RVA = "0xB6DFB0", Offset = "0xB6DFB0", VA = "0xB6DFB0")]
	public void AddPlayerToDict(int playerId)
	{
	}

	[Token(Token = "0x600083E")]
	[Address(RVA = "0xB6F6BC", Offset = "0xB6F6BC", VA = "0xB6F6BC")]
	public void AddPlayerToDict(uint playerId)
	{
	}

	[Token(Token = "0x600083F")]
	[Address(RVA = "0xB6E184", Offset = "0xB6E184", VA = "0xB6E184")]
	public void RemovePlayerFromDict(int playerId)
	{
	}

	[Token(Token = "0x6000840")]
	[Address(RVA = "0xB71B74", Offset = "0xB71B74", VA = "0xB71B74")]
	public void RemovePlayerFromDict(uint playerId)
	{
	}

	[Token(Token = "0x6000841")]
	[Address(RVA = "0xB70B38", Offset = "0xB70B38", VA = "0xB70B38")]
	public void SetPlayerTeams(List<NCNetworkPlayer> players)
	{
	}

	[Token(Token = "0x6000842")]
	[Address(RVA = "0xB6F5BC", Offset = "0xB6F5BC", VA = "0xB6F5BC")]
	private bool PlayerExistsInDict(uint playerId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000843")]
	[Address(RVA = "0xB71C0C", Offset = "0xB71C0C", VA = "0xB71C0C")]
	public CompetitiveGameSync()
	{
	}
}
[Token(Token = "0x20001B8")]
public class GameEvent : RealtimeComponent<GameEventModel>
{
	[Token(Token = "0x6000859")]
	[Address(RVA = "0xCEDB98", Offset = "0xCEDB98", VA = "0xCEDB98", Slot = "22")]
	protected override void OnRealtimeModelReplaced(GameEventModel previousModel, GameEventModel currentModel)
	{
	}

	[Token(Token = "0x600085A")]
	[Address(RVA = "0xCEDDB4", Offset = "0xCEDDB4", VA = "0xCEDDB4")]
	public void Emit(Vector3 position, float scale)
	{
	}

	[Token(Token = "0x600085B")]
	[Address(RVA = "0xCEDF1C", Offset = "0xCEDF1C", VA = "0xCEDF1C")]
	private void EventDidFire(int senderID, Vector3 position, float scale)
	{
	}

	[Token(Token = "0x600085C")]
	[Address(RVA = "0xCEE018", Offset = "0xCEE018", VA = "0xCEE018")]
	public GameEvent()
	{
	}
}
[Token(Token = "0x20001B9")]
[AttributeAttribute(Name = "RealtimeModelAttribute", RVA = "0x796830", Offset = "0x796830")]
public class GameEventModel : RealtimeModel
{
	[Token(Token = "0x20001BA")]
	public delegate void EventHandler(int senderID, Vector3 position, float scale);

	[Token(Token = "0x20001BB")]
	public enum PropertyID : uint
	{
		[Token(Token = "0x40009E0")]
		Trigger = 1u,
		[Token(Token = "0x40009E1")]
		SenderID,
		[Token(Token = "0x40009E2")]
		Position,
		[Token(Token = "0x40009E3")]
		Scale
	}

	[Token(Token = "0x40009D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[AttributeAttribute(Name = "RealtimePropertyAttribute", RVA = "0x79B53C", Offset = "0x79B53C")]
	private int _trigger;

	[Token(Token = "0x40009D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "RealtimePropertyAttribute", RVA = "0x79B558", Offset = "0x79B558")]
	private int _senderID;

	[Token(Token = "0x40009D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[AttributeAttribute(Name = "RealtimePropertyAttribute", RVA = "0x79B574", Offset = "0x79B574")]
	private Vector3 _position;

	[Token(Token = "0x40009D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "RealtimePropertyAttribute", RVA = "0x79B590", Offset = "0x79B590")]
	private float _scale;

	[Token(Token = "0x40009DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private ReliableProperty<int> _triggerProperty;

	[Token(Token = "0x40009DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private ReliableProperty<int> _senderIDProperty;

	[Token(Token = "0x40009DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private ReliableProperty<Vector3> _positionProperty;

	[Token(Token = "0x40009DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ReliableProperty<float> _scaleProperty;

	[Token(Token = "0x170000B8")]
	public int trigger
	{
		[Token(Token = "0x6000861")]
		[Address(RVA = "0xCEE064", Offset = "0xCEE064", VA = "0xCEE064")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000862")]
		[Address(RVA = "0xCEE0B0", Offset = "0xCEE0B0", VA = "0xCEE0B0")]
		set
		{
		}
	}

	[Token(Token = "0x170000B9")]
	public int senderID
	{
		[Token(Token = "0x6000863")]
		[Address(RVA = "0xCEE3F4", Offset = "0xCEE3F4", VA = "0xCEE3F4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000864")]
		[Address(RVA = "0xCEE148", Offset = "0xCEE148", VA = "0xCEE148")]
		set
		{
		}
	}

	[Token(Token = "0x170000BA")]
	public Vector3 position
	{
		[Token(Token = "0x6000865")]
		[Address(RVA = "0xCEE440", Offset = "0xCEE440", VA = "0xCEE440")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000866")]
		[Address(RVA = "0xCEE1E0", Offset = "0xCEE1E0", VA = "0xCEE1E0")]
		set
		{
		}
	}

	[Token(Token = "0x170000BB")]
	public float scale
	{
		[Token(Token = "0x6000867")]
		[Address(RVA = "0xCEE490", Offset = "0xCEE490", VA = "0xCEE490")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000868")]
		[Address(RVA = "0xCEE2B0", Offset = "0xCEE2B0", VA = "0xCEE2B0")]
		set
		{
		}
	}

	[Token(Token = "0x1400001F")]
	public event EventHandler eventDidFire
	{
		[Token(Token = "0x600085E")]
		[Address(RVA = "0xCEDD14", Offset = "0xCEDD14", VA = "0xCEDD14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A9114", Offset = "0x7A9114")]
		add
		{
		}
		[Token(Token = "0x600085F")]
		[Address(RVA = "0xCEDC74", Offset = "0xCEDC74", VA = "0xCEDC74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A9124", Offset = "0x7A9124")]
		remove
		{
		}
	}

	[Token(Token = "0x600085D")]
	[Address(RVA = "0xCEDEA4", Offset = "0xCEDEA4", VA = "0xCEDEA4")]
	public void FireEvent(int senderID, Vector3 position, float scale)
	{
	}

	[Token(Token = "0x6000860")]
	[Address(RVA = "0xCEE348", Offset = "0xCEE348", VA = "0xCEE348")]
	[AttributeAttribute(Name = "RealtimeCallbackAttribute", RVA = "0x7A9134", Offset = "0x7A9134")]
	private void DidRead()
	{
	}

	[Token(Token = "0x6000869")]
	[Address(RVA = "0xCEE4DC", Offset = "0xCEE4DC", VA = "0xCEE4DC")]
	public GameEventModel()
	{
	}

	[Token(Token = "0x600086A")]
	[Address(RVA = "0xCEE6D8", Offset = "0xCEE6D8", VA = "0xCEE6D8", Slot = "7")]
	protected override void OnParentReplaced(RealtimeModel previousParent, RealtimeModel currentParent)
	{
	}

	[Token(Token = "0x600086B")]
	[Address(RVA = "0xCEE784", Offset = "0xCEE784", VA = "0xCEE784", Slot = "8")]
	protected override int WriteLength(StreamContext context)
	{
		return default(int);
	}

	[Token(Token = "0x600086C")]
	[Address(RVA = "0xCEE8B8", Offset = "0xCEE8B8", VA = "0xCEE8B8", Slot = "9")]
	protected override void Write(WriteStream stream, StreamContext context)
	{
	}

	[Token(Token = "0x600086D")]
	[Address(RVA = "0xCEEA24", Offset = "0xCEEA24", VA = "0xCEEA24", Slot = "10")]
	protected override void Read(ReadStream stream, StreamContext context)
	{
	}

	[Token(Token = "0x600086E")]
	[Address(RVA = "0xCEEBC4", Offset = "0xCEEBC4", VA = "0xCEEBC4")]
	private void UpdateBackingFields()
	{
	}
}
[Token(Token = "0x20001BC")]
public class GameEventTest : MonoBehaviour
{
	[Token(Token = "0x40009E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool _emit;

	[Token(Token = "0x40009E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79B5CC", Offset = "0x79B5CC")]
	[SerializeField]
	private float _scale;

	[Token(Token = "0x6000873")]
	[Address(RVA = "0xCEEC10", Offset = "0xCEEC10", VA = "0xCEEC10")]
	private void Update()
	{
	}

	[Token(Token = "0x6000874")]
	[Address(RVA = "0xCEEC9C", Offset = "0xCEEC9C", VA = "0xCEEC9C")]
	public GameEventTest()
	{
	}
}
[Token(Token = "0x20001BD")]
public class NCGrabbableBasketball : GrabbableEvents
{
	[Token(Token = "0x40009E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RealtimeView realtimeView;

	[Token(Token = "0x40009E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RealtimeTransform realtimeTransform;

	[Token(Token = "0x40009E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public BasketballSync basketballSync;

	[Token(Token = "0x40009E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Grabber currentGrabber;

	[Token(Token = "0x40009EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ControllerHand handSide;

	[Token(Token = "0x40009EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AudioSource _source;

	[Token(Token = "0x40009EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioClip releaseAudioClip;

	[Token(Token = "0x40009ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioClip grabAudioClip;

	[Token(Token = "0x40009EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Dribbling dribbling;

	[Token(Token = "0x40009EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Rigidbody rb;

	[Token(Token = "0x40009F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Vector3 releasePosition;

	[Token(Token = "0x40009F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public TextMeshPro debugText;

	[Token(Token = "0x40009F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private RectTransform debugTextRect;

	[Token(Token = "0x40009F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private MeshFilter meshFilter;

	[Token(Token = "0x40009F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public MeshRenderer meshRenderer;

	[Token(Token = "0x40009F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Material[] materials;

	[Token(Token = "0x40009F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Stopwatch lastReleaseStopwatch;

	[Token(Token = "0x40009F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float lastReleaseMultiplierHack;

	[Token(Token = "0x40009F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Stopwatch collidedWithHandStopWatch;

	[Token(Token = "0x40009F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Stopwatch lastScoreTimer;

	[Token(Token = "0x40009FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Vector3 originalLocation;

	[Token(Token = "0x40009FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public Vector3 originalLocationRelative;

	[Token(Token = "0x40009FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Grabbable grabbable;

	[Token(Token = "0x40009FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public SphereCollider sphereCollider;

	[Token(Token = "0x40009FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public bool isGameBall;

	[Token(Token = "0x40009FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public GameObject fakeShadowPrefab;

	[Token(Token = "0x4000A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private FakeShadowFollow _fakeShadowFollow;

	[Token(Token = "0x4000A01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public bool overrideReplayRecording;

	[Token(Token = "0x4000A02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Stopwatch hackTopTriggerHitTimer;

	[Token(Token = "0x4000A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Vector3 gravityOpt;

	[Token(Token = "0x4000A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private PlayerPositions _playerPositions;

	[Token(Token = "0x4000A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private PlayerPositions.PlayerPosition _playerPosition;

	[Token(Token = "0x4000A06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private GameController.NetworkHeldBy _networkHeldBy;

	[Token(Token = "0x4000A07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private GameController.RecordingState previousRecordState;

	[Token(Token = "0x6000875")]
	[Address(RVA = "0x1F601FC", Offset = "0x1F601FC", VA = "0x1F601FC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000876")]
	[Address(RVA = "0x1F60554", Offset = "0x1F60554", VA = "0x1F60554")]
	private void Update()
	{
	}

	[Token(Token = "0x6000877")]
	[Address(RVA = "0x1F60654", Offset = "0x1F60654", VA = "0x1F60654")]
	private void TryReleaseFailGrab()
	{
	}

	[Token(Token = "0x6000878")]
	[Address(RVA = "0x1F60BBC", Offset = "0x1F60BBC", VA = "0x1F60BBC")]
	private void TryReleaseBallSafe()
	{
	}

	[Token(Token = "0x6000879")]
	[Address(RVA = "0x1F60E9C", Offset = "0x1F60E9C", VA = "0x1F60E9C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600087A")]
	[Address(RVA = "0x1F60F38", Offset = "0x1F60F38", VA = "0x1F60F38")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600087B")]
	[Address(RVA = "0x1F60FD4", Offset = "0x1F60FD4", VA = "0x1F60FD4", Slot = "5")]
	public override bool isGrabAllowed(Grabber grabber)
	{
		return default(bool);
	}

	[Token(Token = "0x600087C")]
	[Address(RVA = "0x1F611F0", Offset = "0x1F611F0", VA = "0x1F611F0", Slot = "6")]
	public override void OnGrab(Grabber grabber)
	{
	}

	[Token(Token = "0x600087D")]
	[Address(RVA = "0x1F6157C", Offset = "0x1F6157C", VA = "0x1F6157C")]
	public void ForceRelease()
	{
	}

	[Token(Token = "0x600087E")]
	[Address(RVA = "0x1F61290", Offset = "0x1F61290", VA = "0x1F61290")]
	private void initiateGrab(Grabber grabber)
	{
	}

	[Token(Token = "0x600087F")]
	[Address(RVA = "0x1F61680", Offset = "0x1F61680", VA = "0x1F61680", Slot = "7")]
	public override void OnRelease()
	{
	}

	[Token(Token = "0x6000880")]
	[Address(RVA = "0x1F6192C", Offset = "0x1F6192C", VA = "0x1F6192C")]
	private void downDribbleRelease()
	{
	}

	[Token(Token = "0x6000881")]
	[Address(RVA = "0x1F61A84", Offset = "0x1F61A84", VA = "0x1F61A84")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000882")]
	[Address(RVA = "0x1F61B48", Offset = "0x1F61B48", VA = "0x1F61B48")]
	private void applyPhysics()
	{
	}

	[Token(Token = "0x6000883")]
	[Address(RVA = "0x1F6080C", Offset = "0x1F6080C", VA = "0x1F6080C")]
	private void applyReplayIfApplicable()
	{
	}

	[Token(Token = "0x6000884")]
	[Address(RVA = "0x1F61DAC", Offset = "0x1F61DAC", VA = "0x1F61DAC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000885")]
	[Address(RVA = "0x1F620E8", Offset = "0x1F620E8", VA = "0x1F620E8")]
	private void OnCollisionEnter(Collision other)
	{
	}

	[Token(Token = "0x6000886")]
	[Address(RVA = "0x1F62D58", Offset = "0x1F62D58", VA = "0x1F62D58")]
	private bool isInterrupting1v1()
	{
		return default(bool);
	}

	[Token(Token = "0x6000887")]
	[Address(RVA = "0x1F63078", Offset = "0x1F63078", VA = "0x1F63078")]
	private void OnCollisionExit(Collision collision)
	{
	}

	[Token(Token = "0x6000888")]
	[Address(RVA = "0x1F62E2C", Offset = "0x1F62E2C", VA = "0x1F62E2C")]
	private void handTouchedHeldBall(float handMomentum, Vector3 newVel, ControllerHand handThatCollided)
	{
	}

	[Token(Token = "0x6000889")]
	[Address(RVA = "0x1F63250", Offset = "0x1F63250", VA = "0x1F63250")]
	public NCGrabbableBasketball()
	{
	}
}
[Token(Token = "0x20001BE")]
public class NCNetworkManager : MonoBehaviour
{
	[Token(Token = "0x20001BF")]
	public enum CourtName
	{
		[Token(Token = "0x4000A10")]
		ballers_stadium,
		[Token(Token = "0x4000A11")]
		street,
		[Token(Token = "0x4000A12")]
		indoor,
		[Token(Token = "0x4000A13")]
		poly_park,
		[Token(Token = "0x4000A14")]
		lobby,
		[Token(Token = "0x4000A15")]
		beach
	}

	[Token(Token = "0x20001C0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x796844", Offset = "0x796844")]
	private sealed class <delayedConnect>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NCNetworkManager <>4__this;

		[Token(Token = "0x4000A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameController.GameMode gameMode;

		[Token(Token = "0x4000A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string roomName;

		[Token(Token = "0x4000A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public CourtName selectedCourt;

		[Token(Token = "0x170000BC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600089C")]
			[Address(RVA = "0xCBBD08", Offset = "0xCBBD08", VA = "0xCBBD08", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600089E")]
			[Address(RVA = "0xCBBD50", Offset = "0xCBBD50", VA = "0xCBBD50", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000899")]
		[Address(RVA = "0xCBBB8C", Offset = "0xCBBB8C", VA = "0xCBBB8C")]
		[DebuggerHidden]
		public <delayedConnect>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x600089A")]
		[Address(RVA = "0xCBBBB8", Offset = "0xCBBBB8", VA = "0xCBBBB8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600089B")]
		[Address(RVA = "0xCBBBBC", Offset = "0xCBBBBC", VA = "0xCBBBBC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600089D")]
		[Address(RVA = "0xCBBD10", Offset = "0xCBBD10", VA = "0xCBBD10", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static NCNetworkManager Instance;

	[Token(Token = "0x4000A09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Realtime realtime;

	[Token(Token = "0x4000A0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Stopwatch _reconnectTimer;

	[Token(Token = "0x4000A0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool firstStart;

	[Token(Token = "0x4000A0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool _appPaused;

	[Token(Token = "0x4000A0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string _lastKnownRoomName;

	[Token(Token = "0x4000A0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameController.GameMode lastKnownGameMode;

	[Token(Token = "0x600088A")]
	[Address(RVA = "0x1F63384", Offset = "0x1F63384", VA = "0x1F63384")]
	private void Start()
	{
	}

	[Token(Token = "0x600088B")]
	[Address(RVA = "0x1F6353C", Offset = "0x1F6353C", VA = "0x1F6353C")]
	private void Update()
	{
	}

	[Token(Token = "0x600088C")]
	[Address(RVA = "0x1F636A8", Offset = "0x1F636A8", VA = "0x1F636A8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600088D")]
	[Address(RVA = "0x1F63784", Offset = "0x1F63784", VA = "0x1F63784")]
	private void DidConnectToRoom(Realtime rt)
	{
	}

	[Token(Token = "0x600088E")]
	[Address(RVA = "0x1F63D14", Offset = "0x1F63D14", VA = "0x1F63D14")]
	private void DidDisconnectToRoom(Realtime rt)
	{
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0x1F63DC4", Offset = "0x1F63DC4", VA = "0x1F63DC4")]
	private void OnApplicationPause(bool isNowPaused)
	{
	}

	[Token(Token = "0x6000890")]
	[Address(RVA = "0x1F635A4", Offset = "0x1F635A4", VA = "0x1F635A4")]
	private void ReconnectToRoom(string roomName)
	{
	}

	[Token(Token = "0x6000891")]
	[Address(RVA = "0x1F63460", Offset = "0x1F63460", VA = "0x1F63460")]
	public void connectToLobby()
	{
	}

	[Token(Token = "0x6000892")]
	[Address(RVA = "0x1F64074", Offset = "0x1F64074", VA = "0x1F64074")]
	public void connectToRoom(CourtMenuButton selectedCourt, bool isMultiplayer)
	{
	}

	[Token(Token = "0x6000893")]
	[Address(RVA = "0x1F63E28", Offset = "0x1F63E28", VA = "0x1F63E28")]
	public void connectToRoom(CourtName selectedCourt, GameController.GameMode gameMode, int index)
	{
	}

	[Token(Token = "0x6000894")]
	[Address(RVA = "0x1F641EC", Offset = "0x1F641EC", VA = "0x1F641EC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7A9148", Offset = "0x7A9148")]
	private IEnumerator delayedConnect(string roomName, GameController.GameMode gameMode, CourtName selectedCourt)
	{
		return null;
	}

	[Token(Token = "0x6000895")]
	[Address(RVA = "0x1F63A08", Offset = "0x1F63A08", VA = "0x1F63A08")]
	public void SetupRoom()
	{
	}

	[Token(Token = "0x6000896")]
	[Address(RVA = "0x1F537CC", Offset = "0x1F537CC", VA = "0x1F537CC")]
	public static string generateRoomName(CourtMenuButton court)
	{
		return null;
	}

	[Token(Token = "0x6000897")]
	[Address(RVA = "0x1F64094", Offset = "0x1F64094", VA = "0x1F64094")]
	public static string generateRoomName(CourtName courtName, GameController.GameMode gameMode, int index)
	{
		return null;
	}

	[Token(Token = "0x6000898")]
	[Address(RVA = "0x1F64298", Offset = "0x1F64298", VA = "0x1F64298")]
	public NCNetworkManager()
	{
	}
}
[Token(Token = "0x20001C1")]
public class NCNetworkPlayer : MonoBehaviour
{
	[Token(Token = "0x4000A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static NCNetworkPlayer localNetworkPlayer;

	[Token(Token = "0x4000A1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Dictionary<int, NCNetworkPlayer> networkPlayers;

	[Token(Token = "0x4000A1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlayerSync playerSync;

	[Token(Token = "0x4000A1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RealtimeView _realtimeView;

	[Token(Token = "0x4000A20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform headTrack;

	[Token(Token = "0x4000A21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform leftHandTrack;

	[Token(Token = "0x4000A22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform rightHandTrack;

	[Token(Token = "0x4000A23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform body;

	[Token(Token = "0x4000A24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public RealtimeAvatar realtimeAvatar;

	[Token(Token = "0x4000A25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public RealtimeAvatarVoice realtimeAvatarVoice;

	[Token(Token = "0x4000A26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject avatarHead;

	[Token(Token = "0x4000A27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject avatarHeadAccessory;

	[Token(Token = "0x4000A28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject avatarHat;

	[Token(Token = "0x4000A29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject avatarHands;

	[Token(Token = "0x4000A2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject playerBubble;

	[Token(Token = "0x4000A2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public TextMeshPro username;

	[Token(Token = "0x4000A2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public TextMeshPro jerseyNumber;

	[Token(Token = "0x4000A2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Collider capsuleCollider;

	[Token(Token = "0x4000A2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Transform hat;

	[Token(Token = "0x4000A2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private GameObject wizardHat;

	[Token(Token = "0x4000A30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private GameObject bunnyHat;

	[Token(Token = "0x4000A31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private GameObject crownHat;

	[Token(Token = "0x4000A32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private GameObject chefHat;

	[Token(Token = "0x4000A33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private GameObject baseballHat;

	[Token(Token = "0x4000A34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject gladiatorHat;

	[Token(Token = "0x4000A35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public AudioSource feetAudioSource;

	[Token(Token = "0x4000A36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public CharacterCustomization characterCustomization;

	[Token(Token = "0x4000A37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public AudioSource playerMicrophone;

	[Token(Token = "0x4000A38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public SkinnedMeshRenderer combinedSkinnedMesh;

	[Token(Token = "0x4000A39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public SkinnedMeshRenderer[] skinnedMeshRenderers;

	[Token(Token = "0x4000A3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Color _colorOffRed;

	[Token(Token = "0x4000A3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Color _colorOffBlue;

	[Token(Token = "0x4000A3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Vector3 _boundSize;

	[Token(Token = "0x4000A3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public UnityEngine.UI.Button muteButton;

	[Token(Token = "0x4000A3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public int determineTeamHack;

	[Token(Token = "0x4000A3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	public int hackNumber2;

	[Token(Token = "0x600089F")]
	[Address(RVA = "0x1F6433C", Offset = "0x1F6433C", VA = "0x1F6433C")]
	private void Start()
	{
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0x1F649A8", Offset = "0x1F649A8", VA = "0x1F649A8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0x1F64A94", Offset = "0x1F64A94", VA = "0x1F64A94")]
	public void setCharacterCustomization(RealtimeView realtimeView, CharacterCustomization cc, int Hair, int Hat, int TShirt, int Pants, int Shoes, int Beard, int Accessory, float Fat, float Muscles, float Slimness, float Thin, float BreastSize)
	{
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0x1F64B78", Offset = "0x1F64B78", VA = "0x1F64B78")]
	private void Update()
	{
	}

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0x1F65958", Offset = "0x1F65958", VA = "0x1F65958")]
	private void SetPosAndRot(Transform target, Transform from)
	{
	}

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0x1F659B0", Offset = "0x1F659B0", VA = "0x1F659B0")]
	public NCNetworkPlayer()
	{
	}

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0x1F65AE8", Offset = "0x1F65AE8", VA = "0x1F65AE8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A91F8", Offset = "0x7A91F8")]
	private void <Start>b__36_0()
	{
	}

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0x1F65BEC", Offset = "0x1F65BEC", VA = "0x1F65BEC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A9208", Offset = "0x7A9208")]
	private void <Start>b__36_1()
	{
	}
}
[Serializable]
[Token(Token = "0x20001C2")]
[AttributeAttribute(Name = "RealtimeModelAttribute", RVA = "0x796854", Offset = "0x796854")]
public class PlayerModel : RealtimeModel
{
	[Token(Token = "0x20001C3")]
	public delegate void PropertyChangedHandler<in T>(PlayerModel model, T value);

	[Token(Token = "0x20001C4")]
	public enum PropertyID : uint
	{
		[Token(Token = "0x4000A7A")]
		Username = 1u,
		[Token(Token = "0x4000A7B")]
		IsGrounded = 3u,
		[Token(Token = "0x4000A7C")]
		FreeplayScore = 4u,
		[Token(Token = "0x4000A7D")]
		CompScore = 5u,
		[Token(Token = "0x4000A7E")]
		PlayerHeight = 6u,
		[Token(Token = "0x4000A7F")]
		PlayerJerseyNumber = 7u,
		[Token(Token = "0x4000A80")]
		Hair = 8u,
		[Token(Token = "0x4000A81")]
		Hat = 9u,
		[Token(Token = "0x4000A82")]
		TShirt = 10u,
		[Token(Token = "0x4000A83")]
		Pants = 11u,
		[Token(Token = "0x4000A84")]
		Shoes = 12u,
		[Token(Token = "0x4000A85")]
		Beard = 13u,
		[Token(Token = "0x4000A86")]
		Accessory = 14u,
		[Token(Token = "0x4000A87")]
		Fat = 15u,
		[Token(Token = "0x4000A88")]
		Muscles = 16u,
		[Token(Token = "0x4000A89")]
		Slimness = 17u,
		[Token(Token = "0x4000A8A")]
		Thin = 18u,
		[Token(Token = "0x4000A8B")]
		BreastSize = 19u,
		[Token(Token = "0x4000A8C")]
		UserId = 20u
	}

	[Token(Token = "0x4000A40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "RealtimePropertyAttribute", RVA = "0x79B610", Offset = "0x79B610")]
	private string _username;

	[Token(Token = "0x4000A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "RealtimePropertyAttribute", RVA = "0x79B62C", Offset = "0x79B62C")]
	private bool _isGrounded;

	[Token(Token = "0x4000A42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[AttributeAttribute(Name = "RealtimePropertyAttribute", RVA = "0x79B648", Offset = "0x79B648")]
	private int _freeplayScore;

	[Token(Token = "0x4000A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "RealtimePropertyAttribute", RVA = "0x79B664", Offset = "0x79B664")]
	private int _compScore;

	[Token(Token = "0x4000A44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[AttributeAttribute(Name = "RealtimePropertyAttribute", RVA = "0x79B680", Offset = "0x79B680")]
	private float _playerHeight;

	[Token(Token = "0x4000A45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "RealtimePropertyAttribute", RVA = "0x79B69C", Offset = "0x79B69C")]
	private float _playerJerseyNumber;

	[Token(Token = "0x4000A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[AttributeAttribute(Name = "RealtimePropertyAttribute", RVA = "0x79B6B8", Offset = "0x79B6B8")]
	private int _hair;

	[Token(Token = "0x4000A47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "RealtimePropertyAttribute", RVA = "0x79B6D4", Offset = "0x79B6D4")]
	private int _hat;

	[Token(Token = "0x4000A48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[AttributeAttribute(Name = "RealtimePropertyAttribute", RVA = "0x79B6F0", Offset = "0x79B6F0")]
	private int _tShirt;

	[Token(Token = "0x4000A49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "RealtimePropertyAttribute", RVA = "0x79B70C", Offset = "0x79B70C")]
	private int _pants;

	[Token(Token = "0x4000A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	[AttributeAttribute(Name = "RealtimePropertyAttribute", RVA = "0x79B728", Offset = "0x79B728")]
	private int _shoes;

	[Token(Token = "0x4000A4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "RealtimePropertyAttribute", RVA = "0x79B744", Offset = "0x79B744")]
	private int _beard;

	[Token(Token = "0x4000A4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[AttributeAttribute(Name = "RealtimePropertyAttribute", RVA = "0x79B760", Offset = "0x79B760")]
	private int _accessory;

	[Token(Token = "0x4000A4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "RealtimePropertyAttribute", RVA = "0x79B77C", Offset = "0x79B77C")]
	private float _fat;

	[Token(Token = "0x4000A4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[AttributeAttribute(Name = "RealtimePropertyAttribute", RVA = "0x79B798", Offset = "0x79B798")]
	private float _muscles;

	[Token(Token = "0x4000A4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "RealtimePropertyAttribute", RVA = "0x79B7B4", Offset = "0x79B7B4")]
	private float _slimness;

	[Token(Token = "0x4000A50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[AttributeAttribute(Name = "RealtimePropertyAttribute", RVA = "0x79B7D0", Offset = "0x79B7D0")]
	private float _thin;

	[Token(Token = "0x4000A51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "RealtimePropertyAttribute", RVA = "0x79B7EC", Offset = "0x79B7EC")]
	private float _breastSize;

	[Token(Token = "0x4000A52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	[AttributeAttribute(Name = "RealtimePropertyAttribute", RVA = "0x79B808", Offset = "0x79B808")]
	private uint _userId;

	[Token(Token = "0x4000A66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private ReliableProperty<string> _usernameProperty;

	[Token(Token = "0x4000A67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private UnreliableProperty<bool> _isGroundedProperty;

	[Token(Token = "0x4000A68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private ReliableProperty<int> _freeplayScoreProperty;

	[Token(Token = "0x4000A69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private ReliableProperty<int> _compScoreProperty;

	[Token(Token = "0x4000A6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private UnreliableProperty<float> _playerHeightProperty;

	[Token(Token = "0x4000A6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private ReliableProperty<float> _playerJerseyNumberProperty;

	[Token(Token = "0x4000A6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private ReliableProperty<int> _hairProperty;

	[Token(Token = "0x4000A6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private ReliableProperty<int> _hatProperty;

	[Token(Token = "0x4000A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private ReliableProperty<int> _tShirtProperty;

	[Token(Token = "0x4000A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private ReliableProperty<int> _pantsProperty;

	[Token(Token = "0x4000A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private ReliableProperty<int> _shoesProperty;

	[Token(Token = "0x4000A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private ReliableProperty<int> _beardProperty;

	[Token(Token = "0x4000A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private ReliableProperty<int> _accessoryProperty;

	[Token(Token = "0x4000A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private ReliableProperty<float> _fatProperty;

	[Token(Token = "0x4000A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private ReliableProperty<float> _musclesProperty;

	[Token(Token = "0x4000A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private ReliableProperty<float> _slimnessProperty;

	[Token(Token = "0x4000A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private ReliableProperty<float> _thinProperty;

	[Token(Token = "0x4000A77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private ReliableProperty<float> _breastSizeProperty;

	[Token(Token = "0x4000A78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private ReliableProperty<uint> _userIdProperty;

	[Token(Token = "0x170000BE")]
	public bool isGrounded
	{
		[Token(Token = "0x60008A8")]
		[Address(RVA = "0xBE8900", Offset = "0xBE8900", VA = "0xBE8900")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60008A9")]
		[Address(RVA = "0xBE894C", Offset = "0xBE894C", VA = "0xBE894C")]
		set
		{
		}
	}

	[Token(Token = "0x170000BF")]
	public float playerHeight
	{
		[Token(Token = "0x60008AA")]
		[Address(RVA = "0xBE8B24", Offset = "0xBE8B24", VA = "0xBE8B24")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60008AB")]
		[Address(RVA = "0xBE8B70", Offset = "0xBE8B70", VA = "0xBE8B70")]
		set
		{
		}
	}

	[Token(Token = "0x170000C0")]
	public string username
	{
		[Token(Token = "0x60008AC")]
		[Address(RVA = "0xBE6808", Offset = "0xBE6808", VA = "0xBE6808")]
		get
		{
			return null;
		}
		[Token(Token = "0x60008AD")]
		[Address(RVA = "0xBE8D3C", Offset = "0xBE8D3C", VA = "0xBE8D3C")]
		set
		{
		}
	}

	[Token(Token = "0x170000C1")]
	public int freeplayScore
	{
		[Token(Token = "0x60008AE")]
		[Address(RVA = "0xBE8F18", Offset = "0xBE8F18", VA = "0xBE8F18")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60008AF")]
		[Address(RVA = "0xBE8F64", Offset = "0xBE8F64", VA = "0xBE8F64")]
		set
		{
		}
	}

	[Token(Token = "0x170000C2")]
	public int compScore
	{
		[Token(Token = "0x60008B0")]
		[Address(RVA = "0xBE9130", Offset = "0xBE9130", VA = "0xBE9130")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60008B1")]
		[Address(RVA = "0xBE917C", Offset = "0xBE917C", VA = "0xBE917C")]
		set
		{
		}
	}

	[Token(Token = "0x170000C3")]
	public float playerJerseyNumber
	{
		[Token(Token = "0x60008B2")]
		[Address(RVA = "0xBE9348", Offset = "0xBE9348", VA = "0xBE9348")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60008B3")]
		[Address(RVA = "0xBE9394", Offset = "0xBE9394", VA = "0xBE9394")]
		set
		{
		}
	}

	[Token(Token = "0x170000C4")]
	public int hair
	{
		[Token(Token = "0x60008B4")]
		[Address(RVA = "0xBE9560", Offset = "0xBE9560", VA = "0xBE9560")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60008B5")]
		[Address(RVA = "0xBE95AC", Offset = "0xBE95AC", VA = "0xBE95AC")]
		set
		{
		}
	}

	[Token(Token = "0x170000C5")]
	public int hat
	{
		[Token(Token = "0x60008B6")]
		[Address(RVA = "0xBE9778", Offset = "0xBE9778", VA = "0xBE9778")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60008B7")]
		[Address(RVA = "0xBE97C4", Offset = "0xBE97C4", VA = "0xBE97C4")]
		set
		{
		}
	}

	[Token(Token = "0x170000C6")]
	public int tShirt
	{
		[Token(Token = "0x60008B8")]
		[Address(RVA = "0xBE9990", Offset = "0xBE9990", VA = "0xBE9990")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60008B9")]
		[Address(RVA = "0xBE99DC", Offset = "0xBE99DC", VA = "0xBE99DC")]
		set
		{
		}
	}

	[Token(Token = "0x170000C7")]
	public int pants
	{
		[Token(Token = "0x60008BA")]
		[Address(RVA = "0xBE9BA8", Offset = "0xBE9BA8", VA = "0xBE9BA8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60008BB")]
		[Address(RVA = "0xBE9BF4", Offset = "0xBE9BF4", VA = "0xBE9BF4")]
		set
		{
		}
	}

	[Token(Token = "0x170000C8")]
	public int shoes
	{
		[Token(Token = "0x60008BC")]
		[Address(RVA = "0xBE9DC0", Offset = "0xBE9DC0", VA = "0xBE9DC0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60008BD")]
		[Address(RVA = "0xBE9E0C", Offset = "0xBE9E0C", VA = "0xBE9E0C")]
		set
		{
		}
	}

	[Token(Token = "0x170000C9")]
	public int beard
	{
		[Token(Token = "0x60008BE")]
		[Address(RVA = "0xBE9FD8", Offset = "0xBE9FD8", VA = "0xBE9FD8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60008BF")]
		[Address(RVA = "0xBEA024", Offset = "0xBEA024", VA = "0xBEA024")]
		set
		{
		}
	}

	[Token(Token = "0x170000CA")]
	public int accessory
	{
		[Token(Token = "0x60008C0")]
		[Address(RVA = "0xBEA1F0", Offset = "0xBEA1F0", VA = "0xBEA1F0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60008C1")]
		[Address(RVA = "0xBEA23C", Offset = "0xBEA23C", VA = "0xBEA23C")]
		set
		{
		}
	}

	[Token(Token = "0x170000CB")]
	public float fat
	{
		[Token(Token = "0x60008C2")]
		[Address(RVA = "0xBEA408", Offset = "0xBEA408", VA = "0xBEA408")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60008C3")]
		[Address(RVA = "0xBEA454", Offset = "0xBEA454", VA = "0xBEA454")]
		set
		{
		}
	}

	[Token(Token = "0x170000CC")]
	public float muscles
	{
		[Token(Token = "0x60008C4")]
		[Address(RVA = "0xBEA620", Offset = "0xBEA620", VA = "0xBEA620")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60008C5")]
		[Address(RVA = "0xBEA66C", Offset = "0xBEA66C", VA = "0xBEA66C")]
		set
		{
		}
	}

	[Token(Token = "0x170000CD")]
	public float slimness
	{
		[Token(Token = "0x60008C6")]
		[Address(RVA = "0xBEA838", Offset = "0xBEA838", VA = "0xBEA838")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60008C7")]
		[Address(RVA = "0xBEA884", Offset = "0xBEA884", VA = "0xBEA884")]
		set
		{
		}
	}

	[Token(Token = "0x170000CE")]
	public float thin
	{
		[Token(Token = "0x60008C8")]
		[Address(RVA = "0xBEAA50", Offset = "0xBEAA50", VA = "0xBEAA50")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60008C9")]
		[Address(RVA = "0xBEAA9C", Offset = "0xBEAA9C", VA = "0xBEAA9C")]
		set
		{
		}
	}

	[Token(Token = "0x170000CF")]
	public float breastSize
	{
		[Token(Token = "0x60008CA")]
		[Address(RVA = "0xBEAC68", Offset = "0xBEAC68", VA = "0xBEAC68")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60008CB")]
		[Address(RVA = "0xBEACB4", Offset = "0xBEACB4", VA = "0xBEACB4")]
		set
		{
		}
	}

	[Token(Token = "0x170000D0")]
	public uint userId
	{
		[Token(Token = "0x60008CC")]
		[Address(RVA = "0xBE6854", Offset = "0xBE6854", VA = "0xBE6854")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60008CD")]
		[Address(RVA = "0xBEAE80", Offset = "0xBEAE80", VA = "0xBEAE80")]
		set
		{
		}
	}

	[Token(Token = "0x14000020")]
	public event PropertyChangedHandler<string> usernameDidChange
	{
		[Token(Token = "0x60008CE")]
		[Address(RVA = "0xBEB04C", Offset = "0xBEB04C", VA = "0xBEB04C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A9218", Offset = "0x7A9218")]
		add
		{
		}
		[Token(Token = "0x60008CF")]
		[Address(RVA = "0xBEB0EC", Offset = "0xBEB0EC", VA = "0xBEB0EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A9228", Offset = "0x7A9228")]
		remove
		{
		}
	}

	[Token(Token = "0x14000021")]
	public event PropertyChangedHandler<bool> isGroundedDidChange
	{
		[Token(Token = "0x60008D0")]
		[Address(RVA = "0xBEB18C", Offset = "0xBEB18C", VA = "0xBEB18C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A9238", Offset = "0x7A9238")]
		add
		{
		}
		[Token(Token = "0x60008D1")]
		[Address(RVA = "0xBEB22C", Offset = "0xBEB22C", VA = "0xBEB22C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A9248", Offset = "0x7A9248")]
		remove
		{
		}
	}

	[Token(Token = "0x14000022")]
	public event PropertyChangedHandler<int> freeplayScoreDidChange
	{
		[Token(Token = "0x60008D2")]
		[Address(RVA = "0xBEB2CC", Offset = "0xBEB2CC", VA = "0xBEB2CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A9258", Offset = "0x7A9258")]
		add
		{
		}
		[Token(Token = "0x60008D3")]
		[Address(RVA = "0xBEB36C", Offset = "0xBEB36C", VA = "0xBEB36C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A9268", Offset = "0x7A9268")]
		remove
		{
		}
	}

	[Token(Token = "0x14000023")]
	public event PropertyChangedHandler<int> compScoreDidChange
	{
		[Token(Token = "0x60008D4")]
		[Address(RVA = "0xBEB40C", Offset = "0xBEB40C", VA = "0xBEB40C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A9278", Offset = "0x7A9278")]
		add
		{
		}
		[Token(Token = "0x60008D5")]
		[Address(RVA = "0xBEB4AC", Offset = "0xBEB4AC", VA = "0xBEB4AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A9288", Offset = "0x7A9288")]
		remove
		{
		}
	}

	[Token(Token = "0x14000024")]
	public event PropertyChangedHandler<float> playerHeightDidChange
	{
		[Token(Token = "0x60008D6")]
		[Address(RVA = "0xBEB54C", Offset = "0xBEB54C", VA = "0xBEB54C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A9298", Offset = "0x7A9298")]
		add
		{
		}
		[Token(Token = "0x60008D7")]
		[Address(RVA = "0xBEB5F0", Offset = "0xBEB5F0", VA = "0xBEB5F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A92A8", Offset = "0x7A92A8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000025")]
	public event PropertyChangedHandler<float> playerJerseyNumberDidChange
	{
		[Token(Token = "0x60008D8")]
		[Address(RVA = "0xBEB694", Offset = "0xBEB694", VA = "0xBEB694")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A92B8", Offset = "0x7A92B8")]
		add
		{
		}
		[Token(Token = "0x60008D9")]
		[Address(RVA = "0xBEB738", Offset = "0xBEB738", VA = "0xBEB738")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A92C8", Offset = "0x7A92C8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000026")]
	public event PropertyChangedHandler<int> hairDidChange
	{
		[Token(Token = "0x60008DA")]
		[Address(RVA = "0xBEB7DC", Offset = "0xBEB7DC", VA = "0xBEB7DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A92D8", Offset = "0x7A92D8")]
		add
		{
		}
		[Token(Token = "0x60008DB")]
		[Address(RVA = "0xBEB880", Offset = "0xBEB880", VA = "0xBEB880")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A92E8", Offset = "0x7A92E8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000027")]
	public event PropertyChangedHandler<int> hatDidChange
	{
		[Token(Token = "0x60008DC")]
		[Address(RVA = "0xBEB924", Offset = "0xBEB924", VA = "0xBEB924")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A92F8", Offset = "0x7A92F8")]
		add
		{
		}
		[Token(Token = "0x60008DD")]
		[Address(RVA = "0xBEB9C8", Offset = "0xBEB9C8", VA = "0xBEB9C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A9308", Offset = "0x7A9308")]
		remove
		{
		}
	}

	[Token(Token = "0x14000028")]
	public event PropertyChangedHandler<int> tShirtDidChange
	{
		[Token(Token = "0x60008DE")]
		[Address(RVA = "0xBEBA6C", Offset = "0xBEBA6C", VA = "0xBEBA6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A9318", Offset = "0x7A9318")]
		add
		{
		}
		[Token(Token = "0x60008DF")]
		[Address(RVA = "0xBEBB10", Offset = "0xBEBB10", VA = "0xBEBB10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A9328", Offset = "0x7A9328")]
		remove
		{
		}
	}

	[Token(Token = "0x14000029")]
	public event PropertyChangedHandler<int> pantsDidChange
	{
		[Token(Token = "0x60008E0")]
		[Address(RVA = "0xBEBBB4", Offset = "0xBEBBB4", VA = "0xBEBBB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A9338", Offset = "0x7A9338")]
		add
		{
		}
		[Token(Token = "0x60008E1")]
		[Address(RVA = "0xBEBC58", Offset = "0xBEBC58", VA = "0xBEBC58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A9348", Offset = "0x7A9348")]
		remove
		{
		}
	}

	[Token(Token = "0x1400002A")]
	public event PropertyChangedHandler<int> shoesDidChange
	{
		[Token(Token = "0x60008E2")]
		[Address(RVA = "0xBEBCFC", Offset = "0xBEBCFC", VA = "0xBEBCFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A9358", Offset = "0x7A9358")]
		add
		{
		}
		[Token(Token = "0x60008E3")]
		[Address(RVA = "0xBEBDA0", Offset = "0xBEBDA0", VA = "0xBEBDA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A9368", Offset = "0x7A9368")]
		remove
		{
		}
	}

	[Token(Token = "0x1400002B")]
	public event PropertyChangedHandler<int> beardDidChange
	{
		[Token(Token = "0x60008E4")]
		[Address(RVA = "0xBEBE44", Offset = "0xBEBE44", VA = "0xBEBE44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A9378", Offset = "0x7A9378")]
		add
		{
		}
		[Token(Token = "0x60008E5")]
		[Address(RVA = "0xBEBEE8", Offset = "0xBEBEE8", VA = "0xBEBEE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A9388", Offset = "0x7A9388")]
		remove
		{
		}
	}

	[Token(Token = "0x1400002C")]
	public event PropertyChangedHandler<int> accessoryDidChange
	{
		[Token(Token = "0x60008E6")]
		[Address(RVA = "0xBEBF8C", Offset = "0xBEBF8C", VA = "0xBEBF8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A9398", Offset = "0x7A9398")]
		add
		{
		}
		[Token(Token = "0x60008E7")]
		[Address(RVA = "0xBEC030", Offset = "0xBEC030", VA = "0xBEC030")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A93A8", Offset = "0x7A93A8")]
		remove
		{
		}
	}

	[Token(Token = "0x1400002D")]
	public event PropertyChangedHandler<float> fatDidChange
	{
		[Token(Token = "0x60008E8")]
		[Address(RVA = "0xBEC0D4", Offset = "0xBEC0D4", VA = "0xBEC0D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A93B8", Offset = "0x7A93B8")]
		add
		{
		}
		[Token(Token = "0x60008E9")]
		[Address(RVA = "0xBEC178", Offset = "0xBEC178", VA = "0xBEC178")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A93C8", Offset = "0x7A93C8")]
		remove
		{
		}
	}

	[Token(Token = "0x1400002E")]
	public event PropertyChangedHandler<float> musclesDidChange
	{
		[Token(Token = "0x60008EA")]
		[Address(RVA = "0xBEC21C", Offset = "0xBEC21C", VA = "0xBEC21C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A93D8", Offset = "0x7A93D8")]
		add
		{
		}
		[Token(Token = "0x60008EB")]
		[Address(RVA = "0xBEC2C0", Offset = "0xBEC2C0", VA = "0xBEC2C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A93E8", Offset = "0x7A93E8")]
		remove
		{
		}
	}

	[Token(Token = "0x1400002F")]
	public event PropertyChangedHandler<float> slimnessDidChange
	{
		[Token(Token = "0x60008EC")]
		[Address(RVA = "0xBEC364", Offset = "0xBEC364", VA = "0xBEC364")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A93F8", Offset = "0x7A93F8")]
		add
		{
		}
		[Token(Token = "0x60008ED")]
		[Address(RVA = "0xBEC408", Offset = "0xBEC408", VA = "0xBEC408")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A9408", Offset = "0x7A9408")]
		remove
		{
		}
	}

	[Token(Token = "0x14000030")]
	public event PropertyChangedHandler<float> thinDidChange
	{
		[Token(Token = "0x60008EE")]
		[Address(RVA = "0xBEC4AC", Offset = "0xBEC4AC", VA = "0xBEC4AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A9418", Offset = "0x7A9418")]
		add
		{
		}
		[Token(Token = "0x60008EF")]
		[Address(RVA = "0xBEC550", Offset = "0xBEC550", VA = "0xBEC550")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A9428", Offset = "0x7A9428")]
		remove
		{
		}
	}

	[Token(Token = "0x14000031")]
	public event PropertyChangedHandler<float> breastSizeDidChange
	{
		[Token(Token = "0x60008F0")]
		[Address(RVA = "0xBEC5F4", Offset = "0xBEC5F4", VA = "0xBEC5F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A9438", Offset = "0x7A9438")]
		add
		{
		}
		[Token(Token = "0x60008F1")]
		[Address(RVA = "0xBEC698", Offset = "0xBEC698", VA = "0xBEC698")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A9448", Offset = "0x7A9448")]
		remove
		{
		}
	}

	[Token(Token = "0x14000032")]
	public event PropertyChangedHandler<uint> userIdDidChange
	{
		[Token(Token = "0x60008F2")]
		[Address(RVA = "0xBEC73C", Offset = "0xBEC73C", VA = "0xBEC73C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A9458", Offset = "0x7A9458")]
		add
		{
		}
		[Token(Token = "0x60008F3")]
		[Address(RVA = "0xBEC7E0", Offset = "0xBEC7E0", VA = "0xBEC7E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A9468", Offset = "0x7A9468")]
		remove
		{
		}
	}

	[Token(Token = "0x60008F4")]
	[Address(RVA = "0xBEC884", Offset = "0xBEC884", VA = "0xBEC884")]
	public PlayerModel()
	{
	}

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0xBECD64", Offset = "0xBECD64", VA = "0xBECD64", Slot = "7")]
	protected override void OnParentReplaced(RealtimeModel previousParent, RealtimeModel currentParent)
	{
	}

	[Token(Token = "0x60008F6")]
	[Address(RVA = "0xBE8DF0", Offset = "0xBE8DF0", VA = "0xBE8DF0")]
	private void FireUsernameDidChange(string value)
	{
	}

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0xBE89FC", Offset = "0xBE89FC", VA = "0xBE89FC")]
	private void FireIsGroundedDidChange(bool value)
	{
	}

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0xBE9008", Offset = "0xBE9008", VA = "0xBE9008")]
	private void FireFreeplayScoreDidChange(int value)
	{
	}

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0xBE9220", Offset = "0xBE9220", VA = "0xBE9220")]
	private void FireCompScoreDidChange(int value)
	{
	}

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0xBE8C14", Offset = "0xBE8C14", VA = "0xBE8C14")]
	private void FirePlayerHeightDidChange(float value)
	{
	}

	[Token(Token = "0x60008FB")]
	[Address(RVA = "0xBE9438", Offset = "0xBE9438", VA = "0xBE9438")]
	private void FirePlayerJerseyNumberDidChange(float value)
	{
	}

	[Token(Token = "0x60008FC")]
	[Address(RVA = "0xBE9650", Offset = "0xBE9650", VA = "0xBE9650")]
	private void FireHairDidChange(int value)
	{
	}

	[Token(Token = "0x60008FD")]
	[Address(RVA = "0xBE9868", Offset = "0xBE9868", VA = "0xBE9868")]
	private void FireHatDidChange(int value)
	{
	}

	[Token(Token = "0x60008FE")]
	[Address(RVA = "0xBE9A80", Offset = "0xBE9A80", VA = "0xBE9A80")]
	private void FireTShirtDidChange(int value)
	{
	}

	[Token(Token = "0x60008FF")]
	[Address(RVA = "0xBE9C98", Offset = "0xBE9C98", VA = "0xBE9C98")]
	private void FirePantsDidChange(int value)
	{
	}

	[Token(Token = "0x6000900")]
	[Address(RVA = "0xBE9EB0", Offset = "0xBE9EB0", VA = "0xBE9EB0")]
	private void FireShoesDidChange(int value)
	{
	}

	[Token(Token = "0x6000901")]
	[Address(RVA = "0xBEA0C8", Offset = "0xBEA0C8", VA = "0xBEA0C8")]
	private void FireBeardDidChange(int value)
	{
	}

	[Token(Token = "0x6000902")]
	[Address(RVA = "0xBEA2E0", Offset = "0xBEA2E0", VA = "0xBEA2E0")]
	private void FireAccessoryDidChange(int value)
	{
	}

	[Token(Token = "0x6000903")]
	[Address(RVA = "0xBEA4F8", Offset = "0xBEA4F8", VA = "0xBEA4F8")]
	private void FireFatDidChange(float value)
	{
	}

	[Token(Token = "0x6000904")]
	[Address(RVA = "0xBEA710", Offset = "0xBEA710", VA = "0xBEA710")]
	private void FireMusclesDidChange(float value)
	{
	}

	[Token(Token = "0x6000905")]
	[Address(RVA = "0xBEA928", Offset = "0xBEA928", VA = "0xBEA928")]
	private void FireSlimnessDidChange(float value)
	{
	}

	[Token(Token = "0x6000906")]
	[Address(RVA = "0xBEAB40", Offset = "0xBEAB40", VA = "0xBEAB40")]
	private void FireThinDidChange(float value)
	{
	}

	[Token(Token = "0x6000907")]
	[Address(RVA = "0xBEAD58", Offset = "0xBEAD58", VA = "0xBEAD58")]
	private void FireBreastSizeDidChange(float value)
	{
	}

	[Token(Token = "0x6000908")]
	[Address(RVA = "0xBEAF24", Offset = "0xBEAF24", VA = "0xBEAF24")]
	private void FireUserIdDidChange(uint value)
	{
	}

	[Token(Token = "0x6000909")]
	[Address(RVA = "0xBECEFC", Offset = "0xBECEFC", VA = "0xBECEFC", Slot = "8")]
	protected override int WriteLength(StreamContext context)
	{
		return default(int);
	}

	[Token(Token = "0x600090A")]
	[Address(RVA = "0xBED350", Offset = "0xBED350", VA = "0xBED350", Slot = "9")]
	protected override void Write(WriteStream stream, StreamContext context)
	{
	}

	[Token(Token = "0x600090B")]
	[Address(RVA = "0xBED814", Offset = "0xBED814", VA = "0xBED814", Slot = "10")]
	protected override void Read(ReadStream stream, StreamContext context)
	{
	}

	[Token(Token = "0x600090C")]
	[Address(RVA = "0xBEDE5C", Offset = "0xBEDE5C", VA = "0xBEDE5C")]
	private void UpdateBackingFields()
	{
	}
}
[Token(Token = "0x20001C5")]
public class PlayerSync : RealtimeComponent<PlayerModel>
{
	[Token(Token = "0x4000A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PlayerModel localModel;

	[Token(Token = "0x4000A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public NCNetworkPlayer networkPlayer;

	[Token(Token = "0x4000A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int debugtShirt;

	[Token(Token = "0x4000A90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int debugpants;

	[Token(Token = "0x4000A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float debugfat;

	[Token(Token = "0x4000A92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public uint debugUserId;

	[Token(Token = "0x6000911")]
	[Address(RVA = "0xBEFA4C", Offset = "0xBEFA4C", VA = "0xBEFA4C", Slot = "22")]
	protected override void OnRealtimeModelReplaced(PlayerModel previousModel, PlayerModel currentModel)
	{
	}

	[Token(Token = "0x6000912")]
	[Address(RVA = "0xBEFCE8", Offset = "0xBEFCE8", VA = "0xBEFCE8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000913")]
	[Address(RVA = "0xBEFC58", Offset = "0xBEFC58", VA = "0xBEFC58")]
	public void avatarDidChange(PlayerModel model, int value)
	{
	}

	[Token(Token = "0x6000914")]
	[Address(RVA = "0xBF005C", Offset = "0xBF005C", VA = "0xBF005C")]
	private void updateAvatar(PlayerModel model)
	{
	}

	[Token(Token = "0x6000915")]
	[Address(RVA = "0xBEFFB4", Offset = "0xBEFFB4", VA = "0xBEFFB4")]
	public void IncrementFreePlayScore()
	{
	}

	[Token(Token = "0x6000916")]
	[Address(RVA = "0xBF01B8", Offset = "0xBF01B8", VA = "0xBF01B8")]
	public void SetAvatarSettings(CharacterCustomization characterCustomization)
	{
	}

	[Token(Token = "0x6000917")]
	[Address(RVA = "0xBF02EC", Offset = "0xBF02EC", VA = "0xBF02EC")]
	public void SetUsername(string username, ulong userId)
	{
	}

	[Token(Token = "0x6000918")]
	[Address(RVA = "0xBF038C", Offset = "0xBF038C", VA = "0xBF038C")]
	public void ToggleReady()
	{
	}

	[Token(Token = "0x6000919")]
	[Address(RVA = "0xBF03B8", Offset = "0xBF03B8", VA = "0xBF03B8")]
	public PlayerSync()
	{
	}
}
[Serializable]
[Token(Token = "0x20001C6")]
[AttributeAttribute(Name = "RealtimeModelAttribute", RVA = "0x796868", Offset = "0x796868")]
public class RoomModel
{
	[Token(Token = "0x4000A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "RealtimePropertyAttribute", RVA = "0x79B954", Offset = "0x79B954")]
	public int _playerCount;

	[Token(Token = "0x600091A")]
	[Address(RVA = "0xC8BF64", Offset = "0xC8BF64", VA = "0xC8BF64")]
	public RoomModel()
	{
	}
}
[Token(Token = "0x20001C7")]
[AttributeAttribute(Name = "RealtimeModelAttribute", RVA = "0x79687C", Offset = "0x79687C")]
public class UserInfoModel : RealtimeModel
{
	[Token(Token = "0x20001C8")]
	public delegate void PropertyChangedHandler<in T>(UserInfoModel model, T value);

	[Token(Token = "0x20001C9")]
	public enum PropertyID : uint
	{
		[Token(Token = "0x4000AAD")]
		Score = 1u,
		[Token(Token = "0x4000AAE")]
		Team,
		[Token(Token = "0x4000AAF")]
		ReadyStatus,
		[Token(Token = "0x4000AB0")]
		GameMode,
		[Token(Token = "0x4000AB1")]
		HoopIndex,
		[Token(Token = "0x4000AB2")]
		Reputation,
		[Token(Token = "0x4000AB3")]
		GameState,
		[Token(Token = "0x4000AB4")]
		StartRoundTime,
		[Token(Token = "0x4000AB5")]
		PlayerIdOfLastAction
	}

	[Token(Token = "0x4000A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[AttributeAttribute(Name = "RealtimePropertyAttribute", RVA = "0x79B970", Offset = "0x79B970")]
	private int _score;

	[Token(Token = "0x4000A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "RealtimePropertyAttribute", RVA = "0x79B98C", Offset = "0x79B98C")]
	private int _team;

	[Token(Token = "0x4000A96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[AttributeAttribute(Name = "RealtimePropertyAttribute", RVA = "0x79B9A8", Offset = "0x79B9A8")]
	private UIManager.ReadyStatus _readyStatus;

	[Token(Token = "0x4000A97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "RealtimePropertyAttribute", RVA = "0x79B9C4", Offset = "0x79B9C4")]
	private GameController.GameMode _gameMode;

	[Token(Token = "0x4000A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[AttributeAttribute(Name = "RealtimePropertyAttribute", RVA = "0x79B9E0", Offset = "0x79B9E0")]
	private int _hoopIndex;

	[Token(Token = "0x4000A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "RealtimePropertyAttribute", RVA = "0x79B9FC", Offset = "0x79B9FC")]
	private int _reputation;

	[Token(Token = "0x4000A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[AttributeAttribute(Name = "RealtimePropertyAttribute", RVA = "0x79BA18", Offset = "0x79BA18")]
	private NetworkGameStateManager.OneVsOneState _gameState;

	[Token(Token = "0x4000A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "RealtimePropertyAttribute", RVA = "0x79BA34", Offset = "0x79BA34")]
	private double _startRoundTime;

	[Token(Token = "0x4000A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "RealtimePropertyAttribute", RVA = "0x79BA50", Offset = "0x79BA50")]
	private int _playerIdOfLastAction;

	[Token(Token = "0x4000AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private ReliableProperty<int> _scoreProperty;

	[Token(Token = "0x4000AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private ReliableProperty<int> _teamProperty;

	[Token(Token = "0x4000AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private ReliableProperty<uint> _readyStatusProperty;

	[Token(Token = "0x4000AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private ReliableProperty<uint> _gameModeProperty;

	[Token(Token = "0x4000AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private ReliableProperty<int> _hoopIndexProperty;

	[Token(Token = "0x4000AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private ReliableProperty<int> _reputationProperty;

	[Token(Token = "0x4000AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private ReliableProperty<uint> _gameStateProperty;

	[Token(Token = "0x4000AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private ReliableProperty<double> _startRoundTimeProperty;

	[Token(Token = "0x4000AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private ReliableProperty<int> _playerIdOfLastActionProperty;

	[Token(Token = "0x170000D1")]
	public int score
	{
		[Token(Token = "0x600091B")]
		[Address(RVA = "0xAC6C78", Offset = "0xAC6C78", VA = "0xAC6C78")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600091C")]
		[Address(RVA = "0xAC6CC4", Offset = "0xAC6CC4", VA = "0xAC6CC4")]
		set
		{
		}
	}

	[Token(Token = "0x170000D2")]
	public int team
	{
		[Token(Token = "0x600091D")]
		[Address(RVA = "0xAC6D5C", Offset = "0xAC6D5C", VA = "0xAC6D5C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600091E")]
		[Address(RVA = "0xAC6DA8", Offset = "0xAC6DA8", VA = "0xAC6DA8")]
		set
		{
		}
	}

	[Token(Token = "0x170000D3")]
	public UIManager.ReadyStatus readyStatus
	{
		[Token(Token = "0x600091F")]
		[Address(RVA = "0xAC6F74", Offset = "0xAC6F74", VA = "0xAC6F74")]
		get
		{
			return default(UIManager.ReadyStatus);
		}
		[Token(Token = "0x6000920")]
		[Address(RVA = "0xAC6FC0", Offset = "0xAC6FC0", VA = "0xAC6FC0")]
		set
		{
		}
	}

	[Token(Token = "0x170000D4")]
	public GameController.GameMode gameMode
	{
		[Token(Token = "0x6000921")]
		[Address(RVA = "0xAC718C", Offset = "0xAC718C", VA = "0xAC718C")]
		get
		{
			return default(GameController.GameMode);
		}
		[Token(Token = "0x6000922")]
		[Address(RVA = "0xAC71D8", Offset = "0xAC71D8", VA = "0xAC71D8")]
		set
		{
		}
	}

	[Token(Token = "0x170000D5")]
	public int hoopIndex
	{
		[Token(Token = "0x6000923")]
		[Address(RVA = "0xAC73A4", Offset = "0xAC73A4", VA = "0xAC73A4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000924")]
		[Address(RVA = "0xAC73F0", Offset = "0xAC73F0", VA = "0xAC73F0")]
		set
		{
		}
	}

	[Token(Token = "0x170000D6")]
	public int reputation
	{
		[Token(Token = "0x6000925")]
		[Address(RVA = "0xAC75BC", Offset = "0xAC75BC", VA = "0xAC75BC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000926")]
		[Address(RVA = "0xAC7608", Offset = "0xAC7608", VA = "0xAC7608")]
		set
		{
		}
	}

	[Token(Token = "0x170000D7")]
	public NetworkGameStateManager.OneVsOneState gameState
	{
		[Token(Token = "0x6000927")]
		[Address(RVA = "0xAC77D4", Offset = "0xAC77D4", VA = "0xAC77D4")]
		get
		{
			return default(NetworkGameStateManager.OneVsOneState);
		}
		[Token(Token = "0x6000928")]
		[Address(RVA = "0xAC7820", Offset = "0xAC7820", VA = "0xAC7820")]
		set
		{
		}
	}

	[Token(Token = "0x170000D8")]
	public double startRoundTime
	{
		[Token(Token = "0x6000929")]
		[Address(RVA = "0xAC79EC", Offset = "0xAC79EC", VA = "0xAC79EC")]
		get
		{
			return default(double);
		}
		[Token(Token = "0x600092A")]
		[Address(RVA = "0xAC7A38", Offset = "0xAC7A38", VA = "0xAC7A38")]
		set
		{
		}
	}

	[Token(Token = "0x170000D9")]
	public int playerIdOfLastAction
	{
		[Token(Token = "0x600092B")]
		[Address(RVA = "0xAC7AD0", Offset = "0xAC7AD0", VA = "0xAC7AD0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600092C")]
		[Address(RVA = "0xAC7B1C", Offset = "0xAC7B1C", VA = "0xAC7B1C")]
		set
		{
		}
	}

	[Token(Token = "0x14000033")]
	public event PropertyChangedHandler<int> teamDidChange
	{
		[Token(Token = "0x600092D")]
		[Address(RVA = "0xAC7BB4", Offset = "0xAC7BB4", VA = "0xAC7BB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A9478", Offset = "0x7A9478")]
		add
		{
		}
		[Token(Token = "0x600092E")]
		[Address(RVA = "0xAC7C54", Offset = "0xAC7C54", VA = "0xAC7C54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A9488", Offset = "0x7A9488")]
		remove
		{
		}
	}

	[Token(Token = "0x14000034")]
	public event PropertyChangedHandler<UIManager.ReadyStatus> readyStatusDidChange
	{
		[Token(Token = "0x600092F")]
		[Address(RVA = "0xAC7CF4", Offset = "0xAC7CF4", VA = "0xAC7CF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A9498", Offset = "0x7A9498")]
		add
		{
		}
		[Token(Token = "0x6000930")]
		[Address(RVA = "0xAC7D94", Offset = "0xAC7D94", VA = "0xAC7D94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A94A8", Offset = "0x7A94A8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000035")]
	public event PropertyChangedHandler<GameController.GameMode> gameModeDidChange
	{
		[Token(Token = "0x6000931")]
		[Address(RVA = "0xAC7E34", Offset = "0xAC7E34", VA = "0xAC7E34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A94B8", Offset = "0x7A94B8")]
		add
		{
		}
		[Token(Token = "0x6000932")]
		[Address(RVA = "0xAC7ED4", Offset = "0xAC7ED4", VA = "0xAC7ED4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A94C8", Offset = "0x7A94C8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000036")]
	public event PropertyChangedHandler<int> hoopIndexDidChange
	{
		[Token(Token = "0x6000933")]
		[Address(RVA = "0xAC7F74", Offset = "0xAC7F74", VA = "0xAC7F74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A94D8", Offset = "0x7A94D8")]
		add
		{
		}
		[Token(Token = "0x6000934")]
		[Address(RVA = "0xAC8014", Offset = "0xAC8014", VA = "0xAC8014")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A94E8", Offset = "0x7A94E8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000037")]
	public event PropertyChangedHandler<int> reputationDidChange
	{
		[Token(Token = "0x6000935")]
		[Address(RVA = "0xAC80B4", Offset = "0xAC80B4", VA = "0xAC80B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A94F8", Offset = "0x7A94F8")]
		add
		{
		}
		[Token(Token = "0x6000936")]
		[Address(RVA = "0xAC8154", Offset = "0xAC8154", VA = "0xAC8154")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A9508", Offset = "0x7A9508")]
		remove
		{
		}
	}

	[Token(Token = "0x14000038")]
	public event PropertyChangedHandler<NetworkGameStateManager.OneVsOneState> gameStateDidChange
	{
		[Token(Token = "0x6000937")]
		[Address(RVA = "0xAC81F4", Offset = "0xAC81F4", VA = "0xAC81F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A9518", Offset = "0x7A9518")]
		add
		{
		}
		[Token(Token = "0x6000938")]
		[Address(RVA = "0xAC8294", Offset = "0xAC8294", VA = "0xAC8294")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A9528", Offset = "0x7A9528")]
		remove
		{
		}
	}

	[Token(Token = "0x6000939")]
	[Address(RVA = "0xAC8334", Offset = "0xAC8334", VA = "0xAC8334")]
	public UserInfoModel()
	{
	}

	[Token(Token = "0x600093A")]
	[Address(RVA = "0xAC85BC", Offset = "0xAC85BC", VA = "0xAC85BC", Slot = "7")]
	protected override void OnParentReplaced(RealtimeModel previousParent, RealtimeModel currentParent)
	{
	}

	[Token(Token = "0x600093B")]
	[Address(RVA = "0xAC6E4C", Offset = "0xAC6E4C", VA = "0xAC6E4C")]
	private void FireTeamDidChange(int value)
	{
	}

	[Token(Token = "0x600093C")]
	[Address(RVA = "0xAC7064", Offset = "0xAC7064", VA = "0xAC7064")]
	private void FireReadyStatusDidChange(UIManager.ReadyStatus value)
	{
	}

	[Token(Token = "0x600093D")]
	[Address(RVA = "0xAC727C", Offset = "0xAC727C", VA = "0xAC727C")]
	private void FireGameModeDidChange(GameController.GameMode value)
	{
	}

	[Token(Token = "0x600093E")]
	[Address(RVA = "0xAC7494", Offset = "0xAC7494", VA = "0xAC7494")]
	private void FireHoopIndexDidChange(int value)
	{
	}

	[Token(Token = "0x600093F")]
	[Address(RVA = "0xAC76AC", Offset = "0xAC76AC", VA = "0xAC76AC")]
	private void FireReputationDidChange(int value)
	{
	}

	[Token(Token = "0x6000940")]
	[Address(RVA = "0xAC78C4", Offset = "0xAC78C4", VA = "0xAC78C4")]
	private void FireGameStateDidChange(NetworkGameStateManager.OneVsOneState value)
	{
	}

	[Token(Token = "0x6000941")]
	[Address(RVA = "0xAC86C0", Offset = "0xAC86C0", VA = "0xAC86C0", Slot = "8")]
	protected override int WriteLength(StreamContext context)
	{
		return default(int);
	}

	[Token(Token = "0x6000942")]
	[Address(RVA = "0xAC88F0", Offset = "0xAC88F0", VA = "0xAC88F0", Slot = "9")]
	protected override void Write(WriteStream stream, StreamContext context)
	{
	}

	[Token(Token = "0x6000943")]
	[Address(RVA = "0xAC8B68", Offset = "0xAC8B68", VA = "0xAC8B68", Slot = "10")]
	protected override void Read(ReadStream stream, StreamContext context)
	{
	}

	[Token(Token = "0x6000944")]
	[Address(RVA = "0xAC8E78", Offset = "0xAC8E78", VA = "0xAC8E78")]
	private void UpdateBackingFields()
	{
	}
}
[Token(Token = "0x20001CA")]
[AttributeAttribute(Name = "RealtimeModelAttribute", RVA = "0x796890", Offset = "0x796890")]
public class UsersInfoModel : RealtimeModel
{
	[Token(Token = "0x20001CB")]
	public enum PropertyID : uint
	{
		[Token(Token = "0x4000AB9")]
		Players = 1u
	}

	[Token(Token = "0x4000AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "RealtimePropertyAttribute", RVA = "0x79BACC", Offset = "0x79BACC")]
	private RealtimeDictionary<UserInfoModel> _players;

	[Token(Token = "0x4000AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private ModelProperty<RealtimeDictionary<UserInfoModel>> _playersProperty;

	[Token(Token = "0x170000DA")]
	public RealtimeDictionary<UserInfoModel> players
	{
		[Token(Token = "0x6000949")]
		[Address(RVA = "0xAC8EFC", Offset = "0xAC8EFC", VA = "0xAC8EFC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600094A")]
	[Address(RVA = "0xAC8F04", Offset = "0xAC8F04", VA = "0xAC8F04")]
	public UsersInfoModel()
	{
	}

	[Token(Token = "0x600094B")]
	[Address(RVA = "0xAC907C", Offset = "0xAC907C", VA = "0xAC907C", Slot = "8")]
	protected override int WriteLength(StreamContext context)
	{
		return default(int);
	}

	[Token(Token = "0x600094C")]
	[Address(RVA = "0xAC90FC", Offset = "0xAC90FC", VA = "0xAC90FC", Slot = "9")]
	protected override void Write(WriteStream stream, StreamContext context)
	{
	}

	[Token(Token = "0x600094D")]
	[Address(RVA = "0xAC91A0", Offset = "0xAC91A0", VA = "0xAC91A0", Slot = "10")]
	protected override void Read(ReadStream stream, StreamContext context)
	{
	}

	[Token(Token = "0x600094E")]
	[Address(RVA = "0xAC9298", Offset = "0xAC9298", VA = "0xAC9298")]
	private void UpdateBackingFields()
	{
	}
}
[Token(Token = "0x20001CC")]
public class OculusSocial : MonoBehaviour
{
	[Token(Token = "0x4000ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private User user;

	[Token(Token = "0x4000ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int sType;

	[Token(Token = "0x4000ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string email;

	[Token(Token = "0x4000ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string password;

	[Token(Token = "0x4000ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string appId;

	[Token(Token = "0x4000ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string uriPrefixOverride;

	[Token(Token = "0x4000AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool entitChk;

	[Token(Token = "0x600094F")]
	[Address(RVA = "0x12FAD70", Offset = "0x12FAD70", VA = "0x12FAD70")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000950")]
	[Address(RVA = "0x12FAD74", Offset = "0x12FAD74", VA = "0x12FAD74")]
	private void entitChkReq()
	{
	}

	[Token(Token = "0x6000951")]
	[Address(RVA = "0x12FB0E0", Offset = "0x12FB0E0", VA = "0x12FB0E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000952")]
	[Address(RVA = "0x12FAFCC", Offset = "0x12FAFCC", VA = "0x12FAFCC")]
	private void setLoggedInUser()
	{
	}

	[Token(Token = "0x6000953")]
	[Address(RVA = "0x12FB0E4", Offset = "0x12FB0E4", VA = "0x12FB0E4")]
	public OculusSocial()
	{
	}

	[Token(Token = "0x6000954")]
	[Address(RVA = "0x12FB188", Offset = "0x12FB188", VA = "0x12FB188")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A9538", Offset = "0x7A9538")]
	private void <entitChkReq>b__8_0(Message msg)
	{
	}

	[Token(Token = "0x6000955")]
	[Address(RVA = "0x12FB278", Offset = "0x12FB278", VA = "0x12FB278")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A9548", Offset = "0x7A9548")]
	private void <setLoggedInUser>b__10_0(Message<User> msg)
	{
	}
}
[Token(Token = "0x20001CD")]
public class PlayerMobility : MonoBehaviour
{
	[Token(Token = "0x4000AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float maxJumpForceSmall;

	[Token(Token = "0x4000AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float playerHeightSmall;

	[Token(Token = "0x4000AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float minJumpForce;

	[Token(Token = "0x4000AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float maxJumpForce;

	[Token(Token = "0x4000AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float avg_height;

	[Token(Token = "0x4000AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float jumpThreshholdTime;

	[Token(Token = "0x4000AC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float jumpFullChargeTime;

	[Token(Token = "0x4000AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float jumpCancelChargeTime;

	[Token(Token = "0x4000AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Stopwatch jumpChargeTimeStopwatch;

	[Token(Token = "0x4000ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private CharacterController characterController;

	[Token(Token = "0x4000ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private SmoothLocomotion smoothLocomotion;

	[Token(Token = "0x4000ACC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private PlayerRotation playerRotation;

	[Token(Token = "0x4000ACD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Stopwatch timeSinceLastJumpStart;

	[Token(Token = "0x4000ACE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PlayerMobility Instance;

	[Token(Token = "0x6000956")]
	[Address(RVA = "0xBE77D8", Offset = "0xBE77D8", VA = "0xBE77D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000957")]
	[Address(RVA = "0xBE78BC", Offset = "0xBE78BC", VA = "0xBE78BC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000958")]
	[Address(RVA = "0xBE7A1C", Offset = "0xBE7A1C", VA = "0xBE7A1C")]
	public void startChargingJump()
	{
	}

	[Token(Token = "0x6000959")]
	[Address(RVA = "0xBE7AA8", Offset = "0xBE7AA8", VA = "0xBE7AA8")]
	public bool jumpButtonReleased()
	{
		return default(bool);
	}

	[Token(Token = "0x600095A")]
	[Address(RVA = "0xBE7B74", Offset = "0xBE7B74", VA = "0xBE7B74")]
	public void setIsRotationAllowed(bool isAllowed)
	{
	}

	[Token(Token = "0x600095B")]
	[Address(RVA = "0xBE7B94", Offset = "0xBE7B94", VA = "0xBE7B94")]
	public bool chargedJumpButtonPressed()
	{
		return default(bool);
	}

	[Token(Token = "0x600095C")]
	[Address(RVA = "0xBE7C60", Offset = "0xBE7C60", VA = "0xBE7C60")]
	public float calcJumpForce()
	{
		return default(float);
	}

	[Token(Token = "0x600095D")]
	[Address(RVA = "0xBE7F84", Offset = "0xBE7F84", VA = "0xBE7F84")]
	public void playJumpSound(float jumpSpeed)
	{
	}

	[Token(Token = "0x600095E")]
	[Address(RVA = "0xBE8230", Offset = "0xBE8230", VA = "0xBE8230")]
	public float calcDynamicJumpForceFromPlayerPosition()
	{
		return default(float);
	}

	[Token(Token = "0x600095F")]
	[Address(RVA = "0xBE8804", Offset = "0xBE8804", VA = "0xBE8804")]
	public PlayerMobility()
	{
	}
}
[Token(Token = "0x20001CE")]
public class PlayerPositions
{
	[Token(Token = "0x20001CF")]
	public class PlayerPosition
	{
		[Token(Token = "0x4000AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 position;

		[Token(Token = "0x4000AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FlightPosition right;

		[Token(Token = "0x4000AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public FlightPosition left;

		[Token(Token = "0x4000AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public FlightPosition mainHand;

		[Token(Token = "0x4000AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FlightPosition offHand;

		[Token(Token = "0x4000AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 xrHeadVelocity;

		[Token(Token = "0x4000AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector3 headPosition;

		[Token(Token = "0x4000AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Quaternion headRotation;

		[Token(Token = "0x4000AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Vector3 xrHeadPosition;

		[Token(Token = "0x4000ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public ControllerHand handSide;

		[Token(Token = "0x4000ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float deltaTime;

		[Token(Token = "0x4000ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public bool isOnGround;

		[Token(Token = "0x4000ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Vector3 ballPosition;

		[Token(Token = "0x4000ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public Vector3 ballVelocity;

		[Token(Token = "0x4000ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Vector3 ballAngularVelocity;

		[Token(Token = "0x4000AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public bool isKinematic;

		[Token(Token = "0x4000AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public UnityEngine.Object instance;

		[Token(Token = "0x6000967")]
		[Address(RVA = "0xCBE214", Offset = "0xCBE214", VA = "0xCBE214")]
		public PlayerPosition()
		{
		}

		[Token(Token = "0x6000968")]
		[Address(RVA = "0xCBE2DC", Offset = "0xCBE2DC", VA = "0xCBE2DC")]
		public FlightPosition getMainHand()
		{
			return null;
		}

		[Token(Token = "0x6000969")]
		[Address(RVA = "0xCBE2E4", Offset = "0xCBE2E4", VA = "0xCBE2E4")]
		public FlightPosition getOffHand()
		{
			return null;
		}

		[Token(Token = "0x600096A")]
		[Address(RVA = "0xCBE2EC", Offset = "0xCBE2EC", VA = "0xCBE2EC")]
		public FlightPosition getHand(ControllerHand hand)
		{
			return null;
		}

		[Token(Token = "0x600096B")]
		[Address(RVA = "0xCBE304", Offset = "0xCBE304", VA = "0xCBE304")]
		public void setMainHand(ControllerHand handSide)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20001D0")]
	public class FlightPosition
	{
		[Token(Token = "0x4000AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public Vector3 position;

		[Token(Token = "0x4000AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion rotation;

		[Token(Token = "0x4000AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 xrVelocity;

		[Token(Token = "0x4000AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 xrAngularVelocity;

		[Token(Token = "0x4000AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 ballPosition;

		[Token(Token = "0x4000AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Vector3 relativeballPosition;

		[Token(Token = "0x600096C")]
		[Address(RVA = "0xCBE20C", Offset = "0xCBE20C", VA = "0xCBE20C")]
		public FlightPosition()
		{
		}
	}

	[Token(Token = "0x4000ACF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int i;

	[Token(Token = "0x4000AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<PlayerPosition> pathList;

	[Token(Token = "0x6000960")]
	[Address(RVA = "0xBEE720", Offset = "0xBEE720", VA = "0xBEE720")]
	public PlayerPositions()
	{
	}

	[Token(Token = "0x6000961")]
	[Address(RVA = "0xBEE824", Offset = "0xBEE824", VA = "0xBEE824")]
	public void Add()
	{
	}

	[Token(Token = "0x6000962")]
	[Address(RVA = "0xBEE888", Offset = "0xBEE888", VA = "0xBEE888")]
	public void Subtract()
	{
	}

	[Token(Token = "0x6000963")]
	[Address(RVA = "0xBE8774", Offset = "0xBE8774", VA = "0xBE8774")]
	public PlayerPosition Get(int index)
	{
		return null;
	}

	[Token(Token = "0x6000964")]
	[Address(RVA = "0xBEE8EC", Offset = "0xBEE8EC", VA = "0xBEE8EC")]
	public PlayerPosition Last()
	{
		return null;
	}

	[Token(Token = "0x6000965")]
	[Address(RVA = "0xBEE914", Offset = "0xBEE914", VA = "0xBEE914")]
	public PlayerPosition GetInPlaceForUpdate()
	{
		return null;
	}

	[Token(Token = "0x6000966")]
	[Address(RVA = "0xBE8728", Offset = "0xBE8728", VA = "0xBE8728")]
	public int Count()
	{
		return default(int);
	}
}
[Token(Token = "0x20001D1")]
public class PlayerStatsTracker : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20001D2")]
	public class PlayerStats
	{
		[Token(Token = "0x4000AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int totalTwoPointersScored;

		[Token(Token = "0x4000AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int totalThreePointersScored;

		[Token(Token = "0x4000AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int totalFourPointersScored;

		[Token(Token = "0x4000AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int totalBasketsAttempted;

		[Token(Token = "0x4000AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HashSet<uint> mutedPlayerIds;

		[Token(Token = "0x4000AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HashSet<uint> reportedPlayerIds;

		[Token(Token = "0x6000981")]
		[Address(RVA = "0xCBE8F8", Offset = "0xCBE8F8", VA = "0xCBE8F8")]
		public PlayerStats()
		{
		}
	}

	[Token(Token = "0x4000AE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PlayerStatsTracker Instance;

	[Token(Token = "0x4000AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PlayerStats playerStats;

	[Token(Token = "0x4000AEA")]
	private const string playerStatsKey = "playerStats";

	[Token(Token = "0x600096D")]
	[Address(RVA = "0xBEF4D0", Offset = "0xBEF4D0", VA = "0xBEF4D0")]
	private void Start()
	{
	}

	[Token(Token = "0x600096E")]
	[Address(RVA = "0xBEF5F0", Offset = "0xBEF5F0", VA = "0xBEF5F0")]
	private void Update()
	{
	}

	[Token(Token = "0x600096F")]
	[Address(RVA = "0xBEF5F4", Offset = "0xBEF5F4", VA = "0xBEF5F4")]
	private void savePlayerStats()
	{
	}

	[Token(Token = "0x6000970")]
	[Address(RVA = "0xBEF654", Offset = "0xBEF654", VA = "0xBEF654")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x6000971")]
	[Address(RVA = "0xBEF660", Offset = "0xBEF660", VA = "0xBEF660")]
	public void DANGERclearStats()
	{
	}

	[Token(Token = "0x6000972")]
	[Address(RVA = "0xBEF52C", Offset = "0xBEF52C", VA = "0xBEF52C")]
	private void loadPlayerStats()
	{
	}

	[Token(Token = "0x6000973")]
	[Address(RVA = "0xBEF6B4", Offset = "0xBEF6B4", VA = "0xBEF6B4")]
	public PlayerStats getPlayerStatsREADONLY()
	{
		return null;
	}

	[Token(Token = "0x6000974")]
	[Address(RVA = "0xBEF6BC", Offset = "0xBEF6BC", VA = "0xBEF6BC")]
	private void twoPointerScored()
	{
	}

	[Token(Token = "0x6000975")]
	[Address(RVA = "0xBEF6E0", Offset = "0xBEF6E0", VA = "0xBEF6E0")]
	private void threePointerScored()
	{
	}

	[Token(Token = "0x6000976")]
	[Address(RVA = "0xBEF704", Offset = "0xBEF704", VA = "0xBEF704")]
	private void fourPointerScored()
	{
	}

	[Token(Token = "0x6000977")]
	[Address(RVA = "0xBEF728", Offset = "0xBEF728", VA = "0xBEF728")]
	public void scoredEvent(int points)
	{
	}

	[Token(Token = "0x6000978")]
	[Address(RVA = "0xBEF81C", Offset = "0xBEF81C", VA = "0xBEF81C")]
	public void playerShotAttemptEvent()
	{
	}

	[Token(Token = "0x6000979")]
	[Address(RVA = "0xBEF840", Offset = "0xBEF840", VA = "0xBEF840")]
	public int getExperienceScore()
	{
		return default(int);
	}

	[Token(Token = "0x600097A")]
	[Address(RVA = "0xBE7394", Offset = "0xBE7394", VA = "0xBE7394")]
	public void reportPlayerIdIfNotAlreadyReported(uint playerId, string userName)
	{
	}

	[Token(Token = "0x600097B")]
	[Address(RVA = "0xBEF86C", Offset = "0xBEF86C", VA = "0xBEF86C")]
	private void mutePlayerId(uint playerId)
	{
	}

	[Token(Token = "0x600097C")]
	[Address(RVA = "0xBEF924", Offset = "0xBEF924", VA = "0xBEF924")]
	private void unmutePlayerId(uint playerId)
	{
	}

	[Token(Token = "0x600097D")]
	[Address(RVA = "0xBE72A4", Offset = "0xBE72A4", VA = "0xBE72A4")]
	public void toggleMute(uint playerId)
	{
	}

	[Token(Token = "0x600097E")]
	[Address(RVA = "0xBE68A0", Offset = "0xBE68A0", VA = "0xBE68A0")]
	public bool isPlayerMuted(uint playerId)
	{
		return default(bool);
	}

	[Token(Token = "0x600097F")]
	[Address(RVA = "0xBE690C", Offset = "0xBE690C", VA = "0xBE690C")]
	public bool isPlayerReported(uint playerId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000980")]
	[Address(RVA = "0xBEF9DC", Offset = "0xBEF9DC", VA = "0xBEF9DC")]
	public PlayerStatsTracker()
	{
	}
}
[Token(Token = "0x20001D3")]
public class Pointer : MonoBehaviour
{
	[Token(Token = "0x4000AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] track;

	[Token(Token = "0x4000AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody[] rbs;

	[Token(Token = "0x4000AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject pointerPrefab;

	[Token(Token = "0x4000AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject[] pointers;

	[Token(Token = "0x4000AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string trackingType;

	[Token(Token = "0x4000AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 originalScale;

	[Token(Token = "0x6000982")]
	[Address(RVA = "0xC84A74", Offset = "0xC84A74", VA = "0xC84A74")]
	private void Start()
	{
	}

	[Token(Token = "0x6000983")]
	[Address(RVA = "0xC84CF4", Offset = "0xC84CF4", VA = "0xC84CF4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000984")]
	[Address(RVA = "0xC85114", Offset = "0xC85114", VA = "0xC85114")]
	public Pointer()
	{
	}
}
[Token(Token = "0x20001D4")]
public class PrivateCourtManager : MonoBehaviour
{
	[Token(Token = "0x20001D5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7968A4", Offset = "0x7968A4")]
	private sealed class <>c__DisplayClass5_0
	{
		[Token(Token = "0x4000AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int val;

		[Token(Token = "0x4000AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PrivateCourtManager <>4__this;

		[Token(Token = "0x6000989")]
		[Address(RVA = "0xCBF54C", Offset = "0xCBF54C", VA = "0xCBF54C")]
		public <>c__DisplayClass5_0()
		{
		}

		[Token(Token = "0x600098A")]
		[Address(RVA = "0xCBF554", Offset = "0xCBF554", VA = "0xCBF554")]
		internal void <Start>b__3()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20001D6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7968B4", Offset = "0x7968B4")]
	private sealed class <>c
	{
		[Token(Token = "0x4000AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static UnityAction<int> <>9__5_2;

		[Token(Token = "0x600098C")]
		[Address(RVA = "0xCBF540", Offset = "0xCBF540", VA = "0xCBF540")]
		public <>c()
		{
		}

		[Token(Token = "0x600098D")]
		[Address(RVA = "0xCBF548", Offset = "0xCBF548", VA = "0xCBF548")]
		internal void <Start>b__5_2(int value)
		{
		}
	}

	[Token(Token = "0x4000AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI courtName;

	[Token(Token = "0x4000AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEngine.UI.Button[] keypadDigits;

	[Token(Token = "0x4000AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEngine.UI.Button joinPrivateCourtButton;

	[Token(Token = "0x4000AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEngine.UI.Button clearButton;

	[Token(Token = "0x4000AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TMP_Dropdown courtDropdown;

	[Token(Token = "0x6000985")]
	[Address(RVA = "0xC85BF0", Offset = "0xC85BF0", VA = "0xC85BF0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000986")]
	[Address(RVA = "0xC85EC8", Offset = "0xC85EC8", VA = "0xC85EC8")]
	public PrivateCourtManager()
	{
	}

	[Token(Token = "0x6000987")]
	[Address(RVA = "0xC85ED0", Offset = "0xC85ED0", VA = "0xC85ED0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A9558", Offset = "0x7A9558")]
	private void <Start>b__5_0()
	{
	}

	[Token(Token = "0x6000988")]
	[Address(RVA = "0xC85FA8", Offset = "0xC85FA8", VA = "0xC85FA8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A9568", Offset = "0x7A9568")]
	private void <Start>b__5_1()
	{
	}
}
[Token(Token = "0x20001D7")]
public class RemoteConfigLoader : MonoBehaviour
{
	[Token(Token = "0x20001D8")]
	public struct userAttributes
	{
		[Token(Token = "0x4000B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool expansionFlag;
	}

	[Token(Token = "0x20001D9")]
	public struct appAttributes
	{
		[Token(Token = "0x4000B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int level;

		[Token(Token = "0x4000B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int score;

		[Token(Token = "0x4000B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string appVersion;
	}

	[Token(Token = "0x4000B00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int newestBuildNumber;

	[Token(Token = "0x600098E")]
	[Address(RVA = "0xC8949C", Offset = "0xC8949C", VA = "0xC8949C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600098F")]
	[Address(RVA = "0xC895A0", Offset = "0xC895A0", VA = "0xC895A0")]
	private void ApplyRemoteSettings(ConfigResponse configResponse)
	{
	}

	[Token(Token = "0x6000990")]
	[Address(RVA = "0xC8975C", Offset = "0xC8975C", VA = "0xC8975C")]
	public RemoteConfigLoader()
	{
	}
}
[Token(Token = "0x20001DA")]
public class ScoreNetCollision : MonoBehaviour
{
	[Token(Token = "0x4000B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject regularNet;

	[Token(Token = "0x4000B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject chainNet;

	[Token(Token = "0x4000B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool useChainNet;

	[Token(Token = "0x6000991")]
	[Address(RVA = "0xC8DE9C", Offset = "0xC8DE9C", VA = "0xC8DE9C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000992")]
	[Address(RVA = "0xC8DF04", Offset = "0xC8DF04", VA = "0xC8DF04")]
	private void Update()
	{
	}

	[Token(Token = "0x6000993")]
	[Address(RVA = "0xC8DF08", Offset = "0xC8DF08", VA = "0xC8DF08")]
	public ScoreNetCollision()
	{
	}
}
[Token(Token = "0x20001DB")]
public class ScoreZone : MonoBehaviour
{
	[Token(Token = "0x4000B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int side;

	[Token(Token = "0x4000B09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform freeThrowLocation;

	[Token(Token = "0x4000B0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject aroundTheWorldLocationsHolder;

	[Token(Token = "0x4000B0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform[] aroundTheWorldLocations;

	[Token(Token = "0x4000B0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform gameBallStartLocation;

	[Token(Token = "0x4000B0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform offenseStartLocation;

	[Token(Token = "0x4000B0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEngine.UI.Button freeThrowChallengeButton;

	[Token(Token = "0x4000B0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UnityEngine.UI.Button aroundTheWorldMiniGameButton;

	[Token(Token = "0x4000B10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioClip[] clips;

	[Token(Token = "0x4000B11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AudioSource source;

	[Token(Token = "0x4000B12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Disc controlDiskZone;

	[Token(Token = "0x4000B13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ScoreZone scoreZoneComponent;

	[Token(Token = "0x4000B14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public TextMeshProUGUI leaderBoardFreeThrowListText;

	[Token(Token = "0x4000B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public TextMeshProUGUI leaderBoardAroundTheWorldListText;

	[Token(Token = "0x4000B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Transform playerController;

	[Token(Token = "0x4000B17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public ScoreNetCollision scoreNetCollision;

	[Token(Token = "0x4000B18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public BNG.Button readyButton;

	[Token(Token = "0x4000B19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public TextMeshPro inTheZoneText;

	[Token(Token = "0x4000B1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int _courtSideIndex;

	[Token(Token = "0x4000B1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Stopwatch _lastReadyButtonClick;

	[Token(Token = "0x6000994")]
	[Address(RVA = "0xC8DF10", Offset = "0xC8DF10", VA = "0xC8DF10")]
	private void Start()
	{
	}

	[Token(Token = "0x6000995")]
	[Address(RVA = "0xC8E5AC", Offset = "0xC8E5AC", VA = "0xC8E5AC")]
	private bool isInZone(Transform playerTransform, Transform readyButtonTranform)
	{
		return default(bool);
	}

	[Token(Token = "0x6000996")]
	[Address(RVA = "0xC8E644", Offset = "0xC8E644", VA = "0xC8E644")]
	private void Update()
	{
	}

	[Token(Token = "0x6000997")]
	[Address(RVA = "0xC8F0A0", Offset = "0xC8F0A0", VA = "0xC8F0A0")]
	private void onClickFreeThrowChallengeButton()
	{
	}

	[Token(Token = "0x6000998")]
	[Address(RVA = "0xC8F108", Offset = "0xC8F108", VA = "0xC8F108")]
	private void onClickAroundTheWorldMiniGameButton()
	{
	}

	[Token(Token = "0x6000999")]
	[Address(RVA = "0xC8F1BC", Offset = "0xC8F1BC", VA = "0xC8F1BC")]
	public void potentialScoreEvent(Collider other)
	{
	}

	[Token(Token = "0x600099A")]
	[Address(RVA = "0xC8F708", Offset = "0xC8F708", VA = "0xC8F708")]
	public ScoreZone()
	{
	}

	[Token(Token = "0x600099B")]
	[Address(RVA = "0xC8F778", Offset = "0xC8F778", VA = "0xC8F778")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A9578", Offset = "0x7A9578")]
	private void <Start>b__20_0()
	{
	}
}
[Token(Token = "0x20001DC")]
public class Screenshotter : MonoBehaviour
{
	[Token(Token = "0x4000B1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RenderTexture renderTexture;

	[Token(Token = "0x600099C")]
	[Address(RVA = "0xC90868", Offset = "0xC90868", VA = "0xC90868")]
	private void Start()
	{
	}

	[Token(Token = "0x600099D")]
	[Address(RVA = "0xC9086C", Offset = "0xC9086C", VA = "0xC9086C")]
	private void Update()
	{
	}

	[Token(Token = "0x600099E")]
	[Address(RVA = "0xC9094C", Offset = "0xC9094C", VA = "0xC9094C")]
	public void TakeScreenshot()
	{
	}

	[Token(Token = "0x600099F")]
	[Address(RVA = "0xC90B68", Offset = "0xC90B68", VA = "0xC90B68")]
	public Screenshotter()
	{
	}
}
[Token(Token = "0x20001DD")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7968C4", Offset = "0x7968C4")]
public class ScriptableString : ScriptableObject
{
	[Token(Token = "0x4000B1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string value;

	[Token(Token = "0x60009A0")]
	[Address(RVA = "0xC90B70", Offset = "0xC90B70", VA = "0xC90B70")]
	public ScriptableString()
	{
	}
}
[Token(Token = "0x20001DE")]
public class ShootingPhysics
{
	[Token(Token = "0x60009A1")]
	[Address(RVA = "0xC91F3C", Offset = "0xC91F3C", VA = "0xC91F3C")]
	public static Vector3 getTorqueForVelocity(Vector3 velocity)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60009A2")]
	[Address(RVA = "0xC91F64", Offset = "0xC91F64", VA = "0xC91F64")]
	public static Vector3 calcVelocityFromControllersV1(List<PlayerPositions.PlayerPosition> pps)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60009A3")]
	[Address(RVA = "0xC92470", Offset = "0xC92470", VA = "0xC92470")]
	public static Vector3 calcVelocityFromControllersV2(List<PlayerPositions.PlayerPosition> pps)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60009A4")]
	[Address(RVA = "0xC926EC", Offset = "0xC926EC", VA = "0xC926EC")]
	public static Vector3 calcVelocityFromControllersV3(List<PlayerPositions.PlayerPosition> pps)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60009A5")]
	[Address(RVA = "0xC92B58", Offset = "0xC92B58", VA = "0xC92B58")]
	public static Vector3 calcVelocityFromControllersV4(List<PlayerPositions.PlayerPosition> pps)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60009A6")]
	[Address(RVA = "0xC92F0C", Offset = "0xC92F0C", VA = "0xC92F0C")]
	public static Vector3 calcVelocityFromControllersV5(PlayerPositions pps)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60009A7")]
	[Address(RVA = "0xC93274", Offset = "0xC93274", VA = "0xC93274")]
	public static Vector3 calcVelocityFromControllersV6(PlayerPositions pps)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60009A8")]
	[Address(RVA = "0xC93868", Offset = "0xC93868", VA = "0xC93868")]
	public static Vector3 calcVelocityFromControllersV7(PlayerPositions pps)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60009A9")]
	[Address(RVA = "0xC94084", Offset = "0xC94084", VA = "0xC94084")]
	public static Vector3 calcVelocityFromControllersV8(PlayerPositions pps)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60009AA")]
	[Address(RVA = "0xC945AC", Offset = "0xC945AC", VA = "0xC945AC")]
	public static Vector3 calcVelocityFromControllersV9(PlayerPositions pps)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60009AB")]
	[Address(RVA = "0xC94AF0", Offset = "0xC94AF0", VA = "0xC94AF0")]
	public static Vector3 calcVelocityFromControllersV10(PlayerPositions pps)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60009AC")]
	[Address(RVA = "0xC94FE8", Offset = "0xC94FE8", VA = "0xC94FE8")]
	public static Vector3 calcVelocityFromControllersV11(PlayerPositions pps)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60009AD")]
	[Address(RVA = "0xC931C0", Offset = "0xC931C0", VA = "0xC931C0")]
	public static Vector3 calcLoftFromAngVel1(PlayerPositions pps, Vector3 calcedControllerVelocity)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60009AE")]
	[Address(RVA = "0xC937D8", Offset = "0xC937D8", VA = "0xC937D8")]
	public static Vector3 calcLoftFromAngVel2(PlayerPositions pps, Vector3 targetDirVel, Vector3 avgAngVel)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60009AF")]
	[Address(RVA = "0xC93FF8", Offset = "0xC93FF8", VA = "0xC93FF8")]
	public static Vector3 calcLoftFromAVel3(PlayerPositions pps, Vector3 targetDirVel, Vector3 avgAngVel, float effectReducer)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60009B0")]
	[Address(RVA = "0xC95574", Offset = "0xC95574", VA = "0xC95574")]
	public static Vector3 calcHeadVelocityV1(PlayerPositions pps)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60009B1")]
	[Address(RVA = "0xC95764", Offset = "0xC95764", VA = "0xC95764")]
	public static Vector3 calcHeadVelocityV2(PlayerPositions pps)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60009B2")]
	[Address(RVA = "0xC958AC", Offset = "0xC958AC", VA = "0xC958AC")]
	public static Vector3 calcHeadVelocityV2(List<PlayerPositions.PlayerPosition> fp)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60009B3")]
	[Address(RVA = "0xC95928", Offset = "0xC95928", VA = "0xC95928")]
	public static Vector3 calcPerfectShotV1(Rigidbody ball, Vector3 position)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60009B4")]
	[Address(RVA = "0xC95970", Offset = "0xC95970", VA = "0xC95970")]
	public static Vector3 calcPerfectShotYIKES(Rigidbody ball, Vector3 position)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60009B5")]
	[Address(RVA = "0xC95A14", Offset = "0xC95A14", VA = "0xC95A14")]
	public static Vector3 calcAimAssistedVelocityV1(Vector3 perfect, Vector3 real)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60009B6")]
	[Address(RVA = "0xC95AA4", Offset = "0xC95AA4", VA = "0xC95AA4")]
	public static Vector3 calcAimAssistedVelocityV2(Vector3 perfect, Vector3 real)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60009B7")]
	[Address(RVA = "0xC95B30", Offset = "0xC95B30", VA = "0xC95B30")]
	public static Vector3 calcAimAssistedVelocityV3(Vector3 perfect, Vector3 real)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60009B8")]
	[Address(RVA = "0xC95B9C", Offset = "0xC95B9C", VA = "0xC95B9C")]
	public static Vector3 calcAimAssistedVelocityV4(Vector3 real, Vector3 targetLocation, Vector3 ballLocation)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60009B9")]
	[Address(RVA = "0xC9237C", Offset = "0xC9237C", VA = "0xC9237C")]
	public static Vector3 calcInstantVelocity(Vector3 curr, Vector3 prev, float deltaTime)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60009BA")]
	[Address(RVA = "0xC92398", Offset = "0xC92398", VA = "0xC92398")]
	public static Quaternion relativeRotation(Quaternion a, Quaternion b)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60009BB")]
	[Address(RVA = "0xC95C20", Offset = "0xC95C20", VA = "0xC95C20")]
	public static Vector3 quaternionToVector3(Quaternion q)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60009BC")]
	[Address(RVA = "0xC923E4", Offset = "0xC923E4", VA = "0xC923E4")]
	public static Vector3 quaternionToVector3B(Quaternion q)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60009BD")]
	[Address(RVA = "0xC95C78", Offset = "0xC95C78", VA = "0xC95C78")]
	public ShootingPhysics()
	{
	}
}
[Token(Token = "0x20001DF")]
public class StartScreenController : MonoBehaviour
{
	[Token(Token = "0x4000B1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text heading;

	[Token(Token = "0x60009BE")]
	[Address(RVA = "0xDC5084", Offset = "0xDC5084", VA = "0xDC5084")]
	private void Start()
	{
	}

	[Token(Token = "0x60009BF")]
	[Address(RVA = "0xDC5088", Offset = "0xDC5088", VA = "0xDC5088")]
	private void Update()
	{
	}

	[Token(Token = "0x60009C0")]
	[Address(RVA = "0xDC5124", Offset = "0xDC5124", VA = "0xDC5124")]
	public void StartGameScene()
	{
	}

	[Token(Token = "0x60009C1")]
	[Address(RVA = "0xDC51E4", Offset = "0xDC51E4", VA = "0xDC51E4")]
	public StartScreenController()
	{
	}
}
[Token(Token = "0x20001E0")]
public class TriggerSoundCollision : MonoBehaviour
{
	[Token(Token = "0x4000B1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource source;

	[Token(Token = "0x4000B20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody rb;

	[Token(Token = "0x4000B21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool playOnCollision;

	[Token(Token = "0x4000B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] onlyObjects;

	[Token(Token = "0x4000B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip[] audioClips;

	[Token(Token = "0x4000B24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Dictionary<string, GameObject> objectDictionary;

	[Token(Token = "0x4000B25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Dictionary<string, AudioClip> audioDictionary;

	[Token(Token = "0x4000B26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject prevCollision;

	[Token(Token = "0x4000B27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Stopwatch stopwatchLastSound;

	[Token(Token = "0x60009C2")]
	[Address(RVA = "0xE87458", Offset = "0xE87458", VA = "0xE87458")]
	private void Start()
	{
	}

	[Token(Token = "0x60009C3")]
	[Address(RVA = "0xE8768C", Offset = "0xE8768C", VA = "0xE8768C")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60009C4")]
	[Address(RVA = "0xE87830", Offset = "0xE87830", VA = "0xE87830")]
	private void OnTriggerEnter(Collider collision)
	{
	}

	[Token(Token = "0x60009C5")]
	[Address(RVA = "0xE876C4", Offset = "0xE876C4", VA = "0xE876C4")]
	private void cycleThroughObjects(Collider collision)
	{
	}

	[Token(Token = "0x60009C6")]
	[Address(RVA = "0xE87834", Offset = "0xE87834", VA = "0xE87834")]
	public static void playOneShotDynamicFromVelocity(AudioSource source, AudioClip clip, Vector3 velocity)
	{
	}

	[Token(Token = "0x60009C7")]
	[Address(RVA = "0xE87848", Offset = "0xE87848", VA = "0xE87848")]
	public static void playOneShotDynamicFromVelocity(AudioSource source, AudioClip clip, float pitch, Vector3 velocity)
	{
	}

	[Token(Token = "0x60009C8")]
	[Address(RVA = "0xE878DC", Offset = "0xE878DC", VA = "0xE878DC")]
	public static void playOneShotDynamic(AudioSource source, AudioClip clip, float pitch, float volume)
	{
	}

	[Token(Token = "0x60009C9")]
	[Address(RVA = "0xE87934", Offset = "0xE87934", VA = "0xE87934")]
	public TriggerSoundCollision()
	{
	}
}
[Token(Token = "0x20001E1")]
public class UIManager : MonoBehaviour
{
	[Token(Token = "0x20001E2")]
	public enum HzSelector
	{
		[Token(Token = "0x4000B4E")]
		hz72,
		[Token(Token = "0x4000B4F")]
		hz90,
		[Token(Token = "0x4000B50")]
		hz120
	}

	[Token(Token = "0x20001E3")]
	public enum GraphicsMode
	{
		[Token(Token = "0x4000B52")]
		HIGH_RESOLUTION,
		[Token(Token = "0x4000B53")]
		BALANCED,
		[Token(Token = "0x4000B54")]
		HIGH_FPS,
		[Token(Token = "0x4000B55")]
		LOW_LAG
	}

	[Token(Token = "0x20001E4")]
	public enum ReadyStatus
	{
		[Token(Token = "0x4000B57")]
		NONE,
		[Token(Token = "0x4000B58")]
		READY,
		[Token(Token = "0x4000B59")]
		PLAYING
	}

	[Serializable]
	[Token(Token = "0x20001E5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7968D4", Offset = "0x7968D4")]
	private sealed class <>c
	{
		[Token(Token = "0x4000B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static UnityAction<int> <>9__38_0;

		[Token(Token = "0x4000B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static UnityAction<int> <>9__38_1;

		[Token(Token = "0x60009D5")]
		[Address(RVA = "0xCC6070", Offset = "0xCC6070", VA = "0xCC6070")]
		public <>c()
		{
		}

		[Token(Token = "0x60009D6")]
		[Address(RVA = "0xCC6078", Offset = "0xCC6078", VA = "0xCC6078")]
		internal void <Awake>b__38_0(int value)
		{
		}

		[Token(Token = "0x60009D7")]
		[Address(RVA = "0xCC60F4", Offset = "0xCC60F4", VA = "0xCC60F4")]
		internal void <Awake>b__38_1(int value)
		{
		}
	}

	[Token(Token = "0x20001E6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7968E4", Offset = "0x7968E4")]
	private sealed class <delayedSetActive>d__46 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float duration;

		[Token(Token = "0x4000B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject gameObject;

		[Token(Token = "0x4000B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool isActive;

		[Token(Token = "0x170000DB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009DB")]
			[Address(RVA = "0xCC6258", Offset = "0xCC6258", VA = "0xCC6258", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009DD")]
			[Address(RVA = "0xCC62A0", Offset = "0xCC62A0", VA = "0xCC62A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009D8")]
		[Address(RVA = "0xCC6168", Offset = "0xCC6168", VA = "0xCC6168")]
		[DebuggerHidden]
		public <delayedSetActive>d__46(int <>1__state)
		{
		}

		[Token(Token = "0x60009D9")]
		[Address(RVA = "0xCC6194", Offset = "0xCC6194", VA = "0xCC6194", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009DA")]
		[Address(RVA = "0xCC6198", Offset = "0xCC6198", VA = "0xCC6198", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009DC")]
		[Address(RVA = "0xCC6260", Offset = "0xCC6260", VA = "0xCC6260", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static UIManager Instance;

	[Token(Token = "0x4000B29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject _SettingsMenu;

	[Token(Token = "0x4000B2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject _SettingsMenuFollowTransform;

	[Token(Token = "0x4000B2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEngine.UI.Slider powerSlider;

	[Token(Token = "0x4000B2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text powerTextValue;

	[Token(Token = "0x4000B2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEngine.UI.Slider wristPowerSlider;

	[Token(Token = "0x4000B2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text wristPowerTextValue;

	[Token(Token = "0x4000B2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEngine.UI.Slider gravitySlider;

	[Token(Token = "0x4000B30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text gravityTextValue;

	[Token(Token = "0x4000B31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UnityEngine.UI.Slider lightSlider;

	[Token(Token = "0x4000B32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Text lightTextValue;

	[Token(Token = "0x4000B33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public UnityEngine.UI.Slider dribblingRadiusSlider;

	[Token(Token = "0x4000B34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Text dribblingRadiusTextValue;

	[Token(Token = "0x4000B35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Toggle triggerGripCheckbox;

	[Token(Token = "0x4000B36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool isTriggerGrip;

	[Token(Token = "0x4000B37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public GrabButton grabButton;

	[Token(Token = "0x4000B38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public TMP_Dropdown rotationTypeSelector;

	[Token(Token = "0x4000B39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Toggle showSelfCheckbox;

	[Token(Token = "0x4000B3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public TextMeshProUGUI networkGameStateDebugText;

	[Token(Token = "0x4000B3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private StringBuilder sb2;

	[Token(Token = "0x4000B3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private StringBuilder sb;

	[Token(Token = "0x4000B3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private StringBuilder sbPL;

	[Token(Token = "0x4000B3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public TextMeshProUGUI multiplayerTextInput;

	[Token(Token = "0x4000B3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public RawImage multiplayerImage;

	[Token(Token = "0x4000B40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Toggle muteVoiceCheckbox;

	[Token(Token = "0x4000B41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public UnityEngine.UI.Slider voiceVolumeSlider;

	[Token(Token = "0x4000B42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public TextMeshProUGUI voiceVolumeText;

	[Token(Token = "0x4000B43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public TextMeshProUGUI playerList;

	[Token(Token = "0x4000B44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public TMP_Dropdown graphicsModeDropdown;

	[Token(Token = "0x4000B45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public TMP_Dropdown powerModeDropdown;

	[Token(Token = "0x4000B46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private TextAnimatorPlayer _announcementTextAnimator;

	[Token(Token = "0x4000B47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public TextMeshProUGUI playerStatsText;

	[Token(Token = "0x4000B48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public float High_Res;

	[Token(Token = "0x4000B49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public float Balanced_Res;

	[Token(Token = "0x4000B4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public float Low_Res;

	[Token(Token = "0x4000B4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private string[] scoreSayings;

	[Token(Token = "0x4000B4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private string[] effects;

	[Token(Token = "0x60009CA")]
	[Address(RVA = "0xAC35D8", Offset = "0xAC35D8", VA = "0xAC35D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009CB")]
	[Address(RVA = "0xAC3954", Offset = "0xAC3954", VA = "0xAC3954")]
	private void Start()
	{
	}

	[Token(Token = "0x60009CC")]
	[Address(RVA = "0xAC3A14", Offset = "0xAC3A14", VA = "0xAC3A14")]
	private void Update()
	{
	}

	[Token(Token = "0x60009CD")]
	[Address(RVA = "0xAC5310", Offset = "0xAC5310", VA = "0xAC5310")]
	public void startScoreTextAnimation(string playerName)
	{
	}

	[Token(Token = "0x60009CE")]
	[Address(RVA = "0xAC56F4", Offset = "0xAC56F4", VA = "0xAC56F4")]
	public void startWinnerAnimation(string playerName)
	{
	}

	[Token(Token = "0x60009CF")]
	[Address(RVA = "0xAC59DC", Offset = "0xAC59DC", VA = "0xAC59DC")]
	public void startTextDisplay(string text)
	{
	}

	[Token(Token = "0x60009D0")]
	[Address(RVA = "0xAC5658", Offset = "0xAC5658", VA = "0xAC5658")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7A9588", Offset = "0x7A9588")]
	public IEnumerator delayedSetActive(GameObject gameObject, bool isActive, float duration)
	{
		return null;
	}

	[Token(Token = "0x60009D1")]
	[Address(RVA = "0xAC5A58", Offset = "0xAC5A58", VA = "0xAC5A58")]
	public UIManager()
	{
	}

	[Token(Token = "0x60009D2")]
	[Address(RVA = "0xAC5E28", Offset = "0xAC5E28", VA = "0xAC5E28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A95E8", Offset = "0x7A95E8")]
	private void <Awake>b__38_2(int value)
	{
	}

	[Token(Token = "0x60009D3")]
	[Address(RVA = "0xAC60F4", Offset = "0xAC60F4", VA = "0xAC60F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A95F8", Offset = "0x7A95F8")]
	private void <Awake>b__38_3(float value)
	{
	}
}
[Token(Token = "0x20001E7")]
public class Util : MonoBehaviour
{
	[Token(Token = "0x60009DE")]
	[Address(RVA = "0xAC92A0", Offset = "0xAC92A0", VA = "0xAC92A0")]
	public static float horizDist(Vector3 a, Vector3 b)
	{
		return default(float);
	}

	[Token(Token = "0x60009DF")]
	[Address(RVA = "0xAC92CC", Offset = "0xAC92CC", VA = "0xAC92CC")]
	public static float hypotenuse(float a, float b)
	{
		return default(float);
	}

	[Token(Token = "0x60009E0")]
	[Address(RVA = "0xAC92F0", Offset = "0xAC92F0", VA = "0xAC92F0")]
	public Util()
	{
	}
}
namespace Sigtrap.VrTunnellingPro
{
	[Token(Token = "0x20001E8")]
	public class Tunnelling : TunnellingImageBase
	{
		[Token(Token = "0x170000DD")]
		protected override CameraEvent _maskCmdEvt
		{
			[Token(Token = "0x60009E1")]
			[Address(RVA = "0xE87A0C", Offset = "0xE87A0C", VA = "0xE87A0C", Slot = "9")]
			get
			{
				return default(CameraEvent);
			}
		}

		[Token(Token = "0x60009E2")]
		[Address(RVA = "0xE87A14", Offset = "0xE87A14", VA = "0xE87A14")]
		private void OnRenderImage(RenderTexture src, RenderTexture dest)
		{
		}

		[Token(Token = "0x60009E3")]
		[Address(RVA = "0xE87EFC", Offset = "0xE87EFC", VA = "0xE87EFC")]
		public Tunnelling()
		{
		}
	}
	[Token(Token = "0x20001E9")]
	public abstract class TunnellingBase : MonoBehaviour
	{
		[Token(Token = "0x20001EA")]
		public enum BackgroundMode
		{
			[Token(Token = "0x4000BBF")]
			COLOR,
			[Token(Token = "0x4000BC0")]
			SKYBOX,
			[Token(Token = "0x4000BC1")]
			CAGE_COLOR,
			[Token(Token = "0x4000BC2")]
			CAGE_SKYBOX,
			[Token(Token = "0x4000BC3")]
			CAGE_ONLY,
			[Token(Token = "0x4000BC4")]
			BLUR
		}

		[Token(Token = "0x20001EB")]
		public enum MaskMode
		{
			[Token(Token = "0x4000BC6")]
			OFF,
			[Token(Token = "0x4000BC7")]
			MASK,
			[Token(Token = "0x4000BC8")]
			WINDOW,
			[Token(Token = "0x4000BC9")]
			PORTAL
		}

		[Token(Token = "0x20001EC")]
		public enum MSAA
		{
			[Token(Token = "0x4000BCB")]
			AUTO,
			[Token(Token = "0x4000BCC")]
			OFF,
			[Token(Token = "0x4000BCD")]
			X2,
			[Token(Token = "0x4000BCE")]
			X4,
			[Token(Token = "0x4000BCF")]
			X8
		}

		[Token(Token = "0x4000B62")]
		public const string VRTP_VERSION = "1.2.1";

		[Token(Token = "0x4000B63")]
		public const int VRTP_VERSION_MAJOR = 1;

		[Token(Token = "0x4000B64")]
		public const int VRTP_VERSION_MINOR = 2;

		[Token(Token = "0x4000B65")]
		public const int VRTP_VERSION_PATCH = 1;

		[Token(Token = "0x4000B66")]
		public const string VRTP_VERSION_BETA = "";

		[Token(Token = "0x4000B67")]
		public const string GLOBAL_PROP_FOGCOLOR = "_VRTP_Cage_FogColor";

		[Token(Token = "0x4000B68")]
		public const string GLOBAL_PROP_FOGDENSITY = "_VRTP_Cage_FogDensity";

		[Token(Token = "0x4000B69")]
		public const string GLOBAL_PROP_FOGPOWER = "_VRTP_Cage_FogPower";

		[Token(Token = "0x4000B6A")]
		public const string GLOBAL_PROP_FOGBLEND = "_VRTP_Cage_FogBlend";

		[Token(Token = "0x4000B6B")]
		protected const string PATH_SHADERS = "Hidden/VrTunnellingPro/";

		[Token(Token = "0x4000B6C")]
		protected const string PATH_MESHES = "Meshes/";

		[Token(Token = "0x4000B6D")]
		protected const string PATH_IRISMESH = "Iris";

		[Token(Token = "0x4000B6E")]
		protected const string PROP_OUTER = "_FxOuter";

		[Token(Token = "0x4000B6F")]
		protected const string PROP_INNER = "_FxInner";

		[Token(Token = "0x4000B70")]
		protected const string PROP_COLOR = "_Color";

		[Token(Token = "0x4000B71")]
		protected const string PROP_SKYBOX = "_Skybox";

		[Token(Token = "0x4000B72")]
		protected const string PROP_EYEPRJ = "_EyeProjection";

		[Token(Token = "0x4000B73")]
		protected const string PROP_EYEMAT = "_EyeToWorld";

		[Token(Token = "0x4000B74")]
		protected const string KEYWORD_BKG = "TUNNEL_BKG";

		[Token(Token = "0x4000B75")]
		protected const string KEYWORD_SKYBOX = "TUNNEL_SKYBOX";

		[Token(Token = "0x4000B76")]
		protected const string KEYWORD_OVERLAY = "TUNNEL_OVERLAY";

		[Token(Token = "0x4000B77")]
		public const float FEATHER_MAX = 0.5f;

		[Token(Token = "0x4000B78")]
		public const float MOTION_STRENGTH_MAX = 2f;

		[Token(Token = "0x4000B79")]
		public const float COUNTER_STRENGTH_MAX = 2f;

		[Token(Token = "0x4000B7A")]
		public const int FPSDIV_MAX = 60;

		[Token(Token = "0x4000B7B")]
		private const float COVERAGE_MIN = 0.65f;

		[Token(Token = "0x4000B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected int _propFxInner;

		[Token(Token = "0x4000B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		protected int _propFxOuter;

		[Token(Token = "0x4000B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int _propEyeProjection;

		[Token(Token = "0x4000B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int _propEyeToWorld;

		[Token(Token = "0x4000B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected int _globPropFogColor;

		[Token(Token = "0x4000B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		protected int _globPropFogDensity;

		[Token(Token = "0x4000B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected int _globPropFogPower;

		[Token(Token = "0x4000B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		protected int _globPropFogBlend;

		[Token(Token = "0x4000B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Matrix4x4[] _eyeToWorld;

		[Token(Token = "0x4000B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Matrix4x4[] _eyeProjection;

		[Token(Token = "0x4000B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79BAF8", Offset = "0x79BAF8")]
		public Transform motionTarget;

		[Token(Token = "0x4000B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79BB30", Offset = "0x79BB30")]
		public Color effectColor;

		[Token(Token = "0x4000B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79BB68", Offset = "0x79BB68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79BB68", Offset = "0x79BB68")]
		public float effectCoverage;

		[Token(Token = "0x4000B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79BBBC", Offset = "0x79BBBC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79BBBC", Offset = "0x79BBBC")]
		public float effectFeather;

		[Token(Token = "0x4000B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Cubemap effectSkybox;

		[Token(Token = "0x4000B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool applyColorToBackground;

		[Token(Token = "0x4000B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79BC10", Offset = "0x79BC10")]
		public bool useAngularVelocity;

		[Token(Token = "0x4000B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79BC48", Offset = "0x79BC48")]
		public float angularVelocityStrength;

		[Token(Token = "0x4000B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float angularVelocityMin;

		[Token(Token = "0x4000B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float angularVelocityMax;

		[Token(Token = "0x4000B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float angularVelocitySmoothing;

		[Token(Token = "0x4000B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79BC60", Offset = "0x79BC60")]
		public bool useAcceleration;

		[Token(Token = "0x4000B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79BC98", Offset = "0x79BC98")]
		public float accelerationStrength;

		[Token(Token = "0x4000B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float accelerationMin;

		[Token(Token = "0x4000B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float accelerationMax;

		[Token(Token = "0x4000B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float accelerationSmoothing;

		[Token(Token = "0x4000B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79BCB0", Offset = "0x79BCB0")]
		public bool useVelocity;

		[Token(Token = "0x4000B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79BCE8", Offset = "0x79BCE8")]
		public float velocityStrength;

		[Token(Token = "0x4000B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float velocityMin;

		[Token(Token = "0x4000B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public float velocityMax;

		[Token(Token = "0x4000B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float velocitySmoothing;

		[Token(Token = "0x4000B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79BD00", Offset = "0x79BD00")]
		public Transform motionEffectTarget;

		[Token(Token = "0x4000B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79BD38", Offset = "0x79BD38")]
		public bool useCounterMotion;

		[Token(Token = "0x4000B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79BD70", Offset = "0x79BD70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79BD70", Offset = "0x79BD70")]
		public float counterRotationStrength;

		[Token(Token = "0x4000B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79BDC4", Offset = "0x79BDC4")]
		public Vector3 counterRotationPerAxis;

		[Token(Token = "0x4000B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79BDFC", Offset = "0x79BDFC")]
		public bool useArtificialTilt;

		[Token(Token = "0x4000BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79BE34", Offset = "0x79BE34")]
		public float tiltStrength;

		[Token(Token = "0x4000BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79BE6C", Offset = "0x79BE6C")]
		public Vector2 tiltMaxAngles;

		[Token(Token = "0x4000BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79BEA4", Offset = "0x79BEA4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79BEA4", Offset = "0x79BEA4")]
		public float tiltSmoothTime;

		[Token(Token = "0x4000BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79BEF8", Offset = "0x79BEF8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79BEF8", Offset = "0x79BEF8")]
		public int framerateDivision;

		[Token(Token = "0x4000BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public bool divideTranslation;

		[Token(Token = "0x4000BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE5")]
		public bool divideRotation;

		[Token(Token = "0x4000BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Quaternion _lastRot;

		[Token(Token = "0x4000BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Vector3 _lastFwd;

		[Token(Token = "0x4000BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private Vector3 _lastPos;

		[Token(Token = "0x4000BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private float _lastSpeed;

		[Token(Token = "0x4000BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private Vector3 _lastVel;

		[Token(Token = "0x4000BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		protected Quaternion _cmRot;

		[Token(Token = "0x4000BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private float _avSmoothed;

		[Token(Token = "0x4000BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		private float _avSlew;

		[Token(Token = "0x4000BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private float _speedSmoothed;

		[Token(Token = "0x4000BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private float _speedSlew;

		[Token(Token = "0x4000BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private float _accelSmoothed;

		[Token(Token = "0x4000BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private float _accelSlew;

		[Token(Token = "0x4000BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private Transform _prevMotionEffectTarget;

		[Token(Token = "0x4000BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private bool _prevUseTilt;

		[Token(Token = "0x4000BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		private Vector3 _tiltAccelSmoothed;

		[Token(Token = "0x4000BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private Vector3 _tiltAccelSlew;

		[Token(Token = "0x4000BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		private Angle3 _tiltInit;

		[Token(Token = "0x4000BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private int _lastFpsDivision;

		[Token(Token = "0x4000BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		private Vector3 _mfxTgtLocalPosInit;

		[Token(Token = "0x4000BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private Quaternion _mfxTgtLocalRotInit;

		[Token(Token = "0x4000BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		protected Camera _cam;

		[Token(Token = "0x4000BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		protected bool _hasDrawnThisFrame;

		[Token(Token = "0x4000BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		private Vector3 _fpsPosition;

		[Token(Token = "0x4000BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private Quaternion _fpsRotation;

		[Token(Token = "0x170000DE")]
		public bool usingMotionEffectTarget
		{
			[Token(Token = "0x60009E4")]
			[Address(RVA = "0xE880A8", Offset = "0xE880A8", VA = "0xE880A8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60009E5")]
		[Address(RVA = "0xE880C8", Offset = "0xE880C8", VA = "0xE880C8", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60009E6")]
		[Address(RVA = "0xE88248", Offset = "0xE88248", VA = "0xE88248", Slot = "5")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60009E7")]
		[Address(RVA = "0xE882B8", Offset = "0xE882B8", VA = "0xE882B8")]
		protected void ApplyPresetBase(TunnellingPresetBase p)
		{
		}

		[Token(Token = "0x60009E8")]
		[Address(RVA = "0xE886D8", Offset = "0xE886D8", VA = "0xE886D8")]
		protected void FillMaskBuffer(CommandBuffer cb, List<Renderer> rs, Material m)
		{
		}

		[Token(Token = "0x60009E9")]
		[Address(RVA = "0xE8824C", Offset = "0xE8824C", VA = "0xE8824C")]
		protected void ResetMotion()
		{
		}

		[Token(Token = "0x60009EA")]
		[Address(RVA = "0xE888A8", Offset = "0xE888A8", VA = "0xE888A8", Slot = "6")]
		public virtual void ResetCounterMotion()
		{
		}

		[Token(Token = "0x60009EB")]
		[Address(RVA = "0xE888F8", Offset = "0xE888F8", VA = "0xE888F8")]
		private float RemapRadius(float radius)
		{
			return default(float);
		}

		[Token(Token = "0x60009EC")]
		[Address(RVA = "0xE88918", Offset = "0xE88918", VA = "0xE88918")]
		protected float CalculateMotion(float dT)
		{
			return default(float);
		}

		[Token(Token = "0x60009ED")]
		[Address(RVA = "0xE89190", Offset = "0xE89190", VA = "0xE89190")]
		public static Vector3 SmoothDampAngle(Vector3 current, Vector3 target, ref Vector3 vel, float smoothTime, float maxSpeed, float dT)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60009EE")]
		[Address(RVA = "0xE89290", Offset = "0xE89290", VA = "0xE89290", Slot = "7")]
		protected virtual void UpdateCounterMotion(Vector3 deltaPos, Quaternion deltaRot)
		{
		}

		[Token(Token = "0x60009EF")]
		[Address(RVA = "0xE892F4", Offset = "0xE892F4", VA = "0xE892F4")]
		protected Quaternion GetCounterRotationDelta(Quaternion deltaRot)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60009F0")]
		[Address(RVA = "0xE89390", Offset = "0xE89390", VA = "0xE89390")]
		protected void UpdateEyeMatrices()
		{
		}

		[Token(Token = "0x60009F1")]
		[Address(RVA = "0xE898AC", Offset = "0xE898AC", VA = "0xE898AC", Slot = "8")]
		protected virtual void CorrectEyeMatrices(Matrix4x4[] eyePrj, Matrix4x4[] eyeToWorld)
		{
		}

		[Token(Token = "0x60009F2")]
		[Address(RVA = "0xE898B0", Offset = "0xE898B0", VA = "0xE898B0")]
		protected void ApplyEyeMatrices(Material m)
		{
		}

		[Token(Token = "0x60009F3")]
		[Address(RVA = "0xE898FC", Offset = "0xE898FC", VA = "0xE898FC")]
		protected TunnellingBase()
		{
		}
	}
	[Token(Token = "0x20001ED")]
	public struct Angle
	{
		[Token(Token = "0x20001EE")]
		public enum AngleType
		{
			[Token(Token = "0x4000BD2")]
			ANGLE,
			[Token(Token = "0x4000BD3")]
			ACUTE,
			[Token(Token = "0x4000BD4")]
			REFLEX
		}

		[Token(Token = "0x4000BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float _angle;

		[Token(Token = "0x170000DF")]
		public float angle
		{
			[Token(Token = "0x60009F4")]
			[Address(RVA = "0xAE4574", Offset = "0xAE4574", VA = "0xAE4574")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000E0")]
		public float acute
		{
			[Token(Token = "0x60009F5")]
			[Address(RVA = "0xAE457C", Offset = "0xAE457C", VA = "0xAE457C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000E1")]
		public float reflex
		{
			[Token(Token = "0x60009F6")]
			[Address(RVA = "0xAE4634", Offset = "0xAE4634", VA = "0xAE4634")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60009F7")]
		[Address(RVA = "0xAE4674", Offset = "0xAE4674", VA = "0xAE4674")]
		public Angle(float a)
		{
		}

		[Token(Token = "0x60009F8")]
		[Address(RVA = "0xAE46A4", Offset = "0xAE46A4", VA = "0xAE46A4")]
		public Angle(Angle a)
		{
		}

		[Token(Token = "0x60009F9")]
		[Address(RVA = "0xAE46D4", Offset = "0xAE46D4", VA = "0xAE46D4")]
		public float ToFloat(AngleType type)
		{
			return default(float);
		}

		[Token(Token = "0x60009FA")]
		[Address(RVA = "0xAE45BC", Offset = "0xAE45BC", VA = "0xAE45BC")]
		public static float ToAngle(float a, AngleType type)
		{
			return default(float);
		}

		[Token(Token = "0x60009FB")]
		[Address(RVA = "0xAE46E0", Offset = "0xAE46E0", VA = "0xAE46E0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60009FC")]
		[Address(RVA = "0xAE4768", Offset = "0xAE4768", VA = "0xAE4768")]
		public static bool operator <(Angle a, Angle b)
		{
			return default(bool);
		}

		[Token(Token = "0x60009FD")]
		[Address(RVA = "0xAE4774", Offset = "0xAE4774", VA = "0xAE4774")]
		public static bool operator >(Angle a, Angle b)
		{
			return default(bool);
		}

		[Token(Token = "0x60009FE")]
		[Address(RVA = "0xAE4780", Offset = "0xAE4780", VA = "0xAE4780")]
		public static bool operator <=(Angle a, Angle b)
		{
			return default(bool);
		}

		[Token(Token = "0x60009FF")]
		[Address(RVA = "0xAE478C", Offset = "0xAE478C", VA = "0xAE478C")]
		public static bool operator >=(Angle a, Angle b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A00")]
		[Address(RVA = "0xAE4798", Offset = "0xAE4798", VA = "0xAE4798")]
		public static Angle operator +(Angle a, Angle b)
		{
			return default(Angle);
		}

		[Token(Token = "0x6000A01")]
		[Address(RVA = "0xAE47B0", Offset = "0xAE47B0", VA = "0xAE47B0")]
		public static Angle operator -(Angle a, Angle b)
		{
			return default(Angle);
		}

		[Token(Token = "0x6000A02")]
		[Address(RVA = "0xAE47C8", Offset = "0xAE47C8", VA = "0xAE47C8")]
		public static bool operator ==(Angle a, Angle b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A03")]
		[Address(RVA = "0xAE47D4", Offset = "0xAE47D4", VA = "0xAE47D4")]
		public static bool operator !=(Angle a, Angle b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A04")]
		[Address(RVA = "0xAE47E0", Offset = "0xAE47E0", VA = "0xAE47E0", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A05")]
		[Address(RVA = "0xAE48A4", Offset = "0xAE48A4", VA = "0xAE48A4", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000A06")]
		[Address(RVA = "0xAE48AC", Offset = "0xAE48AC", VA = "0xAE48AC")]
		public static bool operator <(Angle a, float b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A07")]
		[Address(RVA = "0xAE48E8", Offset = "0xAE48E8", VA = "0xAE48E8")]
		public static bool operator >(Angle a, float b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A08")]
		[Address(RVA = "0xAE4924", Offset = "0xAE4924", VA = "0xAE4924")]
		public static bool operator <=(Angle a, float b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A09")]
		[Address(RVA = "0xAE4960", Offset = "0xAE4960", VA = "0xAE4960")]
		public static bool operator >=(Angle a, float b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A0A")]
		[Address(RVA = "0xAE499C", Offset = "0xAE499C", VA = "0xAE499C")]
		public static Angle operator +(Angle a, float b)
		{
			return default(Angle);
		}

		[Token(Token = "0x6000A0B")]
		[Address(RVA = "0xAE49DC", Offset = "0xAE49DC", VA = "0xAE49DC")]
		public static Angle operator -(Angle a, float b)
		{
			return default(Angle);
		}

		[Token(Token = "0x6000A0C")]
		[Address(RVA = "0xAE4A1C", Offset = "0xAE4A1C", VA = "0xAE4A1C")]
		public static Angle operator *(Angle a, float b)
		{
			return default(Angle);
		}

		[Token(Token = "0x6000A0D")]
		[Address(RVA = "0xAE4A34", Offset = "0xAE4A34", VA = "0xAE4A34")]
		public static Angle operator /(Angle a, float b)
		{
			return default(Angle);
		}

		[Token(Token = "0x6000A0E")]
		[Address(RVA = "0xAE4A4C", Offset = "0xAE4A4C", VA = "0xAE4A4C")]
		public static bool operator <(float a, Angle b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A0F")]
		[Address(RVA = "0xAE4A70", Offset = "0xAE4A70", VA = "0xAE4A70")]
		public static bool operator >(float a, Angle b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A10")]
		[Address(RVA = "0xAE4A94", Offset = "0xAE4A94", VA = "0xAE4A94")]
		public static bool operator <=(float a, Angle b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A11")]
		[Address(RVA = "0xAE4AB8", Offset = "0xAE4AB8", VA = "0xAE4AB8")]
		public static bool operator >=(float a, Angle b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A12")]
		[Address(RVA = "0xAE4ADC", Offset = "0xAE4ADC", VA = "0xAE4ADC")]
		public static Angle operator +(float a, Angle b)
		{
			return default(Angle);
		}

		[Token(Token = "0x6000A13")]
		[Address(RVA = "0xAE4B18", Offset = "0xAE4B18", VA = "0xAE4B18")]
		public static Angle operator -(float a, Angle b)
		{
			return default(Angle);
		}

		[Token(Token = "0x6000A14")]
		[Address(RVA = "0xAE4B54", Offset = "0xAE4B54", VA = "0xAE4B54")]
		public static implicit operator Angle(float f)
		{
			return default(Angle);
		}
	}
	[Token(Token = "0x20001EF")]
	public struct Angle3
	{
		[Token(Token = "0x4000BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Angle x;

		[Token(Token = "0x4000BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Angle y;

		[Token(Token = "0x4000BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Angle z;

		[Token(Token = "0x170000E2")]
		public Vector3 eulerAngles
		{
			[Token(Token = "0x6000A15")]
			[Address(RVA = "0xAE4B64", Offset = "0xAE4B64", VA = "0xAE4B64")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170000E3")]
		public Vector3 eulerAcute
		{
			[Token(Token = "0x6000A16")]
			[Address(RVA = "0xAE4B70", Offset = "0xAE4B70", VA = "0xAE4B70")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170000E4")]
		public Vector3 eulerReflex
		{
			[Token(Token = "0x6000A17")]
			[Address(RVA = "0xAE4C20", Offset = "0xAE4C20", VA = "0xAE4C20")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170000E5")]
		public Angle angle
		{
			[Token(Token = "0x6000A18")]
			[Address(RVA = "0xAE4CD0", Offset = "0xAE4CD0", VA = "0xAE4CD0")]
			get
			{
				return default(Angle);
			}
		}

		[Token(Token = "0x170000E6")]
		public Vector3 axis
		{
			[Token(Token = "0x6000A19")]
			[Address(RVA = "0xAE4D78", Offset = "0xAE4D78", VA = "0xAE4D78")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000A1A")]
		[Address(RVA = "0xAE4DB0", Offset = "0xAE4DB0", VA = "0xAE4DB0")]
		public Angle3(float x, float y, float z)
		{
		}

		[Token(Token = "0x6000A1B")]
		[Address(RVA = "0xAE4E24", Offset = "0xAE4E24", VA = "0xAE4E24")]
		public Angle3(Angle x, Angle y, Angle z)
		{
		}

		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0xAE4E28", Offset = "0xAE4E28", VA = "0xAE4E28")]
		public Angle3(Vector3 euler)
		{
		}

		[Token(Token = "0x6000A1D")]
		[Address(RVA = "0xAE4E2C", Offset = "0xAE4E2C", VA = "0xAE4E2C")]
		public Angle3(Quaternion rotation)
		{
		}

		[Token(Token = "0x6000A1E")]
		[Address(RVA = "0xAE4D04", Offset = "0xAE4D04", VA = "0xAE4D04")]
		public void ToAxisAngle(out Vector3 axis, out Angle angle)
		{
		}

		[Token(Token = "0x6000A1F")]
		[Address(RVA = "0xAE4E6C", Offset = "0xAE4E6C", VA = "0xAE4E6C")]
		public Vector3 ToEuler(Angle.AngleType type)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A20")]
		[Address(RVA = "0xAE4ED4", Offset = "0xAE4ED4", VA = "0xAE4ED4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000A21")]
		[Address(RVA = "0xAE4F9C", Offset = "0xAE4F9C", VA = "0xAE4F9C")]
		public static Angle3 operator +(Angle3 a, Angle3 b)
		{
			return default(Angle3);
		}

		[Token(Token = "0x6000A22")]
		[Address(RVA = "0xAE5040", Offset = "0xAE5040", VA = "0xAE5040")]
		public static Angle3 operator -(Angle3 a, Angle3 b)
		{
			return default(Angle3);
		}

		[Token(Token = "0x6000A23")]
		[Address(RVA = "0xAE50E4", Offset = "0xAE50E4", VA = "0xAE50E4")]
		public static Angle3 operator *(Angle3 a, float b)
		{
			return default(Angle3);
		}

		[Token(Token = "0x6000A24")]
		[Address(RVA = "0xAE5184", Offset = "0xAE5184", VA = "0xAE5184")]
		public static bool operator ==(Angle3 a, Angle3 b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A25")]
		[Address(RVA = "0xAE51A8", Offset = "0xAE51A8", VA = "0xAE51A8")]
		public static bool operator !=(Angle3 a, Angle3 b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A26")]
		[Address(RVA = "0xAE51CC", Offset = "0xAE51CC", VA = "0xAE51CC", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A27")]
		[Address(RVA = "0xAE52BC", Offset = "0xAE52BC", VA = "0xAE52BC", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000A28")]
		[Address(RVA = "0xAE52F0", Offset = "0xAE52F0", VA = "0xAE52F0")]
		public static implicit operator Angle3(Vector3 v)
		{
			return default(Angle3);
		}
	}
	[Token(Token = "0x20001F0")]
	public abstract class TunnellingImageBase : TunnellingBase
	{
		[Token(Token = "0x20001F1")]
		public enum BlurKernel
		{
			[Token(Token = "0x4000C33")]
			FIVE,
			[Token(Token = "0x4000C34")]
			NINE,
			[Token(Token = "0x4000C35")]
			THIRTEEN
		}

		[Token(Token = "0x20001F2")]
		public enum CounterVelocityMode
		{
			[Token(Token = "0x4000C37")]
			OFF,
			[Token(Token = "0x4000C38")]
			SHADER,
			[Token(Token = "0x4000C39")]
			REAL
		}

		[Token(Token = "0x4000BD8")]
		private const string KEYWORD_MASK = "TUNNEL_MASK";

		[Token(Token = "0x4000BD9")]
		private const string KEYWORD_CONSTANT = "TUNNEL_CONSTANT";

		[Token(Token = "0x4000BDA")]
		private const string KEYWORD_INVERT = "TUNNEL_INVERT_MASK";

		[Token(Token = "0x4000BDB")]
		private const string KEYWORD_BLUR = "TUNNEL_BLUR";

		[Token(Token = "0x4000BDC")]
		private const string PATH_TUNNELSHADER = "Tunnelling";

		[Token(Token = "0x4000BDD")]
		private const string PATH_MASKSHADER = "Mask";

		[Token(Token = "0x4000BDE")]
		private const string PATH_WINDOWSHADER = "Window";

		[Token(Token = "0x4000BDF")]
		private const string PATH_COPYSHADER = "BlitA";

		[Token(Token = "0x4000BE0")]
		private const string PATH_BLURSHADER = "SeparableBlur";

		[Token(Token = "0x4000BE1")]
		private const string PATH_IRISSHADER = "TunnellingVertexZ";

		[Token(Token = "0x4000BE2")]
		private const string PATH_SKYSPHERESHADER = "Skysphere";

		[Token(Token = "0x4000BE3")]
		private const string PATH_SKYSPHEREMESH = "Skysphere";

		[Token(Token = "0x4000BE4")]
		private const string PROP_FEATHER = "_Feather";

		[Token(Token = "0x4000BE5")]
		private const string PROP_BKGRT = "_BkgTex";

		[Token(Token = "0x4000BE6")]
		private const string PROP_MASKRT = "_MaskTex";

		[Token(Token = "0x4000BE7")]
		private const string PROP_BLUR = "_Blur";

		[Token(Token = "0x4000BE8")]
		private const string PROP_OVERLAY = "_Overlay";

		[Token(Token = "0x4000BE9")]
		private const string PROP_BLUR_OFFSETS = "_Offsets";

		[Token(Token = "0x4000BEA")]
		private const float BLUR_OFFSET_1 = 1.3333334f;

		[Token(Token = "0x4000BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly float[] BLUR_OFFSETS_9;

		[Token(Token = "0x4000BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly float[] BLUR_OFFSETS_13;

		[Token(Token = "0x4000BED")]
		public const string GLOBAL_PROP_WORLD2CAGE = "_VRTP_WorldToCage";

		[Token(Token = "0x4000BEE")]
		public const string GLOBAL_PROP_WORLD2CAGE_NORMAL = "_VRTP_WorldToCageNormal";

		[Token(Token = "0x4000BEF")]
		public const string GLOBAL_PROP_CAGEPOS = "_VRTP_CagePos";

		[Token(Token = "0x4000BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x79BF50", Offset = "0x79BF50")]
		private static TunnellingImageBase <instance>k__BackingField;

		[Token(Token = "0x4000BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79BF60", Offset = "0x79BF60")]
		public BackgroundMode backgroundMode;

		[Token(Token = "0x4000BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79BF98", Offset = "0x79BF98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79BF98", Offset = "0x79BF98")]
		public float effectOverlay;

		[Token(Token = "0x4000BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79BFEC", Offset = "0x79BFEC")]
		private GameObject _cageParent;

		[Token(Token = "0x4000BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79C038", Offset = "0x79C038")]
		public int cageDownsample;

		[Token(Token = "0x4000BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		public MSAA cageAntiAliasing;

		[Token(Token = "0x4000BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		public bool cageUpdateEveryFrame;

		[Token(Token = "0x4000BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79C050", Offset = "0x79C050")]
		public float cageFogDensity;

		[Token(Token = "0x4000BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79C070", Offset = "0x79C070")]
		public float cageFogPower;

		[Token(Token = "0x4000BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79C088", Offset = "0x79C088")]
		public float cageFogBlend;

		[Token(Token = "0x4000BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		public MaskMode maskMode;

		[Token(Token = "0x4000BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79C0A0", Offset = "0x79C0A0")]
		public int blurDownsample;

		[Token(Token = "0x4000BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79C0B8", Offset = "0x79C0B8")]
		public float blurDistance;

		[Token(Token = "0x4000BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79C0D0", Offset = "0x79C0D0")]
		public int blurPasses;

		[Token(Token = "0x4000BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		public BlurKernel blurSamples;

		[Token(Token = "0x4000BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79C0E8", Offset = "0x79C0E8")]
		public bool irisZRejection;

		[Token(Token = "0x4000C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		public CounterVelocityMode counterVelocityMode;

		[Token(Token = "0x4000C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79C120", Offset = "0x79C120")]
		public float counterVelocityResetDistance;

		[Token(Token = "0x4000C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79C158", Offset = "0x79C158")]
		public float counterVelocityResetTime;

		[Token(Token = "0x4000C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79C190", Offset = "0x79C190")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79C190", Offset = "0x79C190")]
		public float counterVelocityStrength;

		[Token(Token = "0x4000C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79C1E4", Offset = "0x79C1E4")]
		public Vector3 counterVelocityPerAxis;

		[Token(Token = "0x4000C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private CommandBuffer _maskCmd;

		[Token(Token = "0x4000C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private Material _matTunnel;

		[Token(Token = "0x4000C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private Material _matMask;

		[Token(Token = "0x4000C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		private Material _matWindow;

		[Token(Token = "0x4000C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		private Material _matCopyAlpha;

		[Token(Token = "0x4000C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		private Material _matBlur;

		[Token(Token = "0x4000C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		private Material _matSkysphere;

		[Token(Token = "0x4000C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		private Mesh _meshSkysphere;

		[Token(Token = "0x4000C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		private MeshRenderer[] _cageMrs;

		[Token(Token = "0x4000C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		private List<MeshFilter> _cageMfs;

		[Token(Token = "0x4000C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		private List<Renderer> _maskObjects;

		[Token(Token = "0x4000C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		private RenderTexture _cageRt;

		[Token(Token = "0x4000C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		private RenderTexture _maskRt;

		[Token(Token = "0x4000C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		private RenderTexture _blurRt0;

		[Token(Token = "0x4000C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		private RenderTexture _blurRt1;

		[Token(Token = "0x4000C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		private int _rtX;

		[Token(Token = "0x4000C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
		private int _rtY;

		[Token(Token = "0x4000C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		private int _rtA;

		[Token(Token = "0x4000C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		private CommandBuffer _irisCmd;

		[Token(Token = "0x4000C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		private Material _matIris;

		[Token(Token = "0x4000C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		private Mesh _meshIris;

		[Token(Token = "0x4000C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		private Vector4[] _blurOffsets;

		[Token(Token = "0x4000C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		private MaskMode _lastMaskMode;

		[Token(Token = "0x4000C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2CC")]
		private MSAA _lastCageMsaa;

		[Token(Token = "0x4000C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		private bool _camHasMaskBuffer;

		[Token(Token = "0x4000C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D4")]
		private int _lastCageDownsample;

		[Token(Token = "0x4000C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		private int _lastBlurDownsample;

		[Token(Token = "0x4000C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2DC")]
		private float _lastBlurRadius;

		[Token(Token = "0x4000C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		private BlurKernel _lastBlurKernel;

		[Token(Token = "0x4000C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E4")]
		private bool _wasDrawingIrisEarly;

		[Token(Token = "0x4000C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E5")]
		private bool _camHasIrisBuffer;

		[Token(Token = "0x4000C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		private CounterVelocityMode _lastCvMode;

		[Token(Token = "0x4000C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2EC")]
		private Vector3 _cmPos;

		[Token(Token = "0x4000C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
		private Vector3 _cageInitialPosLocal;

		[Token(Token = "0x4000C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x304")]
		private float _timeToResetCounterVelocity;

		[Token(Token = "0x4000C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		private int _propColor;

		[Token(Token = "0x4000C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30C")]
		private int _propBkgRt;

		[Token(Token = "0x4000C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		private int _propMaskRt;

		[Token(Token = "0x4000C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x314")]
		private int _propSkybox;

		[Token(Token = "0x4000C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		private int _propOverlay;

		[Token(Token = "0x4000C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31C")]
		private int _propBlur;

		[Token(Token = "0x4000C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		private int _propBlurOffsets;

		[Token(Token = "0x4000C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x324")]
		private int _globPropWorld2Cage;

		[Token(Token = "0x4000C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
		private int _globPropWorld2CageNormal;

		[Token(Token = "0x4000C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32C")]
		private int _globPropCagePos;

		[Token(Token = "0x170000E7")]
		public static TunnellingImageBase instance
		{
			[Token(Token = "0x6000A29")]
			[Address(RVA = "0xE89A0C", Offset = "0xE89A0C", VA = "0xE89A0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A9658", Offset = "0x7A9658")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A2A")]
			[Address(RVA = "0xE89A70", Offset = "0xE89A70", VA = "0xE89A70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A9668", Offset = "0x7A9668")]
			private set
			{
			}
		}

		[Token(Token = "0x170000E8")]
		public bool usingMask
		{
			[Token(Token = "0x6000A2B")]
			[Address(RVA = "0xE89ADC", Offset = "0xE89ADC", VA = "0xE89ADC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000E9")]
		public bool usingCage
		{
			[Token(Token = "0x6000A2C")]
			[Address(RVA = "0xE89AEC", Offset = "0xE89AEC", VA = "0xE89AEC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000EA")]
		private bool _usingCageRt
		{
			[Token(Token = "0x6000A2D")]
			[Address(RVA = "0xE89B10", Offset = "0xE89B10", VA = "0xE89B10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000EB")]
		private bool _canDrawIris
		{
			[Token(Token = "0x6000A2E")]
			[Address(RVA = "0xE89B24", Offset = "0xE89B24", VA = "0xE89B24")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000EC")]
		private bool _drawIris
		{
			[Token(Token = "0x6000A2F")]
			[Address(RVA = "0xE89B58", Offset = "0xE89B58", VA = "0xE89B58")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000ED")]
		protected abstract CameraEvent _maskCmdEvt
		{
			[Token(Token = "0x6000A30")]
			get;
		}

		[Token(Token = "0x6000A31")]
		[Address(RVA = "0xE89B94", Offset = "0xE89B94", VA = "0xE89B94", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000A32")]
		[Address(RVA = "0xE8A578", Offset = "0xE8A578", VA = "0xE8A578", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000A33")]
		[Address(RVA = "0xE8A944", Offset = "0xE8A944", VA = "0xE8A944")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000A34")]
		[Address(RVA = "0xE8A9C8", Offset = "0xE8A9C8", VA = "0xE8A9C8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000A35")]
		[Address(RVA = "0xE8ABE8", Offset = "0xE8ABE8", VA = "0xE8ABE8")]
		private void ReleaseRT(ref RenderTexture rt)
		{
		}

		[Token(Token = "0x6000A36")]
		[Address(RVA = "0xE8AC88", Offset = "0xE8AC88", VA = "0xE8AC88")]
		public void AddObjectToMask(Renderer r, bool includeChildren = false)
		{
		}

		[Token(Token = "0x6000A37")]
		[Address(RVA = "0xE8AF6C", Offset = "0xE8AF6C", VA = "0xE8AF6C")]
		public void RemoveObjectFromMask(Renderer r, bool includeChildren = false)
		{
		}

		[Token(Token = "0x6000A38")]
		[Address(RVA = "0xE8A608", Offset = "0xE8A608", VA = "0xE8A608")]
		public void UpdateCage()
		{
		}

		[Token(Token = "0x6000A39")]
		[Address(RVA = "0xE8B064", Offset = "0xE8B064", VA = "0xE8B064", Slot = "6")]
		public override void ResetCounterMotion()
		{
		}

		[Token(Token = "0x6000A3A")]
		[Address(RVA = "0xE8B128", Offset = "0xE8B128", VA = "0xE8B128")]
		public void ApplyPreset(TunnellingPreset p)
		{
		}

		[Token(Token = "0x6000A3B")]
		[Address(RVA = "0xE8B55C", Offset = "0xE8B55C", VA = "0xE8B55C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000A3C")]
		[Address(RVA = "0xE8BBA4", Offset = "0xE8BBA4", VA = "0xE8BBA4")]
		private void OnPreRender()
		{
		}

		[Token(Token = "0x6000A3D")]
		[Address(RVA = "0xE87A18", Offset = "0xE87A18", VA = "0xE87A18")]
		protected void Draw(RenderTexture src, RenderTexture dest)
		{
		}

		[Token(Token = "0x6000A3E")]
		[Address(RVA = "0xE8C3A4", Offset = "0xE8C3A4", VA = "0xE8C3A4", Slot = "8")]
		protected override void CorrectEyeMatrices(Matrix4x4[] eyePrj, Matrix4x4[] eyeToWorld)
		{
		}

		[Token(Token = "0x6000A3F")]
		[Address(RVA = "0xE8C424", Offset = "0xE8C424", VA = "0xE8C424", Slot = "7")]
		protected override void UpdateCounterMotion(Vector3 deltaPos, Quaternion deltaRot)
		{
		}

		[Token(Token = "0x6000A40")]
		[Address(RVA = "0xE8A2A0", Offset = "0xE8A2A0", VA = "0xE8A2A0")]
		private void UpdateKeywords()
		{
		}

		[Token(Token = "0x6000A41")]
		[Address(RVA = "0xE8B8B8", Offset = "0xE8B8B8", VA = "0xE8B8B8")]
		private void UpdateBlurKernel()
		{
		}

		[Token(Token = "0x6000A42")]
		[Address(RVA = "0xE8C5EC", Offset = "0xE8C5EC", VA = "0xE8C5EC")]
		private int GetMsaa(MSAA m, int srcMsaa)
		{
			return default(int);
		}

		[Token(Token = "0x6000A43")]
		[Address(RVA = "0xE8BD44", Offset = "0xE8BD44", VA = "0xE8BD44")]
		private void UpdateRenderTextures(int srcX, int srcY, int srcMsaa)
		{
		}

		[Token(Token = "0x6000A44")]
		[Address(RVA = "0xE8AD80", Offset = "0xE8AD80", VA = "0xE8AD80")]
		private void ResetMaskCommandBuffer()
		{
		}

		[Token(Token = "0x6000A45")]
		[Address(RVA = "0xE8A87C", Offset = "0xE8A87C", VA = "0xE8A87C")]
		private void ToggleMaskCommandBuffer(bool on)
		{
		}

		[Token(Token = "0x6000A46")]
		[Address(RVA = "0xE8A8EC", Offset = "0xE8A8EC", VA = "0xE8A8EC")]
		private void ToggleIrisCommandBuffer(bool on)
		{
		}

		[Token(Token = "0x6000A47")]
		[Address(RVA = "0xE87F5C", Offset = "0xE87F5C", VA = "0xE87F5C")]
		protected TunnellingImageBase()
		{
		}
	}
	[Token(Token = "0x20001F3")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7968F4", Offset = "0x7968F4")]
	public class TunnellingMaskObject : MonoBehaviour
	{
		[Token(Token = "0x4000C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool autoAddChildren;

		[Token(Token = "0x4000C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Renderer _r;

		[Token(Token = "0x4000C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _started;

		[Token(Token = "0x6000A49")]
		[Address(RVA = "0xE8C700", Offset = "0xE8C700", VA = "0xE8C700")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A4A")]
		[Address(RVA = "0xE8C75C", Offset = "0xE8C75C", VA = "0xE8C75C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A4B")]
		[Address(RVA = "0xE8C768", Offset = "0xE8C768", VA = "0xE8C768")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A4C")]
		[Address(RVA = "0xE8C928", Offset = "0xE8C928", VA = "0xE8C928")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000A4D")]
		[Address(RVA = "0xE8CAD0", Offset = "0xE8CAD0", VA = "0xE8CAD0")]
		public TunnellingMaskObject()
		{
		}
	}
	[Token(Token = "0x20001F4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x796954", Offset = "0x796954")]
	public class TunnellingMaskObjectMobile : MonoBehaviour
	{
		[Token(Token = "0x4000C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool autoAddChildren;

		[Token(Token = "0x4000C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Renderer _r;

		[Token(Token = "0x4000C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _started;

		[Token(Token = "0x6000A4E")]
		[Address(RVA = "0xE8CAD8", Offset = "0xE8CAD8", VA = "0xE8CAD8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A4F")]
		[Address(RVA = "0xE8CB34", Offset = "0xE8CB34", VA = "0xE8CB34")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A50")]
		[Address(RVA = "0xE8CB40", Offset = "0xE8CB40", VA = "0xE8CB40")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A51")]
		[Address(RVA = "0xE8D0CC", Offset = "0xE8D0CC", VA = "0xE8D0CC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000A52")]
		[Address(RVA = "0xE8D3B4", Offset = "0xE8D3B4", VA = "0xE8D3B4")]
		public TunnellingMaskObjectMobile()
		{
		}
	}
	[Token(Token = "0x20001F5")]
	public class TunnellingMobile : TunnellingBase
	{
		[Token(Token = "0x4000C40")]
		public const string GLOBAL_PROP_STENCILREF = "_VRTP_Stencil_Ref";

		[Token(Token = "0x4000C41")]
		public const string GLOBAL_PROP_STENCILMASK = "_VRTP_Stencil_Mask";

		[Token(Token = "0x4000C42")]
		public const string GLOBAL_PROP_STENCILBIAS = "_VRTP_Stencil_Bias";

		[Token(Token = "0x4000C43")]
		private const string PROP_WRITEZ = "_WriteZ";

		[Token(Token = "0x4000C44")]
		private const string PATH_SHADER = "TunnellingVertex";

		[Token(Token = "0x4000C45")]
		private const string PATH_STENCILSHADER = "TunnellingMobileStencil";

		[Token(Token = "0x4000C46")]
		private const CameraEvent CEVENT_FX = CameraEvent.BeforeImageEffects;

		[Token(Token = "0x4000C47")]
		private const CameraEvent CEVENT_Z = CameraEvent.BeforeForwardOpaque;

		[Token(Token = "0x4000C48")]
		private const int RQUEUE_FIRST = 1;

		[Token(Token = "0x4000C49")]
		private const int RQUEUE_MASK = 2499;

		[Token(Token = "0x4000C4A")]
		private const int RQUEUE_OPAQUE = 2501;

		[Token(Token = "0x4000C4B")]
		private const int RQUEUE_LAST = 5000;

		[Token(Token = "0x4000C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x79C21C", Offset = "0x79C21C")]
		private static TunnellingMobile <instance>k__BackingField;

		[Token(Token = "0x4000C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Material _stencilMat;

		[Token(Token = "0x4000C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79C22C", Offset = "0x79C22C")]
		public bool drawSkybox;

		[Token(Token = "0x4000C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C1")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79C264", Offset = "0x79C264")]
		public bool useMask;

		[Token(Token = "0x4000C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C2")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79C29C", Offset = "0x79C29C")]
		public bool drawBeforeTransparent;

		[Token(Token = "0x4000C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79C2D4", Offset = "0x79C2D4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79C2D4", Offset = "0x79C2D4")]
		public int stencilReference;

		[Token(Token = "0x4000C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79C32C", Offset = "0x79C32C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79C32C", Offset = "0x79C32C")]
		public int stencilMask;

		[Token(Token = "0x4000C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79C384", Offset = "0x79C384")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79C384", Offset = "0x79C384")]
		public float stencilBias;

		[Token(Token = "0x4000C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private int _propColor;

		[Token(Token = "0x4000C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		private int _propSkybox;

		[Token(Token = "0x4000C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private int _propWriteZ;

		[Token(Token = "0x4000C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		private int _globPropStencilRef;

		[Token(Token = "0x4000C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private int _globPropStencilMask;

		[Token(Token = "0x4000C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		private int _globPropStencilBias;

		[Token(Token = "0x4000C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private Material _irisMatOuter;

		[Token(Token = "0x4000C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private Material _irisMatInner;

		[Token(Token = "0x4000C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private Mesh _irisMesh;

		[Token(Token = "0x4000C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private Dictionary<Renderer, MeshFilter> _maskObjects;

		[Token(Token = "0x4000C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private Stack<Mesh> _skinnedMeshPool;

		[Token(Token = "0x4000C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private Stack<Mesh> _skinnedMeshesRendering;

		[Token(Token = "0x4000C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private List<UnityEngine.Object> _toDestroy;

		[Token(Token = "0x4000C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private List<MeshRenderer> _tempMeshChildren;

		[Token(Token = "0x4000C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private List<SkinnedMeshRenderer> _tempSkinnedMeshChildren;

		[Token(Token = "0x170000EE")]
		public static TunnellingMobile instance
		{
			[Token(Token = "0x6000A53")]
			[Address(RVA = "0xE8D3BC", Offset = "0xE8D3BC", VA = "0xE8D3BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A9678", Offset = "0x7A9678")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A54")]
			[Address(RVA = "0xE8D408", Offset = "0xE8D408", VA = "0xE8D408")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A9688", Offset = "0x7A9688")]
			private set
			{
			}
		}

		[Token(Token = "0x170000EF")]
		public static Material stencilMat
		{
			[Token(Token = "0x6000A55")]
			[Address(RVA = "0xE8D45C", Offset = "0xE8D45C", VA = "0xE8D45C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F0")]
		public bool irisZRejectionEnabled
		{
			[Token(Token = "0x6000A56")]
			[Address(RVA = "0xE8D564", Offset = "0xE8D564", VA = "0xE8D564")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000A57")]
		[Address(RVA = "0xE8D584", Offset = "0xE8D584", VA = "0xE8D584")]
		public void ApplyPreset(TunnellingPresetMobile p)
		{
		}

		[Token(Token = "0x6000A58")]
		[Address(RVA = "0xE8CC90", Offset = "0xE8CC90", VA = "0xE8CC90")]
		public void AddObjectToMask(Renderer r, bool includeChildren = false)
		{
		}

		[Token(Token = "0x6000A59")]
		[Address(RVA = "0xE8D204", Offset = "0xE8D204", VA = "0xE8D204")]
		public void RemoveObjectFromMask(Renderer r, bool includeChildren = false)
		{
		}

		[Token(Token = "0x6000A5A")]
		[Address(RVA = "0xE8D63C", Offset = "0xE8D63C", VA = "0xE8D63C", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000A5B")]
		[Address(RVA = "0xE8DA04", Offset = "0xE8DA04", VA = "0xE8DA04")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000A5C")]
		[Address(RVA = "0xE8DE04", Offset = "0xE8DE04", VA = "0xE8DE04")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000A5D")]
		[Address(RVA = "0xE8E58C", Offset = "0xE8E58C", VA = "0xE8E58C")]
		private void DrawIris(Material m, int submesh, int opaqueQueue, int camLayer)
		{
		}

		[Token(Token = "0x6000A5E")]
		[Address(RVA = "0xE8E81C", Offset = "0xE8E81C", VA = "0xE8E81C")]
		private void OnPreRender()
		{
		}

		[Token(Token = "0x6000A5F")]
		[Address(RVA = "0xE8E850", Offset = "0xE8E850", VA = "0xE8E850")]
		public TunnellingMobile()
		{
		}
	}
	[Token(Token = "0x20001F6")]
	public class TunnellingOpaque : TunnellingImageBase
	{
		[Token(Token = "0x170000F1")]
		protected override CameraEvent _maskCmdEvt
		{
			[Token(Token = "0x6000A60")]
			[Address(RVA = "0xE8EA44", Offset = "0xE8EA44", VA = "0xE8EA44", Slot = "9")]
			get
			{
				return default(CameraEvent);
			}
		}

		[Token(Token = "0x6000A61")]
		[Address(RVA = "0xE8EA4C", Offset = "0xE8EA4C", VA = "0xE8EA4C")]
		[ImageEffectOpaque]
		private void OnRenderImage(RenderTexture src, RenderTexture dest)
		{
		}

		[Token(Token = "0x6000A62")]
		[Address(RVA = "0xE8EA50", Offset = "0xE8EA50", VA = "0xE8EA50")]
		public TunnellingOpaque()
		{
		}
	}
	[Token(Token = "0x20001F7")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7969B4", Offset = "0x7969B4")]
	public class TunnellingPreset : TunnellingPresetBase
	{
		[Token(Token = "0x4000C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79C3D8", Offset = "0x79C3D8")]
		[SerializeField]
		private float _effectOverlay;

		[Token(Token = "0x4000C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		private bool _overrideEffectOverlay;

		[Token(Token = "0x4000C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private TunnellingBase.BackgroundMode _backgroundMode;

		[Token(Token = "0x4000C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[SerializeField]
		private bool _overrideBackgroundMode;

		[Token(Token = "0x4000C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79C448", Offset = "0x79C448")]
		[SerializeField]
		private int _cageDownsample;

		[Token(Token = "0x4000C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[SerializeField]
		private bool _overrideCageDownsample;

		[Token(Token = "0x4000C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private TunnellingBase.MSAA _cageAntiAliasing;

		[Token(Token = "0x4000C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[SerializeField]
		private bool _overrideCageAntiAliasing;

		[Token(Token = "0x4000C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBD")]
		[SerializeField]
		private bool _cageUpdateEveryFrame;

		[Token(Token = "0x4000C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBE")]
		[SerializeField]
		private bool _overrideCageUpdateEveryFrame;

		[Token(Token = "0x4000C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79C4D8", Offset = "0x79C4D8")]
		[SerializeField]
		private float _cageFogDensity;

		[Token(Token = "0x4000C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		private bool _overrideCageFogDensity;

		[Token(Token = "0x4000C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79C530", Offset = "0x79C530")]
		private float _cageFogPower;

		[Token(Token = "0x4000C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private bool _overrideCageFogPower;

		[Token(Token = "0x4000C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79C580", Offset = "0x79C580")]
		private float _cageFogBlend;

		[Token(Token = "0x4000C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[SerializeField]
		private bool _overrideCageFogBlend;

		[Token(Token = "0x4000C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TunnellingBase.MaskMode _maskMode;

		[Token(Token = "0x4000C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private bool _overrideMaskMode;

		[Token(Token = "0x4000C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79C5F0", Offset = "0x79C5F0")]
		[SerializeField]
		private int _blurDownsample;

		[Token(Token = "0x4000C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private bool _overrideBlurDownsample;

		[Token(Token = "0x4000C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79C640", Offset = "0x79C640")]
		private float _blurDistance;

		[Token(Token = "0x4000C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[SerializeField]
		private bool _overrideBlurDistance;

		[Token(Token = "0x4000C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79C690", Offset = "0x79C690")]
		private int _blurPasses;

		[Token(Token = "0x4000C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[SerializeField]
		private bool _overrideBlurPasses;

		[Token(Token = "0x4000C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private TunnellingImageBase.BlurKernel _blurSamples;

		[Token(Token = "0x4000C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		[SerializeField]
		private bool _overrideBlurSamples;

		[Token(Token = "0x4000C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private TunnellingImageBase.CounterVelocityMode _counterVelocityMode;

		[Token(Token = "0x4000C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[SerializeField]
		private bool _overrideCounterVelocityMode;

		[Token(Token = "0x4000C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private float _counterVelocityResetDistance;

		[Token(Token = "0x4000C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		[SerializeField]
		private bool _overrideCounterVelocityResetDistance;

		[Token(Token = "0x4000C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private float _counterVelocityResetTime;

		[Token(Token = "0x4000C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		[SerializeField]
		private bool _overrideCounterVelocityResetTime;

		[Token(Token = "0x4000C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79C760", Offset = "0x79C760")]
		private float _counterVelocityStrength;

		[Token(Token = "0x4000C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[SerializeField]
		private bool _overrideCounterVelocityStrength;

		[Token(Token = "0x4000C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private Vector3 _counterVelocityPerAxis;

		[Token(Token = "0x4000C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[SerializeField]
		private bool _overrideCounterVelocityPerAxis;

		[Token(Token = "0x4000C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12D")]
		[SerializeField]
		private bool _irisZRejection;

		[Token(Token = "0x4000C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12E")]
		[SerializeField]
		private bool _overrideIrisZRejection;

		[Token(Token = "0x170000F2")]
		public float effectOverlay
		{
			[Token(Token = "0x6000A63")]
			[Address(RVA = "0xE8EAB0", Offset = "0xE8EAB0", VA = "0xE8EAB0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000F3")]
		public bool overrideEffectOverlay
		{
			[Token(Token = "0x6000A64")]
			[Address(RVA = "0xE8EAB8", Offset = "0xE8EAB8", VA = "0xE8EAB8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000F4")]
		public TunnellingBase.BackgroundMode backgroundMode
		{
			[Token(Token = "0x6000A65")]
			[Address(RVA = "0xE8EAC0", Offset = "0xE8EAC0", VA = "0xE8EAC0")]
			get
			{
				return default(TunnellingBase.BackgroundMode);
			}
		}

		[Token(Token = "0x170000F5")]
		public bool overrideBackgroundMode
		{
			[Token(Token = "0x6000A66")]
			[Address(RVA = "0xE8B31C", Offset = "0xE8B31C", VA = "0xE8B31C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000F6")]
		public int cageDownsample
		{
			[Token(Token = "0x6000A67")]
			[Address(RVA = "0xE8EAC8", Offset = "0xE8EAC8", VA = "0xE8EAC8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000F7")]
		public bool overrideCageDownsample
		{
			[Token(Token = "0x6000A68")]
			[Address(RVA = "0xE8B33C", Offset = "0xE8B33C", VA = "0xE8B33C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000F8")]
		public TunnellingBase.MSAA cageAntiAliasing
		{
			[Token(Token = "0x6000A69")]
			[Address(RVA = "0xE8EAD0", Offset = "0xE8EAD0", VA = "0xE8EAD0")]
			get
			{
				return default(TunnellingBase.MSAA);
			}
		}

		[Token(Token = "0x170000F9")]
		public bool overrideCageAntiAliasing
		{
			[Token(Token = "0x6000A6A")]
			[Address(RVA = "0xE8B35C", Offset = "0xE8B35C", VA = "0xE8B35C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000FA")]
		public bool cageUpdateEveryFrame
		{
			[Token(Token = "0x6000A6B")]
			[Address(RVA = "0xE8EAD8", Offset = "0xE8EAD8", VA = "0xE8EAD8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000FB")]
		public bool overrideCageUpdateEveryFrame
		{
			[Token(Token = "0x6000A6C")]
			[Address(RVA = "0xE8B37C", Offset = "0xE8B37C", VA = "0xE8B37C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000FC")]
		public float cageFogDensity
		{
			[Token(Token = "0x6000A6D")]
			[Address(RVA = "0xE8EAE0", Offset = "0xE8EAE0", VA = "0xE8EAE0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000FD")]
		public bool overrideCageFogDensity
		{
			[Token(Token = "0x6000A6E")]
			[Address(RVA = "0xE8B39C", Offset = "0xE8B39C", VA = "0xE8B39C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000FE")]
		public float cageFogPower
		{
			[Token(Token = "0x6000A6F")]
			[Address(RVA = "0xE8EAE8", Offset = "0xE8EAE8", VA = "0xE8EAE8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000FF")]
		public bool overrideCageFogPower
		{
			[Token(Token = "0x6000A70")]
			[Address(RVA = "0xE8B3BC", Offset = "0xE8B3BC", VA = "0xE8B3BC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000100")]
		public float cageFogBlend
		{
			[Token(Token = "0x6000A71")]
			[Address(RVA = "0xE8EAF0", Offset = "0xE8EAF0", VA = "0xE8EAF0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000101")]
		public bool overrideCageFogBlend
		{
			[Token(Token = "0x6000A72")]
			[Address(RVA = "0xE8B3DC", Offset = "0xE8B3DC", VA = "0xE8B3DC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000102")]
		public TunnellingBase.MaskMode maskMode
		{
			[Token(Token = "0x6000A73")]
			[Address(RVA = "0xE8EAF8", Offset = "0xE8EAF8", VA = "0xE8EAF8")]
			get
			{
				return default(TunnellingBase.MaskMode);
			}
		}

		[Token(Token = "0x17000103")]
		public bool overrideMaskMode
		{
			[Token(Token = "0x6000A74")]
			[Address(RVA = "0xE8B3FC", Offset = "0xE8B3FC", VA = "0xE8B3FC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000104")]
		public int blurDownsample
		{
			[Token(Token = "0x6000A75")]
			[Address(RVA = "0xE8EB00", Offset = "0xE8EB00", VA = "0xE8EB00")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000105")]
		public bool overrideBlurDownsample
		{
			[Token(Token = "0x6000A76")]
			[Address(RVA = "0xE8B41C", Offset = "0xE8B41C", VA = "0xE8B41C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000106")]
		public float blurDistance
		{
			[Token(Token = "0x6000A77")]
			[Address(RVA = "0xE8EB08", Offset = "0xE8EB08", VA = "0xE8EB08")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000107")]
		public bool overrideBlurDistance
		{
			[Token(Token = "0x6000A78")]
			[Address(RVA = "0xE8B43C", Offset = "0xE8B43C", VA = "0xE8B43C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000108")]
		public int blurPasses
		{
			[Token(Token = "0x6000A79")]
			[Address(RVA = "0xE8EB10", Offset = "0xE8EB10", VA = "0xE8EB10")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000109")]
		public bool overrideBlurPasses
		{
			[Token(Token = "0x6000A7A")]
			[Address(RVA = "0xE8B45C", Offset = "0xE8B45C", VA = "0xE8B45C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700010A")]
		public TunnellingImageBase.BlurKernel blurSamples
		{
			[Token(Token = "0x6000A7B")]
			[Address(RVA = "0xE8EB18", Offset = "0xE8EB18", VA = "0xE8EB18")]
			get
			{
				return default(TunnellingImageBase.BlurKernel);
			}
		}

		[Token(Token = "0x1700010B")]
		public bool overrideBlurSamples
		{
			[Token(Token = "0x6000A7C")]
			[Address(RVA = "0xE8B47C", Offset = "0xE8B47C", VA = "0xE8B47C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700010C")]
		public TunnellingImageBase.CounterVelocityMode counterVelocityMode
		{
			[Token(Token = "0x6000A7D")]
			[Address(RVA = "0xE8EB20", Offset = "0xE8EB20", VA = "0xE8EB20")]
			get
			{
				return default(TunnellingImageBase.CounterVelocityMode);
			}
		}

		[Token(Token = "0x1700010D")]
		public bool overrideCounterVelocityMode
		{
			[Token(Token = "0x6000A7E")]
			[Address(RVA = "0xE8B49C", Offset = "0xE8B49C", VA = "0xE8B49C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700010E")]
		public float counterVelocityResetDistance
		{
			[Token(Token = "0x6000A7F")]
			[Address(RVA = "0xE8EB28", Offset = "0xE8EB28", VA = "0xE8EB28")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700010F")]
		public bool overrideCounterVelocityResetDistance
		{
			[Token(Token = "0x6000A80")]
			[Address(RVA = "0xE8B4BC", Offset = "0xE8B4BC", VA = "0xE8B4BC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000110")]
		public float counterVelocityResetTime
		{
			[Token(Token = "0x6000A81")]
			[Address(RVA = "0xE8EB30", Offset = "0xE8EB30", VA = "0xE8EB30")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000111")]
		public bool overrideCounterVelocityResetTime
		{
			[Token(Token = "0x6000A82")]
			[Address(RVA = "0xE8B4DC", Offset = "0xE8B4DC", VA = "0xE8B4DC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000112")]
		public float counterVelocityStrength
		{
			[Token(Token = "0x6000A83")]
			[Address(RVA = "0xE8EB38", Offset = "0xE8EB38", VA = "0xE8EB38")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000113")]
		public bool overrideCounterVelocityStrength
		{
			[Token(Token = "0x6000A84")]
			[Address(RVA = "0xE8B4FC", Offset = "0xE8B4FC", VA = "0xE8B4FC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000114")]
		public Vector3 counterVelocityPerAxis
		{
			[Token(Token = "0x6000A85")]
			[Address(RVA = "0xE8EB40", Offset = "0xE8EB40", VA = "0xE8EB40")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000115")]
		public bool overrideCounterVelocityPerAxis
		{
			[Token(Token = "0x6000A86")]
			[Address(RVA = "0xE8B51C", Offset = "0xE8B51C", VA = "0xE8B51C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000116")]
		public bool irisZRejection
		{
			[Token(Token = "0x6000A87")]
			[Address(RVA = "0xE8EB50", Offset = "0xE8EB50", VA = "0xE8EB50")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000117")]
		public bool overrideIrisZRejection
		{
			[Token(Token = "0x6000A88")]
			[Address(RVA = "0xE8B53C", Offset = "0xE8B53C", VA = "0xE8B53C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000A89")]
		[Address(RVA = "0xE8EB58", Offset = "0xE8EB58", VA = "0xE8EB58")]
		public TunnellingPreset()
		{
		}
	}
	[Token(Token = "0x20001F8")]
	public abstract class TunnellingPresetBase : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x20001F9")]
		public class MotionSettings
		{
			[Token(Token = "0x4000CA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private bool _use;

			[Token(Token = "0x4000CA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79CAB4", Offset = "0x79CAB4")]
			[SerializeField]
			private float _strength;

			[Token(Token = "0x4000CAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private float _min;

			[Token(Token = "0x4000CAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[SerializeField]
			private float _max;

			[Token(Token = "0x4000CAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private float _smoothing;

			[Token(Token = "0x17000137")]
			public bool use
			{
				[Token(Token = "0x6000AAA")]
				[Address(RVA = "0xCC5670", Offset = "0xCC5670", VA = "0xCC5670")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000138")]
			public float strength
			{
				[Token(Token = "0x6000AAB")]
				[Address(RVA = "0xCC5678", Offset = "0xCC5678", VA = "0xCC5678")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000139")]
			public float min
			{
				[Token(Token = "0x6000AAC")]
				[Address(RVA = "0xCC5680", Offset = "0xCC5680", VA = "0xCC5680")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x1700013A")]
			public float max
			{
				[Token(Token = "0x6000AAD")]
				[Address(RVA = "0xCC5688", Offset = "0xCC5688", VA = "0xCC5688")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x1700013B")]
			public float smoothing
			{
				[Token(Token = "0x6000AAE")]
				[Address(RVA = "0xCC5690", Offset = "0xCC5690", VA = "0xCC5690")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x6000AAF")]
			[Address(RVA = "0xCC5698", Offset = "0xCC5698", VA = "0xCC5698")]
			public MotionSettings()
			{
			}
		}

		[Token(Token = "0x4000C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool _overrideAll;

		[Token(Token = "0x4000C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79C800", Offset = "0x79C800")]
		private float _effectCoverage;

		[Token(Token = "0x4000C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool _overrideEffectCoverage;

		[Token(Token = "0x4000C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Color _effectColor;

		[Token(Token = "0x4000C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private bool _overrideEffectColor;

		[Token(Token = "0x4000C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79C870", Offset = "0x79C870")]
		[SerializeField]
		private float _effectFeather;

		[Token(Token = "0x4000C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private bool _overrideEffectFeather;

		[Token(Token = "0x4000C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		[SerializeField]
		private bool _applyColorToBackground;

		[Token(Token = "0x4000C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
		[SerializeField]
		private bool _overrideApplyColorToBackground;

		[Token(Token = "0x4000C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Cubemap _skybox;

		[Token(Token = "0x4000C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private bool _overrideSkybox;

		[Token(Token = "0x4000C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private MotionSettings _angularVelocity;

		[Token(Token = "0x4000C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private bool _overrideAngularVelocity;

		[Token(Token = "0x4000C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private MotionSettings _acceleration;

		[Token(Token = "0x4000C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private bool _overrideAcceleration;

		[Token(Token = "0x4000C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private MotionSettings _velocity;

		[Token(Token = "0x4000C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _overrideVelocity;

		[Token(Token = "0x4000C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		[SerializeField]
		private bool _useCounterMotion;

		[Token(Token = "0x4000C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
		[SerializeField]
		private bool _overrideUseCounterMotion;

		[Token(Token = "0x4000C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79C980", Offset = "0x79C980")]
		private float _counterRotationStrength;

		[Token(Token = "0x4000C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private bool _overrideCounterRotationStrength;

		[Token(Token = "0x4000C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		private Vector3 _counterRotationPerAxis;

		[Token(Token = "0x4000C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private bool _overrideCounterRotationPerAxis;

		[Token(Token = "0x4000CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		[SerializeField]
		private bool _useArtificialTilt;

		[Token(Token = "0x4000CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
		[SerializeField]
		private bool _overrideUseArtificialTilt;

		[Token(Token = "0x4000CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79CA10", Offset = "0x79CA10")]
		private int _framerateDivision;

		[Token(Token = "0x4000CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private bool _overrideFramerateDivision;

		[Token(Token = "0x4000CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		[SerializeField]
		private bool _divideTranslation;

		[Token(Token = "0x4000CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
		[SerializeField]
		private bool _overrideDivideTranslation;

		[Token(Token = "0x4000CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9B")]
		[SerializeField]
		private bool _divideRotation;

		[Token(Token = "0x4000CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		private bool _overrideDivideRotation;

		[Token(Token = "0x17000118")]
		protected bool overrideAll
		{
			[Token(Token = "0x6000A8A")]
			[Address(RVA = "0xE8ECB8", Offset = "0xE8ECB8", VA = "0xE8ECB8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000119")]
		public float effectCoverage
		{
			[Token(Token = "0x6000A8B")]
			[Address(RVA = "0xE8ECC0", Offset = "0xE8ECC0", VA = "0xE8ECC0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700011A")]
		public bool overrideEffectCoverage
		{
			[Token(Token = "0x6000A8C")]
			[Address(RVA = "0xE88518", Offset = "0xE88518", VA = "0xE88518")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700011B")]
		public Color effectColor
		{
			[Token(Token = "0x6000A8D")]
			[Address(RVA = "0xE8ECC8", Offset = "0xE8ECC8", VA = "0xE8ECC8")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x1700011C")]
		public bool overrideEffectColor
		{
			[Token(Token = "0x6000A8E")]
			[Address(RVA = "0xE88538", Offset = "0xE88538", VA = "0xE88538")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700011D")]
		public float effectFeather
		{
			[Token(Token = "0x6000A8F")]
			[Address(RVA = "0xE8ECD4", Offset = "0xE8ECD4", VA = "0xE8ECD4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700011E")]
		public bool overrideEffectFeather
		{
			[Token(Token = "0x6000A90")]
			[Address(RVA = "0xE88558", Offset = "0xE88558", VA = "0xE88558")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700011F")]
		public bool applyColorToBackground
		{
			[Token(Token = "0x6000A91")]
			[Address(RVA = "0xE8ECDC", Offset = "0xE8ECDC", VA = "0xE8ECDC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000120")]
		public bool overrideApplyColorToBackground
		{
			[Token(Token = "0x6000A92")]
			[Address(RVA = "0xE88578", Offset = "0xE88578", VA = "0xE88578")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000121")]
		public Cubemap skybox
		{
			[Token(Token = "0x6000A93")]
			[Address(RVA = "0xE8ECE4", Offset = "0xE8ECE4", VA = "0xE8ECE4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000122")]
		public bool overrideSkybox
		{
			[Token(Token = "0x6000A94")]
			[Address(RVA = "0xE88598", Offset = "0xE88598", VA = "0xE88598")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000123")]
		public MotionSettings angularVelocity
		{
			[Token(Token = "0x6000A95")]
			[Address(RVA = "0xE8ECEC", Offset = "0xE8ECEC", VA = "0xE8ECEC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000124")]
		public bool overrideAngularVelocity
		{
			[Token(Token = "0x6000A96")]
			[Address(RVA = "0xE885B8", Offset = "0xE885B8", VA = "0xE885B8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000125")]
		public MotionSettings acceleration
		{
			[Token(Token = "0x6000A97")]
			[Address(RVA = "0xE8ECF4", Offset = "0xE8ECF4", VA = "0xE8ECF4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000126")]
		public bool overrideAcceleration
		{
			[Token(Token = "0x6000A98")]
			[Address(RVA = "0xE885D8", Offset = "0xE885D8", VA = "0xE885D8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000127")]
		public MotionSettings velocity
		{
			[Token(Token = "0x6000A99")]
			[Address(RVA = "0xE8ECFC", Offset = "0xE8ECFC", VA = "0xE8ECFC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000128")]
		public bool overrideVelocity
		{
			[Token(Token = "0x6000A9A")]
			[Address(RVA = "0xE885F8", Offset = "0xE885F8", VA = "0xE885F8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000129")]
		public bool useCounterMotion
		{
			[Token(Token = "0x6000A9B")]
			[Address(RVA = "0xE8ED04", Offset = "0xE8ED04", VA = "0xE8ED04")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700012A")]
		public bool overrideUseCounterMotion
		{
			[Token(Token = "0x6000A9C")]
			[Address(RVA = "0xE88618", Offset = "0xE88618", VA = "0xE88618")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700012B")]
		public float counterRotationStrength
		{
			[Token(Token = "0x6000A9D")]
			[Address(RVA = "0xE8ED0C", Offset = "0xE8ED0C", VA = "0xE8ED0C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700012C")]
		public bool overrideCounterRotationStrength
		{
			[Token(Token = "0x6000A9E")]
			[Address(RVA = "0xE8ED14", Offset = "0xE8ED14", VA = "0xE8ED14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700012D")]
		public Vector3 counterRotationPerAxis
		{
			[Token(Token = "0x6000A9F")]
			[Address(RVA = "0xE8ED34", Offset = "0xE8ED34", VA = "0xE8ED34")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700012E")]
		public bool overrideCounterRotationPerAxis
		{
			[Token(Token = "0x6000AA0")]
			[Address(RVA = "0xE88638", Offset = "0xE88638", VA = "0xE88638")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700012F")]
		public bool useArtificialTilt
		{
			[Token(Token = "0x6000AA1")]
			[Address(RVA = "0xE8ED40", Offset = "0xE8ED40", VA = "0xE8ED40")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000130")]
		public bool overrideUseArtificialTilt
		{
			[Token(Token = "0x6000AA2")]
			[Address(RVA = "0xE88658", Offset = "0xE88658", VA = "0xE88658")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000131")]
		public int framerateDivision
		{
			[Token(Token = "0x6000AA3")]
			[Address(RVA = "0xE8ED48", Offset = "0xE8ED48", VA = "0xE8ED48")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000132")]
		public bool overrideFramerateDivision
		{
			[Token(Token = "0x6000AA4")]
			[Address(RVA = "0xE88678", Offset = "0xE88678", VA = "0xE88678")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000133")]
		public bool divideTranslation
		{
			[Token(Token = "0x6000AA5")]
			[Address(RVA = "0xE8ED50", Offset = "0xE8ED50", VA = "0xE8ED50")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000134")]
		public bool overrideDivideTranslation
		{
			[Token(Token = "0x6000AA6")]
			[Address(RVA = "0xE88698", Offset = "0xE88698", VA = "0xE88698")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000135")]
		public bool divideRotation
		{
			[Token(Token = "0x6000AA7")]
			[Address(RVA = "0xE8ED58", Offset = "0xE8ED58", VA = "0xE8ED58")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000136")]
		public bool overrideDividerotation
		{
			[Token(Token = "0x6000AA8")]
			[Address(RVA = "0xE886B8", Offset = "0xE886B8", VA = "0xE886B8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000AA9")]
		[Address(RVA = "0xE8EC10", Offset = "0xE8EC10", VA = "0xE8EC10")]
		protected TunnellingPresetBase()
		{
		}
	}
	[Token(Token = "0x20001FA")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x796A00", Offset = "0x796A00")]
	public class TunnellingPresetMobile : TunnellingPresetBase
	{
		[Token(Token = "0x4000CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
		[SerializeField]
		private bool _drawSkybox;

		[Token(Token = "0x4000CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9E")]
		[SerializeField]
		private bool _overrideDrawSkybox;

		[Token(Token = "0x4000CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9F")]
		[SerializeField]
		private bool _drawBeforeTransparent;

		[Token(Token = "0x4000CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private bool _overrideDrawBeforeTransparent;

		[Token(Token = "0x4000CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		[SerializeField]
		private bool _useMask;

		[Token(Token = "0x4000CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
		[SerializeField]
		private bool _overrideUseMask;

		[Token(Token = "0x4000CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79CB84", Offset = "0x79CB84")]
		private int _stencilReference;

		[Token(Token = "0x4000CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private bool _overrideStencilReference;

		[Token(Token = "0x4000CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79CBD8", Offset = "0x79CBD8")]
		[SerializeField]
		private int _stencilMask;

		[Token(Token = "0x4000CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private bool _overrideStencilMask;

		[Token(Token = "0x4000CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79CC2C", Offset = "0x79CC2C")]
		private int _stencilBias;

		[Token(Token = "0x4000CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private bool _overrideStencilBias;

		[Token(Token = "0x1700013C")]
		public bool drawSkybox
		{
			[Token(Token = "0x6000AB0")]
			[Address(RVA = "0xE8ED60", Offset = "0xE8ED60", VA = "0xE8ED60")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700013D")]
		public bool overrideDrawSkybox
		{
			[Token(Token = "0x6000AB1")]
			[Address(RVA = "0xE8D61C", Offset = "0xE8D61C", VA = "0xE8D61C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700013E")]
		public bool drawBeforeTransparent
		{
			[Token(Token = "0x6000AB2")]
			[Address(RVA = "0xE8ED68", Offset = "0xE8ED68", VA = "0xE8ED68")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700013F")]
		public bool overrideDrawBeforeTransparent
		{
			[Token(Token = "0x6000AB3")]
			[Address(RVA = "0xE8ED70", Offset = "0xE8ED70", VA = "0xE8ED70")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000140")]
		public bool useMask
		{
			[Token(Token = "0x6000AB4")]
			[Address(RVA = "0xE8ED78", Offset = "0xE8ED78", VA = "0xE8ED78")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000141")]
		public bool overrideUseMask
		{
			[Token(Token = "0x6000AB5")]
			[Address(RVA = "0xE8ED80", Offset = "0xE8ED80", VA = "0xE8ED80")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000142")]
		public int stencilReference
		{
			[Token(Token = "0x6000AB6")]
			[Address(RVA = "0xE8ED88", Offset = "0xE8ED88", VA = "0xE8ED88")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000143")]
		public bool overrideStencilReference
		{
			[Token(Token = "0x6000AB7")]
			[Address(RVA = "0xE8ED90", Offset = "0xE8ED90", VA = "0xE8ED90")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000144")]
		public int stencilMask
		{
			[Token(Token = "0x6000AB8")]
			[Address(RVA = "0xE8ED98", Offset = "0xE8ED98", VA = "0xE8ED98")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000145")]
		public bool overrideStencilMask
		{
			[Token(Token = "0x6000AB9")]
			[Address(RVA = "0xE8EDA0", Offset = "0xE8EDA0", VA = "0xE8EDA0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000146")]
		public int stencilBias
		{
			[Token(Token = "0x6000ABA")]
			[Address(RVA = "0xE8EDA8", Offset = "0xE8EDA8", VA = "0xE8EDA8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000147")]
		public bool overrideStencilBias
		{
			[Token(Token = "0x6000ABB")]
			[Address(RVA = "0xE8EDB0", Offset = "0xE8EDB0", VA = "0xE8EDB0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000ABC")]
		[Address(RVA = "0xE8EDB8", Offset = "0xE8EDB8", VA = "0xE8EDB8")]
		public TunnellingPresetMobile()
		{
		}
	}
}
namespace Sigtrap.VrTunnellingPro.Examples
{
	[Token(Token = "0x20001FB")]
	public class VRTP_ExampleMovement : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20001FC")]
		private struct Preset
		{
			[Token(Token = "0x4000CCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public KeyCode key;

			[Token(Token = "0x4000CCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public GameObject[] worldObjects;

			[Token(Token = "0x4000CCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TunnellingPreset postPreset;
		}

		[Token(Token = "0x4000CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool _disableModes;

		[Token(Token = "0x4000CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _rotSensitivity;

		[Token(Token = "0x4000CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _movSensitivity;

		[Token(Token = "0x4000CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Cubemap[] _skyboxes;

		[Token(Token = "0x4000CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject[] _cages;

		[Token(Token = "0x4000CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Preset[] _modePresets;

		[Token(Token = "0x4000CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int _currentMode;

		[Token(Token = "0x4000CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool _hasWarnedInput;

		[Token(Token = "0x4000CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Tunnelling _tunnelling;

		[Token(Token = "0x4000CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private CharacterController _char;

		[Token(Token = "0x4000CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int _currentSkybox;

		[Token(Token = "0x4000CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int _currentCage;

		[Token(Token = "0x4000CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 _speedCurrent;

		[Token(Token = "0x4000CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 _speedSlew;

		[Token(Token = "0x4000CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private float _speedSmoothing;

		[Token(Token = "0x4000CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float _rotCurrent;

		[Token(Token = "0x4000CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float _rotSlew;

		[Token(Token = "0x4000CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		private float _rotSmoothing;

		[Token(Token = "0x6000ABD")]
		[Address(RVA = "0xACBF5C", Offset = "0xACBF5C", VA = "0xACBF5C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000ABE")]
		[Address(RVA = "0xACBFE8", Offset = "0xACBFE8", VA = "0xACBFE8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000ABF")]
		[Address(RVA = "0xACC444", Offset = "0xACC444", VA = "0xACC444")]
		private void SetPreset(int i)
		{
		}

		[Token(Token = "0x6000AC0")]
		[Address(RVA = "0xACC59C", Offset = "0xACC59C", VA = "0xACC59C")]
		public VRTP_ExampleMovement()
		{
		}
	}
}
namespace DynamicFogAndMist
{
	[Token(Token = "0x20001FD")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x796A50", Offset = "0x796A50")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x796A50", Offset = "0x796A50")]
	[ImageEffectAllowedInSceneView]
	public class DynamicFog : DynamicFogBase
	{
		[Token(Token = "0x6000AC1")]
		[Address(RVA = "0xE6E2DC", Offset = "0xE6E2DC", VA = "0xE6E2DC")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000AC2")]
		[Address(RVA = "0xE6F524", Offset = "0xE6F524", VA = "0xE6F524")]
		public DynamicFog()
		{
		}
	}
	[Token(Token = "0x20001FE")]
	public enum FOG_TYPE
	{
		[Token(Token = "0x4000CCF")]
		DesktopFogWithSkyHaze,
		[Token(Token = "0x4000CD0")]
		MobileFogWithSkyHaze,
		[Token(Token = "0x4000CD1")]
		MobileFogOnlyGround,
		[Token(Token = "0x4000CD2")]
		DesktopFogPlusWithSkyHaze,
		[Token(Token = "0x4000CD3")]
		MobileFogSimple,
		[Token(Token = "0x4000CD4")]
		MobileFogBasic,
		[Token(Token = "0x4000CD5")]
		MobileFogOrthogonal,
		[Token(Token = "0x4000CD6")]
		DesktopFogPlusOrthogonal
	}
	[Token(Token = "0x20001FF")]
	internal static class FOG_TYPE_Ext
	{
		[Token(Token = "0x6000AC3")]
		[Address(RVA = "0xE72F9C", Offset = "0xE72F9C", VA = "0xE72F9C")]
		public static bool isPlus(this FOG_TYPE fogType)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000200")]
	public enum FOG_PRESET
	{
		[Token(Token = "0x4000CD8")]
		Clear,
		[Token(Token = "0x4000CD9")]
		Mist,
		[Token(Token = "0x4000CDA")]
		WindyMist,
		[Token(Token = "0x4000CDB")]
		GroundFog,
		[Token(Token = "0x4000CDC")]
		Fog,
		[Token(Token = "0x4000CDD")]
		HeavyFog,
		[Token(Token = "0x4000CDE")]
		SandStorm,
		[Token(Token = "0x4000CDF")]
		Custom
	}
	[Token(Token = "0x2000201")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x796B04", Offset = "0x796B04")]
	public class DynamicFogBase : MonoBehaviour
	{
		[Token(Token = "0x4000CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private FOG_TYPE _effectType;

		[Token(Token = "0x4000CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private FOG_PRESET _preset;

		[Token(Token = "0x4000CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DynamicFogProfile _profile;

		[Token(Token = "0x4000CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool _profileSync;

		[Token(Token = "0x4000CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		private bool _useFogVolumes;

		[Token(Token = "0x4000CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		[SerializeField]
		private bool _enableDithering;

		[Token(Token = "0x4000CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79CD5C", Offset = "0x79CD5C")]
		private float _ditherStrength;

		[Token(Token = "0x4000CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79CDA0", Offset = "0x79CDA0")]
		protected float _alpha;

		[Token(Token = "0x4000CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79CDE0", Offset = "0x79CDE0")]
		private float _noiseStrength;

		[Token(Token = "0x4000CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79CE20", Offset = "0x79CE20")]
		[SerializeField]
		private float _noiseScale;

		[Token(Token = "0x4000CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79CE64", Offset = "0x79CE64")]
		[SerializeField]
		private float _distance;

		[Token(Token = "0x4000CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79CEA8", Offset = "0x79CEA8")]
		private float _distanceFallOff;

		[Token(Token = "0x4000CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79CEEC", Offset = "0x79CEEC")]
		private float _maxDistance;

		[Token(Token = "0x4000CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79CF30", Offset = "0x79CF30")]
		private float _maxDistanceFallOff;

		[Token(Token = "0x4000CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79CF74", Offset = "0x79CF74")]
		private float _height;

		[Token(Token = "0x4000CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79CFB8", Offset = "0x79CFB8")]
		private float _maxHeight;

		[Token(Token = "0x4000CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79CFFC", Offset = "0x79CFFC")]
		private float _heightFallOff;

		[Token(Token = "0x4000CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private float _baselineHeight;

		[Token(Token = "0x4000CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private bool _clipUnderBaseline;

		[Token(Token = "0x4000CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79D060", Offset = "0x79D060")]
		private float _turbulence;

		[Token(Token = "0x4000CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79D0A0", Offset = "0x79D0A0")]
		private float _speed;

		[Token(Token = "0x4000CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Vector3 _windDirection;

		[Token(Token = "0x4000CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private Color _color;

		[Token(Token = "0x4000CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		private Color _color2;

		[Token(Token = "0x4000CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79D110", Offset = "0x79D110")]
		private float _skyHaze;

		[Token(Token = "0x4000CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79D154", Offset = "0x79D154")]
		private float _skySpeed;

		[Token(Token = "0x4000CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79D194", Offset = "0x79D194")]
		private float _skyNoiseStrength;

		[Token(Token = "0x4000CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79D1D4", Offset = "0x79D1D4")]
		[SerializeField]
		private float _skyAlpha;

		[Token(Token = "0x4000CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private GameObject _sun;

		[Token(Token = "0x4000CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private bool _fogOfWarEnabled;

		[Token(Token = "0x4000CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[SerializeField]
		private Vector3 _fogOfWarCenter;

		[Token(Token = "0x4000CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private Vector3 _fogOfWarSize;

		[Token(Token = "0x4000D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private int _fogOfWarTextureSize;

		[Token(Token = "0x4000D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		protected bool _useSinglePassStereoRenderingMatrix;

		[Token(Token = "0x4000D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
		[SerializeField]
		private bool _useXZDistance;

		[Token(Token = "0x4000D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79D284", Offset = "0x79D284")]
		[SerializeField]
		private float _scattering;

		[Token(Token = "0x4000D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private Color _scatteringColor;

		[Token(Token = "0x4000D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Material fogMatAdv;

		[Token(Token = "0x4000D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Material fogMatFogSky;

		[Token(Token = "0x4000D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Material fogMatOnlyFog;

		[Token(Token = "0x4000D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Material fogMatVol;

		[Token(Token = "0x4000D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Material fogMatSimple;

		[Token(Token = "0x4000D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Material fogMatBasic;

		[Token(Token = "0x4000D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Material fogMatOrthogonal;

		[Token(Token = "0x4000D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Material fogMatDesktopPlusOrthogonal;

		[Token(Token = "0x4000D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		protected Material fogMat;

		[Token(Token = "0x4000D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private float initialFogAlpha;

		[Token(Token = "0x4000D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		private float targetFogAlpha;

		[Token(Token = "0x4000D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private float initialSkyHazeAlpha;

		[Token(Token = "0x4000D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private float targetSkyHazeAlpha;

		[Token(Token = "0x4000D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private bool targetFogColors;

		[Token(Token = "0x4000D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private Color initialFogColor1;

		[Token(Token = "0x4000D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		private Color targetFogColor1;

		[Token(Token = "0x4000D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private Color initialFogColor2;

		[Token(Token = "0x4000D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		private Color targetFogColor2;

		[Token(Token = "0x4000D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		private float transitionDuration;

		[Token(Token = "0x4000D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private float transitionStartTime;

		[Token(Token = "0x4000D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		private float currentFogAlpha;

		[Token(Token = "0x4000D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private float currentSkyHazeAlpha;

		[Token(Token = "0x4000D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		private bool transitionAlpha;

		[Token(Token = "0x4000D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x195")]
		private bool transitionColor;

		[Token(Token = "0x4000D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x196")]
		private bool transitionProfile;

		[Token(Token = "0x4000D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private DynamicFogProfile initialProfile;

		[Token(Token = "0x4000D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private DynamicFogProfile targetProfile;

		[Token(Token = "0x4000D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private Color currentFogColor1;

		[Token(Token = "0x4000D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private Color currentFogColor2;

		[Token(Token = "0x4000D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		protected Camera currentCamera;

		[Token(Token = "0x4000D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private Texture2D fogOfWarTexture;

		[Token(Token = "0x4000D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private Color32[] fogOfWarColorBuffer;

		[Token(Token = "0x4000D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private Light sunLight;

		[Token(Token = "0x4000D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private Vector3 sunDirection;

		[Token(Token = "0x4000D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		private Color sunColor;

		[Token(Token = "0x4000D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		private float sunIntensity;

		[Token(Token = "0x4000D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static DynamicFog _fog;

		[Token(Token = "0x4000D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private List<string> shaderKeywords;

		[Token(Token = "0x4000D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		protected bool matOrtho;

		[Token(Token = "0x4000D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x211")]
		protected bool shouldUpdateMaterialProperties;

		[Token(Token = "0x17000148")]
		public FOG_TYPE effectType
		{
			[Token(Token = "0x6000AC4")]
			[Address(RVA = "0xE6F664", Offset = "0xE6F664", VA = "0xE6F664")]
			get
			{
				return default(FOG_TYPE);
			}
			[Token(Token = "0x6000AC5")]
			[Address(RVA = "0xE6F66C", Offset = "0xE6F66C", VA = "0xE6F66C")]
			set
			{
			}
		}

		[Token(Token = "0x17000149")]
		public FOG_PRESET preset
		{
			[Token(Token = "0x6000AC6")]
			[Address(RVA = "0xE6F700", Offset = "0xE6F700", VA = "0xE6F700")]
			get
			{
				return default(FOG_PRESET);
			}
			[Token(Token = "0x6000AC7")]
			[Address(RVA = "0xE6F708", Offset = "0xE6F708", VA = "0xE6F708")]
			set
			{
			}
		}

		[Token(Token = "0x1700014A")]
		public DynamicFogProfile profile
		{
			[Token(Token = "0x6000AC8")]
			[Address(RVA = "0xE6F720", Offset = "0xE6F720", VA = "0xE6F720")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AC9")]
			[Address(RVA = "0xE6F728", Offset = "0xE6F728", VA = "0xE6F728")]
			set
			{
			}
		}

		[Token(Token = "0x1700014B")]
		public bool profileSync
		{
			[Token(Token = "0x6000ACA")]
			[Address(RVA = "0xE6FC70", Offset = "0xE6FC70", VA = "0xE6FC70")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000ACB")]
			[Address(RVA = "0xE6FC78", Offset = "0xE6FC78", VA = "0xE6FC78")]
			set
			{
			}
		}

		[Token(Token = "0x1700014C")]
		public bool useFogVolumes
		{
			[Token(Token = "0x6000ACC")]
			[Address(RVA = "0xE6FC98", Offset = "0xE6FC98", VA = "0xE6FC98")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000ACD")]
			[Address(RVA = "0xE6FCA0", Offset = "0xE6FCA0", VA = "0xE6FCA0")]
			set
			{
			}
		}

		[Token(Token = "0x1700014D")]
		public bool enableDithering
		{
			[Token(Token = "0x6000ACE")]
			[Address(RVA = "0xE6FCC0", Offset = "0xE6FCC0", VA = "0xE6FCC0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000ACF")]
			[Address(RVA = "0xE6FCC8", Offset = "0xE6FCC8", VA = "0xE6FCC8")]
			set
			{
			}
		}

		[Token(Token = "0x1700014E")]
		public float ditherStrength
		{
			[Token(Token = "0x6000AD0")]
			[Address(RVA = "0xE6FD24", Offset = "0xE6FD24", VA = "0xE6FD24")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000AD1")]
			[Address(RVA = "0xE6FD2C", Offset = "0xE6FD2C", VA = "0xE6FD2C")]
			set
			{
			}
		}

		[Token(Token = "0x1700014F")]
		public float alpha
		{
			[Token(Token = "0x6000AD2")]
			[Address(RVA = "0xE6FD7C", Offset = "0xE6FD7C", VA = "0xE6FD7C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000AD3")]
			[Address(RVA = "0xE6FD84", Offset = "0xE6FD84", VA = "0xE6FD84")]
			set
			{
			}
		}

		[Token(Token = "0x17000150")]
		public float noiseStrength
		{
			[Token(Token = "0x6000AD4")]
			[Address(RVA = "0xE6FDA4", Offset = "0xE6FDA4", VA = "0xE6FDA4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000AD5")]
			[Address(RVA = "0xE6FDAC", Offset = "0xE6FDAC", VA = "0xE6FDAC")]
			set
			{
			}
		}

		[Token(Token = "0x17000151")]
		public float noiseScale
		{
			[Token(Token = "0x6000AD6")]
			[Address(RVA = "0xE6FDCC", Offset = "0xE6FDCC", VA = "0xE6FDCC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000AD7")]
			[Address(RVA = "0xE6FDD4", Offset = "0xE6FDD4", VA = "0xE6FDD4")]
			set
			{
			}
		}

		[Token(Token = "0x17000152")]
		public float distance
		{
			[Token(Token = "0x6000AD8")]
			[Address(RVA = "0xE6FE2C", Offset = "0xE6FE2C", VA = "0xE6FE2C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000AD9")]
			[Address(RVA = "0xE6FE34", Offset = "0xE6FE34", VA = "0xE6FE34")]
			set
			{
			}
		}

		[Token(Token = "0x17000153")]
		public float distanceFallOff
		{
			[Token(Token = "0x6000ADA")]
			[Address(RVA = "0xE6FE54", Offset = "0xE6FE54", VA = "0xE6FE54")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000ADB")]
			[Address(RVA = "0xE6FE5C", Offset = "0xE6FE5C", VA = "0xE6FE5C")]
			set
			{
			}
		}

		[Token(Token = "0x17000154")]
		public float maxDistance
		{
			[Token(Token = "0x6000ADC")]
			[Address(RVA = "0xE6FE7C", Offset = "0xE6FE7C", VA = "0xE6FE7C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000ADD")]
			[Address(RVA = "0xE6FE84", Offset = "0xE6FE84", VA = "0xE6FE84")]
			set
			{
			}
		}

		[Token(Token = "0x17000155")]
		public float maxDistanceFallOff
		{
			[Token(Token = "0x6000ADE")]
			[Address(RVA = "0xE6FEA4", Offset = "0xE6FEA4", VA = "0xE6FEA4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000ADF")]
			[Address(RVA = "0xE6FEAC", Offset = "0xE6FEAC", VA = "0xE6FEAC")]
			set
			{
			}
		}

		[Token(Token = "0x17000156")]
		public float height
		{
			[Token(Token = "0x6000AE0")]
			[Address(RVA = "0xE6FECC", Offset = "0xE6FECC", VA = "0xE6FECC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000AE1")]
			[Address(RVA = "0xE6FED4", Offset = "0xE6FED4", VA = "0xE6FED4")]
			set
			{
			}
		}

		[Token(Token = "0x17000157")]
		public float maxHeight
		{
			[Token(Token = "0x6000AE2")]
			[Address(RVA = "0xE6FEF4", Offset = "0xE6FEF4", VA = "0xE6FEF4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000AE3")]
			[Address(RVA = "0xE6FEFC", Offset = "0xE6FEFC", VA = "0xE6FEFC")]
			set
			{
			}
		}

		[Token(Token = "0x17000158")]
		public float heightFallOff
		{
			[Token(Token = "0x6000AE4")]
			[Address(RVA = "0xE6FF54", Offset = "0xE6FF54", VA = "0xE6FF54")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000AE5")]
			[Address(RVA = "0xE6FF5C", Offset = "0xE6FF5C", VA = "0xE6FF5C")]
			set
			{
			}
		}

		[Token(Token = "0x17000159")]
		public float baselineHeight
		{
			[Token(Token = "0x6000AE6")]
			[Address(RVA = "0xE6FF7C", Offset = "0xE6FF7C", VA = "0xE6FF7C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000AE7")]
			[Address(RVA = "0xE6FF84", Offset = "0xE6FF84", VA = "0xE6FF84")]
			set
			{
			}
		}

		[Token(Token = "0x1700015A")]
		public bool clipUnderBaseline
		{
			[Token(Token = "0x6000AE8")]
			[Address(RVA = "0xE6FFD4", Offset = "0xE6FFD4", VA = "0xE6FFD4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000AE9")]
			[Address(RVA = "0xE6FFDC", Offset = "0xE6FFDC", VA = "0xE6FFDC")]
			set
			{
			}
		}

		[Token(Token = "0x1700015B")]
		public float turbulence
		{
			[Token(Token = "0x6000AEA")]
			[Address(RVA = "0xE70038", Offset = "0xE70038", VA = "0xE70038")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000AEB")]
			[Address(RVA = "0xE70040", Offset = "0xE70040", VA = "0xE70040")]
			set
			{
			}
		}

		[Token(Token = "0x1700015C")]
		public float speed
		{
			[Token(Token = "0x6000AEC")]
			[Address(RVA = "0xE70060", Offset = "0xE70060", VA = "0xE70060")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000AED")]
			[Address(RVA = "0xE70068", Offset = "0xE70068", VA = "0xE70068")]
			set
			{
			}
		}

		[Token(Token = "0x1700015D")]
		public Vector3 windDirection
		{
			[Token(Token = "0x6000AEE")]
			[Address(RVA = "0xE70088", Offset = "0xE70088", VA = "0xE70088")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000AEF")]
			[Address(RVA = "0xE70094", Offset = "0xE70094", VA = "0xE70094")]
			set
			{
			}
		}

		[Token(Token = "0x1700015E")]
		public Color color
		{
			[Token(Token = "0x6000AF0")]
			[Address(RVA = "0xE70114", Offset = "0xE70114", VA = "0xE70114")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000AF1")]
			[Address(RVA = "0xE70120", Offset = "0xE70120", VA = "0xE70120")]
			set
			{
			}
		}

		[Token(Token = "0x1700015F")]
		public Color color2
		{
			[Token(Token = "0x6000AF2")]
			[Address(RVA = "0xE70198", Offset = "0xE70198", VA = "0xE70198")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000AF3")]
			[Address(RVA = "0xE701A4", Offset = "0xE701A4", VA = "0xE701A4")]
			set
			{
			}
		}

		[Token(Token = "0x17000160")]
		public float skyHaze
		{
			[Token(Token = "0x6000AF4")]
			[Address(RVA = "0xE7021C", Offset = "0xE7021C", VA = "0xE7021C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000AF5")]
			[Address(RVA = "0xE70224", Offset = "0xE70224", VA = "0xE70224")]
			set
			{
			}
		}

		[Token(Token = "0x17000161")]
		public float skySpeed
		{
			[Token(Token = "0x6000AF6")]
			[Address(RVA = "0xE70244", Offset = "0xE70244", VA = "0xE70244")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000AF7")]
			[Address(RVA = "0xE7024C", Offset = "0xE7024C", VA = "0xE7024C")]
			set
			{
			}
		}

		[Token(Token = "0x17000162")]
		public float skyNoiseStrength
		{
			[Token(Token = "0x6000AF8")]
			[Address(RVA = "0xE7026C", Offset = "0xE7026C", VA = "0xE7026C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000AF9")]
			[Address(RVA = "0xE70274", Offset = "0xE70274", VA = "0xE70274")]
			set
			{
			}
		}

		[Token(Token = "0x17000163")]
		public float skyAlpha
		{
			[Token(Token = "0x6000AFA")]
			[Address(RVA = "0xE70294", Offset = "0xE70294", VA = "0xE70294")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000AFB")]
			[Address(RVA = "0xE7029C", Offset = "0xE7029C", VA = "0xE7029C")]
			set
			{
			}
		}

		[Token(Token = "0x17000164")]
		public GameObject sun
		{
			[Token(Token = "0x6000AFC")]
			[Address(RVA = "0xE702BC", Offset = "0xE702BC", VA = "0xE702BC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AFD")]
			[Address(RVA = "0xE702C4", Offset = "0xE702C4", VA = "0xE702C4")]
			set
			{
			}
		}

		[Token(Token = "0x17000165")]
		public bool fogOfWarEnabled
		{
			[Token(Token = "0x6000AFE")]
			[Address(RVA = "0xE70380", Offset = "0xE70380", VA = "0xE70380")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000AFF")]
			[Address(RVA = "0xE70388", Offset = "0xE70388", VA = "0xE70388")]
			set
			{
			}
		}

		[Token(Token = "0x17000166")]
		public Vector3 fogOfWarCenter
		{
			[Token(Token = "0x6000B00")]
			[Address(RVA = "0xE703E4", Offset = "0xE703E4", VA = "0xE703E4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000B01")]
			[Address(RVA = "0xE703F0", Offset = "0xE703F0", VA = "0xE703F0")]
			set
			{
			}
		}

		[Token(Token = "0x17000167")]
		public Vector3 fogOfWarSize
		{
			[Token(Token = "0x6000B02")]
			[Address(RVA = "0xE70470", Offset = "0xE70470", VA = "0xE70470")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000B03")]
			[Address(RVA = "0xE7047C", Offset = "0xE7047C", VA = "0xE7047C")]
			set
			{
			}
		}

		[Token(Token = "0x17000168")]
		public int fogOfWarTextureSize
		{
			[Token(Token = "0x6000B04")]
			[Address(RVA = "0xE704FC", Offset = "0xE704FC", VA = "0xE704FC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000B05")]
			[Address(RVA = "0xE70504", Offset = "0xE70504", VA = "0xE70504")]
			set
			{
			}
		}

		[Token(Token = "0x17000169")]
		public bool useSinglePassStereoRenderingMatrix
		{
			[Token(Token = "0x6000B06")]
			[Address(RVA = "0xE70554", Offset = "0xE70554", VA = "0xE70554")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B07")]
			[Address(RVA = "0xE7055C", Offset = "0xE7055C", VA = "0xE7055C")]
			set
			{
			}
		}

		[Token(Token = "0x1700016A")]
		public bool useXZDistance
		{
			[Token(Token = "0x6000B08")]
			[Address(RVA = "0xE705B8", Offset = "0xE705B8", VA = "0xE705B8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B09")]
			[Address(RVA = "0xE705C0", Offset = "0xE705C0", VA = "0xE705C0")]
			set
			{
			}
		}

		[Token(Token = "0x1700016B")]
		public float scattering
		{
			[Token(Token = "0x6000B0A")]
			[Address(RVA = "0xE7061C", Offset = "0xE7061C", VA = "0xE7061C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000B0B")]
			[Address(RVA = "0xE70624", Offset = "0xE70624", VA = "0xE70624")]
			set
			{
			}
		}

		[Token(Token = "0x1700016C")]
		public Color scatteringColor
		{
			[Token(Token = "0x6000B0C")]
			[Address(RVA = "0xE70674", Offset = "0xE70674", VA = "0xE70674")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000B0D")]
			[Address(RVA = "0xE70680", Offset = "0xE70680", VA = "0xE70680")]
			set
			{
			}
		}

		[Token(Token = "0x1700016D")]
		public static DynamicFog instance
		{
			[Token(Token = "0x6000B0E")]
			[Address(RVA = "0xE70704", Offset = "0xE70704", VA = "0xE70704")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016E")]
		public Camera fogCamera
		{
			[Token(Token = "0x6000B10")]
			[Address(RVA = "0xE70964", Offset = "0xE70964", VA = "0xE70964")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B0F")]
		[Address(RVA = "0xE7086C", Offset = "0xE7086C", VA = "0xE7086C")]
		public string GetCurrentPresetName()
		{
			return null;
		}

		[Token(Token = "0x6000B11")]
		[Address(RVA = "0xE7096C", Offset = "0xE7096C", VA = "0xE7096C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000B12")]
		[Address(RVA = "0xE70A6C", Offset = "0xE70A6C", VA = "0xE70A6C")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000B13")]
		[Address(RVA = "0xE70A70", Offset = "0xE70A70", VA = "0xE70A70")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000B14")]
		[Address(RVA = "0xE70990", Offset = "0xE70990", VA = "0xE70990")]
		private void Init()
		{
		}

		[Token(Token = "0x6000B15")]
		[Address(RVA = "0xE70FF8", Offset = "0xE70FF8", VA = "0xE70FF8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B16")]
		[Address(RVA = "0xE72204", Offset = "0xE72204", VA = "0xE72204")]
		private void OnDidApplyAnimationProperties()
		{
		}

		[Token(Token = "0x6000B17")]
		[Address(RVA = "0xE72210", Offset = "0xE72210", VA = "0xE72210")]
		public void CheckPreset()
		{
		}

		[Token(Token = "0x6000B18")]
		[Address(RVA = "0xE72FC0", Offset = "0xE72FC0", VA = "0xE72FC0")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x6000B19")]
		[Address(RVA = "0xE73064", Offset = "0xE73064", VA = "0xE73064")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000B1A")]
		[Address(RVA = "0xE6F450", Offset = "0xE6F450", VA = "0xE6F450")]
		protected void ResetMaterial()
		{
		}

		[Token(Token = "0x6000B1B")]
		[Address(RVA = "0xE6F6C0", Offset = "0xE6F6C0", VA = "0xE6F6C0")]
		public void UpdateMaterialProperties()
		{
		}

		[Token(Token = "0x6000B1C")]
		[Address(RVA = "0xE6E638", Offset = "0xE6E638", VA = "0xE6E638")]
		protected void UpdateMaterialPropertiesNow()
		{
		}

		[Token(Token = "0x6000B1D")]
		[Address(RVA = "0xE733C0", Offset = "0xE733C0", VA = "0xE733C0")]
		private void CopyTransitionValues()
		{
		}

		[Token(Token = "0x6000B1E")]
		[Address(RVA = "0xE71D80", Offset = "0xE71D80", VA = "0xE71D80")]
		private void SetSkyData()
		{
		}

		[Token(Token = "0x6000B1F")]
		[Address(RVA = "0xE71E08", Offset = "0xE71E08", VA = "0xE71E08")]
		private void UpdateFogColor()
		{
		}

		[Token(Token = "0x6000B20")]
		[Address(RVA = "0xE733EC", Offset = "0xE733EC", VA = "0xE733EC")]
		public void SetTargetProfile(DynamicFogProfile targetProfile, float duration)
		{
		}

		[Token(Token = "0x6000B21")]
		[Address(RVA = "0xE735B4", Offset = "0xE735B4", VA = "0xE735B4")]
		public void ClearTargetProfile(float duration)
		{
		}

		[Token(Token = "0x6000B22")]
		[Address(RVA = "0xE735BC", Offset = "0xE735BC", VA = "0xE735BC")]
		public void SetTargetAlpha(float newFogAlpha, float newSkyHazeAlpha, float duration)
		{
		}

		[Token(Token = "0x6000B23")]
		[Address(RVA = "0xE73648", Offset = "0xE73648", VA = "0xE73648")]
		public void ClearTargetAlpha(float duration)
		{
		}

		[Token(Token = "0x6000B24")]
		[Address(RVA = "0xE73658", Offset = "0xE73658", VA = "0xE73658")]
		public void SetTargetColors(Color color1, Color color2, float duration)
		{
		}

		[Token(Token = "0x6000B25")]
		[Address(RVA = "0xE73750", Offset = "0xE73750", VA = "0xE73750")]
		public void ClearTargetColors(float duration)
		{
		}

		[Token(Token = "0x6000B26")]
		[Address(RVA = "0xE73788", Offset = "0xE73788", VA = "0xE73788")]
		public float GetFogOfWarAlpha(Vector3 worldPosition)
		{
			return default(float);
		}

		[Token(Token = "0x6000B27")]
		[Address(RVA = "0xE70EF0", Offset = "0xE70EF0", VA = "0xE70EF0")]
		private void UpdateFogOfWarTexture()
		{
		}

		[Token(Token = "0x6000B28")]
		[Address(RVA = "0xE73AF0", Offset = "0xE73AF0", VA = "0xE73AF0")]
		public void SetFogOfWarAlpha(Vector3 worldPosition, float radius, float fogNewAlpha)
		{
		}

		[Token(Token = "0x6000B29")]
		[Address(RVA = "0xE73EAC", Offset = "0xE73EAC", VA = "0xE73EAC")]
		public void ResetFogOfWarAlpha(Vector3 worldPosition, float radius)
		{
		}

		[Token(Token = "0x6000B2A")]
		[Address(RVA = "0xE73968", Offset = "0xE73968", VA = "0xE73968")]
		public void ResetFogOfWar()
		{
		}

		[Token(Token = "0x6000B2B")]
		[Address(RVA = "0xE73924", Offset = "0xE73924", VA = "0xE73924")]
		private int GetScaledSize(int size, float factor)
		{
			return default(int);
		}

		[Token(Token = "0x6000B2C")]
		[Address(RVA = "0xE6F528", Offset = "0xE6F528", VA = "0xE6F528")]
		public DynamicFogBase()
		{
		}
	}
	[Token(Token = "0x2000202")]
	[ImageEffectAllowedInSceneView]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x796B3C", Offset = "0x796B3C")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x796B3C", Offset = "0x796B3C")]
	public class DynamicFogExclusive : DynamicFogBase
	{
		[Token(Token = "0x4000D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private RenderTexture rt;

		[Token(Token = "0x4000D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79D2E4", Offset = "0x79D2E4")]
		public float renderScale;

		[Token(Token = "0x6000B2D")]
		[Address(RVA = "0xE7417C", Offset = "0xE7417C", VA = "0xE7417C")]
		private void OnPreRender()
		{
		}

		[Token(Token = "0x6000B2E")]
		[Address(RVA = "0xE74404", Offset = "0xE74404", VA = "0xE74404")]
		private void OnPostRender()
		{
		}

		[Token(Token = "0x6000B2F")]
		[Address(RVA = "0xE74740", Offset = "0xE74740", VA = "0xE74740")]
		public DynamicFogExclusive()
		{
		}
	}
	[Token(Token = "0x2000203")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x796BE0", Offset = "0x796BE0")]
	[ExecuteInEditMode]
	public class DynamicFogManager : MonoBehaviour
	{
		[Token(Token = "0x4000D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79D300", Offset = "0x79D300")]
		public float alpha;

		[Token(Token = "0x4000D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79D318", Offset = "0x79D318")]
		public float noiseStrength;

		[Token(Token = "0x4000D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79D330", Offset = "0x79D330")]
		public float distance;

		[Token(Token = "0x4000D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79D34C", Offset = "0x79D34C")]
		public float distanceFallOff;

		[Token(Token = "0x4000D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79D364", Offset = "0x79D364")]
		public float height;

		[Token(Token = "0x4000D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79D380", Offset = "0x79D380")]
		public float heightFallOff;

		[Token(Token = "0x4000D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float baselineHeight;

		[Token(Token = "0x4000D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Color color;

		[Token(Token = "0x4000D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject sun;

		[Token(Token = "0x4000D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Light sunLight;

		[Token(Token = "0x4000D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 sunDirection;

		[Token(Token = "0x4000D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Color sunColor;

		[Token(Token = "0x4000D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float sunIntensity;

		[Token(Token = "0x6000B30")]
		[Address(RVA = "0xE7474C", Offset = "0xE7474C", VA = "0xE7474C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000B31")]
		[Address(RVA = "0xE74794", Offset = "0xE74794", VA = "0xE74794")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000B32")]
		[Address(RVA = "0xE747B8", Offset = "0xE747B8", VA = "0xE747B8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B33")]
		[Address(RVA = "0xE74770", Offset = "0xE74770", VA = "0xE74770")]
		public void UpdateMaterialProperties()
		{
		}

		[Token(Token = "0x6000B34")]
		[Address(RVA = "0xE74B88", Offset = "0xE74B88", VA = "0xE74B88")]
		private void UpdateFogData()
		{
		}

		[Token(Token = "0x6000B35")]
		[Address(RVA = "0xE748F8", Offset = "0xE748F8", VA = "0xE748F8")]
		private void UpdateFogColor()
		{
		}

		[Token(Token = "0x6000B36")]
		[Address(RVA = "0xE74C78", Offset = "0xE74C78", VA = "0xE74C78")]
		public DynamicFogManager()
		{
		}
	}
	[Token(Token = "0x2000204")]
	[ExecuteInEditMode]
	public class DynamicFogOfWar : MonoBehaviour
	{
		[Token(Token = "0x4000D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int fogOfWarTextureSize;

		[Token(Token = "0x4000D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material fogMat;

		[Token(Token = "0x4000D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static DynamicFogOfWar _instance;

		[Token(Token = "0x4000D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Texture2D fogOfWarTexture;

		[Token(Token = "0x4000D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color32[] fogOfWarColorBuffer;

		[Token(Token = "0x1700016F")]
		public static DynamicFogOfWar instance
		{
			[Token(Token = "0x6000B37")]
			[Address(RVA = "0xE74D10", Offset = "0xE74D10", VA = "0xE74D10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B38")]
		[Address(RVA = "0xE74DFC", Offset = "0xE74DFC", VA = "0xE74DFC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000B39")]
		[Address(RVA = "0xE74F74", Offset = "0xE74F74", VA = "0xE74F74")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000B3A")]
		[Address(RVA = "0xE75034", Offset = "0xE75034", VA = "0xE75034")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B3B")]
		[Address(RVA = "0xE74E70", Offset = "0xE74E70", VA = "0xE74E70")]
		private void UpdateFogOfWarTexture()
		{
		}

		[Token(Token = "0x6000B3C")]
		[Address(RVA = "0xE75140", Offset = "0xE75140", VA = "0xE75140")]
		private int GetScaledSize(int size, float factor)
		{
			return default(int);
		}

		[Token(Token = "0x6000B3D")]
		[Address(RVA = "0xE7530C", Offset = "0xE7530C", VA = "0xE7530C")]
		public float GetFogOfWarAlpha(Vector3 worldPosition)
		{
			return default(float);
		}

		[Token(Token = "0x6000B3E")]
		[Address(RVA = "0xE75514", Offset = "0xE75514", VA = "0xE75514")]
		public void SetFogOfWarAlpha(Vector3 worldPosition, float radius, float fogNewAlpha)
		{
		}

		[Token(Token = "0x6000B3F")]
		[Address(RVA = "0xE75184", Offset = "0xE75184", VA = "0xE75184")]
		public void ResetFogOfWar()
		{
		}

		[Token(Token = "0x6000B40")]
		[Address(RVA = "0xE7594C", Offset = "0xE7594C", VA = "0xE7594C")]
		public void SetFogOfWarTerrainBoundary(Terrain terrain, float borderWidth)
		{
		}

		[Token(Token = "0x6000B41")]
		[Address(RVA = "0xE75B90", Offset = "0xE75B90", VA = "0xE75B90")]
		public DynamicFogOfWar()
		{
		}
	}
	[Token(Token = "0x2000205")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x796C3C", Offset = "0x796C3C")]
	public class DynamicFogProfile : ScriptableObject
	{
		[Token(Token = "0x4000D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FOG_TYPE effectType;

		[Token(Token = "0x4000D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool enableDithering;

		[Token(Token = "0x4000D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79D398", Offset = "0x79D398")]
		public float ditherStrength;

		[Token(Token = "0x4000D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79D3B4", Offset = "0x79D3B4")]
		public float alpha;

		[Token(Token = "0x4000D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79D3CC", Offset = "0x79D3CC")]
		public float noiseStrength;

		[Token(Token = "0x4000D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79D3E4", Offset = "0x79D3E4")]
		public float noiseScale;

		[Token(Token = "0x4000D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79D400", Offset = "0x79D400")]
		public float distance;

		[Token(Token = "0x4000D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79D41C", Offset = "0x79D41C")]
		public float distanceFallOff;

		[Token(Token = "0x4000D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79D438", Offset = "0x79D438")]
		public float maxDistance;

		[Token(Token = "0x4000D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79D454", Offset = "0x79D454")]
		public float maxDistanceFallOff;

		[Token(Token = "0x4000D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79D470", Offset = "0x79D470")]
		public float height;

		[Token(Token = "0x4000D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79D48C", Offset = "0x79D48C")]
		public float maxHeight;

		[Token(Token = "0x4000D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79D4A8", Offset = "0x79D4A8")]
		public float heightFallOff;

		[Token(Token = "0x4000D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float baselineHeight;

		[Token(Token = "0x4000D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool clipUnderBaseline;

		[Token(Token = "0x4000D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79D4C4", Offset = "0x79D4C4")]
		public float turbulence;

		[Token(Token = "0x4000D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79D4DC", Offset = "0x79D4DC")]
		public float speed;

		[Token(Token = "0x4000D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Vector3 windDirection;

		[Token(Token = "0x4000D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Color color;

		[Token(Token = "0x4000D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Color color2;

		[Token(Token = "0x4000D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79D4F4", Offset = "0x79D4F4")]
		public float skyHaze;

		[Token(Token = "0x4000D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79D510", Offset = "0x79D510")]
		public float skySpeed;

		[Token(Token = "0x4000D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79D528", Offset = "0x79D528")]
		public float skyNoiseStrength;

		[Token(Token = "0x4000D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79D540", Offset = "0x79D540")]
		public float skyAlpha;

		[Token(Token = "0x4000D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool useXZDistance;

		[Token(Token = "0x4000D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79D558", Offset = "0x79D558")]
		public float scattering;

		[Token(Token = "0x4000D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Color scatteringColor;

		[Token(Token = "0x6000B42")]
		[Address(RVA = "0xE6F83C", Offset = "0xE6F83C", VA = "0xE6F83C")]
		public void Load(DynamicFogBase fog)
		{
		}

		[Token(Token = "0x6000B43")]
		[Address(RVA = "0xE734C0", Offset = "0xE734C0", VA = "0xE734C0")]
		public void Save(DynamicFogBase fog)
		{
		}

		[Token(Token = "0x6000B44")]
		[Address(RVA = "0xE71614", Offset = "0xE71614", VA = "0xE71614")]
		public static void Lerp(DynamicFogProfile profile1, DynamicFogProfile profile2, float t, DynamicFogBase fog)
		{
		}

		[Token(Token = "0x6000B45")]
		[Address(RVA = "0xE75BA0", Offset = "0xE75BA0", VA = "0xE75BA0")]
		public DynamicFogProfile()
		{
		}
	}
	[Token(Token = "0x2000206")]
	public class FogVolume : MonoBehaviour
	{
		[Token(Token = "0x4000D5C")]
		private const float GRAY = 0.8901961f;

		[Token(Token = "0x4000D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79D570", Offset = "0x79D570")]
		public bool enableProfileTransition;

		[Token(Token = "0x4000D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79D5A8", Offset = "0x79D5A8")]
		public DynamicFogProfile targetProfile;

		[Token(Token = "0x4000D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79D5E0", Offset = "0x79D5E0")]
		public bool enableAlphaTransition;

		[Token(Token = "0x4000D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79D618", Offset = "0x79D618")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79D618", Offset = "0x79D618")]
		public float targetFogAlpha;

		[Token(Token = "0x4000D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79D66C", Offset = "0x79D66C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79D66C", Offset = "0x79D66C")]
		public float targetSkyHazeAlpha;

		[Token(Token = "0x4000D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79D6C0", Offset = "0x79D6C0")]
		public bool enableFogColorTransition;

		[Token(Token = "0x4000D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79D6F8", Offset = "0x79D6F8")]
		public Color targetFogColor1;

		[Token(Token = "0x4000D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79D730", Offset = "0x79D730")]
		public Color targetFogColor2;

		[Token(Token = "0x4000D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79D768", Offset = "0x79D768")]
		public float transitionDuration;

		[Token(Token = "0x4000D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79D7A0", Offset = "0x79D7A0")]
		public Collider targetCollider;

		[Token(Token = "0x4000D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79D7D8", Offset = "0x79D7D8")]
		public bool debugMode;

		[Token(Token = "0x4000D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79D810", Offset = "0x79D810")]
		public DynamicFog targetFog;

		[Token(Token = "0x4000D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool cameraInside;

		[Token(Token = "0x6000B46")]
		[Address(RVA = "0xE7DF8C", Offset = "0xE7DF8C", VA = "0xE7DF8C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B47")]
		[Address(RVA = "0xE7E068", Offset = "0xE7E068", VA = "0xE7E068")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000B48")]
		[Address(RVA = "0xE7E2DC", Offset = "0xE7E2DC", VA = "0xE7E2DC")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000B49")]
		[Address(RVA = "0xE7E530", Offset = "0xE7E530", VA = "0xE7E530")]
		public FogVolume()
		{
		}
	}
	[Token(Token = "0x2000207")]
	public static class VRCheck
	{
		[Token(Token = "0x4000D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<XRDisplaySubsystemDescriptor> displaysDescs;

		[Token(Token = "0x4000D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<XRDisplaySubsystem> displays;

		[Token(Token = "0x6000B4A")]
		[Address(RVA = "0xAC9488", Offset = "0xAC9488", VA = "0xAC9488")]
		public static bool IsActive()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B4B")]
		[Address(RVA = "0xAC9590", Offset = "0xAC9590", VA = "0xAC9590")]
		public static bool IsVrRunning()
		{
			return default(bool);
		}
	}
}
namespace VolumetricFogAndMist
{
	[Token(Token = "0x2000208")]
	public class DemoMultipleFogAreas : MonoBehaviour
	{
		[Token(Token = "0x6000B4D")]
		[Address(RVA = "0xB78C84", Offset = "0xB78C84", VA = "0xB78C84")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B4E")]
		[Address(RVA = "0xB78CE0", Offset = "0xB78CE0", VA = "0xB78CE0")]
		private void CreateCloud()
		{
		}

		[Token(Token = "0x6000B4F")]
		[Address(RVA = "0xB78E2C", Offset = "0xB78E2C", VA = "0xB78E2C")]
		private void CreateBoxFog()
		{
		}

		[Token(Token = "0x6000B50")]
		[Address(RVA = "0xB78FB8", Offset = "0xB78FB8", VA = "0xB78FB8")]
		public DemoMultipleFogAreas()
		{
		}
	}
	[Token(Token = "0x2000209")]
	public class DemoDepthBlur : MonoBehaviour
	{
		[Token(Token = "0x6000B51")]
		[Address(RVA = "0xB787A4", Offset = "0xB787A4", VA = "0xB787A4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B52")]
		[Address(RVA = "0xB78820", Offset = "0xB78820", VA = "0xB78820")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B53")]
		[Address(RVA = "0xB7887C", Offset = "0xB7887C", VA = "0xB7887C")]
		public DemoDepthBlur()
		{
		}
	}
	[Token(Token = "0x200020A")]
	[ExecuteInEditMode]
	public class CheckShadowDistance : MonoBehaviour
	{
		[Token(Token = "0x6000B54")]
		[Address(RVA = "0xF1C944", Offset = "0xF1C944", VA = "0xF1C944")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000B55")]
		[Address(RVA = "0xF1C97C", Offset = "0xF1C97C", VA = "0xF1C97C")]
		public CheckShadowDistance()
		{
		}
	}
	[Token(Token = "0x200020B")]
	public class DemoXYLights : MonoBehaviour
	{
		[Token(Token = "0x4000D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 attractionPos;

		[Token(Token = "0x4000D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3[] fairyDirections;

		[Token(Token = "0x6000B56")]
		[Address(RVA = "0xB799D0", Offset = "0xB799D0", VA = "0xB799D0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B57")]
		[Address(RVA = "0xB79BFC", Offset = "0xB79BFC", VA = "0xB79BFC")]
		public DemoXYLights()
		{
		}
	}
	[Token(Token = "0x200020C")]
	public class CameraMove : MonoBehaviour
	{
		[Token(Token = "0x6000B58")]
		[Address(RVA = "0xF0A784", Offset = "0xF0A784", VA = "0xF0A784")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B59")]
		[Address(RVA = "0xF0A8F0", Offset = "0xF0A8F0", VA = "0xF0A8F0")]
		public CameraMove()
		{
		}
	}
	[Token(Token = "0x200020D")]
	public class DemoWalk : MonoBehaviour
	{
		[Token(Token = "0x4000D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Text status;

		[Token(Token = "0x6000B5A")]
		[Address(RVA = "0xB796B8", Offset = "0xB796B8", VA = "0xB796B8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0xB797D4", Offset = "0xB797D4", VA = "0xB797D4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B5C")]
		[Address(RVA = "0xB799C8", Offset = "0xB799C8", VA = "0xB799C8")]
		public DemoWalk()
		{
		}
	}
	[Token(Token = "0x200020E")]
	public class DemoFogOfWar : MonoBehaviour
	{
		[Token(Token = "0x4000D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool fogCuttingOn;

		[Token(Token = "0x4000D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private VolumetricFog fog;

		[Token(Token = "0x4000D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Text status;

		[Token(Token = "0x6000B5D")]
		[Address(RVA = "0xB78884", Offset = "0xB78884", VA = "0xB78884")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B5E")]
		[Address(RVA = "0xB78948", Offset = "0xB78948", VA = "0xB78948")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B5F")]
		[Address(RVA = "0xB78BD0", Offset = "0xB78BD0", VA = "0xB78BD0")]
		private void AssignCustomTexture()
		{
		}

		[Token(Token = "0x6000B60")]
		[Address(RVA = "0xB78C74", Offset = "0xB78C74", VA = "0xB78C74")]
		public DemoFogOfWar()
		{
		}
	}
	[Token(Token = "0x200020F")]
	public class DemoPointLight : MonoBehaviour
	{
		[Token(Token = "0x4000D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 attractionPos;

		[Token(Token = "0x4000D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3[] fairyDirections;

		[Token(Token = "0x6000B61")]
		[Address(RVA = "0xB78FC0", Offset = "0xB78FC0", VA = "0xB78FC0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B62")]
		[Address(RVA = "0xB79114", Offset = "0xB79114", VA = "0xB79114")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B63")]
		[Address(RVA = "0xB7936C", Offset = "0xB7936C", VA = "0xB7936C")]
		public DemoPointLight()
		{
		}
	}
	[Token(Token = "0x2000210")]
	public class DemoShafts : MonoBehaviour
	{
		[Token(Token = "0x4000D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private VolumetricFog fog;

		[Token(Token = "0x6000B64")]
		[Address(RVA = "0xB79388", Offset = "0xB79388", VA = "0xB79388")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B65")]
		[Address(RVA = "0xB793B8", Offset = "0xB793B8", VA = "0xB793B8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B66")]
		[Address(RVA = "0xB79580", Offset = "0xB79580", VA = "0xB79580")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6000B67")]
		[Address(RVA = "0xB796B0", Offset = "0xB796B0", VA = "0xB796B0")]
		public DemoShafts()
		{
		}
	}
	[Token(Token = "0x2000211")]
	public class FreeCameraMove : MonoBehaviour
	{
		[Token(Token = "0x4000D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float cameraSensitivity;

		[Token(Token = "0x4000D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float climbSpeed;

		[Token(Token = "0x4000D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float normalMoveSpeed;

		[Token(Token = "0x4000D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float slowMoveFactor;

		[Token(Token = "0x4000D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fastMoveFactor;

		[Token(Token = "0x4000D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float rotationX;

		[Token(Token = "0x4000D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float rotationY;

		[Token(Token = "0x6000B68")]
		[Address(RVA = "0xCE6C24", Offset = "0xCE6C24", VA = "0xCE6C24")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B69")]
		[Address(RVA = "0xCE72DC", Offset = "0xCE72DC", VA = "0xCE72DC")]
		public FreeCameraMove()
		{
		}
	}
	[Token(Token = "0x2000212")]
	public class DemoBoxedArea : MonoBehaviour
	{
		[Token(Token = "0x6000B6A")]
		[Address(RVA = "0xB78634", Offset = "0xB78634", VA = "0xB78634")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B6B")]
		[Address(RVA = "0xB78698", Offset = "0xB78698", VA = "0xB78698")]
		public DemoBoxedArea()
		{
		}
	}
	[Token(Token = "0x2000213")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x796CB8", Offset = "0x796CB8")]
	public class FogAreaCullingManager : MonoBehaviour
	{
		[Token(Token = "0x4000D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VolumetricFog fog;

		[Token(Token = "0x6000B6C")]
		[Address(RVA = "0xE7D758", Offset = "0xE7D758", VA = "0xE7D758")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000B6D")]
		[Address(RVA = "0xE7D884", Offset = "0xE7D884", VA = "0xE7D884")]
		private void OnBecameVisible()
		{
		}

		[Token(Token = "0x6000B6E")]
		[Address(RVA = "0xE7D918", Offset = "0xE7D918", VA = "0xE7D918")]
		private void OnBecameInvisible()
		{
		}

		[Token(Token = "0x6000B6F")]
		[Address(RVA = "0xE7D9AC", Offset = "0xE7D9AC", VA = "0xE7D9AC")]
		public FogAreaCullingManager()
		{
		}
	}
	[Token(Token = "0x2000214")]
	[ExecuteInEditMode]
	public class FogOfWarHole : MonoBehaviour
	{
		[Token(Token = "0x2000215")]
		public enum HoleShape
		{
			[Token(Token = "0x4000D85")]
			Disc,
			[Token(Token = "0x4000D86")]
			Box
		}

		[Token(Token = "0x4000D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VolumetricFog fog;

		[Token(Token = "0x4000D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HoleShape shape;

		[Token(Token = "0x4000D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79D848", Offset = "0x79D848")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79D848", Offset = "0x79D848")]
		public float alpha;

		[Token(Token = "0x4000D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79D89C", Offset = "0x79D89C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79D89C", Offset = "0x79D89C")]
		public float smoothness;

		[Token(Token = "0x4000D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private HoleShape lastShape;

		[Token(Token = "0x4000D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 lastPosition;

		[Token(Token = "0x4000D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 lastScale;

		[Token(Token = "0x6000B70")]
		[Address(RVA = "0xE7D9B4", Offset = "0xE7D9B4", VA = "0xE7D9B4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B71")]
		[Address(RVA = "0xE7DCE8", Offset = "0xE7DCE8", VA = "0xE7DCE8")]
		private void RestoreHole(Vector3 position, HoleShape shape, float sizeX, float sizeZ)
		{
		}

		[Token(Token = "0x6000B72")]
		[Address(RVA = "0xE7DAD8", Offset = "0xE7DAD8", VA = "0xE7DAD8")]
		private void StampHole(Vector3 position, HoleShape shape, float sizeX, float sizeZ)
		{
		}

		[Token(Token = "0x6000B73")]
		[Address(RVA = "0xE7DE90", Offset = "0xE7DE90", VA = "0xE7DE90")]
		public void Refresh()
		{
		}

		[Token(Token = "0x6000B74")]
		[Address(RVA = "0xE7DF4C", Offset = "0xE7DF4C", VA = "0xE7DF4C")]
		public FogOfWarHole()
		{
		}
	}
	[Token(Token = "0x2000216")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x796D00", Offset = "0x796D00")]
	public class FogVolume : MonoBehaviour
	{
		[Token(Token = "0x4000D87")]
		private const float GRAY = 0.8901961f;

		[Token(Token = "0x4000D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79D8F0", Offset = "0x79D8F0")]
		public bool enableProfileTransition;

		[Token(Token = "0x4000D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79D928", Offset = "0x79D928")]
		public VolumetricFogProfile targetProfile;

		[Token(Token = "0x4000D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79D960", Offset = "0x79D960")]
		public bool enableAlphaTransition;

		[Token(Token = "0x4000D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79D998", Offset = "0x79D998")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79D998", Offset = "0x79D998")]
		public float targetFogAlpha;

		[Token(Token = "0x4000D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79D9EC", Offset = "0x79D9EC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79D9EC", Offset = "0x79D9EC")]
		public float targetSkyHazeAlpha;

		[Token(Token = "0x4000D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79DA40", Offset = "0x79DA40")]
		public bool enableFogColorTransition;

		[Token(Token = "0x4000D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79DA78", Offset = "0x79DA78")]
		public Color targetFogColor;

		[Token(Token = "0x4000D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79DAB0", Offset = "0x79DAB0")]
		public bool enableFogSpecularColorTransition;

		[Token(Token = "0x4000D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79DAE8", Offset = "0x79DAE8")]
		public Color targetFogSpecularColor;

		[Token(Token = "0x4000D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79DB20", Offset = "0x79DB20")]
		public bool enableLightColorTransition;

		[Token(Token = "0x4000D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79DB58", Offset = "0x79DB58")]
		public Color targetLightColor;

		[Token(Token = "0x4000D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79DB90", Offset = "0x79DB90")]
		public float transitionDuration;

		[Token(Token = "0x4000D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79DBC8", Offset = "0x79DBC8")]
		public Collider targetCollider;

		[Token(Token = "0x4000D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79DC00", Offset = "0x79DC00")]
		public bool debugMode;

		[Token(Token = "0x4000D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79DC38", Offset = "0x79DC38")]
		public VolumetricFog targetFog;

		[Token(Token = "0x4000D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool cameraInside;

		[Token(Token = "0x6000B75")]
		[Address(RVA = "0xCE5594", Offset = "0xCE5594", VA = "0xCE5594")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B76")]
		[Address(RVA = "0xCE567C", Offset = "0xCE567C", VA = "0xCE567C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000B77")]
		[Address(RVA = "0xCE592C", Offset = "0xCE592C", VA = "0xCE592C")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000B78")]
		[Address(RVA = "0xCE5BB8", Offset = "0xCE5BB8", VA = "0xCE5BB8")]
		public FogVolume()
		{
		}
	}
	[Token(Token = "0x2000217")]
	internal interface IVolumetricFogRenderComponent
	{
		[Token(Token = "0x17000170")]
		VolumetricFog fog
		{
			[Token(Token = "0x6000B79")]
			get;
			[Token(Token = "0x6000B7A")]
			set;
		}

		[Token(Token = "0x6000B7B")]
		void DestroySelf();
	}
	[Token(Token = "0x2000218")]
	[ExecuteInEditMode]
	public class ShadowMapCopy : MonoBehaviour
	{
		[Token(Token = "0x4000D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Light m_Light;

		[Token(Token = "0x4000D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CommandBuffer cb;

		[Token(Token = "0x6000B7C")]
		[Address(RVA = "0xC91A64", Offset = "0xC91A64", VA = "0xC91A64")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000B7D")]
		[Address(RVA = "0xC91C58", Offset = "0xC91C58", VA = "0xC91C58")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000B7E")]
		[Address(RVA = "0xC91CF0", Offset = "0xC91CF0", VA = "0xC91CF0")]
		public ShadowMapCopy()
		{
		}
	}
	[Token(Token = "0x2000219")]
	public enum FOG_PRESET
	{
		[Token(Token = "0x4000D9B")]
		Clear = 0,
		[Token(Token = "0x4000D9C")]
		Mist = 10,
		[Token(Token = "0x4000D9D")]
		WindyMist = 11,
		[Token(Token = "0x4000D9E")]
		LowClouds = 20,
		[Token(Token = "0x4000D9F")]
		SeaClouds = 21,
		[Token(Token = "0x4000DA0")]
		GroundFog = 30,
		[Token(Token = "0x4000DA1")]
		FrostedGround = 31,
		[Token(Token = "0x4000DA2")]
		FoggyLake = 32,
		[Token(Token = "0x4000DA3")]
		Fog = 41,
		[Token(Token = "0x4000DA4")]
		HeavyFog = 42,
		[Token(Token = "0x4000DA5")]
		SandStorm1 = 50,
		[Token(Token = "0x4000DA6")]
		Smoke = 51,
		[Token(Token = "0x4000DA7")]
		ToxicSwamp = 52,
		[Token(Token = "0x4000DA8")]
		SandStorm2 = 53,
		[Token(Token = "0x4000DA9")]
		WorldEdge = 200,
		[Token(Token = "0x4000DAA")]
		Custom = 1000
	}
	[Token(Token = "0x200021A")]
	public enum SPSR_BEHAVIOUR
	{
		[Token(Token = "0x4000DAC")]
		AutoDetect,
		[Token(Token = "0x4000DAD")]
		ForcedOn,
		[Token(Token = "0x4000DAE")]
		ForcedOff
	}
	[Token(Token = "0x200021B")]
	public enum TRANSPARENT_MODE
	{
		[Token(Token = "0x4000DB0")]
		None,
		[Token(Token = "0x4000DB1")]
		Blend
	}
	[Token(Token = "0x200021C")]
	public enum COMPUTE_DEPTH_SCOPE
	{
		[Token(Token = "0x4000DB3")]
		OnlyTreeBillboards,
		[Token(Token = "0x4000DB4")]
		EverythingInLayer,
		[Token(Token = "0x4000DB5")]
		TreeBillboardsAndTransparentObjects
	}
	[Token(Token = "0x200021D")]
	public enum LIGHTING_MODEL
	{
		[Token(Token = "0x4000DB7")]
		Classic,
		[Token(Token = "0x4000DB8")]
		Natural,
		[Token(Token = "0x4000DB9")]
		SingleLight
	}
	[Token(Token = "0x200021E")]
	public enum SUN_SHADOWS_BAKE_MODE
	{
		[Token(Token = "0x4000DBB")]
		Realtime,
		[Token(Token = "0x4000DBC")]
		Discrete
	}
	[Token(Token = "0x200021F")]
	public enum FOG_VOID_TOPOLOGY
	{
		[Token(Token = "0x4000DBE")]
		Sphere,
		[Token(Token = "0x4000DBF")]
		Box
	}
	[Token(Token = "0x2000220")]
	public enum FOG_AREA_TOPOLOGY
	{
		[Token(Token = "0x4000DC1")]
		Sphere = 1,
		[Token(Token = "0x4000DC2")]
		Box
	}
	[Token(Token = "0x2000221")]
	public enum FOG_AREA_SORTING_MODE
	{
		[Token(Token = "0x4000DC4")]
		DistanceToCamera,
		[Token(Token = "0x4000DC5")]
		Altitude,
		[Token(Token = "0x4000DC6")]
		Fixed
	}
	[Token(Token = "0x2000222")]
	public enum FOG_AREA_FOLLOW_MODE
	{
		[Token(Token = "0x4000DC8")]
		FullXYZ,
		[Token(Token = "0x4000DC9")]
		RestrictToXZPlane
	}
	[Token(Token = "0x2000223")]
	public enum FOG_VISIBILITY_SCOPE
	{
		[Token(Token = "0x4000DCB")]
		Global,
		[Token(Token = "0x4000DCC")]
		Volume
	}
	[Token(Token = "0x2000224")]
	public struct FOG_TEMPORARY_PROPERTIES
	{
		[Token(Token = "0x4000DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Color color;

		[Token(Token = "0x4000DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float density;
	}
	[Token(Token = "0x2000225")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x796D48", Offset = "0x796D48")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x796D48", Offset = "0x796D48")]
	[ExecuteInEditMode]
	public class VolumetricFog : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000226")]
		public struct PointLightParams
		{
			[Token(Token = "0x4000EED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Light light;

			[Token(Token = "0x4000EEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[HideInInspector]
			public VolumetricFogLightParams lightParams;

			[Token(Token = "0x4000EEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float range;

			[Token(Token = "0x4000EF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float rangeMultiplier;

			[Token(Token = "0x4000EF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float intensity;

			[Token(Token = "0x4000EF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float intensityMultiplier;

			[Token(Token = "0x4000EF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 position;

			[Token(Token = "0x4000EF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Color color;
		}

		[Token(Token = "0x2000227")]
		private static class VRCheck
		{
			[Token(Token = "0x4000EF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static List<XRDisplaySubsystemDescriptor> displaysDescs;

			[Token(Token = "0x4000EF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private static List<XRDisplaySubsystem> displays;

			[Token(Token = "0x6000CFC")]
			[Address(RVA = "0x1E7EA08", Offset = "0x1E7EA08", VA = "0x1E7EA08")]
			public static bool IsActive()
			{
				return default(bool);
			}

			[Token(Token = "0x6000CFD")]
			[Address(RVA = "0x1E7EB10", Offset = "0x1E7EB10", VA = "0x1E7EB10")]
			public static bool IsVrRunning()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000228")]
		private struct FogOfWarTransition
		{
			[Token(Token = "0x4000EF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool enabled;

			[Token(Token = "0x4000EF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int x;

			[Token(Token = "0x4000EF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int y;

			[Token(Token = "0x4000EFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float startTime;

			[Token(Token = "0x4000EFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float startDelay;

			[Token(Token = "0x4000EFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float duration;

			[Token(Token = "0x4000EFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int initialAlpha;

			[Token(Token = "0x4000EFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int targetAlpha;
		}

		[Token(Token = "0x2000229")]
		private static class ShaderParams
		{
			[Token(Token = "0x4000EFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static int FogWindDir;

			[Token(Token = "0x4000F00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public static int FogSkyData;

			[Token(Token = "0x4000F01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static int LightMatrix;

			[Token(Token = "0x4000F02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public static int CookieSize;

			[Token(Token = "0x4000F03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static int CookieTex;

			[Token(Token = "0x4000F04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public static int FlickerFreeCamPos;

			[Token(Token = "0x4000F05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static int ClipDir;

			[Token(Token = "0x4000F06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public static int ClipToWorld;

			[Token(Token = "0x4000F07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static int ShaftTex;

			[Token(Token = "0x4000F08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public static int DownsampledDepth;

			[Token(Token = "0x4000F09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static int MainTex;

			[Token(Token = "0x4000F0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public static int FogDownsampled;

			[Token(Token = "0x4000F0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static int FogPointLightColor;

			[Token(Token = "0x4000F0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public static int FogPointLightPosition;

			[Token(Token = "0x4000F0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static int ScreenMaskTexture;

			[Token(Token = "0x4000F0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public static int SunPosition;

			[Token(Token = "0x4000F0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static int SunPositionRightEye;

			[Token(Token = "0x4000F10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public static int FogScatteringData;

			[Token(Token = "0x4000F11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public static int FogScatteringData2;

			[Token(Token = "0x4000F12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public static int SunDir;

			[Token(Token = "0x4000F13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public static int SunColor;

			[Token(Token = "0x4000F14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public static int FogSkyColor;

			[Token(Token = "0x4000F15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public static int FogSkyNoiseScale;

			[Token(Token = "0x4000F16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public static int NoiseTex;

			[Token(Token = "0x4000F17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public static int FogData;

			[Token(Token = "0x4000F18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			public static int FogSkyHaze;

			[Token(Token = "0x4000F19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public static int FogVoidPosition;

			[Token(Token = "0x4000F1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			public static int FogAreaPosition;

			[Token(Token = "0x4000F1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public static int DeepObscurance;

			[Token(Token = "0x4000F1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			public static int Jitter;

			[Token(Token = "0x4000F1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public static int FogStepping;

			[Token(Token = "0x4000F1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			public static int FogAlpha;

			[Token(Token = "0x4000F1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public static int FogDistance;

			[Token(Token = "0x4000F20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			public static int FogVoidData;

			[Token(Token = "0x4000F21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public static int FogAreaData;

			[Token(Token = "0x4000F22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			public static int FogOfWarTexture;

			[Token(Token = "0x4000F23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public static int FogOfWarCenter;

			[Token(Token = "0x4000F24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
			public static int FogOfWarSize;

			[Token(Token = "0x4000F25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			public static int FogOfWarCenterAdjusted;

			[Token(Token = "0x4000F26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
			public static int PointLightsInsideAtten;

			[Token(Token = "0x4000F27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			public static int FogBlurDepth;

			[Token(Token = "0x4000F28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
			public static int VFM_CutOff;

			[Token(Token = "0x4000F29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			public static int FogColor;

			[Token(Token = "0x4000F2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
			public static int BlurDepth;

			[Token(Token = "0x4000F2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			public static int BlurTex;

			[Token(Token = "0x4000F2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
			public static int Amount;

			[Token(Token = "0x4000F2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public static int GlobalDepthTexture;

			[Token(Token = "0x4000F2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
			public static int GlobalShadowBias;

			[Token(Token = "0x4000F2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public static int GlobalSunProjection;

			[Token(Token = "0x4000F30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
			public static int GlobalSunDepthTexture;

			[Token(Token = "0x4000F31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			public static int GlobalSunWorldPos;

			[Token(Token = "0x4000F32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
			public static int GlobalSunShadowsData;
		}

		[Serializable]
		[Token(Token = "0x200022A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x796DB8", Offset = "0x796DB8")]
		private sealed class <>c
		{
			[Token(Token = "0x4000F33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000F34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<VolumetricFog> <>9__638_0;

			[Token(Token = "0x6000D01")]
			[Address(RVA = "0x1E7DF58", Offset = "0x1E7DF58", VA = "0x1E7DF58")]
			public <>c()
			{
			}

			[Token(Token = "0x6000D02")]
			[Address(RVA = "0x1E7DF60", Offset = "0x1E7DF60", VA = "0x1E7DF60")]
			internal int <Update>b__638_0(VolumetricFog x, VolumetricFog y)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4000DCF")]
		public const string SKW_FOG_DISTANCE_ON = "FOG_DISTANCE_ON";

		[Token(Token = "0x4000DD0")]
		public const string SKW_LIGHT_SCATTERING = "FOG_SCATTERING_ON";

		[Token(Token = "0x4000DD1")]
		public const string SKW_FOG_AREA_BOX = "FOG_AREA_BOX";

		[Token(Token = "0x4000DD2")]
		public const string SKW_FOG_AREA_SPHERE = "FOG_AREA_SPHERE";

		[Token(Token = "0x4000DD3")]
		public const string SKW_FOG_VOID_BOX = "FOG_VOID_BOX";

		[Token(Token = "0x4000DD4")]
		public const string SKW_FOG_VOID_SPHERE = "FOG_VOID_SPHERE";

		[Token(Token = "0x4000DD5")]
		public const string SKW_FOG_HAZE_ON = "FOG_HAZE_ON";

		[Token(Token = "0x4000DD6")]
		public const string SKW_FOG_OF_WAR_ON = "FOG_OF_WAR_ON";

		[Token(Token = "0x4000DD7")]
		public const string SKW_FOG_BLUR = "FOG_BLUR_ON";

		[Token(Token = "0x4000DD8")]
		public const string SKW_SUN_SHADOWS = "FOG_SUN_SHADOWS_ON";

		[Token(Token = "0x4000DD9")]
		public const string SKW_FOG_USE_XY_PLANE = "FOG_USE_XY_PLANE";

		[Token(Token = "0x4000DDA")]
		public const string SKW_FOG_COMPUTE_DEPTH = "FOG_COMPUTE_DEPTH";

		[Token(Token = "0x4000DDB")]
		public const string SKW_POINT_LIGHTS = "FOG_POINT_LIGHTS";

		[Token(Token = "0x4000DDC")]
		private const string DEPTH_CAM_NAME = "VFMDepthCamera";

		[Token(Token = "0x4000DDD")]
		private const string DEPTH_SUN_CAM_NAME = "VFMDepthSunCamera";

		[Token(Token = "0x4000DDE")]
		private const string VFM_BUILD_FIRST_INSTALL = "VFMFirstInstall";

		[Token(Token = "0x4000DDF")]
		private const string VFM_BUILD_HINT = "VFMBuildHint109RC2";

		[Token(Token = "0x4000DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static VolumetricFog _fog;

		[Token(Token = "0x4000DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public bool isDirty;

		[Token(Token = "0x4000DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private FOG_PRESET _preset;

		[Token(Token = "0x4000DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private VolumetricFogProfile _profile;

		[Token(Token = "0x4000DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool _profileSync;

		[Token(Token = "0x4000DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		private bool _useFogVolumes;

		[Token(Token = "0x4000DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		[SerializeField]
		private bool _debugPass;

		[Token(Token = "0x4000DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		[SerializeField]
		private bool _showInSceneView;

		[Token(Token = "0x4000DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private TRANSPARENT_MODE _transparencyBlendMode;

		[Token(Token = "0x4000DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79DCF0", Offset = "0x79DCF0")]
		private float _transparencyBlendPower;

		[Token(Token = "0x4000DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private LayerMask _transparencyLayerMask;

		[Token(Token = "0x4000DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private FOG_VISIBILITY_SCOPE _visibilityScope;

		[Token(Token = "0x4000DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private Bounds _visibilityVolume;

		[Token(Token = "0x4000DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private LIGHTING_MODEL _lightingModel;

		[Token(Token = "0x4000DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private bool _enableMultipleCameras;

		[Token(Token = "0x4000DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		[SerializeField]
		private bool _computeDepth;

		[Token(Token = "0x4000DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private COMPUTE_DEPTH_SCOPE _computeDepthScope;

		[Token(Token = "0x4000DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private float _transparencyCutOff;

		[Token(Token = "0x4000DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private bool _renderBeforeTransparent;

		[Token(Token = "0x4000DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _sun;

		[Token(Token = "0x4000DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79DDD0", Offset = "0x79DDD0")]
		private float _timeBetweenTextureUpdates;

		[Token(Token = "0x4000DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private bool _sunCopyColor;

		[Token(Token = "0x4000DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79DE20", Offset = "0x79DE20")]
		[SerializeField]
		private float _density;

		[Token(Token = "0x4000DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79DE60", Offset = "0x79DE60")]
		private float _noiseStrength;

		[Token(Token = "0x4000DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79DEA0", Offset = "0x79DEA0")]
		private float _noiseFinalMultiplier;

		[Token(Token = "0x4000DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79DEE0", Offset = "0x79DEE0")]
		private float _noiseSparse;

		[Token(Token = "0x4000DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79DF24", Offset = "0x79DF24")]
		[SerializeField]
		private float _distance;

		[Token(Token = "0x4000DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		private float _maxFogLength;

		[Token(Token = "0x4000DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79DF78", Offset = "0x79DF78")]
		private float _maxFogLengthFallOff;

		[Token(Token = "0x4000DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79DFB8", Offset = "0x79DFB8")]
		private float _distanceFallOff;

		[Token(Token = "0x4000DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79DFF8", Offset = "0x79DFF8")]
		[SerializeField]
		private float _height;

		[Token(Token = "0x4000DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79E040", Offset = "0x79E040")]
		[SerializeField]
		private float _heightFallOff;

		[Token(Token = "0x4000E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private float _deepObscurance;

		[Token(Token = "0x4000E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		private float _baselineHeight;

		[Token(Token = "0x4000E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private bool _baselineRelativeToCamera;

		[Token(Token = "0x4000E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79E0B0", Offset = "0x79E0B0")]
		[SerializeField]
		private float _baselineRelativeToCameraDelay;

		[Token(Token = "0x4000E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private float _noiseScale;

		[Token(Token = "0x4000E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79E100", Offset = "0x79E100")]
		[SerializeField]
		private float _alpha;

		[Token(Token = "0x4000E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private Color _color;

		[Token(Token = "0x4000E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private Color _specularColor;

		[Token(Token = "0x4000E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79E164", Offset = "0x79E164")]
		[SerializeField]
		private float _specularThreshold;

		[Token(Token = "0x4000E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79E1A4", Offset = "0x79E1A4")]
		private float _specularIntensity;

		[Token(Token = "0x4000E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private Vector3 _lightDirection;

		[Token(Token = "0x4000E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[SerializeField]
		private float _lightIntensity;

		[Token(Token = "0x4000E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private Color _lightColor;

		[Token(Token = "0x4000E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79E214", Offset = "0x79E214")]
		[SerializeField]
		private int _updateTextureSpread;

		[Token(Token = "0x4000E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79E254", Offset = "0x79E254")]
		[SerializeField]
		private float _speed;

		[Token(Token = "0x4000E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private Vector3 _windDirection;

		[Token(Token = "0x4000E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		[SerializeField]
		private bool _useRealTime;

		[Token(Token = "0x4000E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private Color _skyColor;

		[Token(Token = "0x4000E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private float _skyHaze;

		[Token(Token = "0x4000E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[SerializeField]
		private float _skyNoiseScale;

		[Token(Token = "0x4000E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79E2E4", Offset = "0x79E2E4")]
		private float _skySpeed;

		[Token(Token = "0x4000E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79E324", Offset = "0x79E324")]
		private float _skyNoiseStrength;

		[Token(Token = "0x4000E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79E364", Offset = "0x79E364")]
		private float _skyAlpha;

		[Token(Token = "0x4000E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79E3A4", Offset = "0x79E3A4")]
		[SerializeField]
		private float _skyDepth;

		[Token(Token = "0x4000E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private GameObject _character;

		[Token(Token = "0x4000E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private FOG_VOID_TOPOLOGY _fogVoidTopology;

		[Token(Token = "0x4000E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79E408", Offset = "0x79E408")]
		private float _fogVoidFallOff;

		[Token(Token = "0x4000E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private float _fogVoidRadius;

		[Token(Token = "0x4000E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		[SerializeField]
		private Vector3 _fogVoidPosition;

		[Token(Token = "0x4000E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		private float _fogVoidDepth;

		[Token(Token = "0x4000E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		[SerializeField]
		private float _fogVoidHeight;

		[Token(Token = "0x4000E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		private bool _fogVoidInverted;

		[Token(Token = "0x4000E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x169")]
		[SerializeField]
		private bool _fogVoidShowGizmos;

		[Token(Token = "0x4000E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16A")]
		[SerializeField]
		private bool _fogAreaShowGizmos;

		[Token(Token = "0x4000E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[SerializeField]
		private GameObject _fogAreaCenter;

		[Token(Token = "0x4000E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79E4C8", Offset = "0x79E4C8")]
		private float _fogAreaFallOff;

		[Token(Token = "0x4000E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		[SerializeField]
		private FOG_AREA_FOLLOW_MODE _fogAreaFollowMode;

		[Token(Token = "0x4000E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[SerializeField]
		private FOG_AREA_TOPOLOGY _fogAreaTopology;

		[Token(Token = "0x4000E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		[SerializeField]
		private float _fogAreaRadius;

		[Token(Token = "0x4000E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[SerializeField]
		private Vector3 _fogAreaPosition;

		[Token(Token = "0x4000E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		[SerializeField]
		private float _fogAreaDepth;

		[Token(Token = "0x4000E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[SerializeField]
		private float _fogAreaHeight;

		[Token(Token = "0x4000E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		[SerializeField]
		private FOG_AREA_SORTING_MODE _fogAreaSortingMode;

		[Token(Token = "0x4000E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[SerializeField]
		private int _fogAreaRenderOrder;

		[Token(Token = "0x4000E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public PointLightParams[] pointLightParams;

		[Token(Token = "0x4000E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[SerializeField]
		private bool pointLightDataMigrated;

		[Token(Token = "0x4000E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private Vector4[] pointLightColorBuffer;

		[Token(Token = "0x4000E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private Vector4[] pointLightPositionBuffer;

		[Token(Token = "0x4000E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[SerializeField]
		private GameObject[] _pointLights;

		[Token(Token = "0x4000E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[SerializeField]
		private float[] _pointLightRanges;

		[Token(Token = "0x4000E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[SerializeField]
		private float[] _pointLightIntensities;

		[Token(Token = "0x4000E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[SerializeField]
		private float[] _pointLightIntensitiesMultiplier;

		[Token(Token = "0x4000E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[SerializeField]
		private Vector3[] _pointLightPositions;

		[Token(Token = "0x4000E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[SerializeField]
		private Color[] _pointLightColors;

		[Token(Token = "0x4000E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[SerializeField]
		private bool _pointLightTrackingAuto;

		[Token(Token = "0x4000E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		[SerializeField]
		private Transform _pointLightTrackingPivot;

		[Token(Token = "0x4000E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		[SerializeField]
		private int _pointLightTrackingCount;

		[Token(Token = "0x4000E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79E62C", Offset = "0x79E62C")]
		private float _pointLightTrackingCheckInterval;

		[Token(Token = "0x4000E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		[SerializeField]
		private float _pointLightTrackingNewLightsCheckInterval;

		[Token(Token = "0x4000E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		[SerializeField]
		private float _pointLightInscattering;

		[Token(Token = "0x4000E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		[SerializeField]
		private float _pointLightIntensity;

		[Token(Token = "0x4000E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
		[SerializeField]
		private float _pointLightInsideAtten;

		[Token(Token = "0x4000E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79E6AC", Offset = "0x79E6AC")]
		private int _downsampling;

		[Token(Token = "0x4000E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
		[SerializeField]
		private bool _forceComposition;

		[Token(Token = "0x4000E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x225")]
		[SerializeField]
		private bool _edgeImprove;

		[Token(Token = "0x4000E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79E70C", Offset = "0x79E70C")]
		[SerializeField]
		private float _edgeThreshold;

		[Token(Token = "0x4000E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79E754", Offset = "0x79E754")]
		[SerializeField]
		private float _stepping;

		[Token(Token = "0x4000E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79E794", Offset = "0x79E794")]
		[SerializeField]
		private float _steppingNear;

		[Token(Token = "0x4000E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
		[SerializeField]
		private bool _dithering;

		[Token(Token = "0x4000E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79E7E8", Offset = "0x79E7E8")]
		private float _ditherStrength;

		[Token(Token = "0x4000E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79E82C", Offset = "0x79E82C")]
		private float _jitterStrength;

		[Token(Token = "0x4000E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		[SerializeField]
		private bool _lightScatteringEnabled;

		[Token(Token = "0x4000E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79E87C", Offset = "0x79E87C")]
		private float _lightScatteringDiffusion;

		[Token(Token = "0x4000E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79E8BC", Offset = "0x79E8BC")]
		[SerializeField]
		private float _lightScatteringSpread;

		[Token(Token = "0x4000E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79E8FC", Offset = "0x79E8FC")]
		private int _lightScatteringSamples;

		[Token(Token = "0x4000E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79E940", Offset = "0x79E940")]
		private float _lightScatteringWeight;

		[Token(Token = "0x4000E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79E984", Offset = "0x79E984")]
		[SerializeField]
		private float _lightScatteringIllumination;

		[Token(Token = "0x4000E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79E9C8", Offset = "0x79E9C8")]
		[SerializeField]
		private float _lightScatteringDecay;

		[Token(Token = "0x4000E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79EA10", Offset = "0x79EA10")]
		[SerializeField]
		private float _lightScatteringExposure;

		[Token(Token = "0x4000E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79EA54", Offset = "0x79EA54")]
		private float _lightScatteringJittering;

		[Token(Token = "0x4000E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79EA94", Offset = "0x79EA94")]
		private int _lightScatteringBlurDownscale;

		[Token(Token = "0x4000E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		[SerializeField]
		private bool _fogBlur;

		[Token(Token = "0x4000E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79EAE4", Offset = "0x79EAE4")]
		[SerializeField]
		private float _fogBlurDepth;

		[Token(Token = "0x4000E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		[SerializeField]
		private bool _sunShadows;

		[Token(Token = "0x4000E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
		[SerializeField]
		private LayerMask _sunShadowsLayerMask;

		[Token(Token = "0x4000E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79EB44", Offset = "0x79EB44")]
		private float _sunShadowsStrength;

		[Token(Token = "0x4000E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
		[SerializeField]
		private float _sunShadowsBias;

		[Token(Token = "0x4000E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79EB94", Offset = "0x79EB94")]
		[SerializeField]
		private float _sunShadowsJitterStrength;

		[Token(Token = "0x4000E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79EBD4", Offset = "0x79EBD4")]
		[SerializeField]
		private int _sunShadowsResolution;

		[Token(Token = "0x4000E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79EC14", Offset = "0x79EC14")]
		[SerializeField]
		private float _sunShadowsMaxDistance;

		[Token(Token = "0x4000E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
		[SerializeField]
		private SUN_SHADOWS_BAKE_MODE _sunShadowsBakeMode;

		[Token(Token = "0x4000E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		[SerializeField]
		private float _sunShadowsRefreshInterval;

		[Token(Token = "0x4000E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79EC7C", Offset = "0x79EC7C")]
		private float _sunShadowsCancellation;

		[Token(Token = "0x4000E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79ECBC", Offset = "0x79ECBC")]
		private float _turbulenceStrength;

		[Token(Token = "0x4000E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
		[SerializeField]
		private bool _useXYPlane;

		[Token(Token = "0x4000E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29D")]
		[SerializeField]
		private bool _useSinglePassStereoRenderingMatrix;

		[Token(Token = "0x4000E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		[SerializeField]
		private SPSR_BEHAVIOUR _spsrBehaviour;

		[Token(Token = "0x4000E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
		[SerializeField]
		private bool _reduceFlickerBigWorlds;

		[Token(Token = "0x4000E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A5")]
		[SerializeField]
		private bool _enableMask;

		[Token(Token = "0x4000E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		[SerializeField]
		private LayerMask _maskLayer;

		[Token(Token = "0x4000E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79ED5C", Offset = "0x79ED5C")]
		private int _maskDownsampling;

		[Token(Token = "0x4000E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		public bool isRendering;

		[NonSerialized]
		[Token(Token = "0x4000E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B4")]
		public float distanceToCameraMin;

		[NonSerialized]
		[Token(Token = "0x4000E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		public float distanceToCameraMax;

		[NonSerialized]
		[Token(Token = "0x4000E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
		public float distanceToCamera;

		[NonSerialized]
		[Token(Token = "0x4000E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		public float distanceToCameraYAxis;

		[NonSerialized]
		[Token(Token = "0x4000E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C4")]
		public FOG_TEMPORARY_PROPERTIES temporaryProperties;

		[Token(Token = "0x4000E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		public VolumetricFog fogRenderer;

		[Token(Token = "0x4000E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		private VolumetricFog[] allFogRenderers;

		[Token(Token = "0x4000E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		private bool isPartOfScene;

		[Token(Token = "0x4000E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2EC")]
		private int noiseTextureSize;

		[Token(Token = "0x4000E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		private float initialFogAlpha;

		[Token(Token = "0x4000E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F4")]
		private float targetFogAlpha;

		[Token(Token = "0x4000E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
		private float initialSkyHazeAlpha;

		[Token(Token = "0x4000E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2FC")]
		private float targetSkyHazeAlpha;

		[Token(Token = "0x4000E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		private bool transitionAlpha;

		[Token(Token = "0x4000E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x301")]
		private bool transitionColor;

		[Token(Token = "0x4000E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x302")]
		private bool transitionSpecularColor;

		[Token(Token = "0x4000E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x303")]
		private bool transitionLightColor;

		[Token(Token = "0x4000E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x304")]
		private bool transitionProfile;

		[Token(Token = "0x4000E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x305")]
		private bool targetColorActive;

		[Token(Token = "0x4000E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x306")]
		private bool targetSpecularColorActive;

		[Token(Token = "0x4000E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x307")]
		private bool targetLightColorActive;

		[Token(Token = "0x4000E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		private Color initialFogColor;

		[Token(Token = "0x4000E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		private Color targetFogColor;

		[Token(Token = "0x4000E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
		private Color initialFogSpecularColor;

		[Token(Token = "0x4000E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
		private Color targetFogSpecularColor;

		[Token(Token = "0x4000E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
		private Color initialLightColor;

		[Token(Token = "0x4000E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
		private Color targetLightColor;

		[Token(Token = "0x4000E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
		private float transitionDuration;

		[Token(Token = "0x4000E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36C")]
		private float transitionStartTime;

		[Token(Token = "0x4000E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
		private float currentFogAlpha;

		[Token(Token = "0x4000E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x374")]
		private float currentSkyHazeAlpha;

		[Token(Token = "0x4000E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
		private Color currentFogColor;

		[Token(Token = "0x4000E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
		private Color currentFogSpecularColor;

		[Token(Token = "0x4000E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
		private Color currentLightColor;

		[Token(Token = "0x4000E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
		private VolumetricFogProfile initialProfile;

		[Token(Token = "0x4000E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
		private VolumetricFogProfile targetProfile;

		[Token(Token = "0x4000E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
		private float oldBaselineRelativeCameraY;

		[Token(Token = "0x4000E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3BC")]
		private float currentFogAltitude;

		[Token(Token = "0x4000E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
		private float skyHazeSpeedAcum;

		[Token(Token = "0x4000E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C4")]
		private Color skyHazeLightColor;

		[Token(Token = "0x4000E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D4")]
		private bool _hasCamera;

		[Token(Token = "0x4000E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D5")]
		private bool _hasCameraChecked;

		[Token(Token = "0x4000E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D8")]
		private Camera mainCamera;

		[Token(Token = "0x4000E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E0")]
		private List<string> shaderKeywords;

		[Token(Token = "0x4000E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E8")]
		private Material blurMat;

		[Token(Token = "0x4000E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F0")]
		private RenderBuffer[] mrt;

		[Token(Token = "0x4000E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F8")]
		private int _renderingInstancesCount;

		[Token(Token = "0x4000E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3FC")]
		private bool shouldUpdateMaterialProperties;

		[Token(Token = "0x4000E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x400")]
		private int lastFrameCount;

		[Token(Token = "0x4000E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x404")]
		private RenderTextureFormat rtDownsampledFormat;

		[NonSerialized]
		[Token(Token = "0x4000E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x408")]
		public Material fogMat;

		[Token(Token = "0x4000E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x410")]
		private RenderTexture depthTexture;

		[Token(Token = "0x4000E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x418")]
		private RenderTexture depthSunTexture;

		[Token(Token = "0x4000E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x420")]
		private RenderTexture reducedDestination;

		[Token(Token = "0x4000E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x428")]
		private Light[] lastFoundLights;

		[Token(Token = "0x4000E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x430")]
		private Light[] lightBuffer;

		[Token(Token = "0x4000E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x438")]
		private Light[] currentLights;

		[Token(Token = "0x4000E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x440")]
		private float trackPointAutoLastTime;

		[Token(Token = "0x4000EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x444")]
		private float trackPointCheckNewLightsLastTime;

		[Token(Token = "0x4000EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x448")]
		private Vector4 black;

		[Token(Token = "0x4000EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x458")]
		private Shader depthShader;

		[Token(Token = "0x4000EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x460")]
		private Shader depthShaderAndTrans;

		[Token(Token = "0x4000EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x468")]
		private GameObject depthCamObj;

		[Token(Token = "0x4000EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x470")]
		private Camera depthCam;

		[Token(Token = "0x4000EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x478")]
		private float lastTextureUpdate;

		[Token(Token = "0x4000EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x47C")]
		private Vector3 windSpeedAcum;

		[Token(Token = "0x4000EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x488")]
		private Texture2D adjustedTexture;

		[Token(Token = "0x4000EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x490")]
		private Color[] noiseColors;

		[Token(Token = "0x4000EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x498")]
		private Color[] adjustedColors;

		[Token(Token = "0x4000EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A0")]
		private float sunLightIntensity;

		[Token(Token = "0x4000EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A4")]
		private bool needUpdateTexture;

		[Token(Token = "0x4000EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A5")]
		private bool hasChangeAdjustedColorsAlpha;

		[Token(Token = "0x4000EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A8")]
		private int updatingTextureSlice;

		[Token(Token = "0x4000EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4AC")]
		private Color updatingTextureLightColor;

		[Token(Token = "0x4000EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4BC")]
		private Color lastRenderSettingsAmbientLight;

		[Token(Token = "0x4000EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4CC")]
		private float lastRenderSettingsAmbientIntensity;

		[Token(Token = "0x4000EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D0")]
		private int lastFrameAppliedChaos;

		[Token(Token = "0x4000EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D4")]
		private int lastFrameAppliedWind;

		[Token(Token = "0x4000EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D8")]
		private Light sunLight;

		[Token(Token = "0x4000EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E0")]
		private Vector2 oldSunPos;

		[Token(Token = "0x4000EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E8")]
		private float sunFade;

		[Token(Token = "0x4000EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4EC")]
		private Vector3 lastLightDirection;

		[Token(Token = "0x4000EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F8")]
		private GameObject depthSunCamObj;

		[Token(Token = "0x4000EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x500")]
		private Camera depthSunCam;

		[Token(Token = "0x4000EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x508")]
		private Shader depthSunShader;

		[NonSerialized]
		[Token(Token = "0x4000EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x510")]
		public bool needUpdateDepthSunTexture;

		[Token(Token = "0x4000EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x514")]
		private float lastShadowUpdateFrame;

		[Token(Token = "0x4000EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x518")]
		private bool sunShadowsActive;

		[Token(Token = "0x4000EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51C")]
		private int currentDepthSunTextureRes;

		[Token(Token = "0x4000EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x520")]
		private Matrix4x4 lightMatrix;

		[Token(Token = "0x4000EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x560")]
		private Texture2D adjustedChaosTexture;

		[Token(Token = "0x4000EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x568")]
		private Material chaosLerpMat;

		[Token(Token = "0x4000EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x570")]
		private float turbAcum;

		[Token(Token = "0x4000EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x574")]
		private float deltaTime;

		[Token(Token = "0x4000EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x578")]
		private float timeOfLastRender;

		[Token(Token = "0x4000EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x580")]
		private RenderTexture rtAdjusted;

		[Token(Token = "0x4000EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x588")]
		private List<VolumetricFog> fogInstances;

		[Token(Token = "0x4000EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x590")]
		private List<VolumetricFog> fogRenderInstances;

		[Token(Token = "0x4000EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x598")]
		private MeshRenderer mr;

		[Token(Token = "0x4000EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A0")]
		private float lastTimeSortInstances;

		[Token(Token = "0x4000ECA")]
		private const float FOG_INSTANCES_SORT_INTERVAL = 2f;

		[Token(Token = "0x4000ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A4")]
		private Vector3 lastCamPos;

		[Token(Token = "0x4000ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5B0")]
		private bool needResort;

		[Token(Token = "0x4000ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5B8")]
		private CommandBuffer maskCommandBuffer;

		[Token(Token = "0x4000ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C0")]
		private RenderTextureDescriptor rtMaskDesc;

		[Token(Token = "0x4000ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5F8")]
		private Material maskMaterial;

		[Token(Token = "0x4000ED0")]
		private const int MAX_SIMULTANEOUS_TRANSITIONS = 10000;

		[Token(Token = "0x4000ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x600")]
		[SerializeField]
		private bool _fogOfWarEnabled;

		[Token(Token = "0x4000ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x604")]
		[SerializeField]
		private Vector3 _fogOfWarCenter;

		[Token(Token = "0x4000ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x610")]
		[SerializeField]
		private Vector3 _fogOfWarSize;

		[Token(Token = "0x4000ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79EDCC", Offset = "0x79EDCC")]
		[SerializeField]
		private int _fogOfWarTextureSize;

		[Token(Token = "0x4000ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x620")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79EE14", Offset = "0x79EE14")]
		private float _fogOfWarRestoreDelay;

		[Token(Token = "0x4000ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x624")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79EE58", Offset = "0x79EE58")]
		private float _fogOfWarRestoreDuration;

		[Token(Token = "0x4000ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x628")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79EE98", Offset = "0x79EE98")]
		private float _fogOfWarSmoothness;

		[Token(Token = "0x4000ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62C")]
		[SerializeField]
		private bool _fogOfWarBlur;

		[Token(Token = "0x4000ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62D")]
		[SerializeField]
		private bool _maskEditorEnabled;

		[Token(Token = "0x4000EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x630")]
		[SerializeField]
		private MASK_TEXTURE_BRUSH_MODE _maskBrushMode;

		[Token(Token = "0x4000EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x634")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79EF08", Offset = "0x79EF08")]
		private int _maskBrushWidth;

		[Token(Token = "0x4000EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x638")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79EF4C", Offset = "0x79EF4C")]
		private float _maskBrushFuzziness;

		[Token(Token = "0x4000EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79EF8C", Offset = "0x79EF8C")]
		private float _maskBrushOpacity;

		[Token(Token = "0x4000EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x640")]
		private bool canDestroyFOWTexture;

		[Token(Token = "0x4000EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x648")]
		[SerializeField]
		private Texture2D _fogOfWarTexture;

		[Token(Token = "0x4000EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x650")]
		private Color32[] fogOfWarColorBuffer;

		[Token(Token = "0x4000EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x658")]
		private FogOfWarTransition[] fowTransitionList;

		[Token(Token = "0x4000EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x660")]
		private int lastTransitionPos;

		[Token(Token = "0x4000EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x668")]
		private Dictionary<int, int> fowTransitionIndices;

		[Token(Token = "0x4000EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x670")]
		private bool requiresTextureUpload;

		[Token(Token = "0x4000EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x678")]
		private Material fowBlur;

		[Token(Token = "0x4000EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x680")]
		private RenderTexture fowBlur1;

		[Token(Token = "0x4000EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x688")]
		private RenderTexture fowBlur2;

		[Token(Token = "0x4000EE8")]
		public const int MAX_POINT_LIGHTS = 6;

		[Token(Token = "0x4000EE9")]
		public const bool LIGHT_SCATTERING_BLUR_ENABLED = false;

		[Token(Token = "0x4000EEA")]
		public const bool USE_UNITY_SHADOW_MAP = true;

		[Token(Token = "0x4000EEB")]
		public const bool USE_DIRECTIONAL_LIGHT_COOKIE = false;

		[Token(Token = "0x4000EEC")]
		public const bool LIGHT_DIFFUSION_ENABLED = true;

		[Token(Token = "0x17000171")]
		public static VolumetricFog instance
		{
			[Token(Token = "0x6000B7F")]
			[Address(RVA = "0xAD00A8", Offset = "0xAD00A8", VA = "0xAD00A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000172")]
		public FOG_PRESET preset
		{
			[Token(Token = "0x6000B80")]
			[Address(RVA = "0xAD02B8", Offset = "0xAD02B8", VA = "0xAD02B8")]
			get
			{
				return default(FOG_PRESET);
			}
			[Token(Token = "0x6000B81")]
			[Address(RVA = "0xAD02C0", Offset = "0xAD02C0", VA = "0xAD02C0")]
			set
			{
			}
		}

		[Token(Token = "0x17000173")]
		public VolumetricFogProfile profile
		{
			[Token(Token = "0x6000B82")]
			[Address(RVA = "0xAD15A4", Offset = "0xAD15A4", VA = "0xAD15A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B83")]
			[Address(RVA = "0xAD15AC", Offset = "0xAD15AC", VA = "0xAD15AC")]
			set
			{
			}
		}

		[Token(Token = "0x17000174")]
		public bool profileSync
		{
			[Token(Token = "0x6000B84")]
			[Address(RVA = "0xAD16A0", Offset = "0xAD16A0", VA = "0xAD16A0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B85")]
			[Address(RVA = "0xAD16A8", Offset = "0xAD16A8", VA = "0xAD16A8")]
			set
			{
			}
		}

		[Token(Token = "0x17000175")]
		public bool useFogVolumes
		{
			[Token(Token = "0x6000B86")]
			[Address(RVA = "0xAD16D0", Offset = "0xAD16D0", VA = "0xAD16D0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B87")]
			[Address(RVA = "0xAD16D8", Offset = "0xAD16D8", VA = "0xAD16D8")]
			set
			{
			}
		}

		[Token(Token = "0x17000176")]
		public bool debugDepthPass
		{
			[Token(Token = "0x6000B88")]
			[Address(RVA = "0xAD1700", Offset = "0xAD1700", VA = "0xAD1700")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B89")]
			[Address(RVA = "0xAD1708", Offset = "0xAD1708", VA = "0xAD1708")]
			set
			{
			}
		}

		[Token(Token = "0x17000177")]
		public bool showInSceneView
		{
			[Token(Token = "0x6000B8A")]
			[Address(RVA = "0xAD1730", Offset = "0xAD1730", VA = "0xAD1730")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B8B")]
			[Address(RVA = "0xAD1738", Offset = "0xAD1738", VA = "0xAD1738")]
			set
			{
			}
		}

		[Token(Token = "0x17000178")]
		public TRANSPARENT_MODE transparencyBlendMode
		{
			[Token(Token = "0x6000B8C")]
			[Address(RVA = "0xAD1760", Offset = "0xAD1760", VA = "0xAD1760")]
			get
			{
				return default(TRANSPARENT_MODE);
			}
			[Token(Token = "0x6000B8D")]
			[Address(RVA = "0xAD1768", Offset = "0xAD1768", VA = "0xAD1768")]
			set
			{
			}
		}

		[Token(Token = "0x17000179")]
		public float transparencyBlendPower
		{
			[Token(Token = "0x6000B8E")]
			[Address(RVA = "0xAD18F0", Offset = "0xAD18F0", VA = "0xAD18F0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000B8F")]
			[Address(RVA = "0xAD18F8", Offset = "0xAD18F8", VA = "0xAD18F8")]
			set
			{
			}
		}

		[Token(Token = "0x1700017A")]
		public LayerMask transparencyLayerMask
		{
			[Token(Token = "0x6000B90")]
			[Address(RVA = "0xAD1934", Offset = "0xAD1934", VA = "0xAD1934")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x6000B91")]
			[Address(RVA = "0xAD193C", Offset = "0xAD193C", VA = "0xAD193C")]
			set
			{
			}
		}

		[Token(Token = "0x1700017B")]
		public FOG_VISIBILITY_SCOPE visibilityScope
		{
			[Token(Token = "0x6000B92")]
			[Address(RVA = "0xAD1994", Offset = "0xAD1994", VA = "0xAD1994")]
			get
			{
				return default(FOG_VISIBILITY_SCOPE);
			}
			[Token(Token = "0x6000B93")]
			[Address(RVA = "0xAD199C", Offset = "0xAD199C", VA = "0xAD199C")]
			set
			{
			}
		}

		[Token(Token = "0x1700017C")]
		public Bounds visibilityVolume
		{
			[Token(Token = "0x6000B94")]
			[Address(RVA = "0xAD19B8", Offset = "0xAD19B8", VA = "0xAD19B8")]
			get
			{
				return default(Bounds);
			}
			[Token(Token = "0x6000B95")]
			[Address(RVA = "0xAD19CC", Offset = "0xAD19CC", VA = "0xAD19CC")]
			set
			{
			}
		}

		[Token(Token = "0x1700017D")]
		public LIGHTING_MODEL lightingModel
		{
			[Token(Token = "0x6000B96")]
			[Address(RVA = "0xAD1A44", Offset = "0xAD1A44", VA = "0xAD1A44")]
			get
			{
				return default(LIGHTING_MODEL);
			}
			[Token(Token = "0x6000B97")]
			[Address(RVA = "0xAD1A4C", Offset = "0xAD1A4C", VA = "0xAD1A4C")]
			set
			{
			}
		}

		[Token(Token = "0x1700017E")]
		public bool enableMultipleCameras
		{
			[Token(Token = "0x6000B98")]
			[Address(RVA = "0xAD1B48", Offset = "0xAD1B48", VA = "0xAD1B48")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B99")]
			[Address(RVA = "0xAD1B50", Offset = "0xAD1B50", VA = "0xAD1B50")]
			set
			{
			}
		}

		[Token(Token = "0x1700017F")]
		public bool computeDepth
		{
			[Token(Token = "0x6000B9A")]
			[Address(RVA = "0xAD1CFC", Offset = "0xAD1CFC", VA = "0xAD1CFC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B9B")]
			[Address(RVA = "0xAD1D04", Offset = "0xAD1D04", VA = "0xAD1D04")]
			set
			{
			}
		}

		[Token(Token = "0x17000180")]
		public COMPUTE_DEPTH_SCOPE computeDepthScope
		{
			[Token(Token = "0x6000B9C")]
			[Address(RVA = "0xAD1D4C", Offset = "0xAD1D4C", VA = "0xAD1D4C")]
			get
			{
				return default(COMPUTE_DEPTH_SCOPE);
			}
			[Token(Token = "0x6000B9D")]
			[Address(RVA = "0xAD1D54", Offset = "0xAD1D54", VA = "0xAD1D54")]
			set
			{
			}
		}

		[Token(Token = "0x17000181")]
		public float transparencyCutOff
		{
			[Token(Token = "0x6000B9E")]
			[Address(RVA = "0xAD1DA0", Offset = "0xAD1DA0", VA = "0xAD1DA0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000B9F")]
			[Address(RVA = "0xAD1DA8", Offset = "0xAD1DA8", VA = "0xAD1DA8")]
			set
			{
			}
		}

		[Token(Token = "0x17000182")]
		public bool renderBeforeTransparent
		{
			[Token(Token = "0x6000BA0")]
			[Address(RVA = "0xAD1DE4", Offset = "0xAD1DE4", VA = "0xAD1DE4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000BA1")]
			[Address(RVA = "0xAD1DEC", Offset = "0xAD1DEC", VA = "0xAD1DEC")]
			set
			{
			}
		}

		[Token(Token = "0x17000183")]
		public GameObject sun
		{
			[Token(Token = "0x6000BA2")]
			[Address(RVA = "0xAD1E48", Offset = "0xAD1E48", VA = "0xAD1E48")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BA3")]
			[Address(RVA = "0xAD1E50", Offset = "0xAD1E50", VA = "0xAD1E50")]
			set
			{
			}
		}

		[Token(Token = "0x17000184")]
		public float timeBetweenTextureUpdates
		{
			[Token(Token = "0x6000BA4")]
			[Address(RVA = "0xAD1FF4", Offset = "0xAD1FF4", VA = "0xAD1FF4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BA5")]
			[Address(RVA = "0xAD1FFC", Offset = "0xAD1FFC", VA = "0xAD1FFC")]
			set
			{
			}
		}

		[Token(Token = "0x17000185")]
		public bool sunCopyColor
		{
			[Token(Token = "0x6000BA6")]
			[Address(RVA = "0xAD2018", Offset = "0xAD2018", VA = "0xAD2018")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000BA7")]
			[Address(RVA = "0xAD2020", Offset = "0xAD2020", VA = "0xAD2020")]
			set
			{
			}
		}

		[Token(Token = "0x17000186")]
		public float density
		{
			[Token(Token = "0x6000BA8")]
			[Address(RVA = "0xAD2068", Offset = "0xAD2068", VA = "0xAD2068")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BA9")]
			[Address(RVA = "0xAD2070", Offset = "0xAD2070", VA = "0xAD2070")]
			set
			{
			}
		}

		[Token(Token = "0x17000187")]
		public float noiseStrength
		{
			[Token(Token = "0x6000BAA")]
			[Address(RVA = "0xAD21B4", Offset = "0xAD21B4", VA = "0xAD21B4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BAB")]
			[Address(RVA = "0xAD21BC", Offset = "0xAD21BC", VA = "0xAD21BC")]
			set
			{
			}
		}

		[Token(Token = "0x17000188")]
		public float noiseFinalMultiplier
		{
			[Token(Token = "0x6000BAC")]
			[Address(RVA = "0xAD2210", Offset = "0xAD2210", VA = "0xAD2210")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BAD")]
			[Address(RVA = "0xAD2218", Offset = "0xAD2218", VA = "0xAD2218")]
			set
			{
			}
		}

		[Token(Token = "0x17000189")]
		public float noiseSparse
		{
			[Token(Token = "0x6000BAE")]
			[Address(RVA = "0xAD226C", Offset = "0xAD226C", VA = "0xAD226C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BAF")]
			[Address(RVA = "0xAD2274", Offset = "0xAD2274", VA = "0xAD2274")]
			set
			{
			}
		}

		[Token(Token = "0x1700018A")]
		public float distance
		{
			[Token(Token = "0x6000BB0")]
			[Address(RVA = "0xAD22C8", Offset = "0xAD22C8", VA = "0xAD22C8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BB1")]
			[Address(RVA = "0xAD22D0", Offset = "0xAD22D0", VA = "0xAD22D0")]
			set
			{
			}
		}

		[Token(Token = "0x1700018B")]
		public float maxFogLength
		{
			[Token(Token = "0x6000BB2")]
			[Address(RVA = "0xAD2314", Offset = "0xAD2314", VA = "0xAD2314")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BB3")]
			[Address(RVA = "0xAD231C", Offset = "0xAD231C", VA = "0xAD231C")]
			set
			{
			}
		}

		[Token(Token = "0x1700018C")]
		public float maxFogLengthFallOff
		{
			[Token(Token = "0x6000BB4")]
			[Address(RVA = "0xAD2358", Offset = "0xAD2358", VA = "0xAD2358")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BB5")]
			[Address(RVA = "0xAD2360", Offset = "0xAD2360", VA = "0xAD2360")]
			set
			{
			}
		}

		[Token(Token = "0x1700018D")]
		public float distanceFallOff
		{
			[Token(Token = "0x6000BB6")]
			[Address(RVA = "0xAD239C", Offset = "0xAD239C", VA = "0xAD239C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BB7")]
			[Address(RVA = "0xAD23A4", Offset = "0xAD23A4", VA = "0xAD23A4")]
			set
			{
			}
		}

		[Token(Token = "0x1700018E")]
		public float height
		{
			[Token(Token = "0x6000BB8")]
			[Address(RVA = "0xAD23E8", Offset = "0xAD23E8", VA = "0xAD23E8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BB9")]
			[Address(RVA = "0xAD23F0", Offset = "0xAD23F0", VA = "0xAD23F0")]
			set
			{
			}
		}

		[Token(Token = "0x1700018F")]
		public float heightFallOff
		{
			[Token(Token = "0x6000BBA")]
			[Address(RVA = "0xAD2448", Offset = "0xAD2448", VA = "0xAD2448")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BBB")]
			[Address(RVA = "0xAD2450", Offset = "0xAD2450", VA = "0xAD2450")]
			set
			{
			}
		}

		[Token(Token = "0x17000190")]
		public float deepObscurance
		{
			[Token(Token = "0x6000BBC")]
			[Address(RVA = "0xAD24A0", Offset = "0xAD24A0", VA = "0xAD24A0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BBD")]
			[Address(RVA = "0xAD24A8", Offset = "0xAD24A8", VA = "0xAD24A8")]
			set
			{
			}
		}

		[Token(Token = "0x17000191")]
		public float baselineHeight
		{
			[Token(Token = "0x6000BBE")]
			[Address(RVA = "0xAD2500", Offset = "0xAD2500", VA = "0xAD2500")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BBF")]
			[Address(RVA = "0xAD2508", Offset = "0xAD2508", VA = "0xAD2508")]
			set
			{
			}
		}

		[Token(Token = "0x17000192")]
		public bool baselineRelativeToCamera
		{
			[Token(Token = "0x6000BC0")]
			[Address(RVA = "0xAD254C", Offset = "0xAD254C", VA = "0xAD254C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000BC1")]
			[Address(RVA = "0xAD2554", Offset = "0xAD2554", VA = "0xAD2554")]
			set
			{
			}
		}

		[Token(Token = "0x17000193")]
		public float baselineRelativeToCameraDelay
		{
			[Token(Token = "0x6000BC2")]
			[Address(RVA = "0xAD25A4", Offset = "0xAD25A4", VA = "0xAD25A4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BC3")]
			[Address(RVA = "0xAD25AC", Offset = "0xAD25AC", VA = "0xAD25AC")]
			set
			{
			}
		}

		[Token(Token = "0x17000194")]
		public float noiseScale
		{
			[Token(Token = "0x6000BC4")]
			[Address(RVA = "0xAD25E8", Offset = "0xAD25E8", VA = "0xAD25E8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BC5")]
			[Address(RVA = "0xAD25F0", Offset = "0xAD25F0", VA = "0xAD25F0")]
			set
			{
			}
		}

		[Token(Token = "0x17000195")]
		public float alpha
		{
			[Token(Token = "0x6000BC6")]
			[Address(RVA = "0xAD2648", Offset = "0xAD2648", VA = "0xAD2648")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BC7")]
			[Address(RVA = "0xAD2650", Offset = "0xAD2650", VA = "0xAD2650")]
			set
			{
			}
		}

		[Token(Token = "0x17000196")]
		public Color color
		{
			[Token(Token = "0x6000BC8")]
			[Address(RVA = "0xAD2698", Offset = "0xAD2698", VA = "0xAD2698")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000BC9")]
			[Address(RVA = "0xAD26A4", Offset = "0xAD26A4", VA = "0xAD26A4")]
			set
			{
			}
		}

		[Token(Token = "0x17000197")]
		public Color specularColor
		{
			[Token(Token = "0x6000BCA")]
			[Address(RVA = "0xAD2728", Offset = "0xAD2728", VA = "0xAD2728")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000BCB")]
			[Address(RVA = "0xAD2734", Offset = "0xAD2734", VA = "0xAD2734")]
			set
			{
			}
		}

		[Token(Token = "0x17000198")]
		public float specularThreshold
		{
			[Token(Token = "0x6000BCC")]
			[Address(RVA = "0xAD27C0", Offset = "0xAD27C0", VA = "0xAD27C0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BCD")]
			[Address(RVA = "0xAD27C8", Offset = "0xAD27C8", VA = "0xAD27C8")]
			set
			{
			}
		}

		[Token(Token = "0x17000199")]
		public float specularIntensity
		{
			[Token(Token = "0x6000BCE")]
			[Address(RVA = "0xAD2808", Offset = "0xAD2808", VA = "0xAD2808")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BCF")]
			[Address(RVA = "0xAD2810", Offset = "0xAD2810", VA = "0xAD2810")]
			set
			{
			}
		}

		[Token(Token = "0x1700019A")]
		public Vector3 lightDirection
		{
			[Token(Token = "0x6000BD0")]
			[Address(RVA = "0xAD285C", Offset = "0xAD285C", VA = "0xAD285C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000BD1")]
			[Address(RVA = "0xAD2868", Offset = "0xAD2868", VA = "0xAD2868")]
			set
			{
			}
		}

		[Token(Token = "0x1700019B")]
		public float lightIntensity
		{
			[Token(Token = "0x6000BD2")]
			[Address(RVA = "0xAD28E0", Offset = "0xAD28E0", VA = "0xAD28E0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BD3")]
			[Address(RVA = "0xAD28E8", Offset = "0xAD28E8", VA = "0xAD28E8")]
			set
			{
			}
		}

		[Token(Token = "0x1700019C")]
		public Color lightColor
		{
			[Token(Token = "0x6000BD4")]
			[Address(RVA = "0xAD2934", Offset = "0xAD2934", VA = "0xAD2934")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000BD5")]
			[Address(RVA = "0xAD2940", Offset = "0xAD2940", VA = "0xAD2940")]
			set
			{
			}
		}

		[Token(Token = "0x1700019D")]
		public int updateTextureSpread
		{
			[Token(Token = "0x6000BD6")]
			[Address(RVA = "0xAD29CC", Offset = "0xAD29CC", VA = "0xAD29CC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000BD7")]
			[Address(RVA = "0xAD29D4", Offset = "0xAD29D4", VA = "0xAD29D4")]
			set
			{
			}
		}

		[Token(Token = "0x1700019E")]
		public float speed
		{
			[Token(Token = "0x6000BD8")]
			[Address(RVA = "0xAD29F0", Offset = "0xAD29F0", VA = "0xAD29F0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BD9")]
			[Address(RVA = "0xAD29F8", Offset = "0xAD29F8", VA = "0xAD29F8")]
			set
			{
			}
		}

		[Token(Token = "0x1700019F")]
		public Vector3 windDirection
		{
			[Token(Token = "0x6000BDA")]
			[Address(RVA = "0xAD2C50", Offset = "0xAD2C50", VA = "0xAD2C50")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000BDB")]
			[Address(RVA = "0xAD2C60", Offset = "0xAD2C60", VA = "0xAD2C60")]
			set
			{
			}
		}

		[Token(Token = "0x170001A0")]
		public bool useRealTime
		{
			[Token(Token = "0x6000BDC")]
			[Address(RVA = "0xAD2CE0", Offset = "0xAD2CE0", VA = "0xAD2CE0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000BDD")]
			[Address(RVA = "0xAD2CE8", Offset = "0xAD2CE8", VA = "0xAD2CE8")]
			set
			{
			}
		}

		[Token(Token = "0x170001A1")]
		public Color skyColor
		{
			[Token(Token = "0x6000BDE")]
			[Address(RVA = "0xAD2D10", Offset = "0xAD2D10", VA = "0xAD2D10")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000BDF")]
			[Address(RVA = "0xAD2D24", Offset = "0xAD2D24", VA = "0xAD2D24")]
			set
			{
			}
		}

		[Token(Token = "0x170001A2")]
		public float skyHaze
		{
			[Token(Token = "0x6000BE0")]
			[Address(RVA = "0xAD3130", Offset = "0xAD3130", VA = "0xAD3130")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BE1")]
			[Address(RVA = "0xAD3138", Offset = "0xAD3138", VA = "0xAD3138")]
			set
			{
			}
		}

		[Token(Token = "0x170001A3")]
		public float skyNoiseScale
		{
			[Token(Token = "0x6000BE2")]
			[Address(RVA = "0xAD3188", Offset = "0xAD3188", VA = "0xAD3188")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BE3")]
			[Address(RVA = "0xAD3190", Offset = "0xAD3190", VA = "0xAD3190")]
			set
			{
			}
		}

		[Token(Token = "0x170001A4")]
		public float skySpeed
		{
			[Token(Token = "0x6000BE4")]
			[Address(RVA = "0xAD31CC", Offset = "0xAD31CC", VA = "0xAD31CC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BE5")]
			[Address(RVA = "0xAD31D4", Offset = "0xAD31D4", VA = "0xAD31D4")]
			set
			{
			}
		}

		[Token(Token = "0x170001A5")]
		public float skyNoiseStrength
		{
			[Token(Token = "0x6000BE6")]
			[Address(RVA = "0xAD31F8", Offset = "0xAD31F8", VA = "0xAD31F8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BE7")]
			[Address(RVA = "0xAD3200", Offset = "0xAD3200", VA = "0xAD3200")]
			set
			{
			}
		}

		[Token(Token = "0x170001A6")]
		public float skyAlpha
		{
			[Token(Token = "0x6000BE8")]
			[Address(RVA = "0xAD3250", Offset = "0xAD3250", VA = "0xAD3250")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BE9")]
			[Address(RVA = "0xAD3258", Offset = "0xAD3258", VA = "0xAD3258")]
			set
			{
			}
		}

		[Token(Token = "0x170001A7")]
		public float skyDepth
		{
			[Token(Token = "0x6000BEA")]
			[Address(RVA = "0xAD329C", Offset = "0xAD329C", VA = "0xAD329C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BEB")]
			[Address(RVA = "0xAD32A4", Offset = "0xAD32A4", VA = "0xAD32A4")]
			set
			{
			}
		}

		[Token(Token = "0x170001A8")]
		public GameObject character
		{
			[Token(Token = "0x6000BEC")]
			[Address(RVA = "0xAD32EC", Offset = "0xAD32EC", VA = "0xAD32EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BED")]
			[Address(RVA = "0xAD32F4", Offset = "0xAD32F4", VA = "0xAD32F4")]
			set
			{
			}
		}

		[Token(Token = "0x170001A9")]
		public FOG_VOID_TOPOLOGY fogVoidTopology
		{
			[Token(Token = "0x6000BEE")]
			[Address(RVA = "0xAD338C", Offset = "0xAD338C", VA = "0xAD338C")]
			get
			{
				return default(FOG_VOID_TOPOLOGY);
			}
			[Token(Token = "0x6000BEF")]
			[Address(RVA = "0xAD3394", Offset = "0xAD3394", VA = "0xAD3394")]
			set
			{
			}
		}

		[Token(Token = "0x170001AA")]
		public float fogVoidFallOff
		{
			[Token(Token = "0x6000BF0")]
			[Address(RVA = "0xAD33D0", Offset = "0xAD33D0", VA = "0xAD33D0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BF1")]
			[Address(RVA = "0xAD33D8", Offset = "0xAD33D8", VA = "0xAD33D8")]
			set
			{
			}
		}

		[Token(Token = "0x170001AB")]
		public float fogVoidRadius
		{
			[Token(Token = "0x6000BF2")]
			[Address(RVA = "0xAD341C", Offset = "0xAD341C", VA = "0xAD341C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BF3")]
			[Address(RVA = "0xAD3424", Offset = "0xAD3424", VA = "0xAD3424")]
			set
			{
			}
		}

		[Token(Token = "0x170001AC")]
		public Vector3 fogVoidPosition
		{
			[Token(Token = "0x6000BF4")]
			[Address(RVA = "0xAD3468", Offset = "0xAD3468", VA = "0xAD3468")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000BF5")]
			[Address(RVA = "0xAD3478", Offset = "0xAD3478", VA = "0xAD3478")]
			set
			{
			}
		}

		[Token(Token = "0x170001AD")]
		public float fogVoidDepth
		{
			[Token(Token = "0x6000BF6")]
			[Address(RVA = "0xAD34F0", Offset = "0xAD34F0", VA = "0xAD34F0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BF7")]
			[Address(RVA = "0xAD34F8", Offset = "0xAD34F8", VA = "0xAD34F8")]
			set
			{
			}
		}

		[Token(Token = "0x170001AE")]
		public float fogVoidHeight
		{
			[Token(Token = "0x6000BF8")]
			[Address(RVA = "0xAD353C", Offset = "0xAD353C", VA = "0xAD353C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BF9")]
			[Address(RVA = "0xAD3544", Offset = "0xAD3544", VA = "0xAD3544")]
			set
			{
			}
		}

		[Token(Token = "0x170001AF")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x7ACC78", Offset = "0x7ACC78")]
		public bool fogVoidInverted
		{
			[Token(Token = "0x6000BFA")]
			[Address(RVA = "0xAD3588", Offset = "0xAD3588", VA = "0xAD3588")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000BFB")]
			[Address(RVA = "0xAD3590", Offset = "0xAD3590", VA = "0xAD3590")]
			set
			{
			}
		}

		[Token(Token = "0x170001B0")]
		public bool fogVoidShowGizmos
		{
			[Token(Token = "0x6000BFC")]
			[Address(RVA = "0xAD359C", Offset = "0xAD359C", VA = "0xAD359C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000BFD")]
			[Address(RVA = "0xAD35A4", Offset = "0xAD35A4", VA = "0xAD35A4")]
			set
			{
			}
		}

		[Token(Token = "0x170001B1")]
		public bool fogAreaShowGizmos
		{
			[Token(Token = "0x6000BFE")]
			[Address(RVA = "0xAD35B0", Offset = "0xAD35B0", VA = "0xAD35B0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000BFF")]
			[Address(RVA = "0xAD35B8", Offset = "0xAD35B8", VA = "0xAD35B8")]
			set
			{
			}
		}

		[Token(Token = "0x170001B2")]
		public GameObject fogAreaCenter
		{
			[Token(Token = "0x6000C00")]
			[Address(RVA = "0xAD3600", Offset = "0xAD3600", VA = "0xAD3600")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C01")]
			[Address(RVA = "0xAD3608", Offset = "0xAD3608", VA = "0xAD3608")]
			set
			{
			}
		}

		[Token(Token = "0x170001B3")]
		public float fogAreaFallOff
		{
			[Token(Token = "0x6000C02")]
			[Address(RVA = "0xAD36A0", Offset = "0xAD36A0", VA = "0xAD36A0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C03")]
			[Address(RVA = "0xAD36A8", Offset = "0xAD36A8", VA = "0xAD36A8")]
			set
			{
			}
		}

		[Token(Token = "0x170001B4")]
		public FOG_AREA_FOLLOW_MODE fogAreaFollowMode
		{
			[Token(Token = "0x6000C04")]
			[Address(RVA = "0xAD36E4", Offset = "0xAD36E4", VA = "0xAD36E4")]
			get
			{
				return default(FOG_AREA_FOLLOW_MODE);
			}
			[Token(Token = "0x6000C05")]
			[Address(RVA = "0xAD36EC", Offset = "0xAD36EC", VA = "0xAD36EC")]
			set
			{
			}
		}

		[Token(Token = "0x170001B5")]
		public FOG_AREA_TOPOLOGY fogAreaTopology
		{
			[Token(Token = "0x6000C06")]
			[Address(RVA = "0xAD3728", Offset = "0xAD3728", VA = "0xAD3728")]
			get
			{
				return default(FOG_AREA_TOPOLOGY);
			}
			[Token(Token = "0x6000C07")]
			[Address(RVA = "0xAD3730", Offset = "0xAD3730", VA = "0xAD3730")]
			set
			{
			}
		}

		[Token(Token = "0x170001B6")]
		public float fogAreaRadius
		{
			[Token(Token = "0x6000C08")]
			[Address(RVA = "0xAD376C", Offset = "0xAD376C", VA = "0xAD376C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C09")]
			[Address(RVA = "0xAD3774", Offset = "0xAD3774", VA = "0xAD3774")]
			set
			{
			}
		}

		[Token(Token = "0x170001B7")]
		public Vector3 fogAreaPosition
		{
			[Token(Token = "0x6000C0A")]
			[Address(RVA = "0xAD37B0", Offset = "0xAD37B0", VA = "0xAD37B0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000C0B")]
			[Address(RVA = "0xAD37C0", Offset = "0xAD37C0", VA = "0xAD37C0")]
			set
			{
			}
		}

		[Token(Token = "0x170001B8")]
		public float fogAreaDepth
		{
			[Token(Token = "0x6000C0C")]
			[Address(RVA = "0xAD3830", Offset = "0xAD3830", VA = "0xAD3830")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C0D")]
			[Address(RVA = "0xAD3838", Offset = "0xAD3838", VA = "0xAD3838")]
			set
			{
			}
		}

		[Token(Token = "0x170001B9")]
		public float fogAreaHeight
		{
			[Token(Token = "0x6000C0E")]
			[Address(RVA = "0xAD3874", Offset = "0xAD3874", VA = "0xAD3874")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C0F")]
			[Address(RVA = "0xAD387C", Offset = "0xAD387C", VA = "0xAD387C")]
			set
			{
			}
		}

		[Token(Token = "0x170001BA")]
		public FOG_AREA_SORTING_MODE fogAreaSortingMode
		{
			[Token(Token = "0x6000C10")]
			[Address(RVA = "0xAD38B8", Offset = "0xAD38B8", VA = "0xAD38B8")]
			get
			{
				return default(FOG_AREA_SORTING_MODE);
			}
			[Token(Token = "0x6000C11")]
			[Address(RVA = "0xAD38C0", Offset = "0xAD38C0", VA = "0xAD38C0")]
			set
			{
			}
		}

		[Token(Token = "0x170001BB")]
		public int fogAreaRenderOrder
		{
			[Token(Token = "0x6000C12")]
			[Address(RVA = "0xAD38E0", Offset = "0xAD38E0", VA = "0xAD38E0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000C13")]
			[Address(RVA = "0xAD38E8", Offset = "0xAD38E8", VA = "0xAD38E8")]
			set
			{
			}
		}

		[Token(Token = "0x170001BC")]
		public bool pointLightTrackAuto
		{
			[Token(Token = "0x6000C14")]
			[Address(RVA = "0xAD3908", Offset = "0xAD3908", VA = "0xAD3908")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C15")]
			[Address(RVA = "0xAD3910", Offset = "0xAD3910", VA = "0xAD3910")]
			set
			{
			}
		}

		[Token(Token = "0x170001BD")]
		public Transform pointLightTrackingPivot
		{
			[Token(Token = "0x6000C16")]
			[Address(RVA = "0xAD3D54", Offset = "0xAD3D54", VA = "0xAD3D54")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C17")]
			[Address(RVA = "0xAD3D5C", Offset = "0xAD3D5C", VA = "0xAD3D5C")]
			set
			{
			}
		}

		[Token(Token = "0x170001BE")]
		public int pointLightTrackingCount
		{
			[Token(Token = "0x6000C18")]
			[Address(RVA = "0xAD3E00", Offset = "0xAD3E00", VA = "0xAD3E00")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000C19")]
			[Address(RVA = "0xAD3E08", Offset = "0xAD3E08", VA = "0xAD3E08")]
			set
			{
			}
		}

		[Token(Token = "0x170001BF")]
		public float pointLightTrackingCheckInterval
		{
			[Token(Token = "0x6000C1A")]
			[Address(RVA = "0xAD4370", Offset = "0xAD4370", VA = "0xAD4370")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C1B")]
			[Address(RVA = "0xAD4378", Offset = "0xAD4378", VA = "0xAD4378")]
			set
			{
			}
		}

		[Token(Token = "0x170001C0")]
		public float pointLightTrackingNewLightsCheckInterval
		{
			[Token(Token = "0x6000C1C")]
			[Address(RVA = "0xAD43B4", Offset = "0xAD43B4", VA = "0xAD43B4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C1D")]
			[Address(RVA = "0xAD43BC", Offset = "0xAD43BC", VA = "0xAD43BC")]
			set
			{
			}
		}

		[Token(Token = "0x170001C1")]
		public float pointLightInscattering
		{
			[Token(Token = "0x6000C1E")]
			[Address(RVA = "0xAD43F8", Offset = "0xAD43F8", VA = "0xAD43F8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C1F")]
			[Address(RVA = "0xAD4400", Offset = "0xAD4400", VA = "0xAD4400")]
			set
			{
			}
		}

		[Token(Token = "0x170001C2")]
		public float pointLightIntensity
		{
			[Token(Token = "0x6000C20")]
			[Address(RVA = "0xAD441C", Offset = "0xAD441C", VA = "0xAD441C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C21")]
			[Address(RVA = "0xAD4424", Offset = "0xAD4424", VA = "0xAD4424")]
			set
			{
			}
		}

		[Token(Token = "0x170001C3")]
		public float pointLightInsideAtten
		{
			[Token(Token = "0x6000C22")]
			[Address(RVA = "0xAD4440", Offset = "0xAD4440", VA = "0xAD4440")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C23")]
			[Address(RVA = "0xAD4448", Offset = "0xAD4448", VA = "0xAD4448")]
			set
			{
			}
		}

		[Token(Token = "0x170001C4")]
		public int downsampling
		{
			[Token(Token = "0x6000C24")]
			[Address(RVA = "0xAD4484", Offset = "0xAD4484", VA = "0xAD4484")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000C25")]
			[Address(RVA = "0xAD448C", Offset = "0xAD448C", VA = "0xAD448C")]
			set
			{
			}
		}

		[Token(Token = "0x170001C5")]
		public bool forceComposition
		{
			[Token(Token = "0x6000C26")]
			[Address(RVA = "0xAD44B0", Offset = "0xAD44B0", VA = "0xAD44B0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C27")]
			[Address(RVA = "0xAD44B8", Offset = "0xAD44B8", VA = "0xAD44B8")]
			set
			{
			}
		}

		[Token(Token = "0x170001C6")]
		public bool edgeImprove
		{
			[Token(Token = "0x6000C28")]
			[Address(RVA = "0xAD4508", Offset = "0xAD4508", VA = "0xAD4508")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C29")]
			[Address(RVA = "0xAD4510", Offset = "0xAD4510", VA = "0xAD4510")]
			set
			{
			}
		}

		[Token(Token = "0x170001C7")]
		public float edgeThreshold
		{
			[Token(Token = "0x6000C2A")]
			[Address(RVA = "0xAD4560", Offset = "0xAD4560", VA = "0xAD4560")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C2B")]
			[Address(RVA = "0xAD4568", Offset = "0xAD4568", VA = "0xAD4568")]
			set
			{
			}
		}

		[Token(Token = "0x170001C8")]
		public float stepping
		{
			[Token(Token = "0x6000C2C")]
			[Address(RVA = "0xAD45AC", Offset = "0xAD45AC", VA = "0xAD45AC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C2D")]
			[Address(RVA = "0xAD45B4", Offset = "0xAD45B4", VA = "0xAD45B4")]
			set
			{
			}
		}

		[Token(Token = "0x170001C9")]
		public float steppingNear
		{
			[Token(Token = "0x6000C2E")]
			[Address(RVA = "0xAD45F8", Offset = "0xAD45F8", VA = "0xAD45F8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C2F")]
			[Address(RVA = "0xAD4600", Offset = "0xAD4600", VA = "0xAD4600")]
			set
			{
			}
		}

		[Token(Token = "0x170001CA")]
		public bool dithering
		{
			[Token(Token = "0x6000C30")]
			[Address(RVA = "0xAD4644", Offset = "0xAD4644", VA = "0xAD4644")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C31")]
			[Address(RVA = "0xAD464C", Offset = "0xAD464C", VA = "0xAD464C")]
			set
			{
			}
		}

		[Token(Token = "0x170001CB")]
		public float ditherStrength
		{
			[Token(Token = "0x6000C32")]
			[Address(RVA = "0xAD4694", Offset = "0xAD4694", VA = "0xAD4694")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C33")]
			[Address(RVA = "0xAD469C", Offset = "0xAD469C", VA = "0xAD469C")]
			set
			{
			}
		}

		[Token(Token = "0x170001CC")]
		public float jitterStrength
		{
			[Token(Token = "0x6000C34")]
			[Address(RVA = "0xAD46D8", Offset = "0xAD46D8", VA = "0xAD46D8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C35")]
			[Address(RVA = "0xAD46E0", Offset = "0xAD46E0", VA = "0xAD46E0")]
			set
			{
			}
		}

		[Token(Token = "0x170001CD")]
		public bool lightScatteringEnabled
		{
			[Token(Token = "0x6000C36")]
			[Address(RVA = "0xAD471C", Offset = "0xAD471C", VA = "0xAD471C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C37")]
			[Address(RVA = "0xAD4724", Offset = "0xAD4724", VA = "0xAD4724")]
			set
			{
			}
		}

		[Token(Token = "0x170001CE")]
		public float lightScatteringDiffusion
		{
			[Token(Token = "0x6000C38")]
			[Address(RVA = "0xAD476C", Offset = "0xAD476C", VA = "0xAD476C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C39")]
			[Address(RVA = "0xAD4774", Offset = "0xAD4774", VA = "0xAD4774")]
			set
			{
			}
		}

		[Token(Token = "0x170001CF")]
		public float lightScatteringSpread
		{
			[Token(Token = "0x6000C3A")]
			[Address(RVA = "0xAD47B0", Offset = "0xAD47B0", VA = "0xAD47B0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C3B")]
			[Address(RVA = "0xAD47B8", Offset = "0xAD47B8", VA = "0xAD47B8")]
			set
			{
			}
		}

		[Token(Token = "0x170001D0")]
		public int lightScatteringSamples
		{
			[Token(Token = "0x6000C3C")]
			[Address(RVA = "0xAD47F4", Offset = "0xAD47F4", VA = "0xAD47F4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000C3D")]
			[Address(RVA = "0xAD47FC", Offset = "0xAD47FC", VA = "0xAD47FC")]
			set
			{
			}
		}

		[Token(Token = "0x170001D1")]
		public float lightScatteringWeight
		{
			[Token(Token = "0x6000C3E")]
			[Address(RVA = "0xAD4838", Offset = "0xAD4838", VA = "0xAD4838")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C3F")]
			[Address(RVA = "0xAD4840", Offset = "0xAD4840", VA = "0xAD4840")]
			set
			{
			}
		}

		[Token(Token = "0x170001D2")]
		public float lightScatteringIllumination
		{
			[Token(Token = "0x6000C40")]
			[Address(RVA = "0xAD487C", Offset = "0xAD487C", VA = "0xAD487C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C41")]
			[Address(RVA = "0xAD4884", Offset = "0xAD4884", VA = "0xAD4884")]
			set
			{
			}
		}

		[Token(Token = "0x170001D3")]
		public float lightScatteringDecay
		{
			[Token(Token = "0x6000C42")]
			[Address(RVA = "0xAD48C0", Offset = "0xAD48C0", VA = "0xAD48C0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C43")]
			[Address(RVA = "0xAD48C8", Offset = "0xAD48C8", VA = "0xAD48C8")]
			set
			{
			}
		}

		[Token(Token = "0x170001D4")]
		public float lightScatteringExposure
		{
			[Token(Token = "0x6000C44")]
			[Address(RVA = "0xAD4904", Offset = "0xAD4904", VA = "0xAD4904")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C45")]
			[Address(RVA = "0xAD490C", Offset = "0xAD490C", VA = "0xAD490C")]
			set
			{
			}
		}

		[Token(Token = "0x170001D5")]
		public float lightScatteringJittering
		{
			[Token(Token = "0x6000C46")]
			[Address(RVA = "0xAD4948", Offset = "0xAD4948", VA = "0xAD4948")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C47")]
			[Address(RVA = "0xAD4950", Offset = "0xAD4950", VA = "0xAD4950")]
			set
			{
			}
		}

		[Token(Token = "0x170001D6")]
		public int lightScatteringBlurDownscale
		{
			[Token(Token = "0x6000C48")]
			[Address(RVA = "0xAD498C", Offset = "0xAD498C", VA = "0xAD498C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000C49")]
			[Address(RVA = "0xAD4994", Offset = "0xAD4994", VA = "0xAD4994")]
			set
			{
			}
		}

		[Token(Token = "0x170001D7")]
		public bool fogBlur
		{
			[Token(Token = "0x6000C4A")]
			[Address(RVA = "0xAD49D0", Offset = "0xAD49D0", VA = "0xAD49D0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C4B")]
			[Address(RVA = "0xAD49D8", Offset = "0xAD49D8", VA = "0xAD49D8")]
			set
			{
			}
		}

		[Token(Token = "0x170001D8")]
		public float fogBlurDepth
		{
			[Token(Token = "0x6000C4C")]
			[Address(RVA = "0xAD4A20", Offset = "0xAD4A20", VA = "0xAD4A20")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C4D")]
			[Address(RVA = "0xAD4A28", Offset = "0xAD4A28", VA = "0xAD4A28")]
			set
			{
			}
		}

		[Token(Token = "0x170001D9")]
		public bool sunShadows
		{
			[Token(Token = "0x6000C4E")]
			[Address(RVA = "0xAD4A64", Offset = "0xAD4A64", VA = "0xAD4A64")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C4F")]
			[Address(RVA = "0xAD4A6C", Offset = "0xAD4A6C", VA = "0xAD4A6C")]
			set
			{
			}
		}

		[Token(Token = "0x170001DA")]
		public LayerMask sunShadowsLayerMask
		{
			[Token(Token = "0x6000C50")]
			[Address(RVA = "0xAD4C38", Offset = "0xAD4C38", VA = "0xAD4C38")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x6000C51")]
			[Address(RVA = "0xAD4C40", Offset = "0xAD4C40", VA = "0xAD4C40")]
			set
			{
			}
		}

		[Token(Token = "0x170001DB")]
		public float sunShadowsStrength
		{
			[Token(Token = "0x6000C52")]
			[Address(RVA = "0xAD4C98", Offset = "0xAD4C98", VA = "0xAD4C98")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C53")]
			[Address(RVA = "0xAD4CA0", Offset = "0xAD4CA0", VA = "0xAD4CA0")]
			set
			{
			}
		}

		[Token(Token = "0x170001DC")]
		public float sunShadowsBias
		{
			[Token(Token = "0x6000C54")]
			[Address(RVA = "0xAD4CDC", Offset = "0xAD4CDC", VA = "0xAD4CDC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C55")]
			[Address(RVA = "0xAD4CE4", Offset = "0xAD4CE4", VA = "0xAD4CE4")]
			set
			{
			}
		}

		[Token(Token = "0x170001DD")]
		public float sunShadowsJitterStrength
		{
			[Token(Token = "0x6000C56")]
			[Address(RVA = "0xAD4D24", Offset = "0xAD4D24", VA = "0xAD4D24")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C57")]
			[Address(RVA = "0xAD4D2C", Offset = "0xAD4D2C", VA = "0xAD4D2C")]
			set
			{
			}
		}

		[Token(Token = "0x170001DE")]
		public int sunShadowsResolution
		{
			[Token(Token = "0x6000C58")]
			[Address(RVA = "0xAD4D68", Offset = "0xAD4D68", VA = "0xAD4D68")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000C59")]
			[Address(RVA = "0xAD4D70", Offset = "0xAD4D70", VA = "0xAD4D70")]
			set
			{
			}
		}

		[Token(Token = "0x170001DF")]
		public float sunShadowsMaxDistance
		{
			[Token(Token = "0x6000C5A")]
			[Address(RVA = "0xAD4DB8", Offset = "0xAD4DB8", VA = "0xAD4DB8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C5B")]
			[Address(RVA = "0xAD4DC0", Offset = "0xAD4DC0", VA = "0xAD4DC0")]
			set
			{
			}
		}

		[Token(Token = "0x170001E0")]
		public SUN_SHADOWS_BAKE_MODE sunShadowsBakeMode
		{
			[Token(Token = "0x6000C5C")]
			[Address(RVA = "0xAD4E00", Offset = "0xAD4E00", VA = "0xAD4E00")]
			get
			{
				return default(SUN_SHADOWS_BAKE_MODE);
			}
			[Token(Token = "0x6000C5D")]
			[Address(RVA = "0xAD4E08", Offset = "0xAD4E08", VA = "0xAD4E08")]
			set
			{
			}
		}

		[Token(Token = "0x170001E1")]
		public float sunShadowsRefreshInterval
		{
			[Token(Token = "0x6000C5E")]
			[Address(RVA = "0xAD4E48", Offset = "0xAD4E48", VA = "0xAD4E48")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C5F")]
			[Address(RVA = "0xAD4E50", Offset = "0xAD4E50", VA = "0xAD4E50")]
			set
			{
			}
		}

		[Token(Token = "0x170001E2")]
		public float sunShadowsCancellation
		{
			[Token(Token = "0x6000C60")]
			[Address(RVA = "0xAD4E8C", Offset = "0xAD4E8C", VA = "0xAD4E8C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C61")]
			[Address(RVA = "0xAD4E94", Offset = "0xAD4E94", VA = "0xAD4E94")]
			set
			{
			}
		}

		[Token(Token = "0x170001E3")]
		public float turbulenceStrength
		{
			[Token(Token = "0x6000C62")]
			[Address(RVA = "0xAD4ED0", Offset = "0xAD4ED0", VA = "0xAD4ED0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C63")]
			[Address(RVA = "0xAD4ED8", Offset = "0xAD4ED8", VA = "0xAD4ED8")]
			set
			{
			}
		}

		[Token(Token = "0x170001E4")]
		public bool useXYPlane
		{
			[Token(Token = "0x6000C64")]
			[Address(RVA = "0xAD4F28", Offset = "0xAD4F28", VA = "0xAD4F28")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C65")]
			[Address(RVA = "0xAD4F30", Offset = "0xAD4F30", VA = "0xAD4F30")]
			set
			{
			}
		}

		[Token(Token = "0x170001E5")]
		public bool useSinglePassStereoRenderingMatrix
		{
			[Token(Token = "0x6000C66")]
			[Address(RVA = "0xAD4F8C", Offset = "0xAD4F8C", VA = "0xAD4F8C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C67")]
			[Address(RVA = "0xAD4F94", Offset = "0xAD4F94", VA = "0xAD4F94")]
			set
			{
			}
		}

		[Token(Token = "0x170001E6")]
		public SPSR_BEHAVIOUR spsrBehaviour
		{
			[Token(Token = "0x6000C68")]
			[Address(RVA = "0xAD4FBC", Offset = "0xAD4FBC", VA = "0xAD4FBC")]
			get
			{
				return default(SPSR_BEHAVIOUR);
			}
			[Token(Token = "0x6000C69")]
			[Address(RVA = "0xAD4FC4", Offset = "0xAD4FC4", VA = "0xAD4FC4")]
			set
			{
			}
		}

		[Token(Token = "0x170001E7")]
		public bool reduceFlickerBigWorlds
		{
			[Token(Token = "0x6000C6A")]
			[Address(RVA = "0xAD4FE0", Offset = "0xAD4FE0", VA = "0xAD4FE0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C6B")]
			[Address(RVA = "0xAD4FE8", Offset = "0xAD4FE8", VA = "0xAD4FE8")]
			set
			{
			}
		}

		[Token(Token = "0x170001E8")]
		public bool enableMask
		{
			[Token(Token = "0x6000C6C")]
			[Address(RVA = "0xAD5010", Offset = "0xAD5010", VA = "0xAD5010")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C6D")]
			[Address(RVA = "0xAD5018", Offset = "0xAD5018", VA = "0xAD5018")]
			set
			{
			}
		}

		[Token(Token = "0x170001E9")]
		public LayerMask maskLayer
		{
			[Token(Token = "0x6000C6E")]
			[Address(RVA = "0xAD55E0", Offset = "0xAD55E0", VA = "0xAD55E0")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x6000C6F")]
			[Address(RVA = "0xAD55E8", Offset = "0xAD55E8", VA = "0xAD55E8")]
			set
			{
			}
		}

		[Token(Token = "0x170001EA")]
		public int maskDownsampling
		{
			[Token(Token = "0x6000C70")]
			[Address(RVA = "0xAD564C", Offset = "0xAD564C", VA = "0xAD564C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000C71")]
			[Address(RVA = "0xAD5654", Offset = "0xAD5654", VA = "0xAD5654")]
			set
			{
			}
		}

		[Token(Token = "0x170001EB")]
		public Camera fogCamera
		{
			[Token(Token = "0x6000C72")]
			[Address(RVA = "0xAD568C", Offset = "0xAD568C", VA = "0xAD568C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EC")]
		public int renderingInstancesCount
		{
			[Token(Token = "0x6000C73")]
			[Address(RVA = "0xAD5694", Offset = "0xAD5694", VA = "0xAD5694")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001ED")]
		public List<VolumetricFog> renderingInstances
		{
			[Token(Token = "0x6000C74")]
			[Address(RVA = "0xAD569C", Offset = "0xAD569C", VA = "0xAD569C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EE")]
		public List<VolumetricFog> instances
		{
			[Token(Token = "0x6000C75")]
			[Address(RVA = "0xAD56A4", Offset = "0xAD56A4", VA = "0xAD56A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EF")]
		public bool hasCamera
		{
			[Token(Token = "0x6000C76")]
			[Address(RVA = "0xAD56AC", Offset = "0xAD56AC", VA = "0xAD56AC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001F0")]
		public bool fogOfWarEnabled
		{
			[Token(Token = "0x6000CC7")]
			[Address(RVA = "0xADE328", Offset = "0xADE328", VA = "0xADE328")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000CC8")]
			[Address(RVA = "0xADE330", Offset = "0xADE330", VA = "0xADE330")]
			set
			{
			}
		}

		[Token(Token = "0x170001F1")]
		public Vector3 fogOfWarCenter
		{
			[Token(Token = "0x6000CC9")]
			[Address(RVA = "0xADE380", Offset = "0xADE380", VA = "0xADE380")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000CCA")]
			[Address(RVA = "0xADE390", Offset = "0xADE390", VA = "0xADE390")]
			set
			{
			}
		}

		[Token(Token = "0x170001F2")]
		public Vector3 fogOfWarSize
		{
			[Token(Token = "0x6000CCB")]
			[Address(RVA = "0xADE400", Offset = "0xADE400", VA = "0xADE400")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000CCC")]
			[Address(RVA = "0xADE410", Offset = "0xADE410", VA = "0xADE410")]
			set
			{
			}
		}

		[Token(Token = "0x170001F3")]
		public int fogOfWarTextureSize
		{
			[Token(Token = "0x6000CCD")]
			[Address(RVA = "0xADE490", Offset = "0xADE490", VA = "0xADE490")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000CCE")]
			[Address(RVA = "0xADE498", Offset = "0xADE498", VA = "0xADE498")]
			set
			{
			}
		}

		[Token(Token = "0x170001F4")]
		public float fogOfWarRestoreDelay
		{
			[Token(Token = "0x6000CCF")]
			[Address(RVA = "0xADE4E8", Offset = "0xADE4E8", VA = "0xADE4E8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000CD0")]
			[Address(RVA = "0xADE4F0", Offset = "0xADE4F0", VA = "0xADE4F0")]
			set
			{
			}
		}

		[Token(Token = "0x170001F5")]
		public float fogOfWarRestoreDuration
		{
			[Token(Token = "0x6000CD1")]
			[Address(RVA = "0xADE50C", Offset = "0xADE50C", VA = "0xADE50C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000CD2")]
			[Address(RVA = "0xADE514", Offset = "0xADE514", VA = "0xADE514")]
			set
			{
			}
		}

		[Token(Token = "0x170001F6")]
		public float fogOfWarSmoothness
		{
			[Token(Token = "0x6000CD3")]
			[Address(RVA = "0xADE530", Offset = "0xADE530", VA = "0xADE530")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000CD4")]
			[Address(RVA = "0xADE538", Offset = "0xADE538", VA = "0xADE538")]
			set
			{
			}
		}

		[Token(Token = "0x170001F7")]
		public bool fogOfWarBlur
		{
			[Token(Token = "0x6000CD5")]
			[Address(RVA = "0xADE554", Offset = "0xADE554", VA = "0xADE554")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000CD6")]
			[Address(RVA = "0xADE55C", Offset = "0xADE55C", VA = "0xADE55C")]
			set
			{
			}
		}

		[Token(Token = "0x170001F8")]
		public bool maskEditorEnabled
		{
			[Token(Token = "0x6000CD7")]
			[Address(RVA = "0xADE584", Offset = "0xADE584", VA = "0xADE584")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000CD8")]
			[Address(RVA = "0xADE58C", Offset = "0xADE58C", VA = "0xADE58C")]
			set
			{
			}
		}

		[Token(Token = "0x170001F9")]
		public MASK_TEXTURE_BRUSH_MODE maskBrushMode
		{
			[Token(Token = "0x6000CD9")]
			[Address(RVA = "0xADE5AC", Offset = "0xADE5AC", VA = "0xADE5AC")]
			get
			{
				return default(MASK_TEXTURE_BRUSH_MODE);
			}
			[Token(Token = "0x6000CDA")]
			[Address(RVA = "0xADE5B4", Offset = "0xADE5B4", VA = "0xADE5B4")]
			set
			{
			}
		}

		[Token(Token = "0x170001FA")]
		public int maskBrushWidth
		{
			[Token(Token = "0x6000CDB")]
			[Address(RVA = "0xADE5C8", Offset = "0xADE5C8", VA = "0xADE5C8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000CDC")]
			[Address(RVA = "0xADE5D0", Offset = "0xADE5D0", VA = "0xADE5D0")]
			set
			{
			}
		}

		[Token(Token = "0x170001FB")]
		public float maskBrushFuzziness
		{
			[Token(Token = "0x6000CDD")]
			[Address(RVA = "0xADE5E4", Offset = "0xADE5E4", VA = "0xADE5E4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000CDE")]
			[Address(RVA = "0xADE5EC", Offset = "0xADE5EC", VA = "0xADE5EC")]
			set
			{
			}
		}

		[Token(Token = "0x170001FC")]
		public float maskBrushOpacity
		{
			[Token(Token = "0x6000CDF")]
			[Address(RVA = "0xADE600", Offset = "0xADE600", VA = "0xADE600")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000CE0")]
			[Address(RVA = "0xADE608", Offset = "0xADE608", VA = "0xADE608")]
			set
			{
			}
		}

		[Token(Token = "0x170001FD")]
		public Texture2D fogOfWarTexture
		{
			[Token(Token = "0x6000CE1")]
			[Address(RVA = "0xADE61C", Offset = "0xADE61C", VA = "0xADE61C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CE2")]
			[Address(RVA = "0xADE624", Offset = "0xADE624", VA = "0xADE624")]
			set
			{
			}
		}

		[Token(Token = "0x170001FE")]
		public Color32[] fogOfWarTextureData
		{
			[Token(Token = "0x6000CF6")]
			[Address(RVA = "0xAE003C", Offset = "0xAE003C", VA = "0xAE003C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CF7")]
			[Address(RVA = "0xAE0044", Offset = "0xAE0044", VA = "0xAE0044")]
			set
			{
			}
		}

		[Token(Token = "0x6000C77")]
		[Address(RVA = "0xAD5768", Offset = "0xAD5768", VA = "0xAD5768")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C78")]
		[Address(RVA = "0xAD63F8", Offset = "0xAD63F8", VA = "0xAD63F8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000C79")]
		[Address(RVA = "0xAD65C4", Offset = "0xAD65C4", VA = "0xAD65C4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000C7A")]
		[Address(RVA = "0xAD6CAC", Offset = "0xAD6CAC", VA = "0xAD6CAC")]
		public void DestroySelf()
		{
		}

		[Token(Token = "0x6000C7B")]
		[Address(RVA = "0xAD6D50", Offset = "0xAD6D50", VA = "0xAD6D50")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C7C")]
		[Address(RVA = "0xAD6D9C", Offset = "0xAD6D9C", VA = "0xAD6D9C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C7D")]
		[Address(RVA = "0xAD858C", Offset = "0xAD858C", VA = "0xAD858C")]
		public void OnPreCull()
		{
		}

		[Token(Token = "0x6000C7E")]
		[Address(RVA = "0xAD8F28", Offset = "0xAD8F28", VA = "0xAD8F28")]
		private void OnPostRender()
		{
		}

		[Token(Token = "0x6000C7F")]
		[Address(RVA = "0xAD9054", Offset = "0xAD9054", VA = "0xAD9054")]
		private void DoOnPostRender()
		{
		}

		[Token(Token = "0x6000C80")]
		[Address(RVA = "0xAD90DC", Offset = "0xAD90DC", VA = "0xAD90DC")]
		private void OnDidApplyAnimationProperties()
		{
		}

		[Token(Token = "0x6000C81")]
		[Address(RVA = "0xAD5D38", Offset = "0xAD5D38", VA = "0xAD5D38")]
		private void FindMainCamera()
		{
		}

		[Token(Token = "0x6000C82")]
		[Address(RVA = "0xAD5C2C", Offset = "0xAD5C2C", VA = "0xAD5C2C")]
		private bool IsPartOfScene()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C83")]
		[Address(RVA = "0xAD5E84", Offset = "0xAD5E84", VA = "0xAD5E84")]
		private void InitFogMaterial()
		{
		}

		[Token(Token = "0x6000C84")]
		[Address(RVA = "0xAD17AC", Offset = "0xAD17AC", VA = "0xAD17AC")]
		private void UpdateRenderComponents()
		{
		}

		[Token(Token = "0x6000C85")]
		private void DestroyRenderComponent<T>() where T : IVolumetricFogRenderComponent
		{
		}

		[Token(Token = "0x6000C86")]
		private void AssignRenderComponent<T>() where T : Component, IVolumetricFogRenderComponent
		{
		}

		[Token(Token = "0x6000C87")]
		[Address(RVA = "0xAD92AC", Offset = "0xAD92AC", VA = "0xAD92AC")]
		private void RegisterFogArea(VolumetricFog fog)
		{
		}

		[Token(Token = "0x6000C88")]
		[Address(RVA = "0xAD6A30", Offset = "0xAD6A30", VA = "0xAD6A30")]
		private void UnregisterFogArea(VolumetricFog fog)
		{
		}

		[Token(Token = "0x6000C89")]
		[Address(RVA = "0xAD61AC", Offset = "0xAD61AC", VA = "0xAD61AC")]
		private void RegisterWithRenderers()
		{
		}

		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0xAD6924", Offset = "0xAD6924", VA = "0xAD6924")]
		private void UnregisterWithRenderers()
		{
		}

		[Token(Token = "0x6000C8B")]
		[Address(RVA = "0xAD1B94", Offset = "0xAD1B94", VA = "0xAD1B94")]
		public void UpdateMultiCameraSetup()
		{
		}

		[Token(Token = "0x6000C8C")]
		[Address(RVA = "0xAD934C", Offset = "0xAD934C", VA = "0xAD934C")]
		private void SetEnableMultipleCameras(bool state)
		{
		}

		[Token(Token = "0x6000C8D")]
		[Address(RVA = "0xAD9358", Offset = "0xAD9358", VA = "0xAD9358")]
		internal void DoOnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000C8E")]
		[Address(RVA = "0xADA3D8", Offset = "0xADA3D8", VA = "0xADA3D8")]
		internal void DoOnRenderImageInstance(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0xADBF90", Offset = "0xADBF90", VA = "0xADBF90")]
		private int GetScaledSize(int size, float factor)
		{
			return default(int);
		}

		[Token(Token = "0x6000C90")]
		[Address(RVA = "0xAD6C14", Offset = "0xAD6C14", VA = "0xAD6C14")]
		private void CleanUpDepthTexture()
		{
		}

		[Token(Token = "0x6000C91")]
		[Address(RVA = "0xAD87B8", Offset = "0xAD87B8", VA = "0xAD87B8")]
		private void GetTransparentDepth()
		{
		}

		[Token(Token = "0x6000C92")]
		[Address(RVA = "0xAD8588", Offset = "0xAD8588", VA = "0xAD8588")]
		private void CastSunShadows()
		{
		}

		[Token(Token = "0x6000C93")]
		[Address(RVA = "0xADC2D0", Offset = "0xADC2D0", VA = "0xADC2D0")]
		private void GetSunShadows()
		{
		}

		[Token(Token = "0x6000C94")]
		[Address(RVA = "0xADBFD4", Offset = "0xADBFD4", VA = "0xADBFD4")]
		private void SetBlurTexture(RenderTexture source, RenderTextureDescriptor desc)
		{
		}

		[Token(Token = "0x6000C95")]
		[Address(RVA = "0xAD4B7C", Offset = "0xAD4B7C", VA = "0xAD4B7C")]
		private void DestroySunShadowsDependencies()
		{
		}

		[Token(Token = "0x6000C96")]
		[Address(RVA = "0xAD4AD8", Offset = "0xAD4AD8", VA = "0xAD4AD8")]
		private void CleanUpTextureDepthSun()
		{
		}

		[Token(Token = "0x6000C97")]
		[Address(RVA = "0xADCD0C", Offset = "0xADCD0C", VA = "0xADCD0C")]
		public string GetCurrentPresetName()
		{
			return null;
		}

		[Token(Token = "0x6000C98")]
		[Address(RVA = "0xAD02F8", Offset = "0xAD02F8", VA = "0xAD02F8")]
		public void UpdatePreset()
		{
		}

		[Token(Token = "0x6000C99")]
		[Address(RVA = "0xADCE04", Offset = "0xADCE04", VA = "0xADCE04")]
		public void CheckWaterLevel(bool baseZero)
		{
		}

		[Token(Token = "0x6000C9A")]
		[Address(RVA = "0xADD0A0", Offset = "0xADD0A0", VA = "0xADD0A0")]
		public static Terrain GetActiveTerrain()
		{
			return null;
		}

		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0xAD7B6C", Offset = "0xAD7B6C", VA = "0xAD7B6C")]
		private void UpdateMaterialFogColor()
		{
		}

		[Token(Token = "0x6000C9C")]
		[Address(RVA = "0xAD7C34", Offset = "0xAD7C34", VA = "0xAD7C34")]
		private void UpdateMaterialHeights(Camera mainCamera)
		{
		}

		[Token(Token = "0x6000C9D")]
		[Address(RVA = "0xAD18A8", Offset = "0xAD18A8", VA = "0xAD18A8")]
		public void UpdateMaterialProperties(bool forceNow = false)
		{
		}

		[Token(Token = "0x6000C9E")]
		[Address(RVA = "0xAD61A4", Offset = "0xAD61A4", VA = "0xAD61A4")]
		public void UpdateMaterialPropertiesNow()
		{
		}

		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0xAD987C", Offset = "0xAD987C", VA = "0xAD987C")]
		private void UpdateMaterialPropertiesNow(Camera mainCamera)
		{
		}

		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0xADD54C", Offset = "0xADD54C", VA = "0xADD54C")]
		public void NotifyChangesToFogInstances()
		{
		}

		[Token(Token = "0x6000CA1")]
		[Address(RVA = "0xADCB44", Offset = "0xADCB44", VA = "0xADCB44")]
		private void UpdateSunShadowsData()
		{
		}

		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0xADD37C", Offset = "0xADD37C", VA = "0xADD37C")]
		private void SetupDirectionalLightCommandBuffer()
		{
		}

		[Token(Token = "0x6000CA3")]
		[Address(RVA = "0xAD64BC", Offset = "0xAD64BC", VA = "0xAD64BC")]
		private void RemoveDirectionalLightCommandBuffer()
		{
		}

		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0xAD2A48", Offset = "0xAD2A48", VA = "0xAD2A48")]
		private void UpdateWindSpeedQuick()
		{
		}

		[Token(Token = "0x6000CA5")]
		[Address(RVA = "0xADB6FC", Offset = "0xADB6FC", VA = "0xADB6FC")]
		private void UpdateScatteringData(Camera mainCamera)
		{
		}

		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0xAD1EF4", Offset = "0xAD1EF4", VA = "0xAD1EF4")]
		private void UpdateSun()
		{
		}

		[Token(Token = "0x6000CA7")]
		[Address(RVA = "0xAD7A30", Offset = "0xAD7A30", VA = "0xAD7A30")]
		private void UpdateSkyColor(float alpha)
		{
		}

		[Token(Token = "0x6000CA8")]
		[Address(RVA = "0xAD20C4", Offset = "0xAD20C4", VA = "0xAD20C4")]
		private void UpdateTextureAlpha()
		{
		}

		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0xAD1A90", Offset = "0xAD1A90", VA = "0xAD1A90")]
		private void UpdateTexture()
		{
		}

		[Token(Token = "0x6000CAA")]
		[Address(RVA = "0xAD2DB0", Offset = "0xAD2DB0", VA = "0xAD2DB0")]
		private void ComputeLightColor()
		{
		}

		[Token(Token = "0x6000CAB")]
		[Address(RVA = "0xAD7EA0", Offset = "0xAD7EA0", VA = "0xAD7EA0")]
		private void UpdateTextureColors(Color[] colors, bool forceUpdateEntireTexture)
		{
		}

		[Token(Token = "0x6000CAC")]
		[Address(RVA = "0xAD8C74", Offset = "0xAD8C74", VA = "0xAD8C74")]
		internal void ApplyChaos()
		{
		}

		[Token(Token = "0x6000CAD")]
		[Address(RVA = "0xAD9274", Offset = "0xAD9274", VA = "0xAD9274")]
		private void CopyTransitionValues()
		{
		}

		[Token(Token = "0x6000CAE")]
		[Address(RVA = "0xADD67C", Offset = "0xADD67C", VA = "0xADD67C")]
		public void SetTargetProfile(VolumetricFogProfile targetProfile, float duration)
		{
		}

		[Token(Token = "0x6000CAF")]
		[Address(RVA = "0xADD738", Offset = "0xADD738", VA = "0xADD738")]
		public void ClearTargetProfile(float duration)
		{
		}

		[Token(Token = "0x6000CB0")]
		[Address(RVA = "0xADD740", Offset = "0xADD740", VA = "0xADD740")]
		public void SetTargetAlpha(float newFogAlpha, float newSkyHazeAlpha, float duration)
		{
		}

		[Token(Token = "0x6000CB1")]
		[Address(RVA = "0xADD794", Offset = "0xADD794", VA = "0xADD794")]
		public void ClearTargetAlpha(float duration)
		{
		}

		[Token(Token = "0x6000CB2")]
		[Address(RVA = "0xADD7EC", Offset = "0xADD7EC", VA = "0xADD7EC")]
		public void SetTargetColor(Color newColor, float duration)
		{
		}

		[Token(Token = "0x6000CB3")]
		[Address(RVA = "0xADD84C", Offset = "0xADD84C", VA = "0xADD84C")]
		public void ClearTargetColor(float duration)
		{
		}

		[Token(Token = "0x6000CB4")]
		[Address(RVA = "0xADD884", Offset = "0xADD884", VA = "0xADD884")]
		public void SetTargetSpecularColor(Color newSpecularColor, float duration)
		{
		}

		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0xADD8E4", Offset = "0xADD8E4", VA = "0xADD8E4")]
		public void ClearTargetSpecularColor(float duration)
		{
		}

		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0xADD91C", Offset = "0xADD91C", VA = "0xADD91C")]
		public void SetTargetLightColor(Color newLightColor, float duration)
		{
		}

		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0xADD980", Offset = "0xADD980", VA = "0xADD980")]
		public void ClearTargetLightColor(float duration)
		{
		}

		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0xAD3E64", Offset = "0xAD3E64", VA = "0xAD3E64")]
		public void CheckPointLightData()
		{
		}

		[Token(Token = "0x6000CB9")]
		[Address(RVA = "0xADD9B8", Offset = "0xADD9B8", VA = "0xADD9B8")]
		private void PointLightDataSetDefaults(int k)
		{
		}

		[Token(Token = "0x6000CBA")]
		[Address(RVA = "0xADBB8C", Offset = "0xADBB8C", VA = "0xADBB8C")]
		private void SetPointLightMaterialProperties(Camera mainCamera)
		{
		}

		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0xADDAC4", Offset = "0xADDAC4", VA = "0xADDAC4")]
		public Light GetPointLight(int index)
		{
			return null;
		}

		[Token(Token = "0x6000CBC")]
		[Address(RVA = "0xADDB14", Offset = "0xADDB14", VA = "0xADDB14")]
		private void TrackNewLights()
		{
		}

		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0xAD3958", Offset = "0xAD3958", VA = "0xAD3958")]
		public void TrackPointLights(bool forceImmediateUpdate = false)
		{
		}

		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0xADDB98", Offset = "0xADDB98", VA = "0xADDB98")]
		private Light GetNearestLight(Light[] lights)
		{
			return null;
		}

		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0xADDD5C", Offset = "0xADDD5C", VA = "0xADDD5C")]
		public static VolumetricFog CreateFogArea(Vector3 position, float radius, float height = 16f, float fallOff = 1f)
		{
			return null;
		}

		[Token(Token = "0x6000CC0")]
		[Address(RVA = "0xADDF90", Offset = "0xADDF90", VA = "0xADDF90")]
		public static VolumetricFog CreateFogArea(Vector3 position, Vector3 boxSize)
		{
			return null;
		}

		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0xADDE20", Offset = "0xADDE20", VA = "0xADDE20")]
		private static VolumetricFog CreateFogAreaPlaceholder(bool spherical, Vector3 position, float radius, float height, float depth)
		{
			return null;
		}

		[Token(Token = "0x6000CC2")]
		[Address(RVA = "0xADE05C", Offset = "0xADE05C", VA = "0xADE05C")]
		public static void RemoveAllFogAreas()
		{
		}

		[Token(Token = "0x6000CC3")]
		[Address(RVA = "0xADB36C", Offset = "0xADB36C", VA = "0xADB36C")]
		private void CheckFogAreaDimensions()
		{
		}

		[Token(Token = "0x6000CC4")]
		[Address(RVA = "0xAD505C", Offset = "0xAD505C", VA = "0xAD505C")]
		public void UpdateVolumeMask()
		{
		}

		[Token(Token = "0x6000CC5")]
		[Address(RVA = "0xADE1BC", Offset = "0xADE1BC", VA = "0xADE1BC")]
		public void TogglePreviewMask()
		{
		}

		[Token(Token = "0x6000CC6")]
		[Address(RVA = "0xAD641C", Offset = "0xAD641C", VA = "0xAD641C")]
		private void RemoveMaskCommandBuffer()
		{
		}

		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0xAD90E8", Offset = "0xAD90E8", VA = "0xAD90E8")]
		private void FogOfWarInit()
		{
		}

		[Token(Token = "0x6000CE4")]
		[Address(RVA = "0xAD6AD0", Offset = "0xAD6AD0", VA = "0xAD6AD0")]
		private void FogOfWarDestroy()
		{
		}

		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0xADE784", Offset = "0xADE784", VA = "0xADE784")]
		public void ReloadFogOfWarTexture()
		{
		}

		[Token(Token = "0x6000CE6")]
		[Address(RVA = "0xADD1E0", Offset = "0xADD1E0", VA = "0xADD1E0")]
		private void FogOfWarUpdateTexture()
		{
		}

		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0xAD82E8", Offset = "0xAD82E8", VA = "0xAD82E8")]
		public void UpdateFogOfWar(bool forceUpload = false)
		{
		}

		[Token(Token = "0x6000CE8")]
		[Address(RVA = "0xADED1C", Offset = "0xADED1C", VA = "0xADED1C")]
		private void SetFowBlurTexture()
		{
		}

		[Token(Token = "0x6000CE9")]
		[Address(RVA = "0xADF010", Offset = "0xADF010", VA = "0xADF010")]
		private void CreateFoWBlurRTs()
		{
		}

		[Token(Token = "0x6000CEA")]
		[Address(RVA = "0xADF21C", Offset = "0xADF21C", VA = "0xADF21C")]
		public void SetFogOfWarAlpha(Vector3 worldPosition, float radius, float fogNewAlpha)
		{
		}

		[Token(Token = "0x6000CEB")]
		[Address(RVA = "0xADF250", Offset = "0xADF250", VA = "0xADF250")]
		public void SetFogOfWarAlpha(Vector3 worldPosition, float radius, float fogNewAlpha, float duration)
		{
		}

		[Token(Token = "0x6000CEC")]
		[Address(RVA = "0xADF62C", Offset = "0xADF62C", VA = "0xADF62C")]
		public void SetFogOfWarAlpha(Vector3 worldPosition, float radius, float fogNewAlpha, float duration, float smoothness)
		{
		}

		[Token(Token = "0x6000CED")]
		[Address(RVA = "0xADF280", Offset = "0xADF280", VA = "0xADF280")]
		public void SetFogOfWarAlpha(Vector3 worldPosition, float radius, float fogNewAlpha, bool blendAlpha, float duration, float smoothness, float restoreDelay, float restoreDuration)
		{
		}

		[Token(Token = "0x6000CEE")]
		[Address(RVA = "0xADF658", Offset = "0xADF658", VA = "0xADF658")]
		public void SetFogOfWarAlpha(Bounds bounds, float fogNewAlpha, float duration)
		{
		}

		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0xADFAD8", Offset = "0xADFAD8", VA = "0xADFAD8")]
		public void SetFogOfWarAlpha(Bounds bounds, float fogNewAlpha, float duration, float smoothness)
		{
		}

		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0xADF698", Offset = "0xADF698", VA = "0xADF698")]
		public void SetFogOfWarAlpha(Bounds bounds, float fogNewAlpha, bool blendAlpha, float duration, float smoothness, float restoreDelay, float restoreDuration)
		{
		}

		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0xADFB14", Offset = "0xADFB14", VA = "0xADFB14")]
		public void ResetFogOfWarAlpha(Vector3 worldPosition, float radius)
		{
		}

		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0xADFD60", Offset = "0xADFD60", VA = "0xADFD60")]
		public void ResetFogOfWarAlpha(Bounds bounds)
		{
		}

		[Token(Token = "0x6000CF3")]
		[Address(RVA = "0xAE002C", Offset = "0xAE002C", VA = "0xAE002C")]
		public void ResetFogOfWarAlpha(Vector3 position, Vector3 size)
		{
		}

		[Token(Token = "0x6000CF4")]
		[Address(RVA = "0xADFDDC", Offset = "0xADFDDC", VA = "0xADFDDC")]
		public void ResetFogOfWarAlpha(Vector3 position, float extentsX, float extentsZ)
		{
		}

		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0xADE880", Offset = "0xADE880", VA = "0xADE880")]
		public void ResetFogOfWar(byte alpha = byte.MaxValue)
		{
		}

		[Token(Token = "0x6000CF8")]
		[Address(RVA = "0xADEA50", Offset = "0xADEA50", VA = "0xADEA50")]
		private void AddFogOfWarTransitionSlot(int x, int y, byte initialAlpha, byte targetAlpha, float delay, float duration)
		{
		}

		[Token(Token = "0x6000CF9")]
		[Address(RVA = "0xAE0158", Offset = "0xAE0158", VA = "0xAE0158")]
		public float GetFogOfWarAlpha(Vector3 worldPosition)
		{
			return default(float);
		}

		[Token(Token = "0x6000CFA")]
		[Address(RVA = "0xAE0324", Offset = "0xAE0324", VA = "0xAE0324")]
		private void ShowFoWGizmo()
		{
		}

		[Token(Token = "0x6000CFB")]
		[Address(RVA = "0xAE0424", Offset = "0xAE0424", VA = "0xAE0424")]
		public VolumetricFog()
		{
		}
	}
	[Token(Token = "0x200022B")]
	[ExecuteInEditMode]
	public class VolumetricFogDayCycleManager : MonoBehaviour
	{
		[Token(Token = "0x4000F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79EFEC", Offset = "0x79EFEC")]
		public float currentTime;

		[Token(Token = "0x4000F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Gradient colorOverTime;

		[Token(Token = "0x4000F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve densityOverTime;

		[Token(Token = "0x4000F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int prevTime;

		[Token(Token = "0x4000F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private VolumetricFog[] fogs;

		[Token(Token = "0x6000D03")]
		[Address(RVA = "0xAFBEF8", Offset = "0xAFBEF8", VA = "0xAFBEF8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D04")]
		[Address(RVA = "0xAFC130", Offset = "0xAFC130", VA = "0xAFC130")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D05")]
		[Address(RVA = "0xAFC384", Offset = "0xAFC384", VA = "0xAFC384")]
		private float GetCurrentTime()
		{
			return default(float);
		}

		[Token(Token = "0x6000D06")]
		[Address(RVA = "0xAFC38C", Offset = "0xAFC38C", VA = "0xAFC38C")]
		public VolumetricFogDayCycleManager()
		{
		}
	}
	[Token(Token = "0x200022C")]
	public enum MASK_TEXTURE_BRUSH_MODE
	{
		[Token(Token = "0x4000F3B")]
		AddFog,
		[Token(Token = "0x4000F3C")]
		RemoveFog
	}
	[Token(Token = "0x200022D")]
	public class VolumetricFogLightParams : MonoBehaviour
	{
		[Token(Token = "0x4000F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float rangeMultiplier;

		[Token(Token = "0x4000F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float intensityMultiplier;

		[Token(Token = "0x6000D07")]
		[Address(RVA = "0xAFC394", Offset = "0xAFC394", VA = "0xAFC394")]
		public VolumetricFogLightParams()
		{
		}
	}
	[Token(Token = "0x200022E")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x796DD8", Offset = "0x796DD8")]
	[ExecuteInEditMode]
	public class VolumetricFogMaterialIntegration : MonoBehaviour
	{
		[Token(Token = "0x200022F")]
		private enum PropertyType
		{
			[Token(Token = "0x4000F44")]
			Float,
			[Token(Token = "0x4000F45")]
			Float3,
			[Token(Token = "0x4000F46")]
			Float4,
			[Token(Token = "0x4000F47")]
			Color,
			[Token(Token = "0x4000F48")]
			Texture2D,
			[Token(Token = "0x4000F49")]
			FloatArray,
			[Token(Token = "0x4000F4A")]
			Float4Array,
			[Token(Token = "0x4000F4B")]
			ColorArray,
			[Token(Token = "0x4000F4C")]
			Matrix4x4
		}

		[Token(Token = "0x2000230")]
		private struct Properties
		{
			[Token(Token = "0x4000F4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string name;

			[Token(Token = "0x4000F4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public PropertyType type;
		}

		[Token(Token = "0x4000F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Properties[] props;

		[Token(Token = "0x4000F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string[] keywords;

		[Token(Token = "0x4000F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VolumetricFog fog;

		[Token(Token = "0x4000F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Renderer[] materials;

		[Token(Token = "0x6000D08")]
		[Address(RVA = "0xAFC3A4", Offset = "0xAFC3A4", VA = "0xAFC3A4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D09")]
		[Address(RVA = "0xAFC400", Offset = "0xAFC400", VA = "0xAFC400")]
		private void OnPreRender()
		{
		}

		[Token(Token = "0x6000D0A")]
		[Address(RVA = "0xAFD45C", Offset = "0xAFD45C", VA = "0xAFD45C")]
		public VolumetricFogMaterialIntegration()
		{
		}
	}
	[Token(Token = "0x2000231")]
	[ImageEffectAllowedInSceneView]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x796E48", Offset = "0x796E48")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x796E48", Offset = "0x796E48")]
	[ExecuteInEditMode]
	public class VolumetricFogPosT : MonoBehaviour, IVolumetricFogRenderComponent
	{
		[Token(Token = "0x4000F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x79F004", Offset = "0x79F004")]
		private VolumetricFog <fog>k__BackingField;

		[Token(Token = "0x4000F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material copyOpaqueMat;

		[Token(Token = "0x170001FF")]
		public VolumetricFog fog
		{
			[Token(Token = "0x6000D0C")]
			[Address(RVA = "0xAFE1AC", Offset = "0xAFE1AC", VA = "0xAFE1AC", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A96B8", Offset = "0x7A96B8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D0D")]
			[Address(RVA = "0xAFE1B4", Offset = "0xAFE1B4", VA = "0xAFE1B4", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A96C8", Offset = "0x7A96C8")]
			set
			{
			}
		}

		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0xAFE1BC", Offset = "0xAFE1BC", VA = "0xAFE1BC")]
		public void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0xAFE478", Offset = "0xAFE478", VA = "0xAFE478", Slot = "6")]
		public void DestroySelf()
		{
		}

		[Token(Token = "0x6000D10")]
		[Address(RVA = "0xAFE4DC", Offset = "0xAFE4DC", VA = "0xAFE4DC")]
		public VolumetricFogPosT()
		{
		}
	}
	[Token(Token = "0x2000232")]
	[ImageEffectAllowedInSceneView]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x796EEC", Offset = "0x796EEC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x796EEC", Offset = "0x796EEC")]
	[ExecuteInEditMode]
	public class VolumetricFogPreT : MonoBehaviour, IVolumetricFogRenderComponent
	{
		[Token(Token = "0x4000F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x79F014", Offset = "0x79F014")]
		private VolumetricFog <fog>k__BackingField;

		[Token(Token = "0x4000F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RenderTexture opaqueFrame;

		[Token(Token = "0x17000200")]
		public VolumetricFog fog
		{
			[Token(Token = "0x6000D11")]
			[Address(RVA = "0xAFE4E4", Offset = "0xAFE4E4", VA = "0xAFE4E4", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A96D8", Offset = "0x7A96D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D12")]
			[Address(RVA = "0xAFE4EC", Offset = "0xAFE4EC", VA = "0xAFE4EC", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A96E8", Offset = "0x7A96E8")]
			set
			{
			}
		}

		[Token(Token = "0x6000D13")]
		[Address(RVA = "0xAFE4F4", Offset = "0xAFE4F4", VA = "0xAFE4F4")]
		[ImageEffectOpaque]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000D14")]
		[Address(RVA = "0xAFE6B8", Offset = "0xAFE6B8", VA = "0xAFE6B8")]
		private void OnPostRender()
		{
		}

		[Token(Token = "0x6000D15")]
		[Address(RVA = "0xAFE750", Offset = "0xAFE750", VA = "0xAFE750", Slot = "6")]
		public void DestroySelf()
		{
		}

		[Token(Token = "0x6000D16")]
		[Address(RVA = "0xAFE7B4", Offset = "0xAFE7B4", VA = "0xAFE7B4")]
		public VolumetricFogPreT()
		{
		}
	}
	[Token(Token = "0x2000233")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x796F90", Offset = "0x796F90")]
	public class VolumetricFogProfile : ScriptableObject
	{
		[Token(Token = "0x4000F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LIGHTING_MODEL lightingModel;

		[Token(Token = "0x4000F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool sunCopyColor;

		[Token(Token = "0x4000F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79F024", Offset = "0x79F024")]
		public float density;

		[Token(Token = "0x4000F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79F03C", Offset = "0x79F03C")]
		public float noiseStrength;

		[Token(Token = "0x4000F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79F054", Offset = "0x79F054")]
		public float height;

		[Token(Token = "0x4000F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79F070", Offset = "0x79F070")]
		public float heightFallOff;

		[Token(Token = "0x4000F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float baselineHeight;

		[Token(Token = "0x4000F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79F088", Offset = "0x79F088")]
		public float distance;

		[Token(Token = "0x4000F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79F0A4", Offset = "0x79F0A4")]
		public float distanceFallOff;

		[Token(Token = "0x4000F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float maxFogLength;

		[Token(Token = "0x4000F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79F0BC", Offset = "0x79F0BC")]
		public float maxFogLengthFallOff;

		[Token(Token = "0x4000F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool baselineRelativeToCamera;

		[Token(Token = "0x4000F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79F0D4", Offset = "0x79F0D4")]
		public float baselineRelativeToCameraDelay;

		[Token(Token = "0x4000F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79F0EC", Offset = "0x79F0EC")]
		public float noiseScale;

		[Token(Token = "0x4000F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79F108", Offset = "0x79F108")]
		public float noiseSparse;

		[Token(Token = "0x4000F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79F124", Offset = "0x79F124")]
		public float noiseFinalMultiplier;

		[Token(Token = "0x4000F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79F13C", Offset = "0x79F13C")]
		public float alpha;

		[Token(Token = "0x4000F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Color color;

		[Token(Token = "0x4000F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79F158", Offset = "0x79F158")]
		public float deepObscurance;

		[Token(Token = "0x4000F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Color specularColor;

		[Token(Token = "0x4000F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79F170", Offset = "0x79F170")]
		public float specularThreshold;

		[Token(Token = "0x4000F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79F188", Offset = "0x79F188")]
		public float specularIntensity;

		[Token(Token = "0x4000F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Vector3 lightDirection;

		[Token(Token = "0x4000F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79F1A0", Offset = "0x79F1A0")]
		public float lightIntensity;

		[Token(Token = "0x4000F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Color lightColor;

		[Token(Token = "0x4000F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79F1B8", Offset = "0x79F1B8")]
		public float speed;

		[Token(Token = "0x4000F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public bool useRealTime;

		[Token(Token = "0x4000F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Vector3 windDirection;

		[Token(Token = "0x4000F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79F1D0", Offset = "0x79F1D0")]
		public float turbulenceStrength;

		[Token(Token = "0x4000F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public bool useXYPlane;

		[Token(Token = "0x4000F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public Color skyColor;

		[Token(Token = "0x4000F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public float skyHaze;

		[Token(Token = "0x4000F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79F1E8", Offset = "0x79F1E8")]
		public float skySpeed;

		[Token(Token = "0x4000F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79F200", Offset = "0x79F200")]
		public float skyNoiseStrength;

		[Token(Token = "0x4000F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public float skyNoiseScale;

		[Token(Token = "0x4000F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79F218", Offset = "0x79F218")]
		public float skyAlpha;

		[Token(Token = "0x4000F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79F230", Offset = "0x79F230")]
		private float skyDepth;

		[Token(Token = "0x4000F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public float stepping;

		[Token(Token = "0x4000F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public float steppingNear;

		[Token(Token = "0x4000F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public bool dithering;

		[Token(Token = "0x4000F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public float ditherStrength;

		[Token(Token = "0x4000F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		public bool downsamplingOverride;

		[Token(Token = "0x4000F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79F274", Offset = "0x79F274")]
		public int downsampling;

		[Token(Token = "0x4000F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		public bool forceComposition;

		[Token(Token = "0x4000F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x105")]
		public bool edgeImprove;

		[Token(Token = "0x4000F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79F28C", Offset = "0x79F28C")]
		public float edgeThreshold;

		[Token(Token = "0x4000F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		public bool lightScatteringOverride;

		[Token(Token = "0x4000F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10D")]
		public bool lightScatteringEnabled;

		[Token(Token = "0x4000F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79F2AC", Offset = "0x79F2AC")]
		public float lightScatteringDiffusion;

		[Token(Token = "0x4000F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79F2C4", Offset = "0x79F2C4")]
		public float lightScatteringSpread;

		[Token(Token = "0x4000F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79F2DC", Offset = "0x79F2DC")]
		public int lightScatteringSamples;

		[Token(Token = "0x4000F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79F2F8", Offset = "0x79F2F8")]
		public float lightScatteringWeight;

		[Token(Token = "0x4000F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79F314", Offset = "0x79F314")]
		public float lightScatteringIllumination;

		[Token(Token = "0x4000F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79F330", Offset = "0x79F330")]
		public float lightScatteringDecay;

		[Token(Token = "0x4000F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79F350", Offset = "0x79F350")]
		public float lightScatteringExposure;

		[Token(Token = "0x4000F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79F36C", Offset = "0x79F36C")]
		public float lightScatteringJittering;

		[Token(Token = "0x4000F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79F384", Offset = "0x79F384")]
		public int lightScatteringBlurDownscale;

		[Token(Token = "0x4000F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		public bool fogVoidOverride;

		[Token(Token = "0x4000F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public FOG_VOID_TOPOLOGY fogVoidTopology;

		[Token(Token = "0x4000F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79F39C", Offset = "0x79F39C")]
		[SerializeField]
		public float fogVoidFallOff;

		[Token(Token = "0x4000F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public float fogVoidRadius;

		[Token(Token = "0x4000F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		public Vector3 fogVoidPosition;

		[Token(Token = "0x4000F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public float fogVoidDepth;

		[Token(Token = "0x4000F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		public float fogVoidHeight;

		[Token(Token = "0x6000D17")]
		[Address(RVA = "0xAFE7BC", Offset = "0xAFE7BC", VA = "0xAFE7BC")]
		public void Load(VolumetricFog fog)
		{
		}

		[Token(Token = "0x6000D18")]
		[Address(RVA = "0xAFEBF4", Offset = "0xAFEBF4", VA = "0xAFEBF4")]
		public void Save(VolumetricFog fog)
		{
		}

		[Token(Token = "0x6000D19")]
		[Address(RVA = "0xAFEE20", Offset = "0xAFEE20", VA = "0xAFEE20")]
		public static void Lerp(VolumetricFogProfile profile1, VolumetricFogProfile profile2, float t, VolumetricFog fog)
		{
		}

		[Token(Token = "0x6000D1A")]
		[Address(RVA = "0xAFF834", Offset = "0xAFF834", VA = "0xAFF834")]
		public VolumetricFogProfile()
		{
		}
	}
}
namespace VRUiKits.Utils
{
	[Token(Token = "0x2000234")]
	public class ImageHoverOutline : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4000F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Image targetImage;

		[Token(Token = "0x4000F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color outlineColor;

		[Token(Token = "0x4000F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float outlineWidth;

		[Token(Token = "0x4000F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Outline outline;

		[Token(Token = "0x17000201")]
		private Outline _Outline
		{
			[Token(Token = "0x6000D1B")]
			[Address(RVA = "0xF56BD8", Offset = "0xF56BD8", VA = "0xF56BD8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D1C")]
		[Address(RVA = "0xF56D98", Offset = "0xF56D98", VA = "0xF56D98", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000D1D")]
		[Address(RVA = "0xF56E3C", Offset = "0xF56E3C", VA = "0xF56E3C", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000D1E")]
		[Address(RVA = "0xF56EE0", Offset = "0xF56EE0", VA = "0xF56EE0")]
		public ImageHoverOutline()
		{
		}
	}
	[Token(Token = "0x2000235")]
	public class TextHoverScale : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4000F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text targetText;

		[Token(Token = "0x4000F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float scale;

		[Token(Token = "0x4000F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int originSize;

		[Token(Token = "0x17000202")]
		private Text TargetText
		{
			[Token(Token = "0x6000D1F")]
			[Address(RVA = "0xE7EF78", Offset = "0xE7EF78", VA = "0xE7EF78")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D20")]
		[Address(RVA = "0xE7F074", Offset = "0xE7F074", VA = "0xE7F074", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000D21")]
		[Address(RVA = "0xE7F1F4", Offset = "0xE7F1F4", VA = "0xE7F1F4", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000D22")]
		[Address(RVA = "0xE7F298", Offset = "0xE7F298", VA = "0xE7F298")]
		public TextHoverScale()
		{
		}
	}
	[Token(Token = "0x2000236")]
	public class GazeInputModule : UIKitInputModule
	{
		[Token(Token = "0x4000F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool previewWithoutHeadset;

		[Token(Token = "0x4000F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		public bool preventRepeatClick;

		[Token(Token = "0x4000F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public RaycastResult currentRaycast;

		[Token(Token = "0x4000F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static GazeInputModule Instance;

		[Token(Token = "0x4000F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private PointerEventData pointerEventData;

		[Token(Token = "0x4000F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private PointerEventData lastPressedEventData;

		[Token(Token = "0x4000FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private GameObject currentTarget;

		[Token(Token = "0x4000FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float currentClickTime;

		[Token(Token = "0x6000D23")]
		[Address(RVA = "0xCEECB0", Offset = "0xCEECB0", VA = "0xCEECB0")]
		protected GazeInputModule()
		{
		}

		[Token(Token = "0x6000D24")]
		[Address(RVA = "0xCEED10", Offset = "0xCEED10", VA = "0xCEED10", Slot = "17")]
		public override void Process()
		{
		}

		[Token(Token = "0x6000D25")]
		[Address(RVA = "0xCEED34", Offset = "0xCEED34", VA = "0xCEED34")]
		private void GazeControl()
		{
		}

		[Token(Token = "0x6000D26")]
		[Address(RVA = "0xCEEF24", Offset = "0xCEEF24", VA = "0xCEEF24")]
		private void HandleSelection()
		{
		}

		[Token(Token = "0x6000D27")]
		[Address(RVA = "0xCEF258", Offset = "0xCEF258", VA = "0xCEF258")]
		private void ReleaseLastPress()
		{
		}

		[Token(Token = "0x6000D28")]
		[Address(RVA = "0xCEF358", Offset = "0xCEF358", VA = "0xCEF358", Slot = "23")]
		public override void ActivateModule()
		{
		}

		[Token(Token = "0x6000D29")]
		[Address(RVA = "0xCEF420", Offset = "0xCEF420", VA = "0xCEF420", Slot = "22")]
		public override void DeactivateModule()
		{
		}

		[Token(Token = "0x6000D2A")]
		[Address(RVA = "0xCEF448", Offset = "0xCEF448", VA = "0xCEF448")]
		protected void ClearSelection()
		{
		}

		[Token(Token = "0x6000D2B")]
		[Address(RVA = "0xCEF490", Offset = "0xCEF490", VA = "0xCEF490", Slot = "26")]
		protected virtual void ProcessMove(PointerEventData pointerEvent)
		{
		}
	}
	[Token(Token = "0x2000237")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x796FFC", Offset = "0x796FFC")]
	public class LaserInputModule : UIKitInputModule
	{
		[Token(Token = "0x4000FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public VRPlatform platform;

		[Token(Token = "0x4000FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Pointer pointer;

		[Token(Token = "0x4000FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GameObject currentTarget;

		[Token(Token = "0x4000FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float currentClickTime;

		[Token(Token = "0x4000FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static LaserInputModule _instance;

		[Token(Token = "0x4000FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Camera helperCamera;

		[Token(Token = "0x4000FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private UIKitPointer controller;

		[Token(Token = "0x4000FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool triggerPressed;

		[Token(Token = "0x4000FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		private bool triggerPressedLastFrame;

		[Token(Token = "0x4000FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private PointerEventData pointerEventData;

		[Token(Token = "0x4000FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 lastRaycastHitPoint;

		[Token(Token = "0x4000FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float pressedDistance;

		[Token(Token = "0x17000203")]
		public static LaserInputModule instance
		{
			[Token(Token = "0x6000D2C")]
			[Address(RVA = "0xF60B08", Offset = "0xF60B08", VA = "0xF60B08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D2D")]
		[Address(RVA = "0xF60B6C", Offset = "0xF60B6C", VA = "0xF60B6C", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000D2E")]
		[Address(RVA = "0xF60D44", Offset = "0xF60D44", VA = "0xF60D44", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000D2F")]
		[Address(RVA = "0xF61078", Offset = "0xF61078", VA = "0xF61078")]
		private void OnSceneLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x6000D30")]
		[Address(RVA = "0xF60F84", Offset = "0xF60F84", VA = "0xF60F84")]
		private void SetCanvasCamera()
		{
		}

		[Token(Token = "0x6000D31")]
		[Address(RVA = "0xF61074", Offset = "0xF61074", VA = "0xF61074")]
		private void SetupHmd()
		{
		}

		[Token(Token = "0x6000D32")]
		[Address(RVA = "0xF6107C", Offset = "0xF6107C", VA = "0xF6107C")]
		public void SetController(UIKitPointer _controller)
		{
		}

		[Token(Token = "0x6000D33")]
		[Address(RVA = "0xF61084", Offset = "0xF61084", VA = "0xF61084")]
		public void RemoveController(UIKitPointer _controller)
		{
		}

		[Token(Token = "0x6000D34")]
		[Address(RVA = "0xF61150", Offset = "0xF61150", VA = "0xF61150", Slot = "17")]
		public override void Process()
		{
		}

		[Token(Token = "0x6000D35")]
		[Address(RVA = "0xF61200", Offset = "0xF61200", VA = "0xF61200")]
		private void UpdateHelperCamera()
		{
		}

		[Token(Token = "0x6000D36")]
		[Address(RVA = "0xF61540", Offset = "0xF61540", VA = "0xF61540")]
		private void CheckTriggerStatus()
		{
		}

		[Token(Token = "0x6000D37")]
		[Address(RVA = "0xF612A4", Offset = "0xF612A4", VA = "0xF612A4")]
		private void ProcessGazePointer()
		{
		}

		[Token(Token = "0x6000D38")]
		[Address(RVA = "0xF61598", Offset = "0xF61598", VA = "0xF61598")]
		private void ProcessLaserPointer()
		{
		}

		[Token(Token = "0x6000D39")]
		[Address(RVA = "0xF61BC8", Offset = "0xF61BC8", VA = "0xF61BC8")]
		private void ProcessPress(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000D3A")]
		[Address(RVA = "0xF6187C", Offset = "0xF6187C", VA = "0xF6187C")]
		private PointerEventData GetPointerEventData()
		{
			return null;
		}

		[Token(Token = "0x6000D3B")]
		[Address(RVA = "0xF6269C", Offset = "0xF6269C", VA = "0xF6269C")]
		private bool TriggerReleasedThisFrame()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D3C")]
		[Address(RVA = "0xF6267C", Offset = "0xF6267C", VA = "0xF6267C")]
		private bool TriggerPressedThisFrame()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D3D")]
		[Address(RVA = "0xF61718", Offset = "0xF61718", VA = "0xF61718")]
		private bool SendUpdateEventToSelectedObject()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D3E")]
		[Address(RVA = "0xF626BC", Offset = "0xF626BC", VA = "0xF626BC", Slot = "23")]
		public override void ActivateModule()
		{
		}

		[Token(Token = "0x6000D3F")]
		[Address(RVA = "0xF62784", Offset = "0xF62784", VA = "0xF62784", Slot = "22")]
		public override void DeactivateModule()
		{
		}

		[Token(Token = "0x6000D40")]
		[Address(RVA = "0xF627AC", Offset = "0xF627AC", VA = "0xF627AC")]
		protected void ClearSelection()
		{
		}

		[Token(Token = "0x6000D41")]
		[Address(RVA = "0xF627F4", Offset = "0xF627F4", VA = "0xF627F4")]
		private bool ShouldStartDrag(float threshold, bool useDragThreshold)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D42")]
		[Address(RVA = "0xF62810", Offset = "0xF62810", VA = "0xF62810", Slot = "26")]
		protected virtual void ProcessMove(PointerEventData pointerEvent)
		{
		}

		[Token(Token = "0x6000D43")]
		[Address(RVA = "0xF62378", Offset = "0xF62378", VA = "0xF62378")]
		private void ProcessDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000D44")]
		[Address(RVA = "0xF6285C", Offset = "0xF6285C", VA = "0xF6285C")]
		public LaserInputModule()
		{
		}
	}
	[Token(Token = "0x2000238")]
	public enum VRPlatform
	{
		[Token(Token = "0x4000FAF")]
		NONE,
		[Token(Token = "0x4000FB0")]
		OCULUS,
		[Token(Token = "0x4000FB1")]
		VIVE,
		[Token(Token = "0x4000FB2")]
		VIVE_STEAM2
	}
	[Token(Token = "0x2000239")]
	public enum Pointer
	{
		[Token(Token = "0x4000FB4")]
		RightHand,
		[Token(Token = "0x4000FB5")]
		LeftHand,
		[Token(Token = "0x4000FB6")]
		Eye
	}
	[Token(Token = "0x200023A")]
	public class MouseInputModule : StandaloneInputModule
	{
		[Token(Token = "0x6000D46")]
		[Address(RVA = "0x1F5B5F0", Offset = "0x1F5B5F0", VA = "0x1F5B5F0", Slot = "17")]
		public override void Process()
		{
		}

		[Token(Token = "0x6000D47")]
		[Address(RVA = "0x1F5B654", Offset = "0x1F5B654", VA = "0x1F5B654")]
		protected new void ProcessMouseEvent()
		{
		}

		[Token(Token = "0x6000D48")]
		[Address(RVA = "0x1F5B8DC", Offset = "0x1F5B8DC", VA = "0x1F5B8DC")]
		private static bool UseMouse(bool pressed, bool released, PointerEventData pointerData)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D49")]
		[Address(RVA = "0x1F5B930", Offset = "0x1F5B930", VA = "0x1F5B930")]
		protected new void ProcessMousePress(MouseButtonEventData data)
		{
		}

		[Token(Token = "0x6000D4A")]
		[Address(RVA = "0x1F5C040", Offset = "0x1F5C040", VA = "0x1F5C040")]
		public MouseInputModule()
		{
		}
	}
	[Token(Token = "0x200023B")]
	public class GazeProgressCircle : MonoBehaviour
	{
		[Token(Token = "0x200023C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x79705C", Offset = "0x79705C")]
		private sealed class <FillCircle>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000FBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000FBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000FBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GazeProgressCircle <>4__this;

			[Token(Token = "0x4000FBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <timer>5__2;

			[Token(Token = "0x17000204")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D53")]
				[Address(RVA = "0xB0B90C", Offset = "0xB0B90C", VA = "0xB0B90C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000205")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D55")]
				[Address(RVA = "0xB0B954", Offset = "0xB0B954", VA = "0xB0B954", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D50")]
			[Address(RVA = "0xB0B774", Offset = "0xB0B774", VA = "0xB0B774")]
			[DebuggerHidden]
			public <FillCircle>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6000D51")]
			[Address(RVA = "0xB0B7A0", Offset = "0xB0B7A0", VA = "0xB0B7A0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D52")]
			[Address(RVA = "0xB0B7A4", Offset = "0xB0B7A4", VA = "0xB0B7A4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D54")]
			[Address(RVA = "0xB0B914", Offset = "0xB0B914", VA = "0xB0B914", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Image circle;

		[Token(Token = "0x4000FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Coroutine fillCircle;

		[Token(Token = "0x4000FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UIKitInputModule m_inputModule;

		[Token(Token = "0x6000D4B")]
		[Address(RVA = "0xCEF4DC", Offset = "0xCEF4DC", VA = "0xCEF4DC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D4C")]
		[Address(RVA = "0xCEF5CC", Offset = "0xCEF5CC", VA = "0xCEF5CC")]
		private void HandleProgressCircle(GameObject target)
		{
		}

		[Token(Token = "0x6000D4D")]
		[Address(RVA = "0xCEF778", Offset = "0xCEF778", VA = "0xCEF778")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7A9708", Offset = "0x7A9708")]
		private IEnumerator FillCircle()
		{
			return null;
		}

		[Token(Token = "0x6000D4E")]
		[Address(RVA = "0xCEF69C", Offset = "0xCEF69C", VA = "0xCEF69C")]
		private void ResetGazer()
		{
		}

		[Token(Token = "0x6000D4F")]
		[Address(RVA = "0xCEF7F0", Offset = "0xCEF7F0", VA = "0xCEF7F0")]
		public GazeProgressCircle()
		{
		}
	}
	[Token(Token = "0x200023D")]
	public class LaserPointer : MonoBehaviour
	{
		[Token(Token = "0x4000FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private LineRenderer lr;

		[Token(Token = "0x6000D56")]
		[Address(RVA = "0x1186998", Offset = "0x1186998", VA = "0x1186998")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D57")]
		[Address(RVA = "0x11869F4", Offset = "0x11869F4", VA = "0x11869F4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000D58")]
		[Address(RVA = "0x1186BCC", Offset = "0x1186BCC", VA = "0x1186BCC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000D59")]
		[Address(RVA = "0x1186C8C", Offset = "0x1186C8C", VA = "0x1186C8C")]
		public LaserPointer()
		{
		}
	}
	[Token(Token = "0x200023E")]
	public class UIKitPointer : MonoBehaviour
	{
		[Token(Token = "0x4000FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject gazePointer;

		[Token(Token = "0x4000FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject laser;

		[Token(Token = "0x4000FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Pointer? temp;

		[Token(Token = "0x6000D5A")]
		[Address(RVA = "0xAC2DFC", Offset = "0xAC2DFC", VA = "0xAC2DFC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D5B")]
		[Address(RVA = "0xAC2F60", Offset = "0xAC2F60", VA = "0xAC2F60")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D5C")]
		[Address(RVA = "0xAC3148", Offset = "0xAC3148", VA = "0xAC3148")]
		private void ResetTransform(Transform trans)
		{
		}

		[Token(Token = "0x6000D5D")]
		[Address(RVA = "0xAC31A4", Offset = "0xAC31A4", VA = "0xAC31A4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000D5E")]
		[Address(RVA = "0xAC3308", Offset = "0xAC3308", VA = "0xAC3308")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D5F")]
		[Address(RVA = "0xAC346C", Offset = "0xAC346C", VA = "0xAC346C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000D60")]
		[Address(RVA = "0xAC35D0", Offset = "0xAC35D0", VA = "0xAC35D0")]
		public UIKitPointer()
		{
		}
	}
	[Token(Token = "0x200023F")]
	public class UIKitInputModule : BaseInputModule
	{
		[Token(Token = "0x2000240")]
		public delegate void OnGazeChangedHandler(GameObject target);

		[Token(Token = "0x4000FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public float gazeTimeInSeconds;

		[Token(Token = "0x4000FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[HideInInspector]
		public float delayTimeInSeconds;

		[Token(Token = "0x14000039")]
		public event OnGazeChangedHandler OnGazeChanged
		{
			[Token(Token = "0x6000D61")]
			[Address(RVA = "0xAC2C90", Offset = "0xAC2C90", VA = "0xAC2C90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A97B8", Offset = "0x7A97B8")]
			add
			{
			}
			[Token(Token = "0x6000D62")]
			[Address(RVA = "0xAC2D30", Offset = "0xAC2D30", VA = "0xAC2D30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A97C8", Offset = "0x7A97C8")]
			remove
			{
			}
		}

		[Token(Token = "0x6000D63")]
		[Address(RVA = "0xAC2DD0", Offset = "0xAC2DD0", VA = "0xAC2DD0")]
		protected void RaiseGazeChangeEvent(GameObject target)
		{
		}

		[Token(Token = "0x6000D64")]
		[Address(RVA = "0xAC2DE4", Offset = "0xAC2DE4", VA = "0xAC2DE4", Slot = "17")]
		public override void Process()
		{
		}

		[Token(Token = "0x6000D65")]
		[Address(RVA = "0xAC2DE8", Offset = "0xAC2DE8", VA = "0xAC2DE8")]
		public UIKitInputModule()
		{
		}
	}
	[Token(Token = "0x2000241")]
	public class TextMeshProConverter : MonoBehaviour
	{
		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0xE7F2AC", Offset = "0xE7F2AC", VA = "0xE7F2AC")]
		public static int CheckTextsTotalNumber()
		{
			return default(int);
		}

		[Token(Token = "0x6000D6B")]
		private static List<T> GetAllObjectsInScene<T>() where T : Component
		{
			return null;
		}

		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0xE7F30C", Offset = "0xE7F30C", VA = "0xE7F30C")]
		public TextMeshProConverter()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000242")]
	public class Card
	{
		[Token(Token = "0x4000FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string title;

		[Token(Token = "0x4000FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string subtitle;

		[Token(Token = "0x4000FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string description;

		[Token(Token = "0x4000FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Sprite image;

		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0xF0A9F8", Offset = "0xF0A9F8", VA = "0xF0A9F8")]
		public Card()
		{
		}
	}
	[Token(Token = "0x2000243")]
	public class CardItem : MonoBehaviour
	{
		[Token(Token = "0x2000244")]
		public delegate void OnCardClickedHandler(Card card);

		[Token(Token = "0x4000FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform title;

		[Token(Token = "0x4000FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform subtitle;

		[Token(Token = "0x4000FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform description;

		[Token(Token = "0x4000FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Image image;

		[Token(Token = "0x4000FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Card card;

		[Token(Token = "0x17000206")]
		public Text Title
		{
			[Token(Token = "0x6000D70")]
			[Address(RVA = "0xF0AB40", Offset = "0xF0AB40", VA = "0xF0AB40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000207")]
		public Text Subtitle
		{
			[Token(Token = "0x6000D71")]
			[Address(RVA = "0xF0ABE4", Offset = "0xF0ABE4", VA = "0xF0ABE4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000208")]
		public Text Description
		{
			[Token(Token = "0x6000D72")]
			[Address(RVA = "0xF0AC88", Offset = "0xF0AC88", VA = "0xF0AC88")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000209")]
		public Card Card
		{
			[Token(Token = "0x6000D73")]
			[Address(RVA = "0xF0AD2C", Offset = "0xF0AD2C", VA = "0xF0AD2C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D74")]
			[Address(RVA = "0xF0AD34", Offset = "0xF0AD34", VA = "0xF0AD34")]
			set
			{
			}
		}

		[Token(Token = "0x1400003A")]
		public event OnCardClickedHandler OnCardClicked
		{
			[Token(Token = "0x6000D6E")]
			[Address(RVA = "0xF0AA00", Offset = "0xF0AA00", VA = "0xF0AA00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A97D8", Offset = "0x7A97D8")]
			add
			{
			}
			[Token(Token = "0x6000D6F")]
			[Address(RVA = "0xF0AAA0", Offset = "0xF0AAA0", VA = "0xF0AAA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A97E8", Offset = "0x7A97E8")]
			remove
			{
			}
		}

		[Token(Token = "0x6000D75")]
		[Address(RVA = "0xF0AF1C", Offset = "0xF0AF1C", VA = "0xF0AF1C")]
		public void Awake()
		{
		}

		[Token(Token = "0x6000D76")]
		[Address(RVA = "0xF0B038", Offset = "0xF0B038", VA = "0xF0B038")]
		public CardItem()
		{
		}

		[Token(Token = "0x6000D77")]
		[Address(RVA = "0xF0B040", Offset = "0xF0B040", VA = "0xF0B040")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A97F8", Offset = "0x7A97F8")]
		private void <Awake>b__18_0()
		{
		}
	}
	[Token(Token = "0x2000245")]
	public class CardListManager : MonoBehaviour
	{
		[Token(Token = "0x4000FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform listContent;

		[Token(Token = "0x4000FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject itemTemplate;

		[Token(Token = "0x4000FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public List<Card> cardList;

		[Token(Token = "0x4000FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public Card selectedCard;

		[Token(Token = "0x4000FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<CardItem> cardItems;

		[Token(Token = "0x6000D7C")]
		[Address(RVA = "0xF0B064", Offset = "0xF0B064", VA = "0xF0B064")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D7D")]
		[Address(RVA = "0xF0B13C", Offset = "0xF0B13C", VA = "0xF0B13C")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0xF0B09C", Offset = "0xF0B09C", VA = "0xF0B09C")]
		public void PopulateList()
		{
		}

		[Token(Token = "0x6000D7F")]
		[Address(RVA = "0xF0B400", Offset = "0xF0B400", VA = "0xF0B400")]
		public void AddCardItem(Card card)
		{
		}

		[Token(Token = "0x6000D80")]
		[Address(RVA = "0xF0B2AC", Offset = "0xF0B2AC", VA = "0xF0B2AC")]
		private void DrawCardItem(Card card)
		{
		}

		[Token(Token = "0x6000D81")]
		[Address(RVA = "0xF0B470", Offset = "0xF0B470", VA = "0xF0B470")]
		private void SetSelectedCard(Card card)
		{
		}

		[Token(Token = "0x6000D82")]
		[Address(RVA = "0xF0B478", Offset = "0xF0B478", VA = "0xF0B478")]
		public CardListManager()
		{
		}
	}
	[Token(Token = "0x2000246")]
	public class InputFocusHelper : MonoBehaviour, ISelectHandler, IEventSystemHandler, IPointerClickHandler, IEndDragHandler
	{
		[Token(Token = "0x2000247")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x79706C", Offset = "0x79706C")]
		private sealed class <ActivateInputFieldWithCaret>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000FD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000FDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000FDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public InputFocusHelper <>4__this;

			[Token(Token = "0x4000FDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isMoveCaretToEnd;

			[Token(Token = "0x1700020A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D90")]
				[Address(RVA = "0xB0D558", Offset = "0xB0D558", VA = "0xB0D558", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700020B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D92")]
				[Address(RVA = "0xB0D5A0", Offset = "0xB0D5A0", VA = "0xB0D5A0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D8D")]
			[Address(RVA = "0xB0D438", Offset = "0xB0D438", VA = "0xB0D438")]
			[DebuggerHidden]
			public <ActivateInputFieldWithCaret>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6000D8E")]
			[Address(RVA = "0xB0D464", Offset = "0xB0D464", VA = "0xB0D464", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D8F")]
			[Address(RVA = "0xB0D468", Offset = "0xB0D468", VA = "0xB0D468", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D91")]
			[Address(RVA = "0xB0D560", Offset = "0xB0D560", VA = "0xB0D560", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private InputField input;

		[Token(Token = "0x4000FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int caretPosition;

		[Token(Token = "0x4000FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int selectionAnchorPosition;

		[Token(Token = "0x4000FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int selectionFocusPosition;

		[Token(Token = "0x4000FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float originColorAlpha;

		[Token(Token = "0x6000D83")]
		[Address(RVA = "0xF5B634", Offset = "0xF5B634", VA = "0xF5B634")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D84")]
		[Address(RVA = "0xF5B6A8", Offset = "0xF5B6A8", VA = "0xF5B6A8", Slot = "4")]
		public void OnSelect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6000D85")]
		[Address(RVA = "0xF5B864", Offset = "0xF5B864", VA = "0xF5B864", Slot = "5")]
		public void OnPointerClick(PointerEventData pointerEventData)
		{
		}

		[Token(Token = "0x6000D86")]
		[Address(RVA = "0xF5B8CC", Offset = "0xF5B8CC", VA = "0xF5B8CC", Slot = "7")]
		public virtual void OnEndDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000D87")]
		[Address(RVA = "0xF5B7D8", Offset = "0xF5B7D8", VA = "0xF5B7D8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7A9808", Offset = "0x7A9808")]
		private IEnumerator ActivateInputFieldWithCaret(bool isMoveCaretToEnd)
		{
			return null;
		}

		[Token(Token = "0x6000D88")]
		[Address(RVA = "0xF5B8D0", Offset = "0xF5B8D0", VA = "0xF5B8D0")]
		public void ForceActivate()
		{
		}

		[Token(Token = "0x6000D89")]
		[Address(RVA = "0xF5B868", Offset = "0xF5B868", VA = "0xF5B868")]
		public void StorePositionInfo()
		{
		}

		[Token(Token = "0x6000D8A")]
		[Address(RVA = "0xF5B8EC", Offset = "0xF5B8EC", VA = "0xF5B8EC")]
		private void SetPosition()
		{
		}

		[Token(Token = "0x6000D8B")]
		[Address(RVA = "0xF5B944", Offset = "0xF5B944", VA = "0xF5B944")]
		private void SetSelectionAlpha(float alpha)
		{
		}

		[Token(Token = "0x6000D8C")]
		[Address(RVA = "0xF5B970", Offset = "0xF5B970", VA = "0xF5B970")]
		public InputFocusHelper()
		{
		}
	}
	[Token(Token = "0x2000248")]
	public class UIKitInputField : MonoBehaviour, ISelectHandler, IEventSystemHandler, IPointerClickHandler, IDeselectHandler
	{
		[Token(Token = "0x2000249")]
		public enum ContentType
		{
			[Token(Token = "0x4000FEC")]
			Standard,
			[Token(Token = "0x4000FED")]
			Password
		}

		[Token(Token = "0x200024A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x79707C", Offset = "0x79707C")]
		private sealed class <BlinkCaret>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000FEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000FEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000FF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIKitInputField <>4__this;

			[Token(Token = "0x1700020C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D9F")]
				[Address(RVA = "0xCC5C04", Offset = "0xCC5C04", VA = "0xCC5C04", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700020D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000DA1")]
				[Address(RVA = "0xCC5C4C", Offset = "0xCC5C4C", VA = "0xCC5C4C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D9C")]
			[Address(RVA = "0xCC5AA8", Offset = "0xCC5AA8", VA = "0xCC5AA8")]
			[DebuggerHidden]
			public <BlinkCaret>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x6000D9D")]
			[Address(RVA = "0xCC5AD4", Offset = "0xCC5AD4", VA = "0xCC5AD4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D9E")]
			[Address(RVA = "0xCC5AD8", Offset = "0xCC5AD8", VA = "0xCC5AD8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000DA0")]
			[Address(RVA = "0xCC5C0C", Offset = "0xCC5C0C", VA = "0xCC5C0C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RectTransform wrapper;

		[Token(Token = "0x4000FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RectTransform m_textTransform;

		[Token(Token = "0x4000FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RectTransform m_placeholderTransform;

		[Token(Token = "0x4000FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RectTransform m_caretTransform;

		[Token(Token = "0x4000FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string text;

		[Token(Token = "0x4000FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int characterLimit;

		[Token(Token = "0x4000FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public ContentType contentType;

		[Token(Token = "0x4000FE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79F43C", Offset = "0x79F43C")]
		public float caretBlinkRate;

		[Token(Token = "0x4000FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float maxW_textComponent;

		[Token(Token = "0x4000FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string displayedText;

		[Token(Token = "0x4000FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string prevText;

		[Token(Token = "0x4000FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Text textComponent;

		[Token(Token = "0x4000FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Text caretText;

		[Token(Token = "0x4000FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Text placeholder;

		[Token(Token = "0x6000D93")]
		[Address(RVA = "0xAC252C", Offset = "0xAC252C", VA = "0xAC252C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D94")]
		[Address(RVA = "0xAC2620", Offset = "0xAC2620", VA = "0xAC2620", Slot = "4")]
		public void OnSelect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6000D95")]
		[Address(RVA = "0xAC2738", Offset = "0xAC2738", VA = "0xAC2738", Slot = "5")]
		public void OnPointerClick(PointerEventData pointerEventData)
		{
		}

		[Token(Token = "0x6000D96")]
		[Address(RVA = "0xAC27C0", Offset = "0xAC27C0", VA = "0xAC27C0", Slot = "6")]
		public void OnDeselect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6000D97")]
		[Address(RVA = "0xAC26D8", Offset = "0xAC26D8", VA = "0xAC26D8")]
		public void ForceCaretUpdate()
		{
		}

		[Token(Token = "0x6000D98")]
		[Address(RVA = "0xAC2834", Offset = "0xAC2834", VA = "0xAC2834")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000D99")]
		[Address(RVA = "0xAC29A0", Offset = "0xAC29A0", VA = "0xAC29A0")]
		private void CalculateLengthOfText(string text)
		{
		}

		[Token(Token = "0x6000D9A")]
		[Address(RVA = "0xAC2BB0", Offset = "0xAC2BB0", VA = "0xAC2BB0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7A98B8", Offset = "0x7A98B8")]
		private IEnumerator BlinkCaret()
		{
			return null;
		}

		[Token(Token = "0x6000D9B")]
		[Address(RVA = "0xAC2C28", Offset = "0xAC2C28", VA = "0xAC2C28")]
		public UIKitInputField()
		{
		}
	}
	[Token(Token = "0x200024B")]
	public class KeyboardExtentionMethods : MonoBehaviour
	{
		[Token(Token = "0x4000FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject symbols;

		[Token(Token = "0x4000FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject alphabets;

		[Token(Token = "0x6000DA2")]
		[Address(RVA = "0xF5F460", Offset = "0xF5F460", VA = "0xF5F460")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DA3")]
		[Address(RVA = "0xF5F58C", Offset = "0xF5F58C", VA = "0xF5F58C")]
		public void SwitchSymbols()
		{
		}

		[Token(Token = "0x6000DA4")]
		[Address(RVA = "0xF5F5B4", Offset = "0xF5F5B4", VA = "0xF5F5B4")]
		public void ToggleObject(GameObject go)
		{
		}

		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0xF5F600", Offset = "0xF5F600", VA = "0xF5F600")]
		public KeyboardExtentionMethods()
		{
		}
	}
	[Token(Token = "0x200024C")]
	public class KeyboardManager : MonoBehaviour
	{
		[Token(Token = "0x200024D")]
		public delegate void OnInputValueUpdatedHandler(string value);

		[Serializable]
		[Token(Token = "0x200024E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x79708C", Offset = "0x79708C")]
		private sealed class <>c
		{
			[Token(Token = "0x4000FFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000FFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__18_0;

			[Token(Token = "0x4000FFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<bool> <>9__25_0;

			[Token(Token = "0x6000DBD")]
			[Address(RVA = "0xB0E330", Offset = "0xB0E330", VA = "0xB0E330")]
			public <>c()
			{
			}

			[Token(Token = "0x6000DBE")]
			[Address(RVA = "0xB0E338", Offset = "0xB0E338", VA = "0xB0E338")]
			internal void <Backspace>b__18_0()
			{
			}

			[Token(Token = "0x6000DBF")]
			[Address(RVA = "0xB0E3A8", Offset = "0xB0E3A8", VA = "0xB0E3A8")]
			internal bool <WaitTargetProcessEvent>b__25_0()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200024F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x79709C", Offset = "0x79709C")]
		private sealed class <>c__DisplayClass22_0
		{
			[Token(Token = "0x4000FFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public KeyboardManager <>4__this;

			[Token(Token = "0x4000FFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string s;

			[Token(Token = "0x6000DC0")]
			[Address(RVA = "0xB0E3CC", Offset = "0xB0E3CC", VA = "0xB0E3CC")]
			public <>c__DisplayClass22_0()
			{
			}

			[Token(Token = "0x6000DC1")]
			[Address(RVA = "0xB0E3D4", Offset = "0xB0E3D4", VA = "0xB0E3D4")]
			internal void <GenerateInput>b__0()
			{
			}
		}

		[Token(Token = "0x2000250")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7970AC", Offset = "0x7970AC")]
		private sealed class <WaitTargetProcessEvent>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000FFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001000")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001001")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action callback;

			[Token(Token = "0x4001002")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public KeyboardManager <>4__this;

			[Token(Token = "0x17000210")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000DC5")]
				[Address(RVA = "0xB0E9D0", Offset = "0xB0E9D0", VA = "0xB0E9D0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000211")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000DC7")]
				[Address(RVA = "0xB0EA18", Offset = "0xB0EA18", VA = "0xB0EA18", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000DC2")]
			[Address(RVA = "0xB0E3F8", Offset = "0xB0E3F8", VA = "0xB0E3F8")]
			[DebuggerHidden]
			public <WaitTargetProcessEvent>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x6000DC3")]
			[Address(RVA = "0xB0E424", Offset = "0xB0E424", VA = "0xB0E424", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000DC4")]
			[Address(RVA = "0xB0E428", Offset = "0xB0E428", VA = "0xB0E428", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000DC6")]
			[Address(RVA = "0xB0E9D8", Offset = "0xB0E9D8", VA = "0xB0E9D8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x79F454", Offset = "0x79F454")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79F454", Offset = "0x79F454")]
		public bool isUppercase;

		[Token(Token = "0x4000FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x79F4B4", Offset = "0x79F4B4")]
		public Transform keys;

		[Token(Token = "0x4000FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static InputField lastTarget;

		[Token(Token = "0x4000FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static InputField target;

		[Token(Token = "0x4000FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Key[] keyList;

		[Token(Token = "0x4000FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool capslockFlag;

		[Token(Token = "0x1700020E")]
		public static InputField Target
		{
			[Token(Token = "0x6000DA6")]
			[Address(RVA = "0xF5F608", Offset = "0xF5F608", VA = "0xF5F608")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DA7")]
			[Address(RVA = "0xF5B770", Offset = "0xF5B770", VA = "0xF5B770")]
			set
			{
			}
		}

		[Token(Token = "0x1700020F")]
		private string Input
		{
			[Token(Token = "0x6000DAA")]
			[Address(RVA = "0xF5F8C8", Offset = "0xF5F8C8", VA = "0xF5F8C8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DAB")]
			[Address(RVA = "0xF5F96C", Offset = "0xF5F96C", VA = "0xF5F96C")]
			set
			{
			}
		}

		[Token(Token = "0x1400003B")]
		public event OnInputValueUpdatedHandler OnInputValueUpdated
		{
			[Token(Token = "0x6000DA8")]
			[Address(RVA = "0xF5F788", Offset = "0xF5F788", VA = "0xF5F788")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A9968", Offset = "0x7A9968")]
			add
			{
			}
			[Token(Token = "0x6000DA9")]
			[Address(RVA = "0xF5F828", Offset = "0xF5F828", VA = "0xF5F828")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A9978", Offset = "0x7A9978")]
			remove
			{
			}
		}

		[Token(Token = "0x6000DAC")]
		[Address(RVA = "0xF5FA08", Offset = "0xF5FA08", VA = "0xF5FA08")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DAD")]
		[Address(RVA = "0xF5FA70", Offset = "0xF5FA70", VA = "0xF5FA70")]
		private void Start()
		{
		}

		[Token(Token = "0x6000DAE")]
		[Address(RVA = "0xF5FC48", Offset = "0xF5FC48", VA = "0xF5FC48")]
		public void Backspace()
		{
		}

		[Token(Token = "0x6000DAF")]
		[Address(RVA = "0xF5FF10", Offset = "0xF5FF10", VA = "0xF5FF10")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000DB0")]
		[Address(RVA = "0xF5FB60", Offset = "0xF5FB60", VA = "0xF5FB60")]
		public void CapsLock()
		{
		}

		[Token(Token = "0x6000DB1")]
		[Address(RVA = "0xF60078", Offset = "0xF60078", VA = "0xF60078")]
		public void Shift()
		{
		}

		[Token(Token = "0x6000DB2")]
		[Address(RVA = "0xF60148", Offset = "0xF60148", VA = "0xF60148")]
		public void GenerateInput(string s)
		{
		}

		[Token(Token = "0x6000DB3")]
		[Address(RVA = "0xF5FF54", Offset = "0xF5FF54", VA = "0xF5FF54")]
		public void SetInput(string s)
		{
		}

		[Token(Token = "0x6000DB4")]
		[Address(RVA = "0xF5FDB4", Offset = "0xF5FDB4", VA = "0xF5FDB4")]
		private void ForceInputFieldActivated()
		{
		}

		[Token(Token = "0x6000DB5")]
		[Address(RVA = "0xF5FE7C", Offset = "0xF5FE7C", VA = "0xF5FE7C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7A9988", Offset = "0x7A9988")]
		private IEnumerator WaitTargetProcessEvent(Action callback)
		{
			return null;
		}

		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0xF60290", Offset = "0xF60290", VA = "0xF60290")]
		private void SimulateKeyboardEvent(string s)
		{
		}

		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0xF60364", Offset = "0xF60364", VA = "0xF60364")]
		public KeyboardManager()
		{
		}
	}
	[Token(Token = "0x2000251")]
	public class Alphabet : Key
	{
		[Token(Token = "0x6000DC8")]
		[Address(RVA = "0xAE2230", Offset = "0xAE2230", VA = "0xAE2230", Slot = "5")]
		public override void CapsLock(bool isUppercase)
		{
		}

		[Token(Token = "0x6000DC9")]
		[Address(RVA = "0xAE2298", Offset = "0xAE2298", VA = "0xAE2298")]
		public Alphabet()
		{
		}
	}
	[Token(Token = "0x2000252")]
	public class Key : MonoBehaviour
	{
		[Token(Token = "0x2000253")]
		public delegate void OnKeyClickedHandler(string key);

		[Token(Token = "0x4001003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Text key;

		[Token(Token = "0x1400003C")]
		public event OnKeyClickedHandler OnKeyClicked
		{
			[Token(Token = "0x6000DCA")]
			[Address(RVA = "0xF5F0CC", Offset = "0xF5F0CC", VA = "0xF5F0CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A9A38", Offset = "0x7A9A38")]
			add
			{
			}
			[Token(Token = "0x6000DCB")]
			[Address(RVA = "0xF5F16C", Offset = "0xF5F16C", VA = "0xF5F16C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A9A48", Offset = "0x7A9A48")]
			remove
			{
			}
		}

		[Token(Token = "0x6000DCC")]
		[Address(RVA = "0xF5F20C", Offset = "0xF5F20C", VA = "0xF5F20C", Slot = "4")]
		public virtual void Awake()
		{
		}

		[Token(Token = "0x6000DCD")]
		[Address(RVA = "0xF5F324", Offset = "0xF5F324", VA = "0xF5F324", Slot = "5")]
		public virtual void CapsLock(bool isUppercase)
		{
		}

		[Token(Token = "0x6000DCE")]
		[Address(RVA = "0xF5F328", Offset = "0xF5F328", VA = "0xF5F328", Slot = "6")]
		public virtual void ShiftKey()
		{
		}

		[Token(Token = "0x6000DCF")]
		[Address(RVA = "0xF5F32C", Offset = "0xF5F32C", VA = "0xF5F32C")]
		public Key()
		{
		}

		[Token(Token = "0x6000DD0")]
		[Address(RVA = "0xF5F334", Offset = "0xF5F334", VA = "0xF5F334")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A9A58", Offset = "0x7A9A58")]
		private void <Awake>b__5_0()
		{
		}
	}
	[Token(Token = "0x2000254")]
	public class Number : Key
	{
		[Token(Token = "0x6000DD5")]
		[Address(RVA = "0x12F5A48", Offset = "0x12F5A48", VA = "0x12F5A48")]
		public Number()
		{
		}
	}
	[Token(Token = "0x2000255")]
	public class Shift : Key
	{
		[Token(Token = "0x4001005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Text subscript;

		[Token(Token = "0x6000DD6")]
		[Address(RVA = "0xC91E00", Offset = "0xC91E00", VA = "0xC91E00", Slot = "4")]
		public override void Awake()
		{
		}

		[Token(Token = "0x6000DD7")]
		[Address(RVA = "0xC91E9C", Offset = "0xC91E9C", VA = "0xC91E9C", Slot = "6")]
		public override void ShiftKey()
		{
		}

		[Token(Token = "0x6000DD8")]
		[Address(RVA = "0xC91F34", Offset = "0xC91F34", VA = "0xC91F34")]
		public Shift()
		{
		}
	}
	[Token(Token = "0x2000256")]
	public class Symbol : Key
	{
		[Token(Token = "0x6000DD9")]
		[Address(RVA = "0xDC722C", Offset = "0xDC722C", VA = "0xDC722C")]
		public Symbol()
		{
		}
	}
	[Token(Token = "0x2000257")]
	public class MobileKeyboardManager : MonoBehaviour
	{
		[Token(Token = "0x4001006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x79F50C", Offset = "0x79F50C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79F50C", Offset = "0x79F50C")]
		public bool isUppercase;

		[Token(Token = "0x4001007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x79F56C", Offset = "0x79F56C")]
		public Transform keys;

		[Token(Token = "0x4001008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static UIKitInputField target;

		[Token(Token = "0x4001009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Key[] keyList;

		[Token(Token = "0x400100A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool capslockFlag;

		[Token(Token = "0x17000212")]
		public static UIKitInputField Target
		{
			[Token(Token = "0x6000DDA")]
			[Address(RVA = "0x1F55BF0", Offset = "0x1F55BF0", VA = "0x1F55BF0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DDB")]
			[Address(RVA = "0x1F55D70", Offset = "0x1F55D70", VA = "0x1F55D70")]
			set
			{
			}
		}

		[Token(Token = "0x17000213")]
		private string Input
		{
			[Token(Token = "0x6000DDC")]
			[Address(RVA = "0x1F55DC4", Offset = "0x1F55DC4", VA = "0x1F55DC4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DDD")]
			[Address(RVA = "0x1F55E68", Offset = "0x1F55E68", VA = "0x1F55E68")]
			set
			{
			}
		}

		[Token(Token = "0x6000DDE")]
		[Address(RVA = "0x1F55F60", Offset = "0x1F55F60", VA = "0x1F55F60")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DDF")]
		[Address(RVA = "0x1F55FC8", Offset = "0x1F55FC8", VA = "0x1F55FC8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000DE0")]
		[Address(RVA = "0x1F561A4", Offset = "0x1F561A4", VA = "0x1F561A4")]
		public void Backspace()
		{
		}

		[Token(Token = "0x6000DE1")]
		[Address(RVA = "0x1F5620C", Offset = "0x1F5620C", VA = "0x1F5620C")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000DE2")]
		[Address(RVA = "0x1F560BC", Offset = "0x1F560BC", VA = "0x1F560BC")]
		public void CapsLock()
		{
		}

		[Token(Token = "0x6000DE3")]
		[Address(RVA = "0x1F562BC", Offset = "0x1F562BC", VA = "0x1F562BC")]
		public void Shift()
		{
		}

		[Token(Token = "0x6000DE4")]
		[Address(RVA = "0x1F5638C", Offset = "0x1F5638C", VA = "0x1F5638C")]
		public void GenerateInput(string s)
		{
		}

		[Token(Token = "0x6000DE5")]
		[Address(RVA = "0x1F563BC", Offset = "0x1F563BC", VA = "0x1F563BC")]
		public MobileKeyboardManager()
		{
		}
	}
	[Token(Token = "0x2000258")]
	public class KeyboardSuggestions : MonoBehaviour
	{
		[Token(Token = "0x400100B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public KeyboardManager keyboardManager;

		[Token(Token = "0x400100C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int maxNumberOfSuggestions;

		[Token(Token = "0x400100D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<string> suggestions;

		[Token(Token = "0x400100E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string pattern;

		[Token(Token = "0x400100F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SuggestionButton[] suggestionButtons;

		[Token(Token = "0x6000DE6")]
		[Address(RVA = "0xF6036C", Offset = "0xF6036C", VA = "0xF6036C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DE7")]
		[Address(RVA = "0xF604B0", Offset = "0xF604B0", VA = "0xF604B0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000DE8")]
		[Address(RVA = "0xF605F0", Offset = "0xF605F0", VA = "0xF605F0")]
		private void Suggest(string word)
		{
		}

		[Token(Token = "0x6000DE9")]
		[Address(RVA = "0xF60700", Offset = "0xF60700", VA = "0xF60700")]
		private bool IsSkipSugestion()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DEA")]
		[Address(RVA = "0xF607F0", Offset = "0xF607F0", VA = "0xF607F0")]
		private void GenerateSuggestionsUI()
		{
		}

		[Token(Token = "0x6000DEB")]
		[Address(RVA = "0xF608E8", Offset = "0xF608E8", VA = "0xF608E8")]
		private void SetSuggestionToCurrentInput(string word)
		{
		}

		[Token(Token = "0x6000DEC")]
		[Address(RVA = "0xF60AA4", Offset = "0xF60AA4", VA = "0xF60AA4")]
		public KeyboardSuggestions()
		{
		}
	}
	[Token(Token = "0x2000259")]
	public class SuggestionButton : MonoBehaviour
	{
		[Token(Token = "0x200025A")]
		public delegate void OnSuggestionClickedHandler(string word);

		[Token(Token = "0x4001010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Text suggestionText;

		[Token(Token = "0x1400003D")]
		public event OnSuggestionClickedHandler OnSuggestionClicked
		{
			[Token(Token = "0x6000DED")]
			[Address(RVA = "0xDC60DC", Offset = "0xDC60DC", VA = "0xDC60DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A9A68", Offset = "0x7A9A68")]
			add
			{
			}
			[Token(Token = "0x6000DEE")]
			[Address(RVA = "0xDC617C", Offset = "0xDC617C", VA = "0xDC617C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A9A78", Offset = "0x7A9A78")]
			remove
			{
			}
		}

		[Token(Token = "0x6000DEF")]
		[Address(RVA = "0xDC621C", Offset = "0xDC621C", VA = "0xDC621C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DF0")]
		[Address(RVA = "0xDC6304", Offset = "0xDC6304", VA = "0xDC6304")]
		public void SetSuggestion(string word)
		{
		}

		[Token(Token = "0x6000DF1")]
		[Address(RVA = "0xDC63B0", Offset = "0xDC63B0", VA = "0xDC63B0")]
		public SuggestionButton()
		{
		}

		[Token(Token = "0x6000DF2")]
		[Address(RVA = "0xDC63B8", Offset = "0xDC63B8", VA = "0xDC63B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A9A88", Offset = "0x7A9A88")]
		private void <Awake>b__5_0()
		{
		}
	}
	[Token(Token = "0x200025B")]
	public class SuggestionSetup
	{
		[Token(Token = "0x4001012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static SuggestionSetup instance;

		[Token(Token = "0x4001013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Node root;

		[Token(Token = "0x4001014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string[] textArray;

		[Token(Token = "0x6000DF7")]
		[Address(RVA = "0xDC6404", Offset = "0xDC6404", VA = "0xDC6404")]
		public SuggestionSetup(string[] textArray)
		{
		}

		[Token(Token = "0x6000DF8")]
		[Address(RVA = "0xDC64C0", Offset = "0xDC64C0", VA = "0xDC64C0")]
		private void PreProcess()
		{
		}

		[Token(Token = "0x6000DF9")]
		[Address(RVA = "0xDC667C", Offset = "0xDC667C", VA = "0xDC667C")]
		public List<string> GetSuggestions(string word, int maxNumberOfSuggestions)
		{
			return null;
		}
	}
	[Token(Token = "0x200025C")]
	public class Node
	{
		[Token(Token = "0x4001015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Dictionary<char, Node> nodes;

		[Token(Token = "0x4001016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<int> indexes;

		[Token(Token = "0x6000DFA")]
		[Address(RVA = "0x12F5978", Offset = "0x12F5978", VA = "0x12F5978")]
		public Node()
		{
		}
	}
	[Token(Token = "0x200025D")]
	public class Item : MonoBehaviour
	{
		[Token(Token = "0x200025E")]
		public delegate void OnItemSelectedHandler(Item item);

		[Token(Token = "0x4001017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEngine.UI.Button button;

		[Token(Token = "0x4001019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Color normalColor;

		[Token(Token = "0x400101A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Color highlightedColor;

		[Token(Token = "0x400101B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Image image;

		[Token(Token = "0x400101C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Sprite originSprite;

		[Token(Token = "0x400101D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected Sprite highlightedSprite;

		[Token(Token = "0x1400003E")]
		public event OnItemSelectedHandler OnItemSelected
		{
			[Token(Token = "0x6000DFB")]
			[Address(RVA = "0xF5E740", Offset = "0xF5E740", VA = "0xF5E740")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A9A98", Offset = "0x7A9A98")]
			add
			{
			}
			[Token(Token = "0x6000DFC")]
			[Address(RVA = "0xF5E7E0", Offset = "0xF5E7E0", VA = "0xF5E7E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A9AA8", Offset = "0x7A9AA8")]
			remove
			{
			}
		}

		[Token(Token = "0x6000DFD")]
		[Address(RVA = "0xF5E880", Offset = "0xF5E880", VA = "0xF5E880")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DFE")]
		[Address(RVA = "0xF5EAFC", Offset = "0xF5EAFC", VA = "0xF5EAFC", Slot = "4")]
		public virtual void Activate()
		{
		}

		[Token(Token = "0x6000DFF")]
		[Address(RVA = "0xF5EC78", Offset = "0xF5EC78", VA = "0xF5EC78", Slot = "5")]
		public virtual void Deactivate()
		{
		}

		[Token(Token = "0x6000E00")]
		[Address(RVA = "0xF5ED78", Offset = "0xF5ED78", VA = "0xF5ED78")]
		public Item()
		{
		}

		[Token(Token = "0x6000E01")]
		[Address(RVA = "0xF5ED80", Offset = "0xF5ED80", VA = "0xF5ED80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A9AB8", Offset = "0x7A9AB8")]
		private void <Awake>b__10_0()
		{
		}
	}
	[Token(Token = "0x200025F")]
	public class ListSelectionHelper : MonoBehaviour
	{
		[Token(Token = "0x400101E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform list;

		[Token(Token = "0x400101F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Item initialActivatedItem;

		[Token(Token = "0x4001020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public Item currentSelectedItem;

		[Token(Token = "0x4001021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Item[] items;

		[Token(Token = "0x6000E06")]
		[Address(RVA = "0x11876B4", Offset = "0x11876B4", VA = "0x11876B4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E07")]
		[Address(RVA = "0x1187718", Offset = "0x1187718", VA = "0x1187718")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E08")]
		[Address(RVA = "0x118788C", Offset = "0x118788C", VA = "0x118788C")]
		private void SelectionHelper(Item item)
		{
		}

		[Token(Token = "0x6000E09")]
		[Address(RVA = "0x11878D4", Offset = "0x11878D4", VA = "0x11878D4")]
		public void DeselectCurrentItem()
		{
		}

		[Token(Token = "0x6000E0A")]
		[Address(RVA = "0x118796C", Offset = "0x118796C", VA = "0x118796C")]
		public ListSelectionHelper()
		{
		}
	}
	[Token(Token = "0x2000260")]
	public class MenuItem : Item
	{
		[Token(Token = "0x4001022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject subMenu;

		[Token(Token = "0x6000E0B")]
		[Address(RVA = "0x1F53174", Offset = "0x1F53174", VA = "0x1F53174", Slot = "4")]
		public override void Activate()
		{
		}

		[Token(Token = "0x6000E0C")]
		[Address(RVA = "0x1F53214", Offset = "0x1F53214", VA = "0x1F53214", Slot = "5")]
		public override void Deactivate()
		{
		}

		[Token(Token = "0x6000E0D")]
		[Address(RVA = "0x1F532C8", Offset = "0x1F532C8", VA = "0x1F532C8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000E0E")]
		[Address(RVA = "0x1F532D4", Offset = "0x1F532D4", VA = "0x1F532D4")]
		public MenuItem()
		{
		}
	}
	[Token(Token = "0x2000261")]
	public class TabItem : Item
	{
		[Token(Token = "0x4001023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject relatedPanel;

		[Token(Token = "0x6000E0F")]
		[Address(RVA = "0xDCCA34", Offset = "0xDCCA34", VA = "0xDCCA34", Slot = "4")]
		public override void Activate()
		{
		}

		[Token(Token = "0x6000E10")]
		[Address(RVA = "0xDCCC38", Offset = "0xDCCC38", VA = "0xDCCC38", Slot = "5")]
		public override void Deactivate()
		{
		}

		[Token(Token = "0x6000E11")]
		[Address(RVA = "0xDCCB6C", Offset = "0xDCCB6C", VA = "0xDCCB6C")]
		private void ToggleCanvasGroupBlockRaycast(bool enabled)
		{
		}

		[Token(Token = "0x6000E12")]
		[Address(RVA = "0xDCCD60", Offset = "0xDCCD60", VA = "0xDCCD60")]
		public TabItem()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000262")]
	public struct Option
	{
		[Token(Token = "0x4001024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string value;
	}
	[Token(Token = "0x2000263")]
	public class OptionItem : MonoBehaviour
	{
		[Token(Token = "0x4001025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Option option;

		[Token(Token = "0x17000214")]
		public string Value
		{
			[Token(Token = "0x6000E13")]
			[Address(RVA = "0x12FC0F4", Offset = "0x12FC0F4", VA = "0x12FC0F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000215")]
		public Option Option
		{
			[Token(Token = "0x6000E14")]
			[Address(RVA = "0x12FC0FC", Offset = "0x12FC0FC", VA = "0x12FC0FC")]
			get
			{
				return default(Option);
			}
			[Token(Token = "0x6000E15")]
			[Address(RVA = "0x12FC104", Offset = "0x12FC104", VA = "0x12FC104")]
			set
			{
			}
		}

		[Token(Token = "0x6000E16")]
		[Address(RVA = "0x12FC1EC", Offset = "0x12FC1EC", VA = "0x12FC1EC")]
		public void Activate()
		{
		}

		[Token(Token = "0x6000E17")]
		[Address(RVA = "0x12FC214", Offset = "0x12FC214", VA = "0x12FC214")]
		public void Deactivate()
		{
		}

		[Token(Token = "0x6000E18")]
		[Address(RVA = "0x12FC23C", Offset = "0x12FC23C", VA = "0x12FC23C")]
		public OptionItem()
		{
		}
	}
	[Token(Token = "0x2000264")]
	public class OptionsManager : MonoBehaviour
	{
		[Token(Token = "0x2000265")]
		public delegate void OnOptionSelectedHandler(int index);

		[Token(Token = "0x4001026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x79F5D4", Offset = "0x79F5D4")]
		public GameObject optionTemplate;

		[Token(Token = "0x4001027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public List<Option> optionsList;

		[Token(Token = "0x4001029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public string selectedValue;

		[Token(Token = "0x400102A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int firstSelectedIndex;

		[Token(Token = "0x400102B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int selectedIdx;

		[Token(Token = "0x400102C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<OptionItem> optionItems;

		[Token(Token = "0x1400003F")]
		public event OnOptionSelectedHandler OnOptionSelected
		{
			[Token(Token = "0x6000E19")]
			[Address(RVA = "0x12FC244", Offset = "0x12FC244", VA = "0x12FC244")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A9AC8", Offset = "0x7A9AC8")]
			add
			{
			}
			[Token(Token = "0x6000E1A")]
			[Address(RVA = "0x12FC2E4", Offset = "0x12FC2E4", VA = "0x12FC2E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A9AD8", Offset = "0x7A9AD8")]
			remove
			{
			}
		}

		[Token(Token = "0x6000E1B")]
		[Address(RVA = "0x12FC384", Offset = "0x12FC384", VA = "0x12FC384")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E1C")]
		[Address(RVA = "0x12FC548", Offset = "0x12FC548", VA = "0x12FC548")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E1D")]
		[Address(RVA = "0x12FC3BC", Offset = "0x12FC3BC", VA = "0x12FC3BC")]
		private void PopulateOptions()
		{
		}

		[Token(Token = "0x6000E1E")]
		[Address(RVA = "0x12FC6E0", Offset = "0x12FC6E0", VA = "0x12FC6E0")]
		public void PrevOption()
		{
		}

		[Token(Token = "0x6000E1F")]
		[Address(RVA = "0x12FC780", Offset = "0x12FC780", VA = "0x12FC780")]
		public void NextOption()
		{
		}

		[Token(Token = "0x6000E20")]
		[Address(RVA = "0x12FC6EC", Offset = "0x12FC6EC", VA = "0x12FC6EC")]
		public void SetOption(int i)
		{
		}

		[Token(Token = "0x6000E21")]
		[Address(RVA = "0x12FC604", Offset = "0x12FC604", VA = "0x12FC604")]
		private void ActivateOption(int i)
		{
		}

		[Token(Token = "0x6000E22")]
		[Address(RVA = "0x12FC78C", Offset = "0x12FC78C", VA = "0x12FC78C")]
		private void DeactivateOption(int i)
		{
		}

		[Token(Token = "0x6000E23")]
		[Address(RVA = "0x12FC828", Offset = "0x12FC828", VA = "0x12FC828")]
		public OptionsManager()
		{
		}
	}
	[Token(Token = "0x2000266")]
	public enum ButtonDeactiveStyle
	{
		[Token(Token = "0x400102E")]
		Disabled,
		[Token(Token = "0x400102F")]
		Hidden
	}
	[Token(Token = "0x2000267")]
	public class Pagination : MonoBehaviour
	{
		[Token(Token = "0x4001030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x79F63C", Offset = "0x79F63C")]
		public Transform targetObject;

		[Token(Token = "0x4001031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x79F674", Offset = "0x79F674")]
		public ButtonDeactiveStyle buttonDeactiveStyle;

		[Token(Token = "0x4001032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEngine.UI.Button nextBtn;

		[Token(Token = "0x4001033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEngine.UI.Button prevBtn;

		[Token(Token = "0x4001034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int currentPage;

		[Token(Token = "0x17000216")]
		public int CurrentPage
		{
			[Token(Token = "0x6000E28")]
			[Address(RVA = "0xBE2440", Offset = "0xBE2440", VA = "0xBE2440")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000E29")]
			[Address(RVA = "0xBE2448", Offset = "0xBE2448", VA = "0xBE2448")]
			set
			{
			}
		}

		[Token(Token = "0x6000E2A")]
		[Address(RVA = "0xBE279C", Offset = "0xBE279C", VA = "0xBE279C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E2B")]
		[Address(RVA = "0xBE2920", Offset = "0xBE2920", VA = "0xBE2920")]
		public void Next()
		{
		}

		[Token(Token = "0x6000E2C")]
		[Address(RVA = "0xBE292C", Offset = "0xBE292C", VA = "0xBE292C")]
		public void Prev()
		{
		}

		[Token(Token = "0x6000E2D")]
		[Address(RVA = "0xBE2630", Offset = "0xBE2630", VA = "0xBE2630")]
		private void PagintionBtnControl(bool nextEnabled, bool prevEnabled)
		{
		}

		[Token(Token = "0x6000E2E")]
		[Address(RVA = "0xBE2938", Offset = "0xBE2938", VA = "0xBE2938")]
		public Pagination()
		{
		}
	}
	[Token(Token = "0x2000268")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7970BC", Offset = "0x7970BC")]
	public class CircularProgressBar : MonoBehaviour
	{
		[Token(Token = "0x4001035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Image circle;

		[Token(Token = "0x4001036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79F6AC", Offset = "0x79F6AC")]
		public float step;

		[Token(Token = "0x4001037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x79F6C4", Offset = "0x79F6C4")]
		public Transform valueText;

		[Token(Token = "0x4001038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float min;

		[Token(Token = "0x4001039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float max;

		[Token(Token = "0x400103A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ProgressBarManager progressBarManager;

		[Token(Token = "0x17000217")]
		public Text ValueText
		{
			[Token(Token = "0x6000E2F")]
			[Address(RVA = "0xF1C984", Offset = "0xF1C984", VA = "0xF1C984")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000218")]
		public float Value
		{
			[Token(Token = "0x6000E30")]
			[Address(RVA = "0xF1C9D8", Offset = "0xF1C9D8", VA = "0xF1C9D8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E31")]
			[Address(RVA = "0xF1C9F4", Offset = "0xF1C9F4", VA = "0xF1C9F4")]
			set
			{
			}
		}

		[Token(Token = "0x6000E32")]
		[Address(RVA = "0xF1CA10", Offset = "0xF1CA10", VA = "0xF1CA10")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E33")]
		[Address(RVA = "0xF1CA6C", Offset = "0xF1CA6C", VA = "0xF1CA6C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E34")]
		[Address(RVA = "0xF1CC6C", Offset = "0xF1CC6C", VA = "0xF1CC6C")]
		public void IncreaseValue()
		{
		}

		[Token(Token = "0x6000E35")]
		[Address(RVA = "0xF1CCA4", Offset = "0xF1CCA4", VA = "0xF1CCA4")]
		public void DecreaseValue()
		{
		}

		[Token(Token = "0x6000E36")]
		[Address(RVA = "0xF1CCDC", Offset = "0xF1CCDC", VA = "0xF1CCDC")]
		private void UpdateValue(float newValue)
		{
		}

		[Token(Token = "0x6000E37")]
		[Address(RVA = "0xF1CB5C", Offset = "0xF1CB5C", VA = "0xF1CB5C")]
		private void UpdateValueText(float newValue)
		{
		}

		[Token(Token = "0x6000E38")]
		[Address(RVA = "0xF1CCF8", Offset = "0xF1CCF8", VA = "0xF1CCF8")]
		public CircularProgressBar()
		{
		}
	}
	[Token(Token = "0x2000269")]
	public class ProgressBarManager : MonoBehaviour
	{
		[Token(Token = "0x200026A")]
		public delegate void OnValueUpdatedHandler(float updatedValue);

		[Token(Token = "0x200026B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x79711C", Offset = "0x79711C")]
		private sealed class <SlideTo>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400103E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400103F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001040")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float target;

			[Token(Token = "0x4001041")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float toValue;

			[Token(Token = "0x4001042")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float time;

			[Token(Token = "0x4001043")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ProgressBarManager <>4__this;

			[Token(Token = "0x4001044")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <fromValue>5__2;

			[Token(Token = "0x4001045")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <elapsedTime>5__3;

			[Token(Token = "0x17000219")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E48")]
				[Address(RVA = "0xCBF914", Offset = "0xCBF914", VA = "0xCBF914", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700021A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E4A")]
				[Address(RVA = "0xCBF95C", Offset = "0xCBF95C", VA = "0xCBF95C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E45")]
			[Address(RVA = "0xCBF5D4", Offset = "0xCBF5D4", VA = "0xCBF5D4")]
			[DebuggerHidden]
			public <SlideTo>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6000E46")]
			[Address(RVA = "0xCBF600", Offset = "0xCBF600", VA = "0xCBF600", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E47")]
			[Address(RVA = "0xCBF604", Offset = "0xCBF604", VA = "0xCBF604", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E49")]
			[Address(RVA = "0xCBF91C", Offset = "0xCBF91C", VA = "0xCBF91C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400103B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Coroutine slideCoroutine;

		[Token(Token = "0x14000040")]
		public event OnValueUpdatedHandler OnValueIsUpdating
		{
			[Token(Token = "0x6000E39")]
			[Address(RVA = "0xC86008", Offset = "0xC86008", VA = "0xC86008")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A9AE8", Offset = "0x7A9AE8")]
			add
			{
			}
			[Token(Token = "0x6000E3A")]
			[Address(RVA = "0xC860A8", Offset = "0xC860A8", VA = "0xC860A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A9AF8", Offset = "0x7A9AF8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000041")]
		public event OnValueUpdatedHandler OnValueStopUpgating
		{
			[Token(Token = "0x6000E3B")]
			[Address(RVA = "0xC86148", Offset = "0xC86148", VA = "0xC86148")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A9B08", Offset = "0x7A9B08")]
			add
			{
			}
			[Token(Token = "0x6000E3C")]
			[Address(RVA = "0xC861E8", Offset = "0xC861E8", VA = "0xC861E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A9B18", Offset = "0x7A9B18")]
			remove
			{
			}
		}

		[Token(Token = "0x6000E3D")]
		[Address(RVA = "0xC86288", Offset = "0xC86288", VA = "0xC86288")]
		public void IncreaseValue(float target, float step, float min, float max)
		{
		}

		[Token(Token = "0x6000E3E")]
		[Address(RVA = "0xC863C0", Offset = "0xC863C0", VA = "0xC863C0")]
		public void DecreaseValue(float target, float step, float min, float max)
		{
		}

		[Token(Token = "0x6000E3F")]
		[Address(RVA = "0xC86324", Offset = "0xC86324", VA = "0xC86324")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7A9B28", Offset = "0x7A9B28")]
		private IEnumerator SlideTo(float target, float toValue, float time = 0.2f)
		{
			return null;
		}

		[Token(Token = "0x6000E40")]
		[Address(RVA = "0xC8645C", Offset = "0xC8645C", VA = "0xC8645C")]
		public ProgressBarManager()
		{
		}
	}
	[Token(Token = "0x200026C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x79712C", Offset = "0x79712C")]
	public class ScrollController : MonoBehaviour
	{
		[Token(Token = "0x4001046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Scrollbar scrollbar;

		[Token(Token = "0x4001047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x79F71C", Offset = "0x79F71C")]
		public float step;

		[Token(Token = "0x4001048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float min;

		[Token(Token = "0x4001049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float max;

		[Token(Token = "0x400104A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ProgressBarManager progressBarManager;

		[Token(Token = "0x1700021B")]
		public float Value
		{
			[Token(Token = "0x6000E4B")]
			[Address(RVA = "0xC90B78", Offset = "0xC90B78", VA = "0xC90B78")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E4C")]
			[Address(RVA = "0xC90B94", Offset = "0xC90B94", VA = "0xC90B94")]
			set
			{
			}
		}

		[Token(Token = "0x6000E4D")]
		[Address(RVA = "0xC90BB0", Offset = "0xC90BB0", VA = "0xC90BB0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E4E")]
		[Address(RVA = "0xC90C0C", Offset = "0xC90C0C", VA = "0xC90C0C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E4F")]
		[Address(RVA = "0xC90C9C", Offset = "0xC90C9C", VA = "0xC90C9C")]
		public void IncreaseValue()
		{
		}

		[Token(Token = "0x6000E50")]
		[Address(RVA = "0xC90CE0", Offset = "0xC90CE0", VA = "0xC90CE0")]
		public void DecreaseValue()
		{
		}

		[Token(Token = "0x6000E51")]
		[Address(RVA = "0xC90D24", Offset = "0xC90D24", VA = "0xC90D24")]
		private void UpdateValue(float newValue)
		{
		}

		[Token(Token = "0x6000E52")]
		[Address(RVA = "0xC90D40", Offset = "0xC90D40", VA = "0xC90D40")]
		public ScrollController()
		{
		}
	}
	[Token(Token = "0x200026D")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x79718C", Offset = "0x79718C")]
	public class SliderProgressBar : MonoBehaviour
	{
		[Token(Token = "0x200026E")]
		public enum ValueType
		{
			[Token(Token = "0x4001053")]
			Percentage,
			[Token(Token = "0x4001054")]
			Number
		}

		[Token(Token = "0x400104B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEngine.UI.Slider slider;

		[Token(Token = "0x400104C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float step;

		[Token(Token = "0x400104D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x79F734", Offset = "0x79F734")]
		public ValueType valuePresentedAs;

		[Token(Token = "0x400104E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform valueText;

		[Token(Token = "0x400104F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public float roundedPercentage;

		[Token(Token = "0x4001050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public float roundedValue;

		[Token(Token = "0x4001051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ProgressBarManager progressBarManager;

		[Token(Token = "0x1700021C")]
		public Text ValueText
		{
			[Token(Token = "0x6000E53")]
			[Address(RVA = "0xDBCEB0", Offset = "0xDBCEB0", VA = "0xDBCEB0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021D")]
		public float Value
		{
			[Token(Token = "0x6000E54")]
			[Address(RVA = "0xDBCF04", Offset = "0xDBCF04", VA = "0xDBCF04")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E55")]
			[Address(RVA = "0xDBCF28", Offset = "0xDBCF28", VA = "0xDBCF28")]
			set
			{
			}
		}

		[Token(Token = "0x6000E56")]
		[Address(RVA = "0xDBCF4C", Offset = "0xDBCF4C", VA = "0xDBCF4C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E57")]
		[Address(RVA = "0xDBCFA8", Offset = "0xDBCFA8", VA = "0xDBCFA8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E58")]
		[Address(RVA = "0xDBD374", Offset = "0xDBD374", VA = "0xDBD374")]
		public void IncreaseValue()
		{
		}

		[Token(Token = "0x6000E59")]
		[Address(RVA = "0xDBD3D0", Offset = "0xDBD3D0", VA = "0xDBD3D0")]
		public void DecreaseValue()
		{
		}

		[Token(Token = "0x6000E5A")]
		[Address(RVA = "0xDBD42C", Offset = "0xDBD42C", VA = "0xDBD42C")]
		private void UpdateValue(float newValue)
		{
		}

		[Token(Token = "0x6000E5B")]
		[Address(RVA = "0xDBD10C", Offset = "0xDBD10C", VA = "0xDBD10C")]
		private void CalculateValue(float newValue)
		{
		}

		[Token(Token = "0x6000E5C")]
		[Address(RVA = "0xDBD268", Offset = "0xDBD268", VA = "0xDBD268")]
		private void UpdateValueText(float newValue)
		{
		}

		[Token(Token = "0x6000E5D")]
		[Address(RVA = "0xDBD450", Offset = "0xDBD450", VA = "0xDBD450")]
		public SliderProgressBar()
		{
		}
	}
	[Token(Token = "0x200026F")]
	public class RadialItem : MonoBehaviour
	{
		[Token(Token = "0x4001055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color normalColor;

		[Token(Token = "0x4001056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color hoverColor;

		[Token(Token = "0x4001057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Sprite iconImage;

		[Token(Token = "0x4001058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEvent onClickEvent;

		[Token(Token = "0x4001059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform icon;

		[Token(Token = "0x400105A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform sector;

		[Token(Token = "0x6000E5E")]
		[Address(RVA = "0xC867B4", Offset = "0xC867B4", VA = "0xC867B4")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000E5F")]
		[Address(RVA = "0xC86844", Offset = "0xC86844", VA = "0xC86844")]
		public void AdjustFillSize(int total, int index, float radius)
		{
		}

		[Token(Token = "0x6000E60")]
		[Address(RVA = "0xC86A08", Offset = "0xC86A08", VA = "0xC86A08")]
		public void Activate()
		{
		}

		[Token(Token = "0x6000E61")]
		[Address(RVA = "0xC86A78", Offset = "0xC86A78", VA = "0xC86A78")]
		public void Deactivate()
		{
		}

		[Token(Token = "0x6000E62")]
		[Address(RVA = "0xC86AE8", Offset = "0xC86AE8", VA = "0xC86AE8")]
		public void Click()
		{
		}

		[Token(Token = "0x6000E63")]
		[Address(RVA = "0xC86968", Offset = "0xC86968", VA = "0xC86968")]
		private Vector3 CalculateIconPosition(float rotation, float radis)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E64")]
		[Address(RVA = "0xC86AFC", Offset = "0xC86AFC", VA = "0xC86AFC")]
		public RadialItem()
		{
		}
	}
	[Token(Token = "0x2000270")]
	[ExecuteInEditMode]
	public class RadialMenuManager : MonoBehaviour
	{
		[Token(Token = "0x400105B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "MinAttribute", RVA = "0x79F78C", Offset = "0x79F78C")]
		public float iconRadius;

		[Token(Token = "0x400105C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Vector2 position;

		[Token(Token = "0x400105D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RadialItem[] radialItems;

		[Token(Token = "0x400105E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float currentAngle;

		[Token(Token = "0x400105F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int previousSelection;

		[Token(Token = "0x6000E65")]
		[Address(RVA = "0xC86B04", Offset = "0xC86B04", VA = "0xC86B04")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E66")]
		[Address(RVA = "0xC86C38", Offset = "0xC86C38", VA = "0xC86C38")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E67")]
		[Address(RVA = "0xC86B68", Offset = "0xC86B68", VA = "0xC86B68")]
		public void AdjustRadialItem()
		{
		}

		[Token(Token = "0x6000E68")]
		[Address(RVA = "0xC86D9C", Offset = "0xC86D9C", VA = "0xC86D9C")]
		private int GetCurrentSelection(Vector2 position)
		{
			return default(int);
		}

		[Token(Token = "0x6000E69")]
		[Address(RVA = "0xC86D44", Offset = "0xC86D44", VA = "0xC86D44")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000E6A")]
		[Address(RVA = "0xC86E48", Offset = "0xC86E48", VA = "0xC86E48")]
		private void ProcessSelection(int selection)
		{
		}

		[Token(Token = "0x6000E6B")]
		[Address(RVA = "0xC86EDC", Offset = "0xC86EDC", VA = "0xC86EDC")]
		private void ProcessPress(int selection)
		{
		}

		[Token(Token = "0x6000E6C")]
		[Address(RVA = "0xC86F6C", Offset = "0xC86F6C", VA = "0xC86F6C")]
		public RadialMenuManager()
		{
		}
	}
	[Token(Token = "0x2000271")]
	public enum XRInputType
	{
		[Token(Token = "0x4001061")]
		DeviceBased,
		[Token(Token = "0x4001062")]
		ActionBased
	}
	[Token(Token = "0x2000272")]
	public class Util : MonoBehaviour
	{
		[Token(Token = "0x6000E6D")]
		public static T SafeDestroy<T>(T obj) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6000E6E")]
		public static T SafeDestroyGameObject<T>(T component) where T : Component
		{
			return null;
		}

		[Token(Token = "0x6000E6F")]
		[Address(RVA = "0xAC92F8", Offset = "0xAC92F8", VA = "0xAC92F8")]
		public static void DestroyChildren(Transform root)
		{
		}

		[Token(Token = "0x6000E70")]
		[Address(RVA = "0xAC9380", Offset = "0xAC9380", VA = "0xAC9380")]
		public static string ReplaceLastOccurrence(string Source, string Find, string Replace)
		{
			return null;
		}

		[Token(Token = "0x6000E71")]
		[Address(RVA = "0xAC9404", Offset = "0xAC9404", VA = "0xAC9404")]
		public Util()
		{
		}
	}
	[Token(Token = "0x2000273")]
	public class VREventSystemHelper : EventSystem
	{
		[Token(Token = "0x6000E72")]
		[Address(RVA = "0xACBBF0", Offset = "0xACBBF0", VA = "0xACBBF0", Slot = "17")]
		protected override void OnApplicationFocus(bool hasFocus)
		{
		}

		[Token(Token = "0x6000E73")]
		[Address(RVA = "0xACBBFC", Offset = "0xACBBFC", VA = "0xACBBFC")]
		public VREventSystemHelper()
		{
		}
	}
}
namespace VRUiKits.Demo
{
	[Token(Token = "0x2000274")]
	public class ChangeColor : MonoBehaviour
	{
		[Token(Token = "0x4001063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Material material;

		[Token(Token = "0x4001064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Color color;

		[Token(Token = "0x4001065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool isClicked;

		[Token(Token = "0x6000E74")]
		[Address(RVA = "0xF0B548", Offset = "0xF0B548", VA = "0xF0B548")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E75")]
		[Address(RVA = "0xF0B5B4", Offset = "0xF0B5B4", VA = "0xF0B5B4")]
		public void PointerEnter()
		{
		}

		[Token(Token = "0x6000E76")]
		[Address(RVA = "0xF0B60C", Offset = "0xF0B60C", VA = "0xF0B60C")]
		public void PointerLeave()
		{
		}

		[Token(Token = "0x6000E77")]
		[Address(RVA = "0xF0B640", Offset = "0xF0B640", VA = "0xF0B640")]
		public void PointerClick()
		{
		}

		[Token(Token = "0x6000E78")]
		[Address(RVA = "0xF0B684", Offset = "0xF0B684", VA = "0xF0B684")]
		public ChangeColor()
		{
		}
	}
	[Token(Token = "0x2000275")]
	public class FaceVRCamera : MonoBehaviour
	{
		[Token(Token = "0x4001066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform vrCamera;

		[Token(Token = "0x4001067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FaceCameraType type;

		[Token(Token = "0x4001068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float distance;

		[Token(Token = "0x6000E79")]
		[Address(RVA = "0xE78B94", Offset = "0xE78B94", VA = "0xE78B94")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E7A")]
		[Address(RVA = "0xE78BEC", Offset = "0xE78BEC", VA = "0xE78BEC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E7B")]
		[Address(RVA = "0xE78CC8", Offset = "0xE78CC8", VA = "0xE78CC8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E7C")]
		[Address(RVA = "0xE78DE4", Offset = "0xE78DE4", VA = "0xE78DE4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000E7D")]
		[Address(RVA = "0xE78CDC", Offset = "0xE78CDC", VA = "0xE78CDC")]
		private void CalibratePosition()
		{
		}

		[Token(Token = "0x6000E7E")]
		[Address(RVA = "0xE78DF4", Offset = "0xE78DF4", VA = "0xE78DF4")]
		public FaceVRCamera()
		{
		}
	}
	[Token(Token = "0x2000276")]
	public enum FaceCameraType
	{
		[Token(Token = "0x400106A")]
		Always,
		[Token(Token = "0x400106B")]
		OnToggle
	}
	[Token(Token = "0x2000277")]
	public class KeyboardDisplay : MonoBehaviour
	{
		[Token(Token = "0x400106C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform vrCamera;

		[Token(Token = "0x400106D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 offset;

		[Token(Token = "0x6000E7F")]
		[Address(RVA = "0xF5F380", Offset = "0xF5F380", VA = "0xF5F380")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E80")]
		[Address(RVA = "0xF5F3F4", Offset = "0xF5F3F4", VA = "0xF5F3F4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E81")]
		[Address(RVA = "0xF5F3F8", Offset = "0xF5F3F8", VA = "0xF5F3F8")]
		private void SetPosition()
		{
		}

		[Token(Token = "0x6000E82")]
		[Address(RVA = "0xF5F458", Offset = "0xF5F458", VA = "0xF5F458")]
		public KeyboardDisplay()
		{
		}
	}
	[Token(Token = "0x2000278")]
	public class MouseLook : MonoBehaviour
	{
		[Token(Token = "0x400106E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float speed;

		[Token(Token = "0x400106F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float x;

		[Token(Token = "0x4001070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float y;

		[Token(Token = "0x6000E83")]
		[Address(RVA = "0x1F5C4A4", Offset = "0x1F5C4A4", VA = "0x1F5C4A4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E84")]
		[Address(RVA = "0x1F5C608", Offset = "0x1F5C608", VA = "0x1F5C608")]
		public MouseLook()
		{
		}
	}
	[Token(Token = "0x2000279")]
	public class ToggleUIKitHelper : MonoBehaviour
	{
		[Token(Token = "0x4001071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UIKitPointer pointer;

		[Token(Token = "0x4001072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<GameObject> objectsToToggle;

		[Token(Token = "0x6000E85")]
		[Address(RVA = "0xE82F38", Offset = "0xE82F38", VA = "0xE82F38")]
		public void Pause()
		{
		}

		[Token(Token = "0x6000E86")]
		[Address(RVA = "0xE83184", Offset = "0xE83184", VA = "0xE83184")]
		public void Run()
		{
		}

		[Token(Token = "0x6000E87")]
		[Address(RVA = "0xE8303C", Offset = "0xE8303C", VA = "0xE8303C")]
		private void Toggle(bool enabled)
		{
		}

		[Token(Token = "0x6000E88")]
		[Address(RVA = "0xE83288", Offset = "0xE83288", VA = "0xE83288")]
		public ToggleUIKitHelper()
		{
		}
	}
}
namespace MText
{
	[Token(Token = "0x200027A")]
	public class Countdown : MonoBehaviour
	{
		[Token(Token = "0x200027B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7971FC", Offset = "0x7971FC")]
		private sealed class <CountdownRoutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001078")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001079")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400107A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Countdown <>4__this;

			[Token(Token = "0x400107B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x1700021E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E8F")]
				[Address(RVA = "0xB08584", Offset = "0xB08584", VA = "0xB08584", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700021F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E91")]
				[Address(RVA = "0xB085CC", Offset = "0xB085CC", VA = "0xB085CC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E8C")]
			[Address(RVA = "0xB083A0", Offset = "0xB083A0", VA = "0xB083A0")]
			[DebuggerHidden]
			public <CountdownRoutine>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6000E8D")]
			[Address(RVA = "0xB083CC", Offset = "0xB083CC", VA = "0xB083CC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E8E")]
			[Address(RVA = "0xB083D0", Offset = "0xB083D0", VA = "0xB083D0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E90")]
			[Address(RVA = "0xB0858C", Offset = "0xB0858C", VA = "0xB0858C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool startCountdownOnStart;

		[Token(Token = "0x4001074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x79F7B0", Offset = "0x79F7B0")]
		private Modular3DText modular3DText;

		[Token(Token = "0x4001075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x79F7E8", Offset = "0x79F7E8")]
		private string textAfterCountdownEnds;

		[Token(Token = "0x4001076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x79F820", Offset = "0x79F820")]
		private int duration;

		[Token(Token = "0x4001077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79F858", Offset = "0x79F858")]
		private float timeStep;

		[Token(Token = "0x6000E89")]
		[Address(RVA = "0xB72A90", Offset = "0xB72A90", VA = "0xB72A90")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E8A")]
		[Address(RVA = "0xB72B28", Offset = "0xB72B28", VA = "0xB72B28")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7A9BD8", Offset = "0x7A9BD8")]
		private IEnumerator CountdownRoutine()
		{
			return null;
		}

		[Token(Token = "0x6000E8B")]
		[Address(RVA = "0xB72BA0", Offset = "0xB72BA0", VA = "0xB72BA0")]
		public Countdown()
		{
		}
	}
	[Token(Token = "0x200027C")]
	public class DamageText : MonoBehaviour
	{
		[Token(Token = "0x200027D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x79720C", Offset = "0x79720C")]
		private sealed class <ApplyModules>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400107F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001080")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001081")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DamageText <>4__this;

			[Token(Token = "0x17000220")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E9B")]
				[Address(RVA = "0xB089E0", Offset = "0xB089E0", VA = "0xB089E0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000221")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E9D")]
				[Address(RVA = "0xB08A28", Offset = "0xB08A28", VA = "0xB08A28", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E98")]
			[Address(RVA = "0xB08894", Offset = "0xB08894", VA = "0xB08894")]
			[DebuggerHidden]
			public <ApplyModules>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6000E99")]
			[Address(RVA = "0xB088C0", Offset = "0xB088C0", VA = "0xB088C0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E9A")]
			[Address(RVA = "0xB088C4", Offset = "0xB088C4", VA = "0xB088C4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E9C")]
			[Address(RVA = "0xB089E8", Offset = "0xB089E8", VA = "0xB089E8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400107C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Modular3DText modular3DText;

		[Token(Token = "0x400107D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform textHolder;

		[Token(Token = "0x400107E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MText_Module module;

		[Token(Token = "0x6000E92")]
		[Address(RVA = "0xB74E38", Offset = "0xB74E38", VA = "0xB74E38")]
		public void UpdateText(string str)
		{
		}

		[Token(Token = "0x6000E93")]
		[Address(RVA = "0xB75064", Offset = "0xB75064", VA = "0xB75064")]
		public void UpdateText(float number)
		{
		}

		[Token(Token = "0x6000E94")]
		[Address(RVA = "0xB750BC", Offset = "0xB750BC", VA = "0xB750BC")]
		public void UpdateText(int number)
		{
		}

		[Token(Token = "0x6000E95")]
		[Address(RVA = "0xB74E88", Offset = "0xB74E88", VA = "0xB74E88")]
		private void ResetTransform()
		{
		}

		[Token(Token = "0x6000E96")]
		[Address(RVA = "0xB74FEC", Offset = "0xB74FEC", VA = "0xB74FEC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7A9C88", Offset = "0x7A9C88")]
		private IEnumerator ApplyModules()
		{
			return null;
		}

		[Token(Token = "0x6000E97")]
		[Address(RVA = "0xB7510C", Offset = "0xB7510C", VA = "0xB7510C")]
		public DamageText()
		{
		}
	}
	[Token(Token = "0x200027E")]
	public class StatusToolTip : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200027F")]
		public class Styles
		{
			[Token(Token = "0x4001086")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject textPrefab;

			[Token(Token = "0x4001087")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 offsetMin;

			[Token(Token = "0x4001088")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Vector3 offsetMax;

			[Token(Token = "0x6000EA7")]
			[Address(RVA = "0xCC189C", Offset = "0xCC189C", VA = "0xCC189C")]
			public Styles()
			{
			}
		}

		[Token(Token = "0x2000280")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x79721C", Offset = "0x79721C")]
		private sealed class <DestroyObj>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001089")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400108A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400108B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float duration;

			[Token(Token = "0x400108C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameObject obj;

			[Token(Token = "0x400108D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public StatusToolTip <>4__this;

			[Token(Token = "0x17000222")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000EAB")]
				[Address(RVA = "0xCC184C", Offset = "0xCC184C", VA = "0xCC184C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000223")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000EAD")]
				[Address(RVA = "0xCC1894", Offset = "0xCC1894", VA = "0xCC1894", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000EA8")]
			[Address(RVA = "0xCC14F4", Offset = "0xCC14F4", VA = "0xCC14F4")]
			[DebuggerHidden]
			public <DestroyObj>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6000EA9")]
			[Address(RVA = "0xCC1520", Offset = "0xCC1520", VA = "0xCC1520", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000EAA")]
			[Address(RVA = "0xCC1524", Offset = "0xCC1524", VA = "0xCC1524", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000EAC")]
			[Address(RVA = "0xCC1854", Offset = "0xCC1854", VA = "0xCC1854", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Styles> styles;

		[Token(Token = "0x4001083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x79F8A4", Offset = "0x79F8A4")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x79F8A4", Offset = "0x79F8A4")]
		public float defaultDuration;

		[Token(Token = "0x4001084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79F8DC", Offset = "0x79F8DC")]
		public bool pooling;

		[Token(Token = "0x4001085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Dictionary<string, Queue<GameObject>> poolDictionary;

		[Token(Token = "0x6000E9E")]
		[Address(RVA = "0xDC583C", Offset = "0xDC583C", VA = "0xDC583C")]
		public void ShowToolTip(string text, int style, Vector3 position, Quaternion rotation, bool worldPosition)
		{
		}

		[Token(Token = "0x6000E9F")]
		[Address(RVA = "0xDC5848", Offset = "0xDC5848", VA = "0xDC5848")]
		public void ShowToolTip(string text, int style, Vector3 position, Quaternion rotation, bool worldPosition, float duration)
		{
		}

		[Token(Token = "0x6000EA0")]
		[Address(RVA = "0xDC5944", Offset = "0xDC5944", VA = "0xDC5944")]
		private GameObject GetIObj(int style)
		{
			return null;
		}

		[Token(Token = "0x6000EA1")]
		[Address(RVA = "0xDC5D4C", Offset = "0xDC5D4C", VA = "0xDC5D4C")]
		private GameObject GetNewObj(int style)
		{
			return null;
		}

		[Token(Token = "0x6000EA2")]
		[Address(RVA = "0xDC5A94", Offset = "0xDC5A94", VA = "0xDC5A94")]
		private void SetPosition(Transform objTransform, int style, Vector3 position, Quaternion rotation, bool worldPosition)
		{
		}

		[Token(Token = "0x6000EA3")]
		[Address(RVA = "0xDC5EA0", Offset = "0xDC5EA0", VA = "0xDC5EA0")]
		private Vector3 RandomVector3(Vector3 min, Vector3 max)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000EA4")]
		[Address(RVA = "0xDC5C38", Offset = "0xDC5C38", VA = "0xDC5C38")]
		private void ApplyText(string text, GameObject obj)
		{
		}

		[Token(Token = "0x6000EA5")]
		[Address(RVA = "0xDC5CA8", Offset = "0xDC5CA8", VA = "0xDC5CA8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7A9D38", Offset = "0x7A9D38")]
		private IEnumerator DestroyObj(GameObject obj, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000EA6")]
		[Address(RVA = "0xDC5F18", Offset = "0xDC5F18", VA = "0xDC5F18")]
		public StatusToolTip()
		{
		}
	}
	[Token(Token = "0x2000281")]
	public class Typewriter : MonoBehaviour
	{
		[Token(Token = "0x2000282")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x79722C", Offset = "0x79722C")]
		private sealed class <TypingRoutine>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001097")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001098")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001099")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Typewriter <>4__this;

			[Token(Token = "0x400109A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x17000224")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000EB5")]
				[Address(RVA = "0xCC5A2C", Offset = "0xCC5A2C", VA = "0xCC5A2C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000225")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000EB7")]
				[Address(RVA = "0xCC5A74", Offset = "0xCC5A74", VA = "0xCC5A74", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000EB2")]
			[Address(RVA = "0xCC56A8", Offset = "0xCC56A8", VA = "0xCC56A8")]
			[DebuggerHidden]
			public <TypingRoutine>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6000EB3")]
			[Address(RVA = "0xCC56D4", Offset = "0xCC56D4", VA = "0xCC56D4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000EB4")]
			[Address(RVA = "0xCC56D8", Offset = "0xCC56D8", VA = "0xCC56D8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000EB6")]
			[Address(RVA = "0xCC5A34", Offset = "0xCC5A34", VA = "0xCC5A34", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400108E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Modular3DText modular3DText;

		[Token(Token = "0x400108F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x79F924", Offset = "0x79F924")]
		public string text;

		[Token(Token = "0x4001090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79F934", Offset = "0x79F934")]
		public Vector2 speed;

		[Token(Token = "0x4001091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip typeSound;

		[Token(Token = "0x4001092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79F97C", Offset = "0x79F97C")]
		private Vector2 volume;

		[Token(Token = "0x4001093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AudioSource audioSource;

		[Token(Token = "0x4001094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private string typingSymbol;

		[Token(Token = "0x4001095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private bool startAutomatically;

		[Token(Token = "0x4001096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private float startDelay;

		[Token(Token = "0x6000EAE")]
		[Address(RVA = "0xE8EDE8", Offset = "0xE8EDE8", VA = "0xE8EDE8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000EAF")]
		[Address(RVA = "0xE8EDF8", Offset = "0xE8EDF8", VA = "0xE8EDF8")]
		public void StartTyping()
		{
		}

		[Token(Token = "0x6000EB0")]
		[Address(RVA = "0xE8EE30", Offset = "0xE8EE30", VA = "0xE8EE30")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7A9DE8", Offset = "0x7A9DE8")]
		private IEnumerator TypingRoutine()
		{
			return null;
		}

		[Token(Token = "0x6000EB1")]
		[Address(RVA = "0xE8EEA8", Offset = "0xE8EEA8", VA = "0xE8EEA8")]
		public Typewriter()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000283")]
	public class MText_Character
	{
		[Token(Token = "0x400109B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public char character;

		[Token(Token = "0x400109C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject prefab;

		[Token(Token = "0x400109D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Mesh meshPrefab;

		[Token(Token = "0x400109E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float spacing;

		[Token(Token = "0x400109F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int glyphIndex;

		[Token(Token = "0x6000EB8")]
		[Address(RVA = "0x118B6A4", Offset = "0x118B6A4", VA = "0x118B6A4")]
		public MText_Character()
		{
		}
	}
	[Token(Token = "0x2000284")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x79723C", Offset = "0x79723C")]
	public class MText_Font : ScriptableObject
	{
		[Token(Token = "0x40010A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<MText_Character> characters;

		[Token(Token = "0x40010A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject fontSet;

		[Token(Token = "0x40010A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79FA18", Offset = "0x79FA18")]
		private bool overwriteOldSet;

		[Token(Token = "0x40010A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79FA64", Offset = "0x79FA64")]
		public bool monoSpaceFont;

		[Token(Token = "0x40010A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool useUpperCaseLettersIfLowerCaseIsMissing;

		[Token(Token = "0x40010A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79FA9C", Offset = "0x79FA9C")]
		public float emptySpaceSpacing;

		[Token(Token = "0x40010A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79FAD4", Offset = "0x79FAD4")]
		public float characterSpacing;

		[Token(Token = "0x40010A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79FB0C", Offset = "0x79FB0C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x79FB0C", Offset = "0x79FB0C")]
		public List<MText_Font> fallbackFonts;

		[Token(Token = "0x40010A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 rotationFix;

		[Token(Token = "0x40010A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector3 positionFix;

		[Token(Token = "0x40010AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Vector3 scaleFix;

		[Token(Token = "0x40010AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public bool enableKerning;

		[Token(Token = "0x40010AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float kerningMultiplier;

		[Token(Token = "0x40010AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<MText_KernPairHolder> kernTable;

		[Token(Token = "0x6000EB9")]
		[Address(RVA = "0x118B6BC", Offset = "0x118B6BC", VA = "0x118B6BC")]
		public Mesh RetrievePrefab(char c)
		{
			return null;
		}

		[Token(Token = "0x6000EBA")]
		[Address(RVA = "0x118BBE4", Offset = "0x118BBE4", VA = "0x118BBE4")]
		public Mesh RetrievePrefabWithoutFallbackCheck(char c)
		{
			return null;
		}

		[Token(Token = "0x6000EBB")]
		[Address(RVA = "0x118B958", Offset = "0x118B958", VA = "0x118B958")]
		private Mesh MeshPrefab(int i)
		{
			return null;
		}

		[Token(Token = "0x6000EBC")]
		[Address(RVA = "0x118BD74", Offset = "0x118BD74", VA = "0x118BD74")]
		public float Spacing(char c)
		{
			return default(float);
		}

		[Token(Token = "0x6000EBD")]
		[Address(RVA = "0x118BE70", Offset = "0x118BE70", VA = "0x118BE70")]
		public float Spacing(char previousChar, char currentChar)
		{
			return default(float);
		}

		[Token(Token = "0x6000EBE")]
		[Address(RVA = "0x118BFD4", Offset = "0x118BFD4", VA = "0x118BFD4")]
		private float Kerning(char previousChar, char currentChar)
		{
			return default(float);
		}

		[Token(Token = "0x6000EBF")]
		[Address(RVA = "0x118C140", Offset = "0x118C140", VA = "0x118C140")]
		private MText_Character Character(char c)
		{
			return null;
		}

		[Token(Token = "0x6000EC0")]
		[Address(RVA = "0x118C220", Offset = "0x118C220", VA = "0x118C220")]
		public void UpdateCharacterList(GameObject prefab)
		{
		}

		[Token(Token = "0x6000EC1")]
		[Address(RVA = "0x118C248", Offset = "0x118C248", VA = "0x118C248")]
		public void UpdateCharacterList()
		{
		}

		[Token(Token = "0x6000EC2")]
		[Address(RVA = "0x118C5E0", Offset = "0x118C5E0", VA = "0x118C5E0")]
		public void AddCharacter(GameObject obj)
		{
		}

		[Token(Token = "0x6000EC3")]
		[Address(RVA = "0x118C888", Offset = "0x118C888", VA = "0x118C888")]
		public void AddCharacter(Mesh mesh)
		{
		}

		[Token(Token = "0x6000EC4")]
		[Address(RVA = "0x118C7BC", Offset = "0x118C7BC", VA = "0x118C7BC")]
		private void ProcessName(string name, out char character, out float spacing)
		{
		}

		[Token(Token = "0x6000EC5")]
		[Address(RVA = "0x118C9AC", Offset = "0x118C9AC", VA = "0x118C9AC")]
		private void NewMethod(string name, out char character, out float spacing)
		{
		}

		[Token(Token = "0x6000EC6")]
		[Address(RVA = "0x118CB04", Offset = "0x118CB04", VA = "0x118CB04")]
		private void OldMethod(string name, out char character, out float spacing)
		{
		}

		[Token(Token = "0x6000EC7")]
		[Address(RVA = "0x118CE28", Offset = "0x118CE28", VA = "0x118CE28")]
		private float GetSpacing(string numberString)
		{
			return default(float);
		}

		[Token(Token = "0x6000EC8")]
		[Address(RVA = "0x118C704", Offset = "0x118C704", VA = "0x118C704")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x7A9E98", Offset = "0x7A9E98")]
		private void AverageSpacing()
		{
		}

		[Token(Token = "0x6000EC9")]
		[Address(RVA = "0x118CEC0", Offset = "0x118CEC0", VA = "0x118CEC0")]
		public MText_Font()
		{
		}
	}
	[Token(Token = "0x2000285")]
	public class MText_GetCharacterObject
	{
		[Token(Token = "0x6000ECA")]
		[Address(RVA = "0x118D004", Offset = "0x118D004", VA = "0x118D004")]
		public static GameObject GetObject(char c, Modular3DText text)
		{
			return null;
		}

		[Token(Token = "0x6000ECB")]
		[Address(RVA = "0x118D668", Offset = "0x118D668", VA = "0x118D668")]
		public MText_GetCharacterObject()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000286")]
	public struct MText_KernPair
	{
		[Token(Token = "0x40010AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int left;

		[Token(Token = "0x40010AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int right;

		[Token(Token = "0x6000ECC")]
		[Address(RVA = "0x118D670", Offset = "0x118D670", VA = "0x118D670")]
		public MText_KernPair(int left, int right)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000287")]
	public struct MText_KernPairHolder
	{
		[Token(Token = "0x40010B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MText_KernPair kernPair;

		[Token(Token = "0x40010B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int offset;

		[Token(Token = "0x6000ECD")]
		[Address(RVA = "0x118D678", Offset = "0x118D678", VA = "0x118D678")]
		public MText_KernPairHolder(MText_KernPair kernPair, short offset)
		{
		}
	}
	[Token(Token = "0x2000288")]
	[ExecuteInEditMode]
	public class MText_Letter : MonoBehaviour
	{
		[Token(Token = "0x40010B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Renderer model;

		[Token(Token = "0x6000ECE")]
		[Address(RVA = "0x118D688", Offset = "0x118D688", VA = "0x118D688")]
		public MText_Letter()
		{
		}
	}
	[Token(Token = "0x2000289")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7972AC", Offset = "0x7972AC")]
	public class MText_LoopAnimation : MonoBehaviour
	{
		[Token(Token = "0x200028A")]
		private enum TargetType
		{
			[Token(Token = "0x40010B9")]
			letters,
			[Token(Token = "0x40010BA")]
			words
		}

		[Token(Token = "0x200028B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x79730C", Offset = "0x79730C")]
		private sealed class <LetterAnimationRoutine>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40010BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40010BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40010BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MText_LoopAnimation <>4__this;

			[Token(Token = "0x40010BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x17000227")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000EDA")]
				[Address(RVA = "0xCB920C", Offset = "0xCB920C", VA = "0xCB920C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000228")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000EDC")]
				[Address(RVA = "0xCB9254", Offset = "0xCB9254", VA = "0xCB9254", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000ED7")]
			[Address(RVA = "0xCB9020", Offset = "0xCB9020", VA = "0xCB9020")]
			[DebuggerHidden]
			public <LetterAnimationRoutine>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6000ED8")]
			[Address(RVA = "0xCB904C", Offset = "0xCB904C", VA = "0xCB904C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000ED9")]
			[Address(RVA = "0xCB9050", Offset = "0xCB9050", VA = "0xCB9050", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000EDB")]
			[Address(RVA = "0xCB9214", Offset = "0xCB9214", VA = "0xCB9214", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200028C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x79731C", Offset = "0x79731C")]
		private sealed class <WordAnimationRoutine>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40010BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40010C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40010C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MText_LoopAnimation <>4__this;

			[Token(Token = "0x40010C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x17000229")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000EE0")]
				[Address(RVA = "0xCB9560", Offset = "0xCB9560", VA = "0xCB9560", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700022A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000EE2")]
				[Address(RVA = "0xCB95A8", Offset = "0xCB95A8", VA = "0xCB95A8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000EDD")]
			[Address(RVA = "0xCB925C", Offset = "0xCB925C", VA = "0xCB925C")]
			[DebuggerHidden]
			public <WordAnimationRoutine>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6000EDE")]
			[Address(RVA = "0xCB9288", Offset = "0xCB9288", VA = "0xCB9288", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000EDF")]
			[Address(RVA = "0xCB928C", Offset = "0xCB928C", VA = "0xCB928C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000EE1")]
			[Address(RVA = "0xCB9568", Offset = "0xCB9568", VA = "0xCB9568", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40010B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Vector2 duration;

		[Token(Token = "0x40010B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TargetType targetType;

		[Token(Token = "0x40010B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x79FB78", Offset = "0x79FB78")]
		[SerializeField]
		private Material focusedMaterial;

		[Token(Token = "0x40010B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public List<GameObject> targetLetterList;

		[Token(Token = "0x40010B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<List<GameObject>> targetWordsList;

		[Token(Token = "0x17000226")]
		private Modular3DText Modular3DText
		{
			[Token(Token = "0x6000ECF")]
			[Address(RVA = "0x118D690", Offset = "0x118D690", VA = "0x118D690")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000ED0")]
		[Address(RVA = "0x118D6DC", Offset = "0x118D6DC", VA = "0x118D6DC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000ED1")]
		[Address(RVA = "0x118D724", Offset = "0x118D724", VA = "0x118D724")]
		public void UpdateTargetList()
		{
		}

		[Token(Token = "0x6000ED2")]
		[Address(RVA = "0x118DA0C", Offset = "0x118DA0C", VA = "0x118DA0C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7A9ED0", Offset = "0x7A9ED0")]
		private IEnumerator LetterAnimationRoutine()
		{
			return null;
		}

		[Token(Token = "0x6000ED3")]
		[Address(RVA = "0x118DA84", Offset = "0x118DA84", VA = "0x118DA84")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7A9F30", Offset = "0x7A9F30")]
		private IEnumerator WordAnimationRoutine()
		{
			return null;
		}

		[Token(Token = "0x6000ED4")]
		[Address(RVA = "0x118DAFC", Offset = "0x118DAFC", VA = "0x118DAFC")]
		private void Focus(GameObject target)
		{
		}

		[Token(Token = "0x6000ED5")]
		[Address(RVA = "0x118DC2C", Offset = "0x118DC2C", VA = "0x118DC2C")]
		private void UnFocus(GameObject target)
		{
		}

		[Token(Token = "0x6000ED6")]
		[Address(RVA = "0x118DD38", Offset = "0x118DD38", VA = "0x118DD38")]
		public MText_LoopAnimation()
		{
		}
	}
	[Token(Token = "0x200028D")]
	public class MText_MenuItem : MonoBehaviour
	{
		[Token(Token = "0x6000EE3")]
		[Address(RVA = "0x118DE14", Offset = "0x118DE14", VA = "0x118DE14")]
		public MText_MenuItem()
		{
		}
	}
	[Token(Token = "0x200028E")]
	public abstract class MText_Module : ScriptableObject
	{
		[Token(Token = "0x6000EE4")]
		public abstract IEnumerator ModuleRoutine(GameObject obj, float duration);

		[Token(Token = "0x6000EE5")]
		[Address(RVA = "0x118DE1C", Offset = "0x118DE1C", VA = "0x118DE1C")]
		protected MText_Module()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200028F")]
	public class MText_ModuleContainer
	{
		[Token(Token = "0x40010C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MText_Module module;

		[Token(Token = "0x40010C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float duration;

		[Token(Token = "0x6000EE6")]
		[Address(RVA = "0x118DE24", Offset = "0x118DE24", VA = "0x118DE24")]
		public MText_ModuleContainer()
		{
		}
	}
	[Token(Token = "0x2000290")]
	[DisallowMultipleComponent]
	public class MText_Pool : MonoBehaviour
	{
		[Token(Token = "0x40010C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static MText_Pool Instance;

		[Token(Token = "0x40010C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Dictionary<string, Queue<GameObject>> poolDictionary;

		[Token(Token = "0x6000EE7")]
		[Address(RVA = "0x118D224", Offset = "0x118D224", VA = "0x118D224")]
		public GameObject GetPoolItem(MText_Font font, char c)
		{
			return null;
		}

		[Token(Token = "0x6000EE8")]
		[Address(RVA = "0x118E230", Offset = "0x118E230", VA = "0x118E230")]
		public void ReturnPoolItem(GameObject poolItem)
		{
		}

		[Token(Token = "0x6000EE9")]
		[Address(RVA = "0x118E42C", Offset = "0x118E42C", VA = "0x118E42C")]
		public MText_Pool()
		{
		}
	}
	[Token(Token = "0x2000291")]
	[DisallowMultipleComponent]
	public class MText_PoolItem : MonoBehaviour
	{
		[Token(Token = "0x40010C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string key;

		[Token(Token = "0x6000EEA")]
		[Address(RVA = "0x118E4B0", Offset = "0x118E4B0", VA = "0x118E4B0")]
		public MText_PoolItem()
		{
		}
	}
	[Token(Token = "0x2000292")]
	[ExecuteAlways]
	[DisallowMultipleComponent]
	public class MText_TextUpdater : MonoBehaviour
	{
		[Token(Token = "0x40010C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inPrefabStageOpened;

		[Token(Token = "0x1700022B")]
		private Modular3DText Text
		{
			[Token(Token = "0x6000EEB")]
			[Address(RVA = "0x118F858", Offset = "0x118F858", VA = "0x118F858")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EEC")]
		[Address(RVA = "0x118F8B4", Offset = "0x118F8B4", VA = "0x118F8B4")]
		[ExecuteAlways]
		private void Awake()
		{
		}

		[Token(Token = "0x6000EED")]
		[Address(RVA = "0x118F968", Offset = "0x118F968", VA = "0x118F968")]
		private bool EmptyText(Modular3DText text)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EEE")]
		[Address(RVA = "0x118FB2C", Offset = "0x118FB2C", VA = "0x118FB2C")]
		public MText_TextUpdater()
		{
		}
	}
	[Token(Token = "0x2000293")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x797384", Offset = "0x797384")]
	[DisallowMultipleComponent]
	public class MText_UI_Button : MonoBehaviour
	{
		[Token(Token = "0x40010C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MText_Settings settings;

		[Token(Token = "0x40010CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent onClickEvents;

		[Token(Token = "0x40010CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent whileBeingClickedEvents;

		[Token(Token = "0x40010CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent onSelectEvents;

		[Token(Token = "0x40010CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEvent onUnselectEvents;

		[Token(Token = "0x40010CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool interactable;

		[Token(Token = "0x40010CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79FBC0", Offset = "0x79FBC0")]
		public bool interactableByMouse;

		[Token(Token = "0x40010D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Modular3DText text;

		[Token(Token = "0x40010D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Renderer background;

		[Token(Token = "0x40010D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool useModules;

		[Token(Token = "0x40010D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		public bool useStyles;

		[Token(Token = "0x40010D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Vector3 normalFontSize;

		[Token(Token = "0x40010D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Material normalFontMaterial;

		[Token(Token = "0x40010D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Material normalBackgroundMaterial;

		[Token(Token = "0x40010D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool applyUnSelectModuleContainers;

		[Token(Token = "0x40010D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public List<MText_ModuleContainer> unSelectModuleContainers;

		[Token(Token = "0x40010D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool applySelectedVisual;

		[Token(Token = "0x40010DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public Vector3 selectedFontSize;

		[Token(Token = "0x40010DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Material selectedFontMaterial;

		[Token(Token = "0x40010DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Material selectedBackgroundMaterial;

		[Token(Token = "0x40010DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public bool applyOnSelectModuleContainers;

		[Token(Token = "0x40010DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public List<MText_ModuleContainer> onSelectModuleContainers;

		[Token(Token = "0x40010DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public bool applyPressedVisual;

		[Token(Token = "0x40010E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public Vector3 pressedFontSize;

		[Token(Token = "0x40010E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Material pressedFontMaterial;

		[Token(Token = "0x40010E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Material pressedBackgroundMaterial;

		[Token(Token = "0x40010E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public bool pressedItemReturnToSelectedVisuaAfterDelay;

		[Token(Token = "0x40010E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public float pressedItemReturnToSelectedVisualTime;

		[Token(Token = "0x40010E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float returnToselectedTime;

		[Token(Token = "0x40010E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public bool applyOnPressModuleContainers;

		[Token(Token = "0x40010E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public List<MText_ModuleContainer> onPressModuleContainers;

		[Token(Token = "0x40010E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public bool applyOnClickModuleContainers;

		[Token(Token = "0x40010E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public List<MText_ModuleContainer> onClickModuleContainers;

		[Token(Token = "0x40010EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public Vector3 disabledFontSize;

		[Token(Token = "0x40010EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public Material disabledFontMaterial;

		[Token(Token = "0x40010EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public Material disabledBackgroundMaterial;

		[Token(Token = "0x40010ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public bool selectedVisual;

		[Token(Token = "0x6000EEF")]
		[Address(RVA = "0x118FB34", Offset = "0x118FB34", VA = "0x118FB34")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000EF0")]
		[Address(RVA = "0x118FB40", Offset = "0x118FB40", VA = "0x118FB40")]
		private void Update()
		{
		}

		[Token(Token = "0x6000EF1")]
		[Address(RVA = "0x118FB44", Offset = "0x118FB44", VA = "0x118FB44")]
		private void Animation()
		{
		}

		[Token(Token = "0x6000EF2")]
		[Address(RVA = "0x118FC9C", Offset = "0x118FC9C", VA = "0x118FC9C")]
		public void SelectButton()
		{
		}

		[Token(Token = "0x6000EF3")]
		[Address(RVA = "0x118FBA8", Offset = "0x118FBA8", VA = "0x118FBA8")]
		public void SelectedButtonVisualUpdate()
		{
		}

		[Token(Token = "0x6000EF4")]
		[Address(RVA = "0x11904D8", Offset = "0x11904D8", VA = "0x11904D8")]
		public void SelectedButtonModuleUpdate()
		{
		}

		[Token(Token = "0x6000EF5")]
		[Address(RVA = "0x1190A0C", Offset = "0x1190A0C", VA = "0x1190A0C")]
		public void UnselectButton()
		{
		}

		[Token(Token = "0x6000EF6")]
		[Address(RVA = "0x118FC1C", Offset = "0x118FC1C", VA = "0x118FC1C")]
		public void UnselectedButtonVisualUpdate()
		{
		}

		[Token(Token = "0x6000EF7")]
		[Address(RVA = "0x1190A44", Offset = "0x1190A44", VA = "0x1190A44")]
		public void UnselectButtonModuleUpdate()
		{
		}

		[Token(Token = "0x6000EF8")]
		[Address(RVA = "0x1190CBC", Offset = "0x1190CBC", VA = "0x1190CBC")]
		public void PressButton()
		{
		}

		[Token(Token = "0x6000EF9")]
		[Address(RVA = "0x1190FA8", Offset = "0x1190FA8", VA = "0x1190FA8")]
		public void PressButtonDontCallList()
		{
		}

		[Token(Token = "0x6000EFA")]
		[Address(RVA = "0x1190EB4", Offset = "0x1190EB4", VA = "0x1190EB4")]
		public void PressButtonVisualUpdate()
		{
		}

		[Token(Token = "0x6000EFB")]
		[Address(RVA = "0x11910E8", Offset = "0x11910E8", VA = "0x11910E8")]
		public void PressButtonClick()
		{
		}

		[Token(Token = "0x6000EFC")]
		[Address(RVA = "0x1191154", Offset = "0x1191154", VA = "0x1191154")]
		public void ButtonBeingPressed()
		{
		}

		[Token(Token = "0x6000EFD")]
		[Address(RVA = "0x11911E4", Offset = "0x11911E4", VA = "0x11911E4")]
		public void PressedButtonClickStopped()
		{
		}

		[Token(Token = "0x6000EFE")]
		[Address(RVA = "0x1190F4C", Offset = "0x1190F4C", VA = "0x1190F4C")]
		public void OnClickButtonModuleUpdate()
		{
		}

		[Token(Token = "0x6000EFF")]
		[Address(RVA = "0x1191188", Offset = "0x1191188", VA = "0x1191188")]
		public void OnPressButtonModuleUpdate()
		{
		}

		[Token(Token = "0x6000F00")]
		[Address(RVA = "0x11914C8", Offset = "0x11914C8", VA = "0x11914C8")]
		public void DisabledButtonVisualUpdate()
		{
		}

		[Token(Token = "0x6000F01")]
		[Address(RVA = "0x119063C", Offset = "0x119063C", VA = "0x119063C")]
		private void ApplyeStyle(Vector3 fontSize, Material fontMat, Material backgroundMat)
		{
		}

		[Token(Token = "0x6000F02")]
		[Address(RVA = "0x1191610", Offset = "0x1191610", VA = "0x1191610")]
		public void Uninteractable()
		{
		}

		[Token(Token = "0x6000F03")]
		[Address(RVA = "0x1191618", Offset = "0x1191618", VA = "0x1191618")]
		public void Interactable()
		{
		}

		[Token(Token = "0x6000F04")]
		[Address(RVA = "0x1190AA0", Offset = "0x1190AA0", VA = "0x1190AA0")]
		public (bool, bool) ApplyNormalStyle()
		{
			return default((bool, bool));
		}

		[Token(Token = "0x6000F05")]
		[Address(RVA = "0x1190534", Offset = "0x1190534", VA = "0x1190534")]
		public (bool, bool, MText_UI_List) ApplyOnSelectStyle()
		{
			return default((bool, bool, MText_UI_List));
		}

		[Token(Token = "0x6000F06")]
		[Address(RVA = "0x1190FE0", Offset = "0x1190FE0", VA = "0x1190FE0")]
		public (bool, bool, MText_UI_List) ApplyPressedStyle()
		{
			return default((bool, bool, MText_UI_List));
		}

		[Token(Token = "0x6000F07")]
		[Address(RVA = "0x1191524", Offset = "0x1191524", VA = "0x1191524")]
		public (bool, MText_UI_List) ApplyDisabledStyle()
		{
			return default((bool, MText_UI_List));
		}

		[Token(Token = "0x6000F08")]
		[Address(RVA = "0x11908A4", Offset = "0x11908A4", VA = "0x11908A4")]
		private void CallModules(List<MText_ModuleContainer> moduleContainers)
		{
		}

		[Token(Token = "0x6000F09")]
		[Address(RVA = "0x1190B94", Offset = "0x1190B94", VA = "0x1190B94")]
		public (bool, bool, MText_UI_List) ApplyUnSelectModule()
		{
			return default((bool, bool, MText_UI_List));
		}

		[Token(Token = "0x6000F0A")]
		[Address(RVA = "0x11913A0", Offset = "0x11913A0", VA = "0x11913A0")]
		public (bool, bool, MText_UI_List) ApplyOnPresstModule()
		{
			return default((bool, bool, MText_UI_List));
		}

		[Token(Token = "0x6000F0B")]
		[Address(RVA = "0x1191278", Offset = "0x1191278", VA = "0x1191278")]
		public (bool, bool, MText_UI_List) ApplyOnClickModule()
		{
			return default((bool, bool, MText_UI_List));
		}

		[Token(Token = "0x6000F0C")]
		[Address(RVA = "0x119077C", Offset = "0x119077C", VA = "0x119077C")]
		public (bool, bool, MText_UI_List) ApplyOnSelectModule()
		{
			return default((bool, bool, MText_UI_List));
		}

		[Token(Token = "0x6000F0D")]
		[Address(RVA = "0x1191624", Offset = "0x1191624", VA = "0x1191624")]
		public void EmptyEffect(List<MText_ModuleContainer> moduleList)
		{
		}

		[Token(Token = "0x6000F0E")]
		[Address(RVA = "0x11916B0", Offset = "0x11916B0", VA = "0x11916B0")]
		public void LoadDefaultSettings()
		{
		}

		[Token(Token = "0x6000F0F")]
		[Address(RVA = "0x1191744", Offset = "0x1191744", VA = "0x1191744")]
		public MText_UI_Button()
		{
		}
	}
	[Token(Token = "0x2000294")]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7973D0", Offset = "0x7973D0")]
	public class MText_UI_HorizontalSelector : MonoBehaviour
	{
		[Token(Token = "0x40010EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79FBF8", Offset = "0x79FBF8")]
		public Modular3DText text;

		[Token(Token = "0x40010EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79FC30", Offset = "0x79FC30")]
		public bool selected;

		[Token(Token = "0x40010F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79FC68", Offset = "0x79FC68")]
		public bool interactable;

		[Token(Token = "0x40010F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79FCA0", Offset = "0x79FCA0")]
		public List<string> options;

		[Token(Token = "0x40010F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int value;

		[Token(Token = "0x40010F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool keyboardControl;

		[Token(Token = "0x40010F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public KeyCode increaseKey;

		[Token(Token = "0x40010F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public KeyCode decreaseKey;

		[Token(Token = "0x40010F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AudioClip valueChangeSoundEffect;

		[Token(Token = "0x40010F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioSource audioSource;

		[Token(Token = "0x40010F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public UnityEvent onSelectEvent;

		[Token(Token = "0x40010F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UnityEvent onValueChangedEvent;

		[Token(Token = "0x40010FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public UnityEvent onValueIncreasedEvent;

		[Token(Token = "0x40010FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public UnityEvent onValueDecreasedEvent;

		[Token(Token = "0x1700022C")]
		public int Value
		{
			[Token(Token = "0x6000F10")]
			[Address(RVA = "0x11918FC", Offset = "0x11918FC", VA = "0x11918FC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000F11")]
			[Address(RVA = "0x1191904", Offset = "0x1191904", VA = "0x1191904")]
			set
			{
			}
		}

		[Token(Token = "0x6000F12")]
		[Address(RVA = "0x1191AD8", Offset = "0x1191AD8", VA = "0x1191AD8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F13")]
		[Address(RVA = "0x1191B00", Offset = "0x1191B00", VA = "0x1191B00")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F14")]
		[Address(RVA = "0x1191C9C", Offset = "0x1191C9C", VA = "0x1191C9C")]
		public void Increase()
		{
		}

		[Token(Token = "0x6000F15")]
		[Address(RVA = "0x1191B7C", Offset = "0x1191B7C", VA = "0x1191B7C")]
		public void Decrease()
		{
		}

		[Token(Token = "0x6000F16")]
		[Address(RVA = "0x1191938", Offset = "0x1191938", VA = "0x1191938")]
		public void UpdateText()
		{
		}

		[Token(Token = "0x6000F17")]
		[Address(RVA = "0x1191DBC", Offset = "0x1191DBC", VA = "0x1191DBC")]
		public void Focus(bool Bool)
		{
		}

		[Token(Token = "0x6000F18")]
		[Address(RVA = "0x1191E2C", Offset = "0x1191E2C", VA = "0x1191E2C")]
		public MText_UI_HorizontalSelector()
		{
		}
	}
	[Token(Token = "0x2000295")]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x79741C", Offset = "0x79741C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x79741C", Offset = "0x79741C")]
	public class MText_UI_List : MonoBehaviour
	{
		[Token(Token = "0x2000296")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7974B0", Offset = "0x7974B0")]
		private sealed class <FocusRoutine>d__83 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400113C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400113D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400113E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MText_UI_List <>4__this;

			[Token(Token = "0x1700022D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F35")]
				[Address(RVA = "0xCBA798", Offset = "0xCBA798", VA = "0xCBA798", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700022E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F37")]
				[Address(RVA = "0xCBA7E0", Offset = "0xCBA7E0", VA = "0xCBA7E0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F32")]
			[Address(RVA = "0xCBA6F4", Offset = "0xCBA6F4", VA = "0xCBA6F4")]
			[DebuggerHidden]
			public <FocusRoutine>d__83(int <>1__state)
			{
			}

			[Token(Token = "0x6000F33")]
			[Address(RVA = "0xCBA720", Offset = "0xCBA720", VA = "0xCBA720", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F34")]
			[Address(RVA = "0xCBA724", Offset = "0xCBA724", VA = "0xCBA724", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F36")]
			[Address(RVA = "0xCBA7A0", Offset = "0xCBA7A0", VA = "0xCBA7A0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40010FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int alignmentChoice;

		[Token(Token = "0x40010FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79FCE8", Offset = "0x79FCE8")]
		private bool autoFocusOnStart;

		[Token(Token = "0x40010FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79FD34", Offset = "0x79FD34")]
		[SerializeField]
		private bool autoFocusFirstItem;

		[Token(Token = "0x40010FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float spacing;

		[Token(Token = "0x4001100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79FD80", Offset = "0x79FD80")]
		public bool lockRotation;

		[Token(Token = "0x4001101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int circularListStyle;

		[Token(Token = "0x4001102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float spread;

		[Token(Token = "0x4001103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float radius;

		[Token(Token = "0x4001104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool keyboardControl;

		[Token(Token = "0x4001105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private KeyCode scrollUp;

		[Token(Token = "0x4001106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private KeyCode scrollDown;

		[Token(Token = "0x4001107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private KeyCode pressItemKey;

		[Token(Token = "0x4001108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioSource audioSource;

		[Token(Token = "0x4001109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AudioClip keyScrollingSoundEffect;

		[Token(Token = "0x400110A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AudioClip itemSelectionSoundEffect;

		[Token(Token = "0x400110B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool controlChildVisuals;

		[Token(Token = "0x400110C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		public bool customNormalItemVisual;

		[Token(Token = "0x400110D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Vector3 normalItemFontSize;

		[Token(Token = "0x400110E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Material normalItemFontMaterial;

		[Token(Token = "0x400110F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Material normalItemBackgroundMaterial;

		[Token(Token = "0x4001110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool customSelectedItemVisual;

		[Token(Token = "0x4001111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public Vector3 selectedItemFontSize;

		[Token(Token = "0x4001112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Material selectedItemFontMaterial;

		[Token(Token = "0x4001113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Material selectedItemBackgroundMaterial;

		[Token(Token = "0x4001114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Vector3 selectedItemPositionChange;

		[Token(Token = "0x4001115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[SerializeField]
		private float selectedItemMoveTime;

		[Token(Token = "0x4001116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public bool customPressedItemVisual;

		[Token(Token = "0x4001117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public Vector3 pressedItemFontSize;

		[Token(Token = "0x4001118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Material pressedItemFontMaterial;

		[Token(Token = "0x4001119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Material pressedItemBackgroundMaterial;

		[Token(Token = "0x400111A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private Vector3 pressedItemPositionChange;

		[Token(Token = "0x400111B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private float pressedItemMoveTime;

		[Token(Token = "0x400111C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public bool pressedItemReturnToSelectedVisual;

		[Token(Token = "0x400111D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private float pressedItemReturnToSelectedTime;

		[Token(Token = "0x400111E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public bool customDisabledItemVisual;

		[Token(Token = "0x400111F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public Vector3 disabledItemFontSize;

		[Token(Token = "0x4001120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public Material disabledItemFontMaterial;

		[Token(Token = "0x4001121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public Material disabledItemBackgroundMaterial;

		[Token(Token = "0x4001122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public bool applyModules;

		[Token(Token = "0x4001123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x109")]
		public bool ignoreChildModules;

		[Token(Token = "0x4001124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10A")]
		public bool ignoreChildUnSelectModuleContainers;

		[Token(Token = "0x4001125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10B")]
		public bool applyUnSelectModuleContainers;

		[Token(Token = "0x4001126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public List<MText_ModuleContainer> unSelectModuleContainers;

		[Token(Token = "0x4001127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public bool ignoreChildOnSelectModuleContainers;

		[Token(Token = "0x4001128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x119")]
		public bool applyOnSelectModuleContainers;

		[Token(Token = "0x4001129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public List<MText_ModuleContainer> onSelectModuleContainers;

		[Token(Token = "0x400112A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public bool ignoreChildOnPressModuleContainers;

		[Token(Token = "0x400112B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x129")]
		public bool applyOnPressModuleContainers;

		[Token(Token = "0x400112C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public List<MText_ModuleContainer> onPressModuleContainers;

		[Token(Token = "0x400112D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public bool ignoreChildOnClickModuleContainers;

		[Token(Token = "0x400112E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x139")]
		public bool applyOnClickModuleContainers;

		[Token(Token = "0x400112F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public List<MText_ModuleContainer> onClickModuleContainers;

		[Token(Token = "0x4001130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public int selectedItem;

		[Token(Token = "0x4001131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		private Quaternion expectedRotation;

		[Token(Token = "0x4001132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		private Quaternion originalRotation;

		[Token(Token = "0x4001133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		public float speed;

		[Token(Token = "0x4001134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private Vector3 originalPosition;

		[Token(Token = "0x4001135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		private Vector3 selectedPosition;

		[Token(Token = "0x4001136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private float startTime;

		[Token(Token = "0x4001137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		private bool selected;

		[Token(Token = "0x4001138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18D")]
		private bool pressed;

		[Token(Token = "0x4001139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private float returnToSelectedTime;

		[Token(Token = "0x400113A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		private int counterToCheckIfAllItemsAreDisabledToAvoidInfiniteLoop;

		[Token(Token = "0x400113B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private int previousSelection;

		[Token(Token = "0x6000F19")]
		[Address(RVA = "0x1192008", Offset = "0x1192008", VA = "0x1192008")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F1A")]
		[Address(RVA = "0x1192290", Offset = "0x1192290", VA = "0x1192290")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F1B")]
		[Address(RVA = "0x11922D4", Offset = "0x11922D4", VA = "0x11922D4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F1C")]
		[Address(RVA = "0x1192724", Offset = "0x1192724", VA = "0x1192724")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x7AA040", Offset = "0x7AA040")]
		public void UpdateList()
		{
		}

		[Token(Token = "0x6000F1D")]
		[Address(RVA = "0x1192C94", Offset = "0x1192C94", VA = "0x1192C94")]
		public void Focus(bool enable)
		{
		}

		[Token(Token = "0x6000F1E")]
		[Address(RVA = "0x1192DA0", Offset = "0x1192DA0", VA = "0x1192DA0")]
		public void Focus(bool enable, bool delay)
		{
		}

		[Token(Token = "0x6000F1F")]
		[Address(RVA = "0x1192E28", Offset = "0x1192E28", VA = "0x1192E28")]
		public void FocusToggle()
		{
		}

		[Token(Token = "0x6000F20")]
		[Address(RVA = "0x11902CC", Offset = "0x11902CC", VA = "0x11902CC")]
		public void SelectItem(int number)
		{
		}

		[Token(Token = "0x6000F21")]
		[Address(RVA = "0x1192E80", Offset = "0x1192E80", VA = "0x1192E80")]
		public void AlertSelectedItem(int number)
		{
		}

		[Token(Token = "0x6000F22")]
		[Address(RVA = "0x118FEA0", Offset = "0x118FEA0", VA = "0x118FEA0")]
		public void UnselectItem(int i)
		{
		}

		[Token(Token = "0x6000F23")]
		[Address(RVA = "0x119220C", Offset = "0x119220C", VA = "0x119220C")]
		public void UnselectEverything()
		{
		}

		[Token(Token = "0x6000F24")]
		[Address(RVA = "0x1193014", Offset = "0x1193014", VA = "0x1193014")]
		public void UnselectEverythingExceptSelected()
		{
		}

		[Token(Token = "0x6000F25")]
		[Address(RVA = "0x1190D88", Offset = "0x1190D88", VA = "0x1190D88")]
		public void PresstItem(int i)
		{
		}

		[Token(Token = "0x6000F26")]
		[Address(RVA = "0x1192074", Offset = "0x1192074", VA = "0x1192074")]
		private void SetRequiredFields()
		{
		}

		[Token(Token = "0x6000F27")]
		[Address(RVA = "0x11923E0", Offset = "0x11923E0", VA = "0x11923E0")]
		private void Animation()
		{
		}

		[Token(Token = "0x6000F28")]
		[Address(RVA = "0x1192334", Offset = "0x1192334", VA = "0x1192334")]
		private void PressItemCheckInUpdate()
		{
		}

		[Token(Token = "0x6000F29")]
		[Address(RVA = "0x119237C", Offset = "0x119237C", VA = "0x119237C")]
		private void ScrollList()
		{
		}

		[Token(Token = "0x6000F2A")]
		[Address(RVA = "0x1193100", Offset = "0x1193100", VA = "0x1193100")]
		private bool Scrolled()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F2B")]
		[Address(RVA = "0x11929A0", Offset = "0x11929A0", VA = "0x11929A0")]
		private void CircularListStyle()
		{
		}

		[Token(Token = "0x6000F2C")]
		[Address(RVA = "0x1192D28", Offset = "0x1192D28", VA = "0x1192D28")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7AA078", Offset = "0x7AA078")]
		private IEnumerator FocusRoutine()
		{
			return null;
		}

		[Token(Token = "0x6000F2D")]
		[Address(RVA = "0x1193324", Offset = "0x1193324", VA = "0x1193324")]
		private bool IsItemSelectable(int i)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F2E")]
		[Address(RVA = "0x1193080", Offset = "0x1193080", VA = "0x1193080")]
		private void AlertPressedUIItem()
		{
		}

		[Token(Token = "0x6000F2F")]
		[Address(RVA = "0x1192148", Offset = "0x1192148", VA = "0x1192148")]
		private void SelectTheFirstSelectableItem()
		{
		}

		[Token(Token = "0x6000F30")]
		[Address(RVA = "0x1193574", Offset = "0x1193574", VA = "0x1193574")]
		public void CreateEmptyEffect(List<MText_ModuleContainer> moduleList)
		{
		}

		[Token(Token = "0x6000F31")]
		[Address(RVA = "0x1193600", Offset = "0x1193600", VA = "0x1193600")]
		public MText_UI_List()
		{
		}
	}
	[Token(Token = "0x2000297")]
	[ExecuteInEditMode]
	[DisallowMultipleComponent]
	public class MText_UI_ListEditorHelper : MonoBehaviour
	{
		[Token(Token = "0x6000F38")]
		[Address(RVA = "0x1193828", Offset = "0x1193828", VA = "0x1193828")]
		public MText_UI_ListEditorHelper()
		{
		}
	}
	[Token(Token = "0x2000298")]
	[DisallowMultipleComponent]
	public class MText_UI_RaycastSelector : MonoBehaviour
	{
		[Token(Token = "0x400113F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79FE38", Offset = "0x79FE38")]
		public Camera myCamera;

		[Token(Token = "0x4001140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LayerMask UILayer;

		[Token(Token = "0x4001141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float maxDistance;

		[Token(Token = "0x4001142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79FE90", Offset = "0x79FE90")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x79FE90", Offset = "0x79FE90")]
		public bool onlyOneTargetFocusedAtOnce;

		[Token(Token = "0x4001143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79FEDC", Offset = "0x79FEDC")]
		public bool unselectBtnOnUnhover;

		[Token(Token = "0x4001144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform currentTarget;

		[Token(Token = "0x4001145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform clickedTarget;

		[Token(Token = "0x4001146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool dragging;

		[Token(Token = "0x6000F39")]
		[Address(RVA = "0x1193830", Offset = "0x1193830", VA = "0x1193830")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F3A")]
		[Address(RVA = "0x11938C0", Offset = "0x11938C0", VA = "0x11938C0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F3B")]
		[Address(RVA = "0x1193B78", Offset = "0x1193B78", VA = "0x1193B78")]
		private Transform RaycastCheck()
		{
			return null;
		}

		[Token(Token = "0x6000F3C")]
		[Address(RVA = "0x1193CF4", Offset = "0x1193CF4", VA = "0x1193CF4")]
		private void PressTarget(Transform hit)
		{
		}

		[Token(Token = "0x6000F3D")]
		[Address(RVA = "0x1193EB8", Offset = "0x1193EB8", VA = "0x1193EB8")]
		private void PressInputString(Transform hit)
		{
		}

		[Token(Token = "0x6000F3E")]
		[Address(RVA = "0x1193FEC", Offset = "0x1193FEC", VA = "0x1193FEC")]
		private void PressSlider(Transform hit)
		{
		}

		[Token(Token = "0x6000F3F")]
		[Address(RVA = "0x1193F64", Offset = "0x1193F64", VA = "0x1193F64")]
		private void PressButton(Transform hit)
		{
		}

		[Token(Token = "0x6000F40")]
		[Address(RVA = "0x1193D48", Offset = "0x1193D48", VA = "0x1193D48")]
		private void UnFocusPreviouslySelectedItems(Transform hit)
		{
		}

		[Token(Token = "0x6000F41")]
		[Address(RVA = "0x1193CD0", Offset = "0x1193CD0", VA = "0x1193CD0")]
		private void SelectNewTarget(Transform hit)
		{
		}

		[Token(Token = "0x6000F42")]
		[Address(RVA = "0x1194320", Offset = "0x1194320", VA = "0x1194320")]
		private void SelectSlider(Transform hit)
		{
		}

		[Token(Token = "0x6000F43")]
		[Address(RVA = "0x1194298", Offset = "0x1194298", VA = "0x1194298")]
		private void SelectButton(Transform hit)
		{
		}

		[Token(Token = "0x6000F44")]
		[Address(RVA = "0x1193C38", Offset = "0x1193C38", VA = "0x1193C38")]
		private void UnSelectOldTarget(Transform hit)
		{
		}

		[Token(Token = "0x6000F45")]
		[Address(RVA = "0x11944F8", Offset = "0x11944F8", VA = "0x11944F8")]
		private void UnselectSlider(Transform hit)
		{
		}

		[Token(Token = "0x6000F46")]
		[Address(RVA = "0x11943EC", Offset = "0x11943EC", VA = "0x11943EC")]
		private void UnselectButton(Transform hit)
		{
		}

		[Token(Token = "0x6000F47")]
		[Address(RVA = "0x1193A74", Offset = "0x1193A74", VA = "0x1193A74")]
		private void Dragging(Transform hit)
		{
		}

		[Token(Token = "0x6000F48")]
		[Address(RVA = "0x11945C4", Offset = "0x11945C4", VA = "0x11945C4")]
		private void DragSlider(Transform hit)
		{
		}

		[Token(Token = "0x6000F49")]
		[Address(RVA = "0x119473C", Offset = "0x119473C", VA = "0x119473C")]
		private void DragButton(Transform hit)
		{
		}

		[Token(Token = "0x6000F4A")]
		[Address(RVA = "0x1193A98", Offset = "0x1193A98", VA = "0x1193A98")]
		private void DetectDragEnd()
		{
		}

		[Token(Token = "0x6000F4B")]
		[Address(RVA = "0x1194890", Offset = "0x1194890", VA = "0x1194890")]
		private void DragEnded(Transform hit, Transform currentTarget)
		{
		}

		[Token(Token = "0x6000F4C")]
		[Address(RVA = "0x11948BC", Offset = "0x11948BC", VA = "0x11948BC")]
		private void DragEndOnSlider(Transform hit)
		{
		}

		[Token(Token = "0x6000F4D")]
		[Address(RVA = "0x1194948", Offset = "0x1194948", VA = "0x1194948")]
		private void DragEndOnButton(Transform hit, Transform currentTarget)
		{
		}

		[Token(Token = "0x6000F4E")]
		[Address(RVA = "0x1194208", Offset = "0x1194208", VA = "0x1194208")]
		private bool InteractWithButton(MText_UI_Button button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F4F")]
		[Address(RVA = "0x119410C", Offset = "0x119410C", VA = "0x119410C")]
		private bool InteractWithSlider(MText_UI_SliderHandle sliderHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F50")]
		[Address(RVA = "0x119408C", Offset = "0x119408C", VA = "0x119408C")]
		private bool InteractWithInputString(Mtext_UI_InputField inputString)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F51")]
		[Address(RVA = "0x1194A54", Offset = "0x1194A54", VA = "0x1194A54")]
		public MText_UI_RaycastSelector()
		{
		}
	}
	[Token(Token = "0x2000299")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x797508", Offset = "0x797508")]
	[DisallowMultipleComponent]
	public class MText_UI_Slider : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200029A")]
		public class ValueRange
		{
			[Token(Token = "0x4001162")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float min;

			[Token(Token = "0x4001163")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float max;

			[Token(Token = "0x4001164")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject icon;

			[Token(Token = "0x4001165")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool triggeredAlready;

			[Token(Token = "0x4001166")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UnityEvent oneTimeEvents;

			[Token(Token = "0x4001167")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public UnityEvent repeatEvents;

			[Token(Token = "0x6000F78")]
			[Address(RVA = "0xCBA7E8", Offset = "0xCBA7E8", VA = "0xCBA7E8")]
			public ValueRange()
			{
			}
		}

		[Token(Token = "0x4001147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool autoFocusOnGameStart;

		[Token(Token = "0x4001148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool interactable;

		[Token(Token = "0x4001149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float minValue;

		[Token(Token = "0x400114A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float maxValue;

		[Token(Token = "0x400114B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float currentValue;

		[Token(Token = "0x400114C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MText_UI_SliderHandle handle;

		[Token(Token = "0x400114D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform progressBar;

		[Token(Token = "0x400114E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject progressBarPrefab;

		[Token(Token = "0x400114F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform background;

		[Token(Token = "0x4001150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float backgroundSize;

		[Token(Token = "0x4001151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int directionChoice;

		[Token(Token = "0x4001152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool keyControl;

		[Token(Token = "0x4001153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79FF24", Offset = "0x79FF24")]
		public float keyStep;

		[Token(Token = "0x4001154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public KeyCode scrollUp;

		[Token(Token = "0x4001155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public KeyCode scrollDown;

		[Token(Token = "0x4001156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool useEvents;

		[Token(Token = "0x4001157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public UnityEvent onValueChanged;

		[Token(Token = "0x4001158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x79FF5C", Offset = "0x79FF5C")]
		public UnityEvent sliderDragEnded;

		[Token(Token = "0x4001159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Renderer handleGraphic;

		[Token(Token = "0x400115A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Material selectedHandleMat;

		[Token(Token = "0x400115B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Material unSelectedHandleMat;

		[Token(Token = "0x400115C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Material clickedHandleMat;

		[Token(Token = "0x400115D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Material disabledHandleMat;

		[Token(Token = "0x400115E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public bool useValueRangeEvents;

		[Token(Token = "0x400115F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		public bool usePercentage;

		[Token(Token = "0x4001160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public List<ValueRange> valueRangeEvents;

		[Token(Token = "0x4001161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[HideInInspector]
		[SerializeField]
		private int lastValue;

		[Token(Token = "0x1700022F")]
		public float Value
		{
			[Token(Token = "0x6000F52")]
			[Address(RVA = "0x1194A98", Offset = "0x1194A98", VA = "0x1194A98")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F53")]
			[Address(RVA = "0x1194AA0", Offset = "0x1194AA0", VA = "0x1194AA0")]
			set
			{
			}
		}

		[Token(Token = "0x6000F54")]
		[Address(RVA = "0x1194AD4", Offset = "0x1194AD4", VA = "0x1194AD4")]
		public float CurrentPercentage()
		{
			return default(float);
		}

		[Token(Token = "0x6000F55")]
		[Address(RVA = "0x1194AEC", Offset = "0x1194AEC", VA = "0x1194AEC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F56")]
		[Address(RVA = "0x1194BF4", Offset = "0x1194BF4", VA = "0x1194BF4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F57")]
		[Address(RVA = "0x1194AA8", Offset = "0x1194AA8", VA = "0x1194AA8")]
		public void UpdateValue()
		{
		}

		[Token(Token = "0x6000F58")]
		[Address(RVA = "0x1194D2C", Offset = "0x1194D2C", VA = "0x1194D2C")]
		public void UpdateValue(int newValue)
		{
		}

		[Token(Token = "0x6000F59")]
		[Address(RVA = "0x118E924", Offset = "0x118E924", VA = "0x118E924")]
		public void UpdateValue(float newValue)
		{
		}

		[Token(Token = "0x6000F5A")]
		[Address(RVA = "0x1194C68", Offset = "0x1194C68", VA = "0x1194C68")]
		public void IncreaseValue()
		{
		}

		[Token(Token = "0x6000F5B")]
		[Address(RVA = "0x1194D38", Offset = "0x1194D38", VA = "0x1194D38")]
		public void IncreaseValue(int amount)
		{
		}

		[Token(Token = "0x6000F5C")]
		[Address(RVA = "0x1194D8C", Offset = "0x1194D8C", VA = "0x1194D8C")]
		public void IncreaseValue(float amount)
		{
		}

		[Token(Token = "0x6000F5D")]
		[Address(RVA = "0x1194CB8", Offset = "0x1194CB8", VA = "0x1194CB8")]
		public void DecreaseValue()
		{
		}

		[Token(Token = "0x6000F5E")]
		[Address(RVA = "0x1194DDC", Offset = "0x1194DDC", VA = "0x1194DDC")]
		public void DecreaseValue(int amount)
		{
		}

		[Token(Token = "0x6000F5F")]
		[Address(RVA = "0x1194E30", Offset = "0x1194E30", VA = "0x1194E30")]
		public void DecreaseValue(float amount)
		{
		}

		[Token(Token = "0x6000F60")]
		[Address(RVA = "0x1192FCC", Offset = "0x1192FCC", VA = "0x1192FCC")]
		public void Focus(bool enable)
		{
		}

		[Token(Token = "0x6000F61")]
		[Address(RVA = "0x11943AC", Offset = "0x11943AC", VA = "0x11943AC")]
		public void SelectedVisual()
		{
		}

		[Token(Token = "0x6000F62")]
		[Address(RVA = "0x1194584", Offset = "0x1194584", VA = "0x1194584")]
		public void UnSelectedVisual()
		{
		}

		[Token(Token = "0x6000F63")]
		[Address(RVA = "0x11941C8", Offset = "0x11941C8", VA = "0x11941C8")]
		public void ClickedVisual()
		{
		}

		[Token(Token = "0x6000F64")]
		[Address(RVA = "0x1194BB4", Offset = "0x1194BB4", VA = "0x1194BB4")]
		public void DisabledVisual()
		{
		}

		[Token(Token = "0x6000F65")]
		[Address(RVA = "0x1194F6C", Offset = "0x1194F6C", VA = "0x1194F6C")]
		private void ApplyVisual(Material handleMaterial)
		{
		}

		[Token(Token = "0x6000F66")]
		[Address(RVA = "0x11952D0", Offset = "0x11952D0", VA = "0x11952D0")]
		public MText_UI_List GetParentList()
		{
			return null;
		}

		[Token(Token = "0x6000F67")]
		[Address(RVA = "0x119500C", Offset = "0x119500C", VA = "0x119500C")]
		public (bool, MText_UI_List) ApplyNormalStyleFromParent()
		{
			return default((bool, MText_UI_List));
		}

		[Token(Token = "0x6000F68")]
		[Address(RVA = "0x1194E80", Offset = "0x1194E80", VA = "0x1194E80")]
		public (bool, MText_UI_List) ApplySelectedStyleFromParent()
		{
			return default((bool, MText_UI_List));
		}

		[Token(Token = "0x6000F69")]
		[Address(RVA = "0x11950F8", Offset = "0x11950F8", VA = "0x11950F8")]
		public (bool, MText_UI_List) ApplyPressedStyleFromParent()
		{
			return default((bool, MText_UI_List));
		}

		[Token(Token = "0x6000F6A")]
		[Address(RVA = "0x11951E4", Offset = "0x11951E4", VA = "0x11951E4")]
		public (bool, MText_UI_List) ApplyDisabledStyleFromParent()
		{
			return default((bool, MText_UI_List));
		}

		[Token(Token = "0x6000F6B")]
		[Address(RVA = "0x1194840", Offset = "0x1194840", VA = "0x1194840")]
		public void ValueChanged()
		{
		}

		[Token(Token = "0x6000F6C")]
		[Address(RVA = "0x11952E8", Offset = "0x11952E8", VA = "0x11952E8")]
		private void ValueRangeEvents()
		{
		}

		[Token(Token = "0x6000F6D")]
		[Address(RVA = "0x11954DC", Offset = "0x11954DC", VA = "0x11954DC")]
		private void ProcessSelectedValueRange(int i, bool firstTime)
		{
		}

		[Token(Token = "0x6000F6E")]
		[Address(RVA = "0x1194A2C", Offset = "0x1194A2C", VA = "0x1194A2C")]
		public void ValueChangeEnded()
		{
		}

		[Token(Token = "0x6000F6F")]
		[Address(RVA = "0x119300C", Offset = "0x119300C", VA = "0x119300C")]
		public void Uninteractable()
		{
		}

		[Token(Token = "0x6000F70")]
		[Address(RVA = "0x1195680", Offset = "0x1195680", VA = "0x1195680")]
		public void Interactable()
		{
		}

		[Token(Token = "0x6000F71")]
		[Address(RVA = "0x119568C", Offset = "0x119568C", VA = "0x119568C")]
		public void NewValueRange()
		{
		}

		[Token(Token = "0x6000F72")]
		[Address(RVA = "0x11947C4", Offset = "0x11947C4", VA = "0x11947C4")]
		public void GetCurrentValueFromHandle()
		{
		}

		[Token(Token = "0x6000F73")]
		[Address(RVA = "0x1194D08", Offset = "0x1194D08", VA = "0x1194D08")]
		public void UpdateGraphic()
		{
		}

		[Token(Token = "0x6000F74")]
		[Address(RVA = "0x119580C", Offset = "0x119580C", VA = "0x119580C")]
		private void UpdateHandle()
		{
		}

		[Token(Token = "0x6000F75")]
		[Address(RVA = "0x1195728", Offset = "0x1195728", VA = "0x1195728")]
		private void UpdateProgressBar()
		{
		}

		[Token(Token = "0x6000F76")]
		[Address(RVA = "0x119570C", Offset = "0x119570C", VA = "0x119570C")]
		private float RangeConvertedValue(float oldValue, float oldMin, float oldMax, float newMin, float newMax)
		{
			return default(float);
		}

		[Token(Token = "0x6000F77")]
		[Address(RVA = "0x119594C", Offset = "0x119594C", VA = "0x119594C")]
		public MText_UI_Slider()
		{
		}
	}
	[Token(Token = "0x200029B")]
	[DisallowMultipleComponent]
	public class MText_UI_SliderHandle : MonoBehaviour
	{
		[Token(Token = "0x4001168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MText_UI_Slider slider;

		[Token(Token = "0x6000F79")]
		[Address(RVA = "0x1195A0C", Offset = "0x1195A0C", VA = "0x1195A0C")]
		public MText_UI_SliderHandle()
		{
		}
	}
	[Token(Token = "0x200029C")]
	[DisallowMultipleComponent]
	public class MText_UI_Toggle : MonoBehaviour
	{
		[Token(Token = "0x4001169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool _isOn;

		[Token(Token = "0x400116A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject activeGraphic;

		[Token(Token = "0x400116B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject inactiveGraphic;

		[Token(Token = "0x17000230")]
		public bool IsOn
		{
			[Token(Token = "0x6000F7A")]
			[Address(RVA = "0x1195A14", Offset = "0x1195A14", VA = "0x1195A14")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F7B")]
			[Address(RVA = "0x1195A1C", Offset = "0x1195A1C", VA = "0x1195A1C")]
			set
			{
			}
		}

		[Token(Token = "0x6000F7C")]
		[Address(RVA = "0x1195A74", Offset = "0x1195A74", VA = "0x1195A74")]
		public void Set(bool set)
		{
		}

		[Token(Token = "0x6000F7D")]
		[Address(RVA = "0x1195AA0", Offset = "0x1195AA0", VA = "0x1195AA0")]
		public void Toggle()
		{
		}

		[Token(Token = "0x6000F7E")]
		[Address(RVA = "0x1195A28", Offset = "0x1195A28", VA = "0x1195A28")]
		public void VisualUpdate()
		{
		}

		[Token(Token = "0x6000F7F")]
		[Address(RVA = "0x1195AD0", Offset = "0x1195AD0", VA = "0x1195AD0")]
		public void ActiveVisualUpdate()
		{
		}

		[Token(Token = "0x6000F80")]
		[Address(RVA = "0x1195B00", Offset = "0x1195B00", VA = "0x1195B00")]
		public void InactiveVisualUpdate()
		{
		}

		[Token(Token = "0x6000F81")]
		[Address(RVA = "0x1195B30", Offset = "0x1195B30", VA = "0x1195B30")]
		private void ToggleGraphic(GameObject graphic, bool enable)
		{
		}

		[Token(Token = "0x6000F82")]
		[Address(RVA = "0x1195BCC", Offset = "0x1195BCC", VA = "0x1195BCC")]
		public MText_UI_Toggle()
		{
		}
	}
	[Token(Token = "0x200029D")]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x797574", Offset = "0x797574")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x797574", Offset = "0x797574")]
	public class Modular3DText : MonoBehaviour
	{
		[Token(Token = "0x200029E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x797608", Offset = "0x797608")]
		private sealed class <UpdateRoutine>d__104 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400119F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40011A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40011A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Modular3DText <>4__this;

			[Token(Token = "0x17000243")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FD9")]
				[Address(RVA = "0xCBB598", Offset = "0xCBB598", VA = "0xCBB598", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000244")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FDB")]
				[Address(RVA = "0xCBB5E0", Offset = "0xCBB5E0", VA = "0xCBB5E0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FD6")]
			[Address(RVA = "0xCBB4AC", Offset = "0xCBB4AC", VA = "0xCBB4AC")]
			[DebuggerHidden]
			public <UpdateRoutine>d__104(int <>1__state)
			{
			}

			[Token(Token = "0x6000FD7")]
			[Address(RVA = "0xCBB4D8", Offset = "0xCBB4D8", VA = "0xCBB4D8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FD8")]
			[Address(RVA = "0xCBB4DC", Offset = "0xCBB4DC", VA = "0xCBB4DC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FDA")]
			[Address(RVA = "0xCBB5A0", Offset = "0xCBB5A0", VA = "0xCBB5A0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200029F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x797618", Offset = "0x797618")]
		private sealed class <RunTimeDestroyObjectRoutine>d__125 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40011A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40011A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40011A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject obj;

			[Token(Token = "0x40011A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Modular3DText <>4__this;

			[Token(Token = "0x17000245")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FDF")]
				[Address(RVA = "0xCBB45C", Offset = "0xCBB45C", VA = "0xCBB45C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000246")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FE1")]
				[Address(RVA = "0xCBB4A4", Offset = "0xCBB4A4", VA = "0xCBB4A4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FDC")]
			[Address(RVA = "0xCBB07C", Offset = "0xCBB07C", VA = "0xCBB07C")]
			[DebuggerHidden]
			public <RunTimeDestroyObjectRoutine>d__125(int <>1__state)
			{
			}

			[Token(Token = "0x6000FDD")]
			[Address(RVA = "0xCBB0A8", Offset = "0xCBB0A8", VA = "0xCBB0A8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FDE")]
			[Address(RVA = "0xCBB0AC", Offset = "0xCBB0AC", VA = "0xCBB0AC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FE0")]
			[Address(RVA = "0xCBB464", Offset = "0xCBB464", VA = "0xCBB464", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400116C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x79FFDC", Offset = "0x79FFDC")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x79FFDC", Offset = "0x79FFDC")]
		private string _text;

		[Token(Token = "0x400116D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<string> lineList;

		[Token(Token = "0x400116E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<string> oldLineList;

		[Token(Token = "0x400116F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<GameObject> characterObjectList;

		[Token(Token = "0x4001170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A0048", Offset = "0x7A0048")]
		public bool autoSaveMesh;

		[Token(Token = "0x4001171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x7A0080", Offset = "0x7A0080")]
		[SerializeField]
		private MText_Font _font;

		[Token(Token = "0x4001172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x7A00CC", Offset = "0x7A00CC")]
		[SerializeField]
		private Material _material;

		[Token(Token = "0x4001173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x7A0118", Offset = "0x7A0118")]
		[SerializeField]
		private Vector3 _fontSize;

		[Token(Token = "0x4001174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int textDirection;

		[Token(Token = "0x4001175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x7A0164", Offset = "0x7A0164")]
		private float _characterSpacing;

		[Token(Token = "0x4001176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x7A01B0", Offset = "0x7A01B0")]
		private float _lineSpacing;

		[Token(Token = "0x4001177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x7A01FC", Offset = "0x7A01FC")]
		[SerializeField]
		private bool _capitalize;

		[Token(Token = "0x4001178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x7A0248", Offset = "0x7A0248")]
		[SerializeField]
		private bool _lowercase;

		[Token(Token = "0x4001179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x7A0294", Offset = "0x7A0294")]
		[SerializeField]
		private int _layoutStyle;

		[Token(Token = "0x400117A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private TextAnchor _textAnchor;

		[Token(Token = "0x400117B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public bool alignCenter;

		[Token(Token = "0x400117C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
		public bool alignLeft;

		[Token(Token = "0x400117D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x76")]
		public bool alignRight;

		[Token(Token = "0x400117E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x77")]
		public bool alignTop;

		[Token(Token = "0x400117F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool alignMiddle;

		[Token(Token = "0x4001180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		public bool alignBottom;

		[Token(Token = "0x4001181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x7A02F0", Offset = "0x7A02F0")]
		private float _circularAlignmentRadius;

		[Token(Token = "0x4001182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x7A033C", Offset = "0x7A033C")]
		[SerializeField]
		private float _circularAlignmentSpreadAmount;

		[Token(Token = "0x4001183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x7A0388", Offset = "0x7A0388")]
		[SerializeField]
		private Vector3 _circularAlignmentAngle;

		[Token(Token = "0x4001184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x7A03D4", Offset = "0x7A03D4")]
		[SerializeField]
		private float _height;

		[Token(Token = "0x4001185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x7A0420", Offset = "0x7A0420")]
		[SerializeField]
		private float _width;

		[Token(Token = "0x4001186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float adjustedWidth;

		[Token(Token = "0x4001187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float depth;

		[Token(Token = "0x4001188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public List<MText_ModuleContainer> typingEffects;

		[Token(Token = "0x4001189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public List<MText_ModuleContainer> deletingEffects;

		[Token(Token = "0x400118A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public bool customDeleteAfterDuration;

		[Token(Token = "0x400118B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public float deleteAfter;

		[Token(Token = "0x400118C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A046C", Offset = "0x7A046C")]
		public bool repositionOldCharacters;

		[Token(Token = "0x400118D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
		public bool reApplyModulesToOldCharacters;

		[Token(Token = "0x400118E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBA")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A04A4", Offset = "0x7A04A4")]
		public bool pooling;

		[Token(Token = "0x400118F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public MText_Pool pool;

		[Token(Token = "0x4001190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public bool combineMeshInEditor;

		[Token(Token = "0x4001191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
		public bool dontCombineInEditorAnyway;

		[Token(Token = "0x4001192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCA")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A04DC", Offset = "0x7A04DC")]
		public bool combineMeshDuringRuntime;

		[Token(Token = "0x4001193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCB")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A0514", Offset = "0x7A0514")]
		public bool hideLettersInHierarchyInPlayMode;

		[Token(Token = "0x4001194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A054C", Offset = "0x7A054C")]
		public bool hideLettersInHierarchyInEditMode;

		[Token(Token = "0x4001195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A0584", Offset = "0x7A0584")]
		public bool canBreakOutermostPrefab;

		[Token(Token = "0x4001196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public string assetPath;

		[Token(Token = "0x4001197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private List<string> meshPaths;

		[Token(Token = "0x4001198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private int charInOneLine;

		[Token(Token = "0x4001199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float x;

		[Token(Token = "0x400119A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float y;

		[Token(Token = "0x400119B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float z;

		[Token(Token = "0x400119C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private bool createChilds;

		[Token(Token = "0x400119D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
		public bool updateTextOncePerFrame;

		[Token(Token = "0x400119E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF2")]
		private bool runningRoutine;

		[Token(Token = "0x17000231")]
		public string Text
		{
			[Token(Token = "0x6000F83")]
			[Address(RVA = "0x1F563C4", Offset = "0x1F563C4", VA = "0x1F563C4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F84")]
			[Address(RVA = "0x1F55A5C", Offset = "0x1F55A5C", VA = "0x1F55A5C")]
			set
			{
			}
		}

		[Token(Token = "0x17000232")]
		private string ProcessedText
		{
			[Token(Token = "0x6000F85")]
			[Address(RVA = "0x1F5644C", Offset = "0x1F5644C", VA = "0x1F5644C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000233")]
		public MText_Font Font
		{
			[Token(Token = "0x6000F86")]
			[Address(RVA = "0x1F5649C", Offset = "0x1F5649C", VA = "0x1F5649C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F87")]
			[Address(RVA = "0x1F564A4", Offset = "0x1F564A4", VA = "0x1F564A4")]
			set
			{
			}
		}

		[Token(Token = "0x17000234")]
		public Material Material
		{
			[Token(Token = "0x6000F88")]
			[Address(RVA = "0x1F56574", Offset = "0x1F56574", VA = "0x1F56574")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F89")]
			[Address(RVA = "0x1F5657C", Offset = "0x1F5657C", VA = "0x1F5657C")]
			set
			{
			}
		}

		[Token(Token = "0x17000235")]
		public Vector3 FontSize
		{
			[Token(Token = "0x6000F8A")]
			[Address(RVA = "0x1F56624", Offset = "0x1F56624", VA = "0x1F56624")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000F8B")]
			[Address(RVA = "0x1F56630", Offset = "0x1F56630", VA = "0x1F56630")]
			set
			{
			}
		}

		[Token(Token = "0x17000236")]
		public float CharacterSpacing
		{
			[Token(Token = "0x6000F8C")]
			[Address(RVA = "0x1F566AC", Offset = "0x1F566AC", VA = "0x1F566AC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F8D")]
			[Address(RVA = "0x1F566B4", Offset = "0x1F566B4", VA = "0x1F566B4")]
			set
			{
			}
		}

		[Token(Token = "0x17000237")]
		private float ModifiedCharacterSpacing
		{
			[Token(Token = "0x6000F8E")]
			[Address(RVA = "0x1F566CC", Offset = "0x1F566CC", VA = "0x1F566CC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000238")]
		public float LineSpacing
		{
			[Token(Token = "0x6000F8F")]
			[Address(RVA = "0x1F566E8", Offset = "0x1F566E8", VA = "0x1F566E8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F90")]
			[Address(RVA = "0x1F566F0", Offset = "0x1F566F0", VA = "0x1F566F0")]
			set
			{
			}
		}

		[Token(Token = "0x17000239")]
		private float ModifiedLineSpacing
		{
			[Token(Token = "0x6000F91")]
			[Address(RVA = "0x1F56708", Offset = "0x1F56708", VA = "0x1F56708")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700023A")]
		public bool Capitalize
		{
			[Token(Token = "0x6000F92")]
			[Address(RVA = "0x1F56724", Offset = "0x1F56724", VA = "0x1F56724")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F93")]
			[Address(RVA = "0x1F5672C", Offset = "0x1F5672C", VA = "0x1F5672C")]
			set
			{
			}
		}

		[Token(Token = "0x1700023B")]
		public bool LowerCase
		{
			[Token(Token = "0x6000F94")]
			[Address(RVA = "0x1F56750", Offset = "0x1F56750", VA = "0x1F56750")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F95")]
			[Address(RVA = "0x1F56758", Offset = "0x1F56758", VA = "0x1F56758")]
			set
			{
			}
		}

		[Token(Token = "0x1700023C")]
		public int LayoutStyle
		{
			[Token(Token = "0x6000F96")]
			[Address(RVA = "0x1F5677C", Offset = "0x1F5677C", VA = "0x1F5677C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000F97")]
			[Address(RVA = "0x1F56784", Offset = "0x1F56784", VA = "0x1F56784")]
			set
			{
			}
		}

		[Token(Token = "0x1700023D")]
		public TextAnchor TextAnchor
		{
			[Token(Token = "0x6000F98")]
			[Address(RVA = "0x1F5678C", Offset = "0x1F5678C", VA = "0x1F5678C")]
			get
			{
				return default(TextAnchor);
			}
			[Token(Token = "0x6000F99")]
			[Address(RVA = "0x1F56794", Offset = "0x1F56794", VA = "0x1F56794")]
			set
			{
			}
		}

		[Token(Token = "0x1700023E")]
		public float CircularAlignmentRadius
		{
			[Token(Token = "0x6000F9A")]
			[Address(RVA = "0x1F568C4", Offset = "0x1F568C4", VA = "0x1F568C4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F9B")]
			[Address(RVA = "0x1F568CC", Offset = "0x1F568CC", VA = "0x1F568CC")]
			set
			{
			}
		}

		[Token(Token = "0x1700023F")]
		public float CircularAlignmentSpreadAmount
		{
			[Token(Token = "0x6000F9C")]
			[Address(RVA = "0x1F568E4", Offset = "0x1F568E4", VA = "0x1F568E4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F9D")]
			[Address(RVA = "0x1F568EC", Offset = "0x1F568EC", VA = "0x1F568EC")]
			set
			{
			}
		}

		[Token(Token = "0x17000240")]
		public Vector3 CircularAlignmentAngle
		{
			[Token(Token = "0x6000F9E")]
			[Address(RVA = "0x1F56904", Offset = "0x1F56904", VA = "0x1F56904")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000F9F")]
			[Address(RVA = "0x1F56910", Offset = "0x1F56910", VA = "0x1F56910")]
			set
			{
			}
		}

		[Token(Token = "0x17000241")]
		public float Height
		{
			[Token(Token = "0x6000FA0")]
			[Address(RVA = "0x1F5698C", Offset = "0x1F5698C", VA = "0x1F5698C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000FA1")]
			[Address(RVA = "0x1F56994", Offset = "0x1F56994", VA = "0x1F56994")]
			set
			{
			}
		}

		[Token(Token = "0x17000242")]
		public float Width
		{
			[Token(Token = "0x6000FA2")]
			[Address(RVA = "0x1F569AC", Offset = "0x1F569AC", VA = "0x1F569AC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000FA3")]
			[Address(RVA = "0x1F569B4", Offset = "0x1F569B4", VA = "0x1F569B4")]
			set
			{
			}
		}

		[Token(Token = "0x6000FA4")]
		[Address(RVA = "0x1F569CC", Offset = "0x1F569CC", VA = "0x1F569CC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000FA5")]
		[Address(RVA = "0x1F563CC", Offset = "0x1F563CC", VA = "0x1F563CC")]
		private void SetTextDirty()
		{
		}

		[Token(Token = "0x6000FA6")]
		[Address(RVA = "0x1F569D4", Offset = "0x1F569D4", VA = "0x1F569D4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7AA128", Offset = "0x7AA128")]
		private IEnumerator UpdateRoutine()
		{
			return null;
		}

		[Token(Token = "0x6000FA7")]
		[Address(RVA = "0x1F56450", Offset = "0x1F56450", VA = "0x1F56450")]
		private string GetProcessedText()
		{
			return null;
		}

		[Token(Token = "0x6000FA8")]
		[Address(RVA = "0x1F56A50", Offset = "0x1F56A50", VA = "0x1F56A50")]
		public void UpdateText(string newText)
		{
		}

		[Token(Token = "0x6000FA9")]
		[Address(RVA = "0x1F56B80", Offset = "0x1F56B80", VA = "0x1F56B80")]
		public void UpdateText(float number)
		{
		}

		[Token(Token = "0x6000FAA")]
		[Address(RVA = "0x1F56CC0", Offset = "0x1F56CC0", VA = "0x1F56CC0")]
		public void UpdateText(int number)
		{
		}

		[Token(Token = "0x6000FAB")]
		[Address(RVA = "0x1F56A4C", Offset = "0x1F56A4C", VA = "0x1F56A4C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x7AA188", Offset = "0x7AA188")]
		public void UpdateText()
		{
		}

		[Token(Token = "0x6000FAC")]
		[Address(RVA = "0x1F56E00", Offset = "0x1F56E00", VA = "0x1F56E00")]
		private void UpdateTextBase()
		{
		}

		[Token(Token = "0x6000FAD")]
		[Address(RVA = "0x1F571AC", Offset = "0x1F571AC", VA = "0x1F571AC")]
		private void DestroyMeshRenderAndMeshFilter()
		{
		}

		[Token(Token = "0x6000FAE")]
		[Address(RVA = "0x1F570D4", Offset = "0x1F570D4", VA = "0x1F570D4")]
		public bool ShouldItCreateChild()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FAF")]
		[Address(RVA = "0x1F57674", Offset = "0x1F57674", VA = "0x1F57674")]
		private void CheckIfPoolExistsAndRequired()
		{
		}

		[Token(Token = "0x6000FB0")]
		[Address(RVA = "0x1F591F0", Offset = "0x1F591F0", VA = "0x1F591F0")]
		private void CreatePool()
		{
		}

		[Token(Token = "0x6000FB1")]
		[Address(RVA = "0x1F570E4", Offset = "0x1F570E4", VA = "0x1F570E4")]
		private void SplitStuff()
		{
		}

		[Token(Token = "0x6000FB2")]
		[Address(RVA = "0x1F592E8", Offset = "0x1F592E8", VA = "0x1F592E8")]
		private string[] RemoveSpacesFromWordArray(string[] wordArray)
		{
			return null;
		}

		[Token(Token = "0x6000FB3")]
		[Address(RVA = "0x1F59424", Offset = "0x1F59424", VA = "0x1F59424")]
		private void GetLineList(List<string> wordList)
		{
		}

		[Token(Token = "0x6000FB4")]
		[Address(RVA = "0x1F594D8", Offset = "0x1F594D8", VA = "0x1F594D8")]
		private void GetLinearLineList(List<string> wordList)
		{
		}

		[Token(Token = "0x6000FB5")]
		[Address(RVA = "0x1F59A34", Offset = "0x1F59A34", VA = "0x1F59A34")]
		private void GetCircularLineList(List<string> wordList)
		{
		}

		[Token(Token = "0x6000FB6")]
		[Address(RVA = "0x1F57068", Offset = "0x1F57068", VA = "0x1F57068")]
		private void FixInvalidInputs()
		{
		}

		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0x1F57260", Offset = "0x1F57260", VA = "0x1F57260")]
		private int CompareNewTextWithOld()
		{
			return default(int);
		}

		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0x1F573D0", Offset = "0x1F573D0", VA = "0x1F573D0")]
		private void DeleteReplacedChars(int startingFrom)
		{
		}

		[Token(Token = "0x6000FB9")]
		[Address(RVA = "0x1F5A1D8", Offset = "0x1F5A1D8", VA = "0x1F5A1D8")]
		private void DeleteAllChildObjects()
		{
		}

		[Token(Token = "0x6000FBA")]
		[Address(RVA = "0x1F5A0E0", Offset = "0x1F5A0E0", VA = "0x1F5A0E0")]
		private void DestroyObject(GameObject obj)
		{
		}

		[Token(Token = "0x6000FBB")]
		[Address(RVA = "0x1F5A33C", Offset = "0x1F5A33C", VA = "0x1F5A33C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7AA1C0", Offset = "0x7AA1C0")]
		private IEnumerator RunTimeDestroyObjectRoutine(GameObject obj)
		{
			return null;
		}

		[Token(Token = "0x6000FBC")]
		[Address(RVA = "0x1F5A3D0", Offset = "0x1F5A3D0", VA = "0x1F5A3D0")]
		private void RunTimeDestroyObjectOnDisabledText(GameObject obj)
		{
		}

		[Token(Token = "0x6000FBD")]
		[Address(RVA = "0x1F57764", Offset = "0x1F57764", VA = "0x1F57764")]
		private void PositionOldChars(int startingFrom)
		{
		}

		[Token(Token = "0x6000FBE")]
		[Address(RVA = "0x1F575F8", Offset = "0x1F575F8", VA = "0x1F575F8")]
		private void GetPositionAtStart()
		{
		}

		[Token(Token = "0x6000FBF")]
		[Address(RVA = "0x1F5A4A0", Offset = "0x1F5A4A0", VA = "0x1F5A4A0")]
		private float StartingX(string myString)
		{
			return default(float);
		}

		[Token(Token = "0x6000FC0")]
		[Address(RVA = "0x1F59FB8", Offset = "0x1F59FB8", VA = "0x1F59FB8")]
		private float TotalSpacingRequiredFor(string myString)
		{
			return default(float);
		}

		[Token(Token = "0x6000FC1")]
		[Address(RVA = "0x1F5A914", Offset = "0x1F5A914", VA = "0x1F5A914")]
		private float StartingY()
		{
			return default(float);
		}

		[Token(Token = "0x6000FC2")]
		[Address(RVA = "0x1F570AC", Offset = "0x1F570AC", VA = "0x1F570AC")]
		private int CharacterInOneLineUpdate()
		{
			return default(int);
		}

		[Token(Token = "0x6000FC3")]
		[Address(RVA = "0x1F58170", Offset = "0x1F58170", VA = "0x1F58170")]
		private void CircularPositioning()
		{
		}

		[Token(Token = "0x6000FC4")]
		[Address(RVA = "0x1F57E54", Offset = "0x1F57E54", VA = "0x1F57E54")]
		private void CircularListProcessOldChars(int startingFrom)
		{
		}

		[Token(Token = "0x6000FC5")]
		[Address(RVA = "0x1F58074", Offset = "0x1F58074", VA = "0x1F58074")]
		private void CreateNewCharsForCircularList(int startingFrom)
		{
		}

		[Token(Token = "0x6000FC6")]
		[Address(RVA = "0x1F5AC40", Offset = "0x1F5AC40", VA = "0x1F5AC40")]
		private void CreateCharForCircularList(char c)
		{
		}

		[Token(Token = "0x6000FC7")]
		[Address(RVA = "0x1F57A28", Offset = "0x1F57A28", VA = "0x1F57A28")]
		private void CreateNewChars(int startingFrom)
		{
		}

		[Token(Token = "0x6000FC8")]
		[Address(RVA = "0x1F5AD94", Offset = "0x1F5AD94", VA = "0x1F5AD94")]
		private void CreateThisChar(char c)
		{
		}

		[Token(Token = "0x6000FC9")]
		[Address(RVA = "0x1F5A5F4", Offset = "0x1F5A5F4", VA = "0x1F5A5F4")]
		private void PrepareCharacter(GameObject obj)
		{
		}

		[Token(Token = "0x6000FCA")]
		[Address(RVA = "0x1F5ADE4", Offset = "0x1F5ADE4", VA = "0x1F5ADE4")]
		private void CreateAndPrepareCharacter(char c, float myX, float myY, float myZ, Transform tr)
		{
		}

		[Token(Token = "0x6000FCB")]
		[Address(RVA = "0x1F5AD30", Offset = "0x1F5AD30", VA = "0x1F5AD30")]
		private void AddCharacterToList(GameObject obj)
		{
		}

		[Token(Token = "0x6000FCC")]
		[Address(RVA = "0x1F5A758", Offset = "0x1F5A758", VA = "0x1F5A758")]
		private void ApplyEffects(GameObject obj)
		{
		}

		[Token(Token = "0x6000FCD")]
		[Address(RVA = "0x1F5AA20", Offset = "0x1F5AA20", VA = "0x1F5AA20")]
		private void ApplyStyle(GameObject obj)
		{
		}

		[Token(Token = "0x6000FCE")]
		[Address(RVA = "0x1F5AF78", Offset = "0x1F5AF78", VA = "0x1F5AF78")]
		private void SetLayer(GameObject obj)
		{
		}

		[Token(Token = "0x6000FCF")]
		[Address(RVA = "0x1F5B02C", Offset = "0x1F5B02C", VA = "0x1F5B02C")]
		private void AddToList(GameObject combinedMeshHolder)
		{
		}

		[Token(Token = "0x6000FD0")]
		[Address(RVA = "0x1F5B090", Offset = "0x1F5B090", VA = "0x1F5B090")]
		public void EmptyEffect(List<MText_ModuleContainer> moduleList)
		{
		}

		[Token(Token = "0x6000FD1")]
		[Address(RVA = "0x1F5B11C", Offset = "0x1F5B11C", VA = "0x1F5B11C")]
		public void NewEffect(List<MText_ModuleContainer> moduleList, MText_Module newModule)
		{
		}

		[Token(Token = "0x6000FD2")]
		[Address(RVA = "0x1F5B1C4", Offset = "0x1F5B1C4", VA = "0x1F5B1C4")]
		public void ClearAllEffects()
		{
		}

		[Token(Token = "0x6000FD3")]
		[Address(RVA = "0x1F58524", Offset = "0x1F58524", VA = "0x1F58524")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x7AA220", Offset = "0x7AA220")]
		private void CombineMeshes()
		{
		}

		[Token(Token = "0x6000FD4")]
		[Address(RVA = "0x1F5B228", Offset = "0x1F5B228", VA = "0x1F5B228")]
		public bool DoesStyleInheritFromAParent()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FD5")]
		[Address(RVA = "0x1F5B3A8", Offset = "0x1F5B3A8", VA = "0x1F5B3A8")]
		public Modular3DText()
		{
		}
	}
	[Token(Token = "0x20002A0")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x797628", Offset = "0x797628")]
	public class MText_Module_AddRigidBody : MText_Module
	{
		[Token(Token = "0x20002A1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x79766C", Offset = "0x79766C")]
		private sealed class <ModuleRoutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40011AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40011AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40011AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject obj;

			[Token(Token = "0x40011B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float delay;

			[Token(Token = "0x40011B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public MText_Module_AddRigidBody <>4__this;

			[Token(Token = "0x17000247")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FE7")]
				[Address(RVA = "0xCB99B8", Offset = "0xCB99B8", VA = "0xCB99B8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000248")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FE9")]
				[Address(RVA = "0xCB9A00", Offset = "0xCB9A00", VA = "0xCB9A00", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FE4")]
			[Address(RVA = "0xCB95B0", Offset = "0xCB95B0", VA = "0xCB95B0")]
			[DebuggerHidden]
			public <ModuleRoutine>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6000FE5")]
			[Address(RVA = "0xCB95DC", Offset = "0xCB95DC", VA = "0xCB95DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FE6")]
			[Address(RVA = "0xCB95E0", Offset = "0xCB95E0", VA = "0xCB95E0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FE8")]
			[Address(RVA = "0xCB99C0", Offset = "0xCB99C0", VA = "0xCB99C0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40011A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool enableGravity;

		[Token(Token = "0x40011A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool addRandomForce;

		[Token(Token = "0x40011A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float horizontalForcePower;

		[Token(Token = "0x40011A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float verticalForcePower;

		[Token(Token = "0x40011AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Vector3 forceDirectionMinimum;

		[Token(Token = "0x40011AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Vector3 forceDirectionMaximum;

		[Token(Token = "0x40011AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private PhysicMaterial physicMaterial;

		[Token(Token = "0x6000FE2")]
		[Address(RVA = "0x118DE2C", Offset = "0x118DE2C", VA = "0x118DE2C", Slot = "4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7AA2F8", Offset = "0x7AA2F8")]
		public override IEnumerator ModuleRoutine(GameObject obj, float delay)
		{
			return null;
		}

		[Token(Token = "0x6000FE3")]
		[Address(RVA = "0x118DED0", Offset = "0x118DED0", VA = "0x118DED0")]
		public MText_Module_AddRigidBody()
		{
		}
	}
	[Token(Token = "0x20002A2")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x79767C", Offset = "0x79767C")]
	public class MText_Module_PlayParticles : MText_Module
	{
		[Token(Token = "0x20002A3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7976C0", Offset = "0x7976C0")]
		private sealed class <ModuleRoutine>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40011B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40011B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40011B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x40011B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameObject obj;

			[Token(Token = "0x40011B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public MText_Module_PlayParticles <>4__this;

			[Token(Token = "0x40011B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private GameObject <spawnedParticle>5__2;

			[Token(Token = "0x17000249")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FEF")]
				[Address(RVA = "0xCB9D40", Offset = "0xCB9D40", VA = "0xCB9D40", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700024A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FF1")]
				[Address(RVA = "0xCB9D88", Offset = "0xCB9D88", VA = "0xCB9D88", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FEC")]
			[Address(RVA = "0xCB9A08", Offset = "0xCB9A08", VA = "0xCB9A08")]
			[DebuggerHidden]
			public <ModuleRoutine>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6000FED")]
			[Address(RVA = "0xCB9A34", Offset = "0xCB9A34", VA = "0xCB9A34", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FEE")]
			[Address(RVA = "0xCB9A38", Offset = "0xCB9A38", VA = "0xCB9A38", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FF0")]
			[Address(RVA = "0xCB9D48", Offset = "0xCB9D48", VA = "0xCB9D48", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40011B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject particlePrefab;

		[Token(Token = "0x40011B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int destroyParticleAfter;

		[Token(Token = "0x6000FEA")]
		[Address(RVA = "0x118DF1C", Offset = "0x118DF1C", VA = "0x118DF1C", Slot = "4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7AA3A8", Offset = "0x7AA3A8")]
		public override IEnumerator ModuleRoutine(GameObject obj, float delay)
		{
			return null;
		}

		[Token(Token = "0x6000FEB")]
		[Address(RVA = "0x118DFC0", Offset = "0x118DFC0", VA = "0x118DFC0")]
		public MText_Module_PlayParticles()
		{
		}
	}
	[Token(Token = "0x20002A4")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7976D0", Offset = "0x7976D0")]
	public class MText_Module_PositionChange : MText_Module
	{
		[Token(Token = "0x20002A5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x797714", Offset = "0x797714")]
		private sealed class <ModuleRoutine>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40011C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40011C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40011C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject obj;

			[Token(Token = "0x40011C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MText_Module_PositionChange <>4__this;

			[Token(Token = "0x40011C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float duration;

			[Token(Token = "0x40011C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Transform <tr>5__2;

			[Token(Token = "0x40011C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Vector3 <startPosition>5__3;

			[Token(Token = "0x40011C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private Vector3 <targetPosition>5__4;

			[Token(Token = "0x40011CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private float <timer>5__5;

			[Token(Token = "0x1700024B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FF7")]
				[Address(RVA = "0xCBA188", Offset = "0xCBA188", VA = "0xCBA188", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700024C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FF9")]
				[Address(RVA = "0xCBA1D0", Offset = "0xCBA1D0", VA = "0xCBA1D0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FF4")]
			[Address(RVA = "0xCB9D90", Offset = "0xCB9D90", VA = "0xCB9D90")]
			[DebuggerHidden]
			public <ModuleRoutine>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6000FF5")]
			[Address(RVA = "0xCB9DBC", Offset = "0xCB9DBC", VA = "0xCB9DBC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FF6")]
			[Address(RVA = "0xCB9DC0", Offset = "0xCB9DC0", VA = "0xCB9DC0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FF8")]
			[Address(RVA = "0xCBA190", Offset = "0xCBA190", VA = "0xCBA190", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40011BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7A065C", Offset = "0x7A065C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A065C", Offset = "0x7A065C")]
		[SerializeField]
		private float delayBeforeStarting;

		[Token(Token = "0x40011BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private bool useLocalPosition;

		[Token(Token = "0x40011BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		[SerializeField]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7A06C8", Offset = "0x7A06C8")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7A06C8", Offset = "0x7A06C8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A06C8", Offset = "0x7A06C8")]
		private bool startFromDefaultPosition;

		[Token(Token = "0x40011BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A0734", Offset = "0x7A0734")]
		private Vector3 startFrom;

		[Token(Token = "0x40011BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7A0780", Offset = "0x7A0780")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7A0780", Offset = "0x7A0780")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A0780", Offset = "0x7A0780")]
		[SerializeField]
		private bool moveToOriginal;

		[Token(Token = "0x40011BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A07EC", Offset = "0x7A07EC")]
		[SerializeField]
		private bool addMoveToValue;

		[Token(Token = "0x40011C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A0838", Offset = "0x7A0838")]
		[SerializeField]
		private Vector3 moveTo;

		[Token(Token = "0x40011C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7A0884", Offset = "0x7A0884")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7A0884", Offset = "0x7A0884")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A0884", Offset = "0x7A0884")]
		private AnimationCurve animationCurve;

		[Token(Token = "0x6000FF2")]
		[Address(RVA = "0x118DFD0", Offset = "0x118DFD0", VA = "0x118DFD0", Slot = "4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7AA458", Offset = "0x7AA458")]
		public override IEnumerator ModuleRoutine(GameObject obj, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000FF3")]
		[Address(RVA = "0x118E074", Offset = "0x118E074", VA = "0x118E074")]
		public MText_Module_PositionChange()
		{
		}
	}
	[Token(Token = "0x20002A6")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x797724", Offset = "0x797724")]
	public class MText_Module_RemoveRigidBody : MText_Module
	{
		[Token(Token = "0x20002A7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x797768", Offset = "0x797768")]
		private sealed class <ModuleRoutine>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40011CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40011CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40011CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject obj;

			[Token(Token = "0x1700024D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FFF")]
				[Address(RVA = "0xCBA3EC", Offset = "0xCBA3EC", VA = "0xCBA3EC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700024E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001001")]
				[Address(RVA = "0xCBA434", Offset = "0xCBA434", VA = "0xCBA434", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FFC")]
			[Address(RVA = "0xCBA1D8", Offset = "0xCBA1D8", VA = "0xCBA1D8")]
			[DebuggerHidden]
			public <ModuleRoutine>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6000FFD")]
			[Address(RVA = "0xCBA204", Offset = "0xCBA204", VA = "0xCBA204", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FFE")]
			[Address(RVA = "0xCBA208", Offset = "0xCBA208", VA = "0xCBA208", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001000")]
			[Address(RVA = "0xCBA3F4", Offset = "0xCBA3F4", VA = "0xCBA3F4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6000FFA")]
		[Address(RVA = "0x118E0C0", Offset = "0x118E0C0", VA = "0x118E0C0", Slot = "4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7AA508", Offset = "0x7AA508")]
		public override IEnumerator ModuleRoutine(GameObject obj, float delay)
		{
			return null;
		}

		[Token(Token = "0x6000FFB")]
		[Address(RVA = "0x118E138", Offset = "0x118E138", VA = "0x118E138")]
		public MText_Module_RemoveRigidBody()
		{
		}
	}
	[Token(Token = "0x20002A8")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x797778", Offset = "0x797778")]
	public class MText_Module_ScaleChange : MText_Module
	{
		[Token(Token = "0x20002A9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7977BC", Offset = "0x7977BC")]
		private sealed class <ModuleRoutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40011D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40011D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40011D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject obj;

			[Token(Token = "0x40011D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MText_Module_ScaleChange <>4__this;

			[Token(Token = "0x40011D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float duration;

			[Token(Token = "0x40011D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Transform <tr>5__2;

			[Token(Token = "0x40011D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Vector3 <startScale>5__3;

			[Token(Token = "0x40011DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private Vector3 <targetScale>5__4;

			[Token(Token = "0x40011DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private float <timer>5__5;

			[Token(Token = "0x1700024F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001007")]
				[Address(RVA = "0xCBA6A4", Offset = "0xCBA6A4", VA = "0xCBA6A4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000250")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001009")]
				[Address(RVA = "0xCBA6EC", Offset = "0xCBA6EC", VA = "0xCBA6EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001004")]
			[Address(RVA = "0xCBA43C", Offset = "0xCBA43C", VA = "0xCBA43C")]
			[DebuggerHidden]
			public <ModuleRoutine>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6001005")]
			[Address(RVA = "0xCBA468", Offset = "0xCBA468", VA = "0xCBA468", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001006")]
			[Address(RVA = "0xCBA46C", Offset = "0xCBA46C", VA = "0xCBA46C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001008")]
			[Address(RVA = "0xCBA6AC", Offset = "0xCBA6AC", VA = "0xCBA6AC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40011CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A08F0", Offset = "0x7A08F0")]
		[SerializeField]
		private bool growFromDefaultScale;

		[Token(Token = "0x40011CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A093C", Offset = "0x7A093C")]
		[SerializeField]
		private Vector3 growFrom;

		[Token(Token = "0x40011D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7A0988", Offset = "0x7A0988")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A0988", Offset = "0x7A0988")]
		[SerializeField]
		private bool growToOriginal;

		[Token(Token = "0x40011D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A09E4", Offset = "0x7A09E4")]
		[SerializeField]
		private Vector3 growTo;

		[Token(Token = "0x40011D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7A0A30", Offset = "0x7A0A30")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7A0A30", Offset = "0x7A0A30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A0A30", Offset = "0x7A0A30")]
		[SerializeField]
		private AnimationCurve animationCurve;

		[Token(Token = "0x6001002")]
		[Address(RVA = "0x118E140", Offset = "0x118E140", VA = "0x118E140", Slot = "4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7AA5B8", Offset = "0x7AA5B8")]
		public override IEnumerator ModuleRoutine(GameObject obj, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001003")]
		[Address(RVA = "0x118E1E4", Offset = "0x118E1E4", VA = "0x118E1E4")]
		public MText_Module_ScaleChange()
		{
		}
	}
	[Token(Token = "0x20002AA")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7977CC", Offset = "0x7977CC")]
	[DisallowMultipleComponent]
	public class Mtext_UI_InputField : MonoBehaviour
	{
		[Token(Token = "0x20002AB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x797818", Offset = "0x797818")]
		private sealed class <FocusRoutine>d__37 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40011F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40011F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40011F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Mtext_UI_InputField <>4__this;

			[Token(Token = "0x40011F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool enable;

			[Token(Token = "0x17000252")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001028")]
				[Address(RVA = "0xCBB9C8", Offset = "0xCBB9C8", VA = "0xCBB9C8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000253")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600102A")]
				[Address(RVA = "0xCBBA10", Offset = "0xCBBA10", VA = "0xCBBA10", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001025")]
			[Address(RVA = "0xCBB924", Offset = "0xCBB924", VA = "0xCBB924")]
			[DebuggerHidden]
			public <FocusRoutine>d__37(int <>1__state)
			{
			}

			[Token(Token = "0x6001026")]
			[Address(RVA = "0xCBB950", Offset = "0xCBB950", VA = "0xCBB950", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001027")]
			[Address(RVA = "0xCBB954", Offset = "0xCBB954", VA = "0xCBB954", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001029")]
			[Address(RVA = "0xCBB9D0", Offset = "0xCBB9D0", VA = "0xCBB9D0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40011DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A0A9C", Offset = "0x7A0A9C")]
		public bool autoFocusOnGameStart;

		[Token(Token = "0x40011DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool interactable;

		[Token(Token = "0x40011DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int maxCharacter;

		[Token(Token = "0x40011DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string typingSymbol;

		[Token(Token = "0x40011E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string _text;

		[Token(Token = "0x40011E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string placeHolderText;

		[Token(Token = "0x40011E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Modular3DText textComponent;

		[Token(Token = "0x40011E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Renderer background;

		[Token(Token = "0x40011E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool enterKeyEndsInput;

		[Token(Token = "0x40011E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Material placeHolderTextMat;

		[Token(Token = "0x40011E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Material inFocusTextMat;

		[Token(Token = "0x40011E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Material inFocusBackgroundMat;

		[Token(Token = "0x40011E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Material outOfFocusTextMat;

		[Token(Token = "0x40011E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Material outOfFocusBackgroundMat;

		[Token(Token = "0x40011EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Material disabledTextMat;

		[Token(Token = "0x40011EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Material disabledBackgroundMat;

		[Token(Token = "0x40011EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Material currentTextMaterial;

		[Token(Token = "0x40011ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioClip typeSound;

		[Token(Token = "0x40011EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AudioSource audioSource;

		[Token(Token = "0x40011EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public UnityEvent onInput;

		[Token(Token = "0x40011F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public UnityEvent onBackspace;

		[Token(Token = "0x40011F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public UnityEvent onInputEnd;

		[Token(Token = "0x40011F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public string test;

		[Token(Token = "0x17000251")]
		public string Text
		{
			[Token(Token = "0x600100A")]
			[Address(RVA = "0x1F5E984", Offset = "0x1F5E984", VA = "0x1F5E984")]
			get
			{
				return null;
			}
			[Token(Token = "0x600100B")]
			[Address(RVA = "0x1F5E98C", Offset = "0x1F5E98C", VA = "0x1F5E98C")]
			set
			{
			}
		}

		[Token(Token = "0x600100C")]
		[Address(RVA = "0x1F5EB50", Offset = "0x1F5EB50", VA = "0x1F5EB50")]
		private void Awake()
		{
		}

		[Token(Token = "0x600100D")]
		[Address(RVA = "0x1F5EC2C", Offset = "0x1F5EC2C", VA = "0x1F5EC2C")]
		private void Update()
		{
		}

		[Token(Token = "0x600100E")]
		[Address(RVA = "0x1F5ED80", Offset = "0x1F5ED80", VA = "0x1F5ED80")]
		public void InputComplete()
		{
		}

		[Token(Token = "0x600100F")]
		[Address(RVA = "0x1F5EDBC", Offset = "0x1F5EDBC", VA = "0x1F5EDBC")]
		public void UpdateText()
		{
		}

		[Token(Token = "0x6001010")]
		[Address(RVA = "0x1F5EDC4", Offset = "0x1F5EDC4", VA = "0x1F5EDC4")]
		public void UpdateText(string newText)
		{
		}

		[Token(Token = "0x6001011")]
		[Address(RVA = "0x1F5EDF0", Offset = "0x1F5EDF0", VA = "0x1F5EDF0")]
		public void UpdateText(int newTextInt)
		{
		}

		[Token(Token = "0x6001012")]
		[Address(RVA = "0x1F5EE38", Offset = "0x1F5EE38", VA = "0x1F5EE38")]
		public void UpdateText(float newTextFloat)
		{
		}

		[Token(Token = "0x6001013")]
		[Address(RVA = "0x1F5E9B8", Offset = "0x1F5E9B8", VA = "0x1F5E9B8")]
		public void UpdateText(bool sound)
		{
		}

		[Token(Token = "0x6001014")]
		[Address(RVA = "0x1F5EE80", Offset = "0x1F5EE80", VA = "0x1F5EE80")]
		public void EmptyText()
		{
		}

		[Token(Token = "0x6001015")]
		[Address(RVA = "0x1F5EEE4", Offset = "0x1F5EEE4", VA = "0x1F5EEE4")]
		public void Select()
		{
		}

		[Token(Token = "0x6001016")]
		[Address(RVA = "0x1F5EBFC", Offset = "0x1F5EBFC", VA = "0x1F5EBFC")]
		public void Focus(bool enable)
		{
		}

		[Token(Token = "0x6001017")]
		[Address(RVA = "0x1F5EFA4", Offset = "0x1F5EFA4", VA = "0x1F5EFA4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7AA668", Offset = "0x7AA668")]
		private IEnumerator FocusRoutine(bool enable)
		{
			return null;
		}

		[Token(Token = "0x6001018")]
		[Address(RVA = "0x1F5F030", Offset = "0x1F5F030", VA = "0x1F5F030")]
		public void Focus(bool enable, bool delay)
		{
		}

		[Token(Token = "0x6001019")]
		[Address(RVA = "0x1F5F040", Offset = "0x1F5F040", VA = "0x1F5F040")]
		private void FocusFunction(bool enable)
		{
		}

		[Token(Token = "0x600101A")]
		[Address(RVA = "0x1F5F1F8", Offset = "0x1F5F1F8", VA = "0x1F5F1F8")]
		public void Interactable()
		{
		}

		[Token(Token = "0x600101B")]
		[Address(RVA = "0x1F5F200", Offset = "0x1F5F200", VA = "0x1F5F200")]
		public void Uninteractable()
		{
		}

		[Token(Token = "0x600101C")]
		[Address(RVA = "0x1F5F0A0", Offset = "0x1F5F0A0", VA = "0x1F5F0A0")]
		private void SelectedVisual()
		{
		}

		[Token(Token = "0x600101D")]
		[Address(RVA = "0x1F5F0E8", Offset = "0x1F5F0E8", VA = "0x1F5F0E8")]
		private void UnselectedVisual()
		{
		}

		[Token(Token = "0x600101E")]
		[Address(RVA = "0x1F5F170", Offset = "0x1F5F170", VA = "0x1F5F170")]
		public void DisableVisual()
		{
		}

		[Token(Token = "0x600101F")]
		[Address(RVA = "0x1F5F328", Offset = "0x1F5F328", VA = "0x1F5F328")]
		private void UpdateMaterials(Material textMat, Material backgroundMat)
		{
		}

		[Token(Token = "0x6001020")]
		[Address(RVA = "0x1F5F5F0", Offset = "0x1F5F5F0", VA = "0x1F5F5F0")]
		private MText_UI_List GetParentList()
		{
			return null;
		}

		[Token(Token = "0x6001021")]
		[Address(RVA = "0x1F5F410", Offset = "0x1F5F410", VA = "0x1F5F410")]
		public (bool, MText_UI_List) ApplyNormalStyleFromParent()
		{
			return default((bool, MText_UI_List));
		}

		[Token(Token = "0x6001022")]
		[Address(RVA = "0x1F5F238", Offset = "0x1F5F238", VA = "0x1F5F238")]
		public (bool, MText_UI_List) ApplySelectedStyleFromParent()
		{
			return default((bool, MText_UI_List));
		}

		[Token(Token = "0x6001023")]
		[Address(RVA = "0x1F5F500", Offset = "0x1F5F500", VA = "0x1F5F500")]
		public (bool, MText_UI_List) ApplyDisabledStyleFromParent()
		{
			return default((bool, MText_UI_List));
		}

		[Token(Token = "0x6001024")]
		[Address(RVA = "0x1F5F60C", Offset = "0x1F5F60C", VA = "0x1F5F60C")]
		public Mtext_UI_InputField()
		{
		}
	}
	[Token(Token = "0x20002AC")]
	public class MText_SampleScene_Announcement : MonoBehaviour
	{
		[Token(Token = "0x40011F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string announcement;

		[Token(Token = "0x40011F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Modular3DText modular3DText;

		[Token(Token = "0x40011F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Animator animator;

		[Token(Token = "0x40011FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ParticleSystem myParticleSystem;

		[Token(Token = "0x600102B")]
		[Address(RVA = "0x118E4B8", Offset = "0x118E4B8", VA = "0x118E4B8")]
		private void Start()
		{
		}

		[Token(Token = "0x600102C")]
		[Address(RVA = "0x118E548", Offset = "0x118E548", VA = "0x118E548")]
		private void UpdateText()
		{
		}

		[Token(Token = "0x600102D")]
		[Address(RVA = "0x118E56C", Offset = "0x118E56C", VA = "0x118E56C")]
		public MText_SampleScene_Announcement()
		{
		}
	}
	[Token(Token = "0x20002AD")]
	public class MText_SampleScene_Cursor : MonoBehaviour
	{
		[Token(Token = "0x40011FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform crosshair;

		[Token(Token = "0x40011FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float rotationSpeed;

		[Token(Token = "0x40011FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ParticleSystem hitEffect;

		[Token(Token = "0x40011FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private StatusToolTip statusToolTip;

		[Token(Token = "0x600102E")]
		[Address(RVA = "0x118E574", Offset = "0x118E574", VA = "0x118E574")]
		private void Start()
		{
		}

		[Token(Token = "0x600102F")]
		[Address(RVA = "0x118E580", Offset = "0x118E580", VA = "0x118E580")]
		private void Update()
		{
		}

		[Token(Token = "0x6001030")]
		[Address(RVA = "0x118E92C", Offset = "0x118E92C", VA = "0x118E92C")]
		public MText_SampleScene_Cursor()
		{
		}
	}
	[Token(Token = "0x20002AE")]
	public class MText_SampleScene_FontTest : MonoBehaviour
	{
		[Token(Token = "0x40011FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Modular3DText modular3DText;

		[Token(Token = "0x4001200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Modular3DText fontText;

		[Token(Token = "0x4001201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7A0BC4", Offset = "0x7A0BC4")]
		private List<MText_Font> fonts;

		[Token(Token = "0x4001202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int selectedFont;

		[Token(Token = "0x6001031")]
		[Address(RVA = "0x118E940", Offset = "0x118E940", VA = "0x118E940")]
		public void NextFont()
		{
		}

		[Token(Token = "0x6001032")]
		[Address(RVA = "0x118EACC", Offset = "0x118EACC", VA = "0x118EACC")]
		public void PreviousFont()
		{
		}

		[Token(Token = "0x6001033")]
		[Address(RVA = "0x118E9A8", Offset = "0x118E9A8", VA = "0x118E9A8")]
		private void UpdateInfo()
		{
		}

		[Token(Token = "0x6001034")]
		[Address(RVA = "0x118EB34", Offset = "0x118EB34", VA = "0x118EB34")]
		public MText_SampleScene_FontTest()
		{
		}
	}
	[Token(Token = "0x20002AF")]
	public class MText_SampleScene_ListTest : MonoBehaviour
	{
		[Token(Token = "0x4001203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<Transform> lists;

		[Token(Token = "0x4001204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int selectedList;

		[Token(Token = "0x4001205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private int speed;

		[Token(Token = "0x4001206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float startTime;

		[Token(Token = "0x4001207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float distance;

		[Token(Token = "0x4001208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 targetPos;

		[Token(Token = "0x4001209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 startPos;

		[Token(Token = "0x6001035")]
		[Address(RVA = "0x118EBB8", Offset = "0x118EBB8", VA = "0x118EBB8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001036")]
		[Address(RVA = "0x118EC88", Offset = "0x118EC88", VA = "0x118EC88")]
		public void Next()
		{
		}

		[Token(Token = "0x6001037")]
		[Address(RVA = "0x118EDC0", Offset = "0x118EDC0", VA = "0x118EDC0")]
		public void Previous()
		{
		}

		[Token(Token = "0x6001038")]
		[Address(RVA = "0x118ECF0", Offset = "0x118ECF0", VA = "0x118ECF0")]
		private void GetPosition()
		{
		}

		[Token(Token = "0x6001039")]
		[Address(RVA = "0x118EE28", Offset = "0x118EE28", VA = "0x118EE28")]
		public MText_SampleScene_ListTest()
		{
		}
	}
	[Token(Token = "0x20002B0")]
	public class MText_SampleScene_VRCam : MonoBehaviour
	{
		[Token(Token = "0x20002B1")]
		public enum RotationAxes
		{
			[Token(Token = "0x400121A")]
			MouseXAndY,
			[Token(Token = "0x400121B")]
			MouseX,
			[Token(Token = "0x400121C")]
			MouseY
		}

		[Token(Token = "0x400120A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RotationAxes axes;

		[Token(Token = "0x400120B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float sensitivityX;

		[Token(Token = "0x400120C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float sensitivityY;

		[Token(Token = "0x400120D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float minimumX;

		[Token(Token = "0x400120E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float maximumX;

		[Token(Token = "0x400120F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float minimumY;

		[Token(Token = "0x4001210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float maximumY;

		[Token(Token = "0x4001211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float rotationX;

		[Token(Token = "0x4001212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float rotationY;

		[Token(Token = "0x4001213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<float> rotArrayX;

		[Token(Token = "0x4001214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float rotAverageX;

		[Token(Token = "0x4001215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<float> rotArrayY;

		[Token(Token = "0x4001216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float rotAverageY;

		[Token(Token = "0x4001217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float frameCounter;

		[Token(Token = "0x4001218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Quaternion originalRotation;

		[Token(Token = "0x600103A")]
		[Address(RVA = "0x118EED4", Offset = "0x118EED4", VA = "0x118EED4")]
		private void Update()
		{
		}

		[Token(Token = "0x600103B")]
		[Address(RVA = "0x118F514", Offset = "0x118F514", VA = "0x118F514")]
		private void Start()
		{
		}

		[Token(Token = "0x600103C")]
		[Address(RVA = "0x118F4A0", Offset = "0x118F4A0", VA = "0x118F4A0")]
		public static float ClampAngle(float angle, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x600103D")]
		[Address(RVA = "0x118F5E0", Offset = "0x118F5E0", VA = "0x118F5E0")]
		public MText_SampleScene_VRCam()
		{
		}
	}
	[Token(Token = "0x20002B2")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x797828", Offset = "0x797828")]
	public class MText_Settings : ScriptableObject
	{
		[Token(Token = "0x20002B3")]
		public enum MeshExportStyle
		{
			[Token(Token = "0x4001238")]
			exportAsObj,
			[Token(Token = "0x4001239")]
			exportAsMeshAsset
		}

		[Token(Token = "0x20002B4")]
		public enum CharInputStyle
		{
			[Token(Token = "0x400123B")]
			CharacterRange,
			[Token(Token = "0x400123C")]
			UnicodeRange,
			[Token(Token = "0x400123D")]
			CustomCharacters,
			[Token(Token = "0x400123E")]
			UnicodeSequence
		}

		[Token(Token = "0x400121D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public string selectedTab;

		[Token(Token = "0x400121E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color tabSelectedColor;

		[Token(Token = "0x400121F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color tabUnselectedColor;

		[Token(Token = "0x4001220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7A0C2C", Offset = "0x7A0C2C")]
		public Color gridItemColor;

		[Token(Token = "0x4001221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A0C3C", Offset = "0x7A0C3C")]
		public MText_Font defaultFont;

		[Token(Token = "0x4001222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Vector3 defaultTextSize;

		[Token(Token = "0x4001223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Material defaultTextMaterial;

		[Token(Token = "0x4001224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Material defaultBackgroundMaterial;

		[Token(Token = "0x4001225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool autoCreateInEditorMode;

		[Token(Token = "0x4001226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		public bool autoCreateInPlayMode;

		[Token(Token = "0x4001227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[HideInInspector]
		public int vertexDensity;

		[Token(Token = "0x4001228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public float sizeXY;

		[Token(Token = "0x4001229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[HideInInspector]
		public float sizeZ;

		[Token(Token = "0x400122A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[HideInInspector]
		public float smoothingAngle;

		[Token(Token = "0x400122B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[HideInInspector]
		public MeshExportStyle meshExportStyle;

		[Token(Token = "0x400122C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A0CC4", Offset = "0x7A0CC4")]
		public float smallHorizontalFieldSize;

		[Token(Token = "0x400122D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float normalltHorizontalFieldSize;

		[Token(Token = "0x400122E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float largeHorizontalFieldSize;

		[Token(Token = "0x400122F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float extraLargeHorizontalFieldSize;

		[Token(Token = "0x4001230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public CharInputStyle charInputStyle;

		[Token(Token = "0x4001231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public char startChar;

		[Token(Token = "0x4001232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA6")]
		public char endChar;

		[Token(Token = "0x4001233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public string startUnicode;

		[Token(Token = "0x4001234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[HideInInspector]
		public string endUnicode;

		[Token(Token = "0x4001235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x7A0D0C", Offset = "0x7A0D0C")]
		[HideInInspector]
		public string customCharacters;

		[Token(Token = "0x4001236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[HideInInspector]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x7A0D4C", Offset = "0x7A0D4C")]
		public string unicodeSequence;

		[Token(Token = "0x600103E")]
		[Address(RVA = "0x118F6B0", Offset = "0x118F6B0", VA = "0x118F6B0")]
		public MText_Settings()
		{
		}
	}
	[Token(Token = "0x20002B5")]
	public class MText_Utilities
	{
		[Token(Token = "0x600103F")]
		[Address(RVA = "0x118FD88", Offset = "0x118FD88", VA = "0x118FD88")]
		public static MText_UI_List GetParentList(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x6001040")]
		[Address(RVA = "0x1195BDC", Offset = "0x1195BDC", VA = "0x1195BDC")]
		public MText_Utilities()
		{
		}
	}
}
namespace MText.EditorHelper
{
	[Token(Token = "0x20002B6")]
	public class MText_FindResource : MonoBehaviour
	{
		[Token(Token = "0x6001041")]
		[Address(RVA = "0x118B6B4", Offset = "0x118B6B4", VA = "0x118B6B4")]
		public MText_FindResource()
		{
		}
	}
}
namespace TMPro
{
	[Serializable]
	[Token(Token = "0x20002B7")]
	public class TMP_DigitValidator : TMP_InputValidator
	{
		[Token(Token = "0x6001042")]
		[Address(RVA = "0xDC7234", Offset = "0xDC7234", VA = "0xDC7234", Slot = "4")]
		public override char Validate(ref string text, ref int pos, char ch)
		{
			return default(char);
		}

		[Token(Token = "0x6001043")]
		[Address(RVA = "0xDC72B8", Offset = "0xDC72B8", VA = "0xDC72B8")]
		public TMP_DigitValidator()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002B8")]
	public class TMP_PhoneNumberValidator : TMP_InputValidator
	{
		[Token(Token = "0x6001044")]
		[Address(RVA = "0xDC7B60", Offset = "0xDC7B60", VA = "0xDC7B60", Slot = "4")]
		public override char Validate(ref string text, ref int pos, char ch)
		{
			return default(char);
		}

		[Token(Token = "0x6001045")]
		[Address(RVA = "0xDC7FE0", Offset = "0xDC7FE0", VA = "0xDC7FE0")]
		public TMP_PhoneNumberValidator()
		{
		}
	}
	[Token(Token = "0x20002B9")]
	public class TMP_TextEventHandler : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Serializable]
		[Token(Token = "0x20002BA")]
		public class CharacterSelectionEvent : UnityEvent<char, int>
		{
			[Token(Token = "0x600105A")]
			[Address(RVA = "0xCC1C98", Offset = "0xCC1C98", VA = "0xCC1C98")]
			public CharacterSelectionEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20002BB")]
		public class SpriteSelectionEvent : UnityEvent<char, int>
		{
			[Token(Token = "0x600105B")]
			[Address(RVA = "0xCC1D7C", Offset = "0xCC1D7C", VA = "0xCC1D7C")]
			public SpriteSelectionEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20002BC")]
		public class WordSelectionEvent : UnityEvent<string, int, int>
		{
			[Token(Token = "0x600105C")]
			[Address(RVA = "0xCC1DC8", Offset = "0xCC1DC8", VA = "0xCC1DC8")]
			public WordSelectionEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20002BD")]
		public class LineSelectionEvent : UnityEvent<string, int, int>
		{
			[Token(Token = "0x600105D")]
			[Address(RVA = "0xCC1CE4", Offset = "0xCC1CE4", VA = "0xCC1CE4")]
			public LineSelectionEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20002BE")]
		public class LinkSelectionEvent : UnityEvent<string, string, int>
		{
			[Token(Token = "0x600105E")]
			[Address(RVA = "0xCC1D30", Offset = "0xCC1D30", VA = "0xCC1D30")]
			public LinkSelectionEvent()
			{
			}
		}

		[Token(Token = "0x400123F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CharacterSelectionEvent m_OnCharacterSelection;

		[Token(Token = "0x4001240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SpriteSelectionEvent m_OnSpriteSelection;

		[Token(Token = "0x4001241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private WordSelectionEvent m_OnWordSelection;

		[Token(Token = "0x4001242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private LineSelectionEvent m_OnLineSelection;

		[Token(Token = "0x4001243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private LinkSelectionEvent m_OnLinkSelection;

		[Token(Token = "0x4001244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x4001245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Camera m_Camera;

		[Token(Token = "0x4001246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Canvas m_Canvas;

		[Token(Token = "0x4001247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_selectedLink;

		[Token(Token = "0x4001248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_lastCharIndex;

		[Token(Token = "0x4001249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int m_lastWordIndex;

		[Token(Token = "0x400124A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int m_lastLineIndex;

		[Token(Token = "0x17000254")]
		public CharacterSelectionEvent onCharacterSelection
		{
			[Token(Token = "0x6001046")]
			[Address(RVA = "0xDC9308", Offset = "0xDC9308", VA = "0xDC9308")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001047")]
			[Address(RVA = "0xDC9310", Offset = "0xDC9310", VA = "0xDC9310")]
			set
			{
			}
		}

		[Token(Token = "0x17000255")]
		public SpriteSelectionEvent onSpriteSelection
		{
			[Token(Token = "0x6001048")]
			[Address(RVA = "0xDC9318", Offset = "0xDC9318", VA = "0xDC9318")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001049")]
			[Address(RVA = "0xDC9320", Offset = "0xDC9320", VA = "0xDC9320")]
			set
			{
			}
		}

		[Token(Token = "0x17000256")]
		public WordSelectionEvent onWordSelection
		{
			[Token(Token = "0x600104A")]
			[Address(RVA = "0xDC9328", Offset = "0xDC9328", VA = "0xDC9328")]
			get
			{
				return null;
			}
			[Token(Token = "0x600104B")]
			[Address(RVA = "0xDC9330", Offset = "0xDC9330", VA = "0xDC9330")]
			set
			{
			}
		}

		[Token(Token = "0x17000257")]
		public LineSelectionEvent onLineSelection
		{
			[Token(Token = "0x600104C")]
			[Address(RVA = "0xDC9338", Offset = "0xDC9338", VA = "0xDC9338")]
			get
			{
				return null;
			}
			[Token(Token = "0x600104D")]
			[Address(RVA = "0xDC9340", Offset = "0xDC9340", VA = "0xDC9340")]
			set
			{
			}
		}

		[Token(Token = "0x17000258")]
		public LinkSelectionEvent onLinkSelection
		{
			[Token(Token = "0x600104E")]
			[Address(RVA = "0xDC9348", Offset = "0xDC9348", VA = "0xDC9348")]
			get
			{
				return null;
			}
			[Token(Token = "0x600104F")]
			[Address(RVA = "0xDC9350", Offset = "0xDC9350", VA = "0xDC9350")]
			set
			{
			}
		}

		[Token(Token = "0x6001050")]
		[Address(RVA = "0xDC9358", Offset = "0xDC9358", VA = "0xDC9358")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001051")]
		[Address(RVA = "0xDC9530", Offset = "0xDC9530", VA = "0xDC9530")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001052")]
		[Address(RVA = "0xDC9C7C", Offset = "0xDC9C7C", VA = "0xDC9C7C", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001053")]
		[Address(RVA = "0xDC9C80", Offset = "0xDC9C80", VA = "0xDC9C80", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001054")]
		[Address(RVA = "0xDC99E8", Offset = "0xDC99E8", VA = "0xDC99E8")]
		private void SendOnCharacterSelection(char character, int characterIndex)
		{
		}

		[Token(Token = "0x6001055")]
		[Address(RVA = "0xDC9A60", Offset = "0xDC9A60", VA = "0xDC9A60")]
		private void SendOnSpriteSelection(char character, int characterIndex)
		{
		}

		[Token(Token = "0x6001056")]
		[Address(RVA = "0xDC9AD8", Offset = "0xDC9AD8", VA = "0xDC9AD8")]
		private void SendOnWordSelection(string word, int charIndex, int length)
		{
		}

		[Token(Token = "0x6001057")]
		[Address(RVA = "0xDC9B64", Offset = "0xDC9B64", VA = "0xDC9B64")]
		private void SendOnLineSelection(string line, int charIndex, int length)
		{
		}

		[Token(Token = "0x6001058")]
		[Address(RVA = "0xDC9BF0", Offset = "0xDC9BF0", VA = "0xDC9BF0")]
		private void SendOnLinkSelection(string linkID, string linkText, int linkIndex)
		{
		}

		[Token(Token = "0x6001059")]
		[Address(RVA = "0xDC9C84", Offset = "0xDC9C84", VA = "0xDC9C84")]
		public TMP_TextEventHandler()
		{
		}
	}
}
namespace TMPro.Examples
{
	[Token(Token = "0x20002BF")]
	public class Benchmark01 : MonoBehaviour
	{
		[Token(Token = "0x20002C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x79786C", Offset = "0x79786C")]
		private sealed class <Start>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001255")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001256")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001257")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Benchmark01 <>4__this;

			[Token(Token = "0x4001258")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x17000259")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001064")]
				[Address(RVA = "0xB05590", Offset = "0xB05590", VA = "0xB05590", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700025A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001066")]
				[Address(RVA = "0xB055D8", Offset = "0xB055D8", VA = "0xB055D8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001061")]
			[Address(RVA = "0xB04F78", Offset = "0xB04F78", VA = "0xB04F78")]
			[DebuggerHidden]
			public <Start>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6001062")]
			[Address(RVA = "0xB04FA4", Offset = "0xB04FA4", VA = "0xB04FA4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001063")]
			[Address(RVA = "0xB04FA8", Offset = "0xB04FA8", VA = "0xB04FA8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001065")]
			[Address(RVA = "0xB05598", Offset = "0xB05598", VA = "0xB05598", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400124B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int BenchmarkType;

		[Token(Token = "0x400124C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TMP_FontAsset TMProFont;

		[Token(Token = "0x400124D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Font TextMeshFont;

		[Token(Token = "0x400124E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMeshPro m_textMeshPro;

		[Token(Token = "0x400124F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TextContainer m_textContainer;

		[Token(Token = "0x4001250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TextMesh m_textMesh;

		[Token(Token = "0x4001251")]
		private const string label01 = "The <#0050FF>count is: </color>{0}";

		[Token(Token = "0x4001252")]
		private const string label02 = "The <color=#0050FF>count is: </color>";

		[Token(Token = "0x4001253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material m_material01;

		[Token(Token = "0x4001254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material m_material02;

		[Token(Token = "0x600105F")]
		[Address(RVA = "0xAEDEEC", Offset = "0xAEDEEC", VA = "0xAEDEEC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7AA718", Offset = "0x7AA718")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6001060")]
		[Address(RVA = "0xAEDF64", Offset = "0xAEDF64", VA = "0xAEDF64")]
		public Benchmark01()
		{
		}
	}
	[Token(Token = "0x20002C1")]
	public class Benchmark01_UGUI : MonoBehaviour
	{
		[Token(Token = "0x20002C2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x79787C", Offset = "0x79787C")]
		private sealed class <Start>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001263")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001264")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001265")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Benchmark01_UGUI <>4__this;

			[Token(Token = "0x4001266")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x1700025B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600106C")]
				[Address(RVA = "0xB05ADC", Offset = "0xB05ADC", VA = "0xB05ADC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700025C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600106E")]
				[Address(RVA = "0xB05B24", Offset = "0xB05B24", VA = "0xB05B24", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001069")]
			[Address(RVA = "0xB055E0", Offset = "0xB055E0", VA = "0xB055E0")]
			[DebuggerHidden]
			public <Start>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x600106A")]
			[Address(RVA = "0xB0560C", Offset = "0xB0560C", VA = "0xB0560C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600106B")]
			[Address(RVA = "0xB05610", Offset = "0xB05610", VA = "0xB05610", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600106D")]
			[Address(RVA = "0xB05AE4", Offset = "0xB05AE4", VA = "0xB05AE4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int BenchmarkType;

		[Token(Token = "0x400125A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Canvas canvas;

		[Token(Token = "0x400125B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TMP_FontAsset TMProFont;

		[Token(Token = "0x400125C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Font TextMeshFont;

		[Token(Token = "0x400125D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TextMeshProUGUI m_textMeshPro;

		[Token(Token = "0x400125E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Text m_textMesh;

		[Token(Token = "0x400125F")]
		private const string label01 = "The <#0050FF>count is: </color>";

		[Token(Token = "0x4001260")]
		private const string label02 = "The <color=#0050FF>count is: </color>";

		[Token(Token = "0x4001261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material m_material01;

		[Token(Token = "0x4001262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material m_material02;

		[Token(Token = "0x6001067")]
		[Address(RVA = "0xAEDF6C", Offset = "0xAEDF6C", VA = "0xAEDF6C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7AA7C8", Offset = "0x7AA7C8")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6001068")]
		[Address(RVA = "0xAEDFE4", Offset = "0xAEDFE4", VA = "0xAEDFE4")]
		public Benchmark01_UGUI()
		{
		}
	}
	[Token(Token = "0x20002C3")]
	public class Benchmark02 : MonoBehaviour
	{
		[Token(Token = "0x4001267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int SpawnType;

		[Token(Token = "0x4001268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int NumberOfNPC;

		[Token(Token = "0x4001269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool IsTextObjectScaleStatic;

		[Token(Token = "0x400126A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextMeshProFloatingText floatingText_Script;

		[Token(Token = "0x600106F")]
		[Address(RVA = "0xAEDFEC", Offset = "0xAEDFEC", VA = "0xAEDFEC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001070")]
		[Address(RVA = "0xAEE640", Offset = "0xAEE640", VA = "0xAEE640")]
		public Benchmark02()
		{
		}
	}
	[Token(Token = "0x20002C4")]
	public class Benchmark03 : MonoBehaviour
	{
		[Token(Token = "0x20002C5")]
		public enum BenchmarkType
		{
			[Token(Token = "0x400126F")]
			TMP_SDF_MOBILE,
			[Token(Token = "0x4001270")]
			TMP_SDF__MOBILE_SSD,
			[Token(Token = "0x4001271")]
			TMP_SDF,
			[Token(Token = "0x4001272")]
			TMP_BITMAP_MOBILE,
			[Token(Token = "0x4001273")]
			TEXTMESH_BITMAP
		}

		[Token(Token = "0x400126B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int NumberOfSamples;

		[Token(Token = "0x400126C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public BenchmarkType Benchmark;

		[Token(Token = "0x400126D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Font SourceFont;

		[Token(Token = "0x6001071")]
		[Address(RVA = "0xAEE650", Offset = "0xAEE650", VA = "0xAEE650")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001072")]
		[Address(RVA = "0xAEE654", Offset = "0xAEE654", VA = "0xAEE654")]
		private void Start()
		{
		}

		[Token(Token = "0x6001073")]
		[Address(RVA = "0xAEEB10", Offset = "0xAEEB10", VA = "0xAEEB10")]
		public Benchmark03()
		{
		}
	}
	[Token(Token = "0x20002C6")]
	public class Benchmark04 : MonoBehaviour
	{
		[Token(Token = "0x4001274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int SpawnType;

		[Token(Token = "0x4001275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int MinPointSize;

		[Token(Token = "0x4001276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int MaxPointSize;

		[Token(Token = "0x4001277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int Steps;

		[Token(Token = "0x4001278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform m_Transform;

		[Token(Token = "0x6001074")]
		[Address(RVA = "0xAEEB20", Offset = "0xAEEB20", VA = "0xAEEB20")]
		private void Start()
		{
		}

		[Token(Token = "0x6001075")]
		[Address(RVA = "0xAEEE44", Offset = "0xAEEE44", VA = "0xAEEE44")]
		public Benchmark04()
		{
		}
	}
	[Token(Token = "0x20002C7")]
	public class CameraController : MonoBehaviour
	{
		[Token(Token = "0x20002C8")]
		public enum CameraModes
		{
			[Token(Token = "0x4001293")]
			Follow,
			[Token(Token = "0x4001294")]
			Isometric,
			[Token(Token = "0x4001295")]
			Free
		}

		[Token(Token = "0x4001279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform cameraTransform;

		[Token(Token = "0x400127A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform dummyTarget;

		[Token(Token = "0x400127B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform CameraTarget;

		[Token(Token = "0x400127C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float FollowDistance;

		[Token(Token = "0x400127D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float MaxFollowDistance;

		[Token(Token = "0x400127E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float MinFollowDistance;

		[Token(Token = "0x400127F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float ElevationAngle;

		[Token(Token = "0x4001280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float MaxElevationAngle;

		[Token(Token = "0x4001281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float MinElevationAngle;

		[Token(Token = "0x4001282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float OrbitalAngle;

		[Token(Token = "0x4001283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public CameraModes CameraMode;

		[Token(Token = "0x4001284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool MovementSmoothing;

		[Token(Token = "0x4001285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool RotationSmoothing;

		[Token(Token = "0x4001286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		private bool previousSmoothing;

		[Token(Token = "0x4001287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float MovementSmoothingValue;

		[Token(Token = "0x4001288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float RotationSmoothingValue;

		[Token(Token = "0x4001289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float MoveSensitivity;

		[Token(Token = "0x400128A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 currentVelocity;

		[Token(Token = "0x400128B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 desiredPosition;

		[Token(Token = "0x400128C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float mouseX;

		[Token(Token = "0x400128D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float mouseY;

		[Token(Token = "0x400128E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 moveVector;

		[Token(Token = "0x400128F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float mouseWheel;

		[Token(Token = "0x4001290")]
		private const string event_SmoothingValue = "Slider - Smoothing Value";

		[Token(Token = "0x4001291")]
		private const string event_FollowDistance = "Slider - Camera Zoom";

		[Token(Token = "0x6001076")]
		[Address(RVA = "0xF09AA0", Offset = "0xF09AA0", VA = "0xF09AA0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001077")]
		[Address(RVA = "0xF09B30", Offset = "0xF09B30", VA = "0xF09B30")]
		private void Start()
		{
		}

		[Token(Token = "0x6001078")]
		[Address(RVA = "0xF09C30", Offset = "0xF09C30", VA = "0xF09C30")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001079")]
		[Address(RVA = "0xF09F48", Offset = "0xF09F48", VA = "0xF09F48")]
		private void GetPlayerInput()
		{
		}

		[Token(Token = "0x600107A")]
		[Address(RVA = "0xF0A720", Offset = "0xF0A720", VA = "0xF0A720")]
		public CameraController()
		{
		}
	}
	[Token(Token = "0x20002C9")]
	public class ObjectSpin : MonoBehaviour
	{
		[Token(Token = "0x20002CA")]
		public enum MotionType
		{
			[Token(Token = "0x40012A1")]
			Rotation,
			[Token(Token = "0x40012A2")]
			BackAndForth,
			[Token(Token = "0x40012A3")]
			Translation
		}

		[Token(Token = "0x4001296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float SpinSpeed;

		[Token(Token = "0x4001297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int RotationRange;

		[Token(Token = "0x4001298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_transform;

		[Token(Token = "0x4001299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_time;

		[Token(Token = "0x400129A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 m_prevPOS;

		[Token(Token = "0x400129B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 m_initial_Rotation;

		[Token(Token = "0x400129C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 m_initial_Position;

		[Token(Token = "0x400129D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Color32 m_lightColor;

		[Token(Token = "0x400129E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int frames;

		[Token(Token = "0x400129F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public MotionType Motion;

		[Token(Token = "0x600107B")]
		[Address(RVA = "0x12FA908", Offset = "0x12FA908", VA = "0x12FA908")]
		private void Awake()
		{
		}

		[Token(Token = "0x600107C")]
		[Address(RVA = "0x12FAA38", Offset = "0x12FAA38", VA = "0x12FAA38")]
		private void Update()
		{
		}

		[Token(Token = "0x600107D")]
		[Address(RVA = "0x12FAB74", Offset = "0x12FAB74", VA = "0x12FAB74")]
		public ObjectSpin()
		{
		}
	}
	[Token(Token = "0x20002CB")]
	public class ShaderPropAnimator : MonoBehaviour
	{
		[Token(Token = "0x20002CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x79788C", Offset = "0x79788C")]
		private sealed class <AnimateProperties>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ShaderPropAnimator <>4__this;

			[Token(Token = "0x1700025D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001085")]
				[Address(RVA = "0xCC06B8", Offset = "0xCC06B8", VA = "0xCC06B8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700025E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001087")]
				[Address(RVA = "0xCC0700", Offset = "0xCC0700", VA = "0xCC0700", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001082")]
			[Address(RVA = "0xCC051C", Offset = "0xCC051C", VA = "0xCC051C")]
			[DebuggerHidden]
			public <AnimateProperties>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6001083")]
			[Address(RVA = "0xCC0548", Offset = "0xCC0548", VA = "0xCC0548", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001084")]
			[Address(RVA = "0xCC054C", Offset = "0xCC054C", VA = "0xCC054C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001086")]
			[Address(RVA = "0xCC06C0", Offset = "0xCC06C0", VA = "0xCC06C0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40012A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Renderer m_Renderer;

		[Token(Token = "0x40012A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material m_Material;

		[Token(Token = "0x40012A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve GlowCurve;

		[Token(Token = "0x40012A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_frame;

		[Token(Token = "0x600107E")]
		[Address(RVA = "0xC91938", Offset = "0xC91938", VA = "0xC91938")]
		private void Awake()
		{
		}

		[Token(Token = "0x600107F")]
		[Address(RVA = "0xC919B8", Offset = "0xC919B8", VA = "0xC919B8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001080")]
		[Address(RVA = "0xC919E4", Offset = "0xC919E4", VA = "0xC919E4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7AA878", Offset = "0x7AA878")]
		private IEnumerator AnimateProperties()
		{
			return null;
		}

		[Token(Token = "0x6001081")]
		[Address(RVA = "0xC91A5C", Offset = "0xC91A5C", VA = "0xC91A5C")]
		public ShaderPropAnimator()
		{
		}
	}
	[Token(Token = "0x20002CD")]
	public class SimpleScript : MonoBehaviour
	{
		[Token(Token = "0x40012AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TextMeshPro m_textMeshPro;

		[Token(Token = "0x40012AC")]
		private const string label = "The <#0050FF>count is: </color>{0:2}";

		[Token(Token = "0x40012AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_frame;

		[Token(Token = "0x6001088")]
		[Address(RVA = "0xC96598", Offset = "0xC96598", VA = "0xC96598")]
		private void Start()
		{
		}

		[Token(Token = "0x6001089")]
		[Address(RVA = "0xC96660", Offset = "0xC96660", VA = "0xC96660")]
		private void Update()
		{
		}

		[Token(Token = "0x600108A")]
		[Address(RVA = "0xC966F8", Offset = "0xC966F8", VA = "0xC966F8")]
		public SimpleScript()
		{
		}
	}
	[Token(Token = "0x20002CE")]
	public class SkewTextExample : MonoBehaviour
	{
		[Token(Token = "0x20002CF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x79789C", Offset = "0x79789C")]
		private sealed class <WarpText>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SkewTextExample <>4__this;

			[Token(Token = "0x40012B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <old_CurveScale>5__2;

			[Token(Token = "0x40012B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <old_ShearValue>5__3;

			[Token(Token = "0x40012B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private AnimationCurve <old_curve>5__4;

			[Token(Token = "0x1700025F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001093")]
				[Address(RVA = "0xCC0FC8", Offset = "0xCC0FC8", VA = "0xCC0FC8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000260")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001095")]
				[Address(RVA = "0xCC1010", Offset = "0xCC1010", VA = "0xCC1010", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001090")]
			[Address(RVA = "0xCC0708", Offset = "0xCC0708", VA = "0xCC0708")]
			[DebuggerHidden]
			public <WarpText>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6001091")]
			[Address(RVA = "0xCC0734", Offset = "0xCC0734", VA = "0xCC0734", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001092")]
			[Address(RVA = "0xCC0738", Offset = "0xCC0738", VA = "0xCC0738", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001094")]
			[Address(RVA = "0xCC0FD0", Offset = "0xCC0FD0", VA = "0xCC0FD0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40012AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x40012AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve VertexCurve;

		[Token(Token = "0x40012B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float CurveScale;

		[Token(Token = "0x40012B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float ShearAmount;

		[Token(Token = "0x600108B")]
		[Address(RVA = "0xDBC754", Offset = "0xDBC754", VA = "0xDBC754")]
		private void Awake()
		{
		}

		[Token(Token = "0x600108C")]
		[Address(RVA = "0xDBC7C0", Offset = "0xDBC7C0", VA = "0xDBC7C0")]
		private void Start()
		{
		}

		[Token(Token = "0x600108D")]
		[Address(RVA = "0xDBC864", Offset = "0xDBC864", VA = "0xDBC864")]
		private AnimationCurve CopyAnimationCurve(AnimationCurve curve)
		{
			return null;
		}

		[Token(Token = "0x600108E")]
		[Address(RVA = "0xDBC7EC", Offset = "0xDBC7EC", VA = "0xDBC7EC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7AA928", Offset = "0x7AA928")]
		private IEnumerator WarpText()
		{
			return null;
		}

		[Token(Token = "0x600108F")]
		[Address(RVA = "0xDBC8E8", Offset = "0xDBC8E8", VA = "0xDBC8E8")]
		public SkewTextExample()
		{
		}
	}
	[Token(Token = "0x20002D0")]
	public class TMP_ExampleScript_01 : MonoBehaviour
	{
		[Token(Token = "0x20002D1")]
		public enum objectType
		{
			[Token(Token = "0x40012BE")]
			TextMeshPro,
			[Token(Token = "0x40012BF")]
			TextMeshProUGUI
		}

		[Token(Token = "0x40012B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public objectType ObjectType;

		[Token(Token = "0x40012B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool isStatic;

		[Token(Token = "0x40012BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TMP_Text m_text;

		[Token(Token = "0x40012BB")]
		private const string k_label = "The count is <#0080ff>{0}</color>";

		[Token(Token = "0x40012BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int count;

		[Token(Token = "0x6001096")]
		[Address(RVA = "0xDC72C0", Offset = "0xDC72C0", VA = "0xDC72C0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001097")]
		[Address(RVA = "0xDC74DC", Offset = "0xDC74DC", VA = "0xDC74DC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001098")]
		[Address(RVA = "0xDC7574", Offset = "0xDC7574", VA = "0xDC7574")]
		public TMP_ExampleScript_01()
		{
		}
	}
	[Token(Token = "0x20002D2")]
	public class TMP_FrameRateCounter : MonoBehaviour
	{
		[Token(Token = "0x20002D3")]
		public enum FpsCounterAnchorPositions
		{
			[Token(Token = "0x40012CB")]
			TopLeft,
			[Token(Token = "0x40012CC")]
			BottomLeft,
			[Token(Token = "0x40012CD")]
			TopRight,
			[Token(Token = "0x40012CE")]
			BottomRight
		}

		[Token(Token = "0x40012C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float UpdateInterval;

		[Token(Token = "0x40012C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_LastInterval;

		[Token(Token = "0x40012C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_Frames;

		[Token(Token = "0x40012C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public FpsCounterAnchorPositions AnchorPosition;

		[Token(Token = "0x40012C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string htmlColorTag;

		[Token(Token = "0x40012C5")]
		private const string fpsLabel = "{0:2}</color> <#8080ff>FPS \n<#FF8000>{1:2} <#8080ff>MS";

		[Token(Token = "0x40012C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMeshPro m_TextMeshPro;

		[Token(Token = "0x40012C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform m_frameCounter_transform;

		[Token(Token = "0x40012C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Camera m_camera;

		[Token(Token = "0x40012C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private FpsCounterAnchorPositions last_AnchorPosition;

		[Token(Token = "0x6001099")]
		[Address(RVA = "0xDC757C", Offset = "0xDC757C", VA = "0xDC757C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600109A")]
		[Address(RVA = "0xDC79AC", Offset = "0xDC79AC", VA = "0xDC79AC")]
		private void Start()
		{
		}

		[Token(Token = "0x600109B")]
		[Address(RVA = "0xDC79D8", Offset = "0xDC79D8", VA = "0xDC79D8")]
		private void Update()
		{
		}

		[Token(Token = "0x600109C")]
		[Address(RVA = "0xDC77A4", Offset = "0xDC77A4", VA = "0xDC77A4")]
		private void Set_FrameCounter_Position(FpsCounterAnchorPositions anchor_position)
		{
		}

		[Token(Token = "0x600109D")]
		[Address(RVA = "0xDC7B48", Offset = "0xDC7B48", VA = "0xDC7B48")]
		public TMP_FrameRateCounter()
		{
		}
	}
	[Token(Token = "0x20002D4")]
	public class TMP_TextEventCheck : MonoBehaviour
	{
		[Token(Token = "0x40012CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TMP_TextEventHandler TextEventHandler;

		[Token(Token = "0x40012D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x600109E")]
		[Address(RVA = "0xDC7FE8", Offset = "0xDC7FE8", VA = "0xDC7FE8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600109F")]
		[Address(RVA = "0xDC82FC", Offset = "0xDC82FC", VA = "0xDC82FC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60010A0")]
		[Address(RVA = "0xDC85D8", Offset = "0xDC85D8", VA = "0xDC85D8")]
		private void OnCharacterSelection(char c, int index)
		{
		}

		[Token(Token = "0x60010A1")]
		[Address(RVA = "0xDC8818", Offset = "0xDC8818", VA = "0xDC8818")]
		private void OnSpriteSelection(char c, int index)
		{
		}

		[Token(Token = "0x60010A2")]
		[Address(RVA = "0xDC8A58", Offset = "0xDC8A58", VA = "0xDC8A58")]
		private void OnWordSelection(string word, int firstCharacterIndex, int length)
		{
		}

		[Token(Token = "0x60010A3")]
		[Address(RVA = "0xDC8D1C", Offset = "0xDC8D1C", VA = "0xDC8D1C")]
		private void OnLineSelection(string lineText, int firstCharacterIndex, int length)
		{
		}

		[Token(Token = "0x60010A4")]
		[Address(RVA = "0xDC8FE0", Offset = "0xDC8FE0", VA = "0xDC8FE0")]
		private void OnLinkSelection(string linkID, string linkText, int linkIndex)
		{
		}

		[Token(Token = "0x60010A5")]
		[Address(RVA = "0xDC9300", Offset = "0xDC9300", VA = "0xDC9300")]
		public TMP_TextEventCheck()
		{
		}
	}
	[Token(Token = "0x20002D5")]
	public class TMP_TextInfoDebugTool : MonoBehaviour
	{
		[Token(Token = "0x60010A6")]
		[Address(RVA = "0xDC9DDC", Offset = "0xDC9DDC", VA = "0xDC9DDC")]
		public TMP_TextInfoDebugTool()
		{
		}
	}
	[Token(Token = "0x20002D6")]
	public class TMP_TextSelector_A : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x40012D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TextMeshPro m_TextMeshPro;

		[Token(Token = "0x40012D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Camera m_Camera;

		[Token(Token = "0x40012D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_isHoveringObject;

		[Token(Token = "0x40012D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int m_selectedLink;

		[Token(Token = "0x40012D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int m_lastCharIndex;

		[Token(Token = "0x40012D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int m_lastWordIndex;

		[Token(Token = "0x60010A7")]
		[Address(RVA = "0xDC9DE4", Offset = "0xDC9DE4", VA = "0xDC9DE4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010A8")]
		[Address(RVA = "0xDC9E88", Offset = "0xDC9E88", VA = "0xDC9E88")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60010A9")]
		[Address(RVA = "0xDCA5A8", Offset = "0xDCA5A8", VA = "0xDCA5A8", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60010AA")]
		[Address(RVA = "0xDCA62C", Offset = "0xDCA62C", VA = "0xDCA62C", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60010AB")]
		[Address(RVA = "0xDCA6AC", Offset = "0xDCA6AC", VA = "0xDCA6AC")]
		public TMP_TextSelector_A()
		{
		}
	}
	[Token(Token = "0x20002D7")]
	public class TMP_TextSelector_B : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IPointerClickHandler, IPointerUpHandler
	{
		[Token(Token = "0x40012D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RectTransform TextPopup_Prefab_01;

		[Token(Token = "0x40012D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RectTransform m_TextPopup_RectTransform;

		[Token(Token = "0x40012D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextMeshProUGUI m_TextPopup_TMPComponent;

		[Token(Token = "0x40012DA")]
		private const string k_LinkText = "You have selected link <#ffff00>";

		[Token(Token = "0x40012DB")]
		private const string k_WordText = "Word Index: <#ffff00>";

		[Token(Token = "0x40012DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMeshProUGUI m_TextMeshPro;

		[Token(Token = "0x40012DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Canvas m_Canvas;

		[Token(Token = "0x40012DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Camera m_Camera;

		[Token(Token = "0x40012DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool isHoveringObject;

		[Token(Token = "0x40012E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int m_selectedWord;

		[Token(Token = "0x40012E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_selectedLink;

		[Token(Token = "0x40012E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_lastIndex;

		[Token(Token = "0x40012E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Matrix4x4 m_matrix;

		[Token(Token = "0x40012E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private TMP_MeshInfo[] m_cachedMeshInfoVertexData;

		[Token(Token = "0x60010AC")]
		[Address(RVA = "0xDCA6C4", Offset = "0xDCA6C4", VA = "0xDCA6C4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010AD")]
		[Address(RVA = "0xDCA8A0", Offset = "0xDCA8A0", VA = "0xDCA8A0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60010AE")]
		[Address(RVA = "0xDCA990", Offset = "0xDCA990", VA = "0xDCA990")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60010AF")]
		[Address(RVA = "0xDCAA80", Offset = "0xDCAA80", VA = "0xDCAA80")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x60010B0")]
		[Address(RVA = "0xDCAB38", Offset = "0xDCAB38", VA = "0xDCAB38")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60010B1")]
		[Address(RVA = "0xDCC030", Offset = "0xDCC030", VA = "0xDCC030", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60010B2")]
		[Address(RVA = "0xDCC03C", Offset = "0xDCC03C", VA = "0xDCC03C", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60010B3")]
		[Address(RVA = "0xDCC044", Offset = "0xDCC044", VA = "0xDCC044", Slot = "6")]
		public void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60010B4")]
		[Address(RVA = "0xDCC048", Offset = "0xDCC048", VA = "0xDCC048", Slot = "7")]
		public void OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60010B5")]
		[Address(RVA = "0xDCB7A0", Offset = "0xDCB7A0", VA = "0xDCB7A0")]
		private void RestoreCachedVertexAttributes(int index)
		{
		}

		[Token(Token = "0x60010B6")]
		[Address(RVA = "0xDCC04C", Offset = "0xDCC04C", VA = "0xDCC04C")]
		public TMP_TextSelector_B()
		{
		}
	}
	[Token(Token = "0x20002D8")]
	public class TMP_UiFrameRateCounter : MonoBehaviour
	{
		[Token(Token = "0x20002D9")]
		public enum FpsCounterAnchorPositions
		{
			[Token(Token = "0x40012EF")]
			TopLeft,
			[Token(Token = "0x40012F0")]
			BottomLeft,
			[Token(Token = "0x40012F1")]
			TopRight,
			[Token(Token = "0x40012F2")]
			BottomRight
		}

		[Token(Token = "0x40012E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float UpdateInterval;

		[Token(Token = "0x40012E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_LastInterval;

		[Token(Token = "0x40012E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_Frames;

		[Token(Token = "0x40012E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public FpsCounterAnchorPositions AnchorPosition;

		[Token(Token = "0x40012E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string htmlColorTag;

		[Token(Token = "0x40012EA")]
		private const string fpsLabel = "{0:2}</color> <#8080ff>FPS \n<#FF8000>{1:2} <#8080ff>MS";

		[Token(Token = "0x40012EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMeshProUGUI m_TextMeshPro;

		[Token(Token = "0x40012EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private RectTransform m_frameCounter_transform;

		[Token(Token = "0x40012ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private FpsCounterAnchorPositions last_AnchorPosition;

		[Token(Token = "0x60010B7")]
		[Address(RVA = "0xDCC064", Offset = "0xDCC064", VA = "0xDCC064")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010B8")]
		[Address(RVA = "0xDCC4C8", Offset = "0xDCC4C8", VA = "0xDCC4C8")]
		private void Start()
		{
		}

		[Token(Token = "0x60010B9")]
		[Address(RVA = "0xDCC4F4", Offset = "0xDCC4F4", VA = "0xDCC4F4")]
		private void Update()
		{
		}

		[Token(Token = "0x60010BA")]
		[Address(RVA = "0xDCC284", Offset = "0xDCC284", VA = "0xDCC284")]
		private void Set_FrameCounter_Position(FpsCounterAnchorPositions anchor_position)
		{
		}

		[Token(Token = "0x60010BB")]
		[Address(RVA = "0xDCC664", Offset = "0xDCC664", VA = "0xDCC664")]
		public TMP_UiFrameRateCounter()
		{
		}
	}
	[Token(Token = "0x20002DA")]
	public class TMPro_InstructionOverlay : MonoBehaviour
	{
		[Token(Token = "0x20002DB")]
		public enum FpsCounterAnchorPositions
		{
			[Token(Token = "0x40012FA")]
			TopLeft,
			[Token(Token = "0x40012FB")]
			BottomLeft,
			[Token(Token = "0x40012FC")]
			TopRight,
			[Token(Token = "0x40012FD")]
			BottomRight
		}

		[Token(Token = "0x40012F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FpsCounterAnchorPositions AnchorPosition;

		[Token(Token = "0x40012F4")]
		private const string instructions = "Camera Control - <#ffff00>Shift + RMB\n</color>Zoom - <#ffff00>Mouse wheel.";

		[Token(Token = "0x40012F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextMeshPro m_TextMeshPro;

		[Token(Token = "0x40012F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextContainer m_textContainer;

		[Token(Token = "0x40012F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform m_frameCounter_transform;

		[Token(Token = "0x40012F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Camera m_camera;

		[Token(Token = "0x60010BC")]
		[Address(RVA = "0xDCC67C", Offset = "0xDCC67C", VA = "0xDCC67C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010BD")]
		[Address(RVA = "0xDCC8FC", Offset = "0xDCC8FC", VA = "0xDCC8FC")]
		private void Set_FrameCounter_Position(FpsCounterAnchorPositions anchor_position)
		{
		}

		[Token(Token = "0x60010BE")]
		[Address(RVA = "0xDCCA24", Offset = "0xDCCA24", VA = "0xDCCA24")]
		public TMPro_InstructionOverlay()
		{
		}
	}
	[Token(Token = "0x20002DC")]
	public class TeleType : MonoBehaviour
	{
		[Token(Token = "0x20002DD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7978AC", Offset = "0x7978AC")]
		private sealed class <Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001301")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001302")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001303")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TeleType <>4__this;

			[Token(Token = "0x4001304")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <totalVisibleCharacters>5__2;

			[Token(Token = "0x4001305")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <counter>5__3;

			[Token(Token = "0x17000261")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010C5")]
				[Address(RVA = "0xCC209C", Offset = "0xCC209C", VA = "0xCC209C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000262")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010C7")]
				[Address(RVA = "0xCC20E4", Offset = "0xCC20E4", VA = "0xCC20E4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010C2")]
			[Address(RVA = "0xCC1E14", Offset = "0xCC1E14", VA = "0xCC1E14")]
			[DebuggerHidden]
			public <Start>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x60010C3")]
			[Address(RVA = "0xCC1E40", Offset = "0xCC1E40", VA = "0xCC1E40", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010C4")]
			[Address(RVA = "0xCC1E44", Offset = "0xCC1E44", VA = "0xCC1E44", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010C6")]
			[Address(RVA = "0xCC20A4", Offset = "0xCC20A4", VA = "0xCC20A4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40012FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string label01;

		[Token(Token = "0x40012FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string label02;

		[Token(Token = "0x4001300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_textMeshPro;

		[Token(Token = "0x60010BF")]
		[Address(RVA = "0xDCCFA0", Offset = "0xDCCFA0", VA = "0xDCCFA0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010C0")]
		[Address(RVA = "0xDCD048", Offset = "0xDCD048", VA = "0xDCD048")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7AA9D8", Offset = "0x7AA9D8")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x60010C1")]
		[Address(RVA = "0xDCD0C0", Offset = "0xDCD0C0", VA = "0xDCD0C0")]
		public TeleType()
		{
		}
	}
	[Token(Token = "0x20002DE")]
	public class TextConsoleSimulator : MonoBehaviour
	{
		[Token(Token = "0x20002DF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7978BC", Offset = "0x7978BC")]
		private sealed class <RevealCharacters>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001308")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001309")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400130A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TMP_Text textComponent;

			[Token(Token = "0x400130B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TextConsoleSimulator <>4__this;

			[Token(Token = "0x400130C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x400130D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <totalVisibleCharacters>5__3;

			[Token(Token = "0x400130E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private int <visibleCount>5__4;

			[Token(Token = "0x17000263")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010D3")]
				[Address(RVA = "0xCC2C64", Offset = "0xCC2C64", VA = "0xCC2C64", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000264")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010D5")]
				[Address(RVA = "0xCC2CAC", Offset = "0xCC2CAC", VA = "0xCC2CAC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010D0")]
			[Address(RVA = "0xCC2AB4", Offset = "0xCC2AB4", VA = "0xCC2AB4")]
			[DebuggerHidden]
			public <RevealCharacters>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x60010D1")]
			[Address(RVA = "0xCC2AE0", Offset = "0xCC2AE0", VA = "0xCC2AE0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010D2")]
			[Address(RVA = "0xCC2AE4", Offset = "0xCC2AE4", VA = "0xCC2AE4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010D4")]
			[Address(RVA = "0xCC2C6C", Offset = "0xCC2C6C", VA = "0xCC2C6C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7978CC", Offset = "0x7978CC")]
		private sealed class <RevealWords>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400130F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001310")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001311")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TMP_Text textComponent;

			[Token(Token = "0x4001312")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <totalWordCount>5__2;

			[Token(Token = "0x4001313")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <totalVisibleCharacters>5__3;

			[Token(Token = "0x4001314")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <counter>5__4;

			[Token(Token = "0x4001315")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private int <visibleCount>5__5;

			[Token(Token = "0x17000265")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010D9")]
				[Address(RVA = "0xCC2ED8", Offset = "0xCC2ED8", VA = "0xCC2ED8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000266")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010DB")]
				[Address(RVA = "0xCC2F20", Offset = "0xCC2F20", VA = "0xCC2F20", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010D6")]
			[Address(RVA = "0xCC2CB4", Offset = "0xCC2CB4", VA = "0xCC2CB4")]
			[DebuggerHidden]
			public <RevealWords>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x60010D7")]
			[Address(RVA = "0xCC2CE0", Offset = "0xCC2CE0", VA = "0xCC2CE0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010D8")]
			[Address(RVA = "0xCC2CE4", Offset = "0xCC2CE4", VA = "0xCC2CE4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010DA")]
			[Address(RVA = "0xCC2EE0", Offset = "0xCC2EE0", VA = "0xCC2EE0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x4001307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool hasTextChanged;

		[Token(Token = "0x60010C8")]
		[Address(RVA = "0xE7EBDC", Offset = "0xE7EBDC", VA = "0xE7EBDC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010C9")]
		[Address(RVA = "0xE7EC48", Offset = "0xE7EC48", VA = "0xE7EC48")]
		private void Start()
		{
		}

		[Token(Token = "0x60010CA")]
		[Address(RVA = "0xE7ED0C", Offset = "0xE7ED0C", VA = "0xE7ED0C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60010CB")]
		[Address(RVA = "0xE7EDFC", Offset = "0xE7EDFC", VA = "0xE7EDFC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60010CC")]
		[Address(RVA = "0xE7EEEC", Offset = "0xE7EEEC", VA = "0xE7EEEC")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x60010CD")]
		[Address(RVA = "0xE7EC78", Offset = "0xE7EC78", VA = "0xE7EC78")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7AAA88", Offset = "0x7AAA88")]
		private IEnumerator RevealCharacters(TMP_Text textComponent)
		{
			return null;
		}

		[Token(Token = "0x60010CE")]
		[Address(RVA = "0xE7EEF8", Offset = "0xE7EEF8", VA = "0xE7EEF8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7AAAE8", Offset = "0x7AAAE8")]
		private IEnumerator RevealWords(TMP_Text textComponent)
		{
			return null;
		}

		[Token(Token = "0x60010CF")]
		[Address(RVA = "0xE7EF70", Offset = "0xE7EF70", VA = "0xE7EF70")]
		public TextConsoleSimulator()
		{
		}
	}
	[Token(Token = "0x20002E1")]
	public class TextMeshProFloatingText : MonoBehaviour
	{
		[Token(Token = "0x20002E2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7978DC", Offset = "0x7978DC")]
		private sealed class <DisplayTextMeshProFloatingText>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001323")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001324")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001325")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TextMeshProFloatingText <>4__this;

			[Token(Token = "0x4001326")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <CountDuration>5__2;

			[Token(Token = "0x4001327")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <starting_Count>5__3;

			[Token(Token = "0x4001328")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <current_Count>5__4;

			[Token(Token = "0x4001329")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <start_pos>5__5;

			[Token(Token = "0x400132A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Color32 <start_color>5__6;

			[Token(Token = "0x400132B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <alpha>5__7;

			[Token(Token = "0x400132C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <fadeDuration>5__8;

			[Token(Token = "0x17000267")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010E5")]
				[Address(RVA = "0xCC3898", Offset = "0xCC3898", VA = "0xCC3898", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000268")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010E7")]
				[Address(RVA = "0xCC38E0", Offset = "0xCC38E0", VA = "0xCC38E0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010E2")]
			[Address(RVA = "0xCC33FC", Offset = "0xCC33FC", VA = "0xCC33FC")]
			[DebuggerHidden]
			public <DisplayTextMeshProFloatingText>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x60010E3")]
			[Address(RVA = "0xCC3428", Offset = "0xCC3428", VA = "0xCC3428", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010E4")]
			[Address(RVA = "0xCC342C", Offset = "0xCC342C", VA = "0xCC342C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010E6")]
			[Address(RVA = "0xCC38A0", Offset = "0xCC38A0", VA = "0xCC38A0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002E3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7978EC", Offset = "0x7978EC")]
		private sealed class <DisplayTextMeshFloatingText>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400132D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400132E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400132F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TextMeshProFloatingText <>4__this;

			[Token(Token = "0x4001330")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <CountDuration>5__2;

			[Token(Token = "0x4001331")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <starting_Count>5__3;

			[Token(Token = "0x4001332")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <current_Count>5__4;

			[Token(Token = "0x4001333")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <start_pos>5__5;

			[Token(Token = "0x4001334")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Color32 <start_color>5__6;

			[Token(Token = "0x4001335")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <alpha>5__7;

			[Token(Token = "0x4001336")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <fadeDuration>5__8;

			[Token(Token = "0x17000269")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010EB")]
				[Address(RVA = "0xCC33AC", Offset = "0xCC33AC", VA = "0xCC33AC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700026A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010ED")]
				[Address(RVA = "0xCC33F4", Offset = "0xCC33F4", VA = "0xCC33F4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010E8")]
			[Address(RVA = "0xCC2F28", Offset = "0xCC2F28", VA = "0xCC2F28")]
			[DebuggerHidden]
			public <DisplayTextMeshFloatingText>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x60010E9")]
			[Address(RVA = "0xCC2F54", Offset = "0xCC2F54", VA = "0xCC2F54", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010EA")]
			[Address(RVA = "0xCC2F58", Offset = "0xCC2F58", VA = "0xCC2F58", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010EC")]
			[Address(RVA = "0xCC33B4", Offset = "0xCC33B4", VA = "0xCC33B4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Font TheFont;

		[Token(Token = "0x4001317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject m_floatingText;

		[Token(Token = "0x4001318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextMeshPro m_textMeshPro;

		[Token(Token = "0x4001319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMesh m_textMesh;

		[Token(Token = "0x400131A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform m_transform;

		[Token(Token = "0x400131B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform m_floatingText_Transform;

		[Token(Token = "0x400131C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform m_cameraTransform;

		[Token(Token = "0x400131D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 lastPOS;

		[Token(Token = "0x400131E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Quaternion lastRotation;

		[Token(Token = "0x400131F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int SpawnType;

		[Token(Token = "0x4001320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool IsTextObjectScaleStatic;

		[Token(Token = "0x4001321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static WaitForEndOfFrame k_WaitForEndOfFrame;

		[Token(Token = "0x4001322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static WaitForSeconds[] k_WaitForSecondsRandom;

		[Token(Token = "0x60010DC")]
		[Address(RVA = "0xE7F314", Offset = "0xE7F314", VA = "0xE7F314")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010DD")]
		[Address(RVA = "0xE7F3FC", Offset = "0xE7F3FC", VA = "0xE7F3FC")]
		private void Start()
		{
		}

		[Token(Token = "0x60010DE")]
		[Address(RVA = "0xE7F818", Offset = "0xE7F818", VA = "0xE7F818")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7AABE8", Offset = "0x7AABE8")]
		public IEnumerator DisplayTextMeshProFloatingText()
		{
			return null;
		}

		[Token(Token = "0x60010DF")]
		[Address(RVA = "0xE7F890", Offset = "0xE7F890", VA = "0xE7F890")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7AAC48", Offset = "0x7AAC48")]
		public IEnumerator DisplayTextMeshFloatingText()
		{
			return null;
		}

		[Token(Token = "0x60010E0")]
		[Address(RVA = "0xE7F908", Offset = "0xE7F908", VA = "0xE7F908")]
		public TextMeshProFloatingText()
		{
		}
	}
	[Token(Token = "0x20002E4")]
	public class TextMeshSpawner : MonoBehaviour
	{
		[Token(Token = "0x4001337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int SpawnType;

		[Token(Token = "0x4001338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int NumberOfNPC;

		[Token(Token = "0x4001339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Font TheFont;

		[Token(Token = "0x400133A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextMeshProFloatingText floatingText_Script;

		[Token(Token = "0x60010EE")]
		[Address(RVA = "0xE80068", Offset = "0xE80068", VA = "0xE80068")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010EF")]
		[Address(RVA = "0xE8006C", Offset = "0xE8006C", VA = "0xE8006C")]
		private void Start()
		{
		}

		[Token(Token = "0x60010F0")]
		[Address(RVA = "0xE803B0", Offset = "0xE803B0", VA = "0xE803B0")]
		public TextMeshSpawner()
		{
		}
	}
	[Token(Token = "0x20002E5")]
	public class VertexColorCycler : MonoBehaviour
	{
		[Token(Token = "0x20002E6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7978FC", Offset = "0x7978FC")]
		private sealed class <AnimateVertexColors>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400133C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400133D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400133E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VertexColorCycler <>4__this;

			[Token(Token = "0x400133F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x4001340")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <currentCharacter>5__3;

			[Token(Token = "0x1700026B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010F8")]
				[Address(RVA = "0xCC65B8", Offset = "0xCC65B8", VA = "0xCC65B8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700026C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010FA")]
				[Address(RVA = "0xCC6600", Offset = "0xCC6600", VA = "0xCC6600", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010F5")]
			[Address(RVA = "0xCC62A8", Offset = "0xCC62A8", VA = "0xCC62A8")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x60010F6")]
			[Address(RVA = "0xCC62D4", Offset = "0xCC62D4", VA = "0xCC62D4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010F7")]
			[Address(RVA = "0xCC62D8", Offset = "0xCC62D8", VA = "0xCC62D8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010F9")]
			[Address(RVA = "0xCC65C0", Offset = "0xCC65C0", VA = "0xCC65C0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400133B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x60010F1")]
		[Address(RVA = "0xACEADC", Offset = "0xACEADC", VA = "0xACEADC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010F2")]
		[Address(RVA = "0xACEB38", Offset = "0xACEB38", VA = "0xACEB38")]
		private void Start()
		{
		}

		[Token(Token = "0x60010F3")]
		[Address(RVA = "0xACEB64", Offset = "0xACEB64", VA = "0xACEB64")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7AAD48", Offset = "0x7AAD48")]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x60010F4")]
		[Address(RVA = "0xACEBDC", Offset = "0xACEBDC", VA = "0xACEBDC")]
		public VertexColorCycler()
		{
		}
	}
	[Token(Token = "0x20002E7")]
	public class VertexJitter : MonoBehaviour
	{
		[Token(Token = "0x20002E8")]
		private struct VertexAnim
		{
			[Token(Token = "0x4001346")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float angleRange;

			[Token(Token = "0x4001347")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float angle;

			[Token(Token = "0x4001348")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float speed;
		}

		[Token(Token = "0x20002E9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x79790C", Offset = "0x79790C")]
		private sealed class <AnimateVertexColors>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001349")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400134A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400134B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VertexJitter <>4__this;

			[Token(Token = "0x400134C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x400134D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <loopCount>5__3;

			[Token(Token = "0x400134E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private VertexAnim[] <vertexAnim>5__4;

			[Token(Token = "0x400134F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TMP_MeshInfo[] <cachedMeshInfo>5__5;

			[Token(Token = "0x1700026D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001105")]
				[Address(RVA = "0xCC6EB0", Offset = "0xCC6EB0", VA = "0xCC6EB0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700026E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001107")]
				[Address(RVA = "0xCC6EF8", Offset = "0xCC6EF8", VA = "0xCC6EF8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001102")]
			[Address(RVA = "0xCC6608", Offset = "0xCC6608", VA = "0xCC6608")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6001103")]
			[Address(RVA = "0xCC6634", Offset = "0xCC6634", VA = "0xCC6634", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001104")]
			[Address(RVA = "0xCC6638", Offset = "0xCC6638", VA = "0xCC6638", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001106")]
			[Address(RVA = "0xCC6EB8", Offset = "0xCC6EB8", VA = "0xCC6EB8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float AngleMultiplier;

		[Token(Token = "0x4001342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float SpeedMultiplier;

		[Token(Token = "0x4001343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float CurveScale;

		[Token(Token = "0x4001344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x4001345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool hasTextChanged;

		[Token(Token = "0x60010FB")]
		[Address(RVA = "0xACEBE4", Offset = "0xACEBE4", VA = "0xACEBE4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010FC")]
		[Address(RVA = "0xACEC40", Offset = "0xACEC40", VA = "0xACEC40")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60010FD")]
		[Address(RVA = "0xACED30", Offset = "0xACED30", VA = "0xACED30")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60010FE")]
		[Address(RVA = "0xACEE20", Offset = "0xACEE20", VA = "0xACEE20")]
		private void Start()
		{
		}

		[Token(Token = "0x60010FF")]
		[Address(RVA = "0xACEEC4", Offset = "0xACEEC4", VA = "0xACEEC4")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x6001100")]
		[Address(RVA = "0xACEE4C", Offset = "0xACEE4C", VA = "0xACEE4C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7AADF8", Offset = "0x7AADF8")]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x6001101")]
		[Address(RVA = "0xACEF4C", Offset = "0xACEF4C", VA = "0xACEF4C")]
		public VertexJitter()
		{
		}
	}
	[Token(Token = "0x20002EA")]
	public class VertexShakeA : MonoBehaviour
	{
		[Token(Token = "0x20002EB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x79791C", Offset = "0x79791C")]
		private sealed class <AnimateVertexColors>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001356")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001357")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001358")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VertexShakeA <>4__this;

			[Token(Token = "0x4001359")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x400135A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3[][] <copyOfVertices>5__3;

			[Token(Token = "0x1700026F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001112")]
				[Address(RVA = "0xCC7958", Offset = "0xCC7958", VA = "0xCC7958", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000270")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001114")]
				[Address(RVA = "0xCC79A0", Offset = "0xCC79A0", VA = "0xCC79A0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600110F")]
			[Address(RVA = "0xCC6F00", Offset = "0xCC6F00", VA = "0xCC6F00")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6001110")]
			[Address(RVA = "0xCC6F2C", Offset = "0xCC6F2C", VA = "0xCC6F2C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001111")]
			[Address(RVA = "0xCC6F30", Offset = "0xCC6F30", VA = "0xCC6F30", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001113")]
			[Address(RVA = "0xCC7960", Offset = "0xCC7960", VA = "0xCC7960", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float AngleMultiplier;

		[Token(Token = "0x4001351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float SpeedMultiplier;

		[Token(Token = "0x4001352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float ScaleMultiplier;

		[Token(Token = "0x4001353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RotationMultiplier;

		[Token(Token = "0x4001354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x4001355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool hasTextChanged;

		[Token(Token = "0x6001108")]
		[Address(RVA = "0xACEF64", Offset = "0xACEF64", VA = "0xACEF64")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001109")]
		[Address(RVA = "0xACEFC0", Offset = "0xACEFC0", VA = "0xACEFC0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600110A")]
		[Address(RVA = "0xACF0B0", Offset = "0xACF0B0", VA = "0xACF0B0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600110B")]
		[Address(RVA = "0xACF1A0", Offset = "0xACF1A0", VA = "0xACF1A0")]
		private void Start()
		{
		}

		[Token(Token = "0x600110C")]
		[Address(RVA = "0xACF244", Offset = "0xACF244", VA = "0xACF244")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x600110D")]
		[Address(RVA = "0xACF1CC", Offset = "0xACF1CC", VA = "0xACF1CC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7AAEA8", Offset = "0x7AAEA8")]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x600110E")]
		[Address(RVA = "0xACF2BC", Offset = "0xACF2BC", VA = "0xACF2BC")]
		public VertexShakeA()
		{
		}
	}
	[Token(Token = "0x20002EC")]
	public class VertexShakeB : MonoBehaviour
	{
		[Token(Token = "0x20002ED")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x79792C", Offset = "0x79792C")]
		private sealed class <AnimateVertexColors>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001360")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001361")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001362")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VertexShakeB <>4__this;

			[Token(Token = "0x4001363")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x4001364")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3[][] <copyOfVertices>5__3;

			[Token(Token = "0x17000271")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600111F")]
				[Address(RVA = "0x1E7D198", Offset = "0x1E7D198", VA = "0x1E7D198", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000272")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001121")]
				[Address(RVA = "0x1E7D1E0", Offset = "0x1E7D1E0", VA = "0x1E7D1E0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600111C")]
			[Address(RVA = "0x1E7C2B4", Offset = "0x1E7C2B4", VA = "0x1E7C2B4")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x600111D")]
			[Address(RVA = "0x1E7C2E0", Offset = "0x1E7C2E0", VA = "0x1E7C2E0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600111E")]
			[Address(RVA = "0x1E7C2E4", Offset = "0x1E7C2E4", VA = "0x1E7C2E4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001120")]
			[Address(RVA = "0x1E7D1A0", Offset = "0x1E7D1A0", VA = "0x1E7D1A0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400135B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float AngleMultiplier;

		[Token(Token = "0x400135C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float SpeedMultiplier;

		[Token(Token = "0x400135D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float CurveScale;

		[Token(Token = "0x400135E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x400135F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool hasTextChanged;

		[Token(Token = "0x6001115")]
		[Address(RVA = "0xACF2CC", Offset = "0xACF2CC", VA = "0xACF2CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001116")]
		[Address(RVA = "0xACF328", Offset = "0xACF328", VA = "0xACF328")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001117")]
		[Address(RVA = "0xACF418", Offset = "0xACF418", VA = "0xACF418")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001118")]
		[Address(RVA = "0xACF508", Offset = "0xACF508", VA = "0xACF508")]
		private void Start()
		{
		}

		[Token(Token = "0x6001119")]
		[Address(RVA = "0xACF5AC", Offset = "0xACF5AC", VA = "0xACF5AC")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x600111A")]
		[Address(RVA = "0xACF534", Offset = "0xACF534", VA = "0xACF534")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7AAF58", Offset = "0x7AAF58")]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x600111B")]
		[Address(RVA = "0xACF624", Offset = "0xACF624", VA = "0xACF624")]
		public VertexShakeB()
		{
		}
	}
	[Token(Token = "0x20002EE")]
	public class VertexZoom : MonoBehaviour
	{
		[Token(Token = "0x20002EF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x79793C", Offset = "0x79793C")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x400136A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<float> modifiedCharScale;

			[Token(Token = "0x400136B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Comparison<int> <>9__0;

			[Token(Token = "0x6001129")]
			[Address(RVA = "0x1E7D1E8", Offset = "0x1E7D1E8", VA = "0x1E7D1E8")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x600112A")]
			[Address(RVA = "0x1E7D1F0", Offset = "0x1E7D1F0", VA = "0x1E7D1F0")]
			internal int <AnimateVertexColors>b__0(int a, int b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x20002F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x79794C", Offset = "0x79794C")]
		private sealed class <AnimateVertexColors>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400136C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400136D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400136E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VertexZoom <>4__this;

			[Token(Token = "0x400136F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass10_0 <>8__1;

			[Token(Token = "0x4001370")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x4001371")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TMP_MeshInfo[] <cachedMeshInfoVertexData>5__3;

			[Token(Token = "0x4001372")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private List<int> <scaleSortingOrder>5__4;

			[Token(Token = "0x17000273")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600112E")]
				[Address(RVA = "0x1E7DEA4", Offset = "0x1E7DEA4", VA = "0x1E7DEA4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000274")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001130")]
				[Address(RVA = "0x1E7DEEC", Offset = "0x1E7DEEC", VA = "0x1E7DEEC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600112B")]
			[Address(RVA = "0x1E7D2B0", Offset = "0x1E7D2B0", VA = "0x1E7D2B0")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x600112C")]
			[Address(RVA = "0x1E7D2DC", Offset = "0x1E7D2DC", VA = "0x1E7D2DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600112D")]
			[Address(RVA = "0x1E7D2E0", Offset = "0x1E7D2E0", VA = "0x1E7D2E0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600112F")]
			[Address(RVA = "0x1E7DEAC", Offset = "0x1E7DEAC", VA = "0x1E7DEAC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float AngleMultiplier;

		[Token(Token = "0x4001366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float SpeedMultiplier;

		[Token(Token = "0x4001367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float CurveScale;

		[Token(Token = "0x4001368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x4001369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool hasTextChanged;

		[Token(Token = "0x6001122")]
		[Address(RVA = "0xACF63C", Offset = "0xACF63C", VA = "0xACF63C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001123")]
		[Address(RVA = "0xACF698", Offset = "0xACF698", VA = "0xACF698")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001124")]
		[Address(RVA = "0xACF788", Offset = "0xACF788", VA = "0xACF788")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001125")]
		[Address(RVA = "0xACF878", Offset = "0xACF878", VA = "0xACF878")]
		private void Start()
		{
		}

		[Token(Token = "0x6001126")]
		[Address(RVA = "0xACF91C", Offset = "0xACF91C", VA = "0xACF91C")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x6001127")]
		[Address(RVA = "0xACF8A4", Offset = "0xACF8A4", VA = "0xACF8A4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7AB008", Offset = "0x7AB008")]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x6001128")]
		[Address(RVA = "0xACF9A4", Offset = "0xACF9A4", VA = "0xACF9A4")]
		public VertexZoom()
		{
		}
	}
	[Token(Token = "0x20002F1")]
	public class WarpTextExample : MonoBehaviour
	{
		[Token(Token = "0x20002F2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x79795C", Offset = "0x79795C")]
		private sealed class <WarpText>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001378")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001379")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400137A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WarpTextExample <>4__this;

			[Token(Token = "0x400137B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <old_CurveScale>5__2;

			[Token(Token = "0x400137C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private AnimationCurve <old_curve>5__3;

			[Token(Token = "0x17000275")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001139")]
				[Address(RVA = "0x1E7F5DC", Offset = "0x1E7F5DC", VA = "0x1E7F5DC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000276")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600113B")]
				[Address(RVA = "0x1E7F624", Offset = "0x1E7F624", VA = "0x1E7F624", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001136")]
			[Address(RVA = "0x1E7EDC8", Offset = "0x1E7EDC8", VA = "0x1E7EDC8")]
			[DebuggerHidden]
			public <WarpText>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6001137")]
			[Address(RVA = "0x1E7EDF4", Offset = "0x1E7EDF4", VA = "0x1E7EDF4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001138")]
			[Address(RVA = "0x1E7EDF8", Offset = "0x1E7EDF8", VA = "0x1E7EDF8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600113A")]
			[Address(RVA = "0x1E7F5E4", Offset = "0x1E7F5E4", VA = "0x1E7F5E4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x4001374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve VertexCurve;

		[Token(Token = "0x4001375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float AngleMultiplier;

		[Token(Token = "0x4001376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float SpeedMultiplier;

		[Token(Token = "0x4001377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float CurveScale;

		[Token(Token = "0x6001131")]
		[Address(RVA = "0xAFFA04", Offset = "0xAFFA04", VA = "0xAFFA04")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001132")]
		[Address(RVA = "0xAFFA70", Offset = "0xAFFA70", VA = "0xAFFA70")]
		private void Start()
		{
		}

		[Token(Token = "0x6001133")]
		[Address(RVA = "0xAFFB14", Offset = "0xAFFB14", VA = "0xAFFB14")]
		private AnimationCurve CopyAnimationCurve(AnimationCurve curve)
		{
			return null;
		}

		[Token(Token = "0x6001134")]
		[Address(RVA = "0xAFFA9C", Offset = "0xAFFA9C", VA = "0xAFFA9C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7AB0B8", Offset = "0x7AB0B8")]
		private IEnumerator WarpText()
		{
			return null;
		}

		[Token(Token = "0x6001135")]
		[Address(RVA = "0xAFFB98", Offset = "0xAFFB98", VA = "0xAFFB98")]
		public WarpTextExample()
		{
		}
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x20002F3")]
	public class ColorGrabbable : OVRGrabbable
	{
		[Token(Token = "0x400137D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color COLOR_GRAB;

		[Token(Token = "0x400137E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color COLOR_HIGHLIGHT;

		[Token(Token = "0x400137F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_color;

		[Token(Token = "0x4001380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x4001381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_highlight;

		[Token(Token = "0x17000277")]
		public bool Highlight
		{
			[Token(Token = "0x600113C")]
			[Address(RVA = "0xF1D518", Offset = "0xF1D518", VA = "0xF1D518")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600113D")]
			[Address(RVA = "0xF1D520", Offset = "0xF1D520", VA = "0xF1D520")]
			set
			{
			}
		}

		[Token(Token = "0x600113E")]
		[Address(RVA = "0xF1D52C", Offset = "0xF1D52C", VA = "0xF1D52C")]
		protected void UpdateColor()
		{
		}

		[Token(Token = "0x600113F")]
		[Address(RVA = "0xF1D6F4", Offset = "0xF1D6F4", VA = "0xF1D6F4", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x6001140")]
		[Address(RVA = "0xF1D71C", Offset = "0xF1D71C", VA = "0xF1D71C", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6001141")]
		[Address(RVA = "0xF1D744", Offset = "0xF1D744", VA = "0xF1D744")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001142")]
		[Address(RVA = "0xF1D5F4", Offset = "0xF1D5F4", VA = "0xF1D5F4")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x6001143")]
		[Address(RVA = "0xF1DA18", Offset = "0xF1DA18", VA = "0xF1DA18")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x20002F4")]
	public class DistanceGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4001382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_materialColorField;

		[Token(Token = "0x4001383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabbableCrosshair m_crosshair;

		[Token(Token = "0x4001384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabManager m_crosshairManager;

		[Token(Token = "0x4001385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_renderer;

		[Token(Token = "0x4001386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x4001387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_inRange;

		[Token(Token = "0x4001388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_targeted;

		[Token(Token = "0x17000278")]
		public bool InRange
		{
			[Token(Token = "0x6001145")]
			[Address(RVA = "0xB7A6CC", Offset = "0xB7A6CC", VA = "0xB7A6CC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001146")]
			[Address(RVA = "0xB7A6D4", Offset = "0xB7A6D4", VA = "0xB7A6D4")]
			set
			{
			}
		}

		[Token(Token = "0x17000279")]
		public bool Targeted
		{
			[Token(Token = "0x6001147")]
			[Address(RVA = "0xB7A850", Offset = "0xB7A850", VA = "0xB7A850")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001148")]
			[Address(RVA = "0xB7A858", Offset = "0xB7A858", VA = "0xB7A858")]
			set
			{
			}
		}

		[Token(Token = "0x6001149")]
		[Address(RVA = "0xB7A864", Offset = "0xB7A864", VA = "0xB7A864", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600114A")]
		[Address(RVA = "0xB7A6E0", Offset = "0xB7A6E0", VA = "0xB7A6E0")]
		private void RefreshCrosshair()
		{
		}

		[Token(Token = "0x600114B")]
		[Address(RVA = "0xB7A9D0", Offset = "0xB7A9D0", VA = "0xB7A9D0")]
		public DistanceGrabbable()
		{
		}
	}
	[Token(Token = "0x20002F5")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x79796C", Offset = "0x79796C")]
	public class DistanceGrabber : OVRGrabber
	{
		[Token(Token = "0x4001389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x400138A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private float m_noSnapThreshhold;

		[Token(Token = "0x400138B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private bool m_useSpherecast;

		[Token(Token = "0x400138C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		[SerializeField]
		public bool m_preventGrabThroughWalls;

		[Token(Token = "0x400138D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private float m_objectPullVelocity;

		[Token(Token = "0x400138E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float m_objectPullMaxRotationRate;

		[Token(Token = "0x400138F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool m_movingObjectToHand;

		[Token(Token = "0x4001390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private float m_maxGrabDistance;

		[Token(Token = "0x4001391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private int m_grabObjectsInLayer;

		[Token(Token = "0x4001392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private int m_obstructionLayer;

		[Token(Token = "0x4001393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private DistanceGrabber m_otherHand;

		[Token(Token = "0x4001394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected DistanceGrabbable m_target;

		[Token(Token = "0x4001395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected Collider m_targetCollider;

		[Token(Token = "0x1700027A")]
		public bool UseSpherecast
		{
			[Token(Token = "0x600114C")]
			[Address(RVA = "0xB7A9D8", Offset = "0xB7A9D8", VA = "0xB7A9D8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600114D")]
			[Address(RVA = "0xB7A9E0", Offset = "0xB7A9E0", VA = "0xB7A9E0")]
			set
			{
			}
		}

		[Token(Token = "0x600114E")]
		[Address(RVA = "0xB7A9FC", Offset = "0xB7A9FC", VA = "0xB7A9FC", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600114F")]
		[Address(RVA = "0xB7AC3C", Offset = "0xB7AC3C", VA = "0xB7AC3C", Slot = "6")]
		public override void Update()
		{
		}

		[Token(Token = "0x6001150")]
		[Address(RVA = "0xB7B554", Offset = "0xB7B554", VA = "0xB7B554", Slot = "7")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x6001151")]
		[Address(RVA = "0xB7B9E8", Offset = "0xB7B9E8", VA = "0xB7B9E8", Slot = "8")]
		protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x6001152")]
		[Address(RVA = "0xB7BCA8", Offset = "0xB7BCA8", VA = "0xB7BCA8")]
		private static DistanceGrabbable HitInfoToGrabbable(RaycastHit hitInfo)
		{
			return null;
		}

		[Token(Token = "0x6001153")]
		[Address(RVA = "0xB7AEB0", Offset = "0xB7AEB0", VA = "0xB7AEB0")]
		protected bool FindTarget(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6001154")]
		[Address(RVA = "0xB7BD98", Offset = "0xB7BD98", VA = "0xB7BD98")]
		protected bool FindTargetWithSpherecast(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6001155")]
		[Address(RVA = "0xB7C1F4", Offset = "0xB7C1F4", VA = "0xB7C1F4", Slot = "9")]
		protected override void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x6001156")]
		[Address(RVA = "0xB7C20C", Offset = "0xB7C20C", VA = "0xB7C20C", Slot = "10")]
		protected override void OffhandGrabbed(OVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x6001157")]
		[Address(RVA = "0xB7C214", Offset = "0xB7C214", VA = "0xB7C214")]
		public DistanceGrabber()
		{
		}
	}
	[Token(Token = "0x20002F6")]
	public class GrabManager : MonoBehaviour
	{
		[Token(Token = "0x4001396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider m_grabVolume;

		[Token(Token = "0x4001397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color OutlineColorInRange;

		[Token(Token = "0x4001398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color OutlineColorHighlighted;

		[Token(Token = "0x4001399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color OutlineColorOutOfRange;

		[Token(Token = "0x6001158")]
		[Address(RVA = "0xCEFEE8", Offset = "0xCEFEE8", VA = "0xCEFEE8")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x6001159")]
		[Address(RVA = "0xCEFFA0", Offset = "0xCEFFA0", VA = "0xCEFFA0")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x600115A")]
		[Address(RVA = "0xCF0058", Offset = "0xCF0058", VA = "0xCF0058")]
		public GrabManager()
		{
		}
	}
	[Token(Token = "0x20002F7")]
	public class GrabbableCrosshair : MonoBehaviour
	{
		[Token(Token = "0x20002F8")]
		public enum CrosshairState
		{
			[Token(Token = "0x400139F")]
			Disabled,
			[Token(Token = "0x40013A0")]
			Enabled,
			[Token(Token = "0x40013A1")]
			Targeted
		}

		[Token(Token = "0x400139A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CrosshairState m_state;

		[Token(Token = "0x400139B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x400139C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_targetedCrosshair;

		[Token(Token = "0x400139D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_enabledCrosshair;

		[Token(Token = "0x600115B")]
		[Address(RVA = "0xCF1C88", Offset = "0xCF1C88", VA = "0xCF1C88")]
		private void Start()
		{
		}

		[Token(Token = "0x600115C")]
		[Address(RVA = "0xCF1CF4", Offset = "0xCF1CF4", VA = "0xCF1CF4")]
		public void SetState(CrosshairState cs)
		{
		}

		[Token(Token = "0x600115D")]
		[Address(RVA = "0xCF1D90", Offset = "0xCF1D90", VA = "0xCF1D90")]
		private void Update()
		{
		}

		[Token(Token = "0x600115E")]
		[Address(RVA = "0xCF1DD8", Offset = "0xCF1DD8", VA = "0xCF1DD8")]
		public GrabbableCrosshair()
		{
		}
	}
	[Token(Token = "0x20002F9")]
	public class PauseOnInputLoss : MonoBehaviour
	{
		[Token(Token = "0x600115F")]
		[Address(RVA = "0xBE465C", Offset = "0xBE465C", VA = "0xBE465C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001160")]
		[Address(RVA = "0xBE4748", Offset = "0xBE4748", VA = "0xBE4748")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6001161")]
		[Address(RVA = "0xBE4754", Offset = "0xBE4754", VA = "0xBE4754")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6001162")]
		[Address(RVA = "0xBE4760", Offset = "0xBE4760", VA = "0xBE4760")]
		public PauseOnInputLoss()
		{
		}
	}
	[Token(Token = "0x20002FA")]
	public class BoneCapsuleTriggerLogic : MonoBehaviour
	{
		[Token(Token = "0x40013A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableToolTags ToolTags;

		[Token(Token = "0x40013A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HashSet<ColliderZone> CollidersTouchingUs;

		[Token(Token = "0x40013A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ColliderZone> _elementsToCleanUp;

		[Token(Token = "0x6001163")]
		[Address(RVA = "0xAEF93C", Offset = "0xAEF93C", VA = "0xAEF93C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001164")]
		[Address(RVA = "0xAEF990", Offset = "0xAEF990", VA = "0xAEF990")]
		private void Update()
		{
		}

		[Token(Token = "0x6001165")]
		[Address(RVA = "0xAEFCFC", Offset = "0xAEFCFC", VA = "0xAEFCFC")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001166")]
		[Address(RVA = "0xAEFE00", Offset = "0xAEFE00", VA = "0xAEFE00")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001167")]
		[Address(RVA = "0xAEF994", Offset = "0xAEF994", VA = "0xAEF994")]
		private void CleanUpDeadColliders()
		{
		}

		[Token(Token = "0x6001168")]
		[Address(RVA = "0xAEFF04", Offset = "0xAEFF04", VA = "0xAEFF04")]
		public BoneCapsuleTriggerLogic()
		{
		}
	}
	[Token(Token = "0x20002FB")]
	public class ButtonController : Interactable
	{
		[Token(Token = "0x20002FC")]
		public enum ContactTest
		{
			[Token(Token = "0x40013B4")]
			PerpenTest,
			[Token(Token = "0x40013B5")]
			BackwardsPress
		}

		[Token(Token = "0x40013A5")]
		private const float ENTRY_DOT_THRESHOLD = 0.8f;

		[Token(Token = "0x40013A6")]
		private const float PERP_DOT_THRESHOLD = 0.5f;

		[Token(Token = "0x40013A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _proximityZone;

		[Token(Token = "0x40013A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _contactZone;

		[Token(Token = "0x40013A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _actionZone;

		[Token(Token = "0x40013AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ContactTest[] _contactTests;

		[Token(Token = "0x40013AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform _buttonPlaneCenter;

		[Token(Token = "0x40013AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _makeSureToolIsOnPositiveSide;

		[Token(Token = "0x40013AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Vector3 _localButtonDirection;

		[Token(Token = "0x40013AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InteractableToolTags[] _allValidToolsTags;

		[Token(Token = "0x40013AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _toolTagsMask;

		[Token(Token = "0x40013B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private bool _allowMultipleNearFieldInteraction;

		[Token(Token = "0x40013B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A0F0C", Offset = "0x7A0F0C")]
		private InteractableState <CurrentButtonState>k__BackingField;

		[Token(Token = "0x40013B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Dictionary<InteractableTool, InteractableState> _toolToState;

		[Token(Token = "0x1700027B")]
		public override int ValidToolTagsMask
		{
			[Token(Token = "0x6001169")]
			[Address(RVA = "0xAF21C4", Offset = "0xAF21C4", VA = "0xAF21C4", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700027C")]
		public Vector3 LocalButtonDirection
		{
			[Token(Token = "0x600116A")]
			[Address(RVA = "0xAF21CC", Offset = "0xAF21CC", VA = "0xAF21CC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700027D")]
		public InteractableState CurrentButtonState
		{
			[Token(Token = "0x600116B")]
			[Address(RVA = "0xAF21D8", Offset = "0xAF21D8", VA = "0xAF21D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AB168", Offset = "0x7AB168")]
			get
			{
				return default(InteractableState);
			}
			[Token(Token = "0x600116C")]
			[Address(RVA = "0xAF21E0", Offset = "0xAF21E0", VA = "0xAF21E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AB178", Offset = "0x7AB178")]
			private set
			{
			}
		}

		[Token(Token = "0x600116D")]
		[Address(RVA = "0xAF21E8", Offset = "0xAF21E8", VA = "0xAF21E8", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600116E")]
		[Address(RVA = "0xAF22FC", Offset = "0xAF22FC", VA = "0xAF22FC")]
		private void FireInteractionEventsOnDepth(InteractableCollisionDepth oldDepth, InteractableTool collidingTool, InteractionType interactionType)
		{
		}

		[Token(Token = "0x600116F")]
		[Address(RVA = "0xAF2468", Offset = "0xAF2468", VA = "0xAF2468", Slot = "8")]
		public override void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth)
		{
		}

		[Token(Token = "0x6001170")]
		[Address(RVA = "0xAF2A20", Offset = "0xAF2A20", VA = "0xAF2A20")]
		private InteractableState GetUpcomingStateNearField(InteractableState oldState, InteractableCollisionDepth newCollisionDepth, bool toolIsInActionZone, bool toolIsInContactZone, bool toolIsInProximity, bool validContact, bool onPositiveSideOfInteractable)
		{
			return default(InteractableState);
		}

		[Token(Token = "0x6001171")]
		[Address(RVA = "0xAF2ACC", Offset = "0xAF2ACC", VA = "0xAF2ACC")]
		public void ForceResetButton()
		{
		}

		[Token(Token = "0x6001172")]
		[Address(RVA = "0xAF2938", Offset = "0xAF2938", VA = "0xAF2938")]
		private bool IsValidContact(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6001173")]
		[Address(RVA = "0xAF2BD8", Offset = "0xAF2BD8", VA = "0xAF2BD8")]
		private bool PassEntryTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6001174")]
		[Address(RVA = "0xAF2C5C", Offset = "0xAF2C5C", VA = "0xAF2C5C")]
		private bool PassPerpTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6001175")]
		[Address(RVA = "0xAF2CE8", Offset = "0xAF2CE8", VA = "0xAF2CE8")]
		public ButtonController()
		{
		}
	}
	[Token(Token = "0x20002FD")]
	public class ButtonTriggerZone : MonoBehaviour, ColliderZone
	{
		[Token(Token = "0x40013B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _parentInteractableObj;

		[Token(Token = "0x40013B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A0F2C", Offset = "0x7A0F2C")]
		private Collider <Collider>k__BackingField;

		[Token(Token = "0x40013B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A0F3C", Offset = "0x7A0F3C")]
		private Interactable <ParentInteractable>k__BackingField;

		[Token(Token = "0x1700027E")]
		public Collider Collider
		{
			[Token(Token = "0x6001176")]
			[Address(RVA = "0xAF2F34", Offset = "0xAF2F34", VA = "0xAF2F34", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AB188", Offset = "0x7AB188")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001177")]
			[Address(RVA = "0xAF2F3C", Offset = "0xAF2F3C", VA = "0xAF2F3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AB198", Offset = "0x7AB198")]
			private set
			{
			}
		}

		[Token(Token = "0x1700027F")]
		public Interactable ParentInteractable
		{
			[Token(Token = "0x6001178")]
			[Address(RVA = "0xAF2F44", Offset = "0xAF2F44", VA = "0xAF2F44", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AB1A8", Offset = "0x7AB1A8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001179")]
			[Address(RVA = "0xAF2F4C", Offset = "0xAF2F4C", VA = "0xAF2F4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AB1B8", Offset = "0x7AB1B8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000280")]
		public InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x600117A")]
			[Address(RVA = "0xAF2F54", Offset = "0xAF2F54", VA = "0xAF2F54", Slot = "6")]
			get
			{
				return default(InteractableCollisionDepth);
			}
		}

		[Token(Token = "0x600117B")]
		[Address(RVA = "0xAF2FA4", Offset = "0xAF2FA4", VA = "0xAF2FA4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600117C")]
		[Address(RVA = "0xAF3038", Offset = "0xAF3038", VA = "0xAF3038")]
		public ButtonTriggerZone()
		{
		}
	}
	[Token(Token = "0x20002FE")]
	public interface ColliderZone
	{
		[Token(Token = "0x17000281")]
		Collider Collider
		{
			[Token(Token = "0x600117D")]
			get;
		}

		[Token(Token = "0x17000282")]
		Interactable ParentInteractable
		{
			[Token(Token = "0x600117E")]
			get;
		}

		[Token(Token = "0x17000283")]
		InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x600117F")]
			get;
		}
	}
	[Token(Token = "0x20002FF")]
	public class ColliderZoneArgs : EventArgs
	{
		[Token(Token = "0x40013B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ColliderZone Collider;

		[Token(Token = "0x40013BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float FrameTime;

		[Token(Token = "0x40013BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableTool CollidingTool;

		[Token(Token = "0x40013BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly InteractionType InteractionT;

		[Token(Token = "0x6001180")]
		[Address(RVA = "0xF1D110", Offset = "0xF1D110", VA = "0xF1D110")]
		public ColliderZoneArgs(ColliderZone collider, float frameTime, InteractableTool collidingTool, InteractionType interactionType)
		{
		}
	}
	[Token(Token = "0x2000300")]
	public enum InteractionType
	{
		[Token(Token = "0x40013BE")]
		Enter,
		[Token(Token = "0x40013BF")]
		Stay,
		[Token(Token = "0x40013C0")]
		Exit
	}
	[Token(Token = "0x2000301")]
	public class HandsManager : MonoBehaviour
	{
		[Token(Token = "0x2000302")]
		public enum HandsVisualMode
		{
			[Token(Token = "0x40013D2")]
			Mesh,
			[Token(Token = "0x40013D3")]
			Skeleton,
			[Token(Token = "0x40013D4")]
			Both
		}

		[Token(Token = "0x2000303")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7979CC", Offset = "0x7979CC")]
		private sealed class <FindSkeletonVisualGameObjects>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandsManager <>4__this;

			[Token(Token = "0x1700028F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60011A2")]
				[Address(RVA = "0xB0CA3C", Offset = "0xB0CA3C", VA = "0xB0CA3C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000290")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60011A4")]
				[Address(RVA = "0xB0CA84", Offset = "0xB0CA84", VA = "0xB0CA84", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600119F")]
			[Address(RVA = "0xB0C7A8", Offset = "0xB0C7A8", VA = "0xB0C7A8")]
			[DebuggerHidden]
			public <FindSkeletonVisualGameObjects>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x60011A0")]
			[Address(RVA = "0xB0C7D4", Offset = "0xB0C7D4", VA = "0xB0C7D4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60011A1")]
			[Address(RVA = "0xB0C7D8", Offset = "0xB0C7D8", VA = "0xB0C7D8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60011A3")]
			[Address(RVA = "0xB0CA44", Offset = "0xB0CA44", VA = "0xB0CA44", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40013C1")]
		private const string SKELETON_VISUALIZER_NAME = "SkeletonRenderer";

		[Token(Token = "0x40013C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _leftHand;

		[Token(Token = "0x40013C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _rightHand;

		[Token(Token = "0x40013C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandsVisualMode VisualMode;

		[Token(Token = "0x40013C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRHand[] _hand;

		[Token(Token = "0x40013C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRSkeleton[] _handSkeleton;

		[Token(Token = "0x40013C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRSkeletonRenderer[] _handSkeletonRenderer;

		[Token(Token = "0x40013C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OVRMesh[] _handMesh;

		[Token(Token = "0x40013C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OVRMeshRenderer[] _handMeshRenderer;

		[Token(Token = "0x40013CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SkinnedMeshRenderer _leftMeshRenderer;

		[Token(Token = "0x40013CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SkinnedMeshRenderer _rightMeshRenderer;

		[Token(Token = "0x40013CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _leftSkeletonVisual;

		[Token(Token = "0x40013CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject _rightSkeletonVisual;

		[Token(Token = "0x40013CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _currentHandAlpha;

		[Token(Token = "0x40013CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int HandAlphaId;

		[Token(Token = "0x40013D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A0F6C", Offset = "0x7A0F6C")]
		private static HandsManager <Instance>k__BackingField;

		[Token(Token = "0x17000284")]
		public OVRHand RightHand
		{
			[Token(Token = "0x6001181")]
			[Address(RVA = "0xF53E78", Offset = "0xF53E78", VA = "0xF53E78")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001182")]
			[Address(RVA = "0xF53EB0", Offset = "0xF53EB0", VA = "0xF53EB0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000285")]
		public OVRSkeleton RightHandSkeleton
		{
			[Token(Token = "0x6001183")]
			[Address(RVA = "0xF53F20", Offset = "0xF53F20", VA = "0xF53F20")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001184")]
			[Address(RVA = "0xF53F58", Offset = "0xF53F58", VA = "0xF53F58")]
			private set
			{
			}
		}

		[Token(Token = "0x17000286")]
		public OVRSkeletonRenderer RightHandSkeletonRenderer
		{
			[Token(Token = "0x6001185")]
			[Address(RVA = "0xF53FC8", Offset = "0xF53FC8", VA = "0xF53FC8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001186")]
			[Address(RVA = "0xF54000", Offset = "0xF54000", VA = "0xF54000")]
			private set
			{
			}
		}

		[Token(Token = "0x17000287")]
		public OVRMesh RightHandMesh
		{
			[Token(Token = "0x6001187")]
			[Address(RVA = "0xF54070", Offset = "0xF54070", VA = "0xF54070")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001188")]
			[Address(RVA = "0xF540A8", Offset = "0xF540A8", VA = "0xF540A8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000288")]
		public OVRMeshRenderer RightHandMeshRenderer
		{
			[Token(Token = "0x6001189")]
			[Address(RVA = "0xF54118", Offset = "0xF54118", VA = "0xF54118")]
			get
			{
				return null;
			}
			[Token(Token = "0x600118A")]
			[Address(RVA = "0xF54150", Offset = "0xF54150", VA = "0xF54150")]
			private set
			{
			}
		}

		[Token(Token = "0x17000289")]
		public OVRHand LeftHand
		{
			[Token(Token = "0x600118B")]
			[Address(RVA = "0xF541C0", Offset = "0xF541C0", VA = "0xF541C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600118C")]
			[Address(RVA = "0xF541F4", Offset = "0xF541F4", VA = "0xF541F4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700028A")]
		public OVRSkeleton LeftHandSkeleton
		{
			[Token(Token = "0x600118D")]
			[Address(RVA = "0xF54260", Offset = "0xF54260", VA = "0xF54260")]
			get
			{
				return null;
			}
			[Token(Token = "0x600118E")]
			[Address(RVA = "0xF54294", Offset = "0xF54294", VA = "0xF54294")]
			private set
			{
			}
		}

		[Token(Token = "0x1700028B")]
		public OVRSkeletonRenderer LeftHandSkeletonRenderer
		{
			[Token(Token = "0x600118F")]
			[Address(RVA = "0xF54300", Offset = "0xF54300", VA = "0xF54300")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001190")]
			[Address(RVA = "0xF54334", Offset = "0xF54334", VA = "0xF54334")]
			private set
			{
			}
		}

		[Token(Token = "0x1700028C")]
		public OVRMesh LeftHandMesh
		{
			[Token(Token = "0x6001191")]
			[Address(RVA = "0xF543A0", Offset = "0xF543A0", VA = "0xF543A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001192")]
			[Address(RVA = "0xF543D4", Offset = "0xF543D4", VA = "0xF543D4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700028D")]
		public OVRMeshRenderer LeftHandMeshRenderer
		{
			[Token(Token = "0x6001193")]
			[Address(RVA = "0xF54440", Offset = "0xF54440", VA = "0xF54440")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001194")]
			[Address(RVA = "0xF54474", Offset = "0xF54474", VA = "0xF54474")]
			private set
			{
			}
		}

		[Token(Token = "0x1700028E")]
		public static HandsManager Instance
		{
			[Token(Token = "0x6001195")]
			[Address(RVA = "0xF544E0", Offset = "0xF544E0", VA = "0xF544E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AB1C8", Offset = "0x7AB1C8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001196")]
			[Address(RVA = "0xF5452C", Offset = "0xF5452C", VA = "0xF5452C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AB1D8", Offset = "0x7AB1D8")]
			private set
			{
			}
		}

		[Token(Token = "0x6001197")]
		[Address(RVA = "0xF54580", Offset = "0xF54580", VA = "0xF54580")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001198")]
		[Address(RVA = "0xF54954", Offset = "0xF54954", VA = "0xF54954")]
		private void Update()
		{
		}

		[Token(Token = "0x6001199")]
		[Address(RVA = "0xF548DC", Offset = "0xF548DC", VA = "0xF548DC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7AB1E8", Offset = "0x7AB1E8")]
		private IEnumerator FindSkeletonVisualGameObjects()
		{
			return null;
		}

		[Token(Token = "0x600119A")]
		[Address(RVA = "0xF549DC", Offset = "0xF549DC", VA = "0xF549DC")]
		public void SwitchVisualization()
		{
		}

		[Token(Token = "0x600119B")]
		[Address(RVA = "0xF54AC0", Offset = "0xF54AC0", VA = "0xF54AC0")]
		private void SetToCurrentVisualMode()
		{
		}

		[Token(Token = "0x600119C")]
		[Address(RVA = "0xF54CA0", Offset = "0xF54CA0", VA = "0xF54CA0")]
		public static List<OVRBoneCapsule> GetCapsulesPerBone(OVRSkeleton skeleton, OVRSkeleton.BoneId boneId)
		{
			return null;
		}

		[Token(Token = "0x600119D")]
		[Address(RVA = "0xF54EDC", Offset = "0xF54EDC", VA = "0xF54EDC")]
		public bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x600119E")]
		[Address(RVA = "0xF55068", Offset = "0xF55068", VA = "0xF55068")]
		public HandsManager()
		{
		}
	}
	[Token(Token = "0x2000304")]
	public abstract class Interactable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000305")]
		public class InteractableStateArgsEvent : UnityEvent<InteractableStateArgs>
		{
			[Token(Token = "0x60011B6")]
			[Address(RVA = "0xB0D5A8", Offset = "0xB0D5A8", VA = "0xB0D5A8")]
			public InteractableStateArgsEvent()
			{
			}
		}

		[Token(Token = "0x40013D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ColliderZone _proximityZoneCollider;

		[Token(Token = "0x40013D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ColliderZone _contactZoneCollider;

		[Token(Token = "0x40013DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ColliderZone _actionZoneCollider;

		[Token(Token = "0x40013DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractableStateArgsEvent InteractableStateChanged;

		[Token(Token = "0x17000291")]
		public ColliderZone ProximityCollider
		{
			[Token(Token = "0x60011A5")]
			[Address(RVA = "0xF5BCF4", Offset = "0xF5BCF4", VA = "0xF5BCF4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000292")]
		public ColliderZone ContactCollider
		{
			[Token(Token = "0x60011A6")]
			[Address(RVA = "0xF5BCFC", Offset = "0xF5BCFC", VA = "0xF5BCFC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000293")]
		public ColliderZone ActionCollider
		{
			[Token(Token = "0x60011A7")]
			[Address(RVA = "0xF5BD04", Offset = "0xF5BD04", VA = "0xF5BD04")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000294")]
		public virtual int ValidToolTagsMask
		{
			[Token(Token = "0x60011A8")]
			[Address(RVA = "0xF5BD0C", Offset = "0xF5BD0C", VA = "0xF5BD0C", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000042")]
		public event Action<ColliderZoneArgs> ProximityZoneEvent
		{
			[Token(Token = "0x60011A9")]
			[Address(RVA = "0xF5BD14", Offset = "0xF5BD14", VA = "0xF5BD14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AB298", Offset = "0x7AB298")]
			add
			{
			}
			[Token(Token = "0x60011AA")]
			[Address(RVA = "0xF5BDB4", Offset = "0xF5BDB4", VA = "0xF5BDB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AB2A8", Offset = "0x7AB2A8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000043")]
		public event Action<ColliderZoneArgs> ContactZoneEvent
		{
			[Token(Token = "0x60011AC")]
			[Address(RVA = "0xF5BEC4", Offset = "0xF5BEC4", VA = "0xF5BEC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AB2B8", Offset = "0x7AB2B8")]
			add
			{
			}
			[Token(Token = "0x60011AD")]
			[Address(RVA = "0xF5BF64", Offset = "0xF5BF64", VA = "0xF5BF64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AB2C8", Offset = "0x7AB2C8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000044")]
		public event Action<ColliderZoneArgs> ActionZoneEvent
		{
			[Token(Token = "0x60011AF")]
			[Address(RVA = "0xF5C074", Offset = "0xF5C074", VA = "0xF5C074")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AB2D8", Offset = "0x7AB2D8")]
			add
			{
			}
			[Token(Token = "0x60011B0")]
			[Address(RVA = "0xF5C114", Offset = "0xF5C114", VA = "0xF5C114")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AB2E8", Offset = "0x7AB2E8")]
			remove
			{
			}
		}

		[Token(Token = "0x60011AB")]
		[Address(RVA = "0xF5BE54", Offset = "0xF5BE54", VA = "0xF5BE54", Slot = "5")]
		protected virtual void OnProximityZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x60011AE")]
		[Address(RVA = "0xF5C004", Offset = "0xF5C004", VA = "0xF5C004", Slot = "6")]
		protected virtual void OnContactZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x60011B1")]
		[Address(RVA = "0xF5C1B4", Offset = "0xF5C1B4", VA = "0xF5C1B4", Slot = "7")]
		protected virtual void OnActionZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x60011B2")]
		public abstract void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth);

		[Token(Token = "0x60011B3")]
		[Address(RVA = "0xF5C224", Offset = "0xF5C224", VA = "0xF5C224", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60011B4")]
		[Address(RVA = "0xF5C350", Offset = "0xF5C350", VA = "0xF5C350", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60011B5")]
		[Address(RVA = "0xF5C47C", Offset = "0xF5C47C", VA = "0xF5C47C")]
		protected Interactable()
		{
		}
	}
	[Token(Token = "0x2000306")]
	public enum InteractableCollisionDepth
	{
		[Token(Token = "0x40013E0")]
		None,
		[Token(Token = "0x40013E1")]
		Proximity,
		[Token(Token = "0x40013E2")]
		Contact,
		[Token(Token = "0x40013E3")]
		Action
	}
	[Token(Token = "0x2000307")]
	public enum InteractableState
	{
		[Token(Token = "0x40013E5")]
		Default,
		[Token(Token = "0x40013E6")]
		ProximityState,
		[Token(Token = "0x40013E7")]
		ContactState,
		[Token(Token = "0x40013E8")]
		ActionState
	}
	[Token(Token = "0x2000308")]
	public class InteractableStateArgs : EventArgs
	{
		[Token(Token = "0x40013E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Interactable Interactable;

		[Token(Token = "0x40013EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly InteractableTool Tool;

		[Token(Token = "0x40013EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableState OldInteractableState;

		[Token(Token = "0x40013EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly InteractableState NewInteractableState;

		[Token(Token = "0x40013ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ColliderZoneArgs ColliderArgs;

		[Token(Token = "0x60011B7")]
		[Address(RVA = "0xF5C5D4", Offset = "0xF5C5D4", VA = "0xF5C5D4")]
		public InteractableStateArgs(Interactable interactable, InteractableTool tool, InteractableState newInteractableState, InteractableState oldState, ColliderZoneArgs colliderArgs)
		{
		}
	}
	[Token(Token = "0x2000309")]
	public class InteractableRegistry : MonoBehaviour
	{
		[Token(Token = "0x40013EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HashSet<Interactable> _interactables;

		[Token(Token = "0x17000295")]
		public static HashSet<Interactable> Interactables
		{
			[Token(Token = "0x60011B8")]
			[Address(RVA = "0xF5C4DC", Offset = "0xF5C4DC", VA = "0xF5C4DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011B9")]
		[Address(RVA = "0xF5C284", Offset = "0xF5C284", VA = "0xF5C284")]
		public static void RegisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60011BA")]
		[Address(RVA = "0xF5C3B0", Offset = "0xF5C3B0", VA = "0xF5C3B0")]
		public static void UnregisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60011BB")]
		[Address(RVA = "0xF5C540", Offset = "0xF5C540", VA = "0xF5C540")]
		public InteractableRegistry()
		{
		}
	}
	[Token(Token = "0x200030A")]
	public class InteractableToolsCreator : MonoBehaviour
	{
		[Token(Token = "0x200030B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7979DC", Offset = "0x7979DC")]
		private sealed class <AttachToolsToHands>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform[] toolObjects;

			[Token(Token = "0x40013F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isRightHand;

			[Token(Token = "0x40013F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InteractableToolsCreator <>4__this;

			[Token(Token = "0x40013F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private HandsManager <handsManagerObj>5__2;

			[Token(Token = "0x40013F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private HashSet<Transform>.Enumerator <>7__wrap2;

			[Token(Token = "0x40013F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Transform <toolObject>5__4;

			[Token(Token = "0x40013F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private OVRSkeleton <handSkeletonToAttachTo>5__5;

			[Token(Token = "0x17000296")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60011C5")]
				[Address(RVA = "0xB0DB0C", Offset = "0xB0DB0C", VA = "0xB0DB0C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000297")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60011C7")]
				[Address(RVA = "0xB0DB54", Offset = "0xB0DB54", VA = "0xB0DB54", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60011C1")]
			[Address(RVA = "0xB0D5F4", Offset = "0xB0D5F4", VA = "0xB0D5F4")]
			[DebuggerHidden]
			public <AttachToolsToHands>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x60011C2")]
			[Address(RVA = "0xB0D620", Offset = "0xB0D620", VA = "0xB0D620", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60011C3")]
			[Address(RVA = "0xB0D690", Offset = "0xB0D690", VA = "0xB0D690", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60011C4")]
			[Address(RVA = "0xB0D63C", Offset = "0xB0D63C", VA = "0xB0D63C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60011C6")]
			[Address(RVA = "0xB0DB14", Offset = "0xB0DB14", VA = "0xB0DB14", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40013EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform[] LeftHandTools;

		[Token(Token = "0x40013F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] RightHandTools;

		[Token(Token = "0x60011BD")]
		[Address(RVA = "0xF5D358", Offset = "0xF5D358", VA = "0xF5D358")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011BE")]
		[Address(RVA = "0xF5D3D4", Offset = "0xF5D3D4", VA = "0xF5D3D4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7AB2F8", Offset = "0x7AB2F8")]
		private IEnumerator AttachToolsToHands(Transform[] toolObjects, bool isRightHand)
		{
			return null;
		}

		[Token(Token = "0x60011BF")]
		[Address(RVA = "0xF5D474", Offset = "0xF5D474", VA = "0xF5D474")]
		private void AttachToolToHandTransform(Transform tool, bool isRightHanded)
		{
		}

		[Token(Token = "0x60011C0")]
		[Address(RVA = "0xF5D55C", Offset = "0xF5D55C", VA = "0xF5D55C")]
		public InteractableToolsCreator()
		{
		}
	}
	[Token(Token = "0x200030C")]
	public class InteractableToolsInputRouter : MonoBehaviour
	{
		[Token(Token = "0x40013FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InteractableToolsInputRouter _instance;

		[Token(Token = "0x40013FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _leftPinch;

		[Token(Token = "0x40013FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _rightPinch;

		[Token(Token = "0x40013FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HashSet<InteractableTool> _leftHandNearTools;

		[Token(Token = "0x40013FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<InteractableTool> _leftHandFarTools;

		[Token(Token = "0x40013FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<InteractableTool> _rightHandNearTools;

		[Token(Token = "0x4001400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HashSet<InteractableTool> _rightHandFarTools;

		[Token(Token = "0x17000298")]
		public static InteractableToolsInputRouter Instance
		{
			[Token(Token = "0x60011C8")]
			[Address(RVA = "0xF5D564", Offset = "0xF5D564", VA = "0xF5D564")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011C9")]
		[Address(RVA = "0xF5D6E4", Offset = "0xF5D6E4", VA = "0xF5D6E4")]
		public void RegisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x60011CA")]
		[Address(RVA = "0xF5D78C", Offset = "0xF5D78C", VA = "0xF5D78C")]
		public void UnregisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x60011CB")]
		[Address(RVA = "0xF5D834", Offset = "0xF5D834", VA = "0xF5D834")]
		private void Update()
		{
		}

		[Token(Token = "0x60011CC")]
		[Address(RVA = "0xF5DAE0", Offset = "0xF5DAE0", VA = "0xF5DAE0")]
		private bool UpdateToolsAndEnableState(HashSet<InteractableTool> tools, bool toolsAreEnabledThisFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x60011CD")]
		[Address(RVA = "0xF5DB28", Offset = "0xF5DB28", VA = "0xF5DB28")]
		private bool UpdateTools(HashSet<InteractableTool> tools, bool resetCollisionData = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60011CE")]
		[Address(RVA = "0xF5DDD8", Offset = "0xF5DDD8", VA = "0xF5DDD8")]
		private void ToggleToolsEnableState(HashSet<InteractableTool> tools, bool enableState)
		{
		}

		[Token(Token = "0x60011CF")]
		[Address(RVA = "0xF5DF24", Offset = "0xF5DF24", VA = "0xF5DF24")]
		public InteractableToolsInputRouter()
		{
		}
	}
	[Token(Token = "0x200030D")]
	public class FingerTipPokeTool : InteractableTool
	{
		[Token(Token = "0x200030E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7979EC", Offset = "0x7979EC")]
		private sealed class <AttachTriggerLogic>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400140C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400140D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400140E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FingerTipPokeTool <>4__this;

			[Token(Token = "0x1700029D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60011E1")]
				[Address(RVA = "0xB0A8E0", Offset = "0xB0A8E0", VA = "0xB0A8E0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700029E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60011E3")]
				[Address(RVA = "0xB0A928", Offset = "0xB0A928", VA = "0xB0A928", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60011DE")]
			[Address(RVA = "0xB0A4AC", Offset = "0xB0A4AC", VA = "0xB0A4AC")]
			[DebuggerHidden]
			public <AttachTriggerLogic>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x60011DF")]
			[Address(RVA = "0xB0A4D8", Offset = "0xB0A4D8", VA = "0xB0A4D8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60011E0")]
			[Address(RVA = "0xB0A4DC", Offset = "0xB0A4DC", VA = "0xB0A4DC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60011E2")]
			[Address(RVA = "0xB0A8E8", Offset = "0xB0A8E8", VA = "0xB0A8E8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001401")]
		private const int NUM_VELOCITY_FRAMES = 10;

		[Token(Token = "0x4001402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FingerTipPokeToolView _fingerTipPokeToolView;

		[Token(Token = "0x4001403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private OVRPlugin.HandFinger _fingerToFollow;

		[Token(Token = "0x4001404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] _velocityFrames;

		[Token(Token = "0x4001405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _currVelocityFrame;

		[Token(Token = "0x4001406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _sampledMaxFramesAlready;

		[Token(Token = "0x4001407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 _position;

		[Token(Token = "0x4001408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic;

		[Token(Token = "0x4001409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _lastScale;

		[Token(Token = "0x400140A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool _isInitialized;

		[Token(Token = "0x400140B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private OVRBoneCapsule _capsuleToTrack;

		[Token(Token = "0x17000299")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x60011D0")]
			[Address(RVA = "0xE79944", Offset = "0xE79944", VA = "0xE79944", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x1700029A")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x60011D1")]
			[Address(RVA = "0xE7994C", Offset = "0xE7994C", VA = "0xE7994C", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x1700029B")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x60011D2")]
			[Address(RVA = "0xE79954", Offset = "0xE79954", VA = "0xE79954", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700029C")]
		public override bool EnableState
		{
			[Token(Token = "0x60011D3")]
			[Address(RVA = "0xE7995C", Offset = "0xE7995C", VA = "0xE7995C", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011D4")]
			[Address(RVA = "0xE79988", Offset = "0xE79988", VA = "0xE79988", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x60011D5")]
		[Address(RVA = "0xE799C4", Offset = "0xE799C4", VA = "0xE799C4", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x60011D6")]
		[Address(RVA = "0xE79A7C", Offset = "0xE79A7C", VA = "0xE79A7C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7AB3A8", Offset = "0x7AB3A8")]
		private IEnumerator AttachTriggerLogic()
		{
			return null;
		}

		[Token(Token = "0x60011D7")]
		[Address(RVA = "0xE79AF4", Offset = "0xE79AF4", VA = "0xE79AF4")]
		private void Update()
		{
		}

		[Token(Token = "0x60011D8")]
		[Address(RVA = "0xE79D94", Offset = "0xE79D94", VA = "0xE79D94")]
		private void UpdateAverageVelocity()
		{
		}

		[Token(Token = "0x60011D9")]
		[Address(RVA = "0xE79F20", Offset = "0xE79F20", VA = "0xE79F20")]
		private void CheckAndUpdateScale()
		{
		}

		[Token(Token = "0x60011DA")]
		[Address(RVA = "0xE7A018", Offset = "0xE7A018", VA = "0xE7A018", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x60011DB")]
		[Address(RVA = "0xE7A310", Offset = "0xE7A310", VA = "0xE7A310", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x60011DC")]
		[Address(RVA = "0xE7A314", Offset = "0xE7A314", VA = "0xE7A314", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x60011DD")]
		[Address(RVA = "0xE7A318", Offset = "0xE7A318", VA = "0xE7A318")]
		public FingerTipPokeTool()
		{
		}
	}
	[Token(Token = "0x200030F")]
	public class FingerTipPokeToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x400140F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _sphereMeshRenderer;

		[Token(Token = "0x4001410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A0FFC", Offset = "0x7A0FFC")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x4001411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A100C", Offset = "0x7A100C")]
		private bool <ToolActivateState>k__BackingField;

		[Token(Token = "0x4001412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A101C", Offset = "0x7A101C")]
		private float <SphereRadius>k__BackingField;

		[Token(Token = "0x1700029F")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x60011E4")]
			[Address(RVA = "0xE7A330", Offset = "0xE7A330", VA = "0xE7A330", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AB458", Offset = "0x7AB458")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011E5")]
			[Address(RVA = "0xE7A338", Offset = "0xE7A338", VA = "0xE7A338")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AB468", Offset = "0x7AB468")]
			set
			{
			}
		}

		[Token(Token = "0x170002A0")]
		public bool EnableState
		{
			[Token(Token = "0x60011E6")]
			[Address(RVA = "0xE7A340", Offset = "0xE7A340", VA = "0xE7A340", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011E7")]
			[Address(RVA = "0xE7A35C", Offset = "0xE7A35C", VA = "0xE7A35C", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x170002A1")]
		public bool ToolActivateState
		{
			[Token(Token = "0x60011E8")]
			[Address(RVA = "0xE7A37C", Offset = "0xE7A37C", VA = "0xE7A37C", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AB478", Offset = "0x7AB478")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011E9")]
			[Address(RVA = "0xE7A384", Offset = "0xE7A384", VA = "0xE7A384", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AB488", Offset = "0x7AB488")]
			set
			{
			}
		}

		[Token(Token = "0x170002A2")]
		public float SphereRadius
		{
			[Token(Token = "0x60011EA")]
			[Address(RVA = "0xE7A390", Offset = "0xE7A390", VA = "0xE7A390")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AB498", Offset = "0x7AB498")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60011EB")]
			[Address(RVA = "0xE7A398", Offset = "0xE7A398", VA = "0xE7A398")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AB4A8", Offset = "0x7AB4A8")]
			private set
			{
			}
		}

		[Token(Token = "0x60011EC")]
		[Address(RVA = "0xE7A3A0", Offset = "0xE7A3A0", VA = "0xE7A3A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011ED")]
		[Address(RVA = "0xE7A3E8", Offset = "0xE7A3E8", VA = "0xE7A3E8", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60011EE")]
		[Address(RVA = "0xE7A3EC", Offset = "0xE7A3EC", VA = "0xE7A3EC")]
		public FingerTipPokeToolView()
		{
		}
	}
	[Token(Token = "0x2000310")]
	[Flags]
	public enum InteractableToolTags
	{
		[Token(Token = "0x4001414")]
		None = 0,
		[Token(Token = "0x4001415")]
		Ray = 1,
		[Token(Token = "0x4001416")]
		Poke = 4,
		[Token(Token = "0x4001417")]
		All = -1
	}
	[Token(Token = "0x2000311")]
	public enum ToolInputState
	{
		[Token(Token = "0x4001419")]
		Inactive,
		[Token(Token = "0x400141A")]
		PrimaryInputDown,
		[Token(Token = "0x400141B")]
		PrimaryInputDownStay,
		[Token(Token = "0x400141C")]
		PrimaryInputUp
	}
	[Token(Token = "0x2000312")]
	public class InteractableCollisionInfo
	{
		[Token(Token = "0x400141D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ColliderZone InteractableCollider;

		[Token(Token = "0x400141E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableCollisionDepth CollisionDepth;

		[Token(Token = "0x400141F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableTool CollidingTool;

		[Token(Token = "0x60011EF")]
		[Address(RVA = "0xF5C484", Offset = "0xF5C484", VA = "0xF5C484")]
		public InteractableCollisionInfo(ColliderZone collider, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}
	}
	[Token(Token = "0x2000313")]
	public abstract class InteractableTool : MonoBehaviour
	{
		[Token(Token = "0x4001420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A102C", Offset = "0x7A102C")]
		private bool <IsRightHandedTool>k__BackingField;

		[Token(Token = "0x4001421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A103C", Offset = "0x7A103C")]
		private Vector3 <Velocity>k__BackingField;

		[Token(Token = "0x4001422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A104C", Offset = "0x7A104C")]
		private Vector3 <InteractionPosition>k__BackingField;

		[Token(Token = "0x4001423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<InteractableCollisionInfo> _currentIntersectingObjects;

		[Token(Token = "0x4001424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Interactable> _addedInteractables;

		[Token(Token = "0x4001425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Interactable> _removedInteractables;

		[Token(Token = "0x4001426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Interactable> _remainingInteractables;

		[Token(Token = "0x4001427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Interactable, InteractableCollisionInfo> _currInteractableToCollisionInfos;

		[Token(Token = "0x4001428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Interactable, InteractableCollisionInfo> _prevInteractableToCollisionInfos;

		[Token(Token = "0x170002A3")]
		public Transform ToolTransform
		{
			[Token(Token = "0x60011F0")]
			[Address(RVA = "0xF5C698", Offset = "0xF5C698", VA = "0xF5C698")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A4")]
		public bool IsRightHandedTool
		{
			[Token(Token = "0x60011F1")]
			[Address(RVA = "0xF5C6A0", Offset = "0xF5C6A0", VA = "0xF5C6A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AB4B8", Offset = "0x7AB4B8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011F2")]
			[Address(RVA = "0xF5C6A8", Offset = "0xF5C6A8", VA = "0xF5C6A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AB4C8", Offset = "0x7AB4C8")]
			set
			{
			}
		}

		[Token(Token = "0x170002A5")]
		public abstract InteractableToolTags ToolTags
		{
			[Token(Token = "0x60011F3")]
			get;
		}

		[Token(Token = "0x170002A6")]
		public abstract ToolInputState ToolInputState
		{
			[Token(Token = "0x60011F4")]
			get;
		}

		[Token(Token = "0x170002A7")]
		public abstract bool IsFarFieldTool
		{
			[Token(Token = "0x60011F5")]
			get;
		}

		[Token(Token = "0x170002A8")]
		public Vector3 Velocity
		{
			[Token(Token = "0x60011F6")]
			[Address(RVA = "0xF5C6B4", Offset = "0xF5C6B4", VA = "0xF5C6B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AB4D8", Offset = "0x7AB4D8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60011F7")]
			[Address(RVA = "0xF5C6C0", Offset = "0xF5C6C0", VA = "0xF5C6C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AB4E8", Offset = "0x7AB4E8")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002A9")]
		public Vector3 InteractionPosition
		{
			[Token(Token = "0x60011F8")]
			[Address(RVA = "0xF5C6CC", Offset = "0xF5C6CC", VA = "0xF5C6CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AB4F8", Offset = "0x7AB4F8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60011F9")]
			[Address(RVA = "0xF5C6D8", Offset = "0xF5C6D8", VA = "0xF5C6D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AB508", Offset = "0x7AB508")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002AA")]
		public abstract bool EnableState
		{
			[Token(Token = "0x60011FE")]
			get;
			[Token(Token = "0x60011FF")]
			set;
		}

		[Token(Token = "0x60011FA")]
		[Address(RVA = "0xF5C6E4", Offset = "0xF5C6E4", VA = "0xF5C6E4")]
		public List<InteractableCollisionInfo> GetCurrentIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x60011FB")]
		public abstract List<InteractableCollisionInfo> GetNextIntersectingObjects();

		[Token(Token = "0x60011FC")]
		public abstract void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone);

		[Token(Token = "0x60011FD")]
		public abstract void DeFocus();

		[Token(Token = "0x6001200")]
		public abstract void Initialize();

		[Token(Token = "0x6001201")]
		[Address(RVA = "0xF5C6EC", Offset = "0xF5C6EC", VA = "0xF5C6EC")]
		public KeyValuePair<Interactable, InteractableCollisionInfo> GetFirstCurrentCollisionInfo()
		{
			return default(KeyValuePair<Interactable, InteractableCollisionInfo>);
		}

		[Token(Token = "0x6001202")]
		[Address(RVA = "0xF5C738", Offset = "0xF5C738", VA = "0xF5C738")]
		public void ClearAllCurrentCollisionInfos()
		{
		}

		[Token(Token = "0x6001203")]
		[Address(RVA = "0xF5C78C", Offset = "0xF5C78C", VA = "0xF5C78C", Slot = "13")]
		public virtual void UpdateCurrentCollisionsBasedOnDepth()
		{
		}

		[Token(Token = "0x6001204")]
		[Address(RVA = "0xF5CA3C", Offset = "0xF5CA3C", VA = "0xF5CA3C", Slot = "14")]
		public virtual void UpdateLatestCollisionData()
		{
		}

		[Token(Token = "0x6001205")]
		[Address(RVA = "0xF5D1C8", Offset = "0xF5D1C8", VA = "0xF5D1C8")]
		protected InteractableTool()
		{
		}
	}
	[Token(Token = "0x2000314")]
	public interface InteractableToolView
	{
		[Token(Token = "0x170002AB")]
		InteractableTool InteractableTool
		{
			[Token(Token = "0x6001206")]
			get;
		}

		[Token(Token = "0x170002AC")]
		bool EnableState
		{
			[Token(Token = "0x6001208")]
			get;
			[Token(Token = "0x6001209")]
			set;
		}

		[Token(Token = "0x170002AD")]
		bool ToolActivateState
		{
			[Token(Token = "0x600120A")]
			get;
			[Token(Token = "0x600120B")]
			set;
		}

		[Token(Token = "0x6001207")]
		void SetFocusedInteractable(Interactable interactable);
	}
	[Token(Token = "0x2000315")]
	public class PinchStateModule
	{
		[Token(Token = "0x2000316")]
		private enum PinchState
		{
			[Token(Token = "0x400142D")]
			None,
			[Token(Token = "0x400142E")]
			PinchDown,
			[Token(Token = "0x400142F")]
			PinchStay,
			[Token(Token = "0x4001430")]
			PinchUp
		}

		[Token(Token = "0x4001429")]
		private const float PINCH_STRENGTH_THRESHOLD = 1f;

		[Token(Token = "0x400142A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PinchState _currPinchState;

		[Token(Token = "0x400142B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Interactable _firstFocusedInteractable;

		[Token(Token = "0x170002AE")]
		public bool PinchUpAndDownOnFocusedObject
		{
			[Token(Token = "0x600120C")]
			[Address(RVA = "0xBE4768", Offset = "0xBE4768", VA = "0xBE4768")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002AF")]
		public bool PinchSteadyOnFocusedObject
		{
			[Token(Token = "0x600120D")]
			[Address(RVA = "0xBE47F0", Offset = "0xBE47F0", VA = "0xBE47F0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002B0")]
		public bool PinchDownOnFocusedObject
		{
			[Token(Token = "0x600120E")]
			[Address(RVA = "0xBE4878", Offset = "0xBE4878", VA = "0xBE4878")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600120F")]
		[Address(RVA = "0xBE4900", Offset = "0xBE4900", VA = "0xBE4900")]
		public PinchStateModule()
		{
		}

		[Token(Token = "0x6001210")]
		[Address(RVA = "0xBE4934", Offset = "0xBE4934", VA = "0xBE4934")]
		public void UpdateState(OVRHand hand, Interactable currFocusedInteractable)
		{
		}
	}
	[Token(Token = "0x2000317")]
	public class RayTool : InteractableTool
	{
		[Token(Token = "0x4001431")]
		private const float MINIMUM_RAY_CAST_DISTANCE = 0.8f;

		[Token(Token = "0x4001432")]
		private const float COLLIDER_RADIUS = 0.01f;

		[Token(Token = "0x4001433")]
		private const int NUM_MAX_PRIMARY_HITS = 10;

		[Token(Token = "0x4001434")]
		private const int NUM_MAX_SECONDARY_HITS = 25;

		[Token(Token = "0x4001435")]
		private const int NUM_COLLIDERS_TO_TEST = 20;

		[Token(Token = "0x4001436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RayToolView _rayToolView;

		[Token(Token = "0x4001437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7A106C", Offset = "0x7A106C")]
		[SerializeField]
		private float _coneAngleDegrees;

		[Token(Token = "0x4001438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _farFieldMaxDistance;

		[Token(Token = "0x4001439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PinchStateModule _pinchStateModule;

		[Token(Token = "0x400143A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Interactable _focusedInteractable;

		[Token(Token = "0x400143B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] _collidersOverlapped;

		[Token(Token = "0x400143C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Interactable _currInteractableCastedAgainst;

		[Token(Token = "0x400143D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _coneAngleReleaseDegrees;

		[Token(Token = "0x400143E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RaycastHit[] _primaryHits;

		[Token(Token = "0x400143F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] _secondaryOverlapResults;

		[Token(Token = "0x4001440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _initialized;

		[Token(Token = "0x170002B1")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6001211")]
			[Address(RVA = "0xC879C8", Offset = "0xC879C8", VA = "0xC879C8", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x170002B2")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6001212")]
			[Address(RVA = "0xC879D0", Offset = "0xC879D0", VA = "0xC879D0", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x170002B3")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6001213")]
			[Address(RVA = "0xC87A44", Offset = "0xC87A44", VA = "0xC87A44", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002B4")]
		public override bool EnableState
		{
			[Token(Token = "0x6001214")]
			[Address(RVA = "0xC87A4C", Offset = "0xC87A4C", VA = "0xC87A4C", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001215")]
			[Address(RVA = "0xC87A90", Offset = "0xC87A90", VA = "0xC87A90", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6001216")]
		[Address(RVA = "0xC87B04", Offset = "0xC87B04", VA = "0xC87B04", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001217")]
		[Address(RVA = "0xC87B6C", Offset = "0xC87B6C", VA = "0xC87B6C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001218")]
		[Address(RVA = "0xC87C10", Offset = "0xC87C10", VA = "0xC87C10")]
		private void Update()
		{
		}

		[Token(Token = "0x6001219")]
		[Address(RVA = "0xC87ED4", Offset = "0xC87ED4", VA = "0xC87ED4")]
		private Vector3 GetRayCastOrigin()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600121A")]
		[Address(RVA = "0xC87F5C", Offset = "0xC87F5C", VA = "0xC87F5C", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x600121B")]
		[Address(RVA = "0xC8832C", Offset = "0xC8832C", VA = "0xC8832C")]
		private bool HasRayReleasedInteractable(Interactable focusedInteractable)
		{
			return default(bool);
		}

		[Token(Token = "0x600121C")]
		[Address(RVA = "0xC8843C", Offset = "0xC8843C", VA = "0xC8843C")]
		private Interactable FindTargetInteractable()
		{
			return null;
		}

		[Token(Token = "0x600121D")]
		[Address(RVA = "0xC88560", Offset = "0xC88560", VA = "0xC88560")]
		private Interactable FindPrimaryRaycastHit(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x600121E")]
		[Address(RVA = "0xC88864", Offset = "0xC88864", VA = "0xC88864")]
		private Interactable FindInteractableViaConeTest(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x600121F")]
		[Address(RVA = "0xC88BF8", Offset = "0xC88BF8", VA = "0xC88BF8", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6001220")]
		[Address(RVA = "0xC88CE0", Offset = "0xC88CE0", VA = "0xC88CE0", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6001221")]
		[Address(RVA = "0xC88D1C", Offset = "0xC88D1C", VA = "0xC88D1C")]
		public RayTool()
		{
		}
	}
	[Token(Token = "0x2000318")]
	public class RayToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4001441")]
		private const int NUM_RAY_LINE_POSITIONS = 25;

		[Token(Token = "0x4001442")]
		private const float DEFAULT_RAY_CAST_DISTANCE = 3f;

		[Token(Token = "0x4001443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _targetTransform;

		[Token(Token = "0x4001444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x4001445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _toolActivateState;

		[Token(Token = "0x4001446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _focusedTransform;

		[Token(Token = "0x4001447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] linePositions;

		[Token(Token = "0x4001448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Gradient _oldColorGradient;

		[Token(Token = "0x4001449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Gradient _highLightColorGradient;

		[Token(Token = "0x400144A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A10E0", Offset = "0x7A10E0")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x170002B5")]
		public bool EnableState
		{
			[Token(Token = "0x6001222")]
			[Address(RVA = "0xC87A74", Offset = "0xC87A74", VA = "0xC87A74", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001223")]
			[Address(RVA = "0xC87AAC", Offset = "0xC87AAC", VA = "0xC87AAC", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x170002B6")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6001224")]
			[Address(RVA = "0xC88E14", Offset = "0xC88E14", VA = "0xC88E14", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001225")]
			[Address(RVA = "0xC87E98", Offset = "0xC87E98", VA = "0xC87E98", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x170002B7")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6001227")]
			[Address(RVA = "0xC89074", Offset = "0xC89074", VA = "0xC89074", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AB518", Offset = "0x7AB518")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001228")]
			[Address(RVA = "0xC8907C", Offset = "0xC8907C", VA = "0xC8907C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AB528", Offset = "0x7AB528")]
			set
			{
			}
		}

		[Token(Token = "0x6001226")]
		[Address(RVA = "0xC88E1C", Offset = "0xC88E1C", VA = "0xC88E1C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001229")]
		[Address(RVA = "0xC88C34", Offset = "0xC88C34", VA = "0xC88C34", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x600122A")]
		[Address(RVA = "0xC89084", Offset = "0xC89084", VA = "0xC89084")]
		private void Update()
		{
		}

		[Token(Token = "0x600122B")]
		[Address(RVA = "0xC892F8", Offset = "0xC892F8", VA = "0xC892F8")]
		public static Vector3 GetPointOnBezierCurve(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600122C")]
		[Address(RVA = "0xC893E8", Offset = "0xC893E8", VA = "0xC893E8")]
		public RayToolView()
		{
		}
	}
	[Token(Token = "0x2000319")]
	public class DistanceGrabberSample : MonoBehaviour
	{
		[Token(Token = "0x400144B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool useSpherecast;

		[Token(Token = "0x400144C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool allowGrabThroughWalls;

		[Token(Token = "0x400144D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DistanceGrabber[] m_grabbers;

		[Token(Token = "0x170002B8")]
		public bool UseSpherecast
		{
			[Token(Token = "0x600122D")]
			[Address(RVA = "0xB7C234", Offset = "0xB7C234", VA = "0xB7C234")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600122E")]
			[Address(RVA = "0xB7C23C", Offset = "0xB7C23C", VA = "0xB7C23C")]
			set
			{
			}
		}

		[Token(Token = "0x170002B9")]
		public bool AllowGrabThroughWalls
		{
			[Token(Token = "0x600122F")]
			[Address(RVA = "0xB7C2C4", Offset = "0xB7C2C4", VA = "0xB7C2C4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001230")]
			[Address(RVA = "0xB7C2CC", Offset = "0xB7C2CC", VA = "0xB7C2CC")]
			set
			{
			}
		}

		[Token(Token = "0x6001231")]
		[Address(RVA = "0xB7C338", Offset = "0xB7C338", VA = "0xB7C338")]
		private void Start()
		{
		}

		[Token(Token = "0x6001232")]
		[Address(RVA = "0xB7C5EC", Offset = "0xB7C5EC", VA = "0xB7C5EC")]
		public void ToggleSphereCasting(Toggle t)
		{
		}

		[Token(Token = "0x6001233")]
		[Address(RVA = "0xB7C5FC", Offset = "0xB7C5FC", VA = "0xB7C5FC")]
		public void ToggleGrabThroughWalls(Toggle t)
		{
		}

		[Token(Token = "0x6001234")]
		[Address(RVA = "0xB7C60C", Offset = "0xB7C60C", VA = "0xB7C60C")]
		public DistanceGrabberSample()
		{
		}
	}
	[Token(Token = "0x200031A")]
	public class ControllerBoxController : MonoBehaviour
	{
		[Token(Token = "0x400144E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TrainLocomotive _locomotive;

		[Token(Token = "0x400144F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CowController _cowController;

		[Token(Token = "0x6001235")]
		[Address(RVA = "0xB71D74", Offset = "0xB71D74", VA = "0xB71D74")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001236")]
		[Address(RVA = "0xB71D78", Offset = "0xB71D78", VA = "0xB71D78")]
		public void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001237")]
		[Address(RVA = "0xB71DB0", Offset = "0xB71DB0", VA = "0xB71DB0")]
		public void DecreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001238")]
		[Address(RVA = "0xB71DE8", Offset = "0xB71DE8", VA = "0xB71DE8")]
		public void IncreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001239")]
		[Address(RVA = "0xB71E20", Offset = "0xB71E20", VA = "0xB71E20")]
		public void SmokeButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600123A")]
		[Address(RVA = "0xB71E58", Offset = "0xB71E58", VA = "0xB71E58")]
		public void WhistleButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600123B")]
		[Address(RVA = "0xB71E90", Offset = "0xB71E90", VA = "0xB71E90")]
		public void ReverseButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600123C")]
		[Address(RVA = "0xB71EC8", Offset = "0xB71EC8", VA = "0xB71EC8")]
		public void SwitchVisualization(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600123D")]
		[Address(RVA = "0xB71F3C", Offset = "0xB71F3C", VA = "0xB71F3C")]
		public void GoMoo(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600123E")]
		[Address(RVA = "0xB71FAC", Offset = "0xB71FAC", VA = "0xB71FAC")]
		public ControllerBoxController()
		{
		}
	}
	[Token(Token = "0x200031B")]
	public class CowController : MonoBehaviour
	{
		[Token(Token = "0x4001450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animation _cowAnimation;

		[Token(Token = "0x4001451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _mooCowAudioSource;

		[Token(Token = "0x600123F")]
		[Address(RVA = "0xB73B18", Offset = "0xB73B18", VA = "0xB73B18")]
		private void Start()
		{
		}

		[Token(Token = "0x6001240")]
		[Address(RVA = "0xB73B1C", Offset = "0xB73B1C", VA = "0xB73B1C")]
		public void PlayMooSound()
		{
		}

		[Token(Token = "0x6001241")]
		[Address(RVA = "0xB71F70", Offset = "0xB71F70", VA = "0xB71F70")]
		public void GoMooCowGo()
		{
		}

		[Token(Token = "0x6001242")]
		[Address(RVA = "0xB73B5C", Offset = "0xB73B5C", VA = "0xB73B5C")]
		public CowController()
		{
		}
	}
	[Token(Token = "0x200031C")]
	public class PanelHMDFollower : MonoBehaviour
	{
		[Token(Token = "0x200031D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x797A0C", Offset = "0x797A0C")]
		private sealed class <LerpToHMD>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400145C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400145D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400145E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PanelHMDFollower <>4__this;

			[Token(Token = "0x400145F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <newPanelPosition>5__2;

			[Token(Token = "0x4001460")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <startTime>5__3;

			[Token(Token = "0x4001461")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <endTime>5__4;

			[Token(Token = "0x170002BA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600124B")]
				[Address(RVA = "0xCBDD14", Offset = "0xCBDD14", VA = "0xCBDD14", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002BB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600124D")]
				[Address(RVA = "0xCBDD5C", Offset = "0xCBDD5C", VA = "0xCBDD5C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001248")]
			[Address(RVA = "0xCBDB28", Offset = "0xCBDB28", VA = "0xCBDB28")]
			[DebuggerHidden]
			public <LerpToHMD>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6001249")]
			[Address(RVA = "0xCBDB54", Offset = "0xCBDB54", VA = "0xCBDB54", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600124A")]
			[Address(RVA = "0xCBDB58", Offset = "0xCBDB58", VA = "0xCBDB58", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600124C")]
			[Address(RVA = "0xCBDD1C", Offset = "0xCBDD1C", VA = "0xCBDD1C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001452")]
		private const float TOTAL_DURATION = 3f;

		[Token(Token = "0x4001453")]
		private const float HMD_MOVEMENT_THRESHOLD = 0.3f;

		[Token(Token = "0x4001454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _maxDistance;

		[Token(Token = "0x4001455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _minDistance;

		[Token(Token = "0x4001456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _minZDistance;

		[Token(Token = "0x4001457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRCameraRig _cameraRig;

		[Token(Token = "0x4001458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _panelInitialPosition;

		[Token(Token = "0x4001459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _coroutine;

		[Token(Token = "0x400145A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _prevPos;

		[Token(Token = "0x400145B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 _lastMovedToPos;

		[Token(Token = "0x6001243")]
		[Address(RVA = "0xBE2940", Offset = "0xBE2940", VA = "0xBE2940")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001244")]
		[Address(RVA = "0xBE29EC", Offset = "0xBE29EC", VA = "0xBE29EC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001245")]
		[Address(RVA = "0xBE2C3C", Offset = "0xBE2C3C", VA = "0xBE2C3C")]
		private Vector3 CalculateIdealAnchorPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001246")]
		[Address(RVA = "0xBE2BC4", Offset = "0xBE2BC4", VA = "0xBE2BC4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7AB538", Offset = "0x7AB538")]
		private IEnumerator LerpToHMD()
		{
			return null;
		}

		[Token(Token = "0x6001247")]
		[Address(RVA = "0xBE2C88", Offset = "0xBE2C88", VA = "0xBE2C88")]
		public PanelHMDFollower()
		{
		}
	}
	[Token(Token = "0x200031E")]
	public class SelectionCylinder : MonoBehaviour
	{
		[Token(Token = "0x200031F")]
		public enum SelectionState
		{
			[Token(Token = "0x4001469")]
			Off,
			[Token(Token = "0x400146A")]
			Selected,
			[Token(Token = "0x400146B")]
			Highlighted
		}

		[Token(Token = "0x4001462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _selectionMeshRenderer;

		[Token(Token = "0x4001463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _colorId;

		[Token(Token = "0x4001464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material[] _selectionMaterials;

		[Token(Token = "0x4001465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] _defaultSelectionColors;

		[Token(Token = "0x4001466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color[] _highlightColors;

		[Token(Token = "0x4001467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SelectionState _currSelectionState;

		[Token(Token = "0x170002BC")]
		public SelectionState CurrSelectionState
		{
			[Token(Token = "0x600124E")]
			[Address(RVA = "0xC90D58", Offset = "0xC90D58", VA = "0xC90D58")]
			get
			{
				return default(SelectionState);
			}
			[Token(Token = "0x600124F")]
			[Address(RVA = "0xC90D60", Offset = "0xC90D60", VA = "0xC90D60")]
			set
			{
			}
		}

		[Token(Token = "0x6001250")]
		[Address(RVA = "0xC90EE4", Offset = "0xC90EE4", VA = "0xC90EE4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001251")]
		[Address(RVA = "0xC910E8", Offset = "0xC910E8", VA = "0xC910E8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001252")]
		[Address(RVA = "0xC90DE8", Offset = "0xC90DE8", VA = "0xC90DE8")]
		private void AffectSelectionColor(Color[] newColors)
		{
		}

		[Token(Token = "0x6001253")]
		[Address(RVA = "0xC911D4", Offset = "0xC911D4", VA = "0xC911D4")]
		public SelectionCylinder()
		{
		}
	}
	[Token(Token = "0x2000320")]
	public class TrackSegment : MonoBehaviour
	{
		[Token(Token = "0x2000321")]
		public enum SegmentType
		{
			[Token(Token = "0x400147A")]
			Straight,
			[Token(Token = "0x400147B")]
			LeftTurn,
			[Token(Token = "0x400147C")]
			RightTurn,
			[Token(Token = "0x400147D")]
			Switch
		}

		[Token(Token = "0x400146C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SegmentType _segmentType;

		[Token(Token = "0x400146D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshFilter _straight;

		[Token(Token = "0x400146E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshFilter _leftTurn;

		[Token(Token = "0x400146F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshFilter _rightTurn;

		[Token(Token = "0x4001470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _gridSize;

		[Token(Token = "0x4001471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _subDivCount;

		[Token(Token = "0x4001472")]
		private const float _originalGridSize = 0.8f;

		[Token(Token = "0x4001473")]
		private const float _trackWidth = 0.15f;

		[Token(Token = "0x4001474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _mesh;

		[Token(Token = "0x4001475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A11C0", Offset = "0x7A11C0")]
		private float <StartDistance>k__BackingField;

		[Token(Token = "0x4001476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Pose _p1;

		[Token(Token = "0x4001477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Pose _p2;

		[Token(Token = "0x4001478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Pose _endPose;

		[Token(Token = "0x170002BD")]
		public float StartDistance
		{
			[Token(Token = "0x6001255")]
			[Address(RVA = "0xE83ABC", Offset = "0xE83ABC", VA = "0xE83ABC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AB5E8", Offset = "0x7AB5E8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001256")]
			[Address(RVA = "0xE83AC4", Offset = "0xE83AC4", VA = "0xE83AC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AB5F8", Offset = "0x7AB5F8")]
			set
			{
			}
		}

		[Token(Token = "0x170002BE")]
		public float GridSize
		{
			[Token(Token = "0x6001257")]
			[Address(RVA = "0xE83ACC", Offset = "0xE83ACC", VA = "0xE83ACC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001258")]
			[Address(RVA = "0xE83AD4", Offset = "0xE83AD4", VA = "0xE83AD4")]
			private set
			{
			}
		}

		[Token(Token = "0x170002BF")]
		public int SubDivCount
		{
			[Token(Token = "0x6001259")]
			[Address(RVA = "0xE83ADC", Offset = "0xE83ADC", VA = "0xE83ADC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600125A")]
			[Address(RVA = "0xE83AE4", Offset = "0xE83AE4", VA = "0xE83AE4")]
			set
			{
			}
		}

		[Token(Token = "0x170002C0")]
		public SegmentType Type
		{
			[Token(Token = "0x600125B")]
			[Address(RVA = "0xE83AEC", Offset = "0xE83AEC", VA = "0xE83AEC")]
			get
			{
				return default(SegmentType);
			}
		}

		[Token(Token = "0x170002C1")]
		public Pose EndPose
		{
			[Token(Token = "0x600125C")]
			[Address(RVA = "0xE83AF4", Offset = "0xE83AF4", VA = "0xE83AF4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C2")]
		public float Radius
		{
			[Token(Token = "0x600125D")]
			[Address(RVA = "0xE83E50", Offset = "0xE83E50", VA = "0xE83E50")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002C3")]
		public float SegmentLength
		{
			[Token(Token = "0x600125F")]
			[Address(RVA = "0xE83B5C", Offset = "0xE83B5C", VA = "0xE83B5C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600125E")]
		[Address(RVA = "0xE83E60", Offset = "0xE83E60", VA = "0xE83E60")]
		public float setGridSize(float size)
		{
			return default(float);
		}

		[Token(Token = "0x6001260")]
		[Address(RVA = "0xE83E78", Offset = "0xE83E78", VA = "0xE83E78")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001261")]
		[Address(RVA = "0xE83B9C", Offset = "0xE83B9C", VA = "0xE83B9C")]
		public void UpdatePose(float distanceIntoSegment, Pose pose)
		{
		}

		[Token(Token = "0x6001262")]
		[Address(RVA = "0xE83E7C", Offset = "0xE83E7C", VA = "0xE83E7C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001263")]
		[Address(RVA = "0xE83E80", Offset = "0xE83E80", VA = "0xE83E80")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001264")]
		[Address(RVA = "0xE83EE8", Offset = "0xE83EE8", VA = "0xE83EE8")]
		private void DrawDebugLines()
		{
		}

		[Token(Token = "0x6001265")]
		[Address(RVA = "0xE847B0", Offset = "0xE847B0", VA = "0xE847B0")]
		public void RegenerateTrackAndMesh()
		{
		}

		[Token(Token = "0x6001266")]
		[Address(RVA = "0xE84A5C", Offset = "0xE84A5C", VA = "0xE84A5C")]
		public TrackSegment()
		{
		}
	}
	[Token(Token = "0x2000322")]
	public class TrainButtonVisualController : MonoBehaviour
	{
		[Token(Token = "0x2000323")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x797A1C", Offset = "0x797A1C")]
		private sealed class <ResetPosition>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400148F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001490")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001491")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainButtonVisualController <>4__this;

			[Token(Token = "0x4001492")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x4001493")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <endTime>5__3;

			[Token(Token = "0x170002C4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001275")]
				[Address(RVA = "0xCC5074", Offset = "0xCC5074", VA = "0xCC5074", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002C5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001277")]
				[Address(RVA = "0xCC50BC", Offset = "0xCC50BC", VA = "0xCC50BC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001272")]
			[Address(RVA = "0xCC4ED0", Offset = "0xCC4ED0", VA = "0xCC4ED0")]
			[DebuggerHidden]
			public <ResetPosition>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6001273")]
			[Address(RVA = "0xCC4EFC", Offset = "0xCC4EFC", VA = "0xCC4EFC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001274")]
			[Address(RVA = "0xCC4F00", Offset = "0xCC4F00", VA = "0xCC4F00", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001276")]
			[Address(RVA = "0xCC507C", Offset = "0xCC507C", VA = "0xCC507C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400147E")]
		private const float LERP_TO_OLD_POS_DURATION = 1f;

		[Token(Token = "0x400147F")]
		private const float LOCAL_SIZE_HALVED = 0.5f;

		[Token(Token = "0x4001480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x4001481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer _glowRenderer;

		[Token(Token = "0x4001482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ButtonController _buttonController;

		[Token(Token = "0x4001483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color _buttonContactColor;

		[Token(Token = "0x4001484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color _buttonActionColor;

		[Token(Token = "0x4001485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4001486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _actionSoundEffect;

		[Token(Token = "0x4001487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform _buttonContactTransform;

		[Token(Token = "0x4001488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float _contactMaxDisplacementDistance;

		[Token(Token = "0x4001489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _buttonMaterial;

		[Token(Token = "0x400148A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Color _buttonDefaultColor;

		[Token(Token = "0x400148B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _materialColorId;

		[Token(Token = "0x400148C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool _buttonInContactOrActionStates;

		[Token(Token = "0x400148D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine _lerpToOldPositionCr;

		[Token(Token = "0x400148E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 _oldPosition;

		[Token(Token = "0x6001267")]
		[Address(RVA = "0xE84FF8", Offset = "0xE84FF8", VA = "0xE84FF8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001268")]
		[Address(RVA = "0xE850B4", Offset = "0xE850B4", VA = "0xE850B4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001269")]
		[Address(RVA = "0xE85164", Offset = "0xE85164", VA = "0xE85164")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600126A")]
		[Address(RVA = "0xE852DC", Offset = "0xE852DC", VA = "0xE852DC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600126B")]
		[Address(RVA = "0xE854A4", Offset = "0xE854A4", VA = "0xE854A4")]
		private void ActionOrInContactZoneStayEvent(ColliderZoneArgs collisionArgs)
		{
		}

		[Token(Token = "0x600126C")]
		[Address(RVA = "0xE8558C", Offset = "0xE8558C", VA = "0xE8558C")]
		private void InteractableStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600126D")]
		[Address(RVA = "0xE857A0", Offset = "0xE857A0", VA = "0xE857A0")]
		private void PlaySound(AudioClip clip)
		{
		}

		[Token(Token = "0x600126E")]
		[Address(RVA = "0xE856A0", Offset = "0xE856A0", VA = "0xE856A0")]
		private void StopResetLerping()
		{
		}

		[Token(Token = "0x600126F")]
		[Address(RVA = "0xE856B4", Offset = "0xE856B4", VA = "0xE856B4")]
		private void LerpToOldPosition()
		{
		}

		[Token(Token = "0x6001270")]
		[Address(RVA = "0xE857F8", Offset = "0xE857F8", VA = "0xE857F8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7AB608", Offset = "0x7AB608")]
		private IEnumerator ResetPosition()
		{
			return null;
		}

		[Token(Token = "0x6001271")]
		[Address(RVA = "0xE85870", Offset = "0xE85870", VA = "0xE85870")]
		public TrainButtonVisualController()
		{
		}
	}
	[Token(Token = "0x2000324")]
	public class TrainCar : TrainCarBase
	{
		[Token(Token = "0x4001494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TrainCarBase _parentLocomotive;

		[Token(Token = "0x4001495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected float _distanceBehindParent;

		[Token(Token = "0x170002C6")]
		public float DistanceBehindParentScaled
		{
			[Token(Token = "0x6001278")]
			[Address(RVA = "0xE85920", Offset = "0xE85920", VA = "0xE85920")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001279")]
		[Address(RVA = "0xE85930", Offset = "0xE85930", VA = "0xE85930", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600127A")]
		[Address(RVA = "0xE85938", Offset = "0xE85938", VA = "0xE85938", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x600127B")]
		[Address(RVA = "0xE85C7C", Offset = "0xE85C7C", VA = "0xE85C7C")]
		public TrainCar()
		{
		}
	}
	[Token(Token = "0x2000325")]
	public abstract class TrainCarBase : MonoBehaviour
	{
		[Token(Token = "0x4001496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 OFFSET;

		[Token(Token = "0x4001497")]
		private const float WHEEL_RADIUS = 0.027f;

		[Token(Token = "0x4001498")]
		private const float TWO_PI = (float)Math.PI * 2f;

		[Token(Token = "0x4001499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Transform _frontWheels;

		[Token(Token = "0x400149A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Transform _rearWheels;

		[Token(Token = "0x400149B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected TrainTrack _trainTrack;

		[Token(Token = "0x400149C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Transform[] _individualWheels;

		[Token(Token = "0x400149D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A12C0", Offset = "0x7A12C0")]
		private float <Distance>k__BackingField;

		[Token(Token = "0x400149E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float scale;

		[Token(Token = "0x400149F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Pose _frontPose;

		[Token(Token = "0x40014A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Pose _rearPose;

		[Token(Token = "0x170002C7")]
		public float Distance
		{
			[Token(Token = "0x600127C")]
			[Address(RVA = "0xE85D8C", Offset = "0xE85D8C", VA = "0xE85D8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AB6B8", Offset = "0x7AB6B8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600127D")]
			[Address(RVA = "0xE85D94", Offset = "0xE85D94", VA = "0xE85D94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AB6C8", Offset = "0x7AB6C8")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002C8")]
		public float Scale
		{
			[Token(Token = "0x600127E")]
			[Address(RVA = "0xE85D9C", Offset = "0xE85D9C", VA = "0xE85D9C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600127F")]
			[Address(RVA = "0xE85DA4", Offset = "0xE85DA4", VA = "0xE85DA4")]
			set
			{
			}
		}

		[Token(Token = "0x6001280")]
		[Address(RVA = "0xE85934", Offset = "0xE85934", VA = "0xE85934", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001281")]
		[Address(RVA = "0xE85DAC", Offset = "0xE85DAC", VA = "0xE85DAC")]
		public void UpdatePose(float distance, TrainCarBase train, Pose pose)
		{
		}

		[Token(Token = "0x6001282")]
		[Address(RVA = "0xE85980", Offset = "0xE85980", VA = "0xE85980")]
		protected void UpdateCarPosition()
		{
		}

		[Token(Token = "0x6001283")]
		[Address(RVA = "0xE85BA4", Offset = "0xE85BA4", VA = "0xE85BA4")]
		protected void RotateCarWheels()
		{
		}

		[Token(Token = "0x6001284")]
		public abstract void UpdatePosition();

		[Token(Token = "0x6001285")]
		[Address(RVA = "0xE85CE8", Offset = "0xE85CE8", VA = "0xE85CE8")]
		protected TrainCarBase()
		{
		}
	}
	[Token(Token = "0x2000326")]
	public class TrainCrossingController : MonoBehaviour
	{
		[Token(Token = "0x2000327")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x797A2C", Offset = "0x797A2C")]
		private sealed class <AnimateCrossing>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40014AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40014AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40014AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainCrossingController <>4__this;

			[Token(Token = "0x40014AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float animationLength;

			[Token(Token = "0x40014AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <animationEndTime>5__2;

			[Token(Token = "0x40014B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <lightBlinkDuration>5__3;

			[Token(Token = "0x40014B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <lightBlinkStartTime>5__4;

			[Token(Token = "0x40014B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <lightBlinkEndTime>5__5;

			[Token(Token = "0x40014B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Material <lightToBlinkOn>5__6;

			[Token(Token = "0x40014B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Material <lightToBlinkOff>5__7;

			[Token(Token = "0x40014B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Color <onColor>5__8;

			[Token(Token = "0x40014B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Color <offColor>5__9;

			[Token(Token = "0x170002C9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001293")]
				[Address(RVA = "0xCC535C", Offset = "0xCC535C", VA = "0xCC535C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002CA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001295")]
				[Address(RVA = "0xCC53A4", Offset = "0xCC53A4", VA = "0xCC53A4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001290")]
			[Address(RVA = "0xCC50C4", Offset = "0xCC50C4", VA = "0xCC50C4")]
			[DebuggerHidden]
			public <AnimateCrossing>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6001291")]
			[Address(RVA = "0xCC50F0", Offset = "0xCC50F0", VA = "0xCC50F0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001292")]
			[Address(RVA = "0xCC50F4", Offset = "0xCC50F4", VA = "0xCC50F4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001294")]
			[Address(RVA = "0xCC5364", Offset = "0xCC5364", VA = "0xCC5364", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40014A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x40014A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip[] _crossingSounds;

		[Token(Token = "0x40014A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer _lightSide1Renderer;

		[Token(Token = "0x40014A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshRenderer _lightSide2Renderer;

		[Token(Token = "0x40014A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x40014A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _lightsSide1Mat;

		[Token(Token = "0x40014A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _lightsSide2Mat;

		[Token(Token = "0x40014A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _colorId;

		[Token(Token = "0x40014A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine _xingAnimationCr;

		[Token(Token = "0x40014AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x6001287")]
		[Address(RVA = "0xE85F4C", Offset = "0xE85F4C", VA = "0xE85F4C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001288")]
		[Address(RVA = "0xE85FAC", Offset = "0xE85FAC", VA = "0xE85FAC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001289")]
		[Address(RVA = "0xE860B4", Offset = "0xE860B4", VA = "0xE860B4")]
		public void CrossingButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600128A")]
		[Address(RVA = "0xE86224", Offset = "0xE86224", VA = "0xE86224")]
		private void Update()
		{
		}

		[Token(Token = "0x600128B")]
		[Address(RVA = "0xE86114", Offset = "0xE86114", VA = "0xE86114")]
		private void ActivateTrainCrossing()
		{
		}

		[Token(Token = "0x600128C")]
		[Address(RVA = "0xE86300", Offset = "0xE86300", VA = "0xE86300")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7AB6D8", Offset = "0x7AB6D8")]
		private IEnumerator AnimateCrossing(float animationLength)
		{
			return null;
		}

		[Token(Token = "0x600128D")]
		[Address(RVA = "0xE86388", Offset = "0xE86388", VA = "0xE86388")]
		private void AffectMaterials(Material[] materials, Color newColor)
		{
		}

		[Token(Token = "0x600128E")]
		[Address(RVA = "0xE86434", Offset = "0xE86434", VA = "0xE86434")]
		private void ToggleLightObjects(bool enableState)
		{
		}

		[Token(Token = "0x600128F")]
		[Address(RVA = "0xE86494", Offset = "0xE86494", VA = "0xE86494")]
		public TrainCrossingController()
		{
		}
	}
	[Token(Token = "0x2000328")]
	public class TrainLocomotive : TrainCarBase
	{
		[Token(Token = "0x2000329")]
		private enum EngineSoundState
		{
			[Token(Token = "0x40014D5")]
			Start,
			[Token(Token = "0x40014D6")]
			AccelerateOrSetProperSpeed,
			[Token(Token = "0x40014D7")]
			Stop
		}

		[Token(Token = "0x200032A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x797A3C", Offset = "0x797A3C")]
		private sealed class <StartStopTrain>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40014D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40014D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40014DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool startTrain;

			[Token(Token = "0x40014DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrainLocomotive <>4__this;

			[Token(Token = "0x40014DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <endSpeed>5__2;

			[Token(Token = "0x40014DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <timePeriodForSpeedChange>5__3;

			[Token(Token = "0x40014DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x40014DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <endTime>5__5;

			[Token(Token = "0x40014E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <startSpeed>5__6;

			[Token(Token = "0x170002CB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60012A8")]
				[Address(RVA = "0xCC5620", Offset = "0xCC5620", VA = "0xCC5620", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002CC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60012AA")]
				[Address(RVA = "0xCC5668", Offset = "0xCC5668", VA = "0xCC5668", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60012A5")]
			[Address(RVA = "0xCC53AC", Offset = "0xCC53AC", VA = "0xCC53AC")]
			[DebuggerHidden]
			public <StartStopTrain>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x60012A6")]
			[Address(RVA = "0xCC53D8", Offset = "0xCC53D8", VA = "0xCC53D8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60012A7")]
			[Address(RVA = "0xCC53DC", Offset = "0xCC53DC", VA = "0xCC53DC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60012A9")]
			[Address(RVA = "0xCC5628", Offset = "0xCC5628", VA = "0xCC5628", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40014B7")]
		private const float MIN_SPEED = 0.2f;

		[Token(Token = "0x40014B8")]
		private const float MAX_SPEED = 2.7f;

		[Token(Token = "0x40014B9")]
		private const float SMOKE_SPEED_MULTIPLIER = 8f;

		[Token(Token = "0x40014BA")]
		private const int MAX_PARTICLES_MULTIPLIER = 3;

		[Token(Token = "0x40014BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7A1320", Offset = "0x7A1320")]
		[SerializeField]
		protected float _initialSpeed;

		[Token(Token = "0x40014BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x40014BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _decreaseSpeedButton;

		[Token(Token = "0x40014BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _increaseSpeedButton;

		[Token(Token = "0x40014BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _smokeButton;

		[Token(Token = "0x40014C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _whistleButton;

		[Token(Token = "0x40014C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _reverseButton;

		[Token(Token = "0x40014C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioSource _whistleAudioSource;

		[Token(Token = "0x40014C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioClip _whistleSound;

		[Token(Token = "0x40014C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AudioSource _engineAudioSource;

		[Token(Token = "0x40014C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AudioClip[] _accelerationSounds;

		[Token(Token = "0x40014C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AudioClip[] _decelerationSounds;

		[Token(Token = "0x40014C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private AudioClip _startUpSound;

		[Token(Token = "0x40014C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private AudioSource _smokeStackAudioSource;

		[Token(Token = "0x40014C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private AudioClip _smokeSound;

		[Token(Token = "0x40014CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ParticleSystem _smoke1;

		[Token(Token = "0x40014CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ParticleSystem _smoke2;

		[Token(Token = "0x40014CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TrainCarBase[] _childCars;

		[Token(Token = "0x40014CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool _isMoving;

		[Token(Token = "0x40014CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool _reverse;

		[Token(Token = "0x40014CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float _currentSpeed;

		[Token(Token = "0x40014D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float _speedDiv;

		[Token(Token = "0x40014D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float _standardRateOverTimeMultiplier;

		[Token(Token = "0x40014D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int _standardMaxParticles;

		[Token(Token = "0x40014D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Coroutine _startStopTrainCr;

		[Token(Token = "0x6001296")]
		[Address(RVA = "0xE864F0", Offset = "0xE864F0", VA = "0xE864F0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001297")]
		[Address(RVA = "0xE8665C", Offset = "0xE8665C", VA = "0xE8665C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001298")]
		[Address(RVA = "0xE86668", Offset = "0xE86668", VA = "0xE86668", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6001299")]
		[Address(RVA = "0xE867B8", Offset = "0xE867B8", VA = "0xE867B8")]
		public void StartStopStateChanged()
		{
		}

		[Token(Token = "0x600129A")]
		[Address(RVA = "0xE865D0", Offset = "0xE865D0", VA = "0xE865D0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7AB788", Offset = "0x7AB788")]
		private IEnumerator StartStopTrain(bool startTrain)
		{
			return null;
		}

		[Token(Token = "0x600129B")]
		[Address(RVA = "0xE86818", Offset = "0xE86818", VA = "0xE86818")]
		private float PlayEngineSound(EngineSoundState engineSoundState)
		{
			return default(float);
		}

		[Token(Token = "0x600129C")]
		[Address(RVA = "0xE86754", Offset = "0xE86754", VA = "0xE86754")]
		private void UpdateDistance()
		{
		}

		[Token(Token = "0x600129D")]
		[Address(RVA = "0xE86A34", Offset = "0xE86A34", VA = "0xE86A34")]
		public void DecreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x600129E")]
		[Address(RVA = "0xE86B70", Offset = "0xE86B70", VA = "0xE86B70")]
		public void IncreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x600129F")]
		[Address(RVA = "0xE86AA0", Offset = "0xE86AA0", VA = "0xE86AA0")]
		private void UpdateSmokeEmissionBasedOnSpeed()
		{
		}

		[Token(Token = "0x60012A0")]
		[Address(RVA = "0xE86BDC", Offset = "0xE86BDC", VA = "0xE86BDC")]
		private float GetCurrentSmokeEmission()
		{
			return default(float);
		}

		[Token(Token = "0x60012A1")]
		[Address(RVA = "0xE86BFC", Offset = "0xE86BFC", VA = "0xE86BFC")]
		public void SmokeButtonStateChanged()
		{
		}

		[Token(Token = "0x60012A2")]
		[Address(RVA = "0xE86C88", Offset = "0xE86C88", VA = "0xE86C88")]
		public void WhistleButtonStateChanged()
		{
		}

		[Token(Token = "0x60012A3")]
		[Address(RVA = "0xE86D40", Offset = "0xE86D40", VA = "0xE86D40")]
		public void ReverseButtonStateChanged()
		{
		}

		[Token(Token = "0x60012A4")]
		[Address(RVA = "0xE86D50", Offset = "0xE86D50", VA = "0xE86D50")]
		public TrainLocomotive()
		{
		}
	}
	[Token(Token = "0x200032B")]
	public class TrainTrack : MonoBehaviour
	{
		[Token(Token = "0x40014E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _gridSize;

		[Token(Token = "0x40014E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _subDivCount;

		[Token(Token = "0x40014E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _segmentParent;

		[Token(Token = "0x40014E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _trainParent;

		[Token(Token = "0x40014E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _regnerateTrackMeshOnAwake;

		[Token(Token = "0x40014E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _trainLength;

		[Token(Token = "0x40014E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TrackSegment[] _trackSegments;

		[Token(Token = "0x170002CD")]
		public float TrackLength
		{
			[Token(Token = "0x60012AB")]
			[Address(RVA = "0xE86DB8", Offset = "0xE86DB8", VA = "0xE86DB8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60012AC")]
			[Address(RVA = "0xE86DC0", Offset = "0xE86DC0", VA = "0xE86DC0")]
			private set
			{
			}
		}

		[Token(Token = "0x60012AD")]
		[Address(RVA = "0xE86DC8", Offset = "0xE86DC8", VA = "0xE86DC8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60012AE")]
		[Address(RVA = "0xE85E2C", Offset = "0xE85E2C", VA = "0xE85E2C")]
		public TrackSegment GetSegment(float distance)
		{
			return null;
		}

		[Token(Token = "0x60012AF")]
		[Address(RVA = "0xE86DCC", Offset = "0xE86DCC", VA = "0xE86DCC")]
		public void Regenerate()
		{
		}

		[Token(Token = "0x60012B0")]
		[Address(RVA = "0xE86FE0", Offset = "0xE86FE0", VA = "0xE86FE0")]
		private void SetScale(float ratio)
		{
		}

		[Token(Token = "0x60012B1")]
		[Address(RVA = "0xE870DC", Offset = "0xE870DC", VA = "0xE870DC")]
		public TrainTrack()
		{
		}
	}
	[Token(Token = "0x200032C")]
	public class Pose
	{
		[Token(Token = "0x40014E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x40014E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion Rotation;

		[Token(Token = "0x60012B2")]
		[Address(RVA = "0xC85820", Offset = "0xC85820", VA = "0xC85820")]
		public Pose()
		{
		}

		[Token(Token = "0x60012B3")]
		[Address(RVA = "0xC85864", Offset = "0xC85864", VA = "0xC85864")]
		public Pose(Vector3 position, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x200032D")]
	public class WindmillBladesController : MonoBehaviour
	{
		[Token(Token = "0x200032E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x797A4C", Offset = "0x797A4C")]
		private sealed class <LerpToSpeed>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40014F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40014F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40014F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x40014F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float goalSpeed;

			[Token(Token = "0x40014F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <totalTime>5__2;

			[Token(Token = "0x40014FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startSpeed>5__3;

			[Token(Token = "0x170002CF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60012C0")]
				[Address(RVA = "0x1E7F7FC", Offset = "0x1E7F7FC", VA = "0x1E7F7FC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002D0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60012C2")]
				[Address(RVA = "0x1E7F844", Offset = "0x1E7F844", VA = "0x1E7F844", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60012BD")]
			[Address(RVA = "0x1E7F62C", Offset = "0x1E7F62C", VA = "0x1E7F62C")]
			[DebuggerHidden]
			public <LerpToSpeed>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x60012BE")]
			[Address(RVA = "0x1E7F658", Offset = "0x1E7F658", VA = "0x1E7F658", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60012BF")]
			[Address(RVA = "0x1E7F65C", Offset = "0x1E7F65C", VA = "0x1E7F65C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60012C1")]
			[Address(RVA = "0x1E7F804", Offset = "0x1E7F804", VA = "0x1E7F804", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200032F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x797A5C", Offset = "0x797A5C")]
		private sealed class <PlaySoundDelayed>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40014FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40014FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40014FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x40014FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioClip initial;

			[Token(Token = "0x40014FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeDelayAfterInitial;

			[Token(Token = "0x4001500")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AudioClip clip;

			[Token(Token = "0x170002D1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60012C6")]
				[Address(RVA = "0x1E7F954", Offset = "0x1E7F954", VA = "0x1E7F954", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002D2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60012C8")]
				[Address(RVA = "0x1E7F99C", Offset = "0x1E7F99C", VA = "0x1E7F99C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60012C3")]
			[Address(RVA = "0x1E7F84C", Offset = "0x1E7F84C", VA = "0x1E7F84C")]
			[DebuggerHidden]
			public <PlaySoundDelayed>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x60012C4")]
			[Address(RVA = "0x1E7F878", Offset = "0x1E7F878", VA = "0x1E7F878", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60012C5")]
			[Address(RVA = "0x1E7F87C", Offset = "0x1E7F87C", VA = "0x1E7F87C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60012C7")]
			[Address(RVA = "0x1E7F95C", Offset = "0x1E7F95C", VA = "0x1E7F95C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40014EA")]
		private const float MAX_TIME = 1f;

		[Token(Token = "0x40014EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x40014EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _windMillRotationSound;

		[Token(Token = "0x40014ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _windMillStartSound;

		[Token(Token = "0x40014EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _windMillStopSound;

		[Token(Token = "0x40014EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A1508", Offset = "0x7A1508")]
		private bool <IsMoving>k__BackingField;

		[Token(Token = "0x40014F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _currentSpeed;

		[Token(Token = "0x40014F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _lerpSpeedCoroutine;

		[Token(Token = "0x40014F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine _audioChangeCr;

		[Token(Token = "0x40014F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion _originalRotation;

		[Token(Token = "0x40014F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _rotAngle;

		[Token(Token = "0x170002CE")]
		public bool IsMoving
		{
			[Token(Token = "0x60012B4")]
			[Address(RVA = "0xAFFF48", Offset = "0xAFFF48", VA = "0xAFFF48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AB838", Offset = "0x7AB838")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60012B5")]
			[Address(RVA = "0xAFFF50", Offset = "0xAFFF50", VA = "0xAFFF50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AB848", Offset = "0x7AB848")]
			private set
			{
			}
		}

		[Token(Token = "0x60012B6")]
		[Address(RVA = "0xAFFF5C", Offset = "0xAFFF5C", VA = "0xAFFF5C")]
		private void Start()
		{
		}

		[Token(Token = "0x60012B7")]
		[Address(RVA = "0xAFFF98", Offset = "0xAFFF98", VA = "0xAFFF98")]
		private void Update()
		{
		}

		[Token(Token = "0x60012B8")]
		[Address(RVA = "0xB0007C", Offset = "0xB0007C", VA = "0xB0007C")]
		public void SetMoveState(bool newMoveState, float goalSpeed)
		{
		}

		[Token(Token = "0x60012B9")]
		[Address(RVA = "0xB000F0", Offset = "0xB000F0", VA = "0xB000F0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7AB858", Offset = "0x7AB858")]
		private IEnumerator LerpToSpeed(float goalSpeed)
		{
			return null;
		}

		[Token(Token = "0x60012BA")]
		[Address(RVA = "0xB00178", Offset = "0xB00178", VA = "0xB00178")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7AB8B8", Offset = "0x7AB8B8")]
		private IEnumerator PlaySoundDelayed(AudioClip initial, AudioClip clip, float timeDelayAfterInitial)
		{
			return null;
		}

		[Token(Token = "0x60012BB")]
		[Address(RVA = "0xB00230", Offset = "0xB00230", VA = "0xB00230")]
		private void PlaySound(AudioClip clip, bool loop = false)
		{
		}

		[Token(Token = "0x60012BC")]
		[Address(RVA = "0xB0029C", Offset = "0xB0029C", VA = "0xB0029C")]
		public WindmillBladesController()
		{
		}
	}
	[Token(Token = "0x2000330")]
	public class WindmillController : MonoBehaviour
	{
		[Token(Token = "0x4001501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4001502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _maxSpeed;

		[Token(Token = "0x4001503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4001504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WindmillBladesController _bladesRotation;

		[Token(Token = "0x4001505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x60012C9")]
		[Address(RVA = "0xB002A4", Offset = "0xB002A4", VA = "0xB002A4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60012CA")]
		[Address(RVA = "0xB00318", Offset = "0xB00318", VA = "0xB00318")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60012CB")]
		[Address(RVA = "0xB003FC", Offset = "0xB003FC", VA = "0xB003FC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60012CC")]
		[Address(RVA = "0xB00534", Offset = "0xB00534", VA = "0xB00534")]
		private void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60012CD")]
		[Address(RVA = "0xB005B4", Offset = "0xB005B4", VA = "0xB005B4")]
		private void Update()
		{
		}

		[Token(Token = "0x60012CE")]
		[Address(RVA = "0xB00690", Offset = "0xB00690", VA = "0xB00690")]
		public WindmillController()
		{
		}
	}
	[Token(Token = "0x2000331")]
	public enum EUiDisplayType
	{
		[Token(Token = "0x4001507")]
		EUDT_WorldGeoQuad,
		[Token(Token = "0x4001508")]
		EUDT_OverlayQuad,
		[Token(Token = "0x4001509")]
		EUDT_None,
		[Token(Token = "0x400150A")]
		EUDT_MaxDislayTypes
	}
	[Token(Token = "0x2000332")]
	public class OVROverlaySample : MonoBehaviour
	{
		[Token(Token = "0x2000333")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x797A6C", Offset = "0x797A6C")]
		private sealed class <WaitforOVROverlay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001523")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001524")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001525")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OVROverlaySample <>4__this;

			[Token(Token = "0x170002D3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60012E2")]
				[Address(RVA = "0xCBBF88", Offset = "0xCBBF88", VA = "0xCBBF88", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002D4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60012E4")]
				[Address(RVA = "0xCBBFD0", Offset = "0xCBBFD0", VA = "0xCBBFD0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60012DF")]
			[Address(RVA = "0xCBBD58", Offset = "0xCBBD58", VA = "0xCBBD58")]
			[DebuggerHidden]
			public <WaitforOVROverlay>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x60012E0")]
			[Address(RVA = "0xCBBD84", Offset = "0xCBBD84", VA = "0xCBBD84", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60012E1")]
			[Address(RVA = "0xCBBD88", Offset = "0xCBBD88", VA = "0xCBBD88", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60012E3")]
			[Address(RVA = "0xCBBF90", Offset = "0xCBBF90", VA = "0xCBBF90", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400150B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inMenu;

		[Token(Token = "0x400150C")]
		private const string ovrOverlayID = "OVROverlayID";

		[Token(Token = "0x400150D")]
		private const string applicationID = "ApplicationID";

		[Token(Token = "0x400150E")]
		private const string noneID = "NoneID";

		[Token(Token = "0x400150F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Toggle applicationRadioButton;

		[Token(Token = "0x4001510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Toggle noneRadioButton;

		[Token(Token = "0x4001511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A1548", Offset = "0x7A1548")]
		public GameObject mainCamera;

		[Token(Token = "0x4001512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject uiCamera;

		[Token(Token = "0x4001513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject uiGeoParent;

		[Token(Token = "0x4001514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject worldspaceGeoParent;

		[Token(Token = "0x4001515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public OVROverlay cameraRenderOverlay;

		[Token(Token = "0x4001516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public OVROverlay renderingLabelOverlay;

		[Token(Token = "0x4001517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture applicationLabelTexture;

		[Token(Token = "0x4001518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture compositorLabelTexture;

		[Token(Token = "0x4001519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A1580", Offset = "0x7A1580")]
		public GameObject prefabForLevelLoadSim;

		[Token(Token = "0x400151A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public OVROverlay cubemapOverlay;

		[Token(Token = "0x400151B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OVROverlay loadingTextQuadOverlay;

		[Token(Token = "0x400151C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float distanceFromCamToLoadText;

		[Token(Token = "0x400151D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float cubeSpawnRadius;

		[Token(Token = "0x400151E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float heightBetweenItems;

		[Token(Token = "0x400151F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int numObjectsPerLevel;

		[Token(Token = "0x4001520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int numLevels;

		[Token(Token = "0x4001521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int numLoopsTrigger;

		[Token(Token = "0x4001522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<GameObject> spawnedCubes;

		[Token(Token = "0x60012CF")]
		[Address(RVA = "0x12F7484", Offset = "0x12F7484", VA = "0x12F7484")]
		private void Start()
		{
		}

		[Token(Token = "0x60012D0")]
		[Address(RVA = "0x12F7CE0", Offset = "0x12F7CE0", VA = "0x12F7CE0")]
		private void Update()
		{
		}

		[Token(Token = "0x60012D1")]
		[Address(RVA = "0x12F7E28", Offset = "0x12F7E28", VA = "0x12F7E28")]
		private void ActivateWorldGeo()
		{
		}

		[Token(Token = "0x60012D2")]
		[Address(RVA = "0x12F7F64", Offset = "0x12F7F64", VA = "0x12F7F64")]
		private void ActivateOVROverlay()
		{
		}

		[Token(Token = "0x60012D3")]
		[Address(RVA = "0x12F80A0", Offset = "0x12F80A0", VA = "0x12F80A0")]
		private void ActivateNone()
		{
		}

		[Token(Token = "0x60012D4")]
		[Address(RVA = "0x12F7DFC", Offset = "0x12F7DFC", VA = "0x12F7DFC")]
		private void TriggerLoad()
		{
		}

		[Token(Token = "0x60012D5")]
		[Address(RVA = "0x12F8180", Offset = "0x12F8180", VA = "0x12F8180")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7AB9B8", Offset = "0x7AB9B8")]
		private IEnumerator WaitforOVROverlay()
		{
			return null;
		}

		[Token(Token = "0x60012D6")]
		[Address(RVA = "0x12F81F8", Offset = "0x12F81F8", VA = "0x12F81F8")]
		private void TriggerUnload()
		{
		}

		[Token(Token = "0x60012D7")]
		[Address(RVA = "0x12F78EC", Offset = "0x12F78EC", VA = "0x12F78EC")]
		private void CameraAndRenderTargetSetup()
		{
		}

		[Token(Token = "0x60012D8")]
		[Address(RVA = "0x12F834C", Offset = "0x12F834C", VA = "0x12F834C")]
		private void SimulateLevelLoad()
		{
		}

		[Token(Token = "0x60012D9")]
		[Address(RVA = "0x12F822C", Offset = "0x12F822C", VA = "0x12F822C")]
		private void ClearObjects()
		{
		}

		[Token(Token = "0x60012DA")]
		[Address(RVA = "0x12F8664", Offset = "0x12F8664", VA = "0x12F8664")]
		public void RadioPressed(string radioLabel, string group, Toggle t)
		{
		}

		[Token(Token = "0x60012DB")]
		[Address(RVA = "0x12F8754", Offset = "0x12F8754", VA = "0x12F8754")]
		public OVROverlaySample()
		{
		}

		[Token(Token = "0x60012DC")]
		[Address(RVA = "0x12F87E4", Offset = "0x12F87E4", VA = "0x12F87E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7ABA18", Offset = "0x7ABA18")]
		private void <Start>b__24_0(Toggle t)
		{
		}

		[Token(Token = "0x60012DD")]
		[Address(RVA = "0x12F883C", Offset = "0x12F883C", VA = "0x12F883C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7ABA28", Offset = "0x7ABA28")]
		private void <Start>b__24_1(Toggle t)
		{
		}

		[Token(Token = "0x60012DE")]
		[Address(RVA = "0x12F8894", Offset = "0x12F8894", VA = "0x12F8894")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7ABA38", Offset = "0x7ABA38")]
		private void <Start>b__24_2(Toggle t)
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x2000334")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x797A7C", Offset = "0x797A7C")]
	public class Hand : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000335")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x797ADC", Offset = "0x797ADC")]
		private sealed class <>c
		{
			[Token(Token = "0x4001542")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001543")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Collider, bool> <>9__28_0;

			[Token(Token = "0x60012F2")]
			[Address(RVA = "0xB0C398", Offset = "0xB0C398", VA = "0xB0C398")]
			public <>c()
			{
			}

			[Token(Token = "0x60012F3")]
			[Address(RVA = "0xB0C3A0", Offset = "0xB0C3A0", VA = "0xB0C3A0")]
			internal bool <Start>b__28_0(Collider childCollider)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001526")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x4001527")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x4001528")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x4001529")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x400152A")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x400152B")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x400152C")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x400152D")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x400152E")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x400152F")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x4001530")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x4001531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4001532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4001533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x4001534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] m_colliders;

		[Token(Token = "0x4001535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x4001536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x4001537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x4001538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x4001539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x400153A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x400153B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x400153C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isPointing;

		[Token(Token = "0x400153D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x400153E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_pointBlend;

		[Token(Token = "0x400153F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x4001540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x4001541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x60012E5")]
		[Address(RVA = "0xCF5F6C", Offset = "0xCF5F6C", VA = "0xCF5F6C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60012E6")]
		[Address(RVA = "0xCF5FC8", Offset = "0xCF5FC8", VA = "0xCF5FC8")]
		private void Start()
		{
		}

		[Token(Token = "0x60012E7")]
		[Address(RVA = "0xCF62FC", Offset = "0xCF62FC", VA = "0xCF62FC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60012E8")]
		[Address(RVA = "0xCF63E8", Offset = "0xCF63E8", VA = "0xCF63E8")]
		private void Update()
		{
		}

		[Token(Token = "0x60012E9")]
		[Address(RVA = "0xCF652C", Offset = "0xCF652C", VA = "0xCF652C")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x60012EA")]
		[Address(RVA = "0xCF6834", Offset = "0xCF6834", VA = "0xCF6834")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60012EB")]
		[Address(RVA = "0xCF692C", Offset = "0xCF692C", VA = "0xCF692C")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x60012EC")]
		[Address(RVA = "0xCF6A80", Offset = "0xCF6A80", VA = "0xCF6A80")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x60012ED")]
		[Address(RVA = "0xCF65C4", Offset = "0xCF65C4", VA = "0xCF65C4")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x60012EE")]
		[Address(RVA = "0xCF6618", Offset = "0xCF6618", VA = "0xCF6618")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x60012EF")]
		[Address(RVA = "0xCF62F8", Offset = "0xCF62F8", VA = "0xCF62F8")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x60012F0")]
		[Address(RVA = "0xCF6BBC", Offset = "0xCF6BBC", VA = "0xCF6BBC")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x2000336")]
	public enum HandPoseId
	{
		[Token(Token = "0x4001545")]
		Default,
		[Token(Token = "0x4001546")]
		Generic,
		[Token(Token = "0x4001547")]
		PingPongBall,
		[Token(Token = "0x4001548")]
		Controller
	}
	[Token(Token = "0x2000337")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x4001549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x400154A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x400154B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x170002D5")]
		public bool AllowPointing
		{
			[Token(Token = "0x60012F4")]
			[Address(RVA = "0xF510FC", Offset = "0xF510FC", VA = "0xF510FC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002D6")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x60012F5")]
			[Address(RVA = "0xF51104", Offset = "0xF51104", VA = "0xF51104")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002D7")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x60012F6")]
			[Address(RVA = "0xF5110C", Offset = "0xF5110C", VA = "0xF5110C")]
			get
			{
				return default(HandPoseId);
			}
			[Token(Token = "0x60012F7")]
			[Address(RVA = "0xF51114", Offset = "0xF51114", VA = "0xF51114")]
			set
			{
			}
		}

		[Token(Token = "0x60012F8")]
		[Address(RVA = "0xF5111C", Offset = "0xF5111C", VA = "0xF5111C")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x2000338")]
	public class TouchController : MonoBehaviour
	{
		[Token(Token = "0x400154C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x400154D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x400154E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x60012F9")]
		[Address(RVA = "0xE8372C", Offset = "0xE8372C", VA = "0xE8372C")]
		private void Update()
		{
		}

		[Token(Token = "0x60012FA")]
		[Address(RVA = "0xE83A14", Offset = "0xE83A14", VA = "0xE83A14")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x60012FB")]
		[Address(RVA = "0xE83A70", Offset = "0xE83A70", VA = "0xE83A70")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x60012FC")]
		[Address(RVA = "0xE83AB4", Offset = "0xE83AB4", VA = "0xE83AB4")]
		public TouchController()
		{
		}
	}
}
namespace Oculus.Voice.Demo.UIShapesDemo
{
	[Token(Token = "0x2000339")]
	public class InteractionHandler : MonoBehaviour
	{
		[Token(Token = "0x400154F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[Multiline]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A1638", Offset = "0x7A1638")]
		private string freshStateText;

		[Token(Token = "0x4001550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A1694", Offset = "0x7A1694")]
		private Text textArea;

		[Token(Token = "0x4001551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool showJson;

		[Token(Token = "0x4001552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A16F0", Offset = "0x7A16F0")]
		[SerializeField]
		private AppVoiceExperience appVoiceExperience;

		[Token(Token = "0x4001553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string pendingText;

		[Token(Token = "0x60012FD")]
		[Address(RVA = "0xF5E01C", Offset = "0xF5E01C", VA = "0xF5E01C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60012FE")]
		[Address(RVA = "0xF5E0E8", Offset = "0xF5E0E8", VA = "0xF5E0E8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60012FF")]
		[Address(RVA = "0xF5E1B4", Offset = "0xF5E1B4", VA = "0xF5E1B4")]
		private void OnRequestStarted(WitRequest r)
		{
		}

		[Token(Token = "0x6001300")]
		[Address(RVA = "0xF5E274", Offset = "0xF5E274", VA = "0xF5E274")]
		private void Update()
		{
		}

		[Token(Token = "0x6001301")]
		[Address(RVA = "0xF5E2CC", Offset = "0xF5E2CC", VA = "0xF5E2CC")]
		public void OnResponse(WitResponseNode response)
		{
		}

		[Token(Token = "0x6001302")]
		[Address(RVA = "0xF5E3BC", Offset = "0xF5E3BC", VA = "0xF5E3BC")]
		public void OnError(string error, string message)
		{
		}

		[Token(Token = "0x6001303")]
		[Address(RVA = "0xF5E5C4", Offset = "0xF5E5C4", VA = "0xF5E5C4")]
		public void ToggleActivation()
		{
		}

		[Token(Token = "0x6001304")]
		[Address(RVA = "0xF5E624", Offset = "0xF5E624", VA = "0xF5E624")]
		public InteractionHandler()
		{
		}

		[Token(Token = "0x6001305")]
		[Address(RVA = "0xF5E680", Offset = "0xF5E680", VA = "0xF5E680")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7ABA98", Offset = "0x7ABA98")]
		private void <OnRequestStarted>b__7_0(string response)
		{
		}
	}
	[Token(Token = "0x200033A")]
	public class ColorChanger : MonoBehaviour
	{
		[Token(Token = "0x6001306")]
		[Address(RVA = "0xF1D214", Offset = "0xF1D214", VA = "0xF1D214")]
		private void SetColor(Transform trans, Color color)
		{
		}

		[Token(Token = "0x6001307")]
		[Address(RVA = "0xF1D2B0", Offset = "0xF1D2B0", VA = "0xF1D2B0")]
		public void UpdateColor(WitResponseNode commandResult)
		{
		}

		[Token(Token = "0x6001308")]
		[Address(RVA = "0xF1D4D4", Offset = "0xF1D4D4", VA = "0xF1D4D4")]
		public void UpdateColor(string[] results)
		{
		}

		[Token(Token = "0x6001309")]
		[Address(RVA = "0xF1D344", Offset = "0xF1D344", VA = "0xF1D344")]
		public void UpdateColor(string colorName, string shape)
		{
		}

		[Token(Token = "0x600130A")]
		[Address(RVA = "0xF1D510", Offset = "0xF1D510", VA = "0xF1D510")]
		public ColorChanger()
		{
		}
	}
	[Token(Token = "0x200033B")]
	[ExecuteAlways]
	public class Instructions : MonoBehaviour
	{
		[Token(Token = "0x200033C")]
		internal enum Step
		{
			[Token(Token = "0x4001558")]
			SetupWit,
			[Token(Token = "0x4001559")]
			MissingServerToken,
			[Token(Token = "0x400155A")]
			MissingClientToken,
			[Token(Token = "0x400155B")]
			AddConfig,
			[Token(Token = "0x400155C")]
			AddVoiceExperiences,
			[Token(Token = "0x400155D")]
			SetConfig,
			[Token(Token = "0x400155E")]
			Ready
		}

		[Token(Token = "0x4001554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string[] steps;

		[Token(Token = "0x4001555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text instructionText;

		[Token(Token = "0x4001556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Step currentStep;

		[Token(Token = "0x170002D8")]
		internal Step CurrentStep
		{
			[Token(Token = "0x600130B")]
			[Address(RVA = "0xF5B978", Offset = "0xF5B978", VA = "0xF5B978")]
			get
			{
				return default(Step);
			}
		}

		[Token(Token = "0x170002D9")]
		internal string CurrentStepText
		{
			[Token(Token = "0x600130C")]
			[Address(RVA = "0xF5B980", Offset = "0xF5B980", VA = "0xF5B980")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600130D")]
		[Address(RVA = "0xF5BA14", Offset = "0xF5BA14", VA = "0xF5BA14")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x600130E")]
		[Address(RVA = "0xF5BA1C", Offset = "0xF5BA1C", VA = "0xF5BA1C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600130F")]
		[Address(RVA = "0xF5BA20", Offset = "0xF5BA20", VA = "0xF5BA20")]
		private void Update()
		{
		}

		[Token(Token = "0x6001310")]
		[Address(RVA = "0xF5BA18", Offset = "0xF5BA18", VA = "0xF5BA18")]
		private void UpdateStep()
		{
		}

		[Token(Token = "0x6001311")]
		[Address(RVA = "0xF5BA24", Offset = "0xF5BA24", VA = "0xF5BA24")]
		public Instructions()
		{
		}
	}
}
namespace Oculus.Voice.Demo.BuiltInDemo
{
	[Token(Token = "0x200033D")]
	public class TimerController : MonoBehaviour
	{
		[Token(Token = "0x400155F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float _time;

		[Token(Token = "0x4001560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool _timerExist;

		[Token(Token = "0x4001561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		private bool _timerRunning;

		[Token(Token = "0x4001562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A174C", Offset = "0x7A174C")]
		public Text logText;

		[Token(Token = "0x4001563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A1784", Offset = "0x7A1784")]
		public AudioClip buzzSound;

		[Token(Token = "0x6001313")]
		[Address(RVA = "0xE82338", Offset = "0xE82338", VA = "0xE82338")]
		private void Update()
		{
		}

		[Token(Token = "0x6001314")]
		[Address(RVA = "0xE82408", Offset = "0xE82408", VA = "0xE82408")]
		private void Log(string msg)
		{
		}

		[Token(Token = "0x6001315")]
		[Address(RVA = "0xE8239C", Offset = "0xE8239C", VA = "0xE8239C")]
		private void OnElapsedTime()
		{
		}

		[Token(Token = "0x6001316")]
		[Address(RVA = "0xE82498", Offset = "0xE82498", VA = "0xE82498")]
		public void DeleteTimer()
		{
		}

		[Token(Token = "0x6001317")]
		[Address(RVA = "0xE8250C", Offset = "0xE8250C", VA = "0xE8250C")]
		public void CreateTimer(string[] entityValues)
		{
		}

		[Token(Token = "0x6001318")]
		[Address(RVA = "0xE828E0", Offset = "0xE828E0", VA = "0xE828E0")]
		public void GetTimerIntent()
		{
		}

		[Token(Token = "0x6001319")]
		[Address(RVA = "0xE82990", Offset = "0xE82990", VA = "0xE82990")]
		public void PauseTimer()
		{
		}

		[Token(Token = "0x600131A")]
		[Address(RVA = "0xE829E0", Offset = "0xE829E0", VA = "0xE829E0")]
		public void ResumeTimer()
		{
		}

		[Token(Token = "0x600131B")]
		[Address(RVA = "0xE82A34", Offset = "0xE82A34", VA = "0xE82A34")]
		public void SubtractTimeTimer(string[] entityValues)
		{
		}

		[Token(Token = "0x600131C")]
		[Address(RVA = "0xE82B4C", Offset = "0xE82B4C", VA = "0xE82B4C")]
		public void AddTimeToTimer(string[] entityValues)
		{
		}

		[Token(Token = "0x600131D")]
		[Address(RVA = "0xE82C58", Offset = "0xE82C58", VA = "0xE82C58")]
		public float GetRemainingTime()
		{
			return default(float);
		}

		[Token(Token = "0x600131E")]
		[Address(RVA = "0xE82908", Offset = "0xE82908", VA = "0xE82908")]
		public string GetFormattedTimeFromSeconds()
		{
			return null;
		}

		[Token(Token = "0x600131F")]
		[Address(RVA = "0xE8276C", Offset = "0xE8276C", VA = "0xE8276C")]
		private bool ParseTime(string[] entityValues, out float time)
		{
			return default(bool);
		}

		[Token(Token = "0x6001320")]
		[Address(RVA = "0xE82C60", Offset = "0xE82C60", VA = "0xE82C60")]
		public TimerController()
		{
		}
	}
	[Token(Token = "0x200033E")]
	public class TimerDisplay : MonoBehaviour
	{
		[Token(Token = "0x4001564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TimerController timer;

		[Token(Token = "0x4001565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text _uiText;

		[Token(Token = "0x6001321")]
		[Address(RVA = "0xE82C68", Offset = "0xE82C68", VA = "0xE82C68")]
		private void Start()
		{
		}

		[Token(Token = "0x6001322")]
		[Address(RVA = "0xE82CC4", Offset = "0xE82CC4", VA = "0xE82CC4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001323")]
		[Address(RVA = "0xE82D0C", Offset = "0xE82D0C", VA = "0xE82D0C")]
		public TimerDisplay()
		{
		}
	}
	[Token(Token = "0x200033F")]
	public class WitActivation : MonoBehaviour
	{
		[Token(Token = "0x4001566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AppVoiceExperience voiceExperience;

		[Token(Token = "0x6001324")]
		[Address(RVA = "0xB006A0", Offset = "0xB006A0", VA = "0xB006A0")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001325")]
		[Address(RVA = "0xB00758", Offset = "0xB00758", VA = "0xB00758")]
		private void Start()
		{
		}

		[Token(Token = "0x6001326")]
		[Address(RVA = "0xB007B4", Offset = "0xB007B4", VA = "0xB007B4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001327")]
		[Address(RVA = "0xB00838", Offset = "0xB00838", VA = "0xB00838")]
		public void ActivateWit()
		{
		}

		[Token(Token = "0x6001328")]
		[Address(RVA = "0xB0085C", Offset = "0xB0085C", VA = "0xB0085C")]
		public WitActivation()
		{
		}
	}
}
namespace Oculus.Avatar
{
	[Token(Token = "0x2000340")]
	public static class AvatarLogger
	{
		[Token(Token = "0x4001567")]
		public const string LogAvatar = "[Avatars] - ";

		[Token(Token = "0x4001568")]
		public const string Tab = "    ";

		[Token(Token = "0x6001329")]
		[Address(RVA = "0xAE8364", Offset = "0xAE8364", VA = "0xAE8364")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x7ABAA8", Offset = "0x7ABAA8")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x7ABAA8", Offset = "0x7ABAA8")]
		public static void Log(string logMsg)
		{
		}

		[Token(Token = "0x600132A")]
		[Address(RVA = "0xAE83F4", Offset = "0xAE83F4", VA = "0xAE83F4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x7ABB08", Offset = "0x7ABB08")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x7ABB08", Offset = "0x7ABB08")]
		public static void Log(string logMsg, UnityEngine.Object context)
		{
		}

		[Token(Token = "0x600132B")]
		[Address(RVA = "0xAE8494", Offset = "0xAE8494", VA = "0xAE8494")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x7ABB68", Offset = "0x7ABB68")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x7ABB68", Offset = "0x7ABB68")]
		public static void LogWarning(string logMsg)
		{
		}

		[Token(Token = "0x600132C")]
		[Address(RVA = "0xAE8524", Offset = "0xAE8524", VA = "0xAE8524")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x7ABBC8", Offset = "0x7ABBC8")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x7ABBC8", Offset = "0x7ABBC8")]
		public static void LogError(string logMsg)
		{
		}

		[Token(Token = "0x600132D")]
		[Address(RVA = "0xAE85B4", Offset = "0xAE85B4", VA = "0xAE85B4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x7ABC28", Offset = "0x7ABC28")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x7ABC28", Offset = "0x7ABC28")]
		public static void LogError(string logMsg, UnityEngine.Object context)
		{
		}
	}
	[Token(Token = "0x2000341")]
	public class CAPI
	{
		[Token(Token = "0x2000342")]
		public delegate void LoggingDelegate(IntPtr str);

		[Token(Token = "0x2000343")]
		public enum Result
		{
			[Token(Token = "0x4001574")]
			Success = 0,
			[Token(Token = "0x4001575")]
			Failure = -1000,
			[Token(Token = "0x4001576")]
			Failure_InvalidParameter = -1001,
			[Token(Token = "0x4001577")]
			Failure_NotInitialized = -1002,
			[Token(Token = "0x4001578")]
			Failure_InvalidOperation = -1003,
			[Token(Token = "0x4001579")]
			Failure_Unsupported = -1004,
			[Token(Token = "0x400157A")]
			Failure_NotYetImplemented = -1005,
			[Token(Token = "0x400157B")]
			Failure_OperationFailed = -1006,
			[Token(Token = "0x400157C")]
			Failure_InsufficientSize = -1007
		}

		[Token(Token = "0x2000344")]
		private static class OVRP_1_30_0
		{
			[Token(Token = "0x400157D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly Version version;

			[PreserveSig]
			[Token(Token = "0x60013C2")]
			[Address(RVA = "0xB06188", Offset = "0xB06188", VA = "0xB06188")]
			public static extern Result ovrp_SendEvent2(string name, string param, string source);
		}

		[Token(Token = "0x4001569")]
		private const string LibFile = "ovravatarloader";

		[Token(Token = "0x400156A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IntPtr nativeVisemeData;

		[Token(Token = "0x400156B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IntPtr nativeGazeTargetsData;

		[Token(Token = "0x400156C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IntPtr nativeAvatarLightsData;

		[Token(Token = "0x400156D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IntPtr DebugLineCountData;

		[Token(Token = "0x400156E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static float[] scratchBufferFloat;

		[Token(Token = "0x400156F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject debugLineGo;

		[Token(Token = "0x4001570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static string SDKRuntimePrefix;

		[Token(Token = "0x4001571")]
		private const string ovrPluginDLL = "OVRPlugin";

		[Token(Token = "0x4001572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Version ovrPluginVersion;

		[PreserveSig]
		[Token(Token = "0x600132E")]
		[Address(RVA = "0xAF30A4", Offset = "0xAF30A4", VA = "0xAF30A4")]
		public static extern void ovrAvatar_InitializeAndroidUnity(string appID);

		[Token(Token = "0x600132F")]
		[Address(RVA = "0xAF3134", Offset = "0xAF3134", VA = "0xAF3134")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x6001330")]
		[Address(RVA = "0xAF3358", Offset = "0xAF3358", VA = "0xAF3358")]
		public static void Shutdown()
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001331")]
		[Address(RVA = "0xAF3444", Offset = "0xAF3444", VA = "0xAF3444")]
		public static extern void ovrAvatar_Shutdown();

		[PreserveSig]
		[Token(Token = "0x6001332")]
		[Address(RVA = "0xAF34B4", Offset = "0xAF34B4", VA = "0xAF34B4")]
		public static extern IntPtr ovrAvatarMessage_Pop();

		[PreserveSig]
		[Token(Token = "0x6001333")]
		[Address(RVA = "0xAF3528", Offset = "0xAF3528", VA = "0xAF3528")]
		public static extern ovrAvatarMessageType ovrAvatarMessage_GetType(IntPtr msg);

		[Token(Token = "0x6001334")]
		[Address(RVA = "0xAF35A8", Offset = "0xAF35A8", VA = "0xAF35A8")]
		public static ovrAvatarMessage_AvatarSpecification ovrAvatarMessage_GetAvatarSpecification(IntPtr msg)
		{
			return default(ovrAvatarMessage_AvatarSpecification);
		}

		[PreserveSig]
		[Token(Token = "0x6001335")]
		[Address(RVA = "0xAF36EC", Offset = "0xAF36EC", VA = "0xAF36EC")]
		private static extern IntPtr ovrAvatarMessage_GetAvatarSpecification_Native(IntPtr msg);

		[Token(Token = "0x6001336")]
		[Address(RVA = "0xAF376C", Offset = "0xAF376C", VA = "0xAF376C")]
		public static ovrAvatarMessage_AssetLoaded ovrAvatarMessage_GetAssetLoaded(IntPtr msg)
		{
			return default(ovrAvatarMessage_AssetLoaded);
		}

		[PreserveSig]
		[Token(Token = "0x6001337")]
		[Address(RVA = "0xAF38B0", Offset = "0xAF38B0", VA = "0xAF38B0")]
		private static extern IntPtr ovrAvatarMessage_GetAssetLoaded_Native(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6001338")]
		[Address(RVA = "0xAF3930", Offset = "0xAF3930", VA = "0xAF3930")]
		public static extern void ovrAvatarMessage_Free(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6001339")]
		[Address(RVA = "0xAF39B0", Offset = "0xAF39B0", VA = "0xAF39B0")]
		public static extern IntPtr ovrAvatarSpecificationRequest_Create(ulong userID);

		[PreserveSig]
		[Token(Token = "0x600133A")]
		[Address(RVA = "0xAF3A30", Offset = "0xAF3A30", VA = "0xAF3A30")]
		public static extern void ovrAvatarSpecificationRequest_Destroy(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x600133B")]
		[Address(RVA = "0xAF3AB0", Offset = "0xAF3AB0", VA = "0xAF3AB0")]
		public static extern void ovrAvatarSpecificationRequest_SetCombineMeshes(IntPtr specificationRequest, bool useCombinedMesh);

		[PreserveSig]
		[Token(Token = "0x600133C")]
		[Address(RVA = "0xAF3B40", Offset = "0xAF3B40", VA = "0xAF3B40")]
		public static extern void ovrAvatarSpecificationRequest_SetLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x600133D")]
		[Address(RVA = "0xAF3BD0", Offset = "0xAF3BD0", VA = "0xAF3BD0")]
		public static extern void ovrAvatarSpecificationRequest_SetLevelOfDetail(IntPtr specificationRequest, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x600133E")]
		[Address(RVA = "0xAF3C60", Offset = "0xAF3C60", VA = "0xAF3C60")]
		public static extern void ovrAvatar_RequestAvatarSpecification(ulong userID);

		[PreserveSig]
		[Token(Token = "0x600133F")]
		[Address(RVA = "0xAF3CE0", Offset = "0xAF3CE0", VA = "0xAF3CE0")]
		public static extern void ovrAvatar_RequestAvatarSpecificationFromSpecRequest(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6001340")]
		[Address(RVA = "0xAF3D60", Offset = "0xAF3D60", VA = "0xAF3D60")]
		public static extern void ovrAvatarSpecificationRequest_SetFallbackLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x6001341")]
		[Address(RVA = "0xAF3DF0", Offset = "0xAF3DF0", VA = "0xAF3DF0")]
		public static extern void ovrAvatarSpecificationRequest_SetExpressiveFlag(IntPtr specificationRequest, bool enable);

		[PreserveSig]
		[Token(Token = "0x6001342")]
		[Address(RVA = "0xAF3E80", Offset = "0xAF3E80", VA = "0xAF3E80")]
		public static extern IntPtr ovrAvatar_Create(IntPtr avatarSpecification, ovrAvatarCapabilities capabilities);

		[PreserveSig]
		[Token(Token = "0x6001343")]
		[Address(RVA = "0xAF3F10", Offset = "0xAF3F10", VA = "0xAF3F10")]
		public static extern void ovrAvatar_Destroy(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001344")]
		[Address(RVA = "0xAF3F90", Offset = "0xAF3F90", VA = "0xAF3F90")]
		public static extern void ovrAvatarPose_UpdateBody(IntPtr avatar, ovrAvatarTransform headPose);

		[Token(Token = "0x6001345")]
		[Address(RVA = "0xAF4030", Offset = "0xAF4030", VA = "0xAF4030")]
		public static void ovrAvatarPose_UpdateVoiceVisualization(IntPtr avatar, float[] pcmData)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001346")]
		[Address(RVA = "0xAF40AC", Offset = "0xAF40AC", VA = "0xAF40AC")]
		private static extern void ovrAvatarPose_UpdateVoiceVisualization_Native(IntPtr avatar, uint pcmDataSize, [In] float[] pcmData);

		[PreserveSig]
		[Token(Token = "0x6001347")]
		[Address(RVA = "0xAF414C", Offset = "0xAF414C", VA = "0xAF414C")]
		public static extern void ovrAvatarPose_UpdateHands(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight);

		[PreserveSig]
		[Token(Token = "0x6001348")]
		[Address(RVA = "0xAF420C", Offset = "0xAF420C", VA = "0xAF420C")]
		public static extern void ovrAvatarPose_UpdateHandsWithType(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight, ovrAvatarControllerType type);

		[PreserveSig]
		[Token(Token = "0x6001349")]
		[Address(RVA = "0xAF42DC", Offset = "0xAF42DC", VA = "0xAF42DC")]
		public static extern void ovrAvatarPose_Finalize(IntPtr avatar, float elapsedSeconds);

		[PreserveSig]
		[Token(Token = "0x600134A")]
		[Address(RVA = "0xAF436C", Offset = "0xAF436C", VA = "0xAF436C")]
		public static extern void ovrAvatar_SetLeftControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x600134B")]
		[Address(RVA = "0xAF43FC", Offset = "0xAF43FC", VA = "0xAF43FC")]
		public static extern void ovrAvatar_SetRightControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x600134C")]
		[Address(RVA = "0xAF448C", Offset = "0xAF448C", VA = "0xAF448C")]
		public static extern void ovrAvatar_SetLeftHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x600134D")]
		[Address(RVA = "0xAF451C", Offset = "0xAF451C", VA = "0xAF451C")]
		public static extern void ovrAvatar_SetRightHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x600134E")]
		[Address(RVA = "0xAF45AC", Offset = "0xAF45AC", VA = "0xAF45AC")]
		public static extern uint ovrAvatarComponent_Count(IntPtr avatar);

		[Token(Token = "0x600134F")]
		[Address(RVA = "0xAF462C", Offset = "0xAF462C", VA = "0xAF462C")]
		public static void ovrAvatarComponent_Get(IntPtr avatar, uint index, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[Token(Token = "0x6001350")]
		[Address(RVA = "0xAF4748", Offset = "0xAF4748", VA = "0xAF4748")]
		public static void ovrAvatarComponent_Get(IntPtr componentPtr, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001351")]
		[Address(RVA = "0xAF46B8", Offset = "0xAF46B8", VA = "0xAF46B8")]
		public static extern IntPtr ovrAvatarComponent_Get_Native(IntPtr avatar, uint index);

		[Token(Token = "0x6001352")]
		[Address(RVA = "0xAF4968", Offset = "0xAF4968", VA = "0xAF4968")]
		public static bool ovrAvatarPose_GetBaseComponent(IntPtr avatar, ref ovrAvatarBaseComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001353")]
		[Address(RVA = "0xAF4AD8", Offset = "0xAF4AD8", VA = "0xAF4AD8")]
		private static extern IntPtr ovrAvatarPose_GetBaseComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001354")]
		public static IntPtr MarshalRenderComponent<T>(IntPtr ptr) where T : struct
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001355")]
		[Address(RVA = "0xAF4B58", Offset = "0xAF4B58", VA = "0xAF4B58")]
		public static bool ovrAvatarPose_GetBodyComponent(IntPtr avatar, ref ovrAvatarBodyComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001356")]
		[Address(RVA = "0xAF4E00", Offset = "0xAF4E00", VA = "0xAF4E00")]
		private static extern IntPtr ovrAvatarPose_GetBodyComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001357")]
		[Address(RVA = "0xAF4E80", Offset = "0xAF4E80", VA = "0xAF4E80")]
		public static bool ovrAvatarPose_GetLeftControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001358")]
		[Address(RVA = "0xAF4FF0", Offset = "0xAF4FF0", VA = "0xAF4FF0")]
		private static extern IntPtr ovrAvatarPose_GetLeftControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001359")]
		[Address(RVA = "0xAF5070", Offset = "0xAF5070", VA = "0xAF5070")]
		public static bool ovrAvatarPose_GetRightControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x600135A")]
		[Address(RVA = "0xAF51E0", Offset = "0xAF51E0", VA = "0xAF51E0")]
		private static extern IntPtr ovrAvatarPose_GetRightControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x600135B")]
		[Address(RVA = "0xAF5260", Offset = "0xAF5260", VA = "0xAF5260")]
		public static bool ovrAvatarPose_GetLeftHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x600135C")]
		[Address(RVA = "0xAF53D0", Offset = "0xAF53D0", VA = "0xAF53D0")]
		private static extern IntPtr ovrAvatarPose_GetLeftHandComponent_Native(IntPtr avatar);

		[Token(Token = "0x600135D")]
		[Address(RVA = "0xAF5450", Offset = "0xAF5450", VA = "0xAF5450")]
		public static bool ovrAvatarPose_GetRightHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x600135E")]
		[Address(RVA = "0xAF55C0", Offset = "0xAF55C0", VA = "0xAF55C0")]
		private static extern IntPtr ovrAvatarPose_GetRightHandComponent_Native(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x600135F")]
		[Address(RVA = "0xAF5640", Offset = "0xAF5640", VA = "0xAF5640")]
		public static extern void ovrAvatarAsset_BeginLoading(ulong assetID);

		[PreserveSig]
		[Token(Token = "0x6001360")]
		[Address(RVA = "0xAF56C0", Offset = "0xAF56C0", VA = "0xAF56C0")]
		public static extern bool ovrAvatarAsset_BeginLoadingLOD(ulong assetId, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x6001361")]
		[Address(RVA = "0xAF5758", Offset = "0xAF5758", VA = "0xAF5758")]
		public static extern ovrAvatarAssetType ovrAvatarAsset_GetType(IntPtr assetHandle);

		[Token(Token = "0x6001362")]
		[Address(RVA = "0xAF57D8", Offset = "0xAF57D8", VA = "0xAF57D8")]
		public static ovrAvatarMeshAssetData ovrAvatarAsset_GetMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetData);
		}

		[Token(Token = "0x6001363")]
		[Address(RVA = "0xAF59B0", Offset = "0xAF59B0", VA = "0xAF59B0")]
		public static ovrAvatarMeshAssetDataV2 ovrAvatarAsset_GetCombinedMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetDataV2);
		}

		[PreserveSig]
		[Token(Token = "0x6001364")]
		[Address(RVA = "0xAF5B08", Offset = "0xAF5B08", VA = "0xAF5B08")]
		private static extern IntPtr ovrAvatarAsset_GetCombinedMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001365")]
		[Address(RVA = "0xAF5930", Offset = "0xAF5930", VA = "0xAF5930")]
		private static extern IntPtr ovrAvatarAsset_GetMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001366")]
		[Address(RVA = "0xAF5B88", Offset = "0xAF5B88", VA = "0xAF5B88")]
		public static extern uint ovrAvatarAsset_GetMeshBlendShapeCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001367")]
		[Address(RVA = "0xAF5C08", Offset = "0xAF5C08", VA = "0xAF5C08")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeName(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x6001368")]
		[Address(RVA = "0xAF5C98", Offset = "0xAF5C98", VA = "0xAF5C98")]
		public static extern uint ovrAvatarAsset_GetSubmeshCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001369")]
		[Address(RVA = "0xAF5D18", Offset = "0xAF5D18", VA = "0xAF5D18")]
		public static extern uint ovrAvatarAsset_GetSubmeshLastIndex(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x600136A")]
		[Address(RVA = "0xAF5DA8", Offset = "0xAF5DA8", VA = "0xAF5DA8")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeVertices(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x600136B")]
		[Address(RVA = "0xAF5E28", Offset = "0xAF5E28", VA = "0xAF5E28")]
		public static extern IntPtr ovrAvatarAsset_GetAvatar(IntPtr assetHandle);

		[Token(Token = "0x600136C")]
		[Address(RVA = "0xAF5EA8", Offset = "0xAF5EA8", VA = "0xAF5EA8")]
		public static ulong[] ovrAvatarAsset_GetCombinedMeshIDs(IntPtr assetHandle)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600136D")]
		[Address(RVA = "0xAF6134", Offset = "0xAF6134", VA = "0xAF6134")]
		public static extern IntPtr ovrAvatarAsset_GetCombinedMeshIDs_Native(IntPtr assetHandle, IntPtr count);

		[Token(Token = "0x600136E")]
		[Address(RVA = "0xAF61C4", Offset = "0xAF61C4", VA = "0xAF61C4")]
		public static void ovrAvatar_GetCombinedMeshAlphaData(IntPtr avatar, ref ulong textureID, ref Vector4 offset)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600136F")]
		[Address(RVA = "0xAF63F4", Offset = "0xAF63F4", VA = "0xAF63F4")]
		public static extern IntPtr ovrAvatar_GetCombinedMeshAlphaData_Native(IntPtr avatar, IntPtr textureIDPtr, IntPtr offsetPtr);

		[Token(Token = "0x6001370")]
		[Address(RVA = "0xAF648C", Offset = "0xAF648C", VA = "0xAF648C")]
		public static ovrAvatarTextureAssetData ovrAvatarAsset_GetTextureData(IntPtr assetPtr)
		{
			return default(ovrAvatarTextureAssetData);
		}

		[PreserveSig]
		[Token(Token = "0x6001371")]
		[Address(RVA = "0xAF65DC", Offset = "0xAF65DC", VA = "0xAF65DC")]
		private static extern IntPtr ovrAvatarAsset_GetTextureData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001372")]
		[Address(RVA = "0xAF665C", Offset = "0xAF665C", VA = "0xAF665C")]
		private static extern IntPtr ovrAvatarAsset_GetMaterialData_Native(IntPtr assetPtr);

		[Token(Token = "0x6001373")]
		[Address(RVA = "0xAF66DC", Offset = "0xAF66DC", VA = "0xAF66DC")]
		public static ovrAvatarMaterialState ovrAvatarAsset_GetMaterialState(IntPtr assetPtr)
		{
			return default(ovrAvatarMaterialState);
		}

		[PreserveSig]
		[Token(Token = "0x6001374")]
		[Address(RVA = "0xAF6830", Offset = "0xAF6830", VA = "0xAF6830")]
		public static extern ovrAvatarRenderPartType ovrAvatarRenderPart_GetType(IntPtr renderPart);

		[Token(Token = "0x6001375")]
		[Address(RVA = "0xAF68B0", Offset = "0xAF68B0", VA = "0xAF68B0")]
		public static ovrAvatarRenderPart_SkinnedMeshRender ovrAvatarRenderPart_GetSkinnedMeshRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRender);
		}

		[PreserveSig]
		[Token(Token = "0x6001376")]
		[Address(RVA = "0xAF6A04", Offset = "0xAF6A04", VA = "0xAF6A04")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001377")]
		[Address(RVA = "0xAF6A84", Offset = "0xAF6A84", VA = "0xAF6A84")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001378")]
		[Address(RVA = "0xAF6B14", Offset = "0xAF6B14", VA = "0xAF6B14")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001379")]
		[Address(RVA = "0xAF6BA4", Offset = "0xAF6BA4", VA = "0xAF6BA4")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600137A")]
		[Address(RVA = "0xAF6C34", Offset = "0xAF6C34", VA = "0xAF6C34")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRender_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600137B")]
		[Address(RVA = "0xAF6CB4", Offset = "0xAF6CB4", VA = "0xAF6CB4")]
		public static extern bool ovrAvatarSkinnedMeshRender_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600137C")]
		[Address(RVA = "0xAF6D3C", Offset = "0xAF6D3C", VA = "0xAF6D3C")]
		public static extern bool ovrAvatarSkinnedMeshRenderPBSV2_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600137D")]
		[Address(RVA = "0xAF6DC4", Offset = "0xAF6DC4", VA = "0xAF6DC4")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBS_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600137E")]
		[Address(RVA = "0xAF6E44", Offset = "0xAF6E44", VA = "0xAF6E44")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBSV2_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600137F")]
		[Address(RVA = "0xAF6EC4", Offset = "0xAF6EC4", VA = "0xAF6EC4")]
		public static extern ovrAvatarMaterialState ovrAvatarSkinnedMeshRender_GetMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001380")]
		[Address(RVA = "0xAF6F78", Offset = "0xAF6F78", VA = "0xAF6F78")]
		public static extern ovrAvatarPBSMaterialState ovrAvatarSkinnedMeshRenderPBSV2_GetPBSMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001381")]
		[Address(RVA = "0xAF7008", Offset = "0xAF7008", VA = "0xAF7008")]
		public static extern ovrAvatarExpressiveParameters ovrAvatar_GetExpressiveParameters(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001382")]
		[Address(RVA = "0xAF7098", Offset = "0xAF7098", VA = "0xAF7098")]
		public static extern ulong ovrAvatarSkinnedMeshRender_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001383")]
		[Address(RVA = "0xAF7118", Offset = "0xAF7118", VA = "0xAF7118")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001384")]
		[Address(RVA = "0xAF7198", Offset = "0xAF7198", VA = "0xAF7198")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBSV2_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001385")]
		[Address(RVA = "0xAF7218", Offset = "0xAF7218", VA = "0xAF7218")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6001386")]
		[Address(RVA = "0xAF72B0", Offset = "0xAF72B0", VA = "0xAF72B0")]
		public static extern void ovrAvatar_SetActionUnitOnsetSpeed(IntPtr avatar, float onsetSpeed);

		[PreserveSig]
		[Token(Token = "0x6001387")]
		[Address(RVA = "0xAF7340", Offset = "0xAF7340", VA = "0xAF7340")]
		public static extern void ovrAvatar_SetActionUnitFalloffSpeed(IntPtr avatar, float falloffSpeed);

		[PreserveSig]
		[Token(Token = "0x6001388")]
		[Address(RVA = "0xAF73D0", Offset = "0xAF73D0", VA = "0xAF73D0")]
		public static extern void ovrAvatar_SetVisemeMultiplier(IntPtr avatar, float visemeMultiplier);

		[PreserveSig]
		[Token(Token = "0x6001389")]
		[Address(RVA = "0xAF7460", Offset = "0xAF7460", VA = "0xAF7460")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x600138A")]
		[Address(RVA = "0xAF74F8", Offset = "0xAF74F8", VA = "0xAF74F8")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x600138B")]
		[Address(RVA = "0xAF7590", Offset = "0xAF7590", VA = "0xAF7590")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetAlbedoTextureAssetID(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600138C")]
		[Address(RVA = "0xAF7610", Offset = "0xAF7610", VA = "0xAF7610")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetSurfaceTextureAssetID(IntPtr renderPart);

		[Token(Token = "0x600138D")]
		[Address(RVA = "0xAF7690", Offset = "0xAF7690", VA = "0xAF7690")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS ovrAvatarRenderPart_GetSkinnedMeshRenderPBS(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS);
		}

		[PreserveSig]
		[Token(Token = "0x600138E")]
		[Address(RVA = "0xAF77E4", Offset = "0xAF77E4", VA = "0xAF77E4")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBS_Native(IntPtr renderPart);

		[Token(Token = "0x600138F")]
		[Address(RVA = "0xAF7864", Offset = "0xAF7864", VA = "0xAF7864")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2);
		}

		[PreserveSig]
		[Token(Token = "0x6001390")]
		[Address(RVA = "0xAF79B8", Offset = "0xAF79B8", VA = "0xAF79B8")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2_Native(IntPtr renderPart);

		[Token(Token = "0x6001391")]
		[Address(RVA = "0xAF7A38", Offset = "0xAF7A38", VA = "0xAF7A38")]
		public static void ovrAvatarSkinnedMeshRender_GetBlendShapeParams(IntPtr renderPart, ref ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001392")]
		[Address(RVA = "0xAF7B74", Offset = "0xAF7B74", VA = "0xAF7B74")]
		private static extern IntPtr ovrAvatarSkinnedMeshRender_GetBlendShapeParams_Native(IntPtr renderPart);

		[Token(Token = "0x6001393")]
		[Address(RVA = "0xAF7BF4", Offset = "0xAF7BF4", VA = "0xAF7BF4")]
		public static ovrAvatarRenderPart_ProjectorRender ovrAvatarRenderPart_GetProjectorRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_ProjectorRender);
		}

		[Token(Token = "0x6001394")]
		[Address(RVA = "0xAF7DC8", Offset = "0xAF7DC8", VA = "0xAF7DC8")]
		public static ovrAvatarPBSMaterialState[] ovrAvatar_GetBodyPBSMaterialStates(IntPtr renderPart)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001395")]
		[Address(RVA = "0xAF80A8", Offset = "0xAF80A8", VA = "0xAF80A8")]
		private static extern IntPtr ovrAvatar_GetBodyPBSMaterialStates_Native(IntPtr avatar, IntPtr count);

		[PreserveSig]
		[Token(Token = "0x6001396")]
		[Address(RVA = "0xAF7D48", Offset = "0xAF7D48", VA = "0xAF7D48")]
		private static extern IntPtr ovrAvatarRenderPart_GetProjectorRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001397")]
		[Address(RVA = "0xAF8138", Offset = "0xAF8138", VA = "0xAF8138")]
		public static extern uint ovrAvatar_GetReferencedAssetCount(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001398")]
		[Address(RVA = "0xAF81B8", Offset = "0xAF81B8", VA = "0xAF81B8")]
		public static extern ulong ovrAvatar_GetReferencedAsset(IntPtr avatar, uint index);

		[PreserveSig]
		[Token(Token = "0x6001399")]
		[Address(RVA = "0xAF8248", Offset = "0xAF8248", VA = "0xAF8248")]
		public static extern void ovrAvatar_SetLeftHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x600139A")]
		[Address(RVA = "0xAF82D8", Offset = "0xAF82D8", VA = "0xAF82D8")]
		public static extern void ovrAvatar_SetRightHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x600139B")]
		[Address(RVA = "0xAF8368", Offset = "0xAF8368", VA = "0xAF8368")]
		public static extern void ovrAvatar_SetLeftHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x600139C")]
		[Address(RVA = "0xAF8408", Offset = "0xAF8408", VA = "0xAF8408")]
		public static extern void ovrAvatar_SetRightHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x600139D")]
		[Address(RVA = "0xAF84A8", Offset = "0xAF84A8", VA = "0xAF84A8")]
		public static extern void ovrAvatar_UpdatePoseFromPacket(IntPtr avatar, IntPtr packet, float secondsFromStart);

		[PreserveSig]
		[Token(Token = "0x600139E")]
		[Address(RVA = "0xAF8548", Offset = "0xAF8548", VA = "0xAF8548")]
		public static extern void ovrAvatarPacket_BeginRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x600139F")]
		[Address(RVA = "0xAF85C8", Offset = "0xAF85C8", VA = "0xAF85C8")]
		public static extern IntPtr ovrAvatarPacket_EndRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x60013A0")]
		[Address(RVA = "0xAF8648", Offset = "0xAF8648", VA = "0xAF8648")]
		public static extern uint ovrAvatarPacket_GetSize(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x60013A1")]
		[Address(RVA = "0xAF86C8", Offset = "0xAF86C8", VA = "0xAF86C8")]
		public static extern float ovrAvatarPacket_GetDurationSeconds(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x60013A2")]
		[Address(RVA = "0xAF8748", Offset = "0xAF8748", VA = "0xAF8748")]
		public static extern void ovrAvatarPacket_Free(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x60013A3")]
		[Address(RVA = "0xAF87C8", Offset = "0xAF87C8", VA = "0xAF87C8")]
		public static extern bool ovrAvatarPacket_Write(IntPtr packet, uint bufferSize, [Out] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x60013A4")]
		[Address(RVA = "0xAF88F0", Offset = "0xAF88F0", VA = "0xAF88F0")]
		public static extern IntPtr ovrAvatarPacket_Read(uint bufferSize, [In] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x60013A5")]
		[Address(RVA = "0xAF8988", Offset = "0xAF8988", VA = "0xAF8988")]
		private static extern void ovrAvatar_SetInternalForceASTCTextures(bool value);

		[Token(Token = "0x60013A6")]
		[Address(RVA = "0xAF8A08", Offset = "0xAF8A08", VA = "0xAF8A08")]
		public static void ovrAvatar_SetForceASTCTextures(bool value)
		{
		}

		[Token(Token = "0x60013A7")]
		[Address(RVA = "0xAF8A68", Offset = "0xAF8A68", VA = "0xAF8A68")]
		public static void ovrAvatar_OverrideExpressiveLogic(IntPtr avatar, ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60013A8")]
		[Address(RVA = "0xAF8BB0", Offset = "0xAF8BB0", VA = "0xAF8BB0")]
		private static extern void ovrAvatar_OverrideExpressiveLogic_Native(IntPtr avatar, IntPtr state);

		[Token(Token = "0x60013A9")]
		[Address(RVA = "0xAF8C40", Offset = "0xAF8C40", VA = "0xAF8C40")]
		public static void ovrAvatar_SetVisemes(IntPtr avatar, ovrAvatarVisemes visemes)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60013AA")]
		[Address(RVA = "0xAF8D98", Offset = "0xAF8D98", VA = "0xAF8D98")]
		private static extern void ovrAvatar_SetVisemes_Native(IntPtr avatar, IntPtr visemes);

		[PreserveSig]
		[Token(Token = "0x60013AB")]
		[Address(RVA = "0xAF8E28", Offset = "0xAF8E28", VA = "0xAF8E28")]
		public static extern void ovrAvatar_UpdateWorldTransform(IntPtr avatar, ovrAvatarTransform transform);

		[Token(Token = "0x60013AC")]
		[Address(RVA = "0xAF8EC8", Offset = "0xAF8EC8", VA = "0xAF8EC8")]
		public static void ovrAvatar_UpdateGazeTargets(ovrAvatarGazeTargets targets)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60013AD")]
		[Address(RVA = "0xAF9298", Offset = "0xAF9298", VA = "0xAF9298")]
		private static extern void ovrAvatar_UpdateGazeTargets_Native(IntPtr targets);

		[PreserveSig]
		[Token(Token = "0x60013AE")]
		[Address(RVA = "0xAF9318", Offset = "0xAF9318", VA = "0xAF9318")]
		public static extern void ovrAvatar_RemoveGazeTargets(uint targetCount, uint[] ids);

		[Token(Token = "0x60013AF")]
		[Address(RVA = "0xAF93B0", Offset = "0xAF93B0", VA = "0xAF93B0")]
		public static void ovrAvatar_UpdateLights(ovrAvatarLights lights)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60013B0")]
		[Address(RVA = "0xAF9C10", Offset = "0xAF9C10", VA = "0xAF9C10")]
		private static extern void ovrAvatar_UpdateLights_Native(IntPtr lights);

		[PreserveSig]
		[Token(Token = "0x60013B1")]
		[Address(RVA = "0xAF9C90", Offset = "0xAF9C90", VA = "0xAF9C90")]
		public static extern void ovrAvatar_RemoveLights(uint lightCount, uint[] ids);

		[Token(Token = "0x60013B2")]
		[Address(RVA = "0xAF3040", Offset = "0xAF3040", VA = "0xAF3040")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x7ABC88", Offset = "0x7ABC88")]
		public static void LoggingCallback(IntPtr str)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60013B3")]
		[Address(RVA = "0xAF9D28", Offset = "0xAF9D28", VA = "0xAF9D28")]
		public static extern void ovrAvatar_RegisterLoggingCallback(LoggingDelegate callback);

		[PreserveSig]
		[Token(Token = "0x60013B4")]
		[Address(RVA = "0xAF9DAC", Offset = "0xAF9DAC", VA = "0xAF9DAC")]
		public static extern void ovrAvatar_SetLoggingLevel(ovrAvatarLogLevel level);

		[PreserveSig]
		[Token(Token = "0x60013B5")]
		[Address(RVA = "0xAF9E2C", Offset = "0xAF9E2C", VA = "0xAF9E2C")]
		public static extern IntPtr ovrAvatar_GetDebugTransforms_Native(IntPtr count);

		[PreserveSig]
		[Token(Token = "0x60013B6")]
		[Address(RVA = "0xAF9EAC", Offset = "0xAF9EAC", VA = "0xAF9EAC")]
		public static extern IntPtr ovrAvatar_GetDebugLines_Native(IntPtr count);

		[Token(Token = "0x60013B7")]
		[Address(RVA = "0xAF9F2C", Offset = "0xAF9F2C", VA = "0xAF9F2C")]
		public static void ovrAvatar_DrawDebugLines()
		{
		}

		[PreserveSig]
		[Token(Token = "0x60013B8")]
		[Address(RVA = "0xAFA8F0", Offset = "0xAFA8F0", VA = "0xAFA8F0")]
		public static extern void ovrAvatar_SetDebugDrawContext(uint context);

		[Token(Token = "0x60013B9")]
		[Address(RVA = "0xAFA970", Offset = "0xAFA970", VA = "0xAFA970")]
		public static bool SendEvent(string name, string param = "", string source = "")
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60013BA")]
		[Address(RVA = "0xAFADAC", Offset = "0xAFADAC", VA = "0xAFADAC")]
		private static extern IntPtr _ovrp_GetVersion();

		[Token(Token = "0x60013BB")]
		[Address(RVA = "0xAFAD14", Offset = "0xAFAD14", VA = "0xAFAD14")]
		public static string ovrp_GetVersion()
		{
			return null;
		}

		[Token(Token = "0x60013BC")]
		[Address(RVA = "0xAFAE20", Offset = "0xAFAE20", VA = "0xAFAE20")]
		public CAPI()
		{
		}
	}
}
namespace Normal.Realtime.Examples
{
	[Token(Token = "0x2000345")]
	public class CubePlayer : MonoBehaviour
	{
		[Token(Token = "0x400157E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float speed;

		[Token(Token = "0x400157F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RealtimeView _realtimeView;

		[Token(Token = "0x4001580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RealtimeTransform _realtimeTransform;

		[Token(Token = "0x60013C4")]
		[Address(RVA = "0xB73CF4", Offset = "0xB73CF4", VA = "0xB73CF4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013C5")]
		[Address(RVA = "0xB73D80", Offset = "0xB73D80", VA = "0xB73D80")]
		private void Update()
		{
		}

		[Token(Token = "0x60013C6")]
		[Address(RVA = "0xB73EF4", Offset = "0xB73EF4", VA = "0xB73EF4")]
		public CubePlayer()
		{
		}
	}
	[Token(Token = "0x2000346")]
	public class CubePlayerManager : MonoBehaviour
	{
		[Token(Token = "0x4001581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _prefab;

		[Token(Token = "0x4001582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Realtime _realtime;

		[Token(Token = "0x60013C7")]
		[Address(RVA = "0xB73F04", Offset = "0xB73F04", VA = "0xB73F04")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013C8")]
		[Address(RVA = "0xB73FC8", Offset = "0xB73FC8", VA = "0xB73FC8")]
		private void DidConnectToRoom(Realtime realtime)
		{
		}

		[Token(Token = "0x60013C9")]
		[Address(RVA = "0xB74170", Offset = "0xB74170", VA = "0xB74170")]
		public CubePlayerManager()
		{
		}
	}
	[Token(Token = "0x2000347")]
	public class HoverbirdPlayer : MonoBehaviour
	{
		[Token(Token = "0x4001583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform cameraTarget;

		[Token(Token = "0x4001584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float _mouseLookX;

		[Token(Token = "0x4001585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float _mouseLookY;

		[Token(Token = "0x4001586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 _targetMovement;

		[Token(Token = "0x4001587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 _movement;

		[Token(Token = "0x4001588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _jumpThisFrame;

		[Token(Token = "0x4001589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool _jumping;

		[Token(Token = "0x400158A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Rigidbody _rigidbody;

		[Token(Token = "0x400158B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Transform _character;

		[Token(Token = "0x400158C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private RealtimeView _realtimeView;

		[Token(Token = "0x60013CA")]
		[Address(RVA = "0xF551BC", Offset = "0xF551BC", VA = "0xF551BC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013CB")]
		[Address(RVA = "0xF55258", Offset = "0xF55258", VA = "0xF55258")]
		private void Start()
		{
		}

		[Token(Token = "0x60013CC")]
		[Address(RVA = "0xF55330", Offset = "0xF55330", VA = "0xF55330")]
		private void Update()
		{
		}

		[Token(Token = "0x60013CD")]
		[Address(RVA = "0xF553BC", Offset = "0xF553BC", VA = "0xF553BC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60013CE")]
		[Address(RVA = "0xF5529C", Offset = "0xF5529C", VA = "0xF5529C")]
		private void LocalStart()
		{
		}

		[Token(Token = "0x60013CF")]
		[Address(RVA = "0xF55374", Offset = "0xF55374", VA = "0xF55374")]
		private void LocalUpdate()
		{
		}

		[Token(Token = "0x60013D0")]
		[Address(RVA = "0xF55408", Offset = "0xF55408", VA = "0xF55408")]
		private void LocalFixedUpdate()
		{
		}

		[Token(Token = "0x60013D1")]
		[Address(RVA = "0xF5542C", Offset = "0xF5542C", VA = "0xF5542C")]
		private void RotateCamera()
		{
		}

		[Token(Token = "0x60013D2")]
		[Address(RVA = "0xF5555C", Offset = "0xF5555C", VA = "0xF5555C")]
		private void CalculateTargetMovement()
		{
		}

		[Token(Token = "0x60013D3")]
		[Address(RVA = "0xF55620", Offset = "0xF55620", VA = "0xF55620")]
		private void CheckForJump()
		{
		}

		[Token(Token = "0x60013D4")]
		[Address(RVA = "0xF5565C", Offset = "0xF5565C", VA = "0xF5565C")]
		private void MovePlayer()
		{
		}

		[Token(Token = "0x60013D5")]
		[Address(RVA = "0xF55734", Offset = "0xF55734", VA = "0xF55734")]
		private void AnimateCharacter()
		{
		}

		[Token(Token = "0x60013D6")]
		[Address(RVA = "0xF559D0", Offset = "0xF559D0", VA = "0xF559D0")]
		private static Vector3 ProjectVectorOntoGroundPlane(Vector3 vector)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60013D7")]
		[Address(RVA = "0xF55A98", Offset = "0xF55A98", VA = "0xF55A98")]
		private static float GetRigidbodyForwardVelocity(Rigidbody rigidbody)
		{
			return default(float);
		}

		[Token(Token = "0x60013D8")]
		[Address(RVA = "0xF55A18", Offset = "0xF55A18", VA = "0xF55A18")]
		private static float SignedAngle2D(Vector3 a, Vector3 b)
		{
			return default(float);
		}

		[Token(Token = "0x60013D9")]
		[Address(RVA = "0xF55AE0", Offset = "0xF55AE0", VA = "0xF55AE0")]
		public HoverbirdPlayer()
		{
		}
	}
	[Token(Token = "0x2000348")]
	public class HoverbirdPlayerManager : MonoBehaviour
	{
		[Token(Token = "0x400158D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _camera;

		[Token(Token = "0x400158E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _prefab;

		[Token(Token = "0x400158F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Realtime _realtime;

		[Token(Token = "0x60013DA")]
		[Address(RVA = "0xF55AE8", Offset = "0xF55AE8", VA = "0xF55AE8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013DB")]
		[Address(RVA = "0xF55BAC", Offset = "0xF55BAC", VA = "0xF55BAC")]
		private void DidConnectToRoom(Realtime realtime)
		{
		}

		[Token(Token = "0x60013DC")]
		[Address(RVA = "0xF55DBC", Offset = "0xF55DBC", VA = "0xF55DBC")]
		public HoverbirdPlayerManager()
		{
		}
	}
	[Token(Token = "0x2000349")]
	public class VoiceMouthMove : MonoBehaviour
	{
		[Token(Token = "0x4001590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform mouth;

		[Token(Token = "0x4001591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RealtimeAvatarVoice _voice;

		[Token(Token = "0x4001592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float _mouthSize;

		[Token(Token = "0x60013DD")]
		[Address(RVA = "0xACF9BC", Offset = "0xACF9BC", VA = "0xACF9BC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013DE")]
		[Address(RVA = "0xACFA18", Offset = "0xACFA18", VA = "0xACFA18")]
		private void Update()
		{
		}

		[Token(Token = "0x60013DF")]
		[Address(RVA = "0xACFAAC", Offset = "0xACFAAC", VA = "0xACFAAC")]
		public VoiceMouthMove()
		{
		}
	}
}
namespace Normal.Realtime.Utility
{
	[Token(Token = "0x200034A")]
	public class OculusSetFloorTrackingOriginWithoutPlugin : MonoBehaviour
	{
		[Token(Token = "0x200034B")]
		private enum Bool
		{
			[Token(Token = "0x4001595")]
			False,
			[Token(Token = "0x4001596")]
			True
		}

		[Token(Token = "0x200034C")]
		private enum TrackingOrigin
		{
			[Token(Token = "0x4001598")]
			EyeLevel,
			[Token(Token = "0x4001599")]
			FloorLevel,
			[Token(Token = "0x400159A")]
			Count
		}

		[Token(Token = "0x4001593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool __stopTryingToSetTrackingOrigin;

		[PreserveSig]
		[Token(Token = "0x60013E0")]
		[Address(RVA = "0x12FAB88", Offset = "0x12FAB88", VA = "0x12FAB88")]
		private static extern Bool ovrp_SetTrackingOriginType(TrackingOrigin originType);

		[Token(Token = "0x60013E1")]
		[Address(RVA = "0x12FAC08", Offset = "0x12FAC08", VA = "0x12FAC08")]
		private void Update()
		{
		}

		[Token(Token = "0x60013E2")]
		[Address(RVA = "0x12FAD64", Offset = "0x12FAD64", VA = "0x12FAD64")]
		public OculusSetFloorTrackingOriginWithoutPlugin()
		{
		}
	}
}
namespace UnityStandardAssets.Utility
{
	[Serializable]
	[Token(Token = "0x200034D")]
	public class CurveControlledBob
	{
		[Token(Token = "0x400159B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float HorizontalBobRange;

		[Token(Token = "0x400159C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float VerticalBobRange;

		[Token(Token = "0x400159D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationCurve Bobcurve;

		[Token(Token = "0x400159E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float VerticaltoHorizontalRatio;

		[Token(Token = "0x400159F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float m_CyclePositionX;

		[Token(Token = "0x40015A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_CyclePositionY;

		[Token(Token = "0x40015A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float m_BobBaseInterval;

		[Token(Token = "0x40015A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 m_OriginalCameraPosition;

		[Token(Token = "0x40015A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float m_Time;

		[Token(Token = "0x60013E4")]
		[Address(RVA = "0xB741FC", Offset = "0xB741FC", VA = "0xB741FC")]
		public void Setup(Camera camera, float bobBaseInterval)
		{
		}

		[Token(Token = "0x60013E5")]
		[Address(RVA = "0xB742A0", Offset = "0xB742A0", VA = "0xB742A0")]
		public Vector3 DoHeadBob(float speed)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60013E6")]
		[Address(RVA = "0xB7439C", Offset = "0xB7439C", VA = "0xB7439C")]
		public CurveControlledBob()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200034E")]
	public class FOVKick
	{
		[Token(Token = "0x200034F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x797AFC", Offset = "0x797AFC")]
		private sealed class <FOVKickUp>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40015AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40015AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40015AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FOVKick <>4__this;

			[Token(Token = "0x40015AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <t>5__2;

			[Token(Token = "0x170002DA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60013F0")]
				[Address(RVA = "0xB0A45C", Offset = "0xB0A45C", VA = "0xB0A45C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002DB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60013F2")]
				[Address(RVA = "0xB0A4A4", Offset = "0xB0A4A4", VA = "0xB0A4A4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60013ED")]
			[Address(RVA = "0xB0A2F0", Offset = "0xB0A2F0", VA = "0xB0A2F0")]
			[DebuggerHidden]
			public <FOVKickUp>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x60013EE")]
			[Address(RVA = "0xB0A31C", Offset = "0xB0A31C", VA = "0xB0A31C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60013EF")]
			[Address(RVA = "0xB0A320", Offset = "0xB0A320", VA = "0xB0A320", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60013F1")]
			[Address(RVA = "0xB0A464", Offset = "0xB0A464", VA = "0xB0A464", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000350")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x797B0C", Offset = "0x797B0C")]
		private sealed class <FOVKickDown>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40015AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40015AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40015B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FOVKick <>4__this;

			[Token(Token = "0x40015B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <t>5__2;

			[Token(Token = "0x170002DC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60013F6")]
				[Address(RVA = "0xB0A2A0", Offset = "0xB0A2A0", VA = "0xB0A2A0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002DD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60013F8")]
				[Address(RVA = "0xB0A2E8", Offset = "0xB0A2E8", VA = "0xB0A2E8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60013F3")]
			[Address(RVA = "0xB0A120", Offset = "0xB0A120", VA = "0xB0A120")]
			[DebuggerHidden]
			public <FOVKickDown>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x60013F4")]
			[Address(RVA = "0xB0A14C", Offset = "0xB0A14C", VA = "0xB0A14C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60013F5")]
			[Address(RVA = "0xB0A150", Offset = "0xB0A150", VA = "0xB0A150", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60013F7")]
			[Address(RVA = "0xB0A2A8", Offset = "0xB0A2A8", VA = "0xB0A2A8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40015A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Camera Camera;

		[Token(Token = "0x40015A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public float originalFov;

		[Token(Token = "0x40015A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float FOVIncrease;

		[Token(Token = "0x40015A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float TimeToIncrease;

		[Token(Token = "0x40015A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float TimeToDecrease;

		[Token(Token = "0x40015A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve IncreaseCurve;

		[Token(Token = "0x60013E7")]
		[Address(RVA = "0xE78568", Offset = "0xE78568", VA = "0xE78568")]
		public void Setup(Camera camera)
		{
		}

		[Token(Token = "0x60013E8")]
		[Address(RVA = "0xE785B4", Offset = "0xE785B4", VA = "0xE785B4")]
		private void CheckStatus(Camera camera)
		{
		}

		[Token(Token = "0x60013E9")]
		[Address(RVA = "0xE786A0", Offset = "0xE786A0", VA = "0xE786A0")]
		public void ChangeCamera(Camera camera)
		{
		}

		[Token(Token = "0x60013EA")]
		[Address(RVA = "0xE786A8", Offset = "0xE786A8", VA = "0xE786A8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7ABCE8", Offset = "0x7ABCE8")]
		public IEnumerator FOVKickUp()
		{
			return null;
		}

		[Token(Token = "0x60013EB")]
		[Address(RVA = "0xE78720", Offset = "0xE78720", VA = "0xE78720")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7ABD48", Offset = "0x7ABD48")]
		public IEnumerator FOVKickDown()
		{
			return null;
		}

		[Token(Token = "0x60013EC")]
		[Address(RVA = "0xE78798", Offset = "0xE78798", VA = "0xE78798")]
		public FOVKick()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000351")]
	public class LerpControlledBob
	{
		[Token(Token = "0x2000352")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x797B1C", Offset = "0x797B1C")]
		private sealed class <DoBobCycle>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40015B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40015B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40015B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LerpControlledBob <>4__this;

			[Token(Token = "0x40015B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <t>5__2;

			[Token(Token = "0x170002DE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60013FF")]
				[Address(RVA = "0xB0EFF0", Offset = "0xB0EFF0", VA = "0xB0EFF0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002DF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001401")]
				[Address(RVA = "0xB0F038", Offset = "0xB0F038", VA = "0xB0F038", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60013FC")]
			[Address(RVA = "0xB0EE1C", Offset = "0xB0EE1C", VA = "0xB0EE1C")]
			[DebuggerHidden]
			public <DoBobCycle>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x60013FD")]
			[Address(RVA = "0xB0EE48", Offset = "0xB0EE48", VA = "0xB0EE48", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60013FE")]
			[Address(RVA = "0xB0EE4C", Offset = "0xB0EE4C", VA = "0xB0EE4C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001400")]
			[Address(RVA = "0xB0EFF8", Offset = "0xB0EFF8", VA = "0xB0EFF8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40015B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float BobDuration;

		[Token(Token = "0x40015B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float BobAmount;

		[Token(Token = "0x40015B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float m_Offset;

		[Token(Token = "0x60013F9")]
		[Address(RVA = "0x1187154", Offset = "0x1187154", VA = "0x1187154")]
		public float Offset()
		{
			return default(float);
		}

		[Token(Token = "0x60013FA")]
		[Address(RVA = "0x118715C", Offset = "0x118715C", VA = "0x118715C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7ABE48", Offset = "0x7ABE48")]
		public IEnumerator DoBobCycle()
		{
			return null;
		}

		[Token(Token = "0x60013FB")]
		[Address(RVA = "0x11871D4", Offset = "0x11871D4", VA = "0x11871D4")]
		public LerpControlledBob()
		{
		}
	}
}
namespace UnityStandardAssets.Characters.FirstPerson
{
	[Token(Token = "0x2000353")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x797B2C", Offset = "0x797B2C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x797B2C", Offset = "0x797B2C")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x797B2C", Offset = "0x797B2C")]
	public class FirstPersonController : MonoBehaviour
	{
		[Token(Token = "0x40015B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_IsWalking;

		[Token(Token = "0x40015BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_WalkSpeed;

		[Token(Token = "0x40015BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_RunSpeed;

		[Token(Token = "0x40015BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7A184C", Offset = "0x7A184C")]
		private float m_RunstepLenghten;

		[Token(Token = "0x40015BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_JumpSpeed;

		[Token(Token = "0x40015BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_StickToGroundForce;

		[Token(Token = "0x40015BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float m_GravityMultiplier;

		[Token(Token = "0x40015C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private MouseLook m_MouseLook;

		[Token(Token = "0x40015C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool m_UseFovKick;

		[Token(Token = "0x40015C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private FOVKick m_FovKick;

		[Token(Token = "0x40015C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private bool m_UseHeadBob;

		[Token(Token = "0x40015C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private CurveControlledBob m_HeadBob;

		[Token(Token = "0x40015C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private LerpControlledBob m_JumpBob;

		[Token(Token = "0x40015C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float m_StepInterval;

		[Token(Token = "0x40015C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private AudioClip[] m_FootstepSounds;

		[Token(Token = "0x40015C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private AudioClip m_JumpSound;

		[Token(Token = "0x40015C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private AudioClip m_LandSound;

		[Token(Token = "0x40015CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Camera m_Camera;

		[Token(Token = "0x40015CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool m_Jump;

		[Token(Token = "0x40015CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float m_YRotation;

		[Token(Token = "0x40015CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector2 m_Input;

		[Token(Token = "0x40015CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Vector3 m_MoveDir;

		[Token(Token = "0x40015CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private CharacterController m_CharacterController;

		[Token(Token = "0x40015D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private CollisionFlags m_CollisionFlags;

		[Token(Token = "0x40015D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private bool m_PreviouslyGrounded;

		[Token(Token = "0x40015D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Vector3 m_OriginalCameraPosition;

		[Token(Token = "0x40015D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private float m_StepCycle;

		[Token(Token = "0x40015D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float m_NextStep;

		[Token(Token = "0x40015D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private bool m_Jumping;

		[Token(Token = "0x40015D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private AudioSource m_AudioSource;

		[Token(Token = "0x6001402")]
		[Address(RVA = "0xE7B0DC", Offset = "0xE7B0DC", VA = "0xE7B0DC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001403")]
		[Address(RVA = "0xE7B218", Offset = "0xE7B218", VA = "0xE7B218")]
		private void Update()
		{
		}

		[Token(Token = "0x6001404")]
		[Address(RVA = "0xE7B368", Offset = "0xE7B368", VA = "0xE7B368")]
		private void PlayLandingSound()
		{
		}

		[Token(Token = "0x6001405")]
		[Address(RVA = "0xE7B3BC", Offset = "0xE7B3BC", VA = "0xE7B3BC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001406")]
		[Address(RVA = "0xE7B7D4", Offset = "0xE7B7D4", VA = "0xE7B7D4")]
		private void PlayJumpSound()
		{
		}

		[Token(Token = "0x6001407")]
		[Address(RVA = "0xE7B814", Offset = "0xE7B814", VA = "0xE7B814")]
		private void ProgressStepCycle(float speed)
		{
		}

		[Token(Token = "0x6001408")]
		[Address(RVA = "0xE7BAE0", Offset = "0xE7BAE0", VA = "0xE7BAE0")]
		private void PlayFootStepAudio()
		{
		}

		[Token(Token = "0x6001409")]
		[Address(RVA = "0xE7B918", Offset = "0xE7B918", VA = "0xE7B918")]
		private void UpdateCameraPosition(float speed)
		{
		}

		[Token(Token = "0x600140A")]
		[Address(RVA = "0xE7B664", Offset = "0xE7B664", VA = "0xE7B664")]
		private void GetInput(out float speed)
		{
		}

		[Token(Token = "0x600140B")]
		[Address(RVA = "0xE7B310", Offset = "0xE7B310", VA = "0xE7B310")]
		private void RotateView()
		{
		}

		[Token(Token = "0x600140C")]
		[Address(RVA = "0xE7BC50", Offset = "0xE7BC50", VA = "0xE7BC50")]
		private void OnControllerColliderHit(ControllerColliderHit hit)
		{
		}

		[Token(Token = "0x600140D")]
		[Address(RVA = "0xE7BD8C", Offset = "0xE7BD8C", VA = "0xE7BD8C")]
		public FirstPersonController()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000354")]
	public class MouseLook
	{
		[Token(Token = "0x40015D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float XSensitivity;

		[Token(Token = "0x40015D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float YSensitivity;

		[Token(Token = "0x40015D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool clampVerticalRotation;

		[Token(Token = "0x40015DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float MinimumX;

		[Token(Token = "0x40015DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float MaximumX;

		[Token(Token = "0x40015DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool smooth;

		[Token(Token = "0x40015DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float smoothTime;

		[Token(Token = "0x40015DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool lockCursor;

		[Token(Token = "0x40015DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Quaternion m_CharacterTargetRot;

		[Token(Token = "0x40015E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Quaternion m_CameraTargetRot;

		[Token(Token = "0x40015E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_cursorIsLocked;

		[Token(Token = "0x600140E")]
		[Address(RVA = "0x1F5C048", Offset = "0x1F5C048", VA = "0x1F5C048")]
		public void Init(Transform character, Transform camera)
		{
		}

		[Token(Token = "0x600140F")]
		[Address(RVA = "0x1F5C09C", Offset = "0x1F5C09C", VA = "0x1F5C09C")]
		public void LookRotation(Transform character, Transform camera)
		{
		}

		[Token(Token = "0x6001410")]
		[Address(RVA = "0x1F5C3C0", Offset = "0x1F5C3C0", VA = "0x1F5C3C0")]
		public void SetCursorLock(bool value)
		{
		}

		[Token(Token = "0x6001411")]
		[Address(RVA = "0x1F5C3B0", Offset = "0x1F5C3B0", VA = "0x1F5C3B0")]
		public void UpdateCursorLock()
		{
		}

		[Token(Token = "0x6001412")]
		[Address(RVA = "0x1F5C3F4", Offset = "0x1F5C3F4", VA = "0x1F5C3F4")]
		private void InternalLockUpdate()
		{
		}

		[Token(Token = "0x6001413")]
		[Address(RVA = "0x1F5C348", Offset = "0x1F5C348", VA = "0x1F5C348")]
		private Quaternion ClampRotationAroundXAxis(Quaternion q)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001414")]
		[Address(RVA = "0x1F5C470", Offset = "0x1F5C470", VA = "0x1F5C470")]
		public MouseLook()
		{
		}
	}
}
namespace BNG
{
	[Token(Token = "0x2000355")]
	public enum HandPoseId
	{
		[Token(Token = "0x40015E3")]
		Default = 0,
		[Token(Token = "0x40015E4")]
		Generic = 1,
		[Token(Token = "0x40015E5")]
		PingPongBall = 2,
		[Token(Token = "0x40015E6")]
		Controller = 3,
		[Token(Token = "0x40015E7")]
		Rock = 4,
		[Token(Token = "0x40015E8")]
		PistolGrip = 50
	}
	[Token(Token = "0x2000356")]
	public class HandPoseDefinitions : MonoBehaviour
	{
		[Token(Token = "0x6001415")]
		[Address(RVA = "0xF5112C", Offset = "0xF5112C", VA = "0xF5112C")]
		public HandPoseDefinitions()
		{
		}
	}
	[Token(Token = "0x2000357")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x797BE4", Offset = "0x797BE4")]
	public class AutoPoser : MonoBehaviour
	{
		[Token(Token = "0x2000358")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x797C54", Offset = "0x797C54")]
		private sealed class <updateAutoPoseRoutine>d__33 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001601")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001602")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001603")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AutoPoser <>4__this;

			[Token(Token = "0x170002E2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600142F")]
				[Address(RVA = "0xB03D44", Offset = "0xB03D44", VA = "0xB03D44", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001431")]
				[Address(RVA = "0xB03D8C", Offset = "0xB03D8C", VA = "0xB03D8C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600142C")]
			[Address(RVA = "0xB03C48", Offset = "0xB03C48", VA = "0xB03C48")]
			[DebuggerHidden]
			public <updateAutoPoseRoutine>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x600142D")]
			[Address(RVA = "0xB03C74", Offset = "0xB03C74", VA = "0xB03C74", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600142E")]
			[Address(RVA = "0xB03C78", Offset = "0xB03C78", VA = "0xB03C78", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001430")]
			[Address(RVA = "0xB03D4C", Offset = "0xB03D4C", VA = "0xB03D4C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40015E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A195C", Offset = "0x7A195C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A195C", Offset = "0x7A195C")]
		public HandPose OpenHandPose;

		[Token(Token = "0x40015EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A19BC", Offset = "0x7A19BC")]
		public HandPose ClosedHandPose;

		[Token(Token = "0x40015EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A19F4", Offset = "0x7A19F4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7A19F4", Offset = "0x7A19F4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A19F4", Offset = "0x7A19F4")]
		public float FingerTipRadius;

		[Token(Token = "0x40015EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A1A70", Offset = "0x7A1A70")]
		public FingerTipCollider ThumbCollider;

		[Token(Token = "0x40015ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A1AA8", Offset = "0x7A1AA8")]
		public FingerTipCollider IndexFingerCollider;

		[Token(Token = "0x40015EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A1AE0", Offset = "0x7A1AE0")]
		public FingerTipCollider MiddleFingerCollider;

		[Token(Token = "0x40015EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A1B18", Offset = "0x7A1B18")]
		public FingerTipCollider RingFingerCollider;

		[Token(Token = "0x40015F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A1B50", Offset = "0x7A1B50")]
		public FingerTipCollider PinkyFingerCollider;

		[Token(Token = "0x40015F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A1B88", Offset = "0x7A1B88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A1B88", Offset = "0x7A1B88")]
		public bool UpdateContinuously;

		[Token(Token = "0x40015F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A1BE8", Offset = "0x7A1BE8")]
		public HandPose IdleHandPose;

		[Token(Token = "0x40015F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public LayerMask CollisionLayerMask;

		[Token(Token = "0x40015F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A1C20", Offset = "0x7A1C20")]
		public bool ShowGizmos;

		[Token(Token = "0x40015F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GizmoDisplayType GizmoType;

		[Token(Token = "0x40015F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public Color GizmoColor;

		[Token(Token = "0x40015F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public HandPoser InspectedPose;

		[Token(Token = "0x40015F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private HandPoseDefinition currentPose;

		[Token(Token = "0x40015F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private HandPoseDefinition tempPose;

		[Token(Token = "0x40015FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private HandPoseDefinition collisionPose;

		[Token(Token = "0x40015FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int _count;

		[Token(Token = "0x40015FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private bool _thumbHit;

		[Token(Token = "0x40015FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAD")]
		private bool _indexHit;

		[Token(Token = "0x40015FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAE")]
		private bool _middleHit;

		[Token(Token = "0x40015FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAF")]
		private bool _ringHit;

		[Token(Token = "0x4001600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _pinkyHit;

		[Token(Token = "0x170002E0")]
		public HandPoseDefinition CollisionPose
		{
			[Token(Token = "0x6001416")]
			[Address(RVA = "0xAE6360", Offset = "0xAE6360", VA = "0xAE6360")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E1")]
		public bool CollisionDetected
		{
			[Token(Token = "0x6001417")]
			[Address(RVA = "0xAE6368", Offset = "0xAE6368", VA = "0xAE6368")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001418")]
		[Address(RVA = "0xAE63A0", Offset = "0xAE63A0", VA = "0xAE63A0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001419")]
		[Address(RVA = "0xAE645C", Offset = "0xAE645C", VA = "0xAE645C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600141A")]
		[Address(RVA = "0xAE6674", Offset = "0xAE6674", VA = "0xAE6674")]
		private void Update()
		{
		}

		[Token(Token = "0x600141B")]
		[Address(RVA = "0xAE6A3C", Offset = "0xAE6A3C", VA = "0xAE6A3C", Slot = "4")]
		public virtual void UpdateAutoPose(bool lerp)
		{
		}

		[Token(Token = "0x600141C")]
		[Address(RVA = "0xAE6A9C", Offset = "0xAE6A9C", VA = "0xAE6A9C", Slot = "5")]
		public virtual void UpdateAutoPoseOnce()
		{
		}

		[Token(Token = "0x600141D")]
		[Address(RVA = "0xAE6AC8", Offset = "0xAE6AC8", VA = "0xAE6AC8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7ABEF8", Offset = "0x7ABEF8")]
		private IEnumerator updateAutoPoseRoutine()
		{
			return null;
		}

		[Token(Token = "0x600141E")]
		[Address(RVA = "0xAE67BC", Offset = "0xAE67BC", VA = "0xAE67BC")]
		public HandPoseDefinition GetAutoPose()
		{
			return null;
		}

		[Token(Token = "0x600141F")]
		[Address(RVA = "0xAE6B40", Offset = "0xAE6B40", VA = "0xAE6B40")]
		public HandPoseDefinition CopyHandDefinition(HandPoseDefinition ToCopy)
		{
			return null;
		}

		[Token(Token = "0x6001420")]
		[Address(RVA = "0xAE7268", Offset = "0xAE7268", VA = "0xAE7268")]
		public FingerJoint GetJointCopy(FingerJoint ToClone)
		{
			return null;
		}

		[Token(Token = "0x6001421")]
		[Address(RVA = "0xAE7168", Offset = "0xAE7168", VA = "0xAE7168")]
		public List<FingerJoint> GetJointsCopy(List<FingerJoint> ToClone)
		{
			return null;
		}

		[Token(Token = "0x6001422")]
		[Address(RVA = "0xAE6C7C", Offset = "0xAE6C7C", VA = "0xAE6C7C")]
		public bool GetThumbHit(HandPoser poser)
		{
			return default(bool);
		}

		[Token(Token = "0x6001423")]
		[Address(RVA = "0xAE6D78", Offset = "0xAE6D78", VA = "0xAE6D78")]
		public bool GetIndexHit(HandPoser poser)
		{
			return default(bool);
		}

		[Token(Token = "0x6001424")]
		[Address(RVA = "0xAE6E74", Offset = "0xAE6E74", VA = "0xAE6E74")]
		public bool GetMiddleHit(HandPoser poser)
		{
			return default(bool);
		}

		[Token(Token = "0x6001425")]
		[Address(RVA = "0xAE6F70", Offset = "0xAE6F70", VA = "0xAE6F70")]
		public bool GetRingHit(HandPoser poser)
		{
			return default(bool);
		}

		[Token(Token = "0x6001426")]
		[Address(RVA = "0xAE706C", Offset = "0xAE706C", VA = "0xAE706C")]
		public bool GetPinkyHit(HandPoser poser)
		{
			return default(bool);
		}

		[Token(Token = "0x6001427")]
		[Address(RVA = "0xAE7300", Offset = "0xAE7300", VA = "0xAE7300", Slot = "6")]
		public virtual bool LoopThroughJoints(List<Transform> fromJoints, List<FingerJoint> toJoints, Vector3 tipPosition, float tipRadius)
		{
			return default(bool);
		}

		[Token(Token = "0x6001428")]
		[Address(RVA = "0xAE75A0", Offset = "0xAE75A0", VA = "0xAE75A0", Slot = "7")]
		public virtual bool IsValidCollision(Collider col)
		{
			return default(bool);
		}

		[Token(Token = "0x6001429")]
		[Address(RVA = "0xAE7634", Offset = "0xAE7634", VA = "0xAE7634")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x600142A")]
		[Address(RVA = "0xAE783C", Offset = "0xAE783C", VA = "0xAE783C")]
		public void DrawJointGizmo(FingerTipCollider tipCollider, Vector3 defaultPosition, float radius, GizmoDisplayType gizmoType)
		{
		}

		[Token(Token = "0x600142B")]
		[Address(RVA = "0xAE7974", Offset = "0xAE7974", VA = "0xAE7974")]
		public AutoPoser()
		{
		}
	}
	[Token(Token = "0x2000359")]
	public enum GizmoDisplayType
	{
		[Token(Token = "0x4001605")]
		Wire,
		[Token(Token = "0x4001606")]
		Solid,
		[Token(Token = "0x4001607")]
		None
	}
	[Token(Token = "0x200035A")]
	public class BoneMapping : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200035B")]
		public enum Mode
		{
			[Token(Token = "0x400160C")]
			FromToRotation,
			[Token(Token = "0x400160D")]
			MatchRotation
		}

		[Token(Token = "0x4001608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7A1C58", Offset = "0x7A1C58")]
		public float weight;

		[Token(Token = "0x4001609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BoneObject[] Fingers;

		[Token(Token = "0x400160A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A1C70", Offset = "0x7A1C70")]
		public bool ShowGizmos;

		[Token(Token = "0x6001432")]
		[Address(RVA = "0xAEFFD4", Offset = "0xAEFFD4", VA = "0xAEFFD4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001433")]
		[Address(RVA = "0xAF01C4", Offset = "0xAF01C4", VA = "0xAF01C4")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001434")]
		[Address(RVA = "0xAF0638", Offset = "0xAF0638", VA = "0xAF0638")]
		public BoneMapping()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200035C")]
	public class BoneObject
	{
		[Token(Token = "0x400160E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform[] targetBones;

		[Token(Token = "0x400160F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform[] destinationBones;

		[Token(Token = "0x4001610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 avatarForwardAxis;

		[Token(Token = "0x4001611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 avatarUpAxis;

		[Token(Token = "0x4001612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 targetForwardAxis;

		[Token(Token = "0x4001613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 targetUpAxis;

		[Token(Token = "0x6001435")]
		[Address(RVA = "0xAF0650", Offset = "0xAF0650", VA = "0xAF0650")]
		public BoneObject()
		{
		}
	}
	[Token(Token = "0x200035D")]
	public class EditorHandle : MonoBehaviour
	{
		[Token(Token = "0x4001614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool ShowTransformName;

		[Token(Token = "0x4001615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float Radius;

		[Token(Token = "0x4001616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color BaseColor;

		[Token(Token = "0x6001436")]
		[Address(RVA = "0xE77998", Offset = "0xE77998", VA = "0xE77998")]
		public EditorHandle()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200035E")]
	public class FingerJoint
	{
		[Token(Token = "0x4001617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public string TransformName;

		[Token(Token = "0x4001618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Vector3 LocalPosition;

		[Token(Token = "0x4001619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		public Quaternion LocalRotation;

		[Token(Token = "0x6001437")]
		[Address(RVA = "0xE79044", Offset = "0xE79044", VA = "0xE79044")]
		public FingerJoint()
		{
		}
	}
	[Token(Token = "0x200035F")]
	public class FingerTipCollider : MonoBehaviour
	{
		[Token(Token = "0x400161A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7A1CD8", Offset = "0x7A1CD8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A1CD8", Offset = "0x7A1CD8")]
		public float Radius;

		[Token(Token = "0x6001438")]
		[Address(RVA = "0xE79930", Offset = "0xE79930", VA = "0xE79930")]
		public FingerTipCollider()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000360")]
	public class HandPose : ScriptableObject
	{
		[Token(Token = "0x400161B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A1D30", Offset = "0x7A1D30")]
		public string PoseName;

		[Token(Token = "0x400161C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A1D68", Offset = "0x7A1D68")]
		[SerializeField]
		public HandPoseDefinition Joints;

		[Token(Token = "0x6001439")]
		[Address(RVA = "0xF510F4", Offset = "0xF510F4", VA = "0xF510F4")]
		public HandPose()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000361")]
	public class HandPoseDefinition
	{
		[Token(Token = "0x400161D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A1DB4", Offset = "0x7A1DB4")]
		[SerializeField]
		public FingerJoint WristJoint;

		[Token(Token = "0x400161E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A1E00", Offset = "0x7A1E00")]
		[SerializeField]
		public List<FingerJoint> ThumbJoints;

		[Token(Token = "0x400161F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A1E4C", Offset = "0x7A1E4C")]
		public List<FingerJoint> IndexJoints;

		[Token(Token = "0x4001620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A1E98", Offset = "0x7A1E98")]
		public List<FingerJoint> MiddleJoints;

		[Token(Token = "0x4001621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A1EE4", Offset = "0x7A1EE4")]
		public List<FingerJoint> RingJoints;

		[Token(Token = "0x4001622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A1F30", Offset = "0x7A1F30")]
		public List<FingerJoint> PinkyJoints;

		[Token(Token = "0x4001623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A1F7C", Offset = "0x7A1F7C")]
		public List<FingerJoint> OtherJoints;

		[Token(Token = "0x600143A")]
		[Address(RVA = "0xF51124", Offset = "0xF51124", VA = "0xF51124")]
		public HandPoseDefinition()
		{
		}
	}
	[Token(Token = "0x2000362")]
	[ExecuteInEditMode]
	public class HandPoser : MonoBehaviour
	{
		[Token(Token = "0x4001624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool ShowGizmos;

		[Token(Token = "0x4001625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A1FC8", Offset = "0x7A1FC8")]
		public string ResourcePath;

		[Token(Token = "0x4001626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string PoseName;

		[Token(Token = "0x4001627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HandPose CurrentPose;

		[Token(Token = "0x4001628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float AnimationSpeed;

		[Token(Token = "0x4001629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform WristJoint;

		[Token(Token = "0x400162A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<Transform> ThumbJoints;

		[Token(Token = "0x400162B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<Transform> IndexJoints;

		[Token(Token = "0x400162C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<Transform> MiddleJoints;

		[Token(Token = "0x400162D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<Transform> RingJoints;

		[Token(Token = "0x400162E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<Transform> PinkyJoints;

		[Token(Token = "0x400162F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<Transform> OtherJoints;

		[Token(Token = "0x4001630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private HandPose previousPose;

		[Token(Token = "0x4001631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool doSingleAnimation;

		[Token(Token = "0x4001632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		public bool ContinuousUpdate;

		[Token(Token = "0x4001633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float editorAnimationTime;

		[Token(Token = "0x4001634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float maxEditorAnimationTime;

		[Token(Token = "0x170002E4")]
		public HandPoseDefinition HandPoseJoints
		{
			[Token(Token = "0x600143B")]
			[Address(RVA = "0xF51134", Offset = "0xF51134", VA = "0xF51134")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600143C")]
		[Address(RVA = "0xF51140", Offset = "0xF51140", VA = "0xF51140")]
		private void Start()
		{
		}

		[Token(Token = "0x600143D")]
		[Address(RVA = "0xF51160", Offset = "0xF51160", VA = "0xF51160")]
		private void Update()
		{
		}

		[Token(Token = "0x600143E")]
		[Address(RVA = "0xF511AC", Offset = "0xF511AC", VA = "0xF511AC")]
		public void CheckForPoseChange()
		{
		}

		[Token(Token = "0x600143F")]
		[Address(RVA = "0xF51150", Offset = "0xF51150", VA = "0xF51150")]
		public void OnPoseChanged()
		{
		}

		[Token(Token = "0x6001440")]
		[Address(RVA = "0xF51370", Offset = "0xF51370", VA = "0xF51370")]
		public FingerJoint GetWristJoint()
		{
			return null;
		}

		[Token(Token = "0x6001441")]
		[Address(RVA = "0xF51380", Offset = "0xF51380", VA = "0xF51380")]
		public List<FingerJoint> GetThumbJoints()
		{
			return null;
		}

		[Token(Token = "0x6001442")]
		[Address(RVA = "0xF51390", Offset = "0xF51390", VA = "0xF51390")]
		public List<FingerJoint> GetIndexJoints()
		{
			return null;
		}

		[Token(Token = "0x6001443")]
		[Address(RVA = "0xF513A0", Offset = "0xF513A0", VA = "0xF513A0")]
		public List<FingerJoint> GetMiddleJoints()
		{
			return null;
		}

		[Token(Token = "0x6001444")]
		[Address(RVA = "0xF513B0", Offset = "0xF513B0", VA = "0xF513B0")]
		public List<FingerJoint> GetRingJoints()
		{
			return null;
		}

		[Token(Token = "0x6001445")]
		[Address(RVA = "0xF513C0", Offset = "0xF513C0", VA = "0xF513C0")]
		public List<FingerJoint> GetPinkyJoints()
		{
			return null;
		}

		[Token(Token = "0x6001446")]
		[Address(RVA = "0xF513D0", Offset = "0xF513D0", VA = "0xF513D0")]
		public List<FingerJoint> GetOtherJoints()
		{
			return null;
		}

		[Token(Token = "0x6001447")]
		[Address(RVA = "0xF513E0", Offset = "0xF513E0", VA = "0xF513E0")]
		public Transform GetTip(List<Transform> transforms)
		{
			return null;
		}

		[Token(Token = "0x6001448")]
		[Address(RVA = "0xF51454", Offset = "0xF51454", VA = "0xF51454")]
		public Transform GetThumbTip()
		{
			return null;
		}

		[Token(Token = "0x6001449")]
		[Address(RVA = "0xF5145C", Offset = "0xF5145C", VA = "0xF5145C")]
		public Transform GetIndexTip()
		{
			return null;
		}

		[Token(Token = "0x600144A")]
		[Address(RVA = "0xF51464", Offset = "0xF51464", VA = "0xF51464")]
		public Transform GetMiddleTip()
		{
			return null;
		}

		[Token(Token = "0x600144B")]
		[Address(RVA = "0xF5146C", Offset = "0xF5146C", VA = "0xF5146C")]
		public Transform GetRingTip()
		{
			return null;
		}

		[Token(Token = "0x600144C")]
		[Address(RVA = "0xF51474", Offset = "0xF51474", VA = "0xF51474")]
		public Transform GetPinkyTip()
		{
			return null;
		}

		[Token(Token = "0x600144D")]
		[Address(RVA = "0xF5147C", Offset = "0xF5147C", VA = "0xF5147C")]
		public static Vector3 GetFingerTipPositionWithOffset(List<Transform> jointTransforms, float tipRadius)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600144E")]
		[Address(RVA = "0xF51610", Offset = "0xF51610", VA = "0xF51610", Slot = "4")]
		public virtual List<FingerJoint> GetJointsFromTransforms(List<Transform> jointTransforms)
		{
			return null;
		}

		[Token(Token = "0x600144F")]
		[Address(RVA = "0xF51790", Offset = "0xF51790", VA = "0xF51790", Slot = "5")]
		public virtual FingerJoint GetJointFromTransform(Transform jointTransform)
		{
			return null;
		}

		[Token(Token = "0x6001450")]
		[Address(RVA = "0xF51880", Offset = "0xF51880", VA = "0xF51880", Slot = "6")]
		public virtual void UpdateHandPose(HandPoseDefinition pose, bool lerp)
		{
		}

		[Token(Token = "0x6001451")]
		[Address(RVA = "0xF51974", Offset = "0xF51974", VA = "0xF51974", Slot = "7")]
		public virtual void UpdateJoint(FingerJoint fromJoint, Transform toTransform, bool doLerp)
		{
		}

		[Token(Token = "0x6001452")]
		[Address(RVA = "0xF51B54", Offset = "0xF51B54", VA = "0xF51B54", Slot = "8")]
		public virtual void UpdateJoints(List<FingerJoint> joints, List<Transform> toTransforms, bool doLerp)
		{
		}

		[Token(Token = "0x6001453")]
		[Address(RVA = "0xF51D6C", Offset = "0xF51D6C", VA = "0xF51D6C", Slot = "9")]
		public virtual HandPoseDefinition GetHandPoseDefinition()
		{
			return null;
		}

		[Token(Token = "0x6001454")]
		[Address(RVA = "0xF51ECC", Offset = "0xF51ECC", VA = "0xF51ECC", Slot = "10")]
		public virtual void SavePoseAsScriptablObject(string poseName)
		{
		}

		[Token(Token = "0x6001455")]
		[Address(RVA = "0xF51F40", Offset = "0xF51F40", VA = "0xF51F40", Slot = "11")]
		public virtual void CreateUniquePose(string poseName)
		{
		}

		[Token(Token = "0x6001456")]
		[Address(RVA = "0xF5206C", Offset = "0xF5206C", VA = "0xF5206C", Slot = "12")]
		public virtual HandPose GetHandPoseScriptableObject()
		{
			return null;
		}

		[Token(Token = "0x6001457")]
		[Address(RVA = "0xF52074", Offset = "0xF52074", VA = "0xF52074", Slot = "13")]
		public virtual void DoPoseUpdate()
		{
		}

		[Token(Token = "0x6001458")]
		[Address(RVA = "0xF52144", Offset = "0xF52144", VA = "0xF52144", Slot = "14")]
		public virtual void ResetEditorHandles()
		{
		}

		[Token(Token = "0x6001459")]
		[Address(RVA = "0xF522B4", Offset = "0xF522B4", VA = "0xF522B4")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x600145A")]
		[Address(RVA = "0xF522B8", Offset = "0xF522B8", VA = "0xF522B8")]
		public HandPoser()
		{
		}
	}
	[Token(Token = "0x2000363")]
	[ExecuteInEditMode]
	public class SkeletonVisualizer : MonoBehaviour
	{
		[Token(Token = "0x4001635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool ShowGizmos;

		[Token(Token = "0x4001636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7A2000", Offset = "0x7A2000")]
		public float JointRadius;

		[Token(Token = "0x4001637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7A2018", Offset = "0x7A2018")]
		public float BoneThickness;

		[Token(Token = "0x4001638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Color GizmoColor;

		[Token(Token = "0x4001639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool ShowTransformNames;

		[Token(Token = "0x400163A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		private bool isQuiting;

		[Token(Token = "0x600145B")]
		[Address(RVA = "0xC96700", Offset = "0xC96700", VA = "0xC96700")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x600145C")]
		[Address(RVA = "0xC9670C", Offset = "0xC9670C", VA = "0xC9670C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600145D")]
		[Address(RVA = "0xC96710", Offset = "0xC96710", VA = "0xC96710", Slot = "4")]
		public virtual bool IsTipOfBone(Transform fingerJoint)
		{
			return default(bool);
		}

		[Token(Token = "0x600145E")]
		[Address(RVA = "0xC96814", Offset = "0xC96814", VA = "0xC96814")]
		public void ResetEditorHandles()
		{
		}

		[Token(Token = "0x600145F")]
		[Address(RVA = "0xC96984", Offset = "0xC96984", VA = "0xC96984")]
		public SkeletonVisualizer()
		{
		}
	}
	[Token(Token = "0x2000364")]
	public class SnapZoneOffset : MonoBehaviour
	{
		[Token(Token = "0x400163B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 LocalPositionOffset;

		[Token(Token = "0x400163C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 LocalRotationOffset;

		[Token(Token = "0x6001460")]
		[Address(RVA = "0xDBF480", Offset = "0xDBF480", VA = "0xDBF480")]
		public SnapZoneOffset()
		{
		}
	}
	[Token(Token = "0x2000365")]
	public class BNGIKPlayerScale : MonoBehaviour
	{
		[Token(Token = "0x400163D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VRIK ik;

		[Token(Token = "0x400163E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float scaleMlp;

		[Token(Token = "0x400163F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public ControllerBinding ScalePlayerInput;

		[Token(Token = "0x6001461")]
		[Address(RVA = "0xAE8654", Offset = "0xAE8654", VA = "0xAE8654")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001462")]
		[Address(RVA = "0xAE87D4", Offset = "0xAE87D4", VA = "0xAE87D4")]
		public BNGIKPlayerScale()
		{
		}
	}
	[Token(Token = "0x2000366")]
	public class FingerMapping : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000367")]
		public enum Mode
		{
			[Token(Token = "0x4001646")]
			FromToRotation,
			[Token(Token = "0x4001647")]
			MatchRotation
		}

		[Token(Token = "0x4001640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IK ik;

		[Token(Token = "0x4001641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7A2030", Offset = "0x7A2030")]
		public float weight;

		[Token(Token = "0x4001642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Mode mode;

		[Token(Token = "0x4001643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Finger[] fingers;

		[Token(Token = "0x4001644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A2048", Offset = "0x7A2048")]
		public bool ShowGizmos;

		[Token(Token = "0x6001463")]
		[Address(RVA = "0xE7904C", Offset = "0xE7904C", VA = "0xE7904C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001464")]
		[Address(RVA = "0xE791A8", Offset = "0xE791A8", VA = "0xE791A8")]
		private void AfterVRIK()
		{
		}

		[Token(Token = "0x6001465")]
		[Address(RVA = "0xE79614", Offset = "0xE79614", VA = "0xE79614")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001466")]
		[Address(RVA = "0xE79918", Offset = "0xE79918", VA = "0xE79918")]
		public FingerMapping()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000368")]
	public class Finger
	{
		[Token(Token = "0x4001648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform[] avatarBones;

		[Token(Token = "0x4001649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform[] targetBones;

		[Token(Token = "0x400164A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 avatarForwardAxis;

		[Token(Token = "0x400164B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 avatarUpAxis;

		[Token(Token = "0x400164C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 targetForwardAxis;

		[Token(Token = "0x400164D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 targetUpAxis;

		[Token(Token = "0x6001467")]
		[Address(RVA = "0xE78F80", Offset = "0xE78F80", VA = "0xE78F80")]
		public Finger()
		{
		}
	}
	[Token(Token = "0x2000369")]
	public class IKHandTargetMover : MonoBehaviour
	{
		[Token(Token = "0x400164E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Grabber grabber;

		[Token(Token = "0x400164F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform HandTarget;

		[Token(Token = "0x4001650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 rotationOffset;

		[Token(Token = "0x4001651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 positionOffset;

		[Token(Token = "0x6001468")]
		[Address(RVA = "0xF56754", Offset = "0xF56754", VA = "0xF56754")]
		private void Update()
		{
		}

		[Token(Token = "0x6001469")]
		[Address(RVA = "0xF569E4", Offset = "0xF569E4", VA = "0xF569E4")]
		public IKHandTargetMover()
		{
		}
	}
	[Token(Token = "0x200036A")]
	public class HandTracking : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200036B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x797C84", Offset = "0x797C84")]
		private sealed class <>c
		{
			[Token(Token = "0x4001667")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001668")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<OVRBone, bool> <>9__22_0;

			[Token(Token = "0x4001669")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<OVRBone, bool> <>9__22_1;

			[Token(Token = "0x6001471")]
			[Address(RVA = "0xB0C594", Offset = "0xB0C594", VA = "0xB0C594")]
			public <>c()
			{
			}

			[Token(Token = "0x6001472")]
			[Address(RVA = "0xB0C59C", Offset = "0xB0C59C", VA = "0xB0C59C")]
			internal bool <Update>b__22_0(OVRBone x)
			{
				return default(bool);
			}

			[Token(Token = "0x6001473")]
			[Address(RVA = "0xB0C5BC", Offset = "0xB0C5BC", VA = "0xB0C5BC")]
			internal bool <Update>b__22_1(OVRBone x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A2080", Offset = "0x7A2080")]
		public OVRHand LeftHand;

		[Token(Token = "0x4001653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OVRHand RightHand;

		[Token(Token = "0x4001654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public OVRHand.TrackingConfidence LeftHandConfidence;

		[Token(Token = "0x4001655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public OVRHand.TrackingConfidence RightHandConfidence;

		[Token(Token = "0x4001656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRSkeleton leftSkele;

		[Token(Token = "0x4001657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRSkeleton rightSkele;

		[Token(Token = "0x4001658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRBone leftIndexBone;

		[Token(Token = "0x4001659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OVRBone rightIndexBone;

		[Token(Token = "0x400165A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool wasHandTracking;

		[Token(Token = "0x400165B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Grabber LeftGrabber;

		[Token(Token = "0x400165C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Grabber RightGrabber;

		[Token(Token = "0x400165D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform LeftModelHolder;

		[Token(Token = "0x400165E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform RightModelHolder;

		[Token(Token = "0x400165F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A20B8", Offset = "0x7A20B8")]
		public bool DoPinchToGrab;

		[Token(Token = "0x4001660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A20F0", Offset = "0x7A20F0")]
		public bool IsHandTracking;

		[Token(Token = "0x4001661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
		public bool IsLeftIndexPinching;

		[Token(Token = "0x4001662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float LeftIndexPinchStrength;

		[Token(Token = "0x4001663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool IsRightIndexPinching;

		[Token(Token = "0x4001664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float RightIndexPinchStrength;

		[Token(Token = "0x4001665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Vector3 RightIndexPosition;

		[Token(Token = "0x4001666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public Vector3 LeftIndexPosition;

		[Token(Token = "0x600146A")]
		[Address(RVA = "0xF52414", Offset = "0xF52414", VA = "0xF52414")]
		private void Awake()
		{
		}

		[Token(Token = "0x600146B")]
		[Address(RVA = "0xF525BC", Offset = "0xF525BC", VA = "0xF525BC")]
		private void Update()
		{
		}

		[Token(Token = "0x600146C")]
		[Address(RVA = "0xF52980", Offset = "0xF52980", VA = "0xF52980")]
		private void updateHandTracking()
		{
		}

		[Token(Token = "0x600146D")]
		[Address(RVA = "0xF52C68", Offset = "0xF52C68", VA = "0xF52C68")]
		private void onHandTrackingChange(bool handTrackingEnabled)
		{
		}

		[Token(Token = "0x600146E")]
		[Address(RVA = "0xF52AAC", Offset = "0xF52AAC", VA = "0xF52AAC")]
		private void updateGrabbers()
		{
		}

		[Token(Token = "0x600146F")]
		[Address(RVA = "0xF52CCC", Offset = "0xF52CCC", VA = "0xF52CCC")]
		public HandTracking()
		{
		}
	}
	[Token(Token = "0x200036C")]
	public class HandTrackingDemo : MonoBehaviour
	{
		[Token(Token = "0x400166A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HandTracking HandTrackingController;

		[Token(Token = "0x400166B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform lastDrawPointLeft;

		[Token(Token = "0x400166C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform lastDrawPointRight;

		[Token(Token = "0x400166D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text DebugText;

		[Token(Token = "0x400166E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Text PinchTypeText;

		[Token(Token = "0x400166F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool DrawMode;

		[Token(Token = "0x4001670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float MinDrawDistance;

		[Token(Token = "0x4001671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float LineWidth;

		[Token(Token = "0x4001672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Material DrawMaterial;

		[Token(Token = "0x4001673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform root;

		[Token(Token = "0x4001674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool handTrackingEverDetected;

		[Token(Token = "0x6001474")]
		[Address(RVA = "0xF52CDC", Offset = "0xF52CDC", VA = "0xF52CDC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001475")]
		[Address(RVA = "0xF52D54", Offset = "0xF52D54", VA = "0xF52D54")]
		private void Update()
		{
		}

		[Token(Token = "0x6001476")]
		[Address(RVA = "0xF52DE0", Offset = "0xF52DE0", VA = "0xF52DE0")]
		private void doDrawMode()
		{
		}

		[Token(Token = "0x6001477")]
		[Address(RVA = "0xF53674", Offset = "0xF53674", VA = "0xF53674")]
		private Transform drawPoint(Transform lastDrawPoint, Vector3 endPosition, float lineWidth, Color lineColor)
		{
			return null;
		}

		[Token(Token = "0x6001478")]
		[Address(RVA = "0xF538C4", Offset = "0xF538C4", VA = "0xF538C4")]
		public void TogglePinchMode()
		{
		}

		[Token(Token = "0x6001479")]
		[Address(RVA = "0xF538EC", Offset = "0xF538EC", VA = "0xF538EC")]
		public void ClearDrawing()
		{
		}

		[Token(Token = "0x600147A")]
		[Address(RVA = "0xF53100", Offset = "0xF53100", VA = "0xF53100")]
		private void updateDebugText()
		{
		}

		[Token(Token = "0x600147B")]
		[Address(RVA = "0xF535F0", Offset = "0xF535F0", VA = "0xF535F0")]
		private void updatePinchButtonText()
		{
		}

		[Token(Token = "0x600147C")]
		[Address(RVA = "0xF539DC", Offset = "0xF539DC", VA = "0xF539DC")]
		public HandTrackingDemo()
		{
		}
	}
	[Token(Token = "0x200036D")]
	public class DemoCube : MonoBehaviour
	{
		[Token(Token = "0x4001675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material HighlightMaterial;

		[Token(Token = "0x4001676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material ActiveMaterial;

		[Token(Token = "0x4001677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool active;

		[Token(Token = "0x4001678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool hovering;

		[Token(Token = "0x4001679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Material initialMaterial;

		[Token(Token = "0x400167A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MeshRenderer render;

		[Token(Token = "0x600147D")]
		[Address(RVA = "0xB786A0", Offset = "0xB786A0", VA = "0xB786A0")]
		private void Start()
		{
		}

		[Token(Token = "0x600147E")]
		[Address(RVA = "0xB78720", Offset = "0xB78720", VA = "0xB78720")]
		public void SetActive(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600147F")]
		[Address(RVA = "0xB78780", Offset = "0xB78780", VA = "0xB78780")]
		public void SetInactive(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001480")]
		[Address(RVA = "0xB78788", Offset = "0xB78788", VA = "0xB78788")]
		public void SetHovering(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001481")]
		[Address(RVA = "0xB78794", Offset = "0xB78794", VA = "0xB78794")]
		public void ResetHovering(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001482")]
		[Address(RVA = "0xB7872C", Offset = "0xB7872C", VA = "0xB7872C")]
		public void UpdateMaterial()
		{
		}

		[Token(Token = "0x6001483")]
		[Address(RVA = "0xB7879C", Offset = "0xB7879C", VA = "0xB7879C")]
		public DemoCube()
		{
		}
	}
	[Token(Token = "0x200036E")]
	public class CharacterConstraint : MonoBehaviour
	{
		[Token(Token = "0x400167B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private BNGPlayerController bngController;

		[Token(Token = "0x400167C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CharacterController character;

		[Token(Token = "0x6001484")]
		[Address(RVA = "0xF0CF28", Offset = "0xF0CF28", VA = "0xF0CF28")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001485")]
		[Address(RVA = "0xF0CFC4", Offset = "0xF0CFC4", VA = "0xF0CFC4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001486")]
		[Address(RVA = "0xF0CFD0", Offset = "0xF0CFD0", VA = "0xF0CFD0", Slot = "4")]
		public virtual void CheckCharacterCollisionMove()
		{
		}

		[Token(Token = "0x6001487")]
		[Address(RVA = "0xF0D0F0", Offset = "0xF0D0F0", VA = "0xF0D0F0")]
		public CharacterConstraint()
		{
		}
	}
	[Token(Token = "0x200036F")]
	public class CharacterIK : MonoBehaviour
	{
		[Token(Token = "0x400167D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform FollowLeftController;

		[Token(Token = "0x400167E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform FollowRightController;

		[Token(Token = "0x400167F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform FollowLeftFoot;

		[Token(Token = "0x4001680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform FollowRightFoot;

		[Token(Token = "0x4001681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform FollowHead;

		[Token(Token = "0x4001682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float FootYPosition;

		[Token(Token = "0x4001683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool IKActive;

		[Token(Token = "0x4001684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		public bool IKFeetActive;

		[Token(Token = "0x4001685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
		public bool HideHead;

		[Token(Token = "0x4001686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x47")]
		public bool HideLeftArm;

		[Token(Token = "0x4001687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool HideRightArm;

		[Token(Token = "0x4001688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool HideLeftHand;

		[Token(Token = "0x4001689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		public bool HideRightHand;

		[Token(Token = "0x400168A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
		public bool HideLegs;

		[Token(Token = "0x400168B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform HipsJoint;

		[Token(Token = "0x400168C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public CharacterController FollowPlayer;

		[Token(Token = "0x400168D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform headBone;

		[Token(Token = "0x400168E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform leftShoulderJoint;

		[Token(Token = "0x400168F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Transform rightShoulderJoint;

		[Token(Token = "0x4001690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Transform leftHandJoint;

		[Token(Token = "0x4001691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Transform rightHandJoint;

		[Token(Token = "0x4001692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Animator animator;

		[Token(Token = "0x4001693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float HipOffset;

		[Token(Token = "0x4001694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public Vector3 hideBoneScale;

		[Token(Token = "0x6001488")]
		[Address(RVA = "0xF1B538", Offset = "0xF1B538", VA = "0xF1B538")]
		private void Start()
		{
		}

		[Token(Token = "0x6001489")]
		[Address(RVA = "0xF1B65C", Offset = "0xF1B65C", VA = "0xF1B65C")]
		private void Update()
		{
		}

		[Token(Token = "0x600148A")]
		[Address(RVA = "0xF1B900", Offset = "0xF1B900", VA = "0xF1B900")]
		private void OnAnimatorIK()
		{
		}

		[Token(Token = "0x600148B")]
		[Address(RVA = "0xF1BDA4", Offset = "0xF1BDA4", VA = "0xF1BDA4")]
		public CharacterIK()
		{
		}
	}
	[Token(Token = "0x2000370")]
	public class CharacterYOffset : MonoBehaviour
	{
		[Token(Token = "0x600148C")]
		[Address(RVA = "0xF1C268", Offset = "0xF1C268", VA = "0xF1C268")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600148D")]
		[Address(RVA = "0xF1C310", Offset = "0xF1C310", VA = "0xF1C310")]
		public CharacterYOffset()
		{
		}
	}
	[Token(Token = "0x2000371")]
	public class Climbable : Grabbable
	{
		[Token(Token = "0x4001695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private PlayerClimbing playerClimbing;

		[Token(Token = "0x600148E")]
		[Address(RVA = "0xF1CD14", Offset = "0xF1CD14", VA = "0xF1CD14")]
		private void Start()
		{
		}

		[Token(Token = "0x600148F")]
		[Address(RVA = "0xF1CDF8", Offset = "0xF1CDF8", VA = "0xF1CDF8", Slot = "4")]
		public override void GrabItem(Grabber grabbedBy)
		{
		}

		[Token(Token = "0x6001490")]
		[Address(RVA = "0xF1CEA0", Offset = "0xF1CEA0", VA = "0xF1CEA0")]
		public Climbable()
		{
		}
	}
	[Token(Token = "0x2000372")]
	public class ConstrainLocalPosition : MonoBehaviour
	{
		[Token(Token = "0x4001696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool ConstrainLocalX;

		[Token(Token = "0x4001697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float LocalXMin;

		[Token(Token = "0x4001698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float LocalXMax;

		[Token(Token = "0x4001699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool ConstrainLocalY;

		[Token(Token = "0x400169A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float LocalYMin;

		[Token(Token = "0x400169B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float LocalYMax;

		[Token(Token = "0x400169C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool ConstrainLocalZ;

		[Token(Token = "0x400169D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float LocalZMin;

		[Token(Token = "0x400169E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float LocalZMax;

		[Token(Token = "0x6001491")]
		[Address(RVA = "0xB71C60", Offset = "0xB71C60", VA = "0xB71C60")]
		private void Update()
		{
		}

		[Token(Token = "0x6001492")]
		[Address(RVA = "0xB71C64", Offset = "0xB71C64", VA = "0xB71C64")]
		private void doConstrain()
		{
		}

		[Token(Token = "0x6001493")]
		[Address(RVA = "0xB71D58", Offset = "0xB71D58", VA = "0xB71D58")]
		public ConstrainLocalPosition()
		{
		}
	}
	[Token(Token = "0x2000373")]
	public class DestroyObjectWithDelay : MonoBehaviour
	{
		[Token(Token = "0x400169F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float DestroySeconds;

		[Token(Token = "0x6001494")]
		[Address(RVA = "0xB79D3C", Offset = "0xB79D3C", VA = "0xB79D3C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001495")]
		[Address(RVA = "0xB79DC4", Offset = "0xB79DC4", VA = "0xB79DC4")]
		public DestroyObjectWithDelay()
		{
		}
	}
	[Token(Token = "0x2000374")]
	public class FollowRigidbody : MonoBehaviour
	{
		[Token(Token = "0x40016A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform FollowTransform;

		[Token(Token = "0x40016A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Rigidbody rigid;

		[Token(Token = "0x6001496")]
		[Address(RVA = "0xCE5CCC", Offset = "0xCE5CCC", VA = "0xCE5CCC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001497")]
		[Address(RVA = "0xCE5D28", Offset = "0xCE5D28", VA = "0xCE5D28")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001498")]
		[Address(RVA = "0xCE5D74", Offset = "0xCE5D74", VA = "0xCE5D74")]
		public FollowRigidbody()
		{
		}
	}
	[Token(Token = "0x2000375")]
	public class FollowTransform : MonoBehaviour
	{
		[Token(Token = "0x40016A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform FollowTarget;

		[Token(Token = "0x40016A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool MatchRotation;

		[Token(Token = "0x6001499")]
		[Address(RVA = "0xCE5D7C", Offset = "0xCE5D7C", VA = "0xCE5D7C")]
		private void Update()
		{
		}

		[Token(Token = "0x600149A")]
		[Address(RVA = "0xCE5E68", Offset = "0xCE5E68", VA = "0xCE5E68")]
		public FollowTransform()
		{
		}
	}
	[Token(Token = "0x2000376")]
	public class GrabbableHighlight : GrabbableEvents
	{
		[Token(Token = "0x40016A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool HighlightOnGrabbable;

		[Token(Token = "0x40016A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool HighlightOnRemoteGrabbable;

		[Token(Token = "0x600149B")]
		[Address(RVA = "0xCF1FAC", Offset = "0xCF1FAC", VA = "0xCF1FAC", Slot = "6")]
		public override void OnGrab(Grabber grabber)
		{
		}

		[Token(Token = "0x600149C")]
		[Address(RVA = "0xCF1FB4", Offset = "0xCF1FB4", VA = "0xCF1FB4", Slot = "8")]
		public override void OnBecomesClosestGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x600149D")]
		[Address(RVA = "0xCF1FBC", Offset = "0xCF1FBC", VA = "0xCF1FBC", Slot = "10")]
		public override void OnNoLongerClosestGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x600149E")]
		[Address(RVA = "0xCF1FC0", Offset = "0xCF1FC0", VA = "0xCF1FC0", Slot = "12")]
		public override void OnBecomesClosestRemoteGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x600149F")]
		[Address(RVA = "0xCF1FC4", Offset = "0xCF1FC4", VA = "0xCF1FC4", Slot = "14")]
		public override void OnNoLongerClosestRemoteGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x60014A0")]
		[Address(RVA = "0xCF1FB8", Offset = "0xCF1FB8", VA = "0xCF1FB8")]
		public void HighlightItem()
		{
		}

		[Token(Token = "0x60014A1")]
		[Address(RVA = "0xCF1FB0", Offset = "0xCF1FB0", VA = "0xCF1FB0")]
		public void UnhighlightItem()
		{
		}

		[Token(Token = "0x60014A2")]
		[Address(RVA = "0xCF1FC8", Offset = "0xCF1FC8", VA = "0xCF1FC8")]
		public GrabbableHighlight()
		{
		}
	}
	[Token(Token = "0x2000377")]
	public class GrabbableHighlightMaterial : GrabbableEvents
	{
		[Token(Token = "0x40016A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool HighlightOnGrabbable;

		[Token(Token = "0x40016A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool HighlightOnRemoteGrabbable;

		[Token(Token = "0x40016A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A2128", Offset = "0x7A2128")]
		public List<Material> StandardMaterials;

		[Token(Token = "0x40016A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A2160", Offset = "0x7A2160")]
		public List<Material> HighlightMaterials;

		[Token(Token = "0x40016AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Renderer Renderer;

		[Token(Token = "0x60014A3")]
		[Address(RVA = "0xCF1FD8", Offset = "0xCF1FD8", VA = "0xCF1FD8")]
		private void Start()
		{
		}

		[Token(Token = "0x60014A4")]
		[Address(RVA = "0xCF21A8", Offset = "0xCF21A8", VA = "0xCF21A8", Slot = "6")]
		public override void OnGrab(Grabber grabber)
		{
		}

		[Token(Token = "0x60014A5")]
		[Address(RVA = "0xCF2268", Offset = "0xCF2268", VA = "0xCF2268", Slot = "8")]
		public override void OnBecomesClosestGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x60014A6")]
		[Address(RVA = "0xCF2334", Offset = "0xCF2334", VA = "0xCF2334", Slot = "10")]
		public override void OnNoLongerClosestGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x60014A7")]
		[Address(RVA = "0xCF2344", Offset = "0xCF2344", VA = "0xCF2344", Slot = "12")]
		public override void OnBecomesClosestRemoteGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x60014A8")]
		[Address(RVA = "0xCF2354", Offset = "0xCF2354", VA = "0xCF2354", Slot = "14")]
		public override void OnNoLongerClosestRemoteGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x60014A9")]
		[Address(RVA = "0xCF2278", Offset = "0xCF2278", VA = "0xCF2278")]
		public void HighlightItem()
		{
		}

		[Token(Token = "0x60014AA")]
		[Address(RVA = "0xCF21AC", Offset = "0xCF21AC", VA = "0xCF21AC")]
		public void UnhighlightItem()
		{
		}

		[Token(Token = "0x60014AB")]
		[Address(RVA = "0xCF2364", Offset = "0xCF2364", VA = "0xCF2364")]
		public GrabbableHighlightMaterial()
		{
		}
	}
	[Token(Token = "0x2000378")]
	public class LineToTransform : MonoBehaviour
	{
		[Token(Token = "0x40016AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform ConnectTo;

		[Token(Token = "0x40016AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LineRenderer line;

		[Token(Token = "0x60014AC")]
		[Address(RVA = "0x11871DC", Offset = "0x11871DC", VA = "0x11871DC")]
		private void Start()
		{
		}

		[Token(Token = "0x60014AD")]
		[Address(RVA = "0x11871E0", Offset = "0x11871E0", VA = "0x11871E0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60014AE")]
		[Address(RVA = "0x11871E4", Offset = "0x11871E4", VA = "0x11871E4")]
		public void UpdateLine()
		{
		}

		[Token(Token = "0x60014AF")]
		[Address(RVA = "0x1187384", Offset = "0x1187384", VA = "0x1187384")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60014B0")]
		[Address(RVA = "0x1187388", Offset = "0x1187388", VA = "0x1187388")]
		public LineToTransform()
		{
		}
	}
	[Token(Token = "0x2000379")]
	public class LookAtTransform : MonoBehaviour
	{
		[Token(Token = "0x40016AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform LookAt;

		[Token(Token = "0x40016AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool UseLerp;

		[Token(Token = "0x40016AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float Speed;

		[Token(Token = "0x40016B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool UseUpdate;

		[Token(Token = "0x40016B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool UseLateUpdate;

		[Token(Token = "0x60014B1")]
		[Address(RVA = "0x118B22C", Offset = "0x118B22C", VA = "0x118B22C")]
		private void Update()
		{
		}

		[Token(Token = "0x60014B2")]
		[Address(RVA = "0x118B448", Offset = "0x118B448", VA = "0x118B448")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60014B3")]
		[Address(RVA = "0x118B23C", Offset = "0x118B23C", VA = "0x118B23C")]
		private void lookAt()
		{
		}

		[Token(Token = "0x60014B4")]
		[Address(RVA = "0x118B458", Offset = "0x118B458", VA = "0x118B458")]
		public LookAtTransform()
		{
		}
	}
	[Token(Token = "0x200037A")]
	public class PlaySoundOnGrab : GrabbableEvents
	{
		[Token(Token = "0x40016B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip SoundToPlay;

		[Token(Token = "0x60014B5")]
		[Address(RVA = "0xBE4AC8", Offset = "0xBE4AC8", VA = "0xBE4AC8", Slot = "6")]
		public override void OnGrab(Grabber grabber)
		{
		}

		[Token(Token = "0x60014B6")]
		[Address(RVA = "0xBE4B9C", Offset = "0xBE4B9C", VA = "0xBE4B9C")]
		public PlaySoundOnGrab()
		{
		}
	}
	[Token(Token = "0x200037B")]
	public class RotateTowards : MonoBehaviour
	{
		[Token(Token = "0x40016B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform TargetTransform;

		[Token(Token = "0x60014B7")]
		[Address(RVA = "0xC8C19C", Offset = "0xC8C19C", VA = "0xC8C19C")]
		private void Update()
		{
		}

		[Token(Token = "0x60014B8")]
		[Address(RVA = "0xC8C288", Offset = "0xC8C288", VA = "0xC8C288")]
		public RotateTowards()
		{
		}
	}
	[Token(Token = "0x200037C")]
	public class RotateWithHMD : MonoBehaviour
	{
		[Token(Token = "0x40016B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A2198", Offset = "0x7A2198")]
		public Transform FollowTransform;

		[Token(Token = "0x40016B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A21D0", Offset = "0x7A21D0")]
		public CharacterController Character;

		[Token(Token = "0x40016B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 Offset;

		[Token(Token = "0x40016B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float RotateSpeed;

		[Token(Token = "0x40016B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float MovementSmoothing;

		[Token(Token = "0x40016B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 velocity;

		[Token(Token = "0x40016BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A2208", Offset = "0x7A2208")]
		public bool ParentToCharacter;

		[Token(Token = "0x40016BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform originalParent;

		[Token(Token = "0x40016BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform followTransform;

		[Token(Token = "0x40016BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform camTransform;

		[Token(Token = "0x60014B9")]
		[Address(RVA = "0xC8C290", Offset = "0xC8C290", VA = "0xC8C290")]
		private void Start()
		{
		}

		[Token(Token = "0x60014BA")]
		[Address(RVA = "0xC8C4B8", Offset = "0xC8C4B8", VA = "0xC8C4B8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60014BB")]
		[Address(RVA = "0xC8C4BC", Offset = "0xC8C4BC", VA = "0xC8C4BC")]
		private void UpdatePosition()
		{
		}

		[Token(Token = "0x60014BC")]
		[Address(RVA = "0xC8C870", Offset = "0xC8C870", VA = "0xC8C870")]
		public RotateWithHMD()
		{
		}
	}
	[Token(Token = "0x200037D")]
	public class ScaleBetweenPoints : MonoBehaviour
	{
		[Token(Token = "0x40016BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform Begin;

		[Token(Token = "0x40016BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform End;

		[Token(Token = "0x40016C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool DoUpdate;

		[Token(Token = "0x40016C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool DoLateUpdate;

		[Token(Token = "0x40016C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool LookAtTarget;

		[Token(Token = "0x60014BD")]
		[Address(RVA = "0xC8D048", Offset = "0xC8D048", VA = "0xC8D048")]
		private void Update()
		{
		}

		[Token(Token = "0x60014BE")]
		[Address(RVA = "0xC8D210", Offset = "0xC8D210", VA = "0xC8D210")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60014BF")]
		[Address(RVA = "0xC8D058", Offset = "0xC8D058", VA = "0xC8D058")]
		private void doScale()
		{
		}

		[Token(Token = "0x60014C0")]
		[Address(RVA = "0xC8D220", Offset = "0xC8D220", VA = "0xC8D220")]
		public ScaleBetweenPoints()
		{
		}
	}
	[Token(Token = "0x200037E")]
	public class ScreenFader : MonoBehaviour
	{
		[Token(Token = "0x200037F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x797C94", Offset = "0x797C94")]
		private sealed class <doFade>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40016CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40016D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40016D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float alphaFrom;

			[Token(Token = "0x40016D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ScreenFader <>4__this;

			[Token(Token = "0x40016D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float alphaTo;

			[Token(Token = "0x40016D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float fadeSeconds;

			[Token(Token = "0x40016D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <alpha>5__2;

			[Token(Token = "0x170002E5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60014D0")]
				[Address(RVA = "0xCC0280", Offset = "0xCC0280", VA = "0xCC0280", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60014D2")]
				[Address(RVA = "0xCC02C8", Offset = "0xCC02C8", VA = "0xCC02C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60014CD")]
			[Address(RVA = "0xCC0000", Offset = "0xCC0000", VA = "0xCC0000")]
			[DebuggerHidden]
			public <doFade>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x60014CE")]
			[Address(RVA = "0xCC002C", Offset = "0xCC002C", VA = "0xCC002C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60014CF")]
			[Address(RVA = "0xCC0030", Offset = "0xCC0030", VA = "0xCC0030", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60014D1")]
			[Address(RVA = "0xCC0288", Offset = "0xCC0288", VA = "0xCC0288", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000380")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x797CA4", Offset = "0x797CA4")]
		private sealed class <doFadeOut>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40016D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40016D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40016D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float alphaFrom;

			[Token(Token = "0x40016D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ScreenFader <>4__this;

			[Token(Token = "0x40016DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float alphaTo;

			[Token(Token = "0x40016DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <alpha>5__2;

			[Token(Token = "0x170002E7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60014D6")]
				[Address(RVA = "0xCC04BC", Offset = "0xCC04BC", VA = "0xCC04BC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60014D8")]
				[Address(RVA = "0xCC0504", Offset = "0xCC0504", VA = "0xCC0504", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60014D3")]
			[Address(RVA = "0xCC02D0", Offset = "0xCC02D0", VA = "0xCC02D0")]
			[DebuggerHidden]
			public <doFadeOut>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x60014D4")]
			[Address(RVA = "0xCC02FC", Offset = "0xCC02FC", VA = "0xCC02FC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60014D5")]
			[Address(RVA = "0xCC0300", Offset = "0xCC0300", VA = "0xCC0300", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60014D7")]
			[Address(RVA = "0xCC04C4", Offset = "0xCC04C4", VA = "0xCC04C4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40016C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A2240", Offset = "0x7A2240")]
		public bool FadeOnSceneLoaded;

		[Token(Token = "0x40016C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A2278", Offset = "0x7A2278")]
		public Color FadeColor;

		[Token(Token = "0x40016C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A22B0", Offset = "0x7A22B0")]
		public float FadeInSpeed;

		[Token(Token = "0x40016C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float FadeOutSpeed;

		[Token(Token = "0x40016C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A22E8", Offset = "0x7A22E8")]
		public float SceneFadeInDelay;

		[Token(Token = "0x40016C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject fadeObject;

		[Token(Token = "0x40016C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RectTransform fadeObjectRect;

		[Token(Token = "0x40016CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Canvas fadeCanvas;

		[Token(Token = "0x40016CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private CanvasGroup canvasGroup;

		[Token(Token = "0x40016CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Image fadeImage;

		[Token(Token = "0x40016CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private IEnumerator fadeRoutine;

		[Token(Token = "0x40016CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private string faderName;

		[Token(Token = "0x60014C1")]
		[Address(RVA = "0xC8FCE4", Offset = "0xC8FCE4", VA = "0xC8FCE4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014C2")]
		[Address(RVA = "0xC8FCF0", Offset = "0xC8FCF0", VA = "0xC8FCF0", Slot = "4")]
		protected virtual void initialize()
		{
		}

		[Token(Token = "0x60014C3")]
		[Address(RVA = "0xC900F0", Offset = "0xC900F0", VA = "0xC900F0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60014C4")]
		[Address(RVA = "0xC901AC", Offset = "0xC901AC", VA = "0xC901AC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60014C5")]
		[Address(RVA = "0xC90268", Offset = "0xC90268", VA = "0xC90268")]
		private void OnSceneLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x60014C6")]
		[Address(RVA = "0xC90314", Offset = "0xC90314", VA = "0xC90314", Slot = "5")]
		public virtual void DoFadeIn(float fadeSeconds)
		{
		}

		[Token(Token = "0x60014C7")]
		[Address(RVA = "0xC904A8", Offset = "0xC904A8", VA = "0xC904A8", Slot = "6")]
		public virtual void DoFadeOut(float fadeSeconds)
		{
		}

		[Token(Token = "0x60014C8")]
		[Address(RVA = "0xC9052C", Offset = "0xC9052C", VA = "0xC9052C", Slot = "7")]
		public virtual void SetFadeLevel(float fadeSeconds, float fadeLevel)
		{
		}

		[Token(Token = "0x60014C9")]
		[Address(RVA = "0xC9040C", Offset = "0xC9040C", VA = "0xC9040C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7ABFA8", Offset = "0x7ABFA8")]
		private IEnumerator doFade(float fadeSeconds, float alphaFrom, float alphaTo)
		{
			return null;
		}

		[Token(Token = "0x60014CA")]
		[Address(RVA = "0xC90628", Offset = "0xC90628", VA = "0xC90628")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7AC008", Offset = "0x7AC008")]
		private IEnumerator doFadeOut(float alphaFrom, float alphaTo)
		{
			return null;
		}

		[Token(Token = "0x60014CB")]
		[Address(RVA = "0xC906B8", Offset = "0xC906B8", VA = "0xC906B8", Slot = "8")]
		protected virtual void updateImageAlpha(float alphaValue)
		{
		}

		[Token(Token = "0x60014CC")]
		[Address(RVA = "0xC907E4", Offset = "0xC907E4", VA = "0xC907E4")]
		public ScreenFader()
		{
		}
	}
	[Token(Token = "0x2000381")]
	public class Tooltip : MonoBehaviour
	{
		[Token(Token = "0x40016DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 TipOffset;

		[Token(Token = "0x40016DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool UseWorldYAxis;

		[Token(Token = "0x40016DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float MaxViewDistance;

		[Token(Token = "0x40016DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform childTransform;

		[Token(Token = "0x40016E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform DrawLineTo;

		[Token(Token = "0x40016E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private LineToTransform lineTo;

		[Token(Token = "0x40016E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform lookAt;

		[Token(Token = "0x60014D9")]
		[Address(RVA = "0xE83290", Offset = "0xE83290", VA = "0xE83290")]
		private void Start()
		{
		}

		[Token(Token = "0x60014DA")]
		[Address(RVA = "0xE833E0", Offset = "0xE833E0", VA = "0xE833E0")]
		private void Update()
		{
		}

		[Token(Token = "0x60014DB")]
		[Address(RVA = "0xE83704", Offset = "0xE83704", VA = "0xE83704")]
		public Tooltip()
		{
		}
	}
	[Token(Token = "0x2000382")]
	public class VelocityTracker : MonoBehaviour
	{
		[Token(Token = "0x2000383")]
		public enum VelocityTrackingType
		{
			[Token(Token = "0x40016F0")]
			Device,
			[Token(Token = "0x40016F1")]
			PerFrame
		}

		[Token(Token = "0x40016E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A2320", Offset = "0x7A2320")]
		public VelocityTrackingType trackingType;

		[Token(Token = "0x40016E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A2358", Offset = "0x7A2358")]
		public ControllerHand controllerHand;

		[Token(Token = "0x40016E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A2390", Offset = "0x7A2390")]
		public float AverageVelocityCount;

		[Token(Token = "0x40016E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 _velocity;

		[Token(Token = "0x40016E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _angularVelocity;

		[Token(Token = "0x40016E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 _lastPosition;

		[Token(Token = "0x40016E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Quaternion _lastRotation;

		[Token(Token = "0x40016EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<Vector3> previousVelocities;

		[Token(Token = "0x40016EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<Vector3> previousAngularVelocities;

		[Token(Token = "0x40016EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float angle;

		[Token(Token = "0x40016ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 axis;

		[Token(Token = "0x40016EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private GameObject playSpace;

		[Token(Token = "0x60014DC")]
		[Address(RVA = "0xACE3F8", Offset = "0xACE3F8", VA = "0xACE3F8")]
		private void Start()
		{
		}

		[Token(Token = "0x60014DD")]
		[Address(RVA = "0xACE454", Offset = "0xACE454", VA = "0xACE454")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60014DE")]
		[Address(RVA = "0xACE4B0", Offset = "0xACE4B0", VA = "0xACE4B0", Slot = "4")]
		public virtual void UpdateVelocities()
		{
		}

		[Token(Token = "0x60014DF")]
		[Address(RVA = "0xACE4E4", Offset = "0xACE4E4", VA = "0xACE4E4", Slot = "5")]
		public virtual void UpdateVelocity()
		{
		}

		[Token(Token = "0x60014E0")]
		[Address(RVA = "0xACE5F4", Offset = "0xACE5F4", VA = "0xACE5F4", Slot = "6")]
		public virtual void UpdateAngularVelocity()
		{
		}

		[Token(Token = "0x60014E1")]
		[Address(RVA = "0xACE78C", Offset = "0xACE78C", VA = "0xACE78C", Slot = "7")]
		public virtual Vector3 GetVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014E2")]
		[Address(RVA = "0xACE8F0", Offset = "0xACE8F0", VA = "0xACE8F0", Slot = "8")]
		public virtual Vector3 GetAveragedVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014E3")]
		[Address(RVA = "0xACE900", Offset = "0xACE900", VA = "0xACE900", Slot = "9")]
		public virtual Vector3 GetAngularVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014E4")]
		[Address(RVA = "0xACE90C", Offset = "0xACE90C", VA = "0xACE90C", Slot = "10")]
		public virtual Vector3 GetAveragedAngularVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014E5")]
		[Address(RVA = "0xACE91C", Offset = "0xACE91C", VA = "0xACE91C", Slot = "11")]
		public virtual Vector3 GetAveragedVector(List<Vector3> vectors)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014E6")]
		[Address(RVA = "0xACEA20", Offset = "0xACEA20", VA = "0xACEA20")]
		public VelocityTracker()
		{
		}
	}
	[Token(Token = "0x2000384")]
	public enum LocomotionType
	{
		[Token(Token = "0x40016F3")]
		Teleport,
		[Token(Token = "0x40016F4")]
		SmoothLocomotion,
		[Token(Token = "0x40016F5")]
		None
	}
	[Token(Token = "0x2000385")]
	public class BNGPlayerController : MonoBehaviour
	{
		[Token(Token = "0x40016F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A23C8", Offset = "0x7A23C8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A23C8", Offset = "0x7A23C8")]
		public bool MoveCharacterWithCamera;

		[Token(Token = "0x40016F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A2428", Offset = "0x7A2428")]
		public bool RotateCharacterWithCamera;

		[Token(Token = "0x40016F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A2460", Offset = "0x7A2460")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A2460", Offset = "0x7A2460")]
		public Transform TrackingSpace;

		[Token(Token = "0x40016F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A24C0", Offset = "0x7A24C0")]
		public Transform CameraRig;

		[Token(Token = "0x40016FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A24F8", Offset = "0x7A24F8")]
		public Transform CenterEyeAnchor;

		[Token(Token = "0x40016FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A2530", Offset = "0x7A2530")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A2530", Offset = "0x7A2530")]
		public LayerMask GroundedLayers;

		[Token(Token = "0x40016FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A2590", Offset = "0x7A2590")]
		public float DistanceFromGround;

		[Token(Token = "0x40016FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A25C8", Offset = "0x7A25C8")]
		public float DistanceFromGroundOffset;

		[Token(Token = "0x40016FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A2600", Offset = "0x7A2600")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A2600", Offset = "0x7A2600")]
		public float CapsuleCenter;

		[Token(Token = "0x40016FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A2660", Offset = "0x7A2660")]
		public float MinimumCapsuleHeight;

		[Token(Token = "0x4001700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A2698", Offset = "0x7A2698")]
		public float MaximumCapsuleHeight;

		[Token(Token = "0x4001701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public float LastTeleportTime;

		[Token(Token = "0x4001702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A26E0", Offset = "0x7A26E0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A26E0", Offset = "0x7A26E0")]
		public float CharacterControllerYOffset;

		[Token(Token = "0x4001703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public float CameraHeight;

		[Token(Token = "0x4001704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A2750", Offset = "0x7A2750")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A2750", Offset = "0x7A2750")]
		public bool ElevateCameraIfNoHMDPresent;

		[Token(Token = "0x4001705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A27B0", Offset = "0x7A27B0")]
		public float ElevateCameraHeight;

		[Token(Token = "0x4001706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A27E8", Offset = "0x7A27E8")]
		public float MinElevation;

		[Token(Token = "0x4001707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float MaxElevation;

		[Token(Token = "0x4001708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[HideInInspector]
		public float LastPlayerMoveTime;

		[Token(Token = "0x4001709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private CharacterController characterController;

		[Token(Token = "0x400170A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Rigidbody playerRigid;

		[Token(Token = "0x400170B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private CapsuleCollider playerCapsule;

		[Token(Token = "0x400170C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private SmoothLocomotion smoothLocomotion;

		[Token(Token = "0x400170D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private PlayerClimbing playerClimbing;

		[Token(Token = "0x400170E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public RaycastHit groundHit;

		[Token(Token = "0x400170F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Transform mainCamera;

		[Token(Token = "0x4001710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Vector3 _initialPosition;

		[Token(Token = "0x4001711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public float SphereColliderRadius;

		[Token(Token = "0x60014E7")]
		[Address(RVA = "0xAE87E8", Offset = "0xAE87E8", VA = "0xAE87E8")]
		private void Start()
		{
		}

		[Token(Token = "0x60014E8")]
		[Address(RVA = "0xAE8A0C", Offset = "0xAE8A0C", VA = "0xAE8A0C")]
		private void Update()
		{
		}

		[Token(Token = "0x60014E9")]
		[Address(RVA = "0xAE8B18", Offset = "0xAE8B18", VA = "0xAE8B18")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60014EA")]
		[Address(RVA = "0xAE8B4C", Offset = "0xAE8B4C", VA = "0xAE8B4C", Slot = "4")]
		public virtual void CheckPlayerElevationRespawn()
		{
		}

		[Token(Token = "0x60014EB")]
		[Address(RVA = "0xAE8CA4", Offset = "0xAE8CA4", VA = "0xAE8CA4", Slot = "5")]
		public virtual void UpdateDistanceFromGround()
		{
		}

		[Token(Token = "0x60014EC")]
		[Address(RVA = "0xAE905C", Offset = "0xAE905C", VA = "0xAE905C", Slot = "6")]
		public virtual void RotateTrackingSpaceToCamera()
		{
		}

		[Token(Token = "0x60014ED")]
		[Address(RVA = "0xAE9210", Offset = "0xAE9210", VA = "0xAE9210", Slot = "7")]
		public virtual void UpdateCameraRigPosition()
		{
		}

		[Token(Token = "0x60014EE")]
		[Address(RVA = "0xAE9414", Offset = "0xAE9414", VA = "0xAE9414", Slot = "8")]
		public virtual void UpdateCharacterHeight()
		{
		}

		[Token(Token = "0x60014EF")]
		[Address(RVA = "0xAE96B0", Offset = "0xAE96B0", VA = "0xAE96B0", Slot = "9")]
		public virtual void UpdateCameraHeight()
		{
		}

		[Token(Token = "0x60014F0")]
		[Address(RVA = "0xAE9738", Offset = "0xAE9738", VA = "0xAE9738", Slot = "10")]
		public virtual void CheckCharacterCollisionMove()
		{
		}

		[Token(Token = "0x60014F1")]
		[Address(RVA = "0xAE9924", Offset = "0xAE9924", VA = "0xAE9924")]
		public bool IsGrounded()
		{
			return default(bool);
		}

		[Token(Token = "0x60014F2")]
		[Address(RVA = "0xAE99D0", Offset = "0xAE99D0", VA = "0xAE99D0")]
		public BNGPlayerController()
		{
		}
	}
	[Token(Token = "0x2000386")]
	public class Button : MonoBehaviour
	{
		[Token(Token = "0x4001712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A2830", Offset = "0x7A2830")]
		public float MinLocalY;

		[Token(Token = "0x4001713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A2868", Offset = "0x7A2868")]
		public float MaxLocalY;

		[Token(Token = "0x4001714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A28A0", Offset = "0x7A28A0")]
		public float ClickTolerance;

		[Token(Token = "0x4001715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A28D8", Offset = "0x7A28D8")]
		public bool AllowPhysicsForces;

		[Token(Token = "0x4001716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Grabber> grabbers;

		[Token(Token = "0x4001717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<UITrigger> uiTriggers;

		[Token(Token = "0x4001718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SpringJoint joint;

		[Token(Token = "0x4001719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool clickingDown;

		[Token(Token = "0x400171A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioClip ButtonClick;

		[Token(Token = "0x400171B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AudioClip ButtonClickUp;

		[Token(Token = "0x400171C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UnityEvent onButtonDown;

		[Token(Token = "0x400171D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public UnityEvent onButtonUp;

		[Token(Token = "0x400171E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private AudioSource audioSource;

		[Token(Token = "0x400171F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Rigidbody rigid;

		[Token(Token = "0x4001720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float ButtonSpeed;

		[Token(Token = "0x4001721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float SpringForce;

		[Token(Token = "0x4001722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 buttonDownPosition;

		[Token(Token = "0x4001723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector3 buttonUpPosition;

		[Token(Token = "0x60014F3")]
		[Address(RVA = "0xAF1334", Offset = "0xAF1334", VA = "0xAF1334")]
		private void Start()
		{
		}

		[Token(Token = "0x60014F4")]
		[Address(RVA = "0xAF147C", Offset = "0xAF147C", VA = "0xAF147C")]
		private void Update()
		{
		}

		[Token(Token = "0x60014F5")]
		[Address(RVA = "0xAF1864", Offset = "0xAF1864", VA = "0xAF1864", Slot = "4")]
		public virtual Vector3 GetButtonUpPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014F6")]
		[Address(RVA = "0xAF18C8", Offset = "0xAF18C8", VA = "0xAF18C8", Slot = "5")]
		public virtual Vector3 GetButtonDownPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014F7")]
		[Address(RVA = "0xAF192C", Offset = "0xAF192C", VA = "0xAF192C", Slot = "6")]
		public virtual void OnButtonDown()
		{
		}

		[Token(Token = "0x60014F8")]
		[Address(RVA = "0xAF1A14", Offset = "0xAF1A14", VA = "0xAF1A14", Slot = "7")]
		public virtual void OnButtonUp()
		{
		}

		[Token(Token = "0x60014F9")]
		[Address(RVA = "0xAF1AFC", Offset = "0xAF1AFC", VA = "0xAF1AFC")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60014FA")]
		[Address(RVA = "0xAF1D68", Offset = "0xAF1D68", VA = "0xAF1D68")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60014FB")]
		[Address(RVA = "0xAF1F1C", Offset = "0xAF1F1C", VA = "0xAF1F1C")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60014FC")]
		[Address(RVA = "0xAF20C8", Offset = "0xAF20C8", VA = "0xAF20C8")]
		public Button()
		{
		}
	}
	[Token(Token = "0x2000387")]
	public class ControllerModelSelector : MonoBehaviour
	{
		[Token(Token = "0x4001724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int disableIndex;

		[Token(Token = "0x4001725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool isQuitting;

		[Token(Token = "0x60014FD")]
		[Address(RVA = "0xB71FB4", Offset = "0xB71FB4", VA = "0xB71FB4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60014FE")]
		[Address(RVA = "0xB7205C", Offset = "0xB7205C", VA = "0xB7205C")]
		public void UpdateControllerModel()
		{
		}

		[Token(Token = "0x60014FF")]
		[Address(RVA = "0xB72188", Offset = "0xB72188", VA = "0xB72188")]
		public void EnableChildController(int childIndex)
		{
		}

		[Token(Token = "0x6001500")]
		[Address(RVA = "0xB7221C", Offset = "0xB7221C", VA = "0xB7221C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001501")]
		[Address(RVA = "0xB722D8", Offset = "0xB722D8", VA = "0xB722D8")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001502")]
		[Address(RVA = "0xB722E4", Offset = "0xB722E4", VA = "0xB722E4")]
		public ControllerModelSelector()
		{
		}
	}
	[Token(Token = "0x2000388")]
	public class GrabPoint : MonoBehaviour
	{
		[Token(Token = "0x4001726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A2910", Offset = "0x7A2910")]
		public HandPoseType handPoseType;

		[Token(Token = "0x4001727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A2948", Offset = "0x7A2948")]
		public HandPose SelectedHandPose;

		[Token(Token = "0x4001728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A2980", Offset = "0x7A2980")]
		public HandPoseId HandPose;

		[Token(Token = "0x4001729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A29B8", Offset = "0x7A29B8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A29B8", Offset = "0x7A29B8")]
		public bool LeftHandIsValid;

		[Token(Token = "0x400172A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A2A18", Offset = "0x7A2A18")]
		public bool RightHandIsValid;

		[Token(Token = "0x400172B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A2A50", Offset = "0x7A2A50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A2A50", Offset = "0x7A2A50")]
		public Transform HandPosition;

		[Token(Token = "0x400172C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A2AB0", Offset = "0x7A2AB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A2AB0", Offset = "0x7A2AB0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7A2AB0", Offset = "0x7A2AB0")]
		public float MaxDegreeDifferenceAllowed;

		[Token(Token = "0x400172D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7A2B2C", Offset = "0x7A2B2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A2B2C", Offset = "0x7A2B2C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A2B2C", Offset = "0x7A2B2C")]
		public float IndexBlendMin;

		[Token(Token = "0x400172E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7A2BA4", Offset = "0x7A2BA4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A2BA4", Offset = "0x7A2BA4")]
		public float IndexBlendMax;

		[Token(Token = "0x400172F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7A2BF8", Offset = "0x7A2BF8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A2BF8", Offset = "0x7A2BF8")]
		public float ThumbBlendMin;

		[Token(Token = "0x4001730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7A2C4C", Offset = "0x7A2C4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A2C4C", Offset = "0x7A2C4C")]
		public float ThumbBlendMax;

		[Token(Token = "0x4001731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 previewModelOffsetLeft;

		[Token(Token = "0x4001732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 previewModelOffsetRight;

		[Token(Token = "0x4001733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A2CA0", Offset = "0x7A2CA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A2CA0", Offset = "0x7A2CA0")]
		public bool ShowAngleGizmo;

		[Token(Token = "0x4001734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
		private bool offsetFound;

		[Token(Token = "0x6001503")]
		[Address(RVA = "0xCF0118", Offset = "0xCF0118", VA = "0xCF0118")]
		public void UpdatePreviewTransforms()
		{
		}

		[Token(Token = "0x6001504")]
		[Address(RVA = "0xCF043C", Offset = "0xCF043C", VA = "0xCF043C")]
		public void UpdateHandPosePreview()
		{
		}

		[Token(Token = "0x6001505")]
		[Address(RVA = "0xCF062C", Offset = "0xCF062C", VA = "0xCF062C")]
		public void UpdateAutoPoserPreview()
		{
		}

		[Token(Token = "0x6001506")]
		[Address(RVA = "0xCF0950", Offset = "0xCF0950", VA = "0xCF0950")]
		public void UpdateChildAnimators()
		{
		}

		[Token(Token = "0x6001507")]
		[Address(RVA = "0xCF0AEC", Offset = "0xCF0AEC", VA = "0xCF0AEC")]
		public GrabPoint()
		{
		}
	}
	[Token(Token = "0x2000389")]
	public class Grabbable : MonoBehaviour
	{
		[Token(Token = "0x4001735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A2D00", Offset = "0x7A2D00")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A2D00", Offset = "0x7A2D00")]
		public GrabButton GrabButton;

		[Token(Token = "0x4001736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A2D60", Offset = "0x7A2D60")]
		public HoldType Grabtype;

		[Token(Token = "0x4001737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A2D98", Offset = "0x7A2D98")]
		public GrabPhysics GrabPhysics;

		[Token(Token = "0x4001738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A2DD0", Offset = "0x7A2DD0")]
		public GrabType GrabMechanic;

		[Token(Token = "0x4001739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A2E08", Offset = "0x7A2E08")]
		public float GrabSpeed;

		[Token(Token = "0x400173A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A2E40", Offset = "0x7A2E40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A2E40", Offset = "0x7A2E40")]
		public bool RemoteGrabbable;

		[Token(Token = "0x400173B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RemoteGrabMovement RemoteGrabMechanic;

		[Token(Token = "0x400173C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A2EA0", Offset = "0x7A2EA0")]
		public float RemoteGrabDistance;

		[Token(Token = "0x400173D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A2ED8", Offset = "0x7A2ED8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A2ED8", Offset = "0x7A2ED8")]
		public bool HideHandGraphics;

		[Token(Token = "0x400173E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A2F38", Offset = "0x7A2F38")]
		public bool CanBeSnappedToSnapZone;

		[Token(Token = "0x400173F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A2F70", Offset = "0x7A2F70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A2F70", Offset = "0x7A2F70")]
		public HandPoseType handPoseType;

		[Token(Token = "0x4001740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected HandPoseType initialHandPoseType;

		[Token(Token = "0x4001741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A2FD0", Offset = "0x7A2FD0")]
		public HandPose SelectedHandPose;

		[Token(Token = "0x4001742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected HandPose initialHandPose;

		[Token(Token = "0x4001743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A3008", Offset = "0x7A3008")]
		public HandPoseId CustomHandPose;

		[Token(Token = "0x4001744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		protected HandPoseId initialHandPoseId;

		[Token(Token = "0x4001745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A3040", Offset = "0x7A3040")]
		public HandPose grabHandPose;

		[Token(Token = "0x4001746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public float LastGrabTime;

		[Token(Token = "0x4001747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[HideInInspector]
		public float LastDropTime;

		[Token(Token = "0x4001748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected Transform primaryGrabOffset;

		[Token(Token = "0x4001749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public GrabPoint ActiveGrabPoint;

		[Token(Token = "0x400174A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Transform _grabTransform;

		[Token(Token = "0x400174B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Transform _grabTransformSecondary;

		[Token(Token = "0x400174C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A30A8", Offset = "0x7A30A8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A30A8", Offset = "0x7A30A8")]
		public List<Transform> GrabPoints;

		[Token(Token = "0x400174D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool _canBeMoved;

		[Token(Token = "0x400174E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected InputBridge input;

		[Token(Token = "0x400174F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[HideInInspector]
		public bool UseCustomInspector;

		[Token(Token = "0x4001750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private BNGPlayerController _player;

		[Token(Token = "0x4001751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected Rigidbody rigid;

		[Token(Token = "0x4001752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected List<GrabbableEvents> events;

		[Token(Token = "0x4001753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Vector3 _priorLocalOffsetPosition;

		[Token(Token = "0x4001754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private Quaternion _priorLocalOffsetRotation;

		[Token(Token = "0x4001755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Grabber _priorPrimaryGrabber;

		[Token(Token = "0x170002E9")]
		private Vector3 grabPosition
		{
			[Token(Token = "0x6001508")]
			[Address(RVA = "0xCF0B30", Offset = "0xCF0B30", VA = "0xCF0B30")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002EA")]
		[HideInInspector]
		public Vector3 GrabPositionOffset
		{
			[Token(Token = "0x6001509")]
			[Address(RVA = "0xCF0BC4", Offset = "0xCF0BC4", VA = "0xCF0BC4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002EB")]
		[HideInInspector]
		public Vector3 GrabRotationOffset
		{
			[Token(Token = "0x600150A")]
			[Address(RVA = "0xCF0C60", Offset = "0xCF0C60", VA = "0xCF0C60")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002EC")]
		public Transform grabTransform
		{
			[Token(Token = "0x600150B")]
			[Address(RVA = "0xCF0CFC", Offset = "0xCF0CFC", VA = "0xCF0CFC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002ED")]
		public Transform grabTransformSecondary
		{
			[Token(Token = "0x600150C")]
			[Address(RVA = "0xCF0E04", Offset = "0xCF0E04", VA = "0xCF0E04")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002EE")]
		public bool CanBeMoved
		{
			[Token(Token = "0x600150D")]
			[Address(RVA = "0xCF0F20", Offset = "0xCF0F20", VA = "0xCF0F20")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002EF")]
		protected BNGPlayerController player
		{
			[Token(Token = "0x600150E")]
			[Address(RVA = "0xCF0F28", Offset = "0xCF0F28", VA = "0xCF0F28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600150F")]
		[Address(RVA = "0xCF0F34", Offset = "0xCF0F34", VA = "0xCF0F34")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6001510")]
		[Address(RVA = "0xCF1044", Offset = "0xCF1044", VA = "0xCF1044")]
		public Transform GetGrabPoint()
		{
			return null;
		}

		[Token(Token = "0x6001511")]
		[Address(RVA = "0xCF104C", Offset = "0xCF104C", VA = "0xCF104C", Slot = "4")]
		public virtual void GrabItem(Grabber grabbedBy)
		{
		}

		[Token(Token = "0x6001512")]
		[Address(RVA = "0xCF1420", Offset = "0xCF1420", VA = "0xCF1420", Slot = "5")]
		public virtual Transform GetClosestGrabPoint(Grabber grabber)
		{
			return null;
		}

		[Token(Token = "0x6001513")]
		[Address(RVA = "0xCF1724", Offset = "0xCF1724", VA = "0xCF1724", Slot = "6")]
		public virtual bool IsGrabAllowed(Grabber grabber)
		{
			return default(bool);
		}

		[Token(Token = "0x6001514")]
		[Address(RVA = "0xCF186C", Offset = "0xCF186C", VA = "0xCF186C", Slot = "7")]
		public virtual void Release(Vector3 velocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6001515")]
		[Address(RVA = "0xCF1988", Offset = "0xCF1988", VA = "0xCF1988", Slot = "8")]
		public virtual BNGPlayerController GetBNGPlayerController()
		{
			return null;
		}

		[Token(Token = "0x6001516")]
		[Address(RVA = "0xCF1ADC", Offset = "0xCF1ADC", VA = "0xCF1ADC")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001517")]
		[Address(RVA = "0xCF1C4C", Offset = "0xCF1C4C", VA = "0xCF1C4C")]
		public Grabbable()
		{
		}
	}
	[Token(Token = "0x200038A")]
	public enum GrabType
	{
		[Token(Token = "0x4001757")]
		Snap,
		[Token(Token = "0x4001758")]
		Precise
	}
	[Token(Token = "0x200038B")]
	public enum RemoteGrabMovement
	{
		[Token(Token = "0x400175A")]
		Linear,
		[Token(Token = "0x400175B")]
		Velocity,
		[Token(Token = "0x400175C")]
		Flick
	}
	[Token(Token = "0x200038C")]
	public enum GrabPhysics
	{
		[Token(Token = "0x400175E")]
		None = 2,
		[Token(Token = "0x400175F")]
		PhysicsJoint = 0,
		[Token(Token = "0x4001760")]
		FixedJoint = 3,
		[Token(Token = "0x4001761")]
		Velocity = 4,
		[Token(Token = "0x4001762")]
		Kinematic = 1
	}
	[Token(Token = "0x200038D")]
	public enum HandPoseType
	{
		[Token(Token = "0x4001764")]
		AnimatorID,
		[Token(Token = "0x4001765")]
		HandPose,
		[Token(Token = "0x4001766")]
		AutoPoseOnce,
		[Token(Token = "0x4001767")]
		AutoPoseContinuous,
		[Token(Token = "0x4001768")]
		None
	}
	[Token(Token = "0x200038E")]
	public class GrabbableChild : MonoBehaviour
	{
		[Token(Token = "0x4001769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A3118", Offset = "0x7A3118")]
		public Grabbable ParentGrabbable;

		[Token(Token = "0x6001518")]
		[Address(RVA = "0xCF1C80", Offset = "0xCF1C80", VA = "0xCF1C80")]
		public GrabbableChild()
		{
		}
	}
	[Token(Token = "0x200038F")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x797CB4", Offset = "0x797CB4")]
	public abstract class GrabbableEvents : MonoBehaviour
	{
		[Token(Token = "0x400176A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Grabbable grab;

		[Token(Token = "0x400176B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Grabber thisGrabber;

		[Token(Token = "0x400176C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected InputBridge input;

		[Token(Token = "0x6001519")]
		[Address(RVA = "0xCF1E2C", Offset = "0xCF1E2C", VA = "0xCF1E2C", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600151A")]
		[Address(RVA = "0xCF1ECC", Offset = "0xCF1ECC", VA = "0xCF1ECC", Slot = "5")]
		public virtual bool isGrabAllowed(Grabber grabber)
		{
			return default(bool);
		}

		[Token(Token = "0x600151B")]
		[Address(RVA = "0xCF1F48", Offset = "0xCF1F48", VA = "0xCF1F48", Slot = "6")]
		public virtual void OnGrab(Grabber grabber)
		{
		}

		[Token(Token = "0x600151C")]
		[Address(RVA = "0xCF1F50", Offset = "0xCF1F50", VA = "0xCF1F50", Slot = "7")]
		public virtual void OnRelease()
		{
		}

		[Token(Token = "0x600151D")]
		[Address(RVA = "0xCF1F54", Offset = "0xCF1F54", VA = "0xCF1F54", Slot = "8")]
		public virtual void OnBecomesClosestGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x600151E")]
		[Address(RVA = "0xCF1F58", Offset = "0xCF1F58", VA = "0xCF1F58", Slot = "9")]
		public virtual void OnBecomesClosestGrabbable(Grabber touchingGrabber)
		{
		}

		[Token(Token = "0x600151F")]
		[Address(RVA = "0xCF1F5C", Offset = "0xCF1F5C", VA = "0xCF1F5C", Slot = "10")]
		public virtual void OnNoLongerClosestGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x6001520")]
		[Address(RVA = "0xCF1F60", Offset = "0xCF1F60", VA = "0xCF1F60", Slot = "11")]
		public virtual void OnNoLongerClosestGrabbable(Grabber touchingGrabber)
		{
		}

		[Token(Token = "0x6001521")]
		[Address(RVA = "0xCF1F64", Offset = "0xCF1F64", VA = "0xCF1F64", Slot = "12")]
		public virtual void OnBecomesClosestRemoteGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x6001522")]
		[Address(RVA = "0xCF1F68", Offset = "0xCF1F68", VA = "0xCF1F68", Slot = "13")]
		public virtual void OnBecomesClosestRemoteGrabbable(Grabber theGrabber)
		{
		}

		[Token(Token = "0x6001523")]
		[Address(RVA = "0xCF1F6C", Offset = "0xCF1F6C", VA = "0xCF1F6C", Slot = "14")]
		public virtual void OnNoLongerClosestRemoteGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x6001524")]
		[Address(RVA = "0xCF1F70", Offset = "0xCF1F70", VA = "0xCF1F70", Slot = "15")]
		public virtual void OnNoLongerClosestRemoteGrabbable(Grabber theGrabber)
		{
		}

		[Token(Token = "0x6001525")]
		[Address(RVA = "0xCF1F74", Offset = "0xCF1F74", VA = "0xCF1F74", Slot = "16")]
		public virtual void OnGrip(float gripValue)
		{
		}

		[Token(Token = "0x6001526")]
		[Address(RVA = "0xCF1F78", Offset = "0xCF1F78", VA = "0xCF1F78", Slot = "17")]
		public virtual void OnTrigger(float triggerValue)
		{
		}

		[Token(Token = "0x6001527")]
		[Address(RVA = "0xCF1F7C", Offset = "0xCF1F7C", VA = "0xCF1F7C", Slot = "18")]
		public virtual void OnTriggerDown()
		{
		}

		[Token(Token = "0x6001528")]
		[Address(RVA = "0xCF1F80", Offset = "0xCF1F80", VA = "0xCF1F80", Slot = "19")]
		public virtual void OnTriggerUp()
		{
		}

		[Token(Token = "0x6001529")]
		[Address(RVA = "0xCF1F84", Offset = "0xCF1F84", VA = "0xCF1F84", Slot = "20")]
		public virtual void OnButton1()
		{
		}

		[Token(Token = "0x600152A")]
		[Address(RVA = "0xCF1F88", Offset = "0xCF1F88", VA = "0xCF1F88", Slot = "21")]
		public virtual void OnButton1Down()
		{
		}

		[Token(Token = "0x600152B")]
		[Address(RVA = "0xCF1F8C", Offset = "0xCF1F8C", VA = "0xCF1F8C", Slot = "22")]
		public virtual void OnButton1Up()
		{
		}

		[Token(Token = "0x600152C")]
		[Address(RVA = "0xCF1F90", Offset = "0xCF1F90", VA = "0xCF1F90", Slot = "23")]
		public virtual void OnButton2()
		{
		}

		[Token(Token = "0x600152D")]
		[Address(RVA = "0xCF1F94", Offset = "0xCF1F94", VA = "0xCF1F94", Slot = "24")]
		public virtual void OnButton2Down()
		{
		}

		[Token(Token = "0x600152E")]
		[Address(RVA = "0xCF1F98", Offset = "0xCF1F98", VA = "0xCF1F98", Slot = "25")]
		public virtual void OnButton2Up()
		{
		}

		[Token(Token = "0x600152F")]
		[Address(RVA = "0xCF1F9C", Offset = "0xCF1F9C", VA = "0xCF1F9C", Slot = "26")]
		public virtual void OnSnapZoneEnter()
		{
		}

		[Token(Token = "0x6001530")]
		[Address(RVA = "0xCF1FA0", Offset = "0xCF1FA0", VA = "0xCF1FA0", Slot = "27")]
		public virtual void OnSnapZoneExit()
		{
		}

		[Token(Token = "0x6001531")]
		[Address(RVA = "0xCF1FA4", Offset = "0xCF1FA4", VA = "0xCF1FA4")]
		protected GrabbableEvents()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000390")]
	public class FloatEvent : UnityEvent<float>
	{
		[Token(Token = "0x6001532")]
		[Address(RVA = "0xE7D6C0", Offset = "0xE7D6C0", VA = "0xE7D6C0")]
		public FloatEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000391")]
	public class FloatFloatEvent : UnityEvent<float, float>
	{
		[Token(Token = "0x6001533")]
		[Address(RVA = "0xE7D70C", Offset = "0xE7D70C", VA = "0xE7D70C")]
		public FloatFloatEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000392")]
	public class GrabberEvent : UnityEvent<Grabber>
	{
		[Token(Token = "0x6001534")]
		[Address(RVA = "0xCF5F20", Offset = "0xCF5F20", VA = "0xCF5F20")]
		public GrabberEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000393")]
	public class GrabbableEvent : UnityEvent<Grabbable>
	{
		[Token(Token = "0x6001535")]
		[Address(RVA = "0xCF1DE0", Offset = "0xCF1DE0", VA = "0xCF1DE0")]
		public GrabbableEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000394")]
	public class RaycastHitEvent : UnityEvent<RaycastHit>
	{
		[Token(Token = "0x6001536")]
		[Address(RVA = "0xC89450", Offset = "0xC89450", VA = "0xC89450")]
		public RaycastHitEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000395")]
	public class Vector2Event : UnityEvent<Vector2>
	{
		[Token(Token = "0x6001537")]
		[Address(RVA = "0xACE2CC", Offset = "0xACE2CC", VA = "0xACE2CC")]
		public Vector2Event()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000396")]
	public class Vector3Event : UnityEvent<Vector3>
	{
		[Token(Token = "0x6001538")]
		[Address(RVA = "0xACE318", Offset = "0xACE318", VA = "0xACE318")]
		public Vector3Event()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000397")]
	public class PointerEventDataEvent : UnityEvent<PointerEventData>
	{
		[Token(Token = "0x6001539")]
		[Address(RVA = "0xC85170", Offset = "0xC85170", VA = "0xC85170")]
		public PointerEventDataEvent()
		{
		}
	}
	[Token(Token = "0x2000398")]
	public class GrabbableUnityEvents : GrabbableEvents
	{
		[Token(Token = "0x400176D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GrabberEvent onGrab;

		[Token(Token = "0x400176E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEvent onRelease;

		[Token(Token = "0x400176F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEvent onBecomesClosestGrabbable;

		[Token(Token = "0x4001770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UnityEvent onNoLongerClosestGrabbable;

		[Token(Token = "0x4001771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public UnityEvent onBecomesClosestRemoteGrabbable;

		[Token(Token = "0x4001772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UnityEvent onNoLongerClosestRemoteGrabbable;

		[Token(Token = "0x4001773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public FloatEvent onGrip;

		[Token(Token = "0x4001774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public FloatEvent onTrigger;

		[Token(Token = "0x4001775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public UnityEvent onTriggerDown;

		[Token(Token = "0x4001776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public UnityEvent onTriggerUp;

		[Token(Token = "0x4001777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public UnityEvent onButton1;

		[Token(Token = "0x4001778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public UnityEvent onButton1Down;

		[Token(Token = "0x4001779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public UnityEvent onButton1Up;

		[Token(Token = "0x400177A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public UnityEvent onButton2;

		[Token(Token = "0x400177B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public UnityEvent onButton2Down;

		[Token(Token = "0x400177C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public UnityEvent onButton2Up;

		[Token(Token = "0x400177D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public UnityEvent onSnapZoneEnter;

		[Token(Token = "0x400177E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public UnityEvent onSnapZoneExit;

		[Token(Token = "0x600153A")]
		[Address(RVA = "0xCF2964", Offset = "0xCF2964", VA = "0xCF2964", Slot = "6")]
		public override void OnGrab(Grabber grabber)
		{
		}

		[Token(Token = "0x600153B")]
		[Address(RVA = "0xCF29E4", Offset = "0xCF29E4", VA = "0xCF29E4", Slot = "7")]
		public override void OnRelease()
		{
		}

		[Token(Token = "0x600153C")]
		[Address(RVA = "0xCF29F8", Offset = "0xCF29F8", VA = "0xCF29F8", Slot = "8")]
		public override void OnBecomesClosestGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x600153D")]
		[Address(RVA = "0xCF2A0C", Offset = "0xCF2A0C", VA = "0xCF2A0C", Slot = "10")]
		public override void OnNoLongerClosestGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x600153E")]
		[Address(RVA = "0xCF2A20", Offset = "0xCF2A20", VA = "0xCF2A20", Slot = "12")]
		public override void OnBecomesClosestRemoteGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x600153F")]
		[Address(RVA = "0xCF2A34", Offset = "0xCF2A34", VA = "0xCF2A34", Slot = "14")]
		public override void OnNoLongerClosestRemoteGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x6001540")]
		[Address(RVA = "0xCF2A48", Offset = "0xCF2A48", VA = "0xCF2A48", Slot = "16")]
		public override void OnGrip(float gripValue)
		{
		}

		[Token(Token = "0x6001541")]
		[Address(RVA = "0xCF2AB8", Offset = "0xCF2AB8", VA = "0xCF2AB8", Slot = "17")]
		public override void OnTrigger(float triggerValue)
		{
		}

		[Token(Token = "0x6001542")]
		[Address(RVA = "0xCF2B28", Offset = "0xCF2B28", VA = "0xCF2B28", Slot = "18")]
		public override void OnTriggerDown()
		{
		}

		[Token(Token = "0x6001543")]
		[Address(RVA = "0xCF2B3C", Offset = "0xCF2B3C", VA = "0xCF2B3C", Slot = "19")]
		public override void OnTriggerUp()
		{
		}

		[Token(Token = "0x6001544")]
		[Address(RVA = "0xCF2B50", Offset = "0xCF2B50", VA = "0xCF2B50", Slot = "20")]
		public override void OnButton1()
		{
		}

		[Token(Token = "0x6001545")]
		[Address(RVA = "0xCF2B64", Offset = "0xCF2B64", VA = "0xCF2B64", Slot = "21")]
		public override void OnButton1Down()
		{
		}

		[Token(Token = "0x6001546")]
		[Address(RVA = "0xCF2B78", Offset = "0xCF2B78", VA = "0xCF2B78", Slot = "22")]
		public override void OnButton1Up()
		{
		}

		[Token(Token = "0x6001547")]
		[Address(RVA = "0xCF2B8C", Offset = "0xCF2B8C", VA = "0xCF2B8C", Slot = "23")]
		public override void OnButton2()
		{
		}

		[Token(Token = "0x6001548")]
		[Address(RVA = "0xCF2BA0", Offset = "0xCF2BA0", VA = "0xCF2BA0", Slot = "24")]
		public override void OnButton2Down()
		{
		}

		[Token(Token = "0x6001549")]
		[Address(RVA = "0xCF2BB4", Offset = "0xCF2BB4", VA = "0xCF2BB4", Slot = "25")]
		public override void OnButton2Up()
		{
		}

		[Token(Token = "0x600154A")]
		[Address(RVA = "0xCF2BC8", Offset = "0xCF2BC8", VA = "0xCF2BC8", Slot = "26")]
		public override void OnSnapZoneEnter()
		{
		}

		[Token(Token = "0x600154B")]
		[Address(RVA = "0xCF2BDC", Offset = "0xCF2BDC", VA = "0xCF2BDC", Slot = "27")]
		public override void OnSnapZoneExit()
		{
		}

		[Token(Token = "0x600154C")]
		[Address(RVA = "0xCF2BF0", Offset = "0xCF2BF0", VA = "0xCF2BF0")]
		public GrabbableUnityEvents()
		{
		}
	}
	[Token(Token = "0x2000399")]
	public class GrabbablesInTrigger : MonoBehaviour
	{
		[Token(Token = "0x400177F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Dictionary<Collider, Grabbable> NearbyGrabbables;

		[Token(Token = "0x4001780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Dictionary<Collider, Grabbable> ValidGrabbables;

		[Token(Token = "0x4001781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Grabbable ClosestGrabbable;

		[Token(Token = "0x4001782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Dictionary<Collider, Grabbable> ValidRemoteGrabbables;

		[Token(Token = "0x4001783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Grabbable ClosestRemoteGrabbable;

		[Token(Token = "0x4001784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool FireGrabbableEvents;

		[Token(Token = "0x4001785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Grabbable _closest;

		[Token(Token = "0x4001786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float _lastDistance;

		[Token(Token = "0x4001787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float _thisDistance;

		[Token(Token = "0x4001788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Collider, Grabbable> _valids;

		[Token(Token = "0x4001789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Collider, Grabbable> _filtered;

		[Token(Token = "0x600154D")]
		[Address(RVA = "0xCF2BF8", Offset = "0xCF2BF8", VA = "0xCF2BF8")]
		private void Start()
		{
		}

		[Token(Token = "0x600154E")]
		[Address(RVA = "0xCF2CC0", Offset = "0xCF2CC0", VA = "0xCF2CC0")]
		private void Update()
		{
		}

		[Token(Token = "0x600154F")]
		[Address(RVA = "0xCF2CE4", Offset = "0xCF2CE4", VA = "0xCF2CE4")]
		private void updateClosestGrabbable()
		{
		}

		[Token(Token = "0x6001550")]
		[Address(RVA = "0xCF2D74", Offset = "0xCF2D74", VA = "0xCF2D74")]
		private void updateClosestRemoteGrabbables()
		{
		}

		[Token(Token = "0x6001551")]
		[Address(RVA = "0xCF3048", Offset = "0xCF3048", VA = "0xCF3048", Slot = "4")]
		public virtual Grabbable GetClosestGrabbable(Dictionary<Collider, Grabbable> grabbables, bool remoteOnly = false)
		{
			return null;
		}

		[Token(Token = "0x6001552")]
		[Address(RVA = "0xCF2E2C", Offset = "0xCF2E2C", VA = "0xCF2E2C")]
		public Dictionary<Collider, Grabbable> GetValidGrabbables(Dictionary<Collider, Grabbable> grabs)
		{
			return null;
		}

		[Token(Token = "0x6001553")]
		[Address(RVA = "0xCF32F4", Offset = "0xCF32F4", VA = "0xCF32F4", Slot = "5")]
		protected virtual bool isValidGrabbale(Collider col, Grabbable grab)
		{
			return default(bool);
		}

		[Token(Token = "0x6001554")]
		[Address(RVA = "0xCF33D4", Offset = "0xCF33D4", VA = "0xCF33D4", Slot = "6")]
		public virtual Dictionary<Collider, Grabbable> SanitizeGrabbables(Dictionary<Collider, Grabbable> grabs)
		{
			return null;
		}

		[Token(Token = "0x6001555")]
		[Address(RVA = "0xCF3624", Offset = "0xCF3624", VA = "0xCF3624", Slot = "7")]
		public virtual void AddNearbyGrabbable(Collider col, Grabbable grabObject)
		{
		}

		[Token(Token = "0x6001556")]
		[Address(RVA = "0xCF3760", Offset = "0xCF3760", VA = "0xCF3760", Slot = "8")]
		public virtual void RemoveNearbyGrabbable(Collider col, Grabbable grabObject)
		{
		}

		[Token(Token = "0x6001557")]
		[Address(RVA = "0xCF3844", Offset = "0xCF3844", VA = "0xCF3844", Slot = "9")]
		public virtual void RemoveNearbyGrabbable(Grabbable grabObject)
		{
		}

		[Token(Token = "0x6001558")]
		[Address(RVA = "0xCF3A1C", Offset = "0xCF3A1C", VA = "0xCF3A1C", Slot = "10")]
		public virtual void AddValidRemoteGrabbable(Collider col, Grabbable grabObject)
		{
		}

		[Token(Token = "0x6001559")]
		[Address(RVA = "0xCF3D40", Offset = "0xCF3D40", VA = "0xCF3D40", Slot = "11")]
		public virtual void RemoveValidRemoteGrabbable(Collider col, Grabbable grabObject)
		{
		}

		[Token(Token = "0x600155A")]
		[Address(RVA = "0xCF3E24", Offset = "0xCF3E24", VA = "0xCF3E24")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600155B")]
		[Address(RVA = "0xCF3F90", Offset = "0xCF3F90", VA = "0xCF3F90")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x600155C")]
		[Address(RVA = "0xCF40CC", Offset = "0xCF40CC", VA = "0xCF40CC")]
		public GrabbablesInTrigger()
		{
		}
	}
	[Token(Token = "0x200039A")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x797D14", Offset = "0x797D14")]
	public class Grabber : MonoBehaviour
	{
		[Token(Token = "0x200039B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x797D74", Offset = "0x797D74")]
		private sealed class <setIsCollisionEnabled>d__48 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40017B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40017B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40017B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Grabber <>4__this;

			[Token(Token = "0x40017B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isEnabled;

			[Token(Token = "0x170002F2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001578")]
				[Address(RVA = "0xB0C2E4", Offset = "0xB0C2E4", VA = "0xB0C2E4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002F3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600157A")]
				[Address(RVA = "0xB0C32C", Offset = "0xB0C32C", VA = "0xB0C32C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001575")]
			[Address(RVA = "0xB0C1D8", Offset = "0xB0C1D8", VA = "0xB0C1D8")]
			[DebuggerHidden]
			public <setIsCollisionEnabled>d__48(int <>1__state)
			{
			}

			[Token(Token = "0x6001576")]
			[Address(RVA = "0xB0C204", Offset = "0xB0C204", VA = "0xB0C204", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001577")]
			[Address(RVA = "0xB0C208", Offset = "0xB0C208", VA = "0xB0C208", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001579")]
			[Address(RVA = "0xB0C2EC", Offset = "0xB0C2EC", VA = "0xB0C2EC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400178A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A3150", Offset = "0x7A3150")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A3150", Offset = "0x7A3150")]
		public ControllerHand HandSide;

		[Token(Token = "0x400178B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A31B0", Offset = "0x7A31B0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A31B0", Offset = "0x7A31B0")]
		public HoldType DefaultHoldType;

		[Token(Token = "0x400178C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7A3210", Offset = "0x7A3210")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A3210", Offset = "0x7A3210")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A3210", Offset = "0x7A3210")]
		public float GripAmount;

		[Token(Token = "0x400178D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7A3288", Offset = "0x7A3288")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A3288", Offset = "0x7A3288")]
		public float ReleaseGripAmount;

		[Token(Token = "0x400178E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A32DC", Offset = "0x7A32DC")]
		public float GrabCheckSeconds;

		[Token(Token = "0x400178F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float currentGrabTime;

		[Token(Token = "0x4001790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A3314", Offset = "0x7A3314")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A3314", Offset = "0x7A3314")]
		public Transform HandsGraphics;

		[Token(Token = "0x4001791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform handsGraphicsParent;

		[Token(Token = "0x4001792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 handsGraphicsPosition;

		[Token(Token = "0x4001793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Quaternion handsGraphicsRotation;

		[Token(Token = "0x4001794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A3374", Offset = "0x7A3374")]
		public bool ForceGrab;

		[Token(Token = "0x4001795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A33AC", Offset = "0x7A33AC")]
		private bool _forceRelease;

		[Token(Token = "0x4001796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A33E4", Offset = "0x7A33E4")]
		public float LastDropTime;

		[Token(Token = "0x4001797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GrabbablesInTrigger grabsInTrigger;

		[Token(Token = "0x4001798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A341C", Offset = "0x7A341C")]
		private Vector3 <handsGraphicsGrabberOffset>k__BackingField;

		[Token(Token = "0x4001799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A342C", Offset = "0x7A342C")]
		private Vector3 <handsGraphicsGrabberOffsetRotation>k__BackingField;

		[Token(Token = "0x400179A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[HideInInspector]
		public Vector3 PreviousPosition;

		[Token(Token = "0x400179B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public Transform DummyTransform;

		[Token(Token = "0x400179C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private InputBridge input;

		[Token(Token = "0x400179D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A345C", Offset = "0x7A345C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A345C", Offset = "0x7A345C")]
		public GrabbableEvent onGrabEvent;

		[Token(Token = "0x400179E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A34BC", Offset = "0x7A34BC")]
		public GrabbableEvent onAfterGrabEvent;

		[Token(Token = "0x400179F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A34F4", Offset = "0x7A34F4")]
		public GrabbableEvent onReleaseEvent;

		[Token(Token = "0x40017A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Rigidbody rb;

		[Token(Token = "0x40017A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Stopwatch lastReleaseGrabbableTimer;

		[Token(Token = "0x40017A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private BNGPlayerController _playerController;

		[Token(Token = "0x40017A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public Transform handCollidersHolder;

		[Token(Token = "0x40017A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public Collider[] handColliders;

		[Token(Token = "0x40017A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private bool _collidersEnabled;

		[Token(Token = "0x40017A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public Animator animatorHand;

		[Token(Token = "0x40017A7")]
		private const int OPEN_ANIMATION = 0;

		[Token(Token = "0x40017A8")]
		private const int CLOSE_ANIMATION = 1;

		[Token(Token = "0x40017A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Stopwatch recentlyGrabbedStopwatch;

		[Token(Token = "0x40017AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public Grabbable HeldGrabbable;

		[Token(Token = "0x40017AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public NCGrabbableBasketball grabbableBasketball;

		[Token(Token = "0x40017AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public Rigidbody HeldRb;

		[Token(Token = "0x40017AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Vector3 lastPosition;

		[Token(Token = "0x40017AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private float _currentGripAmount;

		[Token(Token = "0x40017AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private Vector3 _desiredPosition;

		[Token(Token = "0x170002F0")]
		public Vector3 handsGraphicsGrabberOffset
		{
			[Token(Token = "0x600155D")]
			[Address(RVA = "0xCF40DC", Offset = "0xCF40DC", VA = "0xCF40DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AC108", Offset = "0x7AC108")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600155E")]
			[Address(RVA = "0xCF40E8", Offset = "0xCF40E8", VA = "0xCF40E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AC118", Offset = "0x7AC118")]
			private set
			{
			}
		}

		[Token(Token = "0x170002F1")]
		public Vector3 handsGraphicsGrabberOffsetRotation
		{
			[Token(Token = "0x600155F")]
			[Address(RVA = "0xCF40F4", Offset = "0xCF40F4", VA = "0xCF40F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AC128", Offset = "0x7AC128")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001560")]
			[Address(RVA = "0xCF4100", Offset = "0xCF4100", VA = "0xCF4100")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AC138", Offset = "0x7AC138")]
			private set
			{
			}
		}

		[Token(Token = "0x6001561")]
		[Address(RVA = "0xCF410C", Offset = "0xCF410C", VA = "0xCF410C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001562")]
		[Address(RVA = "0xCF45A0", Offset = "0xCF45A0", VA = "0xCF45A0")]
		public bool HoldingItem()
		{
			return default(bool);
		}

		[Token(Token = "0x6001563")]
		[Address(RVA = "0xCF43E4", Offset = "0xCF43E4", VA = "0xCF43E4")]
		private void setCollidersEnabled(bool enabled)
		{
		}

		[Token(Token = "0x6001564")]
		[Address(RVA = "0xCF460C", Offset = "0xCF460C", VA = "0xCF460C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001565")]
		[Address(RVA = "0xCF5058", Offset = "0xCF5058", VA = "0xCF5058")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7AC148", Offset = "0x7AC148")]
		private IEnumerator setIsCollisionEnabled(bool isEnabled)
		{
			return null;
		}

		[Token(Token = "0x6001566")]
		[Address(RVA = "0xCF4E74", Offset = "0xCF4E74", VA = "0xCF4E74")]
		public void SetForceRelease()
		{
		}

		[Token(Token = "0x6001567")]
		[Address(RVA = "0xCF4D30", Offset = "0xCF4D30", VA = "0xCF4D30")]
		public bool playerDidActivateGrab(Grabbable nearestGrabbable)
		{
			return default(bool);
		}

		[Token(Token = "0x6001568")]
		[Address(RVA = "0xCF5190", Offset = "0xCF5190", VA = "0xCF5190")]
		public bool playerDidActivateGrab(HoldType holdType, GrabButton grabButton)
		{
			return default(bool);
		}

		[Token(Token = "0x6001569")]
		[Address(RVA = "0xCF4DF0", Offset = "0xCF4DF0", VA = "0xCF4DF0")]
		private bool playerDidActivateRelease(Grabbable heldGrabbable)
		{
			return default(bool);
		}

		[Token(Token = "0x600156A")]
		[Address(RVA = "0xCF50E4", Offset = "0xCF50E4", VA = "0xCF50E4")]
		private HoldType getHoldType(Grabbable grab)
		{
			return default(HoldType);
		}

		[Token(Token = "0x600156B")]
		[Address(RVA = "0xCF53B0", Offset = "0xCF53B0", VA = "0xCF53B0", Slot = "4")]
		public virtual GrabButton GetGrabButton(Grabbable grab)
		{
			return default(GrabButton);
		}

		[Token(Token = "0x600156C")]
		[Address(RVA = "0xCF4E80", Offset = "0xCF4E80", VA = "0xCF4E80")]
		private float getGrabAmount(GrabButton btn)
		{
			return default(float);
		}

		[Token(Token = "0x600156D")]
		[Address(RVA = "0xCF51EC", Offset = "0xCF51EC", VA = "0xCF51EC")]
		private bool getToggleInput(GrabButton btn)
		{
			return default(bool);
		}

		[Token(Token = "0x600156E")]
		[Address(RVA = "0xCF5450", Offset = "0xCF5450", VA = "0xCF5450", Slot = "5")]
		public virtual bool checkCanGrab(Grabbable closestGrabbable)
		{
			return default(bool);
		}

		[Token(Token = "0x600156F")]
		[Address(RVA = "0xCF5544", Offset = "0xCF5544", VA = "0xCF5544", Slot = "6")]
		public virtual void DoGrab(Grabbable closestGrabbable)
		{
		}

		[Token(Token = "0x6001570")]
		[Address(RVA = "0xCF5694", Offset = "0xCF5694", VA = "0xCF5694", Slot = "7")]
		public virtual void DoRelease(Grabbable currentGrabbable)
		{
		}

		[Token(Token = "0x6001571")]
		[Address(RVA = "0xCF57AC", Offset = "0xCF57AC", VA = "0xCF57AC", Slot = "8")]
		public virtual void DidDrop()
		{
		}

		[Token(Token = "0x6001572")]
		[Address(RVA = "0xCF58C0", Offset = "0xCF58C0", VA = "0xCF58C0", Slot = "9")]
		public virtual void HideHandGraphics()
		{
		}

		[Token(Token = "0x6001573")]
		[Address(RVA = "0xCF5960", Offset = "0xCF5960", VA = "0xCF5960", Slot = "10")]
		public virtual void ResetHandGraphics()
		{
		}

		[Token(Token = "0x6001574")]
		[Address(RVA = "0xCF5A68", Offset = "0xCF5A68", VA = "0xCF5A68")]
		public Grabber()
		{
		}
	}
	[Token(Token = "0x200039C")]
	public enum ControllerHand
	{
		[Token(Token = "0x40017B5")]
		Left,
		[Token(Token = "0x40017B6")]
		Right,
		[Token(Token = "0x40017B7")]
		None
	}
	[Token(Token = "0x200039D")]
	public enum ControllerBinding
	{
		[Token(Token = "0x40017B9")]
		None,
		[Token(Token = "0x40017BA")]
		AButton,
		[Token(Token = "0x40017BB")]
		AButtonDown,
		[Token(Token = "0x40017BC")]
		BButton,
		[Token(Token = "0x40017BD")]
		BButtonDown,
		[Token(Token = "0x40017BE")]
		XButton,
		[Token(Token = "0x40017BF")]
		XButtonDown,
		[Token(Token = "0x40017C0")]
		YButton,
		[Token(Token = "0x40017C1")]
		YButtonDown,
		[Token(Token = "0x40017C2")]
		LeftTrigger,
		[Token(Token = "0x40017C3")]
		LeftTriggerDown,
		[Token(Token = "0x40017C4")]
		LeftGrip,
		[Token(Token = "0x40017C5")]
		LeftGripDown,
		[Token(Token = "0x40017C6")]
		LeftThumbstick,
		[Token(Token = "0x40017C7")]
		LeftThumbstickDown,
		[Token(Token = "0x40017C8")]
		RightTrigger,
		[Token(Token = "0x40017C9")]
		RightTriggerDown,
		[Token(Token = "0x40017CA")]
		RightGrip,
		[Token(Token = "0x40017CB")]
		RightGripDown,
		[Token(Token = "0x40017CC")]
		RightThumbstick,
		[Token(Token = "0x40017CD")]
		RightThumbstickDown,
		[Token(Token = "0x40017CE")]
		StartButton,
		[Token(Token = "0x40017CF")]
		StartButtonDown,
		[Token(Token = "0x40017D0")]
		BackButton,
		[Token(Token = "0x40017D1")]
		BackButtonDown
	}
	[Token(Token = "0x200039E")]
	public enum GrabbedControllerBinding
	{
		[Token(Token = "0x40017D3")]
		None,
		[Token(Token = "0x40017D4")]
		Button1,
		[Token(Token = "0x40017D5")]
		Button1Down,
		[Token(Token = "0x40017D6")]
		Button2,
		[Token(Token = "0x40017D7")]
		Button2Down,
		[Token(Token = "0x40017D8")]
		Trigger,
		[Token(Token = "0x40017D9")]
		TriggerDown,
		[Token(Token = "0x40017DA")]
		Grip,
		[Token(Token = "0x40017DB")]
		GripDown
	}
	[Token(Token = "0x200039F")]
	public enum InputAxis
	{
		[Token(Token = "0x40017DD")]
		None,
		[Token(Token = "0x40017DE")]
		LeftThumbStickAxis,
		[Token(Token = "0x40017DF")]
		LeftTouchPadAxis,
		[Token(Token = "0x40017E0")]
		RightThumbStickAxis,
		[Token(Token = "0x40017E1")]
		RightTouchPadAxis
	}
	[Token(Token = "0x20003A0")]
	public enum ControllerType
	{
		[Token(Token = "0x40017E3")]
		None,
		[Token(Token = "0x40017E4")]
		Unknown,
		[Token(Token = "0x40017E5")]
		OculusTouch,
		[Token(Token = "0x40017E6")]
		Wand,
		[Token(Token = "0x40017E7")]
		Knuckles
	}
	[Token(Token = "0x20003A1")]
	public enum HandControl
	{
		[Token(Token = "0x40017E9")]
		LeftGrip,
		[Token(Token = "0x40017EA")]
		RightGrip,
		[Token(Token = "0x40017EB")]
		LeftTrigger,
		[Token(Token = "0x40017EC")]
		RightTrigger,
		[Token(Token = "0x40017ED")]
		None
	}
	[Token(Token = "0x20003A2")]
	public enum GrabButton
	{
		[Token(Token = "0x40017EF")]
		Grip,
		[Token(Token = "0x40017F0")]
		Trigger,
		[Token(Token = "0x40017F1")]
		Inherit
	}
	[Token(Token = "0x20003A3")]
	public enum HoldType
	{
		[Token(Token = "0x40017F3")]
		HoldDown,
		[Token(Token = "0x40017F4")]
		Toggle,
		[Token(Token = "0x40017F5")]
		Inherit
	}
	[Token(Token = "0x20003A4")]
	public enum XRInputSource
	{
		[Token(Token = "0x40017F7")]
		XRInput,
		[Token(Token = "0x40017F8")]
		OVRInput,
		[Token(Token = "0x40017F9")]
		SteamVR,
		[Token(Token = "0x40017FA")]
		Pico,
		[Token(Token = "0x40017FB")]
		UnityInput
	}
	[Token(Token = "0x20003A5")]
	public enum SDKProvider
	{
		[Token(Token = "0x40017FD")]
		Unknown,
		[Token(Token = "0x40017FE")]
		OculusSDK,
		[Token(Token = "0x40017FF")]
		OpenVR
	}
	[Token(Token = "0x20003A6")]
	public class InputBridge : MonoBehaviour
	{
		[Token(Token = "0x20003A7")]
		public delegate void InputsUpdatedAction();

		[Token(Token = "0x20003A8")]
		public delegate void ControllerFoundAction();

		[Token(Token = "0x20003A9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x797D84", Offset = "0x797D84")]
		private sealed class <changeOriginModeRoutine>d__171 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400185F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001860")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001861")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public InputBridge <>4__this;

			[Token(Token = "0x4001862")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrackingOriginModeFlags trackingOrigin;

			[Token(Token = "0x170002FC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60015CD")]
				[Address(RVA = "0xB0CF38", Offset = "0xB0CF38", VA = "0xB0CF38", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002FD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60015CF")]
				[Address(RVA = "0xB0CF80", Offset = "0xB0CF80", VA = "0xB0CF80", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60015CA")]
			[Address(RVA = "0xB0CCA8", Offset = "0xB0CCA8", VA = "0xB0CCA8")]
			[DebuggerHidden]
			public <changeOriginModeRoutine>d__171(int <>1__state)
			{
			}

			[Token(Token = "0x60015CB")]
			[Address(RVA = "0xB0CCD4", Offset = "0xB0CCD4", VA = "0xB0CCD4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60015CC")]
			[Address(RVA = "0xB0CCD8", Offset = "0xB0CCD8", VA = "0xB0CCD8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60015CE")]
			[Address(RVA = "0xB0CF40", Offset = "0xB0CF40", VA = "0xB0CF40", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003AA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x797D94", Offset = "0x797D94")]
		private sealed class <Vibrate>d__173 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001863")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001864")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001865")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ControllerHand hand;

			[Token(Token = "0x4001866")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float frequency;

			[Token(Token = "0x4001867")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float amplitude;

			[Token(Token = "0x4001868")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float duration;

			[Token(Token = "0x170002FE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60015D3")]
				[Address(RVA = "0xB0CC58", Offset = "0xB0CC58", VA = "0xB0CC58", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002FF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60015D5")]
				[Address(RVA = "0xB0CCA0", Offset = "0xB0CCA0", VA = "0xB0CCA0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60015D0")]
			[Address(RVA = "0xB0CA8C", Offset = "0xB0CA8C", VA = "0xB0CA8C")]
			[DebuggerHidden]
			public <Vibrate>d__173(int <>1__state)
			{
			}

			[Token(Token = "0x60015D1")]
			[Address(RVA = "0xB0CAB8", Offset = "0xB0CAB8", VA = "0xB0CAB8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60015D2")]
			[Address(RVA = "0xB0CABC", Offset = "0xB0CABC", VA = "0xB0CABC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60015D4")]
			[Address(RVA = "0xB0CC60", Offset = "0xB0CC60", VA = "0xB0CC60", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InputBridge _instance;

		[Token(Token = "0x4001801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A352C", Offset = "0x7A352C")]
		public XRInputSource InputSource;

		[Token(Token = "0x4001802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A3578", Offset = "0x7A3578")]
		[SerializeField]
		public InputActionAsset actionSet;

		[Token(Token = "0x4001803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A35C4", Offset = "0x7A35C4")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A35C4", Offset = "0x7A35C4")]
		public TrackingOriginModeFlags TrackingOrigin;

		[Token(Token = "0x4001804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A3634", Offset = "0x7A3634")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A3634", Offset = "0x7A3634")]
		public float ThumbstickDeadzoneX;

		[Token(Token = "0x4001805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A3694", Offset = "0x7A3694")]
		public float ThumbstickDeadzoneY;

		[Token(Token = "0x4001806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A36CC", Offset = "0x7A36CC")]
		public float LeftGrip;

		[Token(Token = "0x4001807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool LeftGripDown;

		[Token(Token = "0x4001808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float RightGrip;

		[Token(Token = "0x4001809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool RightGripDown;

		[Token(Token = "0x400180A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A3704", Offset = "0x7A3704")]
		public float LeftTrigger;

		[Token(Token = "0x400180B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool LeftTriggerNear;

		[Token(Token = "0x400180C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool LeftTriggerUp;

		[Token(Token = "0x400180D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		public bool LeftTriggerDown;

		[Token(Token = "0x400180E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float RightTrigger;

		[Token(Token = "0x400180F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool RightTriggerUp;

		[Token(Token = "0x4001810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool RightTriggerDown;

		[Token(Token = "0x4001811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		public bool RightTriggerNear;

		[Token(Token = "0x4001812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
		public bool LeftThumbNear;

		[Token(Token = "0x4001813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool RightThumbNear;

		[Token(Token = "0x4001814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A373C", Offset = "0x7A373C")]
		public bool LeftThumbstickDown;

		[Token(Token = "0x4001815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
		public bool LeftThumbstickUp;

		[Token(Token = "0x4001816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x57")]
		public bool RightThumbstickDown;

		[Token(Token = "0x4001817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool RightThumbstickUp;

		[Token(Token = "0x4001818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		public bool LeftThumbstick;

		[Token(Token = "0x4001819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		public bool RightThumbstick;

		[Token(Token = "0x400181A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A3774", Offset = "0x7A3774")]
		public bool AButton;

		[Token(Token = "0x400181B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A37AC", Offset = "0x7A37AC")]
		public bool AButtonDown;

		[Token(Token = "0x400181C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
		public bool AButtonUp;

		[Token(Token = "0x400181D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
		public bool BButton;

		[Token(Token = "0x400181E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5F")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A37E4", Offset = "0x7A37E4")]
		public bool BButtonDown;

		[Token(Token = "0x400181F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool BButtonUp;

		[Token(Token = "0x4001820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		public bool XButton;

		[Token(Token = "0x4001821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A381C", Offset = "0x7A381C")]
		public bool XButtonDown;

		[Token(Token = "0x4001822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		public bool XButtonUp;

		[Token(Token = "0x4001823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public bool YButton;

		[Token(Token = "0x4001824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
		public bool YButtonDown;

		[Token(Token = "0x4001825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
		public bool YButtonUp;

		[Token(Token = "0x4001826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x67")]
		public bool StartButton;

		[Token(Token = "0x4001827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool StartButtonDown;

		[Token(Token = "0x4001828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		public bool BackButton;

		[Token(Token = "0x4001829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		public bool BackButtonDown;

		[Token(Token = "0x400182A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A3854", Offset = "0x7A3854")]
		public Vector2 LeftThumbstickAxis;

		[Token(Token = "0x400182B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public Vector2 RightThumbstickAxis;

		[Token(Token = "0x400182C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public Vector2 LeftTouchPadAxis;

		[Token(Token = "0x400182D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public Vector2 RightTouchPadAxis;

		[Token(Token = "0x400182E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float _downThreshold;

		[Token(Token = "0x400182F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool SteamVRSupport;

		[Token(Token = "0x4001830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A388C", Offset = "0x7A388C")]
		public ControllerType ConnectedControllerType;

		[Token(Token = "0x4001831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A38C4", Offset = "0x7A38C4")]
		public bool HMDActive;

		[Token(Token = "0x4001832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A38FC", Offset = "0x7A38FC")]
		private SDKProvider <LoadedSDK>k__BackingField;

		[Token(Token = "0x4001833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A390C", Offset = "0x7A390C")]
		private bool <IsOculusDevice>k__BackingField;

		[Token(Token = "0x4001834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A391C", Offset = "0x7A391C")]
		private bool <IsOculusQuest>k__BackingField;

		[Token(Token = "0x4001835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A392C", Offset = "0x7A392C")]
		private bool <IsHTCDevice>k__BackingField;

		[Token(Token = "0x4001836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A393C", Offset = "0x7A393C")]
		private bool <IsPicoDevice>k__BackingField;

		[Token(Token = "0x4001837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A394C", Offset = "0x7A394C")]
		private bool <IsValveIndexController>k__BackingField;

		[Token(Token = "0x4001838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA5")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A395C", Offset = "0x7A395C")]
		public bool SupportsBothTouchPadAndJoystick;

		[Token(Token = "0x4001839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA6")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A3994", Offset = "0x7A3994")]
		public bool SupportsIndexTouch;

		[Token(Token = "0x400183A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA7")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A39CC", Offset = "0x7A39CC")]
		public bool SupportsThumbTouch;

		[Token(Token = "0x400183B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<UnityEngine.XR.InputDevice> devices;

		[Token(Token = "0x400183E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private InputAction leftGrip;

		[Token(Token = "0x400183F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private InputAction leftTrigger;

		[Token(Token = "0x4001840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private InputAction leftTriggerNear;

		[Token(Token = "0x4001841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private InputAction rightGrip;

		[Token(Token = "0x4001842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private InputAction rightTrigger;

		[Token(Token = "0x4001843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private InputAction rightTriggerNear;

		[Token(Token = "0x4001844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private InputAction leftThumbstick;

		[Token(Token = "0x4001845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private InputAction leftThumbstickDown;

		[Token(Token = "0x4001846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private InputAction leftThumbNear;

		[Token(Token = "0x4001847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private InputAction leftTouchpad;

		[Token(Token = "0x4001848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private InputAction leftTouchpadDown;

		[Token(Token = "0x4001849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private InputAction rightThumbstick;

		[Token(Token = "0x400184A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private InputAction rightThumbstickDown;

		[Token(Token = "0x400184B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private InputAction rightThumbNear;

		[Token(Token = "0x400184C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private InputAction rightTouchpad;

		[Token(Token = "0x400184D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private InputAction rightTouchpadDown;

		[Token(Token = "0x400184E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private InputAction aButton;

		[Token(Token = "0x400184F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private InputAction bButton;

		[Token(Token = "0x4001850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private InputAction xButton;

		[Token(Token = "0x4001851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private InputAction yButton;

		[Token(Token = "0x4001852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private InputAction startButton;

		[Token(Token = "0x4001853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private InputAction backButton;

		[Token(Token = "0x4001854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[HideInInspector]
		public bool ShowInputDebugger;

		[Token(Token = "0x4001855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private UnityEngine.XR.InputDevice primaryLeftController;

		[Token(Token = "0x4001856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private UnityEngine.XR.InputDevice primaryRightController;

		[Token(Token = "0x4001857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private InputFeatureUsage<Vector2> thumbstickAxis;

		[Token(Token = "0x4001858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private InputFeatureUsage<Vector2> thumbstickAxisSecondary;

		[Token(Token = "0x4001859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private InputFeatureUsage<bool> thumbstickAxisClick;

		[Token(Token = "0x400185A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private Vector3 localPositionHMD;

		[Token(Token = "0x400185B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		private Quaternion localRotationRot;

		[Token(Token = "0x400185C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
		private Vector3 localPositionCtrler;

		[Token(Token = "0x400185D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private Quaternion localRotationRot2;

		[Token(Token = "0x400185E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private bool setTrackingOrigin;

		[Token(Token = "0x170002F4")]
		public static InputBridge Instance
		{
			[Token(Token = "0x600157B")]
			[Address(RVA = "0xF56F1C", Offset = "0xF56F1C", VA = "0xF56F1C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F5")]
		public float DownThreshold
		{
			[Token(Token = "0x600157C")]
			[Address(RVA = "0xF57110", Offset = "0xF57110", VA = "0xF57110")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002F6")]
		public SDKProvider LoadedSDK
		{
			[Token(Token = "0x600157D")]
			[Address(RVA = "0xF57118", Offset = "0xF57118", VA = "0xF57118")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AC1F8", Offset = "0x7AC1F8")]
			get
			{
				return default(SDKProvider);
			}
			[Token(Token = "0x600157E")]
			[Address(RVA = "0xF57120", Offset = "0xF57120", VA = "0xF57120")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AC208", Offset = "0x7AC208")]
			private set
			{
			}
		}

		[Token(Token = "0x170002F7")]
		public bool IsOculusDevice
		{
			[Token(Token = "0x600157F")]
			[Address(RVA = "0xF57128", Offset = "0xF57128", VA = "0xF57128")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AC218", Offset = "0x7AC218")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001580")]
			[Address(RVA = "0xF57130", Offset = "0xF57130", VA = "0xF57130")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AC228", Offset = "0x7AC228")]
			private set
			{
			}
		}

		[Token(Token = "0x170002F8")]
		public bool IsOculusQuest
		{
			[Token(Token = "0x6001581")]
			[Address(RVA = "0xF5713C", Offset = "0xF5713C", VA = "0xF5713C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AC238", Offset = "0x7AC238")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001582")]
			[Address(RVA = "0xF57144", Offset = "0xF57144", VA = "0xF57144")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AC248", Offset = "0x7AC248")]
			private set
			{
			}
		}

		[Token(Token = "0x170002F9")]
		public bool IsHTCDevice
		{
			[Token(Token = "0x6001583")]
			[Address(RVA = "0xF57150", Offset = "0xF57150", VA = "0xF57150")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AC258", Offset = "0x7AC258")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001584")]
			[Address(RVA = "0xF57158", Offset = "0xF57158", VA = "0xF57158")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AC268", Offset = "0x7AC268")]
			private set
			{
			}
		}

		[Token(Token = "0x170002FA")]
		public bool IsPicoDevice
		{
			[Token(Token = "0x6001585")]
			[Address(RVA = "0xF57164", Offset = "0xF57164", VA = "0xF57164")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AC278", Offset = "0x7AC278")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001586")]
			[Address(RVA = "0xF5716C", Offset = "0xF5716C", VA = "0xF5716C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AC288", Offset = "0x7AC288")]
			private set
			{
			}
		}

		[Token(Token = "0x170002FB")]
		public bool IsValveIndexController
		{
			[Token(Token = "0x6001587")]
			[Address(RVA = "0xF57178", Offset = "0xF57178", VA = "0xF57178")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AC298", Offset = "0x7AC298")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001588")]
			[Address(RVA = "0xF57180", Offset = "0xF57180", VA = "0xF57180")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AC2A8", Offset = "0x7AC2A8")]
			private set
			{
			}
		}

		[Token(Token = "0x14000045")]
		public static event InputsUpdatedAction OnInputsUpdated
		{
			[Token(Token = "0x6001589")]
			[Address(RVA = "0xF5718C", Offset = "0xF5718C", VA = "0xF5718C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AC2B8", Offset = "0x7AC2B8")]
			add
			{
			}
			[Token(Token = "0x600158A")]
			[Address(RVA = "0xF57284", Offset = "0xF57284", VA = "0xF57284")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AC2C8", Offset = "0x7AC2C8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000046")]
		public static event ControllerFoundAction OnControllerFound
		{
			[Token(Token = "0x600158B")]
			[Address(RVA = "0xF5737C", Offset = "0xF5737C", VA = "0xF5737C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AC2D8", Offset = "0x7AC2D8")]
			add
			{
			}
			[Token(Token = "0x600158C")]
			[Address(RVA = "0xF57474", Offset = "0xF57474", VA = "0xF57474")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AC2E8", Offset = "0x7AC2E8")]
			remove
			{
			}
		}

		[Token(Token = "0x600158D")]
		[Address(RVA = "0xF5756C", Offset = "0xF5756C", VA = "0xF5756C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600158E")]
		[Address(RVA = "0xF578D4", Offset = "0xF578D4", VA = "0xF578D4")]
		private void Start()
		{
		}

		[Token(Token = "0x600158F")]
		[Address(RVA = "0xF578E8", Offset = "0xF578E8", VA = "0xF578E8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001590")]
		[Address(RVA = "0xF579F8", Offset = "0xF579F8", VA = "0xF579F8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001591")]
		[Address(RVA = "0xF57AF8", Offset = "0xF57AF8", VA = "0xF57AF8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001592")]
		[Address(RVA = "0xF57B30", Offset = "0xF57B30", VA = "0xF57B30", Slot = "4")]
		public virtual void UpdateInputs()
		{
		}

		[Token(Token = "0x6001593")]
		[Address(RVA = "0xF57C14", Offset = "0xF57C14", VA = "0xF57C14", Slot = "5")]
		public virtual void UpdateSteamInput()
		{
		}

		[Token(Token = "0x6001594")]
		[Address(RVA = "0xF57C18", Offset = "0xF57C18", VA = "0xF57C18", Slot = "6")]
		public virtual void UpdateXRInput()
		{
		}

		[Token(Token = "0x6001595")]
		[Address(RVA = "0xF58A3C", Offset = "0xF58A3C", VA = "0xF58A3C", Slot = "7")]
		public virtual void UpdateUnityInput()
		{
		}

		[Token(Token = "0x6001596")]
		[Address(RVA = "0xF58E88", Offset = "0xF58E88", VA = "0xF58E88", Slot = "8")]
		public virtual void CreateUnityInputActions()
		{
		}

		[Token(Token = "0x6001597")]
		[Address(RVA = "0xF59584", Offset = "0xF59584", VA = "0xF59584", Slot = "9")]
		public virtual void EnableActions()
		{
		}

		[Token(Token = "0x6001598")]
		[Address(RVA = "0xF599B0", Offset = "0xF599B0", VA = "0xF599B0", Slot = "10")]
		public virtual void DisableActions()
		{
		}

		[Token(Token = "0x6001599")]
		[Address(RVA = "0xF594E4", Offset = "0xF594E4", VA = "0xF594E4")]
		public InputAction CreateInputAction(string actionName, string binding, bool valueType)
		{
			return null;
		}

		[Token(Token = "0x600159A")]
		[Address(RVA = "0xF59DDC", Offset = "0xF59DDC", VA = "0xF59DDC", Slot = "11")]
		public virtual void UpdateOVRInput()
		{
		}

		[Token(Token = "0x600159B")]
		[Address(RVA = "0xF5A254", Offset = "0xF5A254", VA = "0xF5A254", Slot = "12")]
		public virtual void UpdatePicoInput()
		{
		}

		[Token(Token = "0x600159C")]
		[Address(RVA = "0xF5A258", Offset = "0xF5A258", VA = "0xF5A258", Slot = "13")]
		public virtual void UpdateDeviceActive()
		{
		}

		[Token(Token = "0x600159D")]
		[Address(RVA = "0xF58948", Offset = "0xF58948", VA = "0xF58948")]
		private float correctValue(float inputValue)
		{
			return default(float);
		}

		[Token(Token = "0x600159E")]
		[Address(RVA = "0xF5A3EC", Offset = "0xF5A3EC", VA = "0xF5A3EC")]
		public bool GetControllerBindingValue(ControllerBinding val)
		{
			return default(bool);
		}

		[Token(Token = "0x600159F")]
		[Address(RVA = "0xF5A530", Offset = "0xF5A530", VA = "0xF5A530")]
		public bool GetGrabbedControllerBinding(GrabbedControllerBinding val, ControllerHand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x60015A0")]
		[Address(RVA = "0xF5A640", Offset = "0xF5A640", VA = "0xF5A640")]
		public Vector2 GetInputAxisValue(InputAxis val)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60015A1")]
		[Address(RVA = "0xF588E8", Offset = "0xF588E8", VA = "0xF588E8")]
		private Vector2 ApplyDeadZones(Vector2 pos, float deadZoneX, float deadZoneY)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60015A2")]
		[Address(RVA = "0xF5A698", Offset = "0xF5A698", VA = "0xF5A698")]
		private void onDeviceChanged(UnityEngine.XR.InputDevice inputDevice)
		{
		}

		[Token(Token = "0x60015A3")]
		[Address(RVA = "0xF5771C", Offset = "0xF5771C", VA = "0xF5771C")]
		private void setDeviceProperties()
		{
		}

		[Token(Token = "0x60015A4")]
		[Address(RVA = "0xF5A6CC", Offset = "0xF5A6CC", VA = "0xF5A6CC", Slot = "14")]
		public virtual bool GetSupportsIndexTouch()
		{
			return default(bool);
		}

		[Token(Token = "0x60015A5")]
		[Address(RVA = "0xF5A6D4", Offset = "0xF5A6D4", VA = "0xF5A6D4", Slot = "15")]
		public virtual SDKProvider GetLoadedSDK()
		{
			return default(SDKProvider);
		}

		[Token(Token = "0x60015A6")]
		[Address(RVA = "0xF5A788", Offset = "0xF5A788", VA = "0xF5A788", Slot = "16")]
		public virtual bool GetSupportsThumbTouch()
		{
			return default(bool);
		}

		[Token(Token = "0x60015A7")]
		[Address(RVA = "0xF5A7A8", Offset = "0xF5A7A8", VA = "0xF5A7A8", Slot = "17")]
		public virtual bool GetIsOculusDevice()
		{
			return default(bool);
		}

		[Token(Token = "0x60015A8")]
		[Address(RVA = "0xF5A868", Offset = "0xF5A868", VA = "0xF5A868", Slot = "18")]
		public virtual bool GetIsOculusQuest()
		{
			return default(bool);
		}

		[Token(Token = "0x60015A9")]
		[Address(RVA = "0xF5A9A0", Offset = "0xF5A9A0", VA = "0xF5A9A0", Slot = "19")]
		public virtual bool GetIsHTCDevice()
		{
			return default(bool);
		}

		[Token(Token = "0x60015AA")]
		[Address(RVA = "0xF5AA34", Offset = "0xF5AA34", VA = "0xF5AA34", Slot = "20")]
		public virtual bool GetIsPicoDevice()
		{
			return default(bool);
		}

		[Token(Token = "0x60015AB")]
		[Address(RVA = "0xF5A318", Offset = "0xF5A318", VA = "0xF5A318")]
		public UnityEngine.XR.InputDevice GetHMD()
		{
			return default(UnityEngine.XR.InputDevice);
		}

		[Token(Token = "0x60015AC")]
		[Address(RVA = "0xF5AAAC", Offset = "0xF5AAAC", VA = "0xF5AAAC")]
		public string GetHMDName()
		{
			return null;
		}

		[Token(Token = "0x60015AD")]
		[Address(RVA = "0xF5AAD8", Offset = "0xF5AAD8", VA = "0xF5AAD8")]
		public Vector3 GetHMDLocalPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60015AE")]
		[Address(RVA = "0xF5AB70", Offset = "0xF5AB70", VA = "0xF5AB70")]
		public Quaternion GetHMDLocalRotation()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60015AF")]
		[Address(RVA = "0xF586D0", Offset = "0xF586D0", VA = "0xF586D0")]
		public UnityEngine.XR.InputDevice GetLeftController()
		{
			return default(UnityEngine.XR.InputDevice);
		}

		[Token(Token = "0x60015B0")]
		[Address(RVA = "0xF587A4", Offset = "0xF587A4", VA = "0xF587A4")]
		public UnityEngine.XR.InputDevice GetRightController()
		{
			return default(UnityEngine.XR.InputDevice);
		}

		[Token(Token = "0x60015B1")]
		[Address(RVA = "0xF5AC0C", Offset = "0xF5AC0C", VA = "0xF5AC0C")]
		public Vector3 GetControllerLocalPosition(ControllerHand handSide)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60015B2")]
		[Address(RVA = "0xF5ACDC", Offset = "0xF5ACDC", VA = "0xF5ACDC")]
		public Quaternion GetControllerLocalRotation(ControllerHand handSide)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60015B3")]
		[Address(RVA = "0xF5AD9C", Offset = "0xF5AD9C", VA = "0xF5AD9C", Slot = "21")]
		public virtual ControllerType GetControllerType()
		{
			return default(ControllerType);
		}

		[Token(Token = "0x60015B4")]
		[Address(RVA = "0xF5ADD0", Offset = "0xF5ADD0", VA = "0xF5ADD0")]
		public Vector3 GetControllerVelocity(ControllerHand hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60015B5")]
		[Address(RVA = "0xF5AEC4", Offset = "0xF5AEC4", VA = "0xF5AEC4")]
		public Vector3 GetControllerAngularVelocity(ControllerHand hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60015B6")]
		[Address(RVA = "0xF5AF78", Offset = "0xF5AF78", VA = "0xF5AF78", Slot = "22")]
		public virtual string GetControllerName()
		{
			return null;
		}

		[Token(Token = "0x60015B7")]
		[Address(RVA = "0xF5B0C4", Offset = "0xF5B0C4", VA = "0xF5B0C4", Slot = "23")]
		public virtual bool GetIsValveIndexController()
		{
			return default(bool);
		}

		[Token(Token = "0x60015B8")]
		[Address(RVA = "0xF58908", Offset = "0xF58908", VA = "0xF58908")]
		private float getFeatureUsage(UnityEngine.XR.InputDevice device, InputFeatureUsage<float> usage, bool clamp = true)
		{
			return default(float);
		}

		[Token(Token = "0x60015B9")]
		[Address(RVA = "0xF58878", Offset = "0xF58878", VA = "0xF58878")]
		private bool getFeatureUsage(UnityEngine.XR.InputDevice device, InputFeatureUsage<bool> usage)
		{
			return default(bool);
		}

		[Token(Token = "0x60015BA")]
		[Address(RVA = "0xF588B0", Offset = "0xF588B0", VA = "0xF588B0")]
		private Vector2 getFeatureUsage(UnityEngine.XR.InputDevice device, InputFeatureUsage<Vector2> usage)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60015BB")]
		[Address(RVA = "0xF5AE84", Offset = "0xF5AE84", VA = "0xF5AE84")]
		private Vector3 getFeatureUsage(UnityEngine.XR.InputDevice device, InputFeatureUsage<Vector3> usage)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60015BC")]
		[Address(RVA = "0xF5B1C0", Offset = "0xF5B1C0", VA = "0xF5B1C0", Slot = "24")]
		public virtual void SetTrackingOriginMode(TrackingOriginModeFlags trackingOrigin)
		{
		}

		[Token(Token = "0x60015BD")]
		[Address(RVA = "0xF5B1EC", Offset = "0xF5B1EC", VA = "0xF5B1EC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7AC2F8", Offset = "0x7AC2F8")]
		private IEnumerator changeOriginModeRoutine(TrackingOriginModeFlags trackingOrigin)
		{
			return null;
		}

		[Token(Token = "0x60015BE")]
		[Address(RVA = "0xF5B274", Offset = "0xF5B274", VA = "0xF5B274")]
		public void VibrateController(float frequency, float amplitude, float duration, ControllerHand hand)
		{
		}

		[Token(Token = "0x60015BF")]
		[Address(RVA = "0xF5B4B8", Offset = "0xF5B4B8", VA = "0xF5B4B8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7AC358", Offset = "0x7AC358")]
		private IEnumerator Vibrate(float frequency, float amplitude, float duration, ControllerHand hand)
		{
			return null;
		}

		[Token(Token = "0x60015C0")]
		[Address(RVA = "0xF5B548", Offset = "0xF5B548", VA = "0xF5B548")]
		public InputBridge()
		{
		}
	}
	[Token(Token = "0x20003AB")]
	public class LocomotionManager : MonoBehaviour
	{
		[Token(Token = "0x4001869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A3A34", Offset = "0x7A3A34")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A3A34", Offset = "0x7A3A34")]
		public LocomotionType DefaultLocomotion;

		[Token(Token = "0x400186A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private LocomotionType selectedLocomotion;

		[Token(Token = "0x400186B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A3A94", Offset = "0x7A3A94")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A3A94", Offset = "0x7A3A94")]
		public bool LoadLocomotionFromPrefs;

		[Token(Token = "0x400186C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A3AF4", Offset = "0x7A3AF4")]
		public List<ControllerBinding> locomotionToggleInput;

		[Token(Token = "0x400186D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A3B2C", Offset = "0x7A3B2C")]
		public InputActionReference LocomotionToggleAction;

		[Token(Token = "0x400186E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private BNGPlayerController player;

		[Token(Token = "0x400186F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private PlayerTeleport teleport;

		[Token(Token = "0x4001870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private SmoothLocomotion smoothLocomotion;

		[Token(Token = "0x4001871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool actionToggle;

		[Token(Token = "0x17000300")]
		public LocomotionType SelectedLocomotion
		{
			[Token(Token = "0x60015D6")]
			[Address(RVA = "0x1188330", Offset = "0x1188330", VA = "0x1188330")]
			get
			{
				return default(LocomotionType);
			}
		}

		[Token(Token = "0x60015D7")]
		[Address(RVA = "0x1188338", Offset = "0x1188338", VA = "0x1188338")]
		private void Start()
		{
		}

		[Token(Token = "0x60015D8")]
		[Address(RVA = "0x1188488", Offset = "0x1188488", VA = "0x1188488")]
		private void Update()
		{
		}

		[Token(Token = "0x60015D9")]
		[Address(RVA = "0x11884C0", Offset = "0x11884C0", VA = "0x11884C0", Slot = "4")]
		public virtual void CheckControllerToggleInput()
		{
		}

		[Token(Token = "0x60015DA")]
		[Address(RVA = "0x1188634", Offset = "0x1188634", VA = "0x1188634")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60015DB")]
		[Address(RVA = "0x118875C", Offset = "0x118875C", VA = "0x118875C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60015DC")]
		[Address(RVA = "0x1188884", Offset = "0x1188884", VA = "0x1188884")]
		public void OnLocomotionToggle(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60015DD")]
		[Address(RVA = "0x1188610", Offset = "0x1188610", VA = "0x1188610")]
		public void LocomotionToggle()
		{
		}

		[Token(Token = "0x60015DE")]
		[Address(RVA = "0x1188890", Offset = "0x1188890", VA = "0x1188890")]
		public void UpdateTeleportStatus()
		{
		}

		[Token(Token = "0x60015DF")]
		[Address(RVA = "0x118840C", Offset = "0x118840C", VA = "0x118840C")]
		public void ChangeLocomotion(LocomotionType locomotionType, bool save)
		{
		}

		[Token(Token = "0x60015E0")]
		[Address(RVA = "0x11888BC", Offset = "0x11888BC", VA = "0x11888BC")]
		public void ChangeLocomotionType(LocomotionType loc)
		{
		}

		[Token(Token = "0x60015E1")]
		[Address(RVA = "0x1188A04", Offset = "0x1188A04", VA = "0x1188A04")]
		private void toggleTeleport(bool enabled)
		{
		}

		[Token(Token = "0x60015E2")]
		[Address(RVA = "0x1188A2C", Offset = "0x1188A2C", VA = "0x1188A2C")]
		private void toggleSmoothLocomotion(bool enabled)
		{
		}

		[Token(Token = "0x60015E3")]
		[Address(RVA = "0x1188ACC", Offset = "0x1188ACC", VA = "0x1188ACC")]
		public void ToggleLocomotionType()
		{
		}

		[Token(Token = "0x60015E4")]
		[Address(RVA = "0x1188AE8", Offset = "0x1188AE8", VA = "0x1188AE8")]
		public LocomotionManager()
		{
		}
	}
	[Token(Token = "0x20003AC")]
	public class PlayerClimbing : MonoBehaviour
	{
		[Token(Token = "0x4001872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A3B64", Offset = "0x7A3B64")]
		public Transform LeftControllerTransform;

		[Token(Token = "0x4001873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform RightControllerTransform;

		[Token(Token = "0x4001874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A3B9C", Offset = "0x7A3B9C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A3B9C", Offset = "0x7A3B9C")]
		public float ClimbingCapsuleHeight;

		[Token(Token = "0x4001875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A3BFC", Offset = "0x7A3BFC")]
		public float ClimbingCapsuleCenter;

		[Token(Token = "0x4001876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A3C34", Offset = "0x7A3C34")]
		public bool ApplyHapticsOnGrab;

		[Token(Token = "0x4001877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A3C6C", Offset = "0x7A3C6C")]
		public float VibrateFrequency;

		[Token(Token = "0x4001878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A3CA4", Offset = "0x7A3CA4")]
		public float VibrateAmplitude;

		[Token(Token = "0x4001879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A3CDC", Offset = "0x7A3CDC")]
		public float VibrateDuration;

		[Token(Token = "0x400187A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Grabber> climbers;

		[Token(Token = "0x400187B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool wasGrippingClimbable;

		[Token(Token = "0x400187C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private CharacterController characterController;

		[Token(Token = "0x400187D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SmoothLocomotion smoothLocomotion;

		[Token(Token = "0x400187E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private PlayerGravity playerGravity;

		[Token(Token = "0x400187F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A3D14", Offset = "0x7A3D14")]
		public bool GrippingClimbable;

		[Token(Token = "0x4001880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 moveDirection;

		[Token(Token = "0x4001881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 previousLeftControllerPosition;

		[Token(Token = "0x4001882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector3 previousRightControllerPosition;

		[Token(Token = "0x4001883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 controllerMoveAmount;

		[Token(Token = "0x60015E5")]
		[Address(RVA = "0xBE4BA4", Offset = "0xBE4BA4", VA = "0xBE4BA4")]
		public void Start()
		{
		}

		[Token(Token = "0x60015E6")]
		[Address(RVA = "0xBE4CAC", Offset = "0xBE4CAC", VA = "0xBE4CAC")]
		public void LateUpdate()
		{
		}

		[Token(Token = "0x60015E7")]
		[Address(RVA = "0xBE4D9C", Offset = "0xBE4D9C", VA = "0xBE4D9C", Slot = "4")]
		public virtual void AddClimber(Climbable climbable, Grabber grab)
		{
		}

		[Token(Token = "0x60015E8")]
		[Address(RVA = "0xBE5098", Offset = "0xBE5098", VA = "0xBE5098", Slot = "5")]
		public virtual void RemoveClimber(Grabber grab)
		{
		}

		[Token(Token = "0x60015E9")]
		[Address(RVA = "0xBE517C", Offset = "0xBE517C", VA = "0xBE517C", Slot = "6")]
		public virtual bool GrippingAtLeastOneClimbable()
		{
			return default(bool);
		}

		[Token(Token = "0x60015EA")]
		[Address(RVA = "0xBE52F4", Offset = "0xBE52F4", VA = "0xBE52F4", Slot = "7")]
		protected virtual void checkClimbing()
		{
		}

		[Token(Token = "0x60015EB")]
		[Address(RVA = "0xBE5700", Offset = "0xBE5700", VA = "0xBE5700")]
		private void onGrabbedClimbable()
		{
		}

		[Token(Token = "0x60015EC")]
		[Address(RVA = "0xBE57DC", Offset = "0xBE57DC", VA = "0xBE57DC")]
		private void onReleasedClimbable()
		{
		}

		[Token(Token = "0x60015ED")]
		[Address(RVA = "0xBE5908", Offset = "0xBE5908", VA = "0xBE5908")]
		public PlayerClimbing()
		{
		}
	}
	[Token(Token = "0x20003AD")]
	public class PlayerGravity : MonoBehaviour
	{
		[Token(Token = "0x4001884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A3D4C", Offset = "0x7A3D4C")]
		public bool GravityEnabled;

		[Token(Token = "0x4001885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A3D84", Offset = "0x7A3D84")]
		public Vector3 Gravity;

		[Token(Token = "0x4001886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CharacterController characterController;

		[Token(Token = "0x4001887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private SmoothLocomotion smoothLocomotion;

		[Token(Token = "0x4001888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Rigidbody playerRigidbody;

		[Token(Token = "0x4001889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float _movementY;

		[Token(Token = "0x400188A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 _initialGravityModifier;

		[Token(Token = "0x400188B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _validRigidBody;

		[Token(Token = "0x60015EE")]
		[Address(RVA = "0xBE5CE8", Offset = "0xBE5CE8", VA = "0xBE5CE8")]
		private void Start()
		{
		}

		[Token(Token = "0x60015EF")]
		[Address(RVA = "0xBE5E00", Offset = "0xBE5E00", VA = "0xBE5E00")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60015F0")]
		[Address(RVA = "0xBE5F98", Offset = "0xBE5F98", VA = "0xBE5F98")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60015F1")]
		[Address(RVA = "0xBE58BC", Offset = "0xBE58BC", VA = "0xBE58BC")]
		public void ToggleGravity(bool gravityOn)
		{
		}

		[Token(Token = "0x60015F2")]
		[Address(RVA = "0xBE601C", Offset = "0xBE601C", VA = "0xBE601C")]
		public PlayerGravity()
		{
		}
	}
	[Token(Token = "0x20003AE")]
	public class PlayerMovingPlatformSupport : MonoBehaviour
	{
		[Token(Token = "0x400188C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A3DBC", Offset = "0x7A3DBC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A3DBC", Offset = "0x7A3DBC")]
		public LayerMask GroundedLayers;

		[Token(Token = "0x400188D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		protected RaycastHit groundHit;

		[Token(Token = "0x400188E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private SmoothLocomotion smoothLocomotion;

		[Token(Token = "0x400188F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private CharacterController characterController;

		[Token(Token = "0x4001890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform _initialCharacterParent;

		[Token(Token = "0x4001891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float DistanceFromGround;

		[Token(Token = "0x4001892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public MovingPlatform CurrentPlatform;

		[Token(Token = "0x4001893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool wasOnPlatform;

		[Token(Token = "0x4001894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool requiresReparent;

		[Token(Token = "0x60015F3")]
		[Address(RVA = "0xBEDF68", Offset = "0xBEDF68", VA = "0xBEDF68")]
		private void Start()
		{
		}

		[Token(Token = "0x60015F4")]
		[Address(RVA = "0xBEE020", Offset = "0xBEE020", VA = "0xBEE020")]
		private void Update()
		{
		}

		[Token(Token = "0x60015F5")]
		[Address(RVA = "0xBEE02C", Offset = "0xBEE02C", VA = "0xBEE02C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60015F6")]
		[Address(RVA = "0xBEE038", Offset = "0xBEE038", VA = "0xBEE038", Slot = "4")]
		public virtual void CheckMovingPlatform()
		{
		}

		[Token(Token = "0x60015F7")]
		[Address(RVA = "0xBEE39C", Offset = "0xBEE39C", VA = "0xBEE39C", Slot = "5")]
		public virtual void UpdateDistanceFromGround()
		{
		}

		[Token(Token = "0x60015F8")]
		[Address(RVA = "0xBEE718", Offset = "0xBEE718", VA = "0xBEE718")]
		public PlayerMovingPlatformSupport()
		{
		}
	}
	[Token(Token = "0x20003AF")]
	public enum RotationMechanic
	{
		[Token(Token = "0x4001896")]
		Snap,
		[Token(Token = "0x4001897")]
		Smooth,
		[Token(Token = "0x4001898")]
		IRL
	}
	[Token(Token = "0x20003B0")]
	public class PlayerRotation : MonoBehaviour
	{
		[Token(Token = "0x20003B1")]
		public delegate void OnBeforeRotateAction();

		[Token(Token = "0x20003B2")]
		public delegate void OnAfterRotateAction();

		[Token(Token = "0x4001899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A3E1C", Offset = "0x7A3E1C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A3E1C", Offset = "0x7A3E1C")]
		public bool AllowInput;

		[Token(Token = "0x400189A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A3E7C", Offset = "0x7A3E7C")]
		public List<InputAxis> inputAxis;

		[Token(Token = "0x400189B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A3EB4", Offset = "0x7A3EB4")]
		public InputActionReference RotateAction;

		[Token(Token = "0x400189C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A3EEC", Offset = "0x7A3EEC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A3EEC", Offset = "0x7A3EEC")]
		public RotationMechanic RotationType;

		[Token(Token = "0x400189D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A3F4C", Offset = "0x7A3F4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A3F4C", Offset = "0x7A3F4C")]
		public float SnapRotationAmount;

		[Token(Token = "0x400189E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A3FAC", Offset = "0x7A3FAC")]
		public float SnapInputAmount;

		[Token(Token = "0x400189F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A3FE4", Offset = "0x7A3FE4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A3FE4", Offset = "0x7A3FE4")]
		public float SmoothTurnSpeed;

		[Token(Token = "0x40018A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A4044", Offset = "0x7A4044")]
		public float SmoothTurnMinInput;

		[Token(Token = "0x40018A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float recentSnapTurnTime;

		[Token(Token = "0x40018A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float totalRotation;

		[Token(Token = "0x40018A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float rotationAmount;

		[Token(Token = "0x40018A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float xAxis;

		[Token(Token = "0x40018A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float previousXInput;

		[Token(Token = "0x14000047")]
		public static event OnBeforeRotateAction OnBeforeRotate
		{
			[Token(Token = "0x60015F9")]
			[Address(RVA = "0xBEE9A8", Offset = "0xBEE9A8", VA = "0xBEE9A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AC458", Offset = "0x7AC458")]
			add
			{
			}
			[Token(Token = "0x60015FA")]
			[Address(RVA = "0xBEEA64", Offset = "0xBEEA64", VA = "0xBEEA64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AC468", Offset = "0x7AC468")]
			remove
			{
			}
		}

		[Token(Token = "0x14000048")]
		public static event OnAfterRotateAction OnAfterRotate
		{
			[Token(Token = "0x60015FB")]
			[Address(RVA = "0xBEEB20", Offset = "0xBEEB20", VA = "0xBEEB20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AC478", Offset = "0x7AC478")]
			add
			{
			}
			[Token(Token = "0x60015FC")]
			[Address(RVA = "0xBEEBE0", Offset = "0xBEEBE0", VA = "0xBEEBE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AC488", Offset = "0x7AC488")]
			remove
			{
			}
		}

		[Token(Token = "0x60015FD")]
		[Address(RVA = "0xBEECA0", Offset = "0xBEECA0", VA = "0xBEECA0")]
		private void Update()
		{
		}

		[Token(Token = "0x60015FE")]
		[Address(RVA = "0xBEED08", Offset = "0xBEED08", VA = "0xBEED08", Slot = "4")]
		public virtual float GetAxisInput()
		{
			return default(float);
		}

		[Token(Token = "0x60015FF")]
		[Address(RVA = "0xBEEEC0", Offset = "0xBEEEC0", VA = "0xBEEEC0", Slot = "5")]
		public virtual void DoSnapRotation(float xInput)
		{
		}

		[Token(Token = "0x6001600")]
		[Address(RVA = "0xBEF0A0", Offset = "0xBEF0A0", VA = "0xBEF0A0", Slot = "6")]
		public virtual bool RecentlySnapTurned()
		{
			return default(bool);
		}

		[Token(Token = "0x6001601")]
		[Address(RVA = "0xBEF0DC", Offset = "0xBEF0DC", VA = "0xBEF0DC", Slot = "7")]
		public virtual void DoSmoothRotation(float xInput)
		{
		}

		[Token(Token = "0x6001602")]
		[Address(RVA = "0xBEF1DC", Offset = "0xBEF1DC", VA = "0xBEF1DC")]
		public PlayerRotation()
		{
		}
	}
	[Token(Token = "0x20003B3")]
	public enum TeleportControls
	{
		[Token(Token = "0x40018A9")]
		ThumbstickRotate,
		[Token(Token = "0x40018AA")]
		ThumbstickDown,
		[Token(Token = "0x40018AB")]
		BButton,
		[Token(Token = "0x40018AC")]
		None
	}
	[Token(Token = "0x20003B4")]
	public class PlayerTeleport : MonoBehaviour
	{
		[Token(Token = "0x20003B5")]
		public delegate void OnBeforeTeleportFadeAction();

		[Token(Token = "0x20003B6")]
		public delegate void OnBeforeTeleportAction();

		[Token(Token = "0x20003B7")]
		public delegate void OnAfterTeleportAction();

		[Token(Token = "0x20003B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x797DA4", Offset = "0x797DA4")]
		private sealed class <doTeleport>d__79 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40018E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40018E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40018E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayerTeleport <>4__this;

			[Token(Token = "0x40018E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 playerDestination;

			[Token(Token = "0x40018E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public bool rotatePlayer;

			[Token(Token = "0x40018E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Quaternion playerRotation;

			[Token(Token = "0x17000303")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001639")]
				[Address(RVA = "0xCBED84", Offset = "0xCBED84", VA = "0xCBED84", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000304")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600163B")]
				[Address(RVA = "0xCBEDCC", Offset = "0xCBEDCC", VA = "0xCBEDCC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001636")]
			[Address(RVA = "0xCBE9A8", Offset = "0xCBE9A8", VA = "0xCBE9A8")]
			[DebuggerHidden]
			public <doTeleport>d__79(int <>1__state)
			{
			}

			[Token(Token = "0x6001637")]
			[Address(RVA = "0xCBE9D4", Offset = "0xCBE9D4", VA = "0xCBE9D4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001638")]
			[Address(RVA = "0xCBE9D8", Offset = "0xCBE9D8", VA = "0xCBE9D8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600163A")]
			[Address(RVA = "0xCBED8C", Offset = "0xCBED8C", VA = "0xCBED8C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40018AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A409C", Offset = "0x7A409C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A409C", Offset = "0x7A409C")]
		public LineRenderer TeleportLine;

		[Token(Token = "0x40018AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A40FC", Offset = "0x7A40FC")]
		public Color ValidTeleport;

		[Token(Token = "0x40018AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A4134", Offset = "0x7A4134")]
		public Color InvalidTeleport;

		[Token(Token = "0x40018B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A416C", Offset = "0x7A416C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A416C", Offset = "0x7A416C")]
		public ControllerHand HandSide;

		[Token(Token = "0x40018B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A41CC", Offset = "0x7A41CC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A41CC", Offset = "0x7A41CC")]
		public Transform TeleportBeginTransform;

		[Token(Token = "0x40018B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A422C", Offset = "0x7A422C")]
		public Transform TeleportBeginTransformAlt;

		[Token(Token = "0x40018B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A4264", Offset = "0x7A4264")]
		public Transform TeleportDestination;

		[Token(Token = "0x40018B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A429C", Offset = "0x7A429C")]
		[HideInInspector]
		public TeleportDestination DestinationObject;

		[Token(Token = "0x40018B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A42E8", Offset = "0x7A42E8")]
		public GameObject TeleportMarker;

		[Token(Token = "0x40018B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A4320", Offset = "0x7A4320")]
		public Transform DirectionIndicator;

		[Token(Token = "0x40018B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A4358", Offset = "0x7A4358")]
		public float MaxRange;

		[Token(Token = "0x40018B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A4390", Offset = "0x7A4390")]
		public int SegmentCount;

		[Token(Token = "0x40018B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A43C8", Offset = "0x7A43C8")]
		public float SimulationVelocity;

		[Token(Token = "0x40018BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A4400", Offset = "0x7A4400")]
		public float SegmentScale;

		[Token(Token = "0x40018BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A4438", Offset = "0x7A4438")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A4438", Offset = "0x7A4438")]
		public LayerMask CollisionLayers;

		[Token(Token = "0x40018BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A4498", Offset = "0x7A4498")]
		public LayerMask ValidLayers;

		[Token(Token = "0x40018BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A44D0", Offset = "0x7A44D0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A44D0", Offset = "0x7A44D0")]
		public TeleportControls ControlType;

		[Token(Token = "0x40018BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A4530", Offset = "0x7A4530")]
		public InputActionReference InitiateTeleportAction;

		[Token(Token = "0x40018BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A4568", Offset = "0x7A4568")]
		public bool AllowTeleportRotation;

		[Token(Token = "0x40018C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		private bool _reachThumbThreshold;

		[Token(Token = "0x40018C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A45A0", Offset = "0x7A45A0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A45A0", Offset = "0x7A45A0")]
		public float MaxSlope;

		[Token(Token = "0x40018C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A4600", Offset = "0x7A4600")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A4600", Offset = "0x7A4600")]
		public float TeleportYOffset;

		[Token(Token = "0x40018C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A4660", Offset = "0x7A4660")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A4660", Offset = "0x7A4660")]
		public bool FadeScreenOnTeleport;

		[Token(Token = "0x40018C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A46C0", Offset = "0x7A46C0")]
		public float TeleportFadeSpeed;

		[Token(Token = "0x40018C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A46F8", Offset = "0x7A46F8")]
		public float TeleportDelay;

		[Token(Token = "0x40018C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private CharacterController controller;

		[Token(Token = "0x40018C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private BNGPlayerController playerController;

		[Token(Token = "0x40018C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private InputBridge input;

		[Token(Token = "0x40018C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Transform cameraRig;

		[Token(Token = "0x40018CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private ScreenFader fader;

		[Token(Token = "0x40018CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool aimingTeleport;

		[Token(Token = "0x40018CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool validTeleport;

		[Token(Token = "0x40018CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE2")]
		private bool teleportationEnabled;

		[Token(Token = "0x40018CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private int _invalidFrames;

		[Token(Token = "0x40018CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float _initialLineWidth;

		[Token(Token = "0x40018D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public Vector3 currentRotation;

		[Token(Token = "0x40018D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private bool setVariables;

		[Token(Token = "0x40018D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Collider _hitObject;

		[Token(Token = "0x40018D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Vector3 _hitVector;

		[Token(Token = "0x40018D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private float _hitAngle;

		[Token(Token = "0x40018D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private RaycastHit hit;

		[Token(Token = "0x40018D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private Vector3[] segments;

		[Token(Token = "0x40018DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private Vector3 segVelocity;

		[Token(Token = "0x40018DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		private float segTime;

		[Token(Token = "0x40018DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private int segCount;

		[Token(Token = "0x40018DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private bool isDestination;

		[Token(Token = "0x40018DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x165")]
		public bool ForceStraightArrow;

		[Token(Token = "0x40018DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private Vector2 teleportAxis;

		[Token(Token = "0x17000301")]
		private Transform teleportTransform
		{
			[Token(Token = "0x600160B")]
			[Address(RVA = "0xC82608", Offset = "0xC82608", VA = "0xC82608")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000302")]
		private Vector2 handedThumbstickAxis
		{
			[Token(Token = "0x600160C")]
			[Address(RVA = "0xC82624", Offset = "0xC82624", VA = "0xC82624")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x14000049")]
		public static event OnBeforeTeleportFadeAction OnBeforeTeleportFade
		{
			[Token(Token = "0x600160D")]
			[Address(RVA = "0xC82664", Offset = "0xC82664", VA = "0xC82664")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AC498", Offset = "0x7AC498")]
			add
			{
			}
			[Token(Token = "0x600160E")]
			[Address(RVA = "0xC82720", Offset = "0xC82720", VA = "0xC82720")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AC4A8", Offset = "0x7AC4A8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400004A")]
		public static event OnBeforeTeleportAction OnBeforeTeleport
		{
			[Token(Token = "0x600160F")]
			[Address(RVA = "0xC827DC", Offset = "0xC827DC", VA = "0xC827DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AC4B8", Offset = "0x7AC4B8")]
			add
			{
			}
			[Token(Token = "0x6001610")]
			[Address(RVA = "0xC8289C", Offset = "0xC8289C", VA = "0xC8289C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AC4C8", Offset = "0x7AC4C8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400004B")]
		public static event OnAfterTeleportAction OnAfterTeleport
		{
			[Token(Token = "0x6001611")]
			[Address(RVA = "0xC8295C", Offset = "0xC8295C", VA = "0xC8295C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AC4D8", Offset = "0x7AC4D8")]
			add
			{
			}
			[Token(Token = "0x6001612")]
			[Address(RVA = "0xC82A1C", Offset = "0xC82A1C", VA = "0xC82A1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AC4E8", Offset = "0x7AC4E8")]
			remove
			{
			}
		}

		[Token(Token = "0x6001613")]
		[Address(RVA = "0xC82ADC", Offset = "0xC82ADC", VA = "0xC82ADC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001614")]
		[Address(RVA = "0xC82AE0", Offset = "0xC82AE0", VA = "0xC82AE0")]
		private void setupVariables()
		{
		}

		[Token(Token = "0x6001615")]
		[Address(RVA = "0xC82DEC", Offset = "0xC82DEC", VA = "0xC82DEC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001616")]
		[Address(RVA = "0xC82E88", Offset = "0xC82E88", VA = "0xC82E88")]
		public void DoCheckTeleport()
		{
		}

		[Token(Token = "0x6001617")]
		[Address(RVA = "0xC82F7C", Offset = "0xC82F7C", VA = "0xC82F7C")]
		public void TryOrHideTeleport()
		{
		}

		[Token(Token = "0x6001618")]
		[Address(RVA = "0xC82F98", Offset = "0xC82F98", VA = "0xC82F98")]
		public void EnableTeleportation()
		{
		}

		[Token(Token = "0x6001619")]
		[Address(RVA = "0xC82FA4", Offset = "0xC82FA4", VA = "0xC82FA4")]
		public void DisableTeleportation()
		{
		}

		[Token(Token = "0x600161A")]
		[Address(RVA = "0xC82FB8", Offset = "0xC82FB8", VA = "0xC82FB8", Slot = "4")]
		protected virtual void calculateParabola()
		{
		}

		[Token(Token = "0x600161B")]
		[Address(RVA = "0xC8385C", Offset = "0xC8385C", VA = "0xC8385C", Slot = "5")]
		protected virtual bool teleportClear()
		{
			return default(bool);
		}

		[Token(Token = "0x600161C")]
		[Address(RVA = "0xC83ADC", Offset = "0xC83ADC", VA = "0xC83ADC", Slot = "6")]
		protected virtual void hideTeleport()
		{
		}

		[Token(Token = "0x600161D")]
		[Address(RVA = "0xC83B40", Offset = "0xC83B40", VA = "0xC83B40", Slot = "7")]
		protected virtual void updateTeleport()
		{
		}

		[Token(Token = "0x600161E")]
		[Address(RVA = "0xC83B9C", Offset = "0xC83B9C", VA = "0xC83B9C", Slot = "8")]
		protected virtual void rotateMarker()
		{
		}

		[Token(Token = "0x600161F")]
		[Address(RVA = "0xC83E3C", Offset = "0xC83E3C", VA = "0xC83E3C", Slot = "9")]
		protected virtual void tryTeleport()
		{
		}

		[Token(Token = "0x6001620")]
		[Address(RVA = "0xC84104", Offset = "0xC84104", VA = "0xC84104", Slot = "10")]
		public virtual void BeforeTeleportFade()
		{
		}

		[Token(Token = "0x6001621")]
		[Address(RVA = "0xC841E0", Offset = "0xC841E0", VA = "0xC841E0", Slot = "11")]
		public virtual void BeforeTeleport()
		{
		}

		[Token(Token = "0x6001622")]
		[Address(RVA = "0xC842BC", Offset = "0xC842BC", VA = "0xC842BC", Slot = "12")]
		public virtual void AfterTeleport()
		{
		}

		[Token(Token = "0x6001623")]
		[Address(RVA = "0xC8402C", Offset = "0xC8402C", VA = "0xC8402C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7AC4F8", Offset = "0x7AC4F8")]
		private IEnumerator doTeleport(Vector3 playerDestination, Quaternion playerRotation, bool rotatePlayer)
		{
			return null;
		}

		[Token(Token = "0x6001624")]
		[Address(RVA = "0xC843D4", Offset = "0xC843D4", VA = "0xC843D4")]
		public void TeleportPlayer(Vector3 destination, Quaternion rotation)
		{
		}

		[Token(Token = "0x6001625")]
		[Address(RVA = "0xC84404", Offset = "0xC84404", VA = "0xC84404")]
		public void TeleportPlayerToTransform(Transform destination)
		{
		}

		[Token(Token = "0x6001626")]
		[Address(RVA = "0xC844A4", Offset = "0xC844A4", VA = "0xC844A4", Slot = "13")]
		public virtual bool KeyDownForTeleport()
		{
			return default(bool);
		}

		[Token(Token = "0x6001627")]
		[Address(RVA = "0xC847C8", Offset = "0xC847C8", VA = "0xC847C8", Slot = "14")]
		public virtual bool KeyUpFromTeleport()
		{
			return default(bool);
		}

		[Token(Token = "0x6001628")]
		[Address(RVA = "0xC848CC", Offset = "0xC848CC", VA = "0xC848CC")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001629")]
		[Address(RVA = "0xC849E0", Offset = "0xC849E0", VA = "0xC849E0")]
		public PlayerTeleport()
		{
		}
	}
	[Token(Token = "0x20003B9")]
	public class PointerEvents : MonoBehaviour, IPointerClickHandler, IEventSystemHandler, IPointerEnterHandler, IPointerExitHandler, IPointerDownHandler, IPointerUpHandler
	{
		[Token(Token = "0x40018E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A4760", Offset = "0x7A4760")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A4760", Offset = "0x7A4760")]
		public float MaxDistance;

		[Token(Token = "0x40018E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A47C0", Offset = "0x7A47C0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A47C0", Offset = "0x7A47C0")]
		public bool Enabled;

		[Token(Token = "0x40018E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A4820", Offset = "0x7A4820")]
		public PointerEventDataEvent OnPointerClickEvent;

		[Token(Token = "0x40018E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PointerEventDataEvent OnPointerEnterEvent;

		[Token(Token = "0x40018EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PointerEventDataEvent OnPointerExitEvent;

		[Token(Token = "0x40018EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public PointerEventDataEvent OnPointerDownEvent;

		[Token(Token = "0x40018EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public PointerEventDataEvent OnPointerUpEvent;

		[Token(Token = "0x600163C")]
		[Address(RVA = "0xC851BC", Offset = "0xC851BC", VA = "0xC851BC", Slot = "9")]
		public virtual void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600163D")]
		[Address(RVA = "0xC85248", Offset = "0xC85248", VA = "0xC85248", Slot = "10")]
		public virtual void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600163E")]
		[Address(RVA = "0xC852D4", Offset = "0xC852D4", VA = "0xC852D4", Slot = "11")]
		public virtual void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600163F")]
		[Address(RVA = "0xC85344", Offset = "0xC85344", VA = "0xC85344", Slot = "12")]
		public virtual void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001640")]
		[Address(RVA = "0xC853D0", Offset = "0xC853D0", VA = "0xC853D0", Slot = "13")]
		public virtual void OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001641")]
		[Address(RVA = "0xC85440", Offset = "0xC85440", VA = "0xC85440", Slot = "14")]
		public virtual bool DistanceExceeded(PointerEventData eventData)
		{
			return default(bool);
		}

		[Token(Token = "0x6001642")]
		[Address(RVA = "0xC85460", Offset = "0xC85460", VA = "0xC85460")]
		public PointerEvents()
		{
		}
	}
	[Token(Token = "0x20003BA")]
	public enum RemoteGrabType
	{
		[Token(Token = "0x40018EE")]
		Trigger,
		[Token(Token = "0x40018EF")]
		Raycast,
		[Token(Token = "0x40018F0")]
		Spherecast
	}
	[Token(Token = "0x20003BB")]
	public class RemoteGrabber : MonoBehaviour
	{
		[Token(Token = "0x40018F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RemoteGrabType PhysicsCheckType;

		[Token(Token = "0x40018F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float RaycastLength;

		[Token(Token = "0x40018F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float SphereCastLength;

		[Token(Token = "0x40018F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float SphereCastRadius;

		[Token(Token = "0x40018F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LayerMask RemoteGrabLayers;

		[Token(Token = "0x40018F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GrabbablesInTrigger ParentGrabber;

		[Token(Token = "0x40018F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Collider _lastColliderHit;

		[Token(Token = "0x40018F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool ShowGizmos;

		[Token(Token = "0x6001643")]
		[Address(RVA = "0xC89764", Offset = "0xC89764", VA = "0xC89764")]
		private void Start()
		{
		}

		[Token(Token = "0x6001644")]
		[Address(RVA = "0xC89858", Offset = "0xC89858", VA = "0xC89858", Slot = "4")]
		public virtual void Update()
		{
		}

		[Token(Token = "0x6001645")]
		[Address(RVA = "0xC89A5C", Offset = "0xC89A5C", VA = "0xC89A5C")]
		private void ObjectHit(Collider colliderHit)
		{
		}

		[Token(Token = "0x6001646")]
		[Address(RVA = "0xC89BF8", Offset = "0xC89BF8", VA = "0xC89BF8")]
		public void RemovePreviousHitObject()
		{
		}

		[Token(Token = "0x6001647")]
		[Address(RVA = "0xC89D3C", Offset = "0xC89D3C", VA = "0xC89D3C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001648")]
		[Address(RVA = "0xC89F44", Offset = "0xC89F44", VA = "0xC89F44")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001649")]
		[Address(RVA = "0xC8A12C", Offset = "0xC8A12C", VA = "0xC8A12C")]
		public RemoteGrabber()
		{
		}
	}
	[Token(Token = "0x20003BC")]
	public class Slider : MonoBehaviour
	{
		[Token(Token = "0x40018F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float _slidePercentage;

		[Token(Token = "0x40018FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FloatEvent onSliderChange;

		[Token(Token = "0x40018FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float lastSliderPercentage;

		[Token(Token = "0x40018FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float slideRangeLow;

		[Token(Token = "0x40018FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float slideRangeHigh;

		[Token(Token = "0x40018FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float slideRange;

		[Token(Token = "0x17000305")]
		public float SlidePercentage
		{
			[Token(Token = "0x600164A")]
			[Address(RVA = "0xDBCC8C", Offset = "0xDBCC8C", VA = "0xDBCC8C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600164B")]
		[Address(RVA = "0xDBCC94", Offset = "0xDBCC94", VA = "0xDBCC94")]
		private void Start()
		{
		}

		[Token(Token = "0x600164C")]
		[Address(RVA = "0xDBCDA0", Offset = "0xDBCDA0", VA = "0xDBCDA0")]
		private void Update()
		{
		}

		[Token(Token = "0x600164D")]
		[Address(RVA = "0xDBCE2C", Offset = "0xDBCE2C", VA = "0xDBCE2C", Slot = "4")]
		public virtual void OnSliderChange(float percentage)
		{
		}

		[Token(Token = "0x600164E")]
		[Address(RVA = "0xDBCE9C", Offset = "0xDBCE9C", VA = "0xDBCE9C")]
		public Slider()
		{
		}
	}
	[Token(Token = "0x20003BD")]
	public enum MovementVector
	{
		[Token(Token = "0x4001900")]
		HMD,
		[Token(Token = "0x4001901")]
		Controller
	}
	[Token(Token = "0x20003BE")]
	public class SmoothLocomotion : MonoBehaviour
	{
		[Token(Token = "0x20003BF")]
		public delegate void OnBeforeMoveAction();

		[Token(Token = "0x20003C0")]
		public delegate void OnAfterMoveAction();

		[Token(Token = "0x4001902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlayerControllerType ControllerType;

		[Token(Token = "0x4001903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A4858", Offset = "0x7A4858")]
		public float MovementSpeed;

		[Token(Token = "0x4001904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A4890", Offset = "0x7A4890")]
		public float MovementForce;

		[Token(Token = "0x4001905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A48C8", Offset = "0x7A48C8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A48C8", Offset = "0x7A48C8")]
		public Transform ForwardDirection;

		[Token(Token = "0x4001906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A4928", Offset = "0x7A4928")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A4928", Offset = "0x7A4928")]
		public bool AllowInput;

		[Token(Token = "0x4001907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A4988", Offset = "0x7A4988")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A4988", Offset = "0x7A4988")]
		public bool UpdateMovement;

		[Token(Token = "0x4001908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A49E8", Offset = "0x7A49E8")]
		public List<InputAxis> inputAxis;

		[Token(Token = "0x4001909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A4A20", Offset = "0x7A4A20")]
		public InputActionReference MoveAction;

		[Token(Token = "0x400190A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A4A58", Offset = "0x7A4A58")]
		public bool RequireAppFocus;

		[Token(Token = "0x400190B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A4A90", Offset = "0x7A4A90")]
		public float SprintSpeed;

		[Token(Token = "0x400190C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A4AC8", Offset = "0x7A4AC8")]
		public List<ControllerBinding> SprintInput;

		[Token(Token = "0x400190D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A4B00", Offset = "0x7A4B00")]
		public InputActionReference SprintAction;

		[Token(Token = "0x400190E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A4B38", Offset = "0x7A4B38")]
		public float StrafeSpeed;

		[Token(Token = "0x400190F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float StrafeSprintSpeed;

		[Token(Token = "0x4001910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A4B70", Offset = "0x7A4B70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A4B70", Offset = "0x7A4B70")]
		public float JumpForce;

		[Token(Token = "0x4001911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A4BD0", Offset = "0x7A4BD0")]
		public List<ControllerBinding> JumpInput;

		[Token(Token = "0x4001912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A4C08", Offset = "0x7A4C08")]
		public InputActionReference JumpAction;

		[Token(Token = "0x4001913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A4C40", Offset = "0x7A4C40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A4C40", Offset = "0x7A4C40")]
		public bool AirControl;

		[Token(Token = "0x4001914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A4CA0", Offset = "0x7A4CA0")]
		public float AirControlSpeed;

		[Token(Token = "0x4001915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private BNGPlayerController playerController;

		[Token(Token = "0x4001916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private CharacterController characterController;

		[Token(Token = "0x4001917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Rigidbody playerRigid;

		[Token(Token = "0x4001918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float movementX;

		[Token(Token = "0x4001919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public float movementY;

		[Token(Token = "0x400191A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float movementZ;

		[Token(Token = "0x400191B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private Quaternion rotationAtJumpStart;

		[Token(Token = "0x400191C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float momentumXAtJumpStart;

		[Token(Token = "0x400191D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public float momentumZAtJumpStart;

		[Token(Token = "0x400191E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float _verticalSpeed;

		[Token(Token = "0x400191F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Vector3 additionalMovement;

		[Token(Token = "0x4001922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private bool isSprinting;

		[Token(Token = "0x4001923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD5")]
		private bool playerInitialized;

		[Token(Token = "0x4001924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private float lastJumpTime;

		[Token(Token = "0x4001925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private float lastMoveTime;

		[Token(Token = "0x4001926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public float Magnitude;

		[Token(Token = "0x4001927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public int GroundContacts;

		[Token(Token = "0x1400004C")]
		public static event OnBeforeMoveAction OnBeforeMove
		{
			[Token(Token = "0x600164F")]
			[Address(RVA = "0xDBD530", Offset = "0xDBD530", VA = "0xDBD530")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AC5A8", Offset = "0x7AC5A8")]
			add
			{
			}
			[Token(Token = "0x6001650")]
			[Address(RVA = "0xDBD5EC", Offset = "0xDBD5EC", VA = "0xDBD5EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AC5B8", Offset = "0x7AC5B8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400004D")]
		public static event OnAfterMoveAction OnAfterMove
		{
			[Token(Token = "0x6001651")]
			[Address(RVA = "0xDBD6A8", Offset = "0xDBD6A8", VA = "0xDBD6A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AC5C8", Offset = "0x7AC5C8")]
			add
			{
			}
			[Token(Token = "0x6001652")]
			[Address(RVA = "0xDBD768", Offset = "0xDBD768", VA = "0xDBD768")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AC5D8", Offset = "0x7AC5D8")]
			remove
			{
			}
		}

		[Token(Token = "0x6001653")]
		[Address(RVA = "0xDBD828", Offset = "0xDBD828", VA = "0xDBD828", Slot = "4")]
		public virtual void Update()
		{
		}

		[Token(Token = "0x6001654")]
		[Address(RVA = "0xDBD880", Offset = "0xDBD880", VA = "0xDBD880", Slot = "5")]
		public virtual void CheckControllerReferences()
		{
		}

		[Token(Token = "0x6001655")]
		[Address(RVA = "0xDBDA4C", Offset = "0xDBDA4C", VA = "0xDBDA4C", Slot = "6")]
		public virtual void UpdateInputs()
		{
		}

		[Token(Token = "0x6001656")]
		[Address(RVA = "0xDBDF60", Offset = "0xDBDF60", VA = "0xDBDF60", Slot = "7")]
		public virtual void DoRigidBodyJump()
		{
		}

		[Token(Token = "0x6001657")]
		[Address(RVA = "0xDBDFF8", Offset = "0xDBDFF8", VA = "0xDBDFF8", Slot = "8")]
		public virtual Vector2 GetMovementAxis()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001658")]
		[Address(RVA = "0xDBE314", Offset = "0xDBE314", VA = "0xDBE314", Slot = "9")]
		public virtual void MoveCharacter()
		{
		}

		[Token(Token = "0x6001659")]
		[Address(RVA = "0xDBE574", Offset = "0xDBE574", VA = "0xDBE574", Slot = "10")]
		public virtual void MoveRigidCharacter(Vector3 moveTo)
		{
		}

		[Token(Token = "0x600165A")]
		[Address(RVA = "0xDBE578", Offset = "0xDBE578", VA = "0xDBE578", Slot = "11")]
		public virtual void MoveRigidCharacter()
		{
		}

		[Token(Token = "0x600165B")]
		[Address(RVA = "0xDBE7CC", Offset = "0xDBE7CC", VA = "0xDBE7CC", Slot = "12")]
		public virtual void MoveCharacter(Vector3 motion)
		{
		}

		[Token(Token = "0x600165C")]
		[Address(RVA = "0xDBEA08", Offset = "0xDBEA08", VA = "0xDBEA08", Slot = "13")]
		public virtual bool CheckJump()
		{
			return default(bool);
		}

		[Token(Token = "0x600165D")]
		[Address(RVA = "0xDBEBA0", Offset = "0xDBEBA0", VA = "0xDBEBA0", Slot = "14")]
		public virtual bool CheckSprint()
		{
			return default(bool);
		}

		[Token(Token = "0x600165E")]
		[Address(RVA = "0xDBEBA8", Offset = "0xDBEBA8", VA = "0xDBEBA8", Slot = "15")]
		public virtual bool sprintButtonPressed()
		{
			return default(bool);
		}

		[Token(Token = "0x600165F")]
		[Address(RVA = "0xDBED30", Offset = "0xDBED30", VA = "0xDBED30", Slot = "16")]
		public virtual bool IsGrounded()
		{
			return default(bool);
		}

		[Token(Token = "0x6001660")]
		[Address(RVA = "0xDBEDCC", Offset = "0xDBEDCC", VA = "0xDBEDCC", Slot = "17")]
		public virtual void SetupCharacterController()
		{
		}

		[Token(Token = "0x6001661")]
		[Address(RVA = "0xDBEFE0", Offset = "0xDBEFE0", VA = "0xDBEFE0", Slot = "18")]
		public virtual void SetupRigidbodyPlayer()
		{
		}

		[Token(Token = "0x6001662")]
		[Address(RVA = "0xDBF278", Offset = "0xDBF278", VA = "0xDBF278", Slot = "19")]
		public virtual void EnableMovement()
		{
		}

		[Token(Token = "0x6001663")]
		[Address(RVA = "0xDBF284", Offset = "0xDBF284", VA = "0xDBF284", Slot = "20")]
		public virtual void DisableMovement()
		{
		}

		[Token(Token = "0x6001664")]
		[Address(RVA = "0xDBF28C", Offset = "0xDBF28C", VA = "0xDBF28C", Slot = "21")]
		public virtual void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001665")]
		[Address(RVA = "0xDBF2A8", Offset = "0xDBF2A8", VA = "0xDBF2A8", Slot = "22")]
		public virtual void OnCollisionExit(Collision collision)
		{
		}

		[Token(Token = "0x6001666")]
		[Address(RVA = "0xDBF2C4", Offset = "0xDBF2C4", VA = "0xDBF2C4")]
		public SmoothLocomotion()
		{
		}
	}
	[Token(Token = "0x20003C1")]
	public enum PlayerControllerType
	{
		[Token(Token = "0x4001929")]
		CharacterController,
		[Token(Token = "0x400192A")]
		Rigidbody
	}
	[Token(Token = "0x20003C2")]
	public class SnapZoneScale : MonoBehaviour
	{
		[Token(Token = "0x400192B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A4CF8", Offset = "0x7A4CF8")]
		public float Scale;

		[Token(Token = "0x600166F")]
		[Address(RVA = "0xDBF488", Offset = "0xDBF488", VA = "0xDBF488")]
		public SnapZoneScale()
		{
		}
	}
	[Token(Token = "0x20003C3")]
	public class TrackedDevice : MonoBehaviour
	{
		[Token(Token = "0x400192C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TrackableDevice Device;

		[Token(Token = "0x400192D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected UnityEngine.XR.InputDevice deviceToTrack;

		[Token(Token = "0x400192E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Vector3 initialLocalPosition;

		[Token(Token = "0x400192F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected Quaternion initialLocalRotation;

		[Token(Token = "0x4001930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		protected Vector3 currentLocalPosition;

		[Token(Token = "0x4001931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected Quaternion currentLocalRotation;

		[Token(Token = "0x6001670")]
		[Address(RVA = "0xE84B2C", Offset = "0xE84B2C", VA = "0xE84B2C", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001671")]
		[Address(RVA = "0xE84B88", Offset = "0xE84B88", VA = "0xE84B88", Slot = "5")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001672")]
		[Address(RVA = "0xE84BFC", Offset = "0xE84BFC", VA = "0xE84BFC", Slot = "6")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001673")]
		[Address(RVA = "0xE84C70", Offset = "0xE84C70", VA = "0xE84C70", Slot = "7")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001674")]
		[Address(RVA = "0xE84CA4", Offset = "0xE84CA4", VA = "0xE84CA4", Slot = "8")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6001675")]
		[Address(RVA = "0xE84CB0", Offset = "0xE84CB0", VA = "0xE84CB0", Slot = "9")]
		public virtual void RefreshDeviceStatus()
		{
		}

		[Token(Token = "0x6001676")]
		[Address(RVA = "0xE84DC0", Offset = "0xE84DC0", VA = "0xE84DC0", Slot = "10")]
		public virtual void UpdateDevice()
		{
		}

		[Token(Token = "0x6001677")]
		[Address(RVA = "0xE84FE4", Offset = "0xE84FE4", VA = "0xE84FE4", Slot = "11")]
		protected virtual void OnBeforeRender()
		{
		}

		[Token(Token = "0x6001678")]
		[Address(RVA = "0xE84FF0", Offset = "0xE84FF0", VA = "0xE84FF0")]
		public TrackedDevice()
		{
		}
	}
	[Token(Token = "0x20003C4")]
	public enum TrackableDevice
	{
		[Token(Token = "0x4001933")]
		HMD,
		[Token(Token = "0x4001934")]
		LeftController,
		[Token(Token = "0x4001935")]
		RightController
	}
	[Token(Token = "0x20003C5")]
	public class BulletHole : MonoBehaviour
	{
		[Token(Token = "0x4001936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform BulletHoleDecal;

		[Token(Token = "0x4001937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float MaxScale;

		[Token(Token = "0x4001938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float MinScale;

		[Token(Token = "0x4001939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool RandomYRotation;

		[Token(Token = "0x400193A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float DestroyTime;

		[Token(Token = "0x6001679")]
		[Address(RVA = "0xAF0EE8", Offset = "0xAF0EE8", VA = "0xAF0EE8")]
		private void Start()
		{
		}

		[Token(Token = "0x600167A")]
		[Address(RVA = "0xAF1094", Offset = "0xAF1094", VA = "0xAF1094")]
		public void TryAttachTo(Collider col)
		{
		}

		[Token(Token = "0x600167B")]
		[Address(RVA = "0xAF11FC", Offset = "0xAF11FC", VA = "0xAF11FC")]
		private bool transformIsEqualScale(Transform theTransform)
		{
			return default(bool);
		}

		[Token(Token = "0x600167C")]
		[Address(RVA = "0xAF1278", Offset = "0xAF1278", VA = "0xAF1278")]
		private void DestroySelf()
		{
		}

		[Token(Token = "0x600167D")]
		[Address(RVA = "0xAF1310", Offset = "0xAF1310", VA = "0xAF1310")]
		public BulletHole()
		{
		}
	}
	[Token(Token = "0x20003C6")]
	public class CustomCenterOfMass : MonoBehaviour
	{
		[Token(Token = "0x400193B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A4D30", Offset = "0x7A4D30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A4D30", Offset = "0x7A4D30")]
		public Vector3 CenterOfMass;

		[Token(Token = "0x400193C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A4D90", Offset = "0x7A4D90")]
		public Transform CenterOfMassTransform;

		[Token(Token = "0x400193D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A4DC8", Offset = "0x7A4DC8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A4DC8", Offset = "0x7A4DC8")]
		public bool ShowGizmo;

		[Token(Token = "0x400193E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Rigidbody rigid;

		[Token(Token = "0x600167E")]
		[Address(RVA = "0xB745F0", Offset = "0xB745F0", VA = "0xB745F0")]
		private void Start()
		{
		}

		[Token(Token = "0x600167F")]
		[Address(RVA = "0xB7466C", Offset = "0xB7466C", VA = "0xB7466C", Slot = "4")]
		public virtual void SetCenterOfMass(Vector3 center)
		{
		}

		[Token(Token = "0x6001680")]
		[Address(RVA = "0xB74728", Offset = "0xB74728", VA = "0xB74728", Slot = "5")]
		protected virtual Vector3 getThisCenterOfMass()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001681")]
		[Address(RVA = "0xB747BC", Offset = "0xB747BC", VA = "0xB747BC")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001682")]
		[Address(RVA = "0xB748F4", Offset = "0xB748F4", VA = "0xB748F4")]
		public CustomCenterOfMass()
		{
		}
	}
	[Token(Token = "0x20003C7")]
	public class DrawerSound : MonoBehaviour
	{
		[Token(Token = "0x400193F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip DrawerOpenSound;

		[Token(Token = "0x4001940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float DrawerOpenValue;

		[Token(Token = "0x4001941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip DrawerCloseSound;

		[Token(Token = "0x4001942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float DrawerCloseValue;

		[Token(Token = "0x4001943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool playedOpenSound;

		[Token(Token = "0x4001944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		private bool playedCloseSound;

		[Token(Token = "0x6001683")]
		[Address(RVA = "0xB7CC5C", Offset = "0xB7CC5C", VA = "0xB7CC5C")]
		public void OnDrawerUpdate(float drawerValue)
		{
		}

		[Token(Token = "0x6001684")]
		[Address(RVA = "0xB7CE08", Offset = "0xB7CE08", VA = "0xB7CE08")]
		public DrawerSound()
		{
		}
	}
	[Token(Token = "0x20003C8")]
	public static class ExtensionMethods
	{
		[Token(Token = "0x6001685")]
		[Address(RVA = "0xE784F4", Offset = "0xE784F4", VA = "0xE784F4")]
		public static bool GetDown(this ControllerBinding binding)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003C9")]
	public class FPSText : MonoBehaviour
	{
		[Token(Token = "0x4001945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Text text;

		[Token(Token = "0x4001946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float deltaTime;

		[Token(Token = "0x6001686")]
		[Address(RVA = "0xE787B4", Offset = "0xE787B4", VA = "0xE787B4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001687")]
		[Address(RVA = "0xE78810", Offset = "0xE78810", VA = "0xE78810")]
		private void Update()
		{
		}

		[Token(Token = "0x6001688")]
		[Address(RVA = "0xE78904", Offset = "0xE78904", VA = "0xE78904")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001689")]
		[Address(RVA = "0xE789D4", Offset = "0xE789D4", VA = "0xE789D4")]
		public FPSText()
		{
		}
	}
	[Token(Token = "0x20003CA")]
	public class Flashlight : GrabbableEvents
	{
		[Token(Token = "0x4001947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Light SpotLight;

		[Token(Token = "0x4001948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform LightSwitch;

		[Token(Token = "0x4001949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 originalSwitchPosition;

		[Token(Token = "0x600168A")]
		[Address(RVA = "0xE7C524", Offset = "0xE7C524", VA = "0xE7C524")]
		private void Start()
		{
		}

		[Token(Token = "0x600168B")]
		[Address(RVA = "0xE7C568", Offset = "0xE7C568", VA = "0xE7C568", Slot = "17")]
		public override void OnTrigger(float triggerValue)
		{
		}

		[Token(Token = "0x600168C")]
		[Address(RVA = "0xE7C5DC", Offset = "0xE7C5DC", VA = "0xE7C5DC", Slot = "19")]
		public override void OnTriggerUp()
		{
		}

		[Token(Token = "0x600168D")]
		[Address(RVA = "0xE7C630", Offset = "0xE7C630", VA = "0xE7C630")]
		public Flashlight()
		{
		}
	}
	[Token(Token = "0x20003CB")]
	public class IKDummy : MonoBehaviour
	{
		[Token(Token = "0x400194A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform ThisEyeBone;

		[Token(Token = "0x400194B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform PlayerTransform;

		[Token(Token = "0x400194C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform HeadFollow;

		[Token(Token = "0x400194D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform RightHandFollow;

		[Token(Token = "0x400194E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform LeftHandFollow;

		[Token(Token = "0x400194F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 HandRotationOffset;

		[Token(Token = "0x4001950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Animator animator;

		[Token(Token = "0x4001951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform headBone;

		[Token(Token = "0x4001952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform leftHandDummy;

		[Token(Token = "0x4001953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform rightHandDummy;

		[Token(Token = "0x4001954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Transform leftHandOnPlayer;

		[Token(Token = "0x4001955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Transform rightHandOnPlayer;

		[Token(Token = "0x4001956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Transform lookatDummy;

		[Token(Token = "0x4001957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 localPos;

		[Token(Token = "0x4001958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Quaternion localRot;

		[Token(Token = "0x4001959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Transform cam;

		[Token(Token = "0x400195A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 leftHandLocalPos;

		[Token(Token = "0x400195B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private Vector3 rightHandLocalPos;

		[Token(Token = "0x400195C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Quaternion leftHandLocalRot;

		[Token(Token = "0x400195D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Quaternion rightHandLocalRot;

		[Token(Token = "0x400195E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public Vector3 LeftHandsOffset;

		[Token(Token = "0x400195F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public Vector3 RightHandsOffset;

		[Token(Token = "0x600168E")]
		[Address(RVA = "0xF55DC4", Offset = "0xF55DC4", VA = "0xF55DC4")]
		private void Start()
		{
		}

		[Token(Token = "0x600168F")]
		[Address(RVA = "0xF560C0", Offset = "0xF560C0", VA = "0xF560C0")]
		public Transform SetParentAndLocalPosRot(string transformName, Transform parentToSet)
		{
			return null;
		}

		[Token(Token = "0x6001690")]
		[Address(RVA = "0xF5617C", Offset = "0xF5617C", VA = "0xF5617C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001691")]
		[Address(RVA = "0xF56458", Offset = "0xF56458", VA = "0xF56458")]
		private void OnAnimatorIK()
		{
		}

		[Token(Token = "0x6001692")]
		[Address(RVA = "0xF56700", Offset = "0xF56700", VA = "0xF56700")]
		public IKDummy()
		{
		}
	}
	[Token(Token = "0x20003CC")]
	public class LaserPointer : MonoBehaviour
	{
		[Token(Token = "0x4001960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float MaxRange;

		[Token(Token = "0x4001961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public LayerMask ValidLayers;

		[Token(Token = "0x4001962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform LaserEnd;

		[Token(Token = "0x4001963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool Active;

		[Token(Token = "0x4001964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private LineRenderer line;

		[Token(Token = "0x6001693")]
		[Address(RVA = "0x1186614", Offset = "0x1186614", VA = "0x1186614")]
		private void Start()
		{
		}

		[Token(Token = "0x6001694")]
		[Address(RVA = "0x1186670", Offset = "0x1186670", VA = "0x1186670")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001695")]
		[Address(RVA = "0x1186980", Offset = "0x1186980", VA = "0x1186980")]
		public LaserPointer()
		{
		}
	}
	[Token(Token = "0x20003CD")]
	public class LiquidWobble : MonoBehaviour
	{
		[Token(Token = "0x4001965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Renderer rend;

		[Token(Token = "0x4001966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 lastPos;

		[Token(Token = "0x4001967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 velocity;

		[Token(Token = "0x4001968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 lastRot;

		[Token(Token = "0x4001969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 angularVelocity;

		[Token(Token = "0x400196A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float MaxWobble;

		[Token(Token = "0x400196B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float WobbleSpeed;

		[Token(Token = "0x400196C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float Recovery;

		[Token(Token = "0x400196D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float wobbleAmountX;

		[Token(Token = "0x400196E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float wobbleAmountZ;

		[Token(Token = "0x400196F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float wobbleAmountToAddX;

		[Token(Token = "0x4001970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float wobbleAmountToAddZ;

		[Token(Token = "0x4001971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float pulse;

		[Token(Token = "0x4001972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float time;

		[Token(Token = "0x6001696")]
		[Address(RVA = "0x1187390", Offset = "0x1187390", VA = "0x1187390")]
		private void Start()
		{
		}

		[Token(Token = "0x6001697")]
		[Address(RVA = "0x11873EC", Offset = "0x11873EC", VA = "0x11873EC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001698")]
		[Address(RVA = "0x1187690", Offset = "0x1187690", VA = "0x1187690")]
		public LiquidWobble()
		{
		}
	}
	[Token(Token = "0x20003CE")]
	public class Marker : GrabbableEvents
	{
		[Token(Token = "0x20003CF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x797DC4", Offset = "0x797DC4")]
		private sealed class <WriteRoutine>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001983")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001984")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001985")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Marker <>4__this;

			[Token(Token = "0x17000306")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60016A3")]
				[Address(RVA = "0xCBAAC8", Offset = "0xCBAAC8", VA = "0xCBAAC8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000307")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60016A5")]
				[Address(RVA = "0xCBAB10", Offset = "0xCBAB10", VA = "0xCBAB10", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60016A0")]
			[Address(RVA = "0xCBA7F8", Offset = "0xCBA7F8", VA = "0xCBA7F8")]
			[DebuggerHidden]
			public <WriteRoutine>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x60016A1")]
			[Address(RVA = "0xCBA824", Offset = "0xCBA824", VA = "0xCBA824", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60016A2")]
			[Address(RVA = "0xCBA828", Offset = "0xCBA828", VA = "0xCBA828", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60016A4")]
			[Address(RVA = "0xCBAAD0", Offset = "0xCBAAD0", VA = "0xCBAAD0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material DrawMaterial;

		[Token(Token = "0x4001974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color DrawColor;

		[Token(Token = "0x4001975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float LineWidth;

		[Token(Token = "0x4001976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform RaycastStart;

		[Token(Token = "0x4001977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public LayerMask DrawingLayers;

		[Token(Token = "0x4001978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float RaycastLength;

		[Token(Token = "0x4001979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float MinDrawDistance;

		[Token(Token = "0x400197A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float ReuseTolerance;

		[Token(Token = "0x400197B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool IsNewDraw;

		[Token(Token = "0x400197C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 lastDrawPoint;

		[Token(Token = "0x400197D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private LineRenderer LineRenderer;

		[Token(Token = "0x400197E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Transform root;

		[Token(Token = "0x400197F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Transform lastTransform;

		[Token(Token = "0x4001980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine drawRoutine;

		[Token(Token = "0x4001981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float lastLineWidth;

		[Token(Token = "0x4001982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private int renderLifeTime;

		[Token(Token = "0x6001699")]
		[Address(RVA = "0x1195ED8", Offset = "0x1195ED8", VA = "0x1195ED8", Slot = "6")]
		public override void OnGrab(Grabber grabber)
		{
		}

		[Token(Token = "0x600169A")]
		[Address(RVA = "0x1195FB8", Offset = "0x1195FB8", VA = "0x1195FB8", Slot = "7")]
		public override void OnRelease()
		{
		}

		[Token(Token = "0x600169B")]
		[Address(RVA = "0x1195F40", Offset = "0x1195F40", VA = "0x1195F40")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7AC5F8", Offset = "0x7AC5F8")]
		private IEnumerator WriteRoutine()
		{
			return null;
		}

		[Token(Token = "0x600169C")]
		[Address(RVA = "0x1196004", Offset = "0x1196004", VA = "0x1196004")]
		private void InitDraw(Vector3 position, Quaternion rotation, float lineWidth, Color lineColor)
		{
		}

		[Token(Token = "0x600169D")]
		[Address(RVA = "0x119612C", Offset = "0x119612C", VA = "0x119612C")]
		private Vector3 DrawPoint(Vector3 lastDrawPoint, Vector3 endPosition, float lineWidth, Color lineColor, Quaternion rotation)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600169E")]
		[Address(RVA = "0x1196688", Offset = "0x1196688", VA = "0x1196688")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x600169F")]
		[Address(RVA = "0x1196744", Offset = "0x1196744", VA = "0x1196744")]
		public Marker()
		{
		}
	}
	[Token(Token = "0x20003D0")]
	public class MoveToWaypoint : MonoBehaviour
	{
		[Token(Token = "0x4001986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool IsActive;

		[Token(Token = "0x4001987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Waypoint Destination;

		[Token(Token = "0x4001988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float MovementSpeed;

		[Token(Token = "0x4001989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool ReachedDestination;

		[Token(Token = "0x400198A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A4E28", Offset = "0x7A4E28")]
		public float StartDelay;

		[Token(Token = "0x400198B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool reachedDelay;

		[Token(Token = "0x400198C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float delayedTime;

		[Token(Token = "0x400198D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 previousPosition;

		[Token(Token = "0x400198E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 PositionDifference;

		[Token(Token = "0x400198F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool MoveInUpdate;

		[Token(Token = "0x4001990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		public bool MoveInFixedUpdate;

		[Token(Token = "0x4001991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Rigidbody rigid;

		[Token(Token = "0x60016A6")]
		[Address(RVA = "0x1F5C618", Offset = "0x1F5C618", VA = "0x1F5C618")]
		private void Start()
		{
		}

		[Token(Token = "0x60016A7")]
		[Address(RVA = "0x1F5C68C", Offset = "0x1F5C68C", VA = "0x1F5C68C")]
		private void Update()
		{
		}

		[Token(Token = "0x60016A8")]
		[Address(RVA = "0x1F5CA08", Offset = "0x1F5CA08", VA = "0x1F5CA08")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60016A9")]
		[Address(RVA = "0x1F5C750", Offset = "0x1F5C750", VA = "0x1F5C750")]
		private void movePlatform(float timeDelta)
		{
		}

		[Token(Token = "0x60016AA")]
		[Address(RVA = "0x1F5CA3C", Offset = "0x1F5CA3C", VA = "0x1F5CA3C")]
		private void resetDelayStatus()
		{
		}

		[Token(Token = "0x60016AB")]
		[Address(RVA = "0x1F5CA48", Offset = "0x1F5CA48", VA = "0x1F5CA48")]
		public MoveToWaypoint()
		{
		}
	}
	[Token(Token = "0x20003D1")]
	public class MovingPlatform : MonoBehaviour
	{
		[Token(Token = "0x4001992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A4E60", Offset = "0x7A4E60")]
		public MovingPlatformMethod MovementMethod;

		[Token(Token = "0x4001993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[HideInInspector]
		public Vector3 PositionDelta;

		[Token(Token = "0x4001994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public Quaternion RotationDelta;

		[Token(Token = "0x4001995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Vector3 previousPosition;

		[Token(Token = "0x4001996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		protected Quaternion previousRotation;

		[Token(Token = "0x60016AC")]
		[Address(RVA = "0x1F5E870", Offset = "0x1F5E870", VA = "0x1F5E870")]
		protected void Update()
		{
		}

		[Token(Token = "0x60016AD")]
		[Address(RVA = "0x1F5E97C", Offset = "0x1F5E97C", VA = "0x1F5E97C")]
		public MovingPlatform()
		{
		}
	}
	[Token(Token = "0x20003D2")]
	public enum MovingPlatformMethod
	{
		[Token(Token = "0x4001998")]
		ParentToPlatform,
		[Token(Token = "0x4001999")]
		PositionDifference
	}
	[Token(Token = "0x20003D3")]
	public class PlayerScaler : MonoBehaviour
	{
		[Token(Token = "0x400199A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Transform> ScaleObjects;

		[Token(Token = "0x400199B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float Scale;

		[Token(Token = "0x400199C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float scaleSpeed;

		[Token(Token = "0x60016AE")]
		[Address(RVA = "0xBEF2A0", Offset = "0xBEF2A0", VA = "0xBEF2A0")]
		private void Update()
		{
		}

		[Token(Token = "0x60016AF")]
		[Address(RVA = "0xBEF4BC", Offset = "0xBEF4BC", VA = "0xBEF4BC")]
		public PlayerScaler()
		{
		}
	}
	[Token(Token = "0x20003D4")]
	public class ProjectileLauncher : MonoBehaviour
	{
		[Token(Token = "0x400199D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject ProjectileObject;

		[Token(Token = "0x400199E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float ProjectileForce;

		[Token(Token = "0x400199F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip LaunchSound;

		[Token(Token = "0x40019A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ParticleSystem LaunchParticles;

		[Token(Token = "0x40019A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform MuzzleTransform;

		[Token(Token = "0x40019A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float _initialProjectileForce;

		[Token(Token = "0x60016B0")]
		[Address(RVA = "0xC86464", Offset = "0xC86464", VA = "0xC86464")]
		private void Start()
		{
		}

		[Token(Token = "0x60016B1")]
		[Address(RVA = "0xC86470", Offset = "0xC86470", VA = "0xC86470")]
		public GameObject ShootProjectile(float projectileForce)
		{
			return null;
		}

		[Token(Token = "0x60016B2")]
		[Address(RVA = "0xC86738", Offset = "0xC86738", VA = "0xC86738")]
		public void ShootProjectile()
		{
		}

		[Token(Token = "0x60016B3")]
		[Address(RVA = "0xC86740", Offset = "0xC86740", VA = "0xC86740")]
		public void SetForce(float force)
		{
		}

		[Token(Token = "0x60016B4")]
		[Address(RVA = "0xC86748", Offset = "0xC86748", VA = "0xC86748")]
		public float GetInitialProjectileForce()
		{
			return default(float);
		}

		[Token(Token = "0x60016B5")]
		[Address(RVA = "0xC86750", Offset = "0xC86750", VA = "0xC86750")]
		public ProjectileLauncher()
		{
		}
	}
	[Token(Token = "0x20003D5")]
	public class ToggleActiveOnInputAction : MonoBehaviour
	{
		[Token(Token = "0x40019A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InputActionReference InputAction;

		[Token(Token = "0x40019A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject ToggleObject;

		[Token(Token = "0x60016B6")]
		[Address(RVA = "0xE82D14", Offset = "0xE82D14", VA = "0xE82D14")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60016B7")]
		[Address(RVA = "0xE82DD0", Offset = "0xE82DD0", VA = "0xE82DD0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60016B8")]
		[Address(RVA = "0xE82E8C", Offset = "0xE82E8C", VA = "0xE82E8C")]
		public void ToggleActive(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60016B9")]
		[Address(RVA = "0xE82F30", Offset = "0xE82F30", VA = "0xE82F30")]
		public ToggleActiveOnInputAction()
		{
		}
	}
	[Token(Token = "0x20003D6")]
	public class VREmulator : MonoBehaviour
	{
		[Token(Token = "0x40019A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A4EB8", Offset = "0x7A4EB8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A4EB8", Offset = "0x7A4EB8")]
		public bool EmulatorEnabled;

		[Token(Token = "0x40019A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A4F18", Offset = "0x7A4F18")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A4F18", Offset = "0x7A4F18")]
		public InputActionAsset EmulatorActionSet;

		[Token(Token = "0x40019A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A4F88", Offset = "0x7A4F88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A4F88", Offset = "0x7A4F88")]
		public bool ForceStraightTeleportRotation;

		[Token(Token = "0x40019A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A4FE8", Offset = "0x7A4FE8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A4FE8", Offset = "0x7A4FE8")]
		public bool AllowUpDownControls;

		[Token(Token = "0x40019A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A5048", Offset = "0x7A5048")]
		public InputActionReference PlayerUpAction;

		[Token(Token = "0x40019AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A5080", Offset = "0x7A5080")]
		public InputActionReference PlayerDownAction;

		[Token(Token = "0x40019AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A50B8", Offset = "0x7A50B8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A50B8", Offset = "0x7A50B8")]
		public InputActionReference LockCameraAction;

		[Token(Token = "0x40019AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A5118", Offset = "0x7A5118")]
		public InputActionReference CameraLookAction;

		[Token(Token = "0x40019AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A5150", Offset = "0x7A5150")]
		public float CameraLookSensitivityX;

		[Token(Token = "0x40019AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A5188", Offset = "0x7A5188")]
		public float CameraLookSensitivityY;

		[Token(Token = "0x40019AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A51C0", Offset = "0x7A51C0")]
		public float MinimumCameraY;

		[Token(Token = "0x40019B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A51F8", Offset = "0x7A51F8")]
		public float MaximumCameraY;

		[Token(Token = "0x40019B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A5230", Offset = "0x7A5230")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A5230", Offset = "0x7A5230")]
		public InputActionReference LeftGripAction;

		[Token(Token = "0x40019B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A5290", Offset = "0x7A5290")]
		public InputActionReference LeftTriggerAction;

		[Token(Token = "0x40019B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A52C8", Offset = "0x7A52C8")]
		public InputActionReference LeftThumbNearAction;

		[Token(Token = "0x40019B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A5300", Offset = "0x7A5300")]
		public InputActionReference RightGripAction;

		[Token(Token = "0x40019B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A5338", Offset = "0x7A5338")]
		public InputActionReference RightTriggerAction;

		[Token(Token = "0x40019B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A5370", Offset = "0x7A5370")]
		public InputActionReference RightThumbNearAction;

		[Token(Token = "0x40019B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float mouseRotationX;

		[Token(Token = "0x40019B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float mouseRotationY;

		[Token(Token = "0x40019B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Transform mainCameraTransform;

		[Token(Token = "0x40019BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Transform leftControllerTranform;

		[Token(Token = "0x40019BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Transform rightControllerTranform;

		[Token(Token = "0x40019BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Transform leftHandAnchor;

		[Token(Token = "0x40019BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Transform rightHandAnchor;

		[Token(Token = "0x40019BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private BNGPlayerController player;

		[Token(Token = "0x40019BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private SmoothLocomotion smoothLocomotion;

		[Token(Token = "0x40019C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private PlayerTeleport playerTeleport;

		[Token(Token = "0x40019C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool didFirstActivate;

		[Token(Token = "0x40019C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Grabber grabberLeft;

		[Token(Token = "0x40019C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Grabber grabberRight;

		[Token(Token = "0x40019C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private float _originalPlayerYOffset;

		[Token(Token = "0x40019C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A53A8", Offset = "0x7A53A8")]
		public bool HMDIsActive;

		[Token(Token = "0x40019C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public Vector3 LeftControllerPosition;

		[Token(Token = "0x40019C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		public Vector3 RightControllerPosition;

		[Token(Token = "0x40019C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private bool priorStraightSetting;

		[Token(Token = "0x40019C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x111")]
		public bool RequireGameFocus;

		[Token(Token = "0x40019CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private float prevVal;

		[Token(Token = "0x40019CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private bool isQuitting;

		[Token(Token = "0x60016BA")]
		[Address(RVA = "0xAC9848", Offset = "0xAC9848", VA = "0xAC9848")]
		private void Start()
		{
		}

		[Token(Token = "0x60016BB")]
		[Address(RVA = "0xAC9CD0", Offset = "0xAC9CD0", VA = "0xAC9CD0")]
		public void OnBeforeRender()
		{
		}

		[Token(Token = "0x60016BC")]
		[Address(RVA = "0xAC9D68", Offset = "0xAC9D68", VA = "0xAC9D68")]
		private void onFirstActivate()
		{
		}

		[Token(Token = "0x60016BD")]
		[Address(RVA = "0xAC9D98", Offset = "0xAC9D98", VA = "0xAC9D98")]
		private void Update()
		{
		}

		[Token(Token = "0x60016BE")]
		[Address(RVA = "0xACA398", Offset = "0xACA398", VA = "0xACA398", Slot = "4")]
		public virtual bool HasRequiredFocus()
		{
			return default(bool);
		}

		[Token(Token = "0x60016BF")]
		[Address(RVA = "0xAC9E9C", Offset = "0xAC9E9C", VA = "0xAC9E9C")]
		public void CheckHeadControls()
		{
		}

		[Token(Token = "0x60016C0")]
		[Address(RVA = "0xACA3D0", Offset = "0xACA3D0", VA = "0xACA3D0")]
		public void UpdateInputs()
		{
		}

		[Token(Token = "0x60016C1")]
		[Address(RVA = "0xACA0F4", Offset = "0xACA0F4", VA = "0xACA0F4")]
		public void CheckPlayerControls()
		{
		}

		[Token(Token = "0x60016C2")]
		[Address(RVA = "0xACAE4C", Offset = "0xACAE4C", VA = "0xACAE4C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60016C3")]
		[Address(RVA = "0xACAF00", Offset = "0xACAF00", VA = "0xACAF00", Slot = "5")]
		public virtual void UpdateControllerPositions()
		{
		}

		[Token(Token = "0x60016C4")]
		[Address(RVA = "0xACAB94", Offset = "0xACAB94", VA = "0xACAB94")]
		private void checkGrabbers()
		{
		}

		[Token(Token = "0x60016C5")]
		[Address(RVA = "0xACAFC0", Offset = "0xACAFC0", VA = "0xACAFC0", Slot = "6")]
		public virtual void ResetHands()
		{
		}

		[Token(Token = "0x60016C6")]
		[Address(RVA = "0xACB08C", Offset = "0xACB08C", VA = "0xACB08C", Slot = "7")]
		public virtual void ResetAll()
		{
		}

		[Token(Token = "0x60016C7")]
		[Address(RVA = "0xACB18C", Offset = "0xACB18C", VA = "0xACB18C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60016C8")]
		[Address(RVA = "0xACB684", Offset = "0xACB684", VA = "0xACB684")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60016C9")]
		[Address(RVA = "0xACBB94", Offset = "0xACBB94", VA = "0xACBB94")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x60016CA")]
		[Address(RVA = "0xACBBA0", Offset = "0xACBBA0", VA = "0xACBBA0")]
		public VREmulator()
		{
		}
	}
	[Token(Token = "0x20003D7")]
	public class Waypoint : MonoBehaviour
	{
		[Token(Token = "0x40019CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Waypoint Destination;

		[Token(Token = "0x60016CB")]
		[Address(RVA = "0xAFFDE4", Offset = "0xAFFDE4", VA = "0xAFFDE4")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60016CC")]
		[Address(RVA = "0xAFFF40", Offset = "0xAFFF40", VA = "0xAFFF40")]
		public Waypoint()
		{
		}
	}
	[Token(Token = "0x20003D8")]
	public class Zipline : GrabbableEvents
	{
		[Token(Token = "0x40019CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform ZiplineStart;

		[Token(Token = "0x40019CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform ZiplineEnd;

		[Token(Token = "0x40019CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float ZiplineSpeed;

		[Token(Token = "0x40019D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool UseLinearMovement;

		[Token(Token = "0x40019D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float lastMoveTime;

		[Token(Token = "0x40019D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool movingForward;

		[Token(Token = "0x40019D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private AudioSource audioSource;

		[Token(Token = "0x60016CD")]
		[Address(RVA = "0xB00864", Offset = "0xB00864", VA = "0xB00864")]
		private void Start()
		{
		}

		[Token(Token = "0x60016CE")]
		[Address(RVA = "0xB0093C", Offset = "0xB0093C", VA = "0xB0093C")]
		private void Update()
		{
		}

		[Token(Token = "0x60016CF")]
		[Address(RVA = "0xB00A14", Offset = "0xB00A14", VA = "0xB00A14")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60016D0")]
		[Address(RVA = "0xB00B44", Offset = "0xB00B44", VA = "0xB00B44", Slot = "17")]
		public override void OnTrigger(float triggerValue)
		{
		}

		[Token(Token = "0x60016D1")]
		[Address(RVA = "0xB00DFC", Offset = "0xB00DFC", VA = "0xB00DFC", Slot = "20")]
		public override void OnButton1()
		{
		}

		[Token(Token = "0x60016D2")]
		[Address(RVA = "0xB00E40", Offset = "0xB00E40", VA = "0xB00E40", Slot = "23")]
		public override void OnButton2()
		{
		}

		[Token(Token = "0x60016D3")]
		[Address(RVA = "0xB00BA4", Offset = "0xB00BA4", VA = "0xB00BA4")]
		private void moveTowards(Vector3 pos, bool forwardDirection)
		{
		}

		[Token(Token = "0x60016D4")]
		[Address(RVA = "0xB00E84", Offset = "0xB00E84", VA = "0xB00E84")]
		public Zipline()
		{
		}
	}
	[Token(Token = "0x20003D9")]
	public class ControllerOffsetHelper : MonoBehaviour
	{
		[Token(Token = "0x20003DA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x797DD4", Offset = "0x797DD4")]
		private sealed class <checkForController>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40019DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ControllerOffsetHelper <>4__this;

			[Token(Token = "0x17000308")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60016E0")]
				[Address(RVA = "0xB08350", Offset = "0xB08350", VA = "0xB08350", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000309")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60016E2")]
				[Address(RVA = "0xB08398", Offset = "0xB08398", VA = "0xB08398", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60016DD")]
			[Address(RVA = "0xB08204", Offset = "0xB08204", VA = "0xB08204")]
			[DebuggerHidden]
			public <checkForController>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x60016DE")]
			[Address(RVA = "0xB08230", Offset = "0xB08230", VA = "0xB08230", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60016DF")]
			[Address(RVA = "0xB08234", Offset = "0xB08234", VA = "0xB08234", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60016E1")]
			[Address(RVA = "0xB08358", Offset = "0xB08358", VA = "0xB08358", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40019D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ControllerHand ControllerHand;

		[Token(Token = "0x40019D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A53E0", Offset = "0x7A53E0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A53E0", Offset = "0x7A53E0")]
		[SerializeField]
		private string thisControllerModel;

		[Token(Token = "0x40019D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ControllerOffset thisOffset;

		[Token(Token = "0x40019D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A5460", Offset = "0x7A5460")]
		public Vector3 OffsetPosition;

		[Token(Token = "0x40019D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A5498", Offset = "0x7A5498")]
		public Vector3 OffsetRotation;

		[Token(Token = "0x40019D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<ControllerOffset> ControllerOffsets;

		[Token(Token = "0x60016D5")]
		[Address(RVA = "0xB72364", Offset = "0xB72364", VA = "0xB72364")]
		private void Start()
		{
		}

		[Token(Token = "0x60016D6")]
		[Address(RVA = "0xB72408", Offset = "0xB72408", VA = "0xB72408")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7AC6A8", Offset = "0x7AC6A8")]
		private IEnumerator checkForController()
		{
			return null;
		}

		[Token(Token = "0x60016D7")]
		[Address(RVA = "0xB72480", Offset = "0xB72480", VA = "0xB72480", Slot = "4")]
		public virtual void OnControllerFound()
		{
		}

		[Token(Token = "0x60016D8")]
		[Address(RVA = "0xB725A4", Offset = "0xB725A4", VA = "0xB725A4", Slot = "5")]
		public virtual ControllerOffset GetControllerOffset(string controllerName)
		{
			return null;
		}

		[Token(Token = "0x60016D9")]
		[Address(RVA = "0xB726B8", Offset = "0xB726B8", VA = "0xB726B8", Slot = "6")]
		public virtual void DefineControllerOffsets()
		{
		}

		[Token(Token = "0x60016DA")]
		[Address(RVA = "0xB729B0", Offset = "0xB729B0", VA = "0xB729B0", Slot = "7")]
		public virtual ControllerOffset GetOpenXROffset()
		{
			return null;
		}

		[Token(Token = "0x60016DB")]
		[Address(RVA = "0xB72A58", Offset = "0xB72A58", VA = "0xB72A58")]
		public ControllerOffsetHelper()
		{
		}

		[Token(Token = "0x60016DC")]
		[Address(RVA = "0xB72A68", Offset = "0xB72A68", VA = "0xB72A68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AC708", Offset = "0x7AC708")]
		private bool <GetControllerOffset>b__9_0(ControllerOffset x)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003DB")]
	public class ControllerOffset
	{
		[Token(Token = "0x40019DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A54D0", Offset = "0x7A54D0")]
		private string <ControllerName>k__BackingField;

		[Token(Token = "0x40019DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A54E0", Offset = "0x7A54E0")]
		private Vector3 <LeftControllerPositionOffset>k__BackingField;

		[Token(Token = "0x40019DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A54F0", Offset = "0x7A54F0")]
		private Vector3 <RightControllerPositionOffset>k__BackingField;

		[Token(Token = "0x40019E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A5500", Offset = "0x7A5500")]
		private Vector3 <LeftControllerRotationOffset>k__BackingField;

		[Token(Token = "0x40019E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A5510", Offset = "0x7A5510")]
		private Vector3 <RightControlleRotationOffset>k__BackingField;

		[Token(Token = "0x1700030A")]
		public string ControllerName
		{
			[Token(Token = "0x60016E3")]
			[Address(RVA = "0xB722EC", Offset = "0xB722EC", VA = "0xB722EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AC768", Offset = "0x7AC768")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016E4")]
			[Address(RVA = "0xB722F4", Offset = "0xB722F4", VA = "0xB722F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AC778", Offset = "0x7AC778")]
			set
			{
			}
		}

		[Token(Token = "0x1700030B")]
		public Vector3 LeftControllerPositionOffset
		{
			[Token(Token = "0x60016E5")]
			[Address(RVA = "0xB722FC", Offset = "0xB722FC", VA = "0xB722FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AC788", Offset = "0x7AC788")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60016E6")]
			[Address(RVA = "0xB72308", Offset = "0xB72308", VA = "0xB72308")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AC798", Offset = "0x7AC798")]
			set
			{
			}
		}

		[Token(Token = "0x1700030C")]
		public Vector3 RightControllerPositionOffset
		{
			[Token(Token = "0x60016E7")]
			[Address(RVA = "0xB72314", Offset = "0xB72314", VA = "0xB72314")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AC7A8", Offset = "0x7AC7A8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60016E8")]
			[Address(RVA = "0xB72320", Offset = "0xB72320", VA = "0xB72320")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AC7B8", Offset = "0x7AC7B8")]
			set
			{
			}
		}

		[Token(Token = "0x1700030D")]
		public Vector3 LeftControllerRotationOffset
		{
			[Token(Token = "0x60016E9")]
			[Address(RVA = "0xB7232C", Offset = "0xB7232C", VA = "0xB7232C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AC7C8", Offset = "0x7AC7C8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60016EA")]
			[Address(RVA = "0xB72338", Offset = "0xB72338", VA = "0xB72338")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AC7D8", Offset = "0x7AC7D8")]
			set
			{
			}
		}

		[Token(Token = "0x1700030E")]
		public Vector3 RightControlleRotationOffset
		{
			[Token(Token = "0x60016EB")]
			[Address(RVA = "0xB72344", Offset = "0xB72344", VA = "0xB72344")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AC7E8", Offset = "0x7AC7E8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60016EC")]
			[Address(RVA = "0xB72350", Offset = "0xB72350", VA = "0xB72350")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AC7F8", Offset = "0x7AC7F8")]
			set
			{
			}
		}

		[Token(Token = "0x60016ED")]
		[Address(RVA = "0xB7235C", Offset = "0xB7235C", VA = "0xB7235C")]
		public ControllerOffset()
		{
		}
	}
	[Token(Token = "0x20003DC")]
	public class DetachableLimb : MonoBehaviour
	{
		[Token(Token = "0x40019E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform ShrinkBone;

		[Token(Token = "0x40019E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject ReplaceGrabbableWith;

		[Token(Token = "0x40019E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject EnableOnDetach;

		[Token(Token = "0x60016EE")]
		[Address(RVA = "0xB79DCC", Offset = "0xB79DCC", VA = "0xB79DCC")]
		public DetachableLimb()
		{
		}
	}
	[Token(Token = "0x20003DD")]
	public class DoorHelper : MonoBehaviour
	{
		[Token(Token = "0x40019E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip DoorOpenSound;

		[Token(Token = "0x40019E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip DoorCloseSound;

		[Token(Token = "0x40019E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A5520", Offset = "0x7A5520")]
		public bool RequireHandleTurnToOpen;

		[Token(Token = "0x40019E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform HandleFollower;

		[Token(Token = "0x40019E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float DegreesTurned;

		[Token(Token = "0x40019EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float DegreesTurnToOpen;

		[Token(Token = "0x40019EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform DoorLockTransform;

		[Token(Token = "0x40019EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float initialLockPosition;

		[Token(Token = "0x40019ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private HingeJoint hinge;

		[Token(Token = "0x40019EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Rigidbody rigid;

		[Token(Token = "0x40019EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool playedOpenSound;

		[Token(Token = "0x40019F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool readyToPlayCloseSound;

		[Token(Token = "0x40019F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float AngularVelocitySnapDoor;

		[Token(Token = "0x40019F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float angle;

		[Token(Token = "0x40019F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float AngularVelocity;

		[Token(Token = "0x40019F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool doorLocked;

		[Token(Token = "0x40019F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float lockPos;

		[Token(Token = "0x40019F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 currentRotation;

		[Token(Token = "0x40019F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float moveLockAmount;

		[Token(Token = "0x40019F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float rotateAngles;

		[Token(Token = "0x40019F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float ratio;

		[Token(Token = "0x60016EF")]
		[Address(RVA = "0xB7C734", Offset = "0xB7C734", VA = "0xB7C734")]
		private void Start()
		{
		}

		[Token(Token = "0x60016F0")]
		[Address(RVA = "0xB7C828", Offset = "0xB7C828", VA = "0xB7C828")]
		private void Update()
		{
		}

		[Token(Token = "0x60016F1")]
		[Address(RVA = "0xB7CC3C", Offset = "0xB7CC3C", VA = "0xB7CC3C")]
		public DoorHelper()
		{
		}
	}
	[Token(Token = "0x20003DE")]
	public class GrabberArea : MonoBehaviour
	{
		[Token(Token = "0x40019FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Grabber InArea;

		[Token(Token = "0x40019FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Grabber> grabbersInArea;

		[Token(Token = "0x60016F2")]
		[Address(RVA = "0xCF5B2C", Offset = "0xCF5B2C", VA = "0xCF5B2C")]
		private void Update()
		{
		}

		[Token(Token = "0x60016F3")]
		[Address(RVA = "0xCF5B58", Offset = "0xCF5B58", VA = "0xCF5B58")]
		public Grabber GetOpenGrabber()
		{
			return null;
		}

		[Token(Token = "0x60016F4")]
		[Address(RVA = "0xCF5CAC", Offset = "0xCF5CAC", VA = "0xCF5CAC")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60016F5")]
		[Address(RVA = "0xCF5E0C", Offset = "0xCF5E0C", VA = "0xCF5E0C")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60016F6")]
		[Address(RVA = "0xCF5F18", Offset = "0xCF5F18", VA = "0xCF5F18")]
		public GrabberArea()
		{
		}
	}
	[Token(Token = "0x20003DF")]
	public class HandCollision : MonoBehaviour
	{
		[Token(Token = "0x40019FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HandController HandControl;

		[Token(Token = "0x40019FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Grabber HandGrabber;

		[Token(Token = "0x40019FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool EnableHandCollision;

		[Token(Token = "0x40019FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool EnableCollisionOnPoint;

		[Token(Token = "0x4001A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool EnableCollisionOnFist;

		[Token(Token = "0x4001A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		public bool EnableCollisionOnAllPoses;

		[Token(Token = "0x4001A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool EnableCollisionDuringGrab;

		[Token(Token = "0x4001A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float PointAmount;

		[Token(Token = "0x4001A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float GripAmount;

		[Token(Token = "0x4001A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool MakingFist;

		[Token(Token = "0x4001A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Collider> handColliders;

		[Token(Token = "0x4001A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public PhysicMaterial physicMaterial;

		[Token(Token = "0x60016F7")]
		[Address(RVA = "0xCF6BD4", Offset = "0xCF6BD4", VA = "0xCF6BD4")]
		private void Start()
		{
		}

		[Token(Token = "0x60016F8")]
		[Address(RVA = "0xCF6D18", Offset = "0xCF6D18", VA = "0xCF6D18")]
		private void Update()
		{
		}

		[Token(Token = "0x60016F9")]
		[Address(RVA = "0xCF6EDC", Offset = "0xCF6EDC", VA = "0xCF6EDC")]
		public HandCollision()
		{
		}
	}
	[Token(Token = "0x20003E0")]
	public class HandController : MonoBehaviour
	{
		[Token(Token = "0x4001A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A5558", Offset = "0x7A5558")]
		public Transform HandAnchor;

		[Token(Token = "0x4001A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A5590", Offset = "0x7A5590")]
		public Grabber grabber;

		[Token(Token = "0x4001A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject PreviousHeldObject;

		[Token(Token = "0x4001A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool DoUpdateAnimationStates;

		[Token(Token = "0x4001A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool DoUpdateHandPoser;

		[Token(Token = "0x60016FA")]
		[Address(RVA = "0xCF6EF4", Offset = "0xCF6EF4", VA = "0xCF6EF4")]
		private void Start()
		{
		}

		[Token(Token = "0x60016FB")]
		[Address(RVA = "0xCF6FFC", Offset = "0xCF6FFC", VA = "0xCF6FFC")]
		public void Update()
		{
		}

		[Token(Token = "0x60016FC")]
		[Address(RVA = "0xCF7000", Offset = "0xCF7000", VA = "0xCF7000")]
		public HandController()
		{
		}
	}
	[Token(Token = "0x20003E1")]
	public class HandPhysics : MonoBehaviour
	{
		[Token(Token = "0x20003E2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x797DE4", Offset = "0x797DE4")]
		private sealed class <UnignoreAllCollisions>d__29 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandPhysics <>4__this;

			[Token(Token = "0x4001A26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Grabbable <thisGrabbable>5__2;

			[Token(Token = "0x17000310")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001717")]
				[Address(RVA = "0xB0C4E0", Offset = "0xB0C4E0", VA = "0xB0C4E0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000311")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001719")]
				[Address(RVA = "0xB0C528", Offset = "0xB0C528", VA = "0xB0C528", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001714")]
			[Address(RVA = "0xB0C3CC", Offset = "0xB0C3CC", VA = "0xB0C3CC")]
			[DebuggerHidden]
			public <UnignoreAllCollisions>d__29(int <>1__state)
			{
			}

			[Token(Token = "0x6001715")]
			[Address(RVA = "0xB0C3F8", Offset = "0xB0C3F8", VA = "0xB0C3F8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001716")]
			[Address(RVA = "0xB0C3FC", Offset = "0xB0C3FC", VA = "0xB0C3FC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001718")]
			[Address(RVA = "0xB0C4E8", Offset = "0xB0C4E8", VA = "0xB0C4E8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A55C8", Offset = "0x7A55C8")]
		public Transform AttachTo;

		[Token(Token = "0x4001A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A5600", Offset = "0x7A5600")]
		public float HandVelocity;

		[Token(Token = "0x4001A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A5638", Offset = "0x7A5638")]
		public bool DisableHandCollidersOnGrab;

		[Token(Token = "0x4001A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A5670", Offset = "0x7A5670")]
		public float SnapBackDistance;

		[Token(Token = "0x4001A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A56A8", Offset = "0x7A56A8")]
		public Grabber ThisGrabber;

		[Token(Token = "0x4001A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A56E0", Offset = "0x7A56E0")]
		public Grabber DisableGrabber;

		[Token(Token = "0x4001A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A5718", Offset = "0x7A5718")]
		public RemoteGrabber ThisRemoteGrabber;

		[Token(Token = "0x4001A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A5750", Offset = "0x7A5750")]
		public RemoteGrabber DisableRemoteGrabber;

		[Token(Token = "0x4001A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A5788", Offset = "0x7A5788")]
		public PhysicMaterial ColliderMaterial;

		[Token(Token = "0x4001A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform HandModel;

		[Token(Token = "0x4001A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform HandModelOffset;

		[Token(Token = "0x4001A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<Collider> handColliders;

		[Token(Token = "0x4001A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Rigidbody rigid;

		[Token(Token = "0x4001A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private ConfigurableJoint configJoint;

		[Token(Token = "0x4001A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Grabbable heldGrabbable;

		[Token(Token = "0x4001A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private List<Collider> collisions;

		[Token(Token = "0x4001A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private LineRenderer line;

		[Token(Token = "0x4001A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 localHandOffset;

		[Token(Token = "0x4001A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Vector3 localHandOffsetRotation;

		[Token(Token = "0x4001A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool wasHoldingObject;

		[Token(Token = "0x4001A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Transform _priorParent;

		[Token(Token = "0x4001A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Vector3 _priorLocalOffsetPosition;

		[Token(Token = "0x1700030F")]
		public bool HoldingObject
		{
			[Token(Token = "0x60016FD")]
			[Address(RVA = "0xF4F484", Offset = "0xF4F484", VA = "0xF4F484")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60016FE")]
		[Address(RVA = "0xF4F548", Offset = "0xF4F548", VA = "0xF4F548")]
		private void Start()
		{
		}

		[Token(Token = "0x60016FF")]
		[Address(RVA = "0xF4FAE0", Offset = "0xF4FAE0", VA = "0xF4FAE0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001700")]
		[Address(RVA = "0xF50010", Offset = "0xF50010", VA = "0xF50010")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001701")]
		[Address(RVA = "0xF4F888", Offset = "0xF4F888", VA = "0xF4F888")]
		private void initHandColliders()
		{
		}

		[Token(Token = "0x6001702")]
		[Address(RVA = "0xF4FDB4", Offset = "0xF4FDB4", VA = "0xF4FDB4")]
		private void drawDistanceLine()
		{
		}

		[Token(Token = "0x6001703")]
		[Address(RVA = "0xF4FF34", Offset = "0xF4FF34", VA = "0xF4FF34")]
		private void checkBreakDistance()
		{
		}

		[Token(Token = "0x6001704")]
		[Address(RVA = "0xF4FC04", Offset = "0xF4FC04", VA = "0xF4FC04")]
		private void updateHandGraphics()
		{
		}

		[Token(Token = "0x6001705")]
		[Address(RVA = "0xF50294", Offset = "0xF50294", VA = "0xF50294")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7AC808", Offset = "0x7AC808")]
		private IEnumerator UnignoreAllCollisions()
		{
			return null;
		}

		[Token(Token = "0x6001706")]
		[Address(RVA = "0xF5030C", Offset = "0xF5030C", VA = "0xF5030C")]
		public void IgnoreGrabbableCollisions(Grabbable grab, bool ignorePhysics)
		{
		}

		[Token(Token = "0x6001707")]
		[Address(RVA = "0xF50440", Offset = "0xF50440", VA = "0xF50440")]
		public void DisableHandColliders()
		{
		}

		[Token(Token = "0x6001708")]
		[Address(RVA = "0xF50588", Offset = "0xF50588", VA = "0xF50588")]
		public void EnableHandColliders()
		{
		}

		[Token(Token = "0x6001709")]
		[Address(RVA = "0xF506D0", Offset = "0xF506D0", VA = "0xF506D0", Slot = "4")]
		public virtual void OnGrabbedObject(Grabbable grabbedObject)
		{
		}

		[Token(Token = "0x600170A")]
		[Address(RVA = "0xF50720", Offset = "0xF50720", VA = "0xF50720", Slot = "5")]
		public virtual void LockLocalPosition()
		{
		}

		[Token(Token = "0x600170B")]
		[Address(RVA = "0xF5077C", Offset = "0xF5077C", VA = "0xF5077C", Slot = "6")]
		public virtual void UnlockLocalPosition()
		{
		}

		[Token(Token = "0x600170C")]
		[Address(RVA = "0xF507B0", Offset = "0xF507B0", VA = "0xF507B0", Slot = "7")]
		public virtual void OnReleasedObject(Grabbable grabbedObject)
		{
		}

		[Token(Token = "0x600170D")]
		[Address(RVA = "0xF50868", Offset = "0xF50868", VA = "0xF50868")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600170E")]
		[Address(RVA = "0xF50B08", Offset = "0xF50B08", VA = "0xF50B08", Slot = "8")]
		public virtual void LockOffset()
		{
		}

		[Token(Token = "0x600170F")]
		[Address(RVA = "0xF50B58", Offset = "0xF50B58", VA = "0xF50B58", Slot = "9")]
		public virtual void UnlockOffset()
		{
		}

		[Token(Token = "0x6001710")]
		[Address(RVA = "0xF50C1C", Offset = "0xF50C1C", VA = "0xF50C1C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001711")]
		[Address(RVA = "0xF50EE8", Offset = "0xF50EE8", VA = "0xF50EE8")]
		private void OnCollisionStay(Collision collision)
		{
		}

		[Token(Token = "0x6001712")]
		[Address(RVA = "0xF5104C", Offset = "0xF5104C", VA = "0xF5104C")]
		public bool IsValidCollision(Collider col)
		{
			return default(bool);
		}

		[Token(Token = "0x6001713")]
		[Address(RVA = "0xF51054", Offset = "0xF51054", VA = "0xF51054")]
		public HandPhysics()
		{
		}
	}
	[Token(Token = "0x20003E3")]
	public class HandRepresentationHelper : MonoBehaviour
	{
		[Token(Token = "0x4001A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A57C0", Offset = "0x7A57C0")]
		public Transform HandToToggle;

		[Token(Token = "0x4001A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A57F8", Offset = "0x7A57F8")]
		public Transform OtherHandTransform;

		[Token(Token = "0x4001A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A5830", Offset = "0x7A5830")]
		public float DistanceToShow;

		[Token(Token = "0x600171A")]
		[Address(RVA = "0xF52350", Offset = "0xF52350", VA = "0xF52350")]
		private void Update()
		{
		}

		[Token(Token = "0x600171B")]
		[Address(RVA = "0xF52400", Offset = "0xF52400", VA = "0xF52400")]
		public HandRepresentationHelper()
		{
		}
	}
	[Token(Token = "0x20003E4")]
	public class IgnoreColliders : MonoBehaviour
	{
		[Token(Token = "0x4001A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Collider> CollidersToIgnore;

		[Token(Token = "0x600171C")]
		[Address(RVA = "0xF56A28", Offset = "0xF56A28", VA = "0xF56A28")]
		private void Start()
		{
		}

		[Token(Token = "0x600171D")]
		[Address(RVA = "0xF56BD0", Offset = "0xF56BD0", VA = "0xF56BD0")]
		public IgnoreColliders()
		{
		}
	}
	[Token(Token = "0x20003E5")]
	public class InvalidTeleportArea : MonoBehaviour
	{
		[Token(Token = "0x600171E")]
		[Address(RVA = "0xF5E688", Offset = "0xF5E688", VA = "0xF5E688")]
		public InvalidTeleportArea()
		{
		}
	}
	[Token(Token = "0x20003E6")]
	public class JointHelper : MonoBehaviour
	{
		[Token(Token = "0x4001A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool LockXPosition;

		[Token(Token = "0x4001A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool LockYPosition;

		[Token(Token = "0x4001A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool LockZPosition;

		[Token(Token = "0x4001A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool LockXScale;

		[Token(Token = "0x4001A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool LockYScale;

		[Token(Token = "0x4001A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public bool LockZScale;

		[Token(Token = "0x4001A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
		public bool LockXRotation;

		[Token(Token = "0x4001A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
		public bool LockYRotation;

		[Token(Token = "0x4001A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool LockZRotation;

		[Token(Token = "0x4001A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 initialPosition;

		[Token(Token = "0x4001A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 initialRotation;

		[Token(Token = "0x4001A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 initialScale;

		[Token(Token = "0x4001A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 currentPosition;

		[Token(Token = "0x4001A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 currentScale;

		[Token(Token = "0x4001A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 currentRotation;

		[Token(Token = "0x600171F")]
		[Address(RVA = "0xF5ED98", Offset = "0xF5ED98", VA = "0xF5ED98")]
		private void Start()
		{
		}

		[Token(Token = "0x6001720")]
		[Address(RVA = "0xF5EE14", Offset = "0xF5EE14", VA = "0xF5EE14")]
		private void lockPosition()
		{
		}

		[Token(Token = "0x6001721")]
		[Address(RVA = "0xF5F004", Offset = "0xF5F004", VA = "0xF5F004")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001722")]
		[Address(RVA = "0xF5F008", Offset = "0xF5F008", VA = "0xF5F008")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001723")]
		[Address(RVA = "0xF5F00C", Offset = "0xF5F00C", VA = "0xF5F00C")]
		public JointHelper()
		{
		}
	}
	[Token(Token = "0x20003E7")]
	public class RagdollHelper : MonoBehaviour
	{
		[Token(Token = "0x4001A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform player;

		[Token(Token = "0x4001A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Collider> colliders;

		[Token(Token = "0x4001A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Collider playerCol;

		[Token(Token = "0x6001724")]
		[Address(RVA = "0xC86F74", Offset = "0xC86F74", VA = "0xC86F74")]
		private void Start()
		{
		}

		[Token(Token = "0x6001725")]
		[Address(RVA = "0xC8714C", Offset = "0xC8714C", VA = "0xC8714C")]
		public RagdollHelper()
		{
		}
	}
	[Token(Token = "0x20003E8")]
	public class ScaleMaterialHelper : MonoBehaviour
	{
		[Token(Token = "0x4001A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Renderer ren;

		[Token(Token = "0x4001A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector2 Tiling;

		[Token(Token = "0x4001A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2 Offset;

		[Token(Token = "0x6001726")]
		[Address(RVA = "0xC8D230", Offset = "0xC8D230", VA = "0xC8D230")]
		private void Start()
		{
		}

		[Token(Token = "0x6001727")]
		[Address(RVA = "0xC8D294", Offset = "0xC8D294", VA = "0xC8D294")]
		private void updateTexture()
		{
		}

		[Token(Token = "0x6001728")]
		[Address(RVA = "0xC8D3A4", Offset = "0xC8D3A4", VA = "0xC8D3A4")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001729")]
		[Address(RVA = "0xC8D3DC", Offset = "0xC8D3DC", VA = "0xC8D3DC")]
		public ScaleMaterialHelper()
		{
		}
	}
	[Token(Token = "0x20003E9")]
	public class StaticBatch : MonoBehaviour
	{
		[Token(Token = "0x4001A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material CombineMaterial;

		[Token(Token = "0x600172A")]
		[Address(RVA = "0xDC51EC", Offset = "0xDC51EC", VA = "0xDC51EC")]
		private void Start()
		{
		}

		[Token(Token = "0x600172B")]
		[Address(RVA = "0xDC5834", Offset = "0xDC5834", VA = "0xDC5834")]
		public StaticBatch()
		{
		}
	}
	[Token(Token = "0x20003EA")]
	public class TeleportDestination : MonoBehaviour
	{
		[Token(Token = "0x4001A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A5868", Offset = "0x7A5868")]
		public Transform DestinationTransform;

		[Token(Token = "0x4001A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A58A0", Offset = "0x7A58A0")]
		public bool ForcePlayerRotation;

		[Token(Token = "0x4001A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A58D8", Offset = "0x7A58D8")]
		public UnityEvent OnPlayerTeleported;

		[Token(Token = "0x600172C")]
		[Address(RVA = "0xDCDF68", Offset = "0xDCDF68", VA = "0xDCDF68")]
		public TeleportDestination()
		{
		}
	}
	[Token(Token = "0x20003EB")]
	public class TeleportPlayerOnEnter : MonoBehaviour
	{
		[Token(Token = "0x4001A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform TeleportDestination;

		[Token(Token = "0x600172D")]
		[Address(RVA = "0xDCF5B0", Offset = "0xDCF5B0", VA = "0xDCF5B0")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600172E")]
		[Address(RVA = "0xDCF700", Offset = "0xDCF700", VA = "0xDCF700")]
		public TeleportPlayerOnEnter()
		{
		}
	}
	[Token(Token = "0x20003EC")]
	public class UITrigger : MonoBehaviour
	{
		[Token(Token = "0x600172F")]
		[Address(RVA = "0xAC6C70", Offset = "0xAC6C70", VA = "0xAC6C70")]
		public UITrigger()
		{
		}
	}
	[Token(Token = "0x20003ED")]
	public class VRIFGrabpointUpdater : MonoBehaviour
	{
		[Token(Token = "0x4001A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A5910", Offset = "0x7A5910")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A5910", Offset = "0x7A5910")]
		public Vector3 PriorModelOffsetRightPosition;

		[Token(Token = "0x4001A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A5970", Offset = "0x7A5970")]
		public Vector3 NewModelOffsetRightPosition;

		[Token(Token = "0x4001A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A59A8", Offset = "0x7A59A8")]
		public Vector3 PriorModelOffsetRightRotation;

		[Token(Token = "0x4001A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A59E0", Offset = "0x7A59E0")]
		public Vector3 NewModelOffsetRightRotation;

		[Token(Token = "0x4001A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A5A18", Offset = "0x7A5A18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A5A18", Offset = "0x7A5A18")]
		public Vector3 PriorModelOffsetLeftPosition;

		[Token(Token = "0x4001A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A5A78", Offset = "0x7A5A78")]
		public Vector3 NewModelOffsetLeftPosition;

		[Token(Token = "0x4001A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A5AB0", Offset = "0x7A5AB0")]
		public Vector3 PriorModelOffsetLeftRotation;

		[Token(Token = "0x4001A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A5AE8", Offset = "0x7A5AE8")]
		public Vector3 NewModelOffsetLeftRotation;

		[Token(Token = "0x6001730")]
		[Address(RVA = "0xACBC60", Offset = "0xACBC60", VA = "0xACBC60")]
		private void Start()
		{
		}

		[Token(Token = "0x6001731")]
		[Address(RVA = "0xACBC64", Offset = "0xACBC64", VA = "0xACBC64")]
		public void ApplyGrabPointUpdate()
		{
		}

		[Token(Token = "0x6001732")]
		[Address(RVA = "0xACBF0C", Offset = "0xACBF0C", VA = "0xACBF0C")]
		public VRIFGrabpointUpdater()
		{
		}
	}
	[Token(Token = "0x20003EE")]
	public class UIPointer : MonoBehaviour
	{
		[Token(Token = "0x4001A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A5B20", Offset = "0x7A5B20")]
		public ControllerHand ControllerSide;

		[Token(Token = "0x4001A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A5B58", Offset = "0x7A5B58")]
		public bool AutoUpdateUITransforms;

		[Token(Token = "0x4001A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject cursor;

		[Token(Token = "0x4001A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject _cursor;

		[Token(Token = "0x4001A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A5B90", Offset = "0x7A5B90")]
		public bool HidePointerIfNoObjectsFound;

		[Token(Token = "0x4001A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A5BC8", Offset = "0x7A5BC8")]
		public float FixedPointerLength;

		[Token(Token = "0x4001A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A5C00", Offset = "0x7A5C00")]
		public bool CursorScaling;

		[Token(Token = "0x4001A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A5C38", Offset = "0x7A5C38")]
		public float CursorMinScale;

		[Token(Token = "0x4001A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float CursorMaxScale;

		[Token(Token = "0x4001A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 _cursorInitialLocalScale;

		[Token(Token = "0x4001A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A5C70", Offset = "0x7A5C70")]
		public float LineDistanceModifier;

		[Token(Token = "0x4001A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private VRUISystem uiSystem;

		[Token(Token = "0x4001A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private PointerEvents selectedPointerEvents;

		[Token(Token = "0x4001A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private PointerEventData data;

		[Token(Token = "0x4001A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A5CA8", Offset = "0x7A5CA8")]
		public LineRenderer lineRenderer;

		[Token(Token = "0x4001A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Camera mainCamera;

		[Token(Token = "0x6001733")]
		[Address(RVA = "0xAC61C8", Offset = "0xAC61C8", VA = "0xAC61C8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001734")]
		[Address(RVA = "0xAC6598", Offset = "0xAC6598", VA = "0xAC6598")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001735")]
		[Address(RVA = "0xAC662C", Offset = "0xAC662C", VA = "0xAC662C")]
		public void Update()
		{
		}

		[Token(Token = "0x6001736")]
		[Address(RVA = "0xAC6AD0", Offset = "0xAC6AD0", VA = "0xAC6AD0", Slot = "4")]
		public virtual void HidePointer()
		{
		}

		[Token(Token = "0x6001737")]
		[Address(RVA = "0xAC6C34", Offset = "0xAC6C34", VA = "0xAC6C34")]
		public UIPointer()
		{
		}
	}
	[Token(Token = "0x20003EF")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x797DF4", Offset = "0x797DF4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x797DF4", Offset = "0x797DF4")]
	public class VRCanvas : MonoBehaviour
	{
		[Token(Token = "0x6001738")]
		[Address(RVA = "0xAC940C", Offset = "0xAC940C", VA = "0xAC940C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001739")]
		[Address(RVA = "0xAC9480", Offset = "0xAC9480", VA = "0xAC9480")]
		public VRCanvas()
		{
		}
	}
	[Token(Token = "0x20003F0")]
	public class VRUISystem : BaseInputModule
	{
		[Token(Token = "0x4001A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A5CE0", Offset = "0x7A5CE0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A5CE0", Offset = "0x7A5CE0")]
		public ControllerHand SelectedHand;

		[Token(Token = "0x4001A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A5D40", Offset = "0x7A5D40")]
		public Transform LeftPointerTransform;

		[Token(Token = "0x4001A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A5D78", Offset = "0x7A5D78")]
		public Transform RightPointerTransform;

		[Token(Token = "0x4001A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A5DB0", Offset = "0x7A5DB0")]
		public List<ControllerBinding> ControllerInput;

		[Token(Token = "0x4001A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A5DE8", Offset = "0x7A5DE8")]
		public InputActionReference UIInputAction;

		[Token(Token = "0x4001A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A5E20", Offset = "0x7A5E20")]
		public bool AddPhysicsRaycaster;

		[Token(Token = "0x4001A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public LayerMask PhysicsRaycasterEventMask;

		[Token(Token = "0x4001A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7A5E58", Offset = "0x7A5E58")]
		public bool RightThumbstickScroll;

		[Token(Token = "0x4001A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A5E90", Offset = "0x7A5E90")]
		public GameObject PressingObject;

		[Token(Token = "0x4001A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public GameObject DraggingObject;

		[Token(Token = "0x4001A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public GameObject ReleasingObject;

		[Token(Token = "0x4001A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A5EC8", Offset = "0x7A5EC8")]
		private PointerEventData <EventData>k__BackingField;

		[Token(Token = "0x4001A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Camera cameraCaster;

		[Token(Token = "0x4001A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Transform _cameraCasterTransform;

		[Token(Token = "0x4001A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private GameObject _initialPressObject;

		[Token(Token = "0x4001A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool _lastInputDown;

		[Token(Token = "0x4001A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
		private bool inputDown;

		[Token(Token = "0x4001A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static VRUISystem _instance;

		[Token(Token = "0x4001A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private GameObject lastHoveredObject;

		[Token(Token = "0x17000312")]
		public PointerEventData EventData
		{
			[Token(Token = "0x600173A")]
			[Address(RVA = "0xACC5B0", Offset = "0xACC5B0", VA = "0xACC5B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AC8B8", Offset = "0x7AC8B8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600173B")]
			[Address(RVA = "0xACC5B8", Offset = "0xACC5B8", VA = "0xACC5B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AC8C8", Offset = "0x7AC8C8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000313")]
		public static VRUISystem Instance
		{
			[Token(Token = "0x600173C")]
			[Address(RVA = "0xAC6374", Offset = "0xAC6374", VA = "0xAC6374")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600173D")]
		[Address(RVA = "0xACC5C0", Offset = "0xACC5C0", VA = "0xACC5C0", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600173E")]
		[Address(RVA = "0xACC6BC", Offset = "0xACC6BC", VA = "0xACC6BC")]
		private void init()
		{
		}

		[Token(Token = "0x600173F")]
		[Address(RVA = "0xACC8F8", Offset = "0xACC8F8", VA = "0xACC8F8", Slot = "17")]
		public override void Process()
		{
		}

		[Token(Token = "0x6001740")]
		[Address(RVA = "0xACCCCC", Offset = "0xACCCCC", VA = "0xACCCCC", Slot = "26")]
		public virtual bool InputReady()
		{
			return default(bool);
		}

		[Token(Token = "0x6001741")]
		[Address(RVA = "0xACCE68", Offset = "0xACCE68", VA = "0xACCE68", Slot = "27")]
		public virtual bool CameraCasterReady()
		{
			return default(bool);
		}

		[Token(Token = "0x6001742")]
		[Address(RVA = "0xACCF0C", Offset = "0xACCF0C", VA = "0xACCF0C", Slot = "28")]
		public virtual void PressDown()
		{
		}

		[Token(Token = "0x6001743")]
		[Address(RVA = "0xACD174", Offset = "0xACD174", VA = "0xACD174", Slot = "29")]
		public virtual void Press()
		{
		}

		[Token(Token = "0x6001744")]
		[Address(RVA = "0xACD374", Offset = "0xACD374", VA = "0xACD374", Slot = "30")]
		public virtual void Release()
		{
		}

		[Token(Token = "0x6001745")]
		[Address(RVA = "0xACD60C", Offset = "0xACD60C", VA = "0xACD60C", Slot = "31")]
		public virtual void ClearAll()
		{
		}

		[Token(Token = "0x6001746")]
		[Address(RVA = "0xACD698", Offset = "0xACD698", VA = "0xACD698", Slot = "32")]
		public virtual void SetPressingObject(GameObject pressing)
		{
		}

		[Token(Token = "0x6001747")]
		[Address(RVA = "0xACD6D8", Offset = "0xACD6D8", VA = "0xACD6D8", Slot = "33")]
		public virtual void SetDraggingObject(GameObject dragging)
		{
		}

		[Token(Token = "0x6001748")]
		[Address(RVA = "0xACD718", Offset = "0xACD718", VA = "0xACD718", Slot = "34")]
		public virtual void SetReleasingObject(GameObject releasing)
		{
		}

		[Token(Token = "0x6001749")]
		[Address(RVA = "0xACD720", Offset = "0xACD720", VA = "0xACD720", Slot = "35")]
		public virtual void AssignCameraToAllCanvases(Camera cam)
		{
		}

		[Token(Token = "0x600174A")]
		[Address(RVA = "0xACD810", Offset = "0xACD810", VA = "0xACD810", Slot = "36")]
		public virtual void AddCanvas(Canvas canvas)
		{
		}

		[Token(Token = "0x600174B")]
		[Address(RVA = "0xACD824", Offset = "0xACD824", VA = "0xACD824", Slot = "37")]
		public virtual void AddCanvasToCamera(Canvas canvas, Camera cam)
		{
		}

		[Token(Token = "0x600174C")]
		[Address(RVA = "0xACD844", Offset = "0xACD844", VA = "0xACD844", Slot = "38")]
		public virtual void UpdateControllerHand(ControllerHand hand)
		{
		}

		[Token(Token = "0x600174D")]
		[Address(RVA = "0xACD97C", Offset = "0xACD97C", VA = "0xACD97C")]
		public VRUISystem()
		{
		}
	}
	[Token(Token = "0x20003F1")]
	public class DestroyIfPlayMode : MonoBehaviour
	{
		[Token(Token = "0x600174E")]
		[Address(RVA = "0xB79C70", Offset = "0xB79C70", VA = "0xB79C70")]
		private void Start()
		{
		}

		[Token(Token = "0x600174F")]
		[Address(RVA = "0xB79D34", Offset = "0xB79D34", VA = "0xB79D34")]
		public DestroyIfPlayMode()
		{
		}
	}
	[Token(Token = "0x20003F2")]
	public class VRUtils : MonoBehaviour
	{
		[Token(Token = "0x4001A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static VRUtils _instance;

		[Token(Token = "0x4001A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color DebugTextColor;

		[Token(Token = "0x4001A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform DebugTextHolder;

		[Token(Token = "0x4001A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float MaxTextEntries;

		[Token(Token = "0x17000314")]
		public static VRUtils Instance
		{
			[Token(Token = "0x6001750")]
			[Address(RVA = "0xACDA40", Offset = "0xACDA40", VA = "0xACDA40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001751")]
		[Address(RVA = "0xACDBC8", Offset = "0xACDBC8", VA = "0xACDBC8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001752")]
		[Address(RVA = "0xACDCD8", Offset = "0xACDCD8", VA = "0xACDCD8")]
		public void Log(string msg)
		{
		}

		[Token(Token = "0x6001753")]
		[Address(RVA = "0xACE06C", Offset = "0xACE06C", VA = "0xACE06C")]
		public AudioSource PlaySpatialClipAt(AudioClip clip, Vector3 pos, float volume, float spatialBlend = 1f, float randomizePitch = 0f)
		{
			return null;
		}

		[Token(Token = "0x6001754")]
		[Address(RVA = "0xACE248", Offset = "0xACE248", VA = "0xACE248")]
		private float getRandomizedPitch(float randomAmount)
		{
			return default(float);
		}

		[Token(Token = "0x6001755")]
		[Address(RVA = "0xACE290", Offset = "0xACE290", VA = "0xACE290")]
		public VRUtils()
		{
		}
	}
	[Token(Token = "0x20003F3")]
	public class Bullet : MonoBehaviour
	{
		[Token(Token = "0x6001756")]
		[Address(RVA = "0xAF0EE0", Offset = "0xAF0EE0", VA = "0xAF0EE0")]
		public Bullet()
		{
		}
	}
}
namespace AdvancedCustomizableSystem
{
	[Token(Token = "0x20003F4")]
	public class CombinedCharacter : ScriptableObject
	{
		[Token(Token = "0x4001A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Mesh> combinedMeshes;

		[Token(Token = "0x4001A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Material> materials;

		[Token(Token = "0x4001A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public Material bodyMat;

		[Token(Token = "0x4001A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public CharacterCustomizationSetup characterCustomizationSetup;

		[Token(Token = "0x4001A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public RuntimeAnimatorController animator;

		[Token(Token = "0x4001A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public UnityEngine.Avatar avatar;

		[Token(Token = "0x4001A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public Dictionary<string, float> blendshapes;

		[Token(Token = "0x4001A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public Vector3 hipsScale;

		[Token(Token = "0x4001A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[HideInInspector]
		public Vector3 headScale;

		[Token(Token = "0x4001A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject empty_rig;

		[Token(Token = "0x4001A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public UnityEngine.Object prefab;

		[Token(Token = "0x6001757")]
		[Address(RVA = "0xB68BFC", Offset = "0xB68BFC", VA = "0xB68BFC")]
		public void ClearData()
		{
		}

		[Token(Token = "0x6001758")]
		[Address(RVA = "0xB68C00", Offset = "0xB68C00", VA = "0xB68C00")]
		public void CreatePrefab()
		{
		}

		[Token(Token = "0x6001759")]
		[Address(RVA = "0xB68C04", Offset = "0xB68C04", VA = "0xB68C04")]
		public CombinedCharacter()
		{
		}
	}
	[Token(Token = "0x20003F5")]
	public class RootMotion : MonoBehaviour
	{
		[Token(Token = "0x4001A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform parentTransform;

		[Token(Token = "0x4001A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator animator;

		[Token(Token = "0x600175A")]
		[Address(RVA = "0xC8BF6C", Offset = "0xC8BF6C", VA = "0xC8BF6C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600175B")]
		[Address(RVA = "0xC8BFD0", Offset = "0xC8BFD0", VA = "0xC8BFD0")]
		public void GetRootObject()
		{
		}

		[Token(Token = "0x600175C")]
		[Address(RVA = "0xC8C0FC", Offset = "0xC8C0FC", VA = "0xC8C0FC")]
		private void OnAnimatorMove()
		{
		}

		[Token(Token = "0x600175D")]
		[Address(RVA = "0xC8C194", Offset = "0xC8C194", VA = "0xC8C194")]
		public RootMotion()
		{
		}
	}
}
namespace AdvancedPeopleSystem
{
	[Token(Token = "0x20003F6")]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x797E88", Offset = "0x797E88")]
	public class CharacterCustomization : MonoBehaviour
	{
		[Token(Token = "0x20003F7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x797ED8", Offset = "0x797ED8")]
		private sealed class <>c__DisplayClass42_0
		{
			[Token(Token = "0x4001AA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string objType;

			[Token(Token = "0x60017A4")]
			[Address(RVA = "0xB06984", Offset = "0xB06984", VA = "0xB06984")]
			public <>c__DisplayClass42_0()
			{
			}

			[Token(Token = "0x60017A5")]
			[Address(RVA = "0xB0698C", Offset = "0xB0698C", VA = "0xB0698C")]
			internal bool <InitializeMeshes>b__0(CharacterPart f)
			{
				return default(bool);
			}

			[Token(Token = "0x60017A6")]
			[Address(RVA = "0xB069B0", Offset = "0xB069B0", VA = "0xB069B0")]
			internal bool <InitializeMeshes>b__2(ClothesAnchor f)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20003F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x797EE8", Offset = "0x797EE8")]
		private sealed class <>c
		{
			[Token(Token = "0x4001AA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001AA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Transform, bool> <>9__42_1;

			[Token(Token = "0x4001AA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<SkinnedMeshRenderer> <>9__77_2;

			[Token(Token = "0x4001AA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Action<SkinnedMeshRenderer> <>9__77_3;

			[Token(Token = "0x4001AA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Action<SkinnedMeshRenderer> <>9__77_4;

			[Token(Token = "0x4001AAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Action<SkinnedMeshRenderer> <>9__78_1;

			[Token(Token = "0x4001AAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Action<SkinnedMeshRenderer> <>9__78_2;

			[Token(Token = "0x60017A8")]
			[Address(RVA = "0xB06704", Offset = "0xB06704", VA = "0xB06704")]
			public <>c()
			{
			}

			[Token(Token = "0x60017A9")]
			[Address(RVA = "0xB0670C", Offset = "0xB0670C", VA = "0xB0670C")]
			internal bool <InitializeMeshes>b__42_1(Transform f)
			{
				return default(bool);
			}

			[Token(Token = "0x60017AA")]
			[Address(RVA = "0xB06778", Offset = "0xB06778", VA = "0xB06778")]
			internal void <BakeCharacter>b__77_2(SkinnedMeshRenderer m)
			{
			}

			[Token(Token = "0x60017AB")]
			[Address(RVA = "0xB067C4", Offset = "0xB067C4", VA = "0xB067C4")]
			internal void <BakeCharacter>b__77_3(SkinnedMeshRenderer m)
			{
			}

			[Token(Token = "0x60017AC")]
			[Address(RVA = "0xB067F4", Offset = "0xB067F4", VA = "0xB067F4")]
			internal void <BakeCharacter>b__77_4(SkinnedMeshRenderer m)
			{
			}

			[Token(Token = "0x60017AD")]
			[Address(RVA = "0xB06824", Offset = "0xB06824", VA = "0xB06824")]
			internal void <ClearBake>b__78_1(SkinnedMeshRenderer m)
			{
			}

			[Token(Token = "0x60017AE")]
			[Address(RVA = "0xB068D4", Offset = "0xB068D4", VA = "0xB068D4")]
			internal void <ClearBake>b__78_2(SkinnedMeshRenderer m)
			{
			}
		}

		[Token(Token = "0x20003F9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x797EF8", Offset = "0x797EF8")]
		private sealed class <>c__DisplayClass43_0
		{
			[Token(Token = "0x20003FA")]
			private sealed class <<UpdateSkinnedMeshesOffscreenBounds>g__UpdateBounds|0>d : IEnumerator<object>, IEnumerator, IDisposable
			{
				[Token(Token = "0x4001AAE")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private int <>1__state;

				[Token(Token = "0x4001AAF")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private object <>2__current;

				[Token(Token = "0x4001AB0")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public <>c__DisplayClass43_0 <>4__this;

				[Token(Token = "0x17000316")]
				private object System.Collections.Generic.IEnumerator<System.Object>.Current
				{
					[Token(Token = "0x60017B4")]
					[Address(RVA = "0x1E802E8", Offset = "0x1E802E8", VA = "0x1E802E8", Slot = "4")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x17000317")]
				private object System.Collections.IEnumerator.Current
				{
					[Token(Token = "0x60017B6")]
					[Address(RVA = "0x1E80330", Offset = "0x1E80330", VA = "0x1E80330", Slot = "7")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x60017B1")]
				[Address(RVA = "0x1E7FFF8", Offset = "0x1E7FFF8", VA = "0x1E7FFF8")]
				[DebuggerHidden]
				public <<UpdateSkinnedMeshesOffscreenBounds>g__UpdateBounds|0>d(int <>1__state)
				{
				}

				[Token(Token = "0x60017B2")]
				[Address(RVA = "0x1E80024", Offset = "0x1E80024", VA = "0x1E80024", Slot = "5")]
				[DebuggerHidden]
				private void System.IDisposable.Dispose()
				{
				}

				[Token(Token = "0x60017B3")]
				[Address(RVA = "0x1E80028", Offset = "0x1E80028", VA = "0x1E80028", Slot = "6")]
				private bool MoveNext()
				{
					return default(bool);
				}

				[Token(Token = "0x60017B5")]
				[Address(RVA = "0x1E802F0", Offset = "0x1E802F0", VA = "0x1E802F0", Slot = "8")]
				[DebuggerHidden]
				private void System.Collections.IEnumerator.Reset()
				{
				}
			}

			[Token(Token = "0x4001AAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SkinnedMeshRenderer mesh;

			[Token(Token = "0x4001AAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public CharacterCustomization <>4__this;

			[Token(Token = "0x60017AF")]
			[Address(RVA = "0xB06A74", Offset = "0xB06A74", VA = "0xB06A74")]
			public <>c__DisplayClass43_0()
			{
			}

			[Token(Token = "0x60017B0")]
			[Address(RVA = "0xB06A7C", Offset = "0xB06A7C", VA = "0xB06A7C")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7AC908", Offset = "0x7AC908")]
			internal IEnumerator <UpdateSkinnedMeshesOffscreenBounds>g__UpdateBounds|0()
			{
				return null;
			}
		}

		[Token(Token = "0x20003FB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x797F08", Offset = "0x797F08")]
		private sealed class <>c__DisplayClass83_0
		{
			[Token(Token = "0x4001AB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string name;

			[Token(Token = "0x60017B7")]
			[Address(RVA = "0xB06AF4", Offset = "0xB06AF4", VA = "0xB06AF4")]
			public <>c__DisplayClass83_0()
			{
			}

			[Token(Token = "0x60017B8")]
			[Address(RVA = "0xB06AFC", Offset = "0xB06AFC", VA = "0xB06AFC")]
			internal bool <GetElementsPreset>b__0(CharacterElementsPreset f)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public bool isSettingsExpanded;

		[Token(Token = "0x4001A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CharacterSettings selectedsettings;

		[Token(Token = "0x4001A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private CharacterSettings _settings;

		[Token(Token = "0x4001A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<CharacterPart> characterParts;

		[Token(Token = "0x4001A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string prefabPath;

		[Token(Token = "0x4001A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		public CharacterInstanceStatus instanceStatus;

		[Token(Token = "0x4001A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform originHip;

		[Token(Token = "0x4001A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform headHip;

		[Token(Token = "0x4001A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<ClothesAnchor> clothesAnchors;

		[Token(Token = "0x4001A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Animator animator;

		[Token(Token = "0x4001A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public CharacterSelectedElements characterSelectedElements;

		[Token(Token = "0x4001A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float heightValue;

		[Token(Token = "0x4001A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float headSizeValue;

		[Token(Token = "0x4001A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float feetOffset;

		[Token(Token = "0x4001A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public List<CharacterBlendshapeData> characterBlendshapeDatas;

		[Token(Token = "0x4001A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Color Skin;

		[Token(Token = "0x4001A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Color Eye;

		[Token(Token = "0x4001A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Color Hair;

		[Token(Token = "0x4001A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Color Underpants;

		[Token(Token = "0x4001A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Color OralCavity;

		[Token(Token = "0x4001A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public Color Teeth;

		[Token(Token = "0x4001A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public MaterialPropertyBlock bodyPropertyBlock;

		[Token(Token = "0x4001A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public CurrentBlendshapeAnimation currentBlendshapeAnimation;

		[Token(Token = "0x4001A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public CombinerState CurrentCombinerState;

		[Token(Token = "0x4001A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public CharacterPreBuilt combinedCharacter;

		[Token(Token = "0x4001A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public Transform ProbesAnchorOverride;

		[Token(Token = "0x4001A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public CharacterGeneratorSettings CharacterGenerator_settings;

		[Token(Token = "0x4001A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public bool UpdateWhenOffscreenMeshes;

		[Token(Token = "0x4001A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[SerializeField]
		public int MinLODLevels;

		[Token(Token = "0x4001A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		public int MaxLODLevels;

		[Token(Token = "0x4001A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private LODGroup _lodGroup;

		[Token(Token = "0x4001AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public Transform _transform;

		[Token(Token = "0x4001AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public bool applyFeetOffset;

		[Token(Token = "0x4001AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x139")]
		public bool notAPP2Shader;

		[Token(Token = "0x4001AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private GameObject prebuiltPrefab;

		[Token(Token = "0x17000315")]
		public CharacterSettings Settings
		{
			[Token(Token = "0x600175E")]
			[Address(RVA = "0xF0D0F8", Offset = "0xF0D0F8", VA = "0xF0D0F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600175F")]
		[Address(RVA = "0xF0D100", Offset = "0xF0D100", VA = "0xF0D100")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001760")]
		[Address(RVA = "0xF0D374", Offset = "0xF0D374", VA = "0xF0D374")]
		private void Update()
		{
		}

		[Token(Token = "0x6001761")]
		[Address(RVA = "0xF0D570", Offset = "0xF0D570", VA = "0xF0D570")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001762")]
		[Address(RVA = "0xF0D378", Offset = "0xF0D378", VA = "0xF0D378")]
		public void AnimationTick()
		{
		}

		[Token(Token = "0x6001763")]
		[Address(RVA = "0xF0E028", Offset = "0xF0E028", VA = "0xF0E028")]
		public void SwitchCharacterSettings(int settingsIndex)
		{
		}

		[Token(Token = "0x6001764")]
		[Address(RVA = "0xF0F9D0", Offset = "0xF0F9D0", VA = "0xF0F9D0")]
		public void SwitchCharacterSettings(string selectorName)
		{
		}

		[Token(Token = "0x6001765")]
		[Address(RVA = "0xF0E0DC", Offset = "0xF0E0DC", VA = "0xF0E0DC")]
		public void InitializeMeshes([Optional] CharacterSettings newSettings, bool resetAll = true)
		{
		}

		[Token(Token = "0x6001766")]
		[Address(RVA = "0xF0D180", Offset = "0xF0D180", VA = "0xF0D180")]
		public void UpdateSkinnedMeshesOffscreenBounds()
		{
		}

		[Token(Token = "0x6001767")]
		[Address(RVA = "0xF10C68", Offset = "0xF10C68", VA = "0xF10C68")]
		public List<CharacterSettingsSelector> GetCharacterSettingsSelectors()
		{
			return null;
		}

		[Token(Token = "0x6001768")]
		[Address(RVA = "0xF10C84", Offset = "0xF10C84", VA = "0xF10C84")]
		public void ResetBodyMaterial()
		{
		}

		[Token(Token = "0x6001769")]
		[Address(RVA = "0xF11A04", Offset = "0xF11A04", VA = "0xF11A04")]
		public void InitColors()
		{
		}

		[Token(Token = "0x600176A")]
		[Address(RVA = "0xF12008", Offset = "0xF12008", VA = "0xF12008")]
		public void ResetBodyColors()
		{
		}

		[Token(Token = "0x600176B")]
		[Address(RVA = "0xF0D5C8", Offset = "0xF0D5C8", VA = "0xF0D5C8")]
		public void SetBlendshapeValue(CharacterBlendShapeType type, float weight, [Optional] string[] forPart, [Optional] CharacterElementType[] forClothPart)
		{
		}

		[Token(Token = "0x600176C")]
		[Address(RVA = "0xF123B8", Offset = "0xF123B8", VA = "0xF123B8")]
		public void ForceLOD(int lodLevel)
		{
		}

		[Token(Token = "0x600176D")]
		[Address(RVA = "0xF123F4", Offset = "0xF123F4", VA = "0xF123F4")]
		public void SetElementByIndex(CharacterElementType type, int index)
		{
		}

		[Token(Token = "0x600176E")]
		[Address(RVA = "0xF14428", Offset = "0xF14428", VA = "0xF14428")]
		public void ClearElement(CharacterElementType type)
		{
		}

		[Token(Token = "0x600176F")]
		[Address(RVA = "0xF14450", Offset = "0xF14450", VA = "0xF14450")]
		public void SetHeight(float height)
		{
		}

		[Token(Token = "0x6001770")]
		[Address(RVA = "0xF14510", Offset = "0xF14510", VA = "0xF14510")]
		public void SetHeadSize(float size)
		{
		}

		[Token(Token = "0x6001771")]
		[Address(RVA = "0xF0D5AC", Offset = "0xF0D5AC", VA = "0xF0D5AC")]
		public void SetFeetOffset(Vector3 offset)
		{
		}

		[Token(Token = "0x6001772")]
		[Address(RVA = "0xF12D40", Offset = "0xF12D40", VA = "0xF12D40")]
		private void SetHairByIndex(int index)
		{
		}

		[Token(Token = "0x6001773")]
		[Address(RVA = "0xF1343C", Offset = "0xF1343C", VA = "0xF1343C")]
		private void SetBeardByIndex(int index)
		{
		}

		[Token(Token = "0x6001774")]
		[Address(RVA = "0xF118C0", Offset = "0xF118C0", VA = "0xF118C0")]
		public ClothesAnchor GetClothesAnchor(CharacterElementType type)
		{
			return null;
		}

		[Token(Token = "0x6001775")]
		[Address(RVA = "0xF11610", Offset = "0xF11610", VA = "0xF11610")]
		public CharacterPart GetCharacterPart(string name)
		{
			return null;
		}

		[Token(Token = "0x6001776")]
		[Address(RVA = "0xF145F8", Offset = "0xF145F8", VA = "0xF145F8")]
		public List<SkinnedMeshRenderer> GetAllMeshesByLod(int lod)
		{
			return null;
		}

		[Token(Token = "0x6001777")]
		[Address(RVA = "0xF10998", Offset = "0xF10998", VA = "0xF10998")]
		public List<SkinnedMeshRenderer> GetAllMeshes()
		{
			return null;
		}

		[Token(Token = "0x6001778")]
		[Address(RVA = "0xF14968", Offset = "0xF14968", VA = "0xF14968")]
		public List<SkinnedMeshRenderer> GetAllMeshes(bool onlyBodyMeshes = false, [Optional] string[] excludeNames)
		{
			return null;
		}

		[Token(Token = "0x6001779")]
		[Address(RVA = "0xF14054", Offset = "0xF14054", VA = "0xF14054")]
		public void HideParts(string[] parts)
		{
		}

		[Token(Token = "0x600177A")]
		[Address(RVA = "0xF13998", Offset = "0xF13998", VA = "0xF13998")]
		public void UnHideParts(string[] parts, CharacterElementType hidePartsForElement)
		{
		}

		[Token(Token = "0x600177B")]
		[Address(RVA = "0xF11B48", Offset = "0xF11B48", VA = "0xF11B48")]
		public void SetBodyColor(BodyColorPart bodyColorPart, Color color)
		{
		}

		[Token(Token = "0x600177C")]
		[Address(RVA = "0xF14C94", Offset = "0xF14C94", VA = "0xF14C94")]
		public Color GetBodyColor(BodyColorPart bodyColorPart)
		{
			return default(Color);
		}

		[Token(Token = "0x600177D")]
		[Address(RVA = "0xF14D14", Offset = "0xF14D14", VA = "0xF14D14")]
		public void SetCharacterSetup(CharacterCustomizationSetup characterCustomizationSetup)
		{
		}

		[Token(Token = "0x600177E")]
		[Address(RVA = "0xF1520C", Offset = "0xF1520C", VA = "0xF1520C")]
		public CharacterCustomizationSetup GetSetup()
		{
			return null;
		}

		[Token(Token = "0x600177F")]
		[Address(RVA = "0xF15828", Offset = "0xF15828", VA = "0xF15828")]
		public void ApplySavedCharacterData(SavedCharacterData data)
		{
		}

		[Token(Token = "0x6001780")]
		[Address(RVA = "0xF15840", Offset = "0xF15840", VA = "0xF15840")]
		public void LoadCharacterFromFile(string path)
		{
		}

		[Token(Token = "0x6001781")]
		[Address(RVA = "0xF15EC4", Offset = "0xF15EC4", VA = "0xF15EC4")]
		public List<SavedCharacterData> GetSavedCharacterDatas(string path = "")
		{
			return null;
		}

		[Token(Token = "0x6001782")]
		[Address(RVA = "0xF161E0", Offset = "0xF161E0", VA = "0xF161E0")]
		public void ClearSavedData(SavedCharacterData data)
		{
		}

		[Token(Token = "0x6001783")]
		[Address(RVA = "0xF16224", Offset = "0xF16224", VA = "0xF16224")]
		public void ClearSavedData()
		{
		}

		[Token(Token = "0x6001784")]
		[Address(RVA = "0xF163DC", Offset = "0xF163DC", VA = "0xF163DC")]
		public void SaveCharacterToFile(CharacterCustomizationSetup.CharacterFileSaveFormat format, string path = "", string name = "")
		{
		}

		[Token(Token = "0x6001785")]
		[Address(RVA = "0xF13314", Offset = "0xF13314", VA = "0xF13314")]
		public void RecalculateShapes()
		{
		}

		[Token(Token = "0x6001786")]
		[Address(RVA = "0xF16DE8", Offset = "0xF16DE8", VA = "0xF16DE8")]
		public void EditorSavePreBuiltPrefab()
		{
		}

		[Token(Token = "0x6001787")]
		[Address(RVA = "0xF16E5C", Offset = "0xF16E5C", VA = "0xF16E5C")]
		public void BakeCharacter(bool usePreBuiltMeshes = false)
		{
		}

		[Token(Token = "0x6001788")]
		[Address(RVA = "0xF191A4", Offset = "0xF191A4", VA = "0xF191A4")]
		public void ClearBake()
		{
		}

		[Token(Token = "0x6001789")]
		[Address(RVA = "0xF1021C", Offset = "0xF1021C", VA = "0xF1021C")]
		public void RecalculateLOD()
		{
		}

		[Token(Token = "0x600178A")]
		[Address(RVA = "0xF196F0", Offset = "0xF196F0", VA = "0xF196F0")]
		public void SetLODRange(int minLod, int maxLod)
		{
		}

		[Token(Token = "0x600178B")]
		[Address(RVA = "0xF13EEC", Offset = "0xF13EEC", VA = "0xF13EEC")]
		public bool IsBaked()
		{
			return default(bool);
		}

		[Token(Token = "0x600178C")]
		[Address(RVA = "0xF11810", Offset = "0xF11810", VA = "0xF11810")]
		public CharacterElementsPreset GetElementsPreset(CharacterElementType type, int index)
		{
			return null;
		}

		[Token(Token = "0x600178D")]
		[Address(RVA = "0xF197D8", Offset = "0xF197D8", VA = "0xF197D8")]
		public CharacterElementsPreset GetElementsPreset(CharacterElementType type, string name)
		{
			return null;
		}

		[Token(Token = "0x600178E")]
		[Address(RVA = "0xF1971C", Offset = "0xF1971C", VA = "0xF1971C")]
		public List<CharacterElementsPreset> GetElementsPresets(CharacterElementType type)
		{
			return null;
		}

		[Token(Token = "0x600178F")]
		[Address(RVA = "0xF19908", Offset = "0xF19908", VA = "0xF19908")]
		public void PlayBlendshapeAnimation(string animationName, float duration = 1f, float weightPower = 1f)
		{
		}

		[Token(Token = "0x6001790")]
		[Address(RVA = "0xF19CC4", Offset = "0xF19CC4", VA = "0xF19CC4")]
		public void StopBlendshapeAnimations()
		{
		}

		[Token(Token = "0x6001791")]
		[Address(RVA = "0xF0FC9C", Offset = "0xF0FC9C", VA = "0xF0FC9C")]
		public void ResetAll(bool ignore_settingsDefaultElements = true)
		{
		}

		[Token(Token = "0x6001792")]
		[Address(RVA = "0xF19E84", Offset = "0xF19E84", VA = "0xF19E84")]
		public void Randomize()
		{
		}

		[Token(Token = "0x6001793")]
		[Address(RVA = "0xF1A4C8", Offset = "0xF1A4C8", VA = "0xF1A4C8")]
		public Animator GetAnimator()
		{
			return null;
		}

		[Token(Token = "0x6001794")]
		[Address(RVA = "0xF0FAA0", Offset = "0xF0FAA0", VA = "0xF0FAA0")]
		public void UnlockPrefab()
		{
		}

		[Token(Token = "0x6001795")]
		[Address(RVA = "0xF10990", Offset = "0xF10990", VA = "0xF10990")]
		public void LockPrefab(string custompath = "")
		{
		}

		[Token(Token = "0x6001796")]
		[Address(RVA = "0xF19694", Offset = "0xF19694", VA = "0xF19694")]
		public void ApplyPrefab()
		{
		}

		[Token(Token = "0x6001797")]
		[Address(RVA = "0xF1A4D0", Offset = "0xF1A4D0", VA = "0xF1A4D0")]
		public void RevertBonesChanges()
		{
		}

		[Token(Token = "0x6001798")]
		[Address(RVA = "0xF1A6A4", Offset = "0xF1A6A4", VA = "0xF1A6A4")]
		public void ApplyPrefabInPlaymode()
		{
		}

		[Token(Token = "0x6001799")]
		[Address(RVA = "0xF1A6A8", Offset = "0xF1A6A8", VA = "0xF1A6A8")]
		public void UpdateActualCharacterInstanceStatus(bool igroneUserNonPrefab = false)
		{
		}

		[Token(Token = "0x600179A")]
		[Address(RVA = "0xF1A6B0", Offset = "0xF1A6B0", VA = "0xF1A6B0")]
		public CharacterInstanceStatus GetCharacterInstanceStatus()
		{
			return default(CharacterInstanceStatus);
		}

		[Token(Token = "0x600179B")]
		[Address(RVA = "0xF1A6B8", Offset = "0xF1A6B8", VA = "0xF1A6B8")]
		public void SetNewCharacterInstanceStatus(CharacterInstanceStatus characterInstanceStatus)
		{
		}

		[Token(Token = "0x600179C")]
		[Address(RVA = "0xF12274", Offset = "0xF12274", VA = "0xF12274")]
		public CharacterBlendshapeData GetBlendshapeData(CharacterBlendShapeType type)
		{
			return null;
		}

		[Token(Token = "0x600179D")]
		[Address(RVA = "0xF13F00", Offset = "0xF13F00", VA = "0xF13F00")]
		public CharacterBlendshapeData GetBlendshapeData(string name)
		{
			return null;
		}

		[Token(Token = "0x600179E")]
		[Address(RVA = "0xF1A6C0", Offset = "0xF1A6C0", VA = "0xF1A6C0")]
		public List<CharacterBlendshapeData> GetBlendshapeDatasByGroup(CharacterBlendShapeGroup group)
		{
			return null;
		}

		[Token(Token = "0x600179F")]
		[Address(RVA = "0xF0FAA8", Offset = "0xF0FAA8", VA = "0xF0FAA8")]
		private void DestroyObjects(UnityEngine.Object[] objects)
		{
		}

		[Token(Token = "0x60017A0")]
		[Address(RVA = "0xF1A858", Offset = "0xF1A858", VA = "0xF1A858")]
		public CharacterCustomization()
		{
		}

		[Token(Token = "0x60017A1")]
		[Address(RVA = "0xF18AC4", Offset = "0xF18AC4", VA = "0xF18AC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AC8D8", Offset = "0x7AC8D8")]
		private void <BakeCharacter>g__MeshesProcess|77_0(bool usePreBuilt)
		{
		}

		[Token(Token = "0x60017A2")]
		[Address(RVA = "0xF1A9F8", Offset = "0xF1A9F8", VA = "0xF1A9F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AC8E8", Offset = "0x7AC8E8")]
		private void <BakeCharacter>b__77_1(List<SkinnedMeshRenderer> meshes)
		{
		}

		[Token(Token = "0x60017A3")]
		[Address(RVA = "0xF1AA00", Offset = "0xF1AA00", VA = "0xF1AA00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7AC8F8", Offset = "0x7AC8F8")]
		private void <ClearBake>b__78_0(SkinnedMeshRenderer m)
		{
		}
	}
	[Token(Token = "0x20003FC")]
	public enum CharacterElementType
	{
		[Token(Token = "0x4001AB3")]
		Hat,
		[Token(Token = "0x4001AB4")]
		Shirt,
		[Token(Token = "0x4001AB5")]
		Pants,
		[Token(Token = "0x4001AB6")]
		Shoes,
		[Token(Token = "0x4001AB7")]
		Accessory,
		[Token(Token = "0x4001AB8")]
		Hair,
		[Token(Token = "0x4001AB9")]
		Beard,
		[Token(Token = "0x4001ABA")]
		Item1
	}
	[Token(Token = "0x20003FD")]
	public enum CombinerState : byte
	{
		[Token(Token = "0x4001ABC")]
		NotCombined,
		[Token(Token = "0x4001ABD")]
		InProgressCombineMesh,
		[Token(Token = "0x4001ABE")]
		InProgressBlendshapeTransfer,
		[Token(Token = "0x4001ABF")]
		InProgressClear,
		[Token(Token = "0x4001AC0")]
		Combined,
		[Token(Token = "0x4001AC1")]
		UsedPreBuitMeshes
	}
	[Token(Token = "0x20003FE")]
	public enum BodyColorPart
	{
		[Token(Token = "0x4001AC3")]
		Skin,
		[Token(Token = "0x4001AC4")]
		Eye,
		[Token(Token = "0x4001AC5")]
		Hair,
		[Token(Token = "0x4001AC6")]
		Underpants,
		[Token(Token = "0x4001AC7")]
		OralCavity,
		[Token(Token = "0x4001AC8")]
		Teeth
	}
	[Serializable]
	[Token(Token = "0x20003FF")]
	public class CharacterPart
	{
		[Token(Token = "0x4001AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4001ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<SkinnedMeshRenderer> skinnedMesh;

		[Token(Token = "0x60017B9")]
		[Address(RVA = "0xF0FB94", Offset = "0xF0FB94", VA = "0xF0FB94")]
		public CharacterPart()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000400")]
	public class ClothesAnchor
	{
		[Token(Token = "0x4001ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CharacterElementType partType;

		[Token(Token = "0x4001ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<SkinnedMeshRenderer> skinnedMesh;

		[Token(Token = "0x60017BA")]
		[Address(RVA = "0xF0FC18", Offset = "0xF0FC18", VA = "0xF0FC18")]
		public ClothesAnchor()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000401")]
	public class BlendshapeEmotionValue
	{
		[Token(Token = "0x4001ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CharacterBlendShapeType BlendType;

		[Token(Token = "0x4001ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7A5F98", Offset = "0x7A5F98")]
		public float BlendValue;

		[Token(Token = "0x4001ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationCurve BlendAnimationCurve;

		[Token(Token = "0x60017BB")]
		[Address(RVA = "0xAEF7E8", Offset = "0xAEF7E8", VA = "0xAEF7E8")]
		public BlendshapeEmotionValue()
		{
		}
	}
	[Token(Token = "0x2000402")]
	public class CurrentBlendshapeAnimation
	{
		[Token(Token = "0x4001AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CharacterAnimationPreset preset;

		[Token(Token = "0x4001AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<BlendshapeEmotionValue> blendShapesTemp;

		[Token(Token = "0x4001AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float timer;

		[Token(Token = "0x60017BC")]
		[Address(RVA = "0xB74178", Offset = "0xB74178", VA = "0xB74178")]
		public CurrentBlendshapeAnimation()
		{
		}
	}
	[Token(Token = "0x2000403")]
	public class CharacterCustomizationCombiner
	{
		[Token(Token = "0x2000404")]
		private class MeshInstance
		{
			[Token(Token = "0x4001ADA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Dictionary<Material, List<CombineInstanceWithSM>> combine_instances;

			[Token(Token = "0x4001ADB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<Material> unique_materials;

			[Token(Token = "0x4001ADC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Mesh combined_new_mesh;

			[Token(Token = "0x4001ADD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public List<Vector3> combined_vertices;

			[Token(Token = "0x4001ADE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public List<Vector2> combined_uv;

			[Token(Token = "0x4001ADF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public List<Vector2> combined_uv2;

			[Token(Token = "0x4001AE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public List<Vector2> combined_uv3;

			[Token(Token = "0x4001AE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public List<Vector2> combined_uv4;

			[Token(Token = "0x4001AE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public List<Vector3> normals;

			[Token(Token = "0x4001AE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public List<Vector4> tangents;

			[Token(Token = "0x4001AE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public Dictionary<Material, List<int>> combined_submesh_indices;

			[Token(Token = "0x4001AE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public List<BoneWeight> combined_bone_weights;

			[Token(Token = "0x4001AE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public List<string> blendShapeNames;

			[Token(Token = "0x4001AE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public List<float> blendShapeValues;

			[Token(Token = "0x4001AE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public Dictionary<Mesh, int> vertex_offset_map;

			[Token(Token = "0x4001AE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public int vertex_index_offset;

			[Token(Token = "0x4001AEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			public int current_material_index;

			[Token(Token = "0x60017C2")]
			[Address(RVA = "0xB07854", Offset = "0xB07854", VA = "0xB07854")]
			public MeshInstance()
			{
			}
		}

		[Token(Token = "0x2000405")]
		private struct CombineInstanceWithSM
		{
			[Token(Token = "0x4001AEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public SkinnedMeshRenderer skinnedMesh;

			[Token(Token = "0x4001AEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public CombineInstance instance;
		}

		[Token(Token = "0x2000406")]
		private struct BlendWeightData
		{
			[Token(Token = "0x4001AED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3[] deltaVerts;

			[Token(Token = "0x4001AEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Vector3[] deltaNormals;

			[Token(Token = "0x4001AEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3[] deltaTangents;
		}

		[Serializable]
		[Token(Token = "0x2000407")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x797F18", Offset = "0x797F18")]
		private sealed class <>c
		{
			[Token(Token = "0x4001AF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001AF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<bool> <>9__11_0;

			[Token(Token = "0x60017C4")]
			[Address(RVA = "0xB06B84", Offset = "0xB06B84", VA = "0xB06B84")]
			public <>c()
			{
			}

			[Token(Token = "0x60017C5")]
			[Address(RVA = "0xB06B8C", Offset = "0xB06B8C", VA = "0xB06B8C")]
			internal bool <BlendshapeTransfer>b__11_0()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000408")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x797F28", Offset = "0x797F28")]
		private sealed class <BlendshapeTransfer>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001AF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001AF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001AF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MeshInstance meshInstance;

			[Token(Token = "0x4001AF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SkinnedMeshRenderer smr;

			[Token(Token = "0x4001AF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float waitTime;

			[Token(Token = "0x4001AF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public bool yieldUse;

			[Token(Token = "0x4001AF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int lod;

			[Token(Token = "0x4001AF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private CharacterCustomization <characterSystem>5__2;

			[Token(Token = "0x4001AFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <bs>5__3;

			[Token(Token = "0x17000318")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60017C9")]
				[Address(RVA = "0xB07804", Offset = "0xB07804", VA = "0xB07804", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000319")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60017CB")]
				[Address(RVA = "0xB0784C", Offset = "0xB0784C", VA = "0xB0784C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017C6")]
			[Address(RVA = "0xB06BF8", Offset = "0xB06BF8", VA = "0xB06BF8")]
			[DebuggerHidden]
			public <BlendshapeTransfer>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x60017C7")]
			[Address(RVA = "0xB06C24", Offset = "0xB06C24", VA = "0xB06C24", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60017C8")]
			[Address(RVA = "0xB06C28", Offset = "0xB06C28", VA = "0xB06C28", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60017CA")]
			[Address(RVA = "0xB0780C", Offset = "0xB0780C", VA = "0xB0780C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Matrix4x4[] bindPoses;

		[Token(Token = "0x4001AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<MeshInstance> LODMeshInstances;

		[Token(Token = "0x4001AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static CharacterCustomization currentCharacter;

		[Token(Token = "0x4001AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static bool useExportToAnotherObject;

		[Token(Token = "0x4001AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private static bool BlendshapeTransferWork;

		[Token(Token = "0x4001AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Action<List<SkinnedMeshRenderer>> _callback;

		[Token(Token = "0x4001AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static List<SkinnedMeshRenderer> returnSkinnedMeshes;

		[Token(Token = "0x60017BD")]
		[Address(RVA = "0xF17648", Offset = "0xF17648", VA = "0xF17648")]
		public static List<SkinnedMeshRenderer> MakeCombinedMeshes(CharacterCustomization character, [Optional] GameObject exportInCustomObject, float blendshapeAddDelay = 0.001f, [Optional] Action<List<SkinnedMeshRenderer>> callback)
		{
			return null;
		}

		[Token(Token = "0x60017BE")]
		[Address(RVA = "0xF1B024", Offset = "0xF1B024", VA = "0xF1B024")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7AC9B8", Offset = "0x7AC9B8")]
		private static IEnumerator BlendshapeTransfer(MeshInstance meshInstance, float waitTime, SkinnedMeshRenderer smr, int lod, bool yieldUse = true)
		{
			return null;
		}

		[Token(Token = "0x60017BF")]
		[Address(RVA = "0xF1B0E4", Offset = "0xF1B0E4", VA = "0xF1B0E4")]
		public CharacterCustomizationCombiner()
		{
		}

		[Token(Token = "0x60017C1")]
		[Address(RVA = "0xF1AB38", Offset = "0xF1AB38", VA = "0xF1AB38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7ACA18", Offset = "0x7ACA18")]
		internal static void <MakeCombinedMeshes>g__SelectMeshes|10_0(SkinnedMeshRenderer mesh, int LOD)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000409")]
	public class CharacterCustomizationSetup
	{
		[Token(Token = "0x200040A")]
		public enum CharacterFileSaveFormat
		{
			[Token(Token = "0x4001B09")]
			Json,
			[Token(Token = "0x4001B0A")]
			Xml,
			[Token(Token = "0x4001B0B")]
			Binary
		}

		[Token(Token = "0x4001AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string settingsName;

		[Token(Token = "0x4001AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CharacterSelectedElements selectedElements;

		[Token(Token = "0x4001AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<CharacterBlendshapeData> blendshapes;

		[Token(Token = "0x4001AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int MinLod;

		[Token(Token = "0x4001AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int MaxLod;

		[Token(Token = "0x4001B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float[] SkinColor;

		[Token(Token = "0x4001B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float[] EyeColor;

		[Token(Token = "0x4001B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float[] HairColor;

		[Token(Token = "0x4001B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float[] UnderpantsColor;

		[Token(Token = "0x4001B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float[] TeethColor;

		[Token(Token = "0x4001B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float[] OralCavityColor;

		[Token(Token = "0x4001B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float Height;

		[Token(Token = "0x4001B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float HeadSize;

		[Token(Token = "0x60017CC")]
		[Address(RVA = "0xF15760", Offset = "0xF15760", VA = "0xF15760")]
		public CharacterCustomizationSetup()
		{
		}

		[Token(Token = "0x60017CD")]
		[Address(RVA = "0xF14D34", Offset = "0xF14D34", VA = "0xF14D34")]
		public void ApplyToCharacter(CharacterCustomization cc)
		{
		}

		[Token(Token = "0x60017CE")]
		[Address(RVA = "0xF169D0", Offset = "0xF169D0", VA = "0xF169D0")]
		public string Serialize(CharacterFileSaveFormat format)
		{
			return null;
		}

		[Token(Token = "0x60017CF")]
		[Address(RVA = "0xF15A60", Offset = "0xF15A60", VA = "0xF15A60")]
		public static CharacterCustomizationSetup Deserialize(string data, CharacterFileSaveFormat format)
		{
			return null;
		}
	}
	[Token(Token = "0x200040B")]
	public static class CharacterSystemUpdater
	{
		[Token(Token = "0x60017D0")]
		[Address(RVA = "0xF1C158", Offset = "0xF1C158", VA = "0xF1C158")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x7ACA78", Offset = "0x7ACA78")]
		private static void updateCharacters()
		{
		}

		[Token(Token = "0x60017D1")]
		[Address(RVA = "0xF1C160", Offset = "0xF1C160", VA = "0xF1C160")]
		public static void UpdateCharactersOnScene(bool revertPrefabs = false, [Optional] CharacterCustomization reverbObject)
		{
		}
	}
	[Token(Token = "0x200040C")]
	public static class CharacterGenerator
	{
		[Token(Token = "0x60017D2")]
		[Address(RVA = "0xF19E88", Offset = "0xF19E88", VA = "0xF19E88")]
		public static void Generate(CharacterCustomization cc)
		{
		}

		[Token(Token = "0x60017D3")]
		[Address(RVA = "0xF1B194", Offset = "0xF1B194", VA = "0xF1B194")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7ACA88", Offset = "0x7ACA88")]
		internal static int <Generate>g__CheckExclude|0_0(int hair, int beard, int hat, int accessory, int shirt, int pants, int shoes, List<ExcludeIndexes> excludeIndexes)
		{
			return default(int);
		}
	}
	[Token(Token = "0x200040D")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x797F38", Offset = "0x797F38")]
	public class CharacterGeneratorSettings : ScriptableObject
	{
		[Token(Token = "0x4001B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MinMaxIndex hair;

		[Token(Token = "0x4001B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MinMaxIndex beard;

		[Token(Token = "0x4001B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MinMaxIndex hat;

		[Token(Token = "0x4001B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MinMaxIndex accessory;

		[Token(Token = "0x4001B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public MinMaxIndex shirt;

		[Token(Token = "0x4001B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public MinMaxIndex pants;

		[Token(Token = "0x4001B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public MinMaxIndex shoes;

		[Token(Token = "0x4001B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7A5FB8", Offset = "0x7A5FB8")]
		public MinMaxColor skinColors;

		[Token(Token = "0x4001B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public MinMaxColor eyeColors;

		[Token(Token = "0x4001B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public MinMaxColor hairColors;

		[Token(Token = "0x4001B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7A5FCC", Offset = "0x7A5FCC")]
		public MinMaxBlendshapes headSize;

		[Token(Token = "0x4001B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public MinMaxBlendshapes headOffset;

		[Token(Token = "0x4001B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public MinMaxBlendshapes height;

		[Token(Token = "0x4001B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public MinMaxBlendshapes fat;

		[Token(Token = "0x4001B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public MinMaxBlendshapes muscles;

		[Token(Token = "0x4001B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public MinMaxBlendshapes thin;

		[Token(Token = "0x4001B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7A5FE0", Offset = "0x7A5FE0")]
		public List<MinMaxFacialBlendshapes> facialBlendshapes;

		[Token(Token = "0x4001B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7A5FF4", Offset = "0x7A5FF4")]
		public List<GeneratorExclude> excludes;

		[Token(Token = "0x60017D4")]
		[Address(RVA = "0xF1B3E0", Offset = "0xF1B3E0", VA = "0xF1B3E0")]
		public CharacterGeneratorSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200040E")]
	public class MinMaxIndex
	{
		[Token(Token = "0x4001B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Min;

		[Token(Token = "0x4001B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int Max;

		[Token(Token = "0x60017D5")]
		[Address(RVA = "0x1F53DF0", Offset = "0x1F53DF0", VA = "0x1F53DF0")]
		public int GetRandom(int max)
		{
			return default(int);
		}

		[Token(Token = "0x60017D6")]
		[Address(RVA = "0x1F53E2C", Offset = "0x1F53E2C", VA = "0x1F53E2C")]
		public MinMaxIndex()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200040F")]
	public class MinMaxColor
	{
		[Token(Token = "0x4001B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Color> minColors;

		[Token(Token = "0x4001B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Color> maxColors;

		[Token(Token = "0x60017D7")]
		[Address(RVA = "0x1F53BFC", Offset = "0x1F53BFC", VA = "0x1F53BFC")]
		public Color GetRandom()
		{
			return default(Color);
		}

		[Token(Token = "0x60017D8")]
		[Address(RVA = "0x1F53D2C", Offset = "0x1F53D2C", VA = "0x1F53D2C")]
		public MinMaxColor()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000410")]
	public class MinMaxBlendshapes
	{
		[Token(Token = "0x4001B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7A6008", Offset = "0x7A6008")]
		public float Min;

		[Token(Token = "0x4001B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7A6028", Offset = "0x7A6028")]
		public float Max;

		[Token(Token = "0x60017D9")]
		[Address(RVA = "0x1F53BE8", Offset = "0x1F53BE8", VA = "0x1F53BE8")]
		public float GetRandom()
		{
			return default(float);
		}

		[Token(Token = "0x60017DA")]
		[Address(RVA = "0x1F53BF4", Offset = "0x1F53BF4", VA = "0x1F53BF4")]
		public MinMaxBlendshapes()
		{
		}
	}
	[Token(Token = "0x2000411")]
	public enum ExcludeItem
	{
		[Token(Token = "0x4001B25")]
		Hair,
		[Token(Token = "0x4001B26")]
		Beard,
		[Token(Token = "0x4001B27")]
		Hat,
		[Token(Token = "0x4001B28")]
		Accessory,
		[Token(Token = "0x4001B29")]
		Shirt,
		[Token(Token = "0x4001B2A")]
		Pants,
		[Token(Token = "0x4001B2B")]
		Shoes
	}
	[Serializable]
	[Token(Token = "0x2000412")]
	public class ExcludeIndexes
	{
		[Token(Token = "0x4001B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ExcludeItem item;

		[Token(Token = "0x4001B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int index;

		[Token(Token = "0x60017DB")]
		[Address(RVA = "0xE783F0", Offset = "0xE783F0", VA = "0xE783F0")]
		public ExcludeIndexes()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000413")]
	public class GeneratorExclude
	{
		[Token(Token = "0x4001B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ExcludeItem ExcludeItem;

		[Token(Token = "0x4001B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int targetIndex;

		[Token(Token = "0x4001B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<ExcludeIndexes> exclude;

		[Token(Token = "0x60017DC")]
		[Address(RVA = "0xCEFE64", Offset = "0xCEFE64", VA = "0xCEFE64")]
		public GeneratorExclude()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000414")]
	public class MinMaxFacialBlendshapes
	{
		[Token(Token = "0x4001B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4001B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7A6048", Offset = "0x7A6048")]
		public float Min;

		[Token(Token = "0x4001B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7A6068", Offset = "0x7A6068")]
		public float Max;

		[Token(Token = "0x60017DD")]
		[Address(RVA = "0x1F53DDC", Offset = "0x1F53DDC", VA = "0x1F53DDC")]
		public float GetRandom()
		{
			return default(float);
		}

		[Token(Token = "0x60017DE")]
		[Address(RVA = "0x1F53DE8", Offset = "0x1F53DE8", VA = "0x1F53DE8")]
		public MinMaxFacialBlendshapes()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000415")]
	public class PreBuiltBlendshape
	{
		[Token(Token = "0x4001B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public string name;

		[Token(Token = "0x4001B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public float weight;

		[Token(Token = "0x60017DF")]
		[Address(RVA = "0xC85AD8", Offset = "0xC85AD8", VA = "0xC85AD8")]
		public PreBuiltBlendshape(string name, float weight)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000416")]
	public class PreBuiltData
	{
		[Token(Token = "0x4001B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public string GroupName;

		[Token(Token = "0x4001B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public List<Mesh> meshes;

		[Token(Token = "0x4001B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public List<Material> materials;

		[Token(Token = "0x60017E0")]
		[Address(RVA = "0xC85B20", Offset = "0xC85B20", VA = "0xC85B20")]
		public PreBuiltData()
		{
		}
	}
	[Token(Token = "0x2000417")]
	public class CharacterPreBuilt : ScriptableObject
	{
		[Token(Token = "0x4001B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public CharacterSettings settings;

		[Token(Token = "0x4001B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public List<PreBuiltData> preBuiltDatas;

		[Token(Token = "0x4001B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public List<PreBuiltBlendshape> blendshapes;

		[Token(Token = "0x60017E1")]
		[Address(RVA = "0xF1BDD0", Offset = "0xF1BDD0", VA = "0xF1BDD0")]
		public CharacterPreBuilt()
		{
		}
	}
	[Token(Token = "0x2000418")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x797FA4", Offset = "0x797FA4")]
	public class CharacterSettings : ScriptableObject
	{
		[Token(Token = "0x4001B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject OriginalMesh;

		[Token(Token = "0x4001B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material bodyMaterial;

		[Token(Token = "0x4001B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7A6108", Offset = "0x7A6108")]
		public List<CharacterAnimationPreset> characterAnimationPresets;

		[Token(Token = "0x4001B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7A611C", Offset = "0x7A611C")]
		public List<CharacterBlendshapeData> characterBlendshapeDatas;

		[Token(Token = "0x4001B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7A6130", Offset = "0x7A6130")]
		public List<CharacterElementsPreset> hairPresets;

		[Token(Token = "0x4001B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<CharacterElementsPreset> beardPresets;

		[Token(Token = "0x4001B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<CharacterElementsPreset> hatsPresets;

		[Token(Token = "0x4001B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<CharacterElementsPreset> accessoryPresets;

		[Token(Token = "0x4001B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<CharacterElementsPreset> shirtsPresets;

		[Token(Token = "0x4001B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<CharacterElementsPreset> pantsPresets;

		[Token(Token = "0x4001B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<CharacterElementsPreset> shoesPresets;

		[Token(Token = "0x4001B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<CharacterElementsPreset> item1Presets;

		[Token(Token = "0x4001B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7A6144", Offset = "0x7A6144")]
		public List<CharacterSettingsSelector> settingsSelectors;

		[Token(Token = "0x4001B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7A6158", Offset = "0x7A6158")]
		public RuntimeAnimatorController Animator;

		[Token(Token = "0x4001B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public UnityEngine.Avatar Avatar;

		[Token(Token = "0x4001B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7A616C", Offset = "0x7A616C")]
		public CharacterGeneratorSettings generator;

		[Token(Token = "0x4001B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7A6180", Offset = "0x7A6180")]
		public CharacterSelectedElements DefaultSelectedElements;

		[Token(Token = "0x60017E2")]
		[Address(RVA = "0xF1BEA0", Offset = "0xF1BEA0", VA = "0xF1BEA0")]
		public CharacterSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000419")]
	public class CharacterSettingsSelector
	{
		[Token(Token = "0x4001B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4001B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CharacterSettings settings;

		[Token(Token = "0x60017E3")]
		[Address(RVA = "0xF1C150", Offset = "0xF1C150", VA = "0xF1C150")]
		public CharacterSettingsSelector()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200041A")]
	public class CharacterElementsPreset
	{
		[Token(Token = "0x4001B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4001B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Mesh[] mesh;

		[Token(Token = "0x4001B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] hideParts;

		[Token(Token = "0x4001B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float yOffset;

		[Token(Token = "0x4001B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material[] mats;

		[Token(Token = "0x60017E4")]
		[Address(RVA = "0xF1B18C", Offset = "0xF1B18C", VA = "0xF1B18C")]
		public CharacterElementsPreset()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200041B")]
	public class CharacterAnimationPreset
	{
		[Token(Token = "0x4001B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4001B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<BlendshapeEmotionValue> blendshapes;

		[Token(Token = "0x4001B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool UseGlobalBlendCurve;

		[Token(Token = "0x4001B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve GlobalBlendAnimationCurve;

		[Token(Token = "0x4001B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public float AnimationPlayDuration;

		[Token(Token = "0x4001B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public float weightPower;

		[Token(Token = "0x4001B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7A61B4", Offset = "0x7A61B4")]
		public bool applyToAllCharacterMeshes;

		[Token(Token = "0x60017E5")]
		[Address(RVA = "0xF0B68C", Offset = "0xF0B68C", VA = "0xF0B68C")]
		public CharacterAnimationPreset()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200041C")]
	public class CharacterBlendshapeData
	{
		[Token(Token = "0x4001B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string blendshapeName;

		[Token(Token = "0x4001B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CharacterBlendShapeType type;

		[Token(Token = "0x4001B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public CharacterBlendShapeGroup group;

		[Token(Token = "0x4001B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public float value;

		[Token(Token = "0x60017E6")]
		[Address(RVA = "0xF0B890", Offset = "0xF0B890", VA = "0xF0B890")]
		public CharacterBlendshapeData(string name, CharacterBlendShapeType t, CharacterBlendShapeGroup g, float value = 0f)
		{
		}

		[Token(Token = "0x60017E7")]
		[Address(RVA = "0xF0B8EC", Offset = "0xF0B8EC", VA = "0xF0B8EC")]
		public CharacterBlendshapeData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200041D")]
	public class CharacterSelectedElements : ICloneable
	{
		[Token(Token = "0x4001B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Hair;

		[Token(Token = "0x4001B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int Beard;

		[Token(Token = "0x4001B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Hat;

		[Token(Token = "0x4001B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int Shirt;

		[Token(Token = "0x4001B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int Pants;

		[Token(Token = "0x4001B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int Shoes;

		[Token(Token = "0x4001B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int Accessory;

		[Token(Token = "0x4001B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int Item1;

		[Token(Token = "0x60017E8")]
		[Address(RVA = "0xF19DC0", Offset = "0xF19DC0", VA = "0xF19DC0", Slot = "4")]
		public object Clone()
		{
			return null;
		}

		[Token(Token = "0x60017E9")]
		[Address(RVA = "0xF117A8", Offset = "0xF117A8", VA = "0xF117A8")]
		public int GetSelectedIndex(CharacterElementType type)
		{
			return default(int);
		}

		[Token(Token = "0x60017EA")]
		[Address(RVA = "0xF143C8", Offset = "0xF143C8", VA = "0xF143C8")]
		public void SetSelectedIndex(CharacterElementType type, int newIndex)
		{
		}

		[Token(Token = "0x60017EB")]
		[Address(RVA = "0xF19E70", Offset = "0xF19E70", VA = "0xF19E70")]
		public CharacterSelectedElements()
		{
		}
	}
	[Token(Token = "0x200041E")]
	public enum CharacterBlendShapeGroup
	{
		[Token(Token = "0x4001B68")]
		Body,
		[Token(Token = "0x4001B69")]
		Face,
		[Token(Token = "0x4001B6A")]
		Extra
	}
	[Token(Token = "0x200041F")]
	public enum CharacterBlendShapeType
	{
		[Token(Token = "0x4001B6C")]
		Fat,
		[Token(Token = "0x4001B6D")]
		Muscles,
		[Token(Token = "0x4001B6E")]
		Slimness,
		[Token(Token = "0x4001B6F")]
		Thin,
		[Token(Token = "0x4001B70")]
		BreastSize,
		[Token(Token = "0x4001B71")]
		Neck_Width,
		[Token(Token = "0x4001B72")]
		Ear_Size,
		[Token(Token = "0x4001B73")]
		Ear_Angle,
		[Token(Token = "0x4001B74")]
		Jaw_Width,
		[Token(Token = "0x4001B75")]
		Jaw_Offset,
		[Token(Token = "0x4001B76")]
		Jaw_Shift,
		[Token(Token = "0x4001B77")]
		Cheek_Size,
		[Token(Token = "0x4001B78")]
		Chin_Offset,
		[Token(Token = "0x4001B79")]
		Eye_Width,
		[Token(Token = "0x4001B7A")]
		Eye_Form,
		[Token(Token = "0x4001B7B")]
		Eye_InnerCorner,
		[Token(Token = "0x4001B7C")]
		Eye_Corner,
		[Token(Token = "0x4001B7D")]
		Eye_Rotation,
		[Token(Token = "0x4001B7E")]
		Eye_Offset,
		[Token(Token = "0x4001B7F")]
		Eye_OffsetH,
		[Token(Token = "0x4001B80")]
		Eye_ScaleX,
		[Token(Token = "0x4001B81")]
		Eye_ScaleY,
		[Token(Token = "0x4001B82")]
		Eye_Size,
		[Token(Token = "0x4001B83")]
		Eye_Close,
		[Token(Token = "0x4001B84")]
		Eye_Height,
		[Token(Token = "0x4001B85")]
		Brow_Height,
		[Token(Token = "0x4001B86")]
		Brow_Shape,
		[Token(Token = "0x4001B87")]
		Brow_Thickness,
		[Token(Token = "0x4001B88")]
		Brow_Length,
		[Token(Token = "0x4001B89")]
		Nose_Length,
		[Token(Token = "0x4001B8A")]
		Nose_Size,
		[Token(Token = "0x4001B8B")]
		Nose_Angle,
		[Token(Token = "0x4001B8C")]
		Nose_Offset,
		[Token(Token = "0x4001B8D")]
		Nose_Bridge,
		[Token(Token = "0x4001B8E")]
		Nose_Hump,
		[Token(Token = "0x4001B8F")]
		Mouth_Offset,
		[Token(Token = "0x4001B90")]
		Mouth_Width,
		[Token(Token = "0x4001B91")]
		Mouth_Size,
		[Token(Token = "0x4001B92")]
		Mouth_Open,
		[Token(Token = "0x4001B93")]
		Mouth_Bulging,
		[Token(Token = "0x4001B94")]
		LipsCorners_Offset,
		[Token(Token = "0x4001B95")]
		Face_Form,
		[Token(Token = "0x4001B96")]
		Chin_Width,
		[Token(Token = "0x4001B97")]
		Chin_Form,
		[Token(Token = "0x4001B98")]
		Head_Offset,
		[Token(Token = "0x4001B99")]
		Smile,
		[Token(Token = "0x4001B9A")]
		Sadness,
		[Token(Token = "0x4001B9B")]
		Surprise,
		[Token(Token = "0x4001B9C")]
		Thoughtful,
		[Token(Token = "0x4001B9D")]
		Angry,
		[Token(Token = "0x4001B9E")]
		BackpackOffset
	}
	[Token(Token = "0x2000420")]
	public enum CharacterInstanceStatus
	{
		[Token(Token = "0x4001BA0")]
		NotAPrefab,
		[Token(Token = "0x4001BA1")]
		Connected,
		[Token(Token = "0x4001BA2")]
		Disconnected,
		[Token(Token = "0x4001BA3")]
		MissingAsset,
		[Token(Token = "0x4001BA4")]
		NotAPrefabByUser,
		[Token(Token = "0x4001BA5")]
		PrefabStageSceneOpened,
		[Token(Token = "0x4001BA6")]
		PrefabEditingInProjectView
	}
	[Token(Token = "0x2000421")]
	public class SavedCharacterData
	{
		[Token(Token = "0x4001BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4001BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string path;

		[Token(Token = "0x60017EC")]
		[Address(RVA = "0xC8D040", Offset = "0xC8D040", VA = "0xC8D040")]
		public SavedCharacterData()
		{
		}
	}
}
namespace DynamicLight2D
{
	[Token(Token = "0x2000422")]
	public class verts
	{
		[Token(Token = "0x4001BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A61FC", Offset = "0x7A61FC")]
		private float <angle>k__BackingField;

		[Token(Token = "0x4001BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A620C", Offset = "0x7A620C")]
		private int <location>k__BackingField;

		[Token(Token = "0x4001BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A621C", Offset = "0x7A621C")]
		private Vector3 <pos>k__BackingField;

		[Token(Token = "0x4001BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7A622C", Offset = "0x7A622C")]
		private bool <endpoint>k__BackingField;

		[Token(Token = "0x1700031A")]
		public float angle
		{
			[Token(Token = "0x60017ED")]
			[Address(RVA = "0xB0399C", Offset = "0xB0399C", VA = "0xB0399C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7ACA98", Offset = "0x7ACA98")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60017EE")]
			[Address(RVA = "0xB039A4", Offset = "0xB039A4", VA = "0xB039A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7ACAA8", Offset = "0x7ACAA8")]
			set
			{
			}
		}

		[Token(Token = "0x1700031B")]
		public int location
		{
			[Token(Token = "0x60017EF")]
			[Address(RVA = "0xB039AC", Offset = "0xB039AC", VA = "0xB039AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7ACAB8", Offset = "0x7ACAB8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60017F0")]
			[Address(RVA = "0xB039B4", Offset = "0xB039B4", VA = "0xB039B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7ACAC8", Offset = "0x7ACAC8")]
			set
			{
			}
		}

		[Token(Token = "0x1700031C")]
		public Vector3 pos
		{
			[Token(Token = "0x60017F1")]
			[Address(RVA = "0xB039BC", Offset = "0xB039BC", VA = "0xB039BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7ACAD8", Offset = "0x7ACAD8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60017F2")]
			[Address(RVA = "0xB039C8", Offset = "0xB039C8", VA = "0xB039C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7ACAE8", Offset = "0x7ACAE8")]
			set
			{
			}
		}

		[Token(Token = "0x1700031D")]
		public bool endpoint
		{
			[Token(Token = "0x60017F3")]
			[Address(RVA = "0xB039D4", Offset = "0xB039D4", VA = "0xB039D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7ACAF8", Offset = "0x7ACAF8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60017F4")]
			[Address(RVA = "0xB039DC", Offset = "0xB039DC", VA = "0xB039DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7ACB08", Offset = "0x7ACB08")]
			set
			{
			}
		}

		[Token(Token = "0x60017F5")]
		[Address(RVA = "0xB039E8", Offset = "0xB039E8", VA = "0xB039E8")]
		public verts()
		{
		}
	}
	[Token(Token = "0x2000423")]
	public class DynamicLight : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000424")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x798010", Offset = "0x798010")]
		private sealed class <>c
		{
			[Token(Token = "0x4001BB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001BB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<verts> <>9__14_0;

			[Token(Token = "0x6001802")]
			[Address(RVA = "0xB09C6C", Offset = "0xB09C6C", VA = "0xB09C6C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001803")]
			[Address(RVA = "0xB09C74", Offset = "0xB09C74", VA = "0xB09C74")]
			internal int <sortList>b__14_0(verts item1, verts item2)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4001BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string version;

		[Token(Token = "0x4001BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material lightMaterial;

		[Token(Token = "0x4001BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public PolygonCollider2D[] allMeshes;

		[Token(Token = "0x4001BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public List<verts> allVertices;

		[Token(Token = "0x4001BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public float lightRadius;

		[Token(Token = "0x4001BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7A626C", Offset = "0x7A626C")]
		public int lightSegments;

		[Token(Token = "0x4001BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public LayerMask layer;

		[Token(Token = "0x4001BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Mesh lightMesh;

		[Token(Token = "0x60017F6")]
		[Address(RVA = "0xE75C98", Offset = "0xE75C98", VA = "0xE75C98")]
		private void Start()
		{
		}

		[Token(Token = "0x60017F7")]
		[Address(RVA = "0xE75EC8", Offset = "0xE75EC8", VA = "0xE75EC8")]
		private void Update()
		{
		}

		[Token(Token = "0x60017F8")]
		[Address(RVA = "0xE75EFC", Offset = "0xE75EFC", VA = "0xE75EFC")]
		private void getAllMeshes()
		{
		}

		[Token(Token = "0x60017F9")]
		[Address(RVA = "0xE7739C", Offset = "0xE7739C", VA = "0xE7739C")]
		private void resetBounds()
		{
		}

		[Token(Token = "0x60017FA")]
		[Address(RVA = "0xE760D4", Offset = "0xE760D4", VA = "0xE760D4")]
		private void setLight()
		{
		}

		[Token(Token = "0x60017FB")]
		[Address(RVA = "0xE770B0", Offset = "0xE770B0", VA = "0xE770B0")]
		private void renderLightMesh()
		{
		}

		[Token(Token = "0x60017FC")]
		[Address(RVA = "0xE77470", Offset = "0xE77470", VA = "0xE77470")]
		private void sortList(List<verts> lista)
		{
		}

		[Token(Token = "0x60017FD")]
		[Address(RVA = "0xE77598", Offset = "0xE77598", VA = "0xE77598")]
		private void drawLinePerVertex()
		{
		}

		[Token(Token = "0x60017FE")]
		[Address(RVA = "0xE77438", Offset = "0xE77438", VA = "0xE77438")]
		private float getVectorAngle(bool pseudo, float x, float y)
		{
			return default(float);
		}

		[Token(Token = "0x60017FF")]
		[Address(RVA = "0xE777D4", Offset = "0xE777D4", VA = "0xE777D4")]
		private float pseudoAngle(float dx, float dy)
		{
			return default(float);
		}

		[Token(Token = "0x6001800")]
		[Address(RVA = "0xE777F8", Offset = "0xE777F8", VA = "0xE777F8")]
		public DynamicLight()
		{
		}
	}
	[Token(Token = "0x2000425")]
	public class interface_touch : MonoBehaviour
	{
		[Token(Token = "0x2000426")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x798020", Offset = "0x798020")]
		private sealed class <LoopUpdate>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001BBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001BBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001BBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public interface_touch <>4__this;

			[Token(Token = "0x4001BBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <pos>5__2;

			[Token(Token = "0x1700031E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600180A")]
				[Address(RVA = "0x1E7FB64", Offset = "0x1E7FB64", VA = "0x1E7FB64", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700031F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600180C")]
				[Address(RVA = "0x1E7FBAC", Offset = "0x1E7FBAC", VA = "0x1E7FBAC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001807")]
			[Address(RVA = "0x1E7F9A4", Offset = "0x1E7F9A4", VA = "0x1E7F9A4")]
			[DebuggerHidden]
			public <LoopUpdate>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6001808")]
			[Address(RVA = "0x1E7F9D0", Offset = "0x1E7F9D0", VA = "0x1E7F9D0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001809")]
			[Address(RVA = "0x1E7F9D4", Offset = "0x1E7F9D4", VA = "0x1E7F9D4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600180B")]
			[Address(RVA = "0x1E7FB6C", Offset = "0x1E7FB6C", VA = "0x1E7FB6C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GameObject cLight;

		[Token(Token = "0x4001BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject cubeL;

		[Token(Token = "0x4001BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		public static int vertexCount;

		[Token(Token = "0x6001804")]
		[Address(RVA = "0xB01534", Offset = "0xB01534", VA = "0xB01534")]
		private void Start()
		{
		}

		[Token(Token = "0x6001805")]
		[Address(RVA = "0xB015A8", Offset = "0xB015A8", VA = "0xB015A8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7ACB18", Offset = "0x7ACB18")]
		private IEnumerator LoopUpdate()
		{
			return null;
		}

		[Token(Token = "0x6001806")]
		[Address(RVA = "0xB01620", Offset = "0xB01620", VA = "0xB01620")]
		public interface_touch()
		{
		}
	}
	[Token(Token = "0x2000427")]
	public class interface_touch2 : MonoBehaviour
	{
		[Token(Token = "0x2000428")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x798030", Offset = "0x798030")]
		private sealed class <LoopUpdate>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001BC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001BC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001BC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public interface_touch2 <>4__this;

			[Token(Token = "0x4001BCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <pos>5__2;

			[Token(Token = "0x17000320")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001814")]
				[Address(RVA = "0x1E7FFA8", Offset = "0x1E7FFA8", VA = "0x1E7FFA8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000321")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001816")]
				[Address(RVA = "0x1E7FFF0", Offset = "0x1E7FFF0", VA = "0x1E7FFF0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001811")]
			[Address(RVA = "0x1E7FBB4", Offset = "0x1E7FBB4", VA = "0x1E7FBB4")]
			[DebuggerHidden]
			public <LoopUpdate>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6001812")]
			[Address(RVA = "0x1E7FBE0", Offset = "0x1E7FBE0", VA = "0x1E7FBE0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001813")]
			[Address(RVA = "0x1E7FBE4", Offset = "0x1E7FBE4", VA = "0x1E7FBE4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001815")]
			[Address(RVA = "0x1E7FFB0", Offset = "0x1E7FFB0", VA = "0x1E7FFB0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GameObject cLight;

		[Token(Token = "0x4001BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject cubeL;

		[Token(Token = "0x4001BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Camera cam;

		[Token(Token = "0x4001BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private DynamicLight _2ddl;

		[Token(Token = "0x4001BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int __layer;

		[Token(Token = "0x4001BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		public static int vertexCount;

		[Token(Token = "0x4001BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int lightCount;

		[Token(Token = "0x4001BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _mouseClick;

		[Token(Token = "0x4001BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool _ctrlDown;

		[Token(Token = "0x600180D")]
		[Address(RVA = "0xB01628", Offset = "0xB01628", VA = "0xB01628")]
		private void Start()
		{
		}

		[Token(Token = "0x600180E")]
		[Address(RVA = "0xB01768", Offset = "0xB01768", VA = "0xB01768")]
		private void Update()
		{
		}

		[Token(Token = "0x600180F")]
		[Address(RVA = "0xB016F0", Offset = "0xB016F0", VA = "0xB016F0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7ACBC8", Offset = "0x7ACBC8")]
		private IEnumerator LoopUpdate()
		{
			return null;
		}

		[Token(Token = "0x6001810")]
		[Address(RVA = "0xB017AC", Offset = "0xB017AC", VA = "0xB017AC")]
		public interface_touch2()
		{
		}
	}
}
