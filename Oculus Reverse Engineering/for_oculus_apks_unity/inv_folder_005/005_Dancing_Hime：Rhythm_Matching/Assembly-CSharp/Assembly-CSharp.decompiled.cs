using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Net;
using System.Net.Security;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Security.Cryptography.X509Certificates;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading;
using AnimationOrTween;
using CurvedUI;
using DG.Tweening;
using DG.Tweening.Core;
using DG.Tweening.Plugins.Options;
using EnhancedUI.EnhancedScroller;
using HedgehogTeam.EasyTouch;
using Il2CppDummyDll;
using LuaInterface;
using RenderHeads.Media.AVProVideo;
using Sword;
using Sword.Framework;
using Sword.Game;
using Sword.Guide;
using UnityEngine;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Networking;
using UnityEngine.Rendering;
using UnityEngine.SceneManagement;
using UnityEngine.UI;
using UnityEngine.Video;
using UnityEngine.XR;
using UnityEngine.XR.Interaction.Toolkit;
using gcloud_voice;
using libx;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public class TGUtilsAnimatedTexture : MonoBehaviour
{
	[Token(Token = "0x2000300")]
	public enum TMap
	{
		[Token(Token = "0x4000D97")]
		Main,
		[Token(Token = "0x4000D98")]
		Emission
	}

	[Token(Token = "0x2000301")]
	public enum TOrder
	{
		[Token(Token = "0x4000D9A")]
		Order,
		[Token(Token = "0x4000D9B")]
		PingPong,
		[Token(Token = "0x4000D9C")]
		Random
	}

	[Serializable]
	[Token(Token = "0x2000302")]
	public class TAnimation
	{
		[Token(Token = "0x4000D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture AnimTexture;

		[Token(Token = "0x4000D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TOrder FramesOrder;

		[Token(Token = "0x4000D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int PlayCount;

		[Token(Token = "0x4000DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int XTiles;

		[Token(Token = "0x4000DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int YTiles;

		[Token(Token = "0x4000DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float FPS;

		[Token(Token = "0x6002AC1")]
		[Address(RVA = "0xBB152C", Offset = "0xBB152C", VA = "0xBB152C")]
		public TAnimation()
		{
		}
	}

	[Token(Token = "0x2000303")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93FCF0", Offset = "0x93FCF0")]
	private sealed class <AnimationPlay>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TGUtilsAnimatedTexture <>4__this;

		[Token(Token = "0x4000DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <stepx>5__2;

		[Token(Token = "0x4000DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <stepy>5__3;

		[Token(Token = "0x4000DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string <mapname>5__4;

		[Token(Token = "0x4000DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool <pong>5__5;

		[Token(Token = "0x4000DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector4 <scaleOffset>5__6;

		[Token(Token = "0x4000DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int <i>5__7;

		[Token(Token = "0x4000DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int <y>5__8;

		[Token(Token = "0x4000DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int <x>5__9;

		[Token(Token = "0x170001DB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002AC5")]
			[Address(RVA = "0xBB1D38", Offset = "0xBB1D38", VA = "0xBB1D38", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002AC7")]
			[Address(RVA = "0xBB1DA0", Offset = "0xBB1DA0", VA = "0xBB1DA0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AC2")]
		[Address(RVA = "0xBB1878", Offset = "0xBB1878", VA = "0xBB1878")]
		[DebuggerHidden]
		public <AnimationPlay>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6002AC3")]
		[Address(RVA = "0xBB191C", Offset = "0xBB191C", VA = "0xBB191C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002AC4")]
		[Address(RVA = "0xBB1920", Offset = "0xBB1920", VA = "0xBB1920", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AC6")]
		[Address(RVA = "0xBB1D40", Offset = "0xBB1D40", VA = "0xBB1D40", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool PlayOnStart;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool Loop;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public TMap Map;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TOrder AnimationsOrder;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<TAnimation> Animations;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TAnimation anim;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int animID;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool pong;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material mat;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Texture lastText;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0xBB149C", Offset = "0xBB149C", VA = "0xBB149C")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0xBB1564", Offset = "0xBB1564", VA = "0xBB1564")]
	private void Start()
	{
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0xBB164C", Offset = "0xBB164C", VA = "0xBB164C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0xBB1574", Offset = "0xBB1574", VA = "0xBB1574")]
	public void AnimationsStart()
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0xBB1650", Offset = "0xBB1650", VA = "0xBB1650")]
	public void AnimationsNext()
	{
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0xBB1874", Offset = "0xBB1874", VA = "0xBB1874")]
	public void AnimationsStop()
	{
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0xBB1804", Offset = "0xBB1804", VA = "0xBB1804")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x944C9C", Offset = "0x944C9C")]
	private IEnumerator AnimationPlay()
	{
		return null;
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0xBB18A4", Offset = "0xBB18A4", VA = "0xBB18A4")]
	public TGUtilsAnimatedTexture()
	{
	}
}
[Token(Token = "0x2000003")]
public class TGUtilsAnimatorPeriodParam : MonoBehaviour
{
	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float PeriodMin;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float PeriodMax;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int IndexMin;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int IndexMax;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool UseIndex;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string ParamName;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool Loop;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Animator anim;

	[Token(Token = "0x6000009")]
	[Address(RVA = "0xBB1DA8", Offset = "0xBB1DA8", VA = "0xBB1DA8")]
	private void Start()
	{
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0xBB1E24", Offset = "0xBB1E24", VA = "0xBB1E24")]
	private void Update()
	{
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0xBB1E28", Offset = "0xBB1E28", VA = "0xBB1E28")]
	private void ChangeParam()
	{
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0xBB1F00", Offset = "0xBB1F00", VA = "0xBB1F00")]
	public TGUtilsAnimatorPeriodParam()
	{
	}
}
[Token(Token = "0x2000004")]
public class TGUtilsMaterialInstance : MonoBehaviour
{
	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color MainColor;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x9408D0", Offset = "0x9408D0")]
	public Color EmissionColor;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material mat;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Color oldMain;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Color oldEmission;

	[Token(Token = "0x600000D")]
	[Address(RVA = "0xBB1F70", Offset = "0xBB1F70", VA = "0xBB1F70")]
	private void Start()
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0xBB1FE4", Offset = "0xBB1FE4", VA = "0xBB1FE4")]
	private void Update()
	{
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0xBB20AC", Offset = "0xBB20AC", VA = "0xBB20AC")]
	public TGUtilsMaterialInstance()
	{
	}
}
[Token(Token = "0x2000005")]
public class CameraSwitcher : MonoBehaviour
{
	[Token(Token = "0x2000304")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93FD00", Offset = "0x93FD00")]
	private sealed class <AutoChange>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CameraSwitcher <>4__this;

		[Token(Token = "0x4000DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform <current>5__2;

		[Token(Token = "0x170001DD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002ACB")]
			[Address(RVA = "0xEEB880", Offset = "0xEEB880", VA = "0xEEB880", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002ACD")]
			[Address(RVA = "0xEEB8E8", Offset = "0xEEB8E8", VA = "0xEEB8E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AC8")]
		[Address(RVA = "0xEEB6B0", Offset = "0xEEB6B0", VA = "0xEEB6B0")]
		[DebuggerHidden]
		public <AutoChange>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6002AC9")]
		[Address(RVA = "0xEEB784", Offset = "0xEEB784", VA = "0xEEB784", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002ACA")]
		[Address(RVA = "0xEEB788", Offset = "0xEEB788", VA = "0xEEB788", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002ACC")]
		[Address(RVA = "0xEEB888", Offset = "0xEEB888", VA = "0xEEB888", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string targetName;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform[] points;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float interval;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float stability;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float rotationSpeed;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float minDistance;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve fovCurve;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool autoChange;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform target;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 followPoint;

	[Token(Token = "0x6000010")]
	[Address(RVA = "0xEEB0C8", Offset = "0xEEB0C8", VA = "0xEEB0C8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0xEEB184", Offset = "0xEEB184", VA = "0xEEB184")]
	private void Update()
	{
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0xEEB2B0", Offset = "0xEEB2B0", VA = "0xEEB2B0")]
	public void ChangePosition(Transform destination, bool forceStable = false)
	{
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0xEEB4D0", Offset = "0xEEB4D0", VA = "0xEEB4D0")]
	private Transform ChooseAnotherPoint(Transform current)
	{
		return null;
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0xEEB640", Offset = "0xEEB640", VA = "0xEEB640")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x944D00", Offset = "0x944D00")]
	private IEnumerator AutoChange()
	{
		return null;
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0xEEB130", Offset = "0xEEB130", VA = "0xEEB130")]
	public void StartAutoChange()
	{
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0xEEB6DC", Offset = "0xEEB6DC", VA = "0xEEB6DC")]
	public void StopAutoChange()
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0xEEB730", Offset = "0xEEB730", VA = "0xEEB730")]
	public CameraSwitcher()
	{
	}
}
[Token(Token = "0x2000006")]
public class PropActivator : MonoBehaviour
{
	[Token(Token = "0x6000018")]
	[Address(RVA = "0x10137EC", Offset = "0x10137EC", VA = "0x10137EC")]
	private void ActivateProps()
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0x1013A4C", Offset = "0x1013A4C", VA = "0x1013A4C")]
	public PropActivator()
	{
	}
}
[Token(Token = "0x2000007")]
public class StageDirector : MonoBehaviour
{
	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool ignoreFastForward;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject musicPlayerPrefab;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject mainCameraRigPrefab;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] prefabsNeedsActivation;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject[] prefabsOnTimeline;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject[] miscPrefabs;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform[] cameraPoints;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float overlayIntensity;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject musicPlayer;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private CameraSwitcher mainCameraSwitcher;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameObject[] objectsNeedsActivation;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private GameObject[] objectsOnTimeline;

	[Token(Token = "0x600001A")]
	[Address(RVA = "0xD359D4", Offset = "0xD359D4", VA = "0xD359D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0xD35C5C", Offset = "0xD35C5C", VA = "0xD35C5C")]
	private void Update()
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0xD35C60", Offset = "0xD35C60", VA = "0xD35C60")]
	public void StartMusic()
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0xD35D0C", Offset = "0xD35D0C", VA = "0xD35D0C")]
	public void ActivateProps()
	{
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0xD35DB4", Offset = "0xD35DB4", VA = "0xD35DB4")]
	public void SwitchCamera(int index)
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0xD35E80", Offset = "0xD35E80", VA = "0xD35E80")]
	public void StartAutoCameraChange()
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0xD35F10", Offset = "0xD35F10", VA = "0xD35F10")]
	public void StopAutoCameraChange()
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0xD35FA0", Offset = "0xD35FA0", VA = "0xD35FA0")]
	public void FastForward(float second)
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0xD360D0", Offset = "0xD360D0", VA = "0xD360D0")]
	private void FastForwardAnimator(Animator animator, float second, float crossfade)
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0xD3621C", Offset = "0xD3621C", VA = "0xD3621C")]
	public void EndPerformance()
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0xD36228", Offset = "0xD36228", VA = "0xD36228")]
	public StageDirector()
	{
	}
}
[Token(Token = "0x2000008")]
[ExecuteInEditMode]
public class ForceAspectRatio : MonoBehaviour
{
	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float horizontal;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float vertical;

	[Token(Token = "0x6000025")]
	[Address(RVA = "0x11D9010", Offset = "0x11D9010", VA = "0x11D9010")]
	private void Update()
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0x11D9078", Offset = "0x11D9078", VA = "0x11D9078")]
	public ForceAspectRatio()
	{
	}
}
[Token(Token = "0x2000009")]
[ExecuteInEditMode]
public class MirrorReflection : MonoBehaviour
{
	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material m_matCopyDepth;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool m_DisablePixelLights;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int m_TextureSize;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float m_ClipPlaneOffset;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public LayerMask m_ReflectLayers;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Hashtable m_ReflectionCameras;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RenderTexture m_ReflectionTexture;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RenderTexture m_ReflectionDepthTexture;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int m_OldReflectionTextureSize;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool s_InsideRendering;

	[Token(Token = "0x6000027")]
	[Address(RVA = "0x15C3418", Offset = "0x15C3418", VA = "0x15C3418")]
	public void OnWillRenderObject()
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0x15C4F1C", Offset = "0x15C4F1C", VA = "0x15C4F1C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0x15C44A0", Offset = "0x15C44A0", VA = "0x15C44A0")]
	private void UpdateCameraModes(Camera src, Camera dest)
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0x15C3E4C", Offset = "0x15C3E4C", VA = "0x15C3E4C")]
	private void CreateMirrorObjects(Camera currentCamera, out Camera reflectionCamera)
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0x15C5284", Offset = "0x15C5284", VA = "0x15C5284")]
	private static float sgn(float a)
	{
		return default(float);
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0x15C4A20", Offset = "0x15C4A20", VA = "0x15C4A20")]
	private Vector4 CameraSpacePlane(Camera cam, Vector3 pos, Vector3 normal, float sideSign)
	{
		return default(Vector4);
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0x15C4C04", Offset = "0x15C4C04", VA = "0x15C4C04")]
	private static void CalculateObliqueMatrix(ref Matrix4x4 projection, Vector4 clipPlane)
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0x15C477C", Offset = "0x15C477C", VA = "0x15C477C")]
	private static void CalculateReflectionMatrix(ref Matrix4x4 reflectionMat, Vector4 plane)
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0x15C4E40", Offset = "0x15C4E40", VA = "0x15C4E40")]
	public static void DrawFullscreenQuad(float z = 1f)
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0x15C52A4", Offset = "0x15C52A4", VA = "0x15C52A4")]
	public MirrorReflection()
	{
	}
}
[Token(Token = "0x200000A")]
public class MathUtils
{
	[Token(Token = "0x6000032")]
	[Address(RVA = "0x15C1E8C", Offset = "0x15C1E8C", VA = "0x15C1E8C")]
	public static float GetQuatLength(Quaternion q)
	{
		return default(float);
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0x15C1F48", Offset = "0x15C1F48", VA = "0x15C1F48")]
	public static Quaternion GetQuatConjugate(Quaternion q)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0x15C1F84", Offset = "0x15C1F84", VA = "0x15C1F84")]
	public static Quaternion GetQuatLog(Quaternion q)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0x15C2070", Offset = "0x15C2070", VA = "0x15C2070")]
	public static Quaternion GetQuatExp(Quaternion q)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0x15C2164", Offset = "0x15C2164", VA = "0x15C2164")]
	public static Quaternion GetQuatSquad(float t, Quaternion q0, Quaternion q1, Quaternion a0, Quaternion a1)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0x15C2474", Offset = "0x15C2474", VA = "0x15C2474")]
	public static Quaternion GetSquadIntermediate(Quaternion q0, Quaternion q1, Quaternion q2)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0x15C2628", Offset = "0x15C2628", VA = "0x15C2628")]
	public static float Ease(float t, float k1, float k2)
	{
		return default(float);
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0x15C2258", Offset = "0x15C2258", VA = "0x15C2258")]
	public static Quaternion Slerp(Quaternion p, Quaternion q, float t)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0x15C2780", Offset = "0x15C2780", VA = "0x15C2780")]
	public MathUtils()
	{
	}
}
[Token(Token = "0x200000B")]
public class MeshCombineUtility
{
	[Token(Token = "0x2000305")]
	public struct MeshInstance
	{
		[Token(Token = "0x4000DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Mesh mesh;

		[Token(Token = "0x4000DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int subMeshIndex;

		[Token(Token = "0x4000DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Matrix4x4 transform;
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0x15C2788", Offset = "0x15C2788", VA = "0x15C2788")]
	public static Mesh Combine(MeshInstance[] combines, bool generateStrips)
	{
		return null;
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0x15C2FF8", Offset = "0x15C2FF8", VA = "0x15C2FF8")]
	private static void Copy(int vertexcount, Vector3[] src, Vector3[] dst, ref int offset, Matrix4x4 transform)
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0x15C30D8", Offset = "0x15C30D8", VA = "0x15C30D8")]
	private static void CopyNormal(int vertexcount, Vector3[] src, Vector3[] dst, ref int offset, Matrix4x4 transform)
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0x15C32F4", Offset = "0x15C32F4", VA = "0x15C32F4")]
	private static void Copy(int vertexcount, Vector2[] src, Vector2[] dst, ref int offset)
	{
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0x15C31DC", Offset = "0x15C31DC", VA = "0x15C31DC")]
	private static void CopyTangents(int vertexcount, Vector4[] src, Vector4[] dst, ref int offset, Matrix4x4 transform)
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0x15C3378", Offset = "0x15C3378", VA = "0x15C3378")]
	public MeshCombineUtility()
	{
	}
}
[Token(Token = "0x200000C")]
public enum eOrientationMode
{
	[Token(Token = "0x400003B")]
	NODE,
	[Token(Token = "0x400003C")]
	TANGENT
}
[Token(Token = "0x200000D")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x93E380", Offset = "0x93E380")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x93E380", Offset = "0x93E380")]
public class SplineController : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000306")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93FD10", Offset = "0x93FD10")]
	private sealed class <>c
	{
		[Token(Token = "0x4000DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Converter<Component, Transform> <>9__12_0;

		[Token(Token = "0x4000DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Comparison<Transform> <>9__12_1;

		[Token(Token = "0x6002ACF")]
		[Address(RVA = "0xD3499C", Offset = "0xD3499C", VA = "0xD3499C")]
		public <>c()
		{
		}

		[Token(Token = "0x6002AD0")]
		[Address(RVA = "0xD349A4", Offset = "0xD349A4", VA = "0xD349A4")]
		internal Transform <GetTransforms>b__12_0(Component c)
		{
			return null;
		}

		[Token(Token = "0x6002AD1")]
		[Address(RVA = "0xD34A28", Offset = "0xD34A28", VA = "0xD34A28")]
		internal int <GetTransforms>b__12_1(Transform a, Transform b)
		{
			return default(int);
		}
	}

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject SplineRoot;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Duration;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public eOrientationMode OrientationMode;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public eWrapMode WrapMode;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool AutoStart;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool AutoClose;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
	public bool HideOnExecute;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SplineInterpolator mSplineInterp;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform[] mTransforms;

	[Token(Token = "0x6000041")]
	[Address(RVA = "0xD33428", Offset = "0xD33428", VA = "0xD33428")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0xD34000", Offset = "0xD34000", VA = "0xD34000")]
	private void Start()
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0xD33944", Offset = "0xD33944", VA = "0xD33944")]
	private void SetupSplineInterpolator(SplineInterpolator interp, Transform[] trans)
	{
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0xD3369C", Offset = "0xD3369C", VA = "0xD3369C")]
	private Transform[] GetTransforms()
	{
		return null;
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0xD34100", Offset = "0xD34100", VA = "0xD34100")]
	private void DisableTransforms()
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0xD34198", Offset = "0xD34198", VA = "0xD34198")]
	private void FollowSpline()
	{
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0xD34918", Offset = "0xD34918", VA = "0xD34918")]
	public SplineController()
	{
	}
}
[Token(Token = "0x200000E")]
public enum eEndPointsMode
{
	[Token(Token = "0x4000047")]
	AUTO,
	[Token(Token = "0x4000048")]
	AUTOCLOSED,
	[Token(Token = "0x4000049")]
	EXPLICIT
}
[Token(Token = "0x200000F")]
public enum eWrapMode
{
	[Token(Token = "0x400004B")]
	ONCE,
	[Token(Token = "0x400004C")]
	LOOP
}
[Token(Token = "0x2000010")]
public delegate void OnEndCallback();
[Token(Token = "0x2000011")]
public class SplineInterpolator : MonoBehaviour
{
	[Token(Token = "0x2000307")]
	internal class SplineNode
	{
		[Token(Token = "0x4000DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal Vector3 Point;

		[Token(Token = "0x4000DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal Quaternion Rot;

		[Token(Token = "0x4000DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		internal float Time;

		[Token(Token = "0x4000DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal Vector2 EaseIO;

		[Token(Token = "0x6002AD2")]
		[Address(RVA = "0xD34CE0", Offset = "0xD34CE0", VA = "0xD34CE0")]
		internal SplineNode(Vector3 p, Quaternion q, float t, Vector2 io)
		{
		}

		[Token(Token = "0x6002AD3")]
		[Address(RVA = "0xD34E04", Offset = "0xD34E04", VA = "0xD34E04")]
		internal SplineNode(SplineNode o)
		{
		}
	}

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private eEndPointsMode mEndPointsMode;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<SplineNode> mNodes;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string mState;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool mRotations;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OnEndCallback mOnEndCallback;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float mCurrentTime;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int mCurrentIdx;

	[Token(Token = "0x600004C")]
	[Address(RVA = "0xD34A7C", Offset = "0xD34A7C", VA = "0xD34A7C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0xD33CD4", Offset = "0xD33CD4", VA = "0xD33CD4")]
	public void StartInterpolation(OnEndCallback endCallback, bool bRotations, eWrapMode mode)
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0xD341F0", Offset = "0xD341F0", VA = "0xD341F0")]
	public void Reset()
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0xD3426C", Offset = "0xD3426C", VA = "0xD3426C")]
	public void AddPoint(Vector3 pos, Quaternion quat, float timeInSeconds, Vector2 easeInOut)
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0xD34A80", Offset = "0xD34A80", VA = "0xD34A80")]
	private void SetInput()
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0xD34D64", Offset = "0xD34D64", VA = "0xD34D64")]
	private void SetExplicitMode()
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0xD343A4", Offset = "0xD343A4", VA = "0xD343A4")]
	public void SetAutoCloseMode(float joiningPointTime)
	{
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0xD34E5C", Offset = "0xD34E5C", VA = "0xD34E5C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0xD3558C", Offset = "0xD3558C", VA = "0xD3558C")]
	private Quaternion GetSquad(int idxFirstPoint, float t)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0xD35248", Offset = "0xD35248", VA = "0xD35248")]
	public Vector3 GetHermiteInternal(int idxFirstPoint, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0xD33DB8", Offset = "0xD33DB8", VA = "0xD33DB8")]
	public Vector3 GetHermiteAtTime(float timeParam)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0xD357D4", Offset = "0xD357D4", VA = "0xD357D4")]
	public SplineInterpolator()
	{
	}
}
[Token(Token = "0x2000012")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x93E408", Offset = "0x93E408")]
public class BlurEffect : MonoBehaviour
{
	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int iterations;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float blurSpread;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Shader blurShader;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Material m_Material;

	[Token(Token = "0x17000001")]
	protected Material material
	{
		[Token(Token = "0x6000058")]
		[Address(RVA = "0xEE9910", Offset = "0xEE9910", VA = "0xEE9910")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0xEE9A48", Offset = "0xEE9A48", VA = "0xEE9A48")]
	protected void OnDisable()
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0xEE9B44", Offset = "0xEE9B44", VA = "0xEE9B44")]
	protected void Start()
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0xEE9C04", Offset = "0xEE9C04", VA = "0xEE9C04")]
	public void FourTapCone(RenderTexture source, RenderTexture dest, int iteration)
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0xEE9DA8", Offset = "0xEE9DA8", VA = "0xEE9DA8")]
	private void DownSample4x(RenderTexture source, RenderTexture dest)
	{
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0xEE9F20", Offset = "0xEE9F20", VA = "0xEE9F20")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0xEEA108", Offset = "0xEEA108", VA = "0xEEA108")]
	public BlurEffect()
	{
	}
}
[Token(Token = "0x2000013")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x93E454", Offset = "0x93E454")]
public class ColorCorrectionEffect : ImageEffectBase
{
	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture textureRamp;

	[Token(Token = "0x6000060")]
	[Address(RVA = "0xEEF3B8", Offset = "0xEEF3B8", VA = "0xEEF3B8")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0xEEF478", Offset = "0xEEF478", VA = "0xEEF478")]
	public ColorCorrectionEffect()
	{
	}
}
[Token(Token = "0x2000014")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x93E4A0", Offset = "0x93E4A0")]
public class ContrastStretchEffect : MonoBehaviour
{
	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float adaptationSpeed;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float limitMinimum;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float limitMaximum;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RenderTexture[] adaptRenderTex;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int curAdaptIndex;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Shader shaderLum;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material m_materialLum;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Shader shaderReduce;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Material m_materialReduce;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Shader shaderAdapt;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material m_materialAdapt;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Shader shaderApply;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Material m_materialApply;

	[Token(Token = "0x17000002")]
	protected Material materialLum
	{
		[Token(Token = "0x6000062")]
		[Address(RVA = "0xEEF480", Offset = "0xEEF480", VA = "0xEEF480")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000003")]
	protected Material materialReduce
	{
		[Token(Token = "0x6000063")]
		[Address(RVA = "0xEEF544", Offset = "0xEEF544", VA = "0xEEF544")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000004")]
	protected Material materialAdapt
	{
		[Token(Token = "0x6000064")]
		[Address(RVA = "0xEEF608", Offset = "0xEEF608", VA = "0xEEF608")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000005")]
	protected Material materialApply
	{
		[Token(Token = "0x6000065")]
		[Address(RVA = "0xEEF6CC", Offset = "0xEEF6CC", VA = "0xEEF6CC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0xEEF790", Offset = "0xEEF790", VA = "0xEEF790")]
	private void Start()
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0xEEF824", Offset = "0xEEF824", VA = "0xEEF824")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0xEEF974", Offset = "0xEEF974", VA = "0xEEF974")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0xEEFB9C", Offset = "0xEEFB9C", VA = "0xEEFB9C")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0xEEFDF8", Offset = "0xEEFDF8", VA = "0xEEFDF8")]
	private void CalculateAdaptation(Texture curTexture)
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0xEEFFD0", Offset = "0xEEFFD0", VA = "0xEEFFD0")]
	public ContrastStretchEffect()
	{
	}
}
[Token(Token = "0x2000015")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x93E4EC", Offset = "0x93E4EC")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x93E4EC", Offset = "0x93E4EC")]
public class GlowEffect : MonoBehaviour
{
	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float glowIntensity;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int blurIterations;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float blurSpread;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Color glowTint;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Shader compositeShader;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material m_CompositeMaterial;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Shader blurShader;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Material m_BlurMaterial;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Shader downsampleShader;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material m_DownsampleMaterial;

	[Token(Token = "0x17000006")]
	protected Material compositeMaterial
	{
		[Token(Token = "0x600006C")]
		[Address(RVA = "0x11E9FF0", Offset = "0x11E9FF0", VA = "0x11E9FF0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000007")]
	protected Material blurMaterial
	{
		[Token(Token = "0x600006D")]
		[Address(RVA = "0x11EA0B4", Offset = "0x11EA0B4", VA = "0x11EA0B4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000008")]
	protected Material downsampleMaterial
	{
		[Token(Token = "0x600006E")]
		[Address(RVA = "0x11EA178", Offset = "0x11EA178", VA = "0x11EA178")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0x11EA23C", Offset = "0x11EA23C", VA = "0x11EA23C")]
	protected void OnDisable()
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0x11EA394", Offset = "0x11EA394", VA = "0x11EA394")]
	protected void Start()
	{
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0x11EA4F8", Offset = "0x11EA4F8", VA = "0x11EA4F8")]
	public void FourTapCone(RenderTexture source, RenderTexture dest, int iteration)
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0x11EA69C", Offset = "0x11EA69C", VA = "0x11EA69C")]
	private void DownSample4x(RenderTexture source, RenderTexture dest)
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0x11EA780", Offset = "0x11EA780", VA = "0x11EA780")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0x11EAA40", Offset = "0x11EAA40", VA = "0x11EAA40")]
	public void BlitGlow(RenderTexture source, RenderTexture dest)
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0x11EAB60", Offset = "0x11EAB60", VA = "0x11EAB60")]
	public GlowEffect()
	{
	}
}
[Token(Token = "0x2000016")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x93E584", Offset = "0x93E584")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x93E584", Offset = "0x93E584")]
public class ImageEffectBase : MonoBehaviour
{
	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader shader;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material m_Material;

	[Token(Token = "0x17000009")]
	protected Material material
	{
		[Token(Token = "0x6000077")]
		[Address(RVA = "0x11EB4F0", Offset = "0x11EB4F0", VA = "0x11EB4F0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0x11EB440", Offset = "0x11EB440", VA = "0x11EB440", Slot = "4")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0x11EB5B4", Offset = "0x11EB5B4", VA = "0x11EB5B4", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0x11EB664", Offset = "0x11EB664", VA = "0x11EB664")]
	public ImageEffectBase()
	{
	}
}
[Token(Token = "0x2000017")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x93E60C", Offset = "0x93E60C")]
public class ImageEffects
{
	[Token(Token = "0x600007A")]
	[Address(RVA = "0x11EB66C", Offset = "0x11EB66C", VA = "0x11EB66C")]
	public static void RenderDistortion(Material material, RenderTexture source, RenderTexture destination, float angle, Vector2 center, Vector2 radius)
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0x11EB8E8", Offset = "0x11EB8E8", VA = "0x11EB8E8")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x944D64", Offset = "0x944D64")]
	public static void Blit(RenderTexture source, RenderTexture dest)
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0x11EB960", Offset = "0x11EB960", VA = "0x11EB960")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x944D9C", Offset = "0x944D9C")]
	public static void BlitWithMaterial(Material material, RenderTexture source, RenderTexture dest)
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0x11EB9E0", Offset = "0x11EB9E0", VA = "0x11EB9E0")]
	public ImageEffects()
	{
	}
}
[Token(Token = "0x2000018")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x93E644", Offset = "0x93E644")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x93E644", Offset = "0x93E644")]
public class MotionBlur : ImageEffectBase
{
	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float blurAmount;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool extraBlur;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RenderTexture accumTexture;

	[Token(Token = "0x600007E")]
	[Address(RVA = "0x15C708C", Offset = "0x15C708C", VA = "0x15C708C", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0x15C70D4", Offset = "0x15C70D4", VA = "0x15C70D4", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0x15C714C", Offset = "0x15C714C", VA = "0x15C714C")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0x15C74BC", Offset = "0x15C74BC", VA = "0x15C74BC")]
	public MotionBlur()
	{
	}
}
[Token(Token = "0x2000019")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x93E6DC", Offset = "0x93E6DC")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x93E6DC", Offset = "0x93E6DC")]
public class NoiseEffect : MonoBehaviour
{
	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool monochrome;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool rgbFallback;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float grainIntensityMin;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float grainIntensityMax;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float grainSize;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float scratchIntensityMin;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float scratchIntensityMax;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float scratchFPS;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float scratchJitter;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture grainTexture;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture scratchTexture;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Shader shaderRGB;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Shader shaderYUV;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material m_MaterialRGB;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material m_MaterialYUV;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float scratchTimeLeft;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float scratchX;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float scratchY;

	[Token(Token = "0x1700000A")]
	protected Material material
	{
		[Token(Token = "0x6000083")]
		[Address(RVA = "0x15C7610", Offset = "0x15C7610", VA = "0x15C7610")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x15C74D0", Offset = "0x15C74D0", VA = "0x15C74D0")]
	protected void Start()
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0x15C776C", Offset = "0x15C776C", VA = "0x15C776C")]
	protected void OnDisable()
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0x15C7870", Offset = "0x15C7870", VA = "0x15C7870")]
	private void SanitizeParameters()
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0x15C79AC", Offset = "0x15C79AC", VA = "0x15C79AC")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0x15C7CF4", Offset = "0x15C7CF4", VA = "0x15C7CF4")]
	public NoiseEffect()
	{
	}
}
[Token(Token = "0x200001A")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x93E774", Offset = "0x93E774")]
public class TwirlEffect : ImageEffectBase
{
	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector2 radius;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float angle;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector2 center;

	[Token(Token = "0x6000088")]
	[Address(RVA = "0x11AB9DC", Offset = "0x11AB9DC", VA = "0x11AB9DC")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0x11ABA28", Offset = "0x11ABA28", VA = "0x11ABA28")]
	public TwirlEffect()
	{
	}
}
[Token(Token = "0x200001B")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x93E7C0", Offset = "0x93E7C0")]
public class VortexEffect : ImageEffectBase
{
	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector2 radius;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float angle;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector2 center;

	[Token(Token = "0x600008A")]
	[Address(RVA = "0xD1777C", Offset = "0xD1777C", VA = "0xD1777C")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0xD177C8", Offset = "0xD177C8", VA = "0xD177C8")]
	public VortexEffect()
	{
	}
}
[Token(Token = "0x200001C")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x93E80C", Offset = "0x93E80C")]
public class Displace : MonoBehaviour
{
	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private WaterBase waterBase;

	[Token(Token = "0x600008C")]
	[Address(RVA = "0x1123A30", Offset = "0x1123A30", VA = "0x1123A30")]
	public void Start()
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0x1123B50", Offset = "0x1123B50", VA = "0x1123B50")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0x1123BB0", Offset = "0x1123BB0", VA = "0x1123BB0")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0x1123C10", Offset = "0x1123C10", VA = "0x1123C10")]
	public Displace()
	{
	}
}
[Token(Token = "0x200001D")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x93E880", Offset = "0x93E880")]
public class GerstnerDisplace : Displace
{
	[Token(Token = "0x6000090")]
	[Address(RVA = "0x11E9FE8", Offset = "0x11E9FE8", VA = "0x11E9FE8")]
	public GerstnerDisplace()
	{
	}
}
[Token(Token = "0x200001E")]
public class MeshContainer
{
	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Mesh mesh;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3[] vertices;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3[] normals;

	[Token(Token = "0x6000091")]
	[Address(RVA = "0x15C3380", Offset = "0x15C3380", VA = "0x15C3380")]
	public MeshContainer(Mesh m)
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0x15C33D4", Offset = "0x15C33D4", VA = "0x15C33D4")]
	public void Update()
	{
	}
}
[Token(Token = "0x200001F")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x93E8F4", Offset = "0x93E8F4")]
public class PlanarReflection : MonoBehaviour
{
	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask reflectionMask;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool reflectSkybox;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color clearColor;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string reflectionSampler;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float clipPlaneOffset;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 oldpos;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Camera reflectionCamera;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Material sharedMaterial;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Dictionary<Camera, bool> helperCameras;

	[Token(Token = "0x6000093")]
	[Address(RVA = "0x1011BB8", Offset = "0x1011BB8", VA = "0x1011BB8")]
	public void Start()
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0x1011CA8", Offset = "0x1011CA8", VA = "0x1011CA8")]
	private Camera CreateReflectionCameraFor(Camera cam)
	{
		return null;
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0x1011FB0", Offset = "0x1011FB0", VA = "0x1011FB0")]
	private void SetStandardCameraParameter(Camera cam, LayerMask mask)
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0x1012064", Offset = "0x1012064", VA = "0x1012064")]
	private RenderTexture CreateTextureFor(Camera cam)
	{
		return null;
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0x101216C", Offset = "0x101216C", VA = "0x101216C")]
	public void RenderHelpCameras(Camera currentCam)
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0x1012A34", Offset = "0x1012A34", VA = "0x1012A34")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0x1012A94", Offset = "0x1012A94", VA = "0x1012A94")]
	public void WaterTileBeingRendered(Transform tr, Camera currentCam)
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0x1012B8C", Offset = "0x1012B8C", VA = "0x1012B8C")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0x1012BEC", Offset = "0x1012BEC", VA = "0x1012BEC")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0x10122D4", Offset = "0x10122D4", VA = "0x10122D4")]
	private void RenderReflectionFor(Camera cam, Camera reflectCamera)
	{
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0x1012C4C", Offset = "0x1012C4C", VA = "0x1012C4C")]
	private void SaneCameraSettings(Camera helperCam)
	{
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0x101314C", Offset = "0x101314C", VA = "0x101314C")]
	private static Matrix4x4 CalculateObliqueMatrix(Matrix4x4 projection, Vector4 clipPlane)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0x1012CB0", Offset = "0x1012CB0", VA = "0x1012CB0")]
	private static Matrix4x4 CalculateReflectionMatrix(Matrix4x4 reflectionMat, Vector4 plane)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0x1013384", Offset = "0x1013384", VA = "0x1013384")]
	private static float sgn(float a)
	{
		return default(float);
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0x1012F68", Offset = "0x1012F68", VA = "0x1012F68")]
	private Vector4 CameraSpacePlane(Camera cam, Vector3 pos, Vector3 normal, float sideSign)
	{
		return default(Vector4);
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0x10133A4", Offset = "0x10133A4", VA = "0x10133A4")]
	public PlanarReflection()
	{
	}
}
[Token(Token = "0x2000020")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x93E968", Offset = "0x93E968")]
[ExecuteInEditMode]
public class SpecularLighting : MonoBehaviour
{
	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform specularLight;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private WaterBase waterBase;

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0xD3310C", Offset = "0xD3310C", VA = "0xD3310C")]
	public void Start()
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0xD331F8", Offset = "0xD331F8", VA = "0xD331F8")]
	public void Update()
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0xD33420", Offset = "0xD33420", VA = "0xD33420")]
	public SpecularLighting()
	{
	}
}
[Token(Token = "0x2000021")]
public enum WaterQuality
{
	[Token(Token = "0x400009D")]
	High = 2,
	[Token(Token = "0x400009E")]
	Medium = 1,
	[Token(Token = "0x400009F")]
	Low = 0
}
[Token(Token = "0x2000022")]
[ExecuteInEditMode]
public class WaterBase : MonoBehaviour
{
	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material sharedMaterial;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public WaterQuality waterQuality;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool edgeBlend;

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0xD17844", Offset = "0xD17844", VA = "0xD17844")]
	public void UpdateShader()
	{
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0xD179B0", Offset = "0xD179B0", VA = "0xD179B0")]
	public void WaterTileBeingRendered(Transform tr, Camera currentCam)
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0xD17A64", Offset = "0xD17A64", VA = "0xD17A64")]
	public void Update()
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0xD17AE8", Offset = "0xD17AE8", VA = "0xD17AE8")]
	public WaterBase()
	{
	}
}
[Token(Token = "0x2000023")]
[ExecuteInEditMode]
public class WaterTile : MonoBehaviour
{
	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlanarReflection reflection;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public WaterBase waterBase;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Camera c;

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0xD17B00", Offset = "0xD17B00", VA = "0xD17B00")]
	public void Start()
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0xD17B04", Offset = "0xD17B04", VA = "0xD17B04")]
	private void AcquireComponents()
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0xD17CA8", Offset = "0xD17CA8", VA = "0xD17CA8")]
	public void OnWillRenderObject()
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0xD17DE4", Offset = "0xD17DE4", VA = "0xD17DE4")]
	public WaterTile()
	{
	}
}
[Token(Token = "0x2000024")]
public class ParticlePlexusDemo_CameraRig : MonoBehaviour
{
	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform pivot;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 targetRotation;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9408F8", Offset = "0x9408F8")]
	public float rotationLimit;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float rotationSpeed;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float rotationLerpSpeed;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 startRotation;

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0x15C7F7C", Offset = "0x15C7F7C", VA = "0x15C7F7C")]
	private void Start()
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0x15C7FBC", Offset = "0x15C7FBC", VA = "0x15C7FBC")]
	private void Update()
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0x15C815C", Offset = "0x15C815C", VA = "0x15C815C")]
	public ParticlePlexusDemo_CameraRig()
	{
	}
}
[Token(Token = "0x2000025")]
public class ExampleWheelController : MonoBehaviour
{
	[Token(Token = "0x2000308")]
	private static class Uniforms
	{
		[Token(Token = "0x4000DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static readonly int _MotionAmount;
	}

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float acceleration;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer motionVectorRenderer;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody m_Rigidbody;

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x11D8304", Offset = "0x11D8304", VA = "0x11D8304")]
	private void Start()
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x11D8370", Offset = "0x11D8370", VA = "0x11D8370")]
	private void Update()
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x11D852C", Offset = "0x11D852C", VA = "0x11D852C")]
	public ExampleWheelController()
	{
	}
}
[Token(Token = "0x2000026")]
public class ChinarCamera : MonoBehaviour
{
	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform pivot;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 pivotOffset;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform target;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float distance;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float minDistance;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float maxDistance;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float zoomSpeed;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float xSpeed;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float ySpeed;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool allowYTilt;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float yMinLimit;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float yMaxLimit;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float x;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float y;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float targetX;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float targetY;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float targetDistance;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float xVelocity;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float yVelocity;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float zoomVelocity;

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0xEEDA54", Offset = "0xEEDA54", VA = "0xEEDA54")]
	private void Start()
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0xEEDB60", Offset = "0xEEDB60", VA = "0xEEDB60")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0xEEDAB0", Offset = "0xEEDAB0", VA = "0xEEDAB0")]
	private static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0xEEDF80", Offset = "0xEEDF80", VA = "0xEEDF80")]
	public ChinarCamera()
	{
	}
}
[Token(Token = "0x2000027")]
[ExecuteInEditMode]
public class ChinarMirror : MonoBehaviour
{
	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject mirrorPlane;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Camera mainCamera;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Camera mirrorCamera;

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0xEEE034", Offset = "0xEEE034", VA = "0xEEE034")]
	private void Start()
	{
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0xEEE08C", Offset = "0xEEE08C", VA = "0xEEE08C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0xEEE234", Offset = "0xEEE234", VA = "0xEEE234")]
	public ChinarMirror()
	{
	}
}
[Token(Token = "0x2000028")]
[ExecuteInEditMode]
public class ChinarMirrorPlane : MonoBehaviour
{
	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject mirrorPlane;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool estimateViewFrustum;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool setNearClipPlane;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float nearClipDistanceOffset;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Camera mirrorCamera;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 vn;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float l;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float r;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float b;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float t;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float d;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float n;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float f;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 pa;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 pb;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 pc;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Vector3 pe;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 va;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3 vb;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 vc;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Vector3 vr;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector3 vu;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private Matrix4x4 p;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Matrix4x4 rm;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private Matrix4x4 tm;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private Quaternion q;

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0xEEE23C", Offset = "0xEEE23C", VA = "0xEEE23C")]
	private void Start()
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0xEEE294", Offset = "0xEEE294", VA = "0xEEE294")]
	private void Update()
	{
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0xEEF138", Offset = "0xEEF138", VA = "0xEEF138")]
	public ChinarMirrorPlane()
	{
	}
}
[Token(Token = "0x2000029")]
public class RotateObject : MonoBehaviour
{
	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float rangMin;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float rangMax;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float speed;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 vect;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private bool rotate;

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0xD2FDF0", Offset = "0xD2FDF0", VA = "0xD2FDF0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0xD2FE44", Offset = "0xD2FE44", VA = "0xD2FE44")]
	private void Start()
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0xD2FE48", Offset = "0xD2FE48", VA = "0xD2FE48")]
	private void Update()
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0xD2FF30", Offset = "0xD2FF30", VA = "0xD2FF30")]
	public void StartRotation()
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0xD2FF3C", Offset = "0xD2FF3C", VA = "0xD2FF3C")]
	public void Forward()
	{
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0xD2FF90", Offset = "0xD2FF90", VA = "0xD2FF90")]
	public void Reverse()
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0xD2FFE4", Offset = "0xD2FFE4", VA = "0xD2FFE4")]
	public void StopRotation()
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0xD2FFEC", Offset = "0xD2FFEC", VA = "0xD2FFEC")]
	public RotateObject()
	{
	}
}
[Token(Token = "0x200002A")]
public class ExportToLuaAttrbute : Attribute
{
	[Token(Token = "0x60000C6")]
	[Address(RVA = "0x11D8598", Offset = "0x11D8598", VA = "0x11D8598")]
	public ExportToLuaAttrbute()
	{
	}
}
[Token(Token = "0x200002B")]
public class SwordLua
{
	[Token(Token = "0x2000309")]
	public delegate byte[] LoadFileHandler(string fileName);

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LoadFileHandler handler;

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0xC2870C", Offset = "0xC2870C", VA = "0xC2870C")]
	public SwordLua()
	{
	}
}
[Token(Token = "0x200002C")]
public class LuaInterface_EventObjectWrap
{
	[Token(Token = "0x60000C8")]
	[Address(RVA = "0x15BF764", Offset = "0x15BF764", VA = "0x15BF764")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0x15BF39C", Offset = "0x15BF39C", VA = "0x15BF39C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x944DD4", Offset = "0x944DD4")]
	private static int op_Subtraction(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0x15BF580", Offset = "0x15BF580", VA = "0x15BF580")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x944E38", Offset = "0x944E38")]
	private static int op_Addition(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0x15BF8F0", Offset = "0x15BF8F0", VA = "0x15BF8F0")]
	public LuaInterface_EventObjectWrap()
	{
	}
}
[Token(Token = "0x200002D")]
public class LuaInterface_LuaConstructorWrap
{
	[Token(Token = "0x60000CC")]
	[Address(RVA = "0x15BFC40", Offset = "0x15BFC40", VA = "0x15BFC40")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0x15BF8F8", Offset = "0x15BF8F8", VA = "0x15BF8F8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x944E9C", Offset = "0x944E9C")]
	private static int Call(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0x15BFA94", Offset = "0x15BFA94", VA = "0x15BFA94")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x944F00", Offset = "0x944F00")]
	private static int Destroy(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0x15BFDCC", Offset = "0x15BFDCC", VA = "0x15BFDCC")]
	public LuaInterface_LuaConstructorWrap()
	{
	}
}
[Token(Token = "0x200002E")]
public class LuaInterface_LuaFieldWrap
{
	[Token(Token = "0x60000D0")]
	[Address(RVA = "0x15C010C", Offset = "0x15C010C", VA = "0x15C010C")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0x15BFDD4", Offset = "0x15BFDD4", VA = "0x15BFDD4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x944F64", Offset = "0x944F64")]
	private static int Get(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0x15BFF70", Offset = "0x15BFF70", VA = "0x15BFF70")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x944FC8", Offset = "0x944FC8")]
	private static int Set(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0x15C0298", Offset = "0x15C0298", VA = "0x15C0298")]
	public LuaInterface_LuaFieldWrap()
	{
	}
}
[Token(Token = "0x200002F")]
public class LuaInterface_LuaMethodWrap
{
	[Token(Token = "0x60000D4")]
	[Address(RVA = "0x15C05E8", Offset = "0x15C05E8", VA = "0x15C05E8")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0x15C02A0", Offset = "0x15C02A0", VA = "0x15C02A0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94602C", Offset = "0x94602C")]
	private static int Destroy(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0x15C044C", Offset = "0x15C044C", VA = "0x15C044C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x946090", Offset = "0x946090")]
	private static int Call(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0x15C0774", Offset = "0x15C0774", VA = "0x15C0774")]
	public LuaInterface_LuaMethodWrap()
	{
	}
}
[Token(Token = "0x2000030")]
public class LuaInterface_LuaOutWrap
{
	[Token(Token = "0x60000D8")]
	[Address(RVA = "0x15C09D4", Offset = "0x15C09D4", VA = "0x15C09D4")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0x15C077C", Offset = "0x15C077C", VA = "0x15C077C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9460F4", Offset = "0x9460F4")]
	private static int LuaOpen_ToLua_Out(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60000DA")]
	private static void RawSetOutType<T>(IntPtr L)
	{
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0x15C0A78", Offset = "0x15C0A78", VA = "0x15C0A78")]
	public LuaInterface_LuaOutWrap()
	{
	}
}
[Token(Token = "0x2000031")]
public class LuaInterface_LuaPropertyWrap
{
	[Token(Token = "0x60000DC")]
	[Address(RVA = "0x15C0DB8", Offset = "0x15C0DB8", VA = "0x15C0DB8")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0x15C0A80", Offset = "0x15C0A80", VA = "0x15C0A80")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x946158", Offset = "0x946158")]
	private static int Get(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0x15C0C1C", Offset = "0x15C0C1C", VA = "0x15C0C1C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9461BC", Offset = "0x9461BC")]
	private static int Set(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0x15C0F44", Offset = "0x15C0F44", VA = "0x15C0F44")]
	public LuaInterface_LuaPropertyWrap()
	{
	}
}
[Token(Token = "0x2000032")]
public class System_ArrayWrap
{
	[Token(Token = "0x60000E0")]
	[Address(RVA = "0x1A827F4", Offset = "0x1A827F4", VA = "0x1A827F4")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0x1A8305C", Offset = "0x1A8305C", VA = "0x1A8305C")]
	private static bool GetPrimitiveValue(IntPtr L, object obj, Type t, int index)
	{
		return default(bool);
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0x1A799B8", Offset = "0x1A799B8", VA = "0x1A799B8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x946220", Offset = "0x946220")]
	private static int get_Item(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0x1A83878", Offset = "0x1A83878", VA = "0x1A83878")]
	private static bool SetPrimitiveValue(IntPtr L, object obj, Type t, int index)
	{
		return default(bool);
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0x1A7A2F8", Offset = "0x1A7A2F8", VA = "0x1A7A2F8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x946284", Offset = "0x946284")]
	private static int set_Item(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0x1A7AB18", Offset = "0x1A7AB18", VA = "0x1A7AB18")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9462E8", Offset = "0x9462E8")]
	private static int get_Length(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0x1A7AD00", Offset = "0x1A7AD00", VA = "0x1A7AD00")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94634C", Offset = "0x94634C")]
	private static int ToTable(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0x1A7C138", Offset = "0x1A7C138", VA = "0x1A7C138")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9463B0", Offset = "0x9463B0")]
	private static int GetLength(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0x1A7C338", Offset = "0x1A7C338", VA = "0x1A7C338")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x946414", Offset = "0x946414")]
	private static int GetLongLength(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0x1A7C538", Offset = "0x1A7C538", VA = "0x1A7C538")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x946478", Offset = "0x946478")]
	private static int GetLowerBound(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0x1A7C738", Offset = "0x1A7C738", VA = "0x1A7C738")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9464DC", Offset = "0x9464DC")]
	private static int GetValue(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0x1A7D20C", Offset = "0x1A7D20C", VA = "0x1A7D20C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x946540", Offset = "0x946540")]
	private static int SetValue(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0x1A7DEF0", Offset = "0x1A7DEF0", VA = "0x1A7DEF0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9465A4", Offset = "0x9465A4")]
	private static int GetEnumerator(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0x1A7E090", Offset = "0x1A7E090", VA = "0x1A7E090")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x946608", Offset = "0x946608")]
	private static int GetUpperBound(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0x1A7E290", Offset = "0x1A7E290", VA = "0x1A7E290")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94666C", Offset = "0x94666C")]
	private static int CreateInstance(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0x1A7EBD4", Offset = "0x1A7EBD4", VA = "0x1A7EBD4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9466D0", Offset = "0x9466D0")]
	private static int BinarySearch(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0x1A7F318", Offset = "0x1A7F318", VA = "0x1A7F318")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x946734", Offset = "0x946734")]
	private static int Clear(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0x1A7F568", Offset = "0x1A7F568", VA = "0x1A7F568")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x946798", Offset = "0x946798")]
	private static int Clone(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0x1A7F708", Offset = "0x1A7F708", VA = "0x1A7F708")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9467FC", Offset = "0x9467FC")]
	private static int Copy(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0x1A7FD10", Offset = "0x1A7FD10", VA = "0x1A7FD10")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x946860", Offset = "0x946860")]
	private static int IndexOf(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0x1A80258", Offset = "0x1A80258", VA = "0x1A80258")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9468C4", Offset = "0x9468C4")]
	private static int Initialize(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0x1A803E0", Offset = "0x1A803E0", VA = "0x1A803E0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x946928", Offset = "0x946928")]
	private static int LastIndexOf(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0x1A80928", Offset = "0x1A80928", VA = "0x1A80928")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94698C", Offset = "0x94698C")]
	private static int Reverse(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0x1A80C2C", Offset = "0x1A80C2C", VA = "0x1A80C2C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9469F0", Offset = "0x9469F0")]
	private static int Sort(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0x1A8184C", Offset = "0x1A8184C", VA = "0x1A8184C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x946A54", Offset = "0x946A54")]
	private static int CopyTo(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0x1A81A88", Offset = "0x1A81A88", VA = "0x1A81A88")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x946AB8", Offset = "0x946AB8")]
	private static int ConstrainedCopy(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0x1A81D20", Offset = "0x1A81D20", VA = "0x1A81D20")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x946B1C", Offset = "0x946B1C")]
	private static int get_LongLength(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0x1A81EF4", Offset = "0x1A81EF4", VA = "0x1A81EF4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x946B80", Offset = "0x946B80")]
	private static int get_Rank(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0x1A820C8", Offset = "0x1A820C8", VA = "0x1A820C8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x946BE4", Offset = "0x946BE4")]
	private static int get_IsSynchronized(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0x1A8229C", Offset = "0x1A8229C", VA = "0x1A8229C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x946C48", Offset = "0x946C48")]
	private static int get_SyncRoot(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0x1A8244C", Offset = "0x1A8244C", VA = "0x1A8244C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x946CAC", Offset = "0x946CAC")]
	private static int get_IsFixedSize(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0x1A82620", Offset = "0x1A82620", VA = "0x1A82620")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x946D10", Offset = "0x946D10")]
	private static int get_IsReadOnly(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0x1A8411C", Offset = "0x1A8411C", VA = "0x1A8411C")]
	public System_ArrayWrap()
	{
	}
}
[Token(Token = "0x2000033")]
public class System_Collections_Generic_DictionaryWrap
{
	[Token(Token = "0x6000101")]
	[Address(RVA = "0x1A87404", Offset = "0x1A87404", VA = "0x1A87404")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0x1A84124", Offset = "0x1A84124", VA = "0x1A84124")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x946D74", Offset = "0x946D74")]
	private static int _get_this(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0x1A84384", Offset = "0x1A84384", VA = "0x1A84384")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x946DD8", Offset = "0x946DD8")]
	private static int _set_this(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0x1A84638", Offset = "0x1A84638", VA = "0x1A84638")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x946E3C", Offset = "0x946E3C")]
	private static int _this(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0x1A847C0", Offset = "0x1A847C0", VA = "0x1A847C0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x946EA0", Offset = "0x946EA0")]
	private static int get_Item(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0x1A84A20", Offset = "0x1A84A20", VA = "0x1A84A20")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x946F04", Offset = "0x946F04")]
	private static int set_Item(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0x1A84CD4", Offset = "0x1A84CD4", VA = "0x1A84CD4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x946F68", Offset = "0x946F68")]
	private static int _geti(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0x1A84FBC", Offset = "0x1A84FBC", VA = "0x1A84FBC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x946FCC", Offset = "0x946FCC")]
	private static int _seti(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0x1A852C4", Offset = "0x1A852C4", VA = "0x1A852C4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x947030", Offset = "0x947030")]
	private static int Add(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0x1A85578", Offset = "0x1A85578", VA = "0x1A85578")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x947094", Offset = "0x947094")]
	private static int Clear(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0x1A857C4", Offset = "0x1A857C4", VA = "0x1A857C4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9470F8", Offset = "0x9470F8")]
	private static int ContainsKey(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0x1A85A7C", Offset = "0x1A85A7C", VA = "0x1A85A7C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94715C", Offset = "0x94715C")]
	private static int ContainsValue(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0x1A85D38", Offset = "0x1A85D38", VA = "0x1A85D38")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9471C0", Offset = "0x9471C0")]
	private static int GetObjectData(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0x1A86080", Offset = "0x1A86080", VA = "0x1A86080")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x947224", Offset = "0x947224")]
	private static int OnDeserialization(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0x1A862B8", Offset = "0x1A862B8", VA = "0x1A862B8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x947288", Offset = "0x947288")]
	private static int Remove(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0x1A86570", Offset = "0x1A86570", VA = "0x1A86570")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9472EC", Offset = "0x9472EC")]
	private static int TryGetValue(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0x1A86874", Offset = "0x1A86874", VA = "0x1A86874")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x947350", Offset = "0x947350")]
	private static int GetEnumerator(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0x1A86B0C", Offset = "0x1A86B0C", VA = "0x1A86B0C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9473B4", Offset = "0x9473B4")]
	private static int get_Count(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0x1A86D8C", Offset = "0x1A86D8C", VA = "0x1A86D8C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x947418", Offset = "0x947418")]
	private static int get_Comparer(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0x1A86FB4", Offset = "0x1A86FB4", VA = "0x1A86FB4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94747C", Offset = "0x94747C")]
	private static int get_Keys(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0x1A871DC", Offset = "0x1A871DC", VA = "0x1A871DC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9474E0", Offset = "0x9474E0")]
	private static int get_Values(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0x1A879AC", Offset = "0x1A879AC", VA = "0x1A879AC")]
	public System_Collections_Generic_DictionaryWrap()
	{
	}
}
[Token(Token = "0x2000034")]
public class System_Collections_Generic_Dictionary_KeyCollectionWrap
{
	[Token(Token = "0x6000117")]
	[Address(RVA = "0x1A884A4", Offset = "0x1A884A4", VA = "0x1A884A4")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0x1A879B4", Offset = "0x1A879B4", VA = "0x1A879B4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x947544", Offset = "0x947544")]
	private static int _CreateSystem_Collections_Generic_Dictionary_KeyCollection(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0x1A87C68", Offset = "0x1A87C68", VA = "0x1A87C68")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9475A8", Offset = "0x9475A8")]
	private static int CopyTo(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0x1A87F8C", Offset = "0x1A87F8C", VA = "0x1A87F8C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94760C", Offset = "0x94760C")]
	private static int GetEnumerator(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0x1A88224", Offset = "0x1A88224", VA = "0x1A88224")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x947670", Offset = "0x947670")]
	private static int get_Count(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0x1A886BC", Offset = "0x1A886BC", VA = "0x1A886BC")]
	public System_Collections_Generic_Dictionary_KeyCollectionWrap()
	{
	}
}
[Token(Token = "0x2000035")]
public class System_Collections_Generic_Dictionary_ValueCollectionWrap
{
	[Token(Token = "0x600011D")]
	[Address(RVA = "0x1A891B8", Offset = "0x1A891B8", VA = "0x1A891B8")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0x1A886C4", Offset = "0x1A886C4", VA = "0x1A886C4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9476D4", Offset = "0x9476D4")]
	private static int _CreateSystem_Collections_Generic_Dictionary_ValueCollection(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0x1A88978", Offset = "0x1A88978", VA = "0x1A88978")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x947738", Offset = "0x947738")]
	private static int CopyTo(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0x1A88CA0", Offset = "0x1A88CA0", VA = "0x1A88CA0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94779C", Offset = "0x94779C")]
	private static int GetEnumerator(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0x1A88F38", Offset = "0x1A88F38", VA = "0x1A88F38")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x947800", Offset = "0x947800")]
	private static int get_Count(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0x1A893D0", Offset = "0x1A893D0", VA = "0x1A893D0")]
	public System_Collections_Generic_Dictionary_ValueCollectionWrap()
	{
	}
}
[Token(Token = "0x2000036")]
public class System_Collections_Generic_KeyValuePairWrap
{
	[Token(Token = "0x6000123")]
	[Address(RVA = "0x1A89828", Offset = "0x1A89828", VA = "0x1A89828")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0x1A893D8", Offset = "0x1A893D8", VA = "0x1A893D8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x947864", Offset = "0x947864")]
	private static int get_Key(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0x1A89600", Offset = "0x1A89600", VA = "0x1A89600")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9478C8", Offset = "0x9478C8")]
	private static int get_Value(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0x1A899A8", Offset = "0x1A899A8", VA = "0x1A899A8")]
	public System_Collections_Generic_KeyValuePairWrap()
	{
	}
}
[Token(Token = "0x2000037")]
public class System_Collections_Generic_ListWrap
{
	[Token(Token = "0x6000127")]
	[Address(RVA = "0x1A925FC", Offset = "0x1A925FC", VA = "0x1A925FC")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0x1A899B0", Offset = "0x1A899B0", VA = "0x1A899B0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94792C", Offset = "0x94792C")]
	private static int Add(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0x1A89BF8", Offset = "0x1A89BF8", VA = "0x1A89BF8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x947990", Offset = "0x947990")]
	private static int AddRange(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0x1A89EE8", Offset = "0x1A89EE8", VA = "0x1A89EE8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9479F4", Offset = "0x9479F4")]
	private static int AsReadOnly(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0x1A8A158", Offset = "0x1A8A158", VA = "0x1A8A158")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x947A58", Offset = "0x947A58")]
	private static int BinarySearch(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0x1A8AAB4", Offset = "0x1A8AAB4", VA = "0x1A8AAB4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x947ABC", Offset = "0x947ABC")]
	private static int Clear(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0x1A8AD00", Offset = "0x1A8AD00", VA = "0x1A8AD00")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x947B20", Offset = "0x947B20")]
	private static int Contains(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0x1A8AFBC", Offset = "0x1A8AFBC", VA = "0x1A8AFBC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x947B84", Offset = "0x947B84")]
	private static int CopyTo(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0x1A8B744", Offset = "0x1A8B744", VA = "0x1A8B744")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x947BE8", Offset = "0x947BE8")]
	private static int Exists(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0x1A8BAA4", Offset = "0x1A8BAA4", VA = "0x1A8BAA4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x947C4C", Offset = "0x947C4C")]
	private static int Find(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0x1A8BDA8", Offset = "0x1A8BDA8", VA = "0x1A8BDA8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x947CB0", Offset = "0x947CB0")]
	private static int FindAll(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0x1A8C0AC", Offset = "0x1A8C0AC", VA = "0x1A8C0AC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x947D14", Offset = "0x947D14")]
	private static int FindIndex(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0x1A8CA90", Offset = "0x1A8CA90", VA = "0x1A8CA90")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x947D78", Offset = "0x947D78")]
	private static int FindLast(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0x1A8CD94", Offset = "0x1A8CD94", VA = "0x1A8CD94")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x947DDC", Offset = "0x947DDC")]
	private static int FindLastIndex(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0x1A8D82C", Offset = "0x1A8D82C", VA = "0x1A8D82C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x947E40", Offset = "0x947E40")]
	private static int ForEach(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0x1A8DB18", Offset = "0x1A8DB18", VA = "0x1A8DB18")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x947EA4", Offset = "0x947EA4")]
	private static int GetEnumerator(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0x1A8DD8C", Offset = "0x1A8DD8C", VA = "0x1A8DD8C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x947F08", Offset = "0x947F08")]
	private static int GetRange(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0x1A8E0B4", Offset = "0x1A8E0B4", VA = "0x1A8E0B4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x947F6C", Offset = "0x947F6C")]
	private static int IndexOf(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0x1A8E838", Offset = "0x1A8E838", VA = "0x1A8E838")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x947FD0", Offset = "0x947FD0")]
	private static int Insert(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0x1A8EB40", Offset = "0x1A8EB40", VA = "0x1A8EB40")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x948034", Offset = "0x948034")]
	private static int InsertRange(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0x1A8EF24", Offset = "0x1A8EF24", VA = "0x1A8EF24")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x948098", Offset = "0x948098")]
	private static int LastIndexOf(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0x1A8F6A8", Offset = "0x1A8F6A8", VA = "0x1A8F6A8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9480FC", Offset = "0x9480FC")]
	private static int Remove(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0x1A8F964", Offset = "0x1A8F964", VA = "0x1A8F964")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x948160", Offset = "0x948160")]
	private static int RemoveAll(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0x1A8FCC0", Offset = "0x1A8FCC0", VA = "0x1A8FCC0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9481C4", Offset = "0x9481C4")]
	private static int RemoveAt(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0x1A8FF50", Offset = "0x1A8FF50", VA = "0x1A8FF50")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x948228", Offset = "0x948228")]
	private static int RemoveRange(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0x1A90260", Offset = "0x1A90260", VA = "0x1A90260")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94828C", Offset = "0x94828C")]
	private static int Reverse(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0x1A906DC", Offset = "0x1A906DC", VA = "0x1A906DC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9482F0", Offset = "0x9482F0")]
	private static int Sort(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0x1A910A4", Offset = "0x1A910A4", VA = "0x1A910A4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x948354", Offset = "0x948354")]
	private static int ToArray(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0x1A9134C", Offset = "0x1A9134C", VA = "0x1A9134C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9483B8", Offset = "0x9483B8")]
	private static int TrimExcess(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0x1A91598", Offset = "0x1A91598", VA = "0x1A91598")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94841C", Offset = "0x94841C")]
	private static int TrueForAll(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0x1A918F8", Offset = "0x1A918F8", VA = "0x1A918F8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x948480", Offset = "0x948480")]
	private static int get_Item(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0x1A91BA0", Offset = "0x1A91BA0", VA = "0x1A91BA0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9484E4", Offset = "0x9484E4")]
	private static int set_Item(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0x1A91EA8", Offset = "0x1A91EA8", VA = "0x1A91EA8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x948548", Offset = "0x948548")]
	private static int get_Capacity(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0x1A92128", Offset = "0x1A92128", VA = "0x1A92128")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9485AC", Offset = "0x9485AC")]
	private static int get_Count(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0x1A923A8", Offset = "0x1A923A8", VA = "0x1A923A8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x948610", Offset = "0x948610")]
	private static int set_Capacity(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0x1A92FF4", Offset = "0x1A92FF4", VA = "0x1A92FF4")]
	public System_Collections_Generic_ListWrap()
	{
	}
}
[Token(Token = "0x2000038")]
public class System_Collections_IEnumeratorWrap
{
	[Token(Token = "0x600014B")]
	[Address(RVA = "0x1A935AC", Offset = "0x1A935AC", VA = "0x1A935AC")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0x1A92FFC", Offset = "0x1A92FFC", VA = "0x1A92FFC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x948674", Offset = "0x948674")]
	private static int MoveNext(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0x1A931E4", Offset = "0x1A931E4", VA = "0x1A931E4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9486D8", Offset = "0x9486D8")]
	private static int Reset(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0x1A93394", Offset = "0x1A93394", VA = "0x1A93394")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94873C", Offset = "0x94873C")]
	private static int get_Current(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0x1A93720", Offset = "0x1A93720", VA = "0x1A93720")]
	public System_Collections_IEnumeratorWrap()
	{
	}
}
[Token(Token = "0x2000039")]
public class System_Collections_ObjectModel_ReadOnlyCollectionWrap
{
	[Token(Token = "0x6000150")]
	[Address(RVA = "0x1A947B8", Offset = "0x1A947B8", VA = "0x1A947B8")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0x1A93728", Offset = "0x1A93728", VA = "0x1A93728")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9487A0", Offset = "0x9487A0")]
	private static int Contains(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0x1A939E4", Offset = "0x1A939E4", VA = "0x1A939E4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x948804", Offset = "0x948804")]
	private static int CopyTo(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0x1A93D08", Offset = "0x1A93D08", VA = "0x1A93D08")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x948868", Offset = "0x948868")]
	private static int GetEnumerator(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0x1A93FA0", Offset = "0x1A93FA0", VA = "0x1A93FA0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9488CC", Offset = "0x9488CC")]
	private static int IndexOf(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0x1A94258", Offset = "0x1A94258", VA = "0x1A94258")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x948930", Offset = "0x948930")]
	private static int get_Item(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0x1A94538", Offset = "0x1A94538", VA = "0x1A94538")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x948994", Offset = "0x948994")]
	private static int get_Count(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0x1A94A88", Offset = "0x1A94A88", VA = "0x1A94A88")]
	public System_Collections_ObjectModel_ReadOnlyCollectionWrap()
	{
	}
}
[Token(Token = "0x200003A")]
public class System_DelegateWrap
{
	[Token(Token = "0x6000158")]
	[Address(RVA = "0x1A97A24", Offset = "0x1A97A24", VA = "0x1A97A24")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0x1A94A90", Offset = "0x1A94A90", VA = "0x1A94A90")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9489F8", Offset = "0x9489F8")]
	private static int CreateDelegate(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0x1A95750", Offset = "0x1A95750", VA = "0x1A95750")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x948A5C", Offset = "0x948A5C")]
	private static int DynamicInvoke(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0x1A95940", Offset = "0x1A95940", VA = "0x1A95940")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x948AC0", Offset = "0x948AC0")]
	private static int Clone(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0x1A95B0C", Offset = "0x1A95B0C", VA = "0x1A95B0C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x948B24", Offset = "0x948B24")]
	private static int GetObjectData(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0x1A95DB4", Offset = "0x1A95DB4", VA = "0x1A95DB4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x948B88", Offset = "0x948B88")]
	private static int GetInvocationList(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0x1A95F80", Offset = "0x1A95F80", VA = "0x1A95F80")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x948BEC", Offset = "0x948BEC")]
	private static int Combine(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0x1A962D0", Offset = "0x1A962D0", VA = "0x1A962D0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x948C50", Offset = "0x948C50")]
	private static int Remove(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0x1A964C8", Offset = "0x1A964C8", VA = "0x1A964C8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x948CB4", Offset = "0x948CB4")]
	private static int RemoveAll(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0x1A966C0", Offset = "0x1A966C0", VA = "0x1A966C0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x948D18", Offset = "0x948D18")]
	private static int op_Subtraction(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0x1A96BA8", Offset = "0x1A96BA8", VA = "0x1A96BA8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x948D7C", Offset = "0x948D7C")]
	private static int op_Addition(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0x1A96F30", Offset = "0x1A96F30", VA = "0x1A96F30")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x948DE0", Offset = "0x948DE0")]
	private static int op_Equality(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0x1A97144", Offset = "0x1A97144", VA = "0x1A97144")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x948E44", Offset = "0x948E44")]
	private static int Destroy(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0x1A972EC", Offset = "0x1A972EC", VA = "0x1A972EC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x948EA8", Offset = "0x948EA8")]
	private static int GetHashCode(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0x1A974DC", Offset = "0x1A974DC", VA = "0x1A974DC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x948F0C", Offset = "0x948F0C")]
	private static int Equals(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0x1A976D4", Offset = "0x1A976D4", VA = "0x1A976D4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x948F70", Offset = "0x948F70")]
	private static int get_Method(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0x1A97884", Offset = "0x1A97884", VA = "0x1A97884")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x948FD4", Offset = "0x948FD4")]
	private static int get_Target(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0x1A97F38", Offset = "0x1A97F38", VA = "0x1A97F38")]
	public System_DelegateWrap()
	{
	}
}
[Token(Token = "0x200003B")]
public class System_EnumWrap
{
	[Token(Token = "0x600016A")]
	[Address(RVA = "0x1A99E64", Offset = "0x1A99E64", VA = "0x1A99E64")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0x1A97F40", Offset = "0x1A97F40", VA = "0x1A97F40")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x949038", Offset = "0x949038")]
	private static int GetTypeCode(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0x1A980F4", Offset = "0x1A980F4", VA = "0x1A980F4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94909C", Offset = "0x94909C")]
	private static int GetValues(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0x1A98274", Offset = "0x1A98274", VA = "0x1A98274")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x949100", Offset = "0x949100")]
	private static int GetNames(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0x1A983F4", Offset = "0x1A983F4", VA = "0x1A983F4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x949164", Offset = "0x949164")]
	private static int GetName(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0x1A985B8", Offset = "0x1A985B8", VA = "0x1A985B8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9491C8", Offset = "0x9491C8")]
	private static int IsDefined(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0x1A9877C", Offset = "0x1A9877C", VA = "0x1A9877C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94922C", Offset = "0x94922C")]
	private static int GetUnderlyingType(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0x1A988FC", Offset = "0x1A988FC", VA = "0x1A988FC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x949290", Offset = "0x949290")]
	private static int CompareTo(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0x1A98AEC", Offset = "0x1A98AEC", VA = "0x1A98AEC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9492F4", Offset = "0x9492F4")]
	private static int ToString(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0x1A98E30", Offset = "0x1A98E30", VA = "0x1A98E30")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x949358", Offset = "0x949358")]
	private static int Equals(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0x1A99028", Offset = "0x1A99028", VA = "0x1A99028")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9493BC", Offset = "0x9493BC")]
	private static int GetHashCode(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0x1A99218", Offset = "0x1A99218", VA = "0x1A99218")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x949420", Offset = "0x949420")]
	private static int Format(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0x1A993F8", Offset = "0x1A993F8", VA = "0x1A993F8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x949484", Offset = "0x949484")]
	private static int Parse(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0x1A99868", Offset = "0x1A99868", VA = "0x1A99868")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9494E8", Offset = "0x9494E8")]
	private static int ToObject(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0x1A99CC8", Offset = "0x1A99CC8", VA = "0x1A99CC8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94954C", Offset = "0x94954C")]
	private static int ToInt(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0x1A9A2D4", Offset = "0x1A9A2D4", VA = "0x1A9A2D4")]
	public System_EnumWrap()
	{
	}
}
[Token(Token = "0x200003C")]
public class System_NullObjectWrap
{
	[Token(Token = "0x600017A")]
	[Address(RVA = "0x1A9A2DC", Offset = "0x1A9A2DC", VA = "0x1A9A2DC")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0x1A9A384", Offset = "0x1A9A384", VA = "0x1A9A384")]
	public System_NullObjectWrap()
	{
	}
}
[Token(Token = "0x200003D")]
public class System_ObjectWrap
{
	[Token(Token = "0x600017C")]
	[Address(RVA = "0x1A9AEE4", Offset = "0x1A9AEE4", VA = "0x1A9AEE4")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0x1A9A38C", Offset = "0x1A9A38C", VA = "0x1A9A38C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9495B0", Offset = "0x9495B0")]
	private static int _CreateSystem_Object(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0x1A9A544", Offset = "0x1A9A544", VA = "0x1A9A544")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x949614", Offset = "0x949614")]
	private static int Equals(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0x1A9A6F4", Offset = "0x1A9A6F4", VA = "0x1A9A6F4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x949678", Offset = "0x949678")]
	private static int GetHashCode(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0x1A9A87C", Offset = "0x1A9A87C", VA = "0x1A9A87C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9496DC", Offset = "0x9496DC")]
	private static int GetType(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0x1A9A9DC", Offset = "0x1A9A9DC", VA = "0x1A9A9DC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x949740", Offset = "0x949740")]
	private static int ToString(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0x1A9AB64", Offset = "0x1A9AB64", VA = "0x1A9AB64")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9497A4", Offset = "0x9497A4")]
	private static int ReferenceEquals(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0x1A9ACF0", Offset = "0x1A9ACF0", VA = "0x1A9ACF0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x949808", Offset = "0x949808")]
	private static int op_Equality(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0x1A9AE7C", Offset = "0x1A9AE7C", VA = "0x1A9AE7C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94986C", Offset = "0x94986C")]
	private static int Destroy(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0x1A9B194", Offset = "0x1A9B194", VA = "0x1A9B194")]
	public System_ObjectWrap()
	{
	}
}
[Token(Token = "0x200003E")]
public class System_StringWrap
{
	[Token(Token = "0x6000186")]
	[Address(RVA = "0xBA3E50", Offset = "0xBA3E50", VA = "0xBA3E50")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0xB98214", Offset = "0xB98214", VA = "0xB98214")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9498D0", Offset = "0x9498D0")]
	private static int _CreateSystem_String(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0xB983EC", Offset = "0xB983EC", VA = "0xB983EC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x949934", Offset = "0x949934")]
	private static int Equals(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0xB98964", Offset = "0xB98964", VA = "0xB98964")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x949998", Offset = "0x949998")]
	private static int Clone(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0xB98B24", Offset = "0xB98B24", VA = "0xB98B24")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9499FC", Offset = "0x9499FC")]
	private static int GetTypeCode(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0xB98CF8", Offset = "0xB98CF8", VA = "0xB98CF8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x949A60", Offset = "0x949A60")]
	private static int CopyTo(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0xB98F7C", Offset = "0xB98F7C", VA = "0xB98F7C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x949AC4", Offset = "0x949AC4")]
	private static int ToCharArray(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0xB992F8", Offset = "0xB992F8", VA = "0xB992F8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x949B28", Offset = "0x949B28")]
	private static int Split(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0xB99C34", Offset = "0xB99C34", VA = "0xB99C34")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x949B8C", Offset = "0x949B8C")]
	private static int Substring(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0xB9A008", Offset = "0xB9A008", VA = "0xB9A008")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x949BF0", Offset = "0x949BF0")]
	private static int Trim(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0xB9A394", Offset = "0xB9A394", VA = "0xB9A394")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x949C54", Offset = "0x949C54")]
	private static int TrimStart(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0xB9A5A4", Offset = "0xB9A5A4", VA = "0xB9A5A4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x949CB8", Offset = "0x949CB8")]
	private static int TrimEnd(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0xB9A7B4", Offset = "0xB9A7B4", VA = "0xB9A7B4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x949D1C", Offset = "0x949D1C")]
	private static int Compare(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0xB9B69C", Offset = "0xB9B69C", VA = "0xB9B69C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x949D80", Offset = "0x949D80")]
	private static int CompareTo(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0xB9BA98", Offset = "0xB9BA98", VA = "0xB9BA98")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x949DE4", Offset = "0x949DE4")]
	private static int CompareOrdinal(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0xB9BDC0", Offset = "0xB9BDC0", VA = "0xB9BDC0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x949E48", Offset = "0x949E48")]
	private static int EndsWith(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0xB9C33C", Offset = "0xB9C33C", VA = "0xB9C33C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x949EAC", Offset = "0x949EAC")]
	private static int IndexOfAny(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0xB9C854", Offset = "0xB9C854", VA = "0xB9C854")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x949F10", Offset = "0x949F10")]
	private static int IndexOf(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0xB9D7B8", Offset = "0xB9D7B8", VA = "0xB9D7B8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x949F74", Offset = "0x949F74")]
	private static int LastIndexOf(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0xB9E71C", Offset = "0xB9E71C", VA = "0xB9E71C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x949FD8", Offset = "0x949FD8")]
	private static int LastIndexOfAny(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0xB9EC34", Offset = "0xB9EC34", VA = "0xB9EC34")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94A03C", Offset = "0x94A03C")]
	private static int Contains(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0xB9EE44", Offset = "0xB9EE44", VA = "0xB9EE44")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94A0A0", Offset = "0x94A0A0")]
	private static int IsNullOrEmpty(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0xB9EFC0", Offset = "0xB9EFC0", VA = "0xB9EFC0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94A104", Offset = "0x94A104")]
	private static int Normalize(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0xB9F360", Offset = "0xB9F360", VA = "0xB9F360")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94A168", Offset = "0x94A168")]
	private static int IsNormalized(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0xB9F700", Offset = "0xB9F700", VA = "0xB9F700")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94A1CC", Offset = "0x94A1CC")]
	private static int Remove(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0xB9FAD4", Offset = "0xB9FAD4", VA = "0xB9FAD4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94A230", Offset = "0x94A230")]
	private static int PadLeft(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0xB9FEA4", Offset = "0xB9FEA4", VA = "0xB9FEA4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94A294", Offset = "0x94A294")]
	private static int PadRight(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0xBA0274", Offset = "0xBA0274", VA = "0xBA0274")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94A2F8", Offset = "0x94A2F8")]
	private static int StartsWith(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0xBA07F0", Offset = "0xBA07F0", VA = "0xBA07F0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94A35C", Offset = "0x94A35C")]
	private static int Replace(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0xBA0C24", Offset = "0xBA0C24", VA = "0xBA0C24")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94A3C0", Offset = "0x94A3C0")]
	private static int ToLower(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0xBA0FC4", Offset = "0xBA0FC4", VA = "0xBA0FC4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94A424", Offset = "0x94A424")]
	private static int ToLowerInvariant(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0xBA11A8", Offset = "0xBA11A8", VA = "0xBA11A8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94A488", Offset = "0x94A488")]
	private static int ToUpper(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0xBA1548", Offset = "0xBA1548", VA = "0xBA1548")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94A4EC", Offset = "0x94A4EC")]
	private static int ToUpperInvariant(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0xBA172C", Offset = "0xBA172C", VA = "0xBA172C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94A550", Offset = "0x94A550")]
	private static int ToString(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0xBA1AD8", Offset = "0xBA1AD8", VA = "0xBA1AD8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94A5B4", Offset = "0x94A5B4")]
	private static int Format(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0xBA21C4", Offset = "0xBA21C4", VA = "0xBA21C4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94A618", Offset = "0x94A618")]
	private static int Copy(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0xBA2340", Offset = "0xBA2340", VA = "0xBA2340")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94A67C", Offset = "0x94A67C")]
	private static int Concat(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0xBA2DEC", Offset = "0xBA2DEC", VA = "0xBA2DEC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94A6E0", Offset = "0x94A6E0")]
	private static int Insert(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0xBA3030", Offset = "0xBA3030", VA = "0xBA3030")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94A744", Offset = "0x94A744")]
	private static int Intern(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0xBA31AC", Offset = "0xBA31AC", VA = "0xBA31AC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94A7A8", Offset = "0x94A7A8")]
	private static int IsInterned(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0xBA3328", Offset = "0xBA3328", VA = "0xBA3328")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94A80C", Offset = "0x94A80C")]
	private static int Join(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0xBA3620", Offset = "0xBA3620", VA = "0xBA3620")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94A870", Offset = "0x94A870")]
	private static int GetEnumerator(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0xBA37E0", Offset = "0xBA37E0", VA = "0xBA37E0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94A8D4", Offset = "0x94A8D4")]
	private static int GetHashCode(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0xBA39D4", Offset = "0xBA39D4", VA = "0xBA39D4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94A938", Offset = "0x94A938")]
	private static int op_Equality(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0xBA3B70", Offset = "0xBA3B70", VA = "0xBA3B70")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94A99C", Offset = "0x94A99C")]
	private static int get_Empty(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0xBA3CA8", Offset = "0xBA3CA8", VA = "0xBA3CA8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94AA00", Offset = "0x94AA00")]
	private static int get_Length(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0xBA4AA4", Offset = "0xBA4AA4", VA = "0xBA4AA4")]
	public System_StringWrap()
	{
	}
}
[Token(Token = "0x200003F")]
public class System_TypeWrap
{
	[Token(Token = "0x60001B5")]
	[Address(RVA = "0xBAFB90", Offset = "0xBAFB90", VA = "0xBAFB90")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0xBA4AAC", Offset = "0xBA4AAC", VA = "0xBA4AAC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94AA64", Offset = "0x94AA64")]
	private static int Equals(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0xBA4EE0", Offset = "0xBA4EE0", VA = "0xBA4EE0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94AAC8", Offset = "0x94AAC8")]
	private static int GetType(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0xBA53FC", Offset = "0xBA53FC", VA = "0xBA53FC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94AB2C", Offset = "0x94AB2C")]
	private static int GetTypeArray(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0xBA557C", Offset = "0xBA557C", VA = "0xBA557C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94AB90", Offset = "0x94AB90")]
	private static int GetTypeCode(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0xBA5710", Offset = "0xBA5710", VA = "0xBA5710")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94ABF4", Offset = "0x94ABF4")]
	private static int GetTypeFromHandle(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0xBA58D0", Offset = "0xBA58D0", VA = "0xBA58D0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94AC58", Offset = "0x94AC58")]
	private static int GetTypeHandle(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0xBA5A58", Offset = "0xBA5A58", VA = "0xBA5A58")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94ACBC", Offset = "0x94ACBC")]
	private static int IsSubclassOf(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0xBA5C08", Offset = "0xBA5C08", VA = "0xBA5C08")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94AD20", Offset = "0x94AD20")]
	private static int FindInterfaces(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0xBA5DDC", Offset = "0xBA5DDC", VA = "0xBA5DDC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94AD84", Offset = "0x94AD84")]
	private static int GetInterface(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0xBA6090", Offset = "0xBA6090", VA = "0xBA6090")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94ADE8", Offset = "0x94ADE8")]
	private static int GetInterfaceMap(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0xBA6230", Offset = "0xBA6230", VA = "0xBA6230")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94AE4C", Offset = "0x94AE4C")]
	private static int GetInterfaces(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0xBA6398", Offset = "0xBA6398", VA = "0xBA6398")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94AEB0", Offset = "0x94AEB0")]
	private static int IsAssignableFrom(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0xBA6548", Offset = "0xBA6548", VA = "0xBA6548")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94AF14", Offset = "0x94AF14")]
	private static int IsInstanceOfType(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0xBA66F8", Offset = "0xBA66F8", VA = "0xBA66F8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94AF78", Offset = "0x94AF78")]
	private static int GetArrayRank(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0xBA6884", Offset = "0xBA6884", VA = "0xBA6884")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94AFDC", Offset = "0x94AFDC")]
	private static int GetElementType(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0xBA69EC", Offset = "0xBA69EC", VA = "0xBA69EC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94C040", Offset = "0x94C040")]
	private static int GetHashCode(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0xBA6B74", Offset = "0xBA6B74", VA = "0xBA6B74")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94C0A4", Offset = "0x94C0A4")]
	private static int GetNestedType(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0xBA6E3C", Offset = "0xBA6E3C", VA = "0xBA6E3C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94C108", Offset = "0x94C108")]
	private static int GetNestedTypes(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0xBA70CC", Offset = "0xBA70CC", VA = "0xBA70CC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94C16C", Offset = "0x94C16C")]
	private static int GetDefaultMembers(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0xBA7234", Offset = "0xBA7234", VA = "0xBA7234")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94C1D0", Offset = "0x94C1D0")]
	private static int FindMembers(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0xBA74F8", Offset = "0xBA74F8", VA = "0xBA74F8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94C234", Offset = "0x94C234")]
	private static int InvokeMember(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0xBA7BF4", Offset = "0xBA7BF4", VA = "0xBA7BF4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94C298", Offset = "0x94C298")]
	private static int ToString(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0xBA7D7C", Offset = "0xBA7D7C", VA = "0xBA7D7C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94C2FC", Offset = "0x94C2FC")]
	private static int GetGenericArguments(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0xBA7EE4", Offset = "0xBA7EE4", VA = "0xBA7EE4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94C360", Offset = "0x94C360")]
	private static int GetGenericTypeDefinition(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0xBA804C", Offset = "0xBA804C", VA = "0xBA804C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94C3C4", Offset = "0x94C3C4")]
	private static int MakeGenericType(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0xBA8204", Offset = "0xBA8204", VA = "0xBA8204")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94C428", Offset = "0x94C428")]
	private static int GetGenericParameterConstraints(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0xBA836C", Offset = "0xBA836C", VA = "0xBA836C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94C48C", Offset = "0x94C48C")]
	private static int MakeArrayType(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0xBA8604", Offset = "0xBA8604", VA = "0xBA8604")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94C4F0", Offset = "0x94C4F0")]
	private static int MakeByRefType(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0xBA876C", Offset = "0xBA876C", VA = "0xBA876C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94C554", Offset = "0x94C554")]
	private static int MakePointerType(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0xBA88D4", Offset = "0xBA88D4", VA = "0xBA88D4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94C5B8", Offset = "0x94C5B8")]
	private static int ReflectionOnlyGetType(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0xBA8AB4", Offset = "0xBA8AB4", VA = "0xBA8AB4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94C61C", Offset = "0x94C61C")]
	private static int get_Delimiter(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0xBA8C0C", Offset = "0xBA8C0C", VA = "0xBA8C0C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94C680", Offset = "0x94C680")]
	private static int get_EmptyTypes(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0xBA8D64", Offset = "0xBA8D64", VA = "0xBA8D64")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94C6E4", Offset = "0x94C6E4")]
	private static int get_FilterAttribute(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0xBA8EBC", Offset = "0xBA8EBC", VA = "0xBA8EBC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94C748", Offset = "0x94C748")]
	private static int get_FilterName(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0xBA9014", Offset = "0xBA9014", VA = "0xBA9014")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94C7AC", Offset = "0x94C7AC")]
	private static int get_FilterNameIgnoreCase(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0xBA916C", Offset = "0xBA916C", VA = "0xBA916C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94C810", Offset = "0x94C810")]
	private static int get_Missing(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0xBA92C4", Offset = "0xBA92C4", VA = "0xBA92C4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94C874", Offset = "0x94C874")]
	private static int get_Assembly(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0xBA94A8", Offset = "0xBA94A8", VA = "0xBA94A8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94C8D8", Offset = "0x94C8D8")]
	private static int get_AssemblyQualifiedName(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0xBA96B0", Offset = "0xBA96B0", VA = "0xBA96B0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94C93C", Offset = "0x94C93C")]
	private static int get_Attributes(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0xBA987C", Offset = "0xBA987C", VA = "0xBA987C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94C9A0", Offset = "0x94C9A0")]
	private static int get_BaseType(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0xBA9A60", Offset = "0xBA9A60", VA = "0xBA9A60")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94CA04", Offset = "0x94CA04")]
	private static int get_DeclaringType(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0xBA9C40", Offset = "0xBA9C40", VA = "0xBA9C40")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94CA68", Offset = "0x94CA68")]
	private static int get_DefaultBinder(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0xBA9D94", Offset = "0xBA9D94", VA = "0xBA9D94")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94CACC", Offset = "0x94CACC")]
	private static int get_FullName(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0xBA9F9C", Offset = "0xBA9F9C", VA = "0xBA9F9C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94CB30", Offset = "0x94CB30")]
	private static int get_GUID(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0xBAA194", Offset = "0xBAA194", VA = "0xBAA194")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94CB94", Offset = "0x94CB94")]
	private static int get_HasElementType(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0xBAA368", Offset = "0xBAA368", VA = "0xBAA368")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94CBF8", Offset = "0x94CBF8")]
	private static int get_IsAbstract(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0xBAA53C", Offset = "0xBAA53C", VA = "0xBAA53C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94CC5C", Offset = "0x94CC5C")]
	private static int get_IsAnsiClass(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0xBAA710", Offset = "0xBAA710", VA = "0xBAA710")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94CCC0", Offset = "0x94CCC0")]
	private static int get_IsArray(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0xBAA8E4", Offset = "0xBAA8E4", VA = "0xBAA8E4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94CD24", Offset = "0x94CD24")]
	private static int get_IsAutoClass(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0xBAAAB8", Offset = "0xBAAAB8", VA = "0xBAAAB8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94CD88", Offset = "0x94CD88")]
	private static int get_IsAutoLayout(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0xBAAC8C", Offset = "0xBAAC8C", VA = "0xBAAC8C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94CDEC", Offset = "0x94CDEC")]
	private static int get_IsByRef(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0xBAAE60", Offset = "0xBAAE60", VA = "0xBAAE60")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94CE50", Offset = "0x94CE50")]
	private static int get_IsClass(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0xBAB034", Offset = "0xBAB034", VA = "0xBAB034")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94CEB4", Offset = "0x94CEB4")]
	private static int get_IsCOMObject(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0xBAB208", Offset = "0xBAB208", VA = "0xBAB208")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94CF18", Offset = "0x94CF18")]
	private static int get_IsContextful(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0xBAB3DC", Offset = "0xBAB3DC", VA = "0xBAB3DC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94CF7C", Offset = "0x94CF7C")]
	private static int get_IsEnum(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0xBAB5E4", Offset = "0xBAB5E4", VA = "0xBAB5E4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94CFE0", Offset = "0x94CFE0")]
	private static int get_IsExplicitLayout(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0xBAB7B8", Offset = "0xBAB7B8", VA = "0xBAB7B8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94E044", Offset = "0x94E044")]
	private static int get_IsImport(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0xBAB98C", Offset = "0xBAB98C", VA = "0xBAB98C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94E0A8", Offset = "0x94E0A8")]
	private static int get_IsInterface(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0xBABB60", Offset = "0xBABB60", VA = "0xBABB60")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94E10C", Offset = "0x94E10C")]
	private static int get_IsLayoutSequential(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0xBABD34", Offset = "0xBABD34", VA = "0xBABD34")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94E170", Offset = "0x94E170")]
	private static int get_IsMarshalByRef(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0xBABF08", Offset = "0xBABF08", VA = "0xBABF08")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94E1D4", Offset = "0x94E1D4")]
	private static int get_IsNestedAssembly(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0xBAC0DC", Offset = "0xBAC0DC", VA = "0xBAC0DC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94E238", Offset = "0x94E238")]
	private static int get_IsNestedFamANDAssem(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0xBAC2B0", Offset = "0xBAC2B0", VA = "0xBAC2B0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94E29C", Offset = "0x94E29C")]
	private static int get_IsNestedFamily(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0xBAC484", Offset = "0xBAC484", VA = "0xBAC484")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94E300", Offset = "0x94E300")]
	private static int get_IsNestedFamORAssem(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0xBAC658", Offset = "0xBAC658", VA = "0xBAC658")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94E364", Offset = "0x94E364")]
	private static int get_IsNestedPrivate(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0xBAC82C", Offset = "0xBAC82C", VA = "0xBAC82C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94E3C8", Offset = "0x94E3C8")]
	private static int get_IsNestedPublic(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0xBACA00", Offset = "0xBACA00", VA = "0xBACA00")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94E42C", Offset = "0x94E42C")]
	private static int get_IsNotPublic(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0xBACBD4", Offset = "0xBACBD4", VA = "0xBACBD4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94E490", Offset = "0x94E490")]
	private static int get_IsPointer(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0xBACDA8", Offset = "0xBACDA8", VA = "0xBACDA8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94E4F4", Offset = "0x94E4F4")]
	private static int get_IsPrimitive(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0xBACF7C", Offset = "0xBACF7C", VA = "0xBACF7C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94E558", Offset = "0x94E558")]
	private static int get_IsPublic(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0xBAD150", Offset = "0xBAD150", VA = "0xBAD150")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94E5BC", Offset = "0x94E5BC")]
	private static int get_IsSealed(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0xBAD324", Offset = "0xBAD324", VA = "0xBAD324")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94E620", Offset = "0x94E620")]
	private static int get_IsSerializable(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0xBAD52C", Offset = "0xBAD52C", VA = "0xBAD52C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94E684", Offset = "0x94E684")]
	private static int get_IsSpecialName(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0xBAD700", Offset = "0xBAD700", VA = "0xBAD700")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94E6E8", Offset = "0x94E6E8")]
	private static int get_IsUnicodeClass(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0xBAD8D4", Offset = "0xBAD8D4", VA = "0xBAD8D4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94E74C", Offset = "0x94E74C")]
	private static int get_IsValueType(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0xBADAA8", Offset = "0xBADAA8", VA = "0xBADAA8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94E7B0", Offset = "0x94E7B0")]
	private static int get_MemberType(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0xBADCA4", Offset = "0xBADCA4", VA = "0xBADCA4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94E814", Offset = "0x94E814")]
	private static int get_Module(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0xBADE88", Offset = "0xBADE88", VA = "0xBADE88")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94E878", Offset = "0x94E878")]
	private static int get_Namespace(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0xBAE090", Offset = "0xBAE090", VA = "0xBAE090")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94E8DC", Offset = "0x94E8DC")]
	private static int get_ReflectedType(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0xBAE270", Offset = "0xBAE270", VA = "0xBAE270")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94E940", Offset = "0x94E940")]
	private static int get_TypeHandle(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0xBAE45C", Offset = "0xBAE45C", VA = "0xBAE45C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94E9A4", Offset = "0x94E9A4")]
	private static int get_TypeInitializer(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0xBAE60C", Offset = "0xBAE60C", VA = "0xBAE60C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94EA08", Offset = "0x94EA08")]
	private static int get_UnderlyingSystemType(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0xBAE7F0", Offset = "0xBAE7F0", VA = "0xBAE7F0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94EA6C", Offset = "0x94EA6C")]
	private static int get_ContainsGenericParameters(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0xBAE9F8", Offset = "0xBAE9F8", VA = "0xBAE9F8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94EAD0", Offset = "0x94EAD0")]
	private static int get_IsGenericTypeDefinition(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0xBAEC00", Offset = "0xBAEC00", VA = "0xBAEC00")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94EB34", Offset = "0x94EB34")]
	private static int get_IsGenericType(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0xBAEE08", Offset = "0xBAEE08", VA = "0xBAEE08")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94EB98", Offset = "0x94EB98")]
	private static int get_IsGenericParameter(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0xBAF010", Offset = "0xBAF010", VA = "0xBAF010")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94EBFC", Offset = "0x94EBFC")]
	private static int get_IsNested(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0xBAF1E4", Offset = "0xBAF1E4", VA = "0xBAF1E4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94EC60", Offset = "0x94EC60")]
	private static int get_IsVisible(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0xBAF3B8", Offset = "0xBAF3B8", VA = "0xBAF3B8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94ECC4", Offset = "0x94ECC4")]
	private static int get_GenericParameterPosition(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0xBAF5C0", Offset = "0xBAF5C0", VA = "0xBAF5C0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94ED28", Offset = "0x94ED28")]
	private static int get_GenericParameterAttributes(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0xBAF7C0", Offset = "0xBAF7C0", VA = "0xBAF7C0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94ED8C", Offset = "0x94ED8C")]
	private static int get_DeclaringMethod(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0xBAF9A4", Offset = "0xBAF9A4", VA = "0xBAF9A4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94EDF0", Offset = "0x94EDF0")]
	private static int get_StructLayoutAttribute(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0xBB1494", Offset = "0xBB1494", VA = "0xBB1494")]
	public System_TypeWrap()
	{
	}
}
[Token(Token = "0x2000040")]
public class UnityEngine_CoroutineWrap
{
	[Token(Token = "0x6000213")]
	[Address(RVA = "0x187FA4C", Offset = "0x187FA4C", VA = "0x187FA4C")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0x187FB34", Offset = "0x187FB34", VA = "0x187FB34")]
	public UnityEngine_CoroutineWrap()
	{
	}
}
[Token(Token = "0x2000041")]
public class UnityEngine_ObjectWrap
{
	[Token(Token = "0x6000215")]
	[Address(RVA = "0x18C2880", Offset = "0x18C2880", VA = "0x18C2880")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0x18BFB34", Offset = "0x18BFB34", VA = "0x18BFB34")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94EE54", Offset = "0x94EE54")]
	private static int _CreateUnityEngine_Object(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0x18BFCEC", Offset = "0x18BFCEC", VA = "0x18BFCEC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94EEB8", Offset = "0x94EEB8")]
	private static int FindObjectsOfType(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0x18BFE6C", Offset = "0x18BFE6C", VA = "0x18BFE6C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94EF1C", Offset = "0x94EF1C")]
	private static int DontDestroyOnLoad(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0x18C0024", Offset = "0x18C0024", VA = "0x18C0024")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94EF80", Offset = "0x94EF80")]
	private static int ToString(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0x18C0214", Offset = "0x18C0214", VA = "0x18C0214")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94EFE4", Offset = "0x94EFE4")]
	private static int GetInstanceID(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0x18C03D8", Offset = "0x18C03D8", VA = "0x18C03D8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94F048", Offset = "0x94F048")]
	private static int GetHashCode(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0x18C05C8", Offset = "0x18C05C8", VA = "0x18C05C8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94F0AC", Offset = "0x94F0AC")]
	private static int Equals(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0x18C0800", Offset = "0x18C0800", VA = "0x18C0800")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94F110", Offset = "0x94F110")]
	private static int FindObjectOfType(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0x18C0980", Offset = "0x18C0980", VA = "0x18C0980")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94F174", Offset = "0x94F174")]
	private static int op_Equality(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0x18C0BC4", Offset = "0x18C0BC4", VA = "0x18C0BC4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94F1D8", Offset = "0x94F1D8")]
	private static int Instantiate(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0x18C1AE0", Offset = "0x18C1AE0", VA = "0x18C1AE0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94F23C", Offset = "0x94F23C")]
	private static int DestroyImmediate(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0x18C1E24", Offset = "0x18C1E24", VA = "0x18C1E24")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94F2A0", Offset = "0x94F2A0")]
	private static int Destroy(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0x18C2108", Offset = "0x18C2108", VA = "0x18C2108")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94F304", Offset = "0x94F304")]
	private static int get_name(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0x18C22DC", Offset = "0x18C22DC", VA = "0x18C22DC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94F368", Offset = "0x94F368")]
	private static int get_hideFlags(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0x18C24A8", Offset = "0x18C24A8", VA = "0x18C24A8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94F3CC", Offset = "0x94F3CC")]
	private static int set_name(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0x18C265C", Offset = "0x18C265C", VA = "0x18C265C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94F430", Offset = "0x94F430")]
	private static int set_hideFlags(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0x18C2D5C", Offset = "0x18C2D5C", VA = "0x18C2D5C")]
	public UnityEngine_ObjectWrap()
	{
	}
}
[Token(Token = "0x2000042")]
public class LuaClient : MonoBehaviour
{
	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940954", Offset = "0x940954")]
	private static LuaClient <Instance>k__BackingField;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected LuaState luaState;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected LuaLooper loop;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected LuaFunction levelLoaded;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected bool openLuaSocket;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	protected bool beZbStart;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LuaTable profiler;

	[Token(Token = "0x1700000B")]
	public static LuaClient Instance
	{
		[Token(Token = "0x6000227")]
		[Address(RVA = "0x146F8E8", Offset = "0x146F8E8", VA = "0x146F8E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x94F494", Offset = "0x94F494")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000228")]
		[Address(RVA = "0x146F938", Offset = "0x146F938", VA = "0x146F938")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x94F4A4", Offset = "0x94F4A4")]
		protected set
		{
		}
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0x146F98C", Offset = "0x146F98C", VA = "0x146F98C", Slot = "4")]
	protected virtual LuaFileUtils InitLoader()
	{
		return null;
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0x146FAA8", Offset = "0x146FAA8", VA = "0x146FAA8", Slot = "5")]
	protected virtual void LoadLuaFiles()
	{
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0x146FAB4", Offset = "0x146FAB4", VA = "0x146FAB4", Slot = "6")]
	protected virtual void OpenLibs()
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0x146FD58", Offset = "0x146FD58", VA = "0x146FD58")]
	public void OpenZbsDebugger(string ip = "localhost")
	{
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0x146F820", Offset = "0x146F820", VA = "0x146F820")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94F4B4", Offset = "0x94F4B4")]
	private static int LuaOpen_Socket_Core(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0x146F884", Offset = "0x146F884", VA = "0x146F884")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94F518", Offset = "0x94F518")]
	private static int LuaOpen_Mime_Core(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0x146FC30", Offset = "0x146FC30", VA = "0x146FC30")]
	protected void OpenLuaSocket()
	{
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0x146FFF0", Offset = "0x146FFF0", VA = "0x146FFF0")]
	protected void OpenCJson()
	{
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0x147013C", Offset = "0x147013C", VA = "0x147013C", Slot = "7")]
	protected virtual void CallMain()
	{
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0x14701D0", Offset = "0x14701D0", VA = "0x14701D0", Slot = "8")]
	protected virtual void StartMain()
	{
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0x1470260", Offset = "0x1470260", VA = "0x1470260")]
	protected void StartLooper()
	{
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0x14702D4", Offset = "0x14702D4", VA = "0x14702D4", Slot = "9")]
	protected virtual void Bind()
	{
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0x14705A4", Offset = "0x14705A4", VA = "0x14705A4")]
	protected void Init()
	{
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0x1470658", Offset = "0x1470658", VA = "0x1470658")]
	protected void Awake()
	{
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0x1470734", Offset = "0x1470734", VA = "0x1470734", Slot = "10")]
	protected virtual void OnLoadFinished()
	{
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0x1470778", Offset = "0x1470778", VA = "0x1470778")]
	private void OnLevelLoaded(int level)
	{
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0x1470A40", Offset = "0x1470A40", VA = "0x1470A40")]
	private void OnSceneLoaded(Scene scene, LoadSceneMode mode)
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0x1470A78", Offset = "0x1470A78", VA = "0x1470A78", Slot = "11")]
	public virtual void Destroy()
	{
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0x1470D00", Offset = "0x1470D00", VA = "0x1470D00")]
	protected void OnDestroy()
	{
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0x1470D0C", Offset = "0x1470D0C", VA = "0x1470D0C")]
	protected void OnApplicationQuit()
	{
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0x1470D18", Offset = "0x1470D18", VA = "0x1470D18")]
	public static LuaState GetMainState()
	{
		return null;
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0x1470D74", Offset = "0x1470D74", VA = "0x1470D74")]
	public LuaLooper GetLooper()
	{
		return null;
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0x1470D7C", Offset = "0x1470D7C", VA = "0x1470D7C")]
	public void AttachProfiler()
	{
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0x1470C44", Offset = "0x1470C44", VA = "0x1470C44")]
	public void DetachProfiler()
	{
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0x1470E2C", Offset = "0x1470E2C", VA = "0x1470E2C")]
	public LuaClient()
	{
	}
}
[Token(Token = "0x2000043")]
public static class LuaCoroutine
{
	[Token(Token = "0x200030A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93FD20", Offset = "0x93FD20")]
	private sealed class <CoWaitForSeconds>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float sec;

		[Token(Token = "0x4000DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LuaFunction func;

		[Token(Token = "0x170001DF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002ADC")]
			[Address(RVA = "0x1472194", Offset = "0x1472194", VA = "0x1472194", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002ADE")]
			[Address(RVA = "0x14721FC", Offset = "0x14721FC", VA = "0x14721FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AD9")]
		[Address(RVA = "0x1471B54", Offset = "0x1471B54", VA = "0x1471B54")]
		[DebuggerHidden]
		public <CoWaitForSeconds>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6002ADA")]
		[Address(RVA = "0x14720C4", Offset = "0x14720C4", VA = "0x14720C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002ADB")]
		[Address(RVA = "0x14720C8", Offset = "0x14720C8", VA = "0x14720C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002ADD")]
		[Address(RVA = "0x147219C", Offset = "0x147219C", VA = "0x147219C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200030B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93FD30", Offset = "0x93FD30")]
	private sealed class <CoWaitForFixedUpdate>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LuaFunction func;

		[Token(Token = "0x170001E1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002AE2")]
			[Address(RVA = "0x1472054", Offset = "0x1472054", VA = "0x1472054", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002AE4")]
			[Address(RVA = "0x14720BC", Offset = "0x14720BC", VA = "0x14720BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002ADF")]
		[Address(RVA = "0x1471BF0", Offset = "0x1471BF0", VA = "0x1471BF0")]
		[DebuggerHidden]
		public <CoWaitForFixedUpdate>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6002AE0")]
		[Address(RVA = "0x1471F94", Offset = "0x1471F94", VA = "0x1471F94", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002AE1")]
		[Address(RVA = "0x1471F98", Offset = "0x1471F98", VA = "0x1471F98", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AE3")]
		[Address(RVA = "0x147205C", Offset = "0x147205C", VA = "0x147205C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200030C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93FD40", Offset = "0x93FD40")]
	private sealed class <CoWaitForEndOfFrame>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LuaFunction func;

		[Token(Token = "0x170001E3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002AE8")]
			[Address(RVA = "0x1471F24", Offset = "0x1471F24", VA = "0x1471F24", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002AEA")]
			[Address(RVA = "0x1471F8C", Offset = "0x1471F8C", VA = "0x1471F8C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AE5")]
		[Address(RVA = "0x1471C8C", Offset = "0x1471C8C", VA = "0x1471C8C")]
		[DebuggerHidden]
		public <CoWaitForEndOfFrame>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6002AE6")]
		[Address(RVA = "0x1471E64", Offset = "0x1471E64", VA = "0x1471E64", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002AE7")]
		[Address(RVA = "0x1471E68", Offset = "0x1471E68", VA = "0x1471E68", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AE9")]
		[Address(RVA = "0x1471F2C", Offset = "0x1471F2C", VA = "0x1471F2C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200030D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93FD50", Offset = "0x93FD50")]
	private sealed class <CoYield>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public object o;

		[Token(Token = "0x4000DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LuaFunction func;

		[Token(Token = "0x170001E5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002AEE")]
			[Address(RVA = "0x1472474", Offset = "0x1472474", VA = "0x1472474", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002AF0")]
			[Address(RVA = "0x14724DC", Offset = "0x14724DC", VA = "0x14724DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AEB")]
		[Address(RVA = "0x1471D34", Offset = "0x1471D34", VA = "0x1471D34")]
		[DebuggerHidden]
		public <CoYield>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6002AEC")]
		[Address(RVA = "0x1472324", Offset = "0x1472324", VA = "0x1472324", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002AED")]
		[Address(RVA = "0x1472328", Offset = "0x1472328", VA = "0x1472328", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AEF")]
		[Address(RVA = "0x147247C", Offset = "0x147247C", VA = "0x147247C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200030E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93FD60", Offset = "0x93FD60")]
	private sealed class <CoWrap>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LuaFunction func;

		[Token(Token = "0x170001E7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002AF4")]
			[Address(RVA = "0x14722B4", Offset = "0x14722B4", VA = "0x14722B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002AF6")]
			[Address(RVA = "0x147231C", Offset = "0x147231C", VA = "0x147231C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AF1")]
		[Address(RVA = "0x1471DD0", Offset = "0x1471DD0", VA = "0x1471DD0")]
		[DebuggerHidden]
		public <CoWrap>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6002AF2")]
		[Address(RVA = "0x1472204", Offset = "0x1472204", VA = "0x1472204", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002AF3")]
		[Address(RVA = "0x1472208", Offset = "0x1472208", VA = "0x1472208", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AF5")]
		[Address(RVA = "0x14722BC", Offset = "0x14722BC", VA = "0x14722BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static MonoBehaviour mb;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string strCo;

	[Token(Token = "0x6000242")]
	[Address(RVA = "0x1470374", Offset = "0x1470374", VA = "0x1470374")]
	public static void Register(LuaState state, MonoBehaviour behaviour)
	{
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0x1470FA4", Offset = "0x1470FA4", VA = "0x1470FA4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94F57C", Offset = "0x94F57C")]
	private static int _WaitForSeconds(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0x14719D8", Offset = "0x14719D8", VA = "0x14719D8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x94F5E0", Offset = "0x94F5E0")]
	private static IEnumerator CoWaitForSeconds(float sec, LuaFunction func)
	{
		return null;
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0x147117C", Offset = "0x147117C", VA = "0x147117C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94F644", Offset = "0x94F644")]
	private static int WaitForFixedUpdate(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0x1471B80", Offset = "0x1471B80", VA = "0x1471B80")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x94F6A8", Offset = "0x94F6A8")]
	private static IEnumerator CoWaitForFixedUpdate(LuaFunction func)
	{
		return null;
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0x1471314", Offset = "0x1471314", VA = "0x1471314")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94F70C", Offset = "0x94F70C")]
	private static int WaitForEndOfFrame(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0x1471C1C", Offset = "0x1471C1C", VA = "0x1471C1C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x94F770", Offset = "0x94F770")]
	private static IEnumerator CoWaitForEndOfFrame(LuaFunction func)
	{
		return null;
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0x14714AC", Offset = "0x14714AC", VA = "0x14714AC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94F7D4", Offset = "0x94F7D4")]
	private static int Yield(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0x1471CB8", Offset = "0x1471CB8", VA = "0x1471CB8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x94F838", Offset = "0x94F838")]
	private static IEnumerator CoYield(object o, LuaFunction func)
	{
		return null;
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0x1471660", Offset = "0x1471660", VA = "0x1471660")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94F89C", Offset = "0x94F89C")]
	private static int StopCoroutine(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0x1471834", Offset = "0x1471834", VA = "0x1471834")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94F900", Offset = "0x94F900")]
	private static int WrapLuaCoroutine(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0x1471D60", Offset = "0x1471D60", VA = "0x1471D60")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x94F964", Offset = "0x94F964")]
	private static IEnumerator CoWrap(LuaFunction func)
	{
		return null;
	}
}
[Token(Token = "0x2000044")]
public class LuaLooper : MonoBehaviour
{
	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940964", Offset = "0x940964")]
	private LuaBeatEvent <UpdateEvent>k__BackingField;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940974", Offset = "0x940974")]
	private LuaBeatEvent <LateUpdateEvent>k__BackingField;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940984", Offset = "0x940984")]
	private LuaBeatEvent <FixedUpdateEvent>k__BackingField;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public LuaState luaState;

	[Token(Token = "0x1700000C")]
	public LuaBeatEvent UpdateEvent
	{
		[Token(Token = "0x600024F")]
		[Address(RVA = "0x15C0F4C", Offset = "0x15C0F4C", VA = "0x15C0F4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x94F9C8", Offset = "0x94F9C8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000250")]
		[Address(RVA = "0x15C0F54", Offset = "0x15C0F54", VA = "0x15C0F54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x94F9D8", Offset = "0x94F9D8")]
		private set
		{
		}
	}

	[Token(Token = "0x1700000D")]
	public LuaBeatEvent LateUpdateEvent
	{
		[Token(Token = "0x6000251")]
		[Address(RVA = "0x15C0F5C", Offset = "0x15C0F5C", VA = "0x15C0F5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x94F9E8", Offset = "0x94F9E8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000252")]
		[Address(RVA = "0x15C0F64", Offset = "0x15C0F64", VA = "0x15C0F64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x94F9F8", Offset = "0x94F9F8")]
		private set
		{
		}
	}

	[Token(Token = "0x1700000E")]
	public LuaBeatEvent FixedUpdateEvent
	{
		[Token(Token = "0x6000253")]
		[Address(RVA = "0x15C0F6C", Offset = "0x15C0F6C", VA = "0x15C0F6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x94FA08", Offset = "0x94FA08")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000254")]
		[Address(RVA = "0x15C0F74", Offset = "0x15C0F74", VA = "0x15C0F74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x94FA18", Offset = "0x94FA18")]
		private set
		{
		}
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0x15C0F7C", Offset = "0x15C0F7C", VA = "0x15C0F7C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0x15C10C0", Offset = "0x15C10C0", VA = "0x15C10C0")]
	private LuaBeatEvent GetEvent(string name)
	{
		return null;
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0x15C11D8", Offset = "0x15C11D8", VA = "0x15C11D8")]
	private void ThrowException()
	{
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0x15C12A8", Offset = "0x15C12A8", VA = "0x15C12A8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0x15C132C", Offset = "0x15C132C", VA = "0x15C132C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0x15C1378", Offset = "0x15C1378", VA = "0x15C1378")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0x15C13D0", Offset = "0x15C13D0", VA = "0x15C13D0")]
	public void Destroy()
	{
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0x15C1488", Offset = "0x15C1488", VA = "0x15C1488")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0x15C1510", Offset = "0x15C1510", VA = "0x15C1510")]
	public LuaLooper()
	{
	}
}
[Token(Token = "0x2000045")]
public static class LuaProfiler
{
	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<string> list;

	[Token(Token = "0x600025E")]
	[Address(RVA = "0x15C1518", Offset = "0x15C1518", VA = "0x15C1518")]
	public static void Clear()
	{
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0x15C1594", Offset = "0x15C1594", VA = "0x15C1594")]
	public static int GetID(string name)
	{
		return default(int);
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0x15C1624", Offset = "0x15C1624", VA = "0x15C1624")]
	public static void BeginSample(int id)
	{
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0x15C16B4", Offset = "0x15C16B4", VA = "0x15C16B4")]
	public static void EndSample()
	{
	}
}
[Token(Token = "0x2000046")]
public class LuaResLoader : LuaFileUtils
{
	[Token(Token = "0x6000263")]
	[Address(RVA = "0x15C172C", Offset = "0x15C172C", VA = "0x15C172C")]
	public LuaResLoader()
	{
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0x15C17A8", Offset = "0x15C17A8", VA = "0x15C17A8", Slot = "5")]
	public override byte[] ReadFile(string fileName)
	{
		return null;
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0x15C1A8C", Offset = "0x15C1A8C", VA = "0x15C1A8C", Slot = "6")]
	public override string FindFileError(string fileName)
	{
		return null;
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0x15C190C", Offset = "0x15C190C", VA = "0x15C190C")]
	private byte[] ReadResourceFile(string fileName)
	{
		return null;
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0x15C17F4", Offset = "0x15C17F4", VA = "0x15C17F4")]
	private byte[] ReadDownLoadFile(string fileName)
	{
		return null;
	}
}
[Token(Token = "0x2000047")]
public class AnimationMgrWrap
{
	[Token(Token = "0x6000268")]
	[Address(RVA = "0xEE84FC", Offset = "0xEE84FC", VA = "0xEE84FC")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0xEE6EC8", Offset = "0xEE6EC8", VA = "0xEE6EC8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94FA28", Offset = "0x94FA28")]
	private static int LocalMoveUI(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0xEE715C", Offset = "0xEE715C", VA = "0xEE715C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94FA8C", Offset = "0x94FA8C")]
	private static int LocalMoveAnchorUI(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0xEE73D4", Offset = "0xEE73D4", VA = "0xEE73D4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94FAF0", Offset = "0x94FAF0")]
	private static int LocalMoveToAnchorUI(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0xEE761C", Offset = "0xEE761C", VA = "0xEE761C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94FB54", Offset = "0x94FB54")]
	private static int LocalScaleUI(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0xEE78B0", Offset = "0xEE78B0", VA = "0xEE78B0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94FBB8", Offset = "0x94FBB8")]
	private static int LocalEulerUI(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0xEE7B44", Offset = "0xEE7B44", VA = "0xEE7B44")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94FC1C", Offset = "0x94FC1C")]
	private static int MoveUI(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0xEE7DD8", Offset = "0xEE7DD8", VA = "0xEE7DD8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94FC80", Offset = "0x94FC80")]
	private static int Lerp(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0xEE8040", Offset = "0xEE8040", VA = "0xEE8040")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94FCE4", Offset = "0x94FCE4")]
	private static int FadeImage(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0xEE829C", Offset = "0xEE829C", VA = "0xEE829C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94FD48", Offset = "0x94FD48")]
	private static int FollowTarget(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0xEE87B4", Offset = "0xEE87B4", VA = "0xEE87B4")]
	public AnimationMgrWrap()
	{
	}
}
[Token(Token = "0x2000048")]
public class DelegateFactory
{
	[Token(Token = "0x200030F")]
	public delegate Delegate DelegateCreate(LuaFunction func, LuaTable self, bool flag);

	[Token(Token = "0x2000310")]
	private class System_Action_Event : LuaDelegate
	{
		[Token(Token = "0x6002AFB")]
		[Address(RVA = "0x111CDF0", Offset = "0x111CDF0", VA = "0x111CDF0")]
		public System_Action_Event(LuaFunction func)
		{
		}

		[Token(Token = "0x6002AFC")]
		[Address(RVA = "0x111CDF8", Offset = "0x111CDF8", VA = "0x111CDF8")]
		public System_Action_Event(LuaFunction func, LuaTable self)
		{
		}

		[Token(Token = "0x6002AFD")]
		[Address(RVA = "0x1122720", Offset = "0x1122720", VA = "0x1122720")]
		public void Call()
		{
		}

		[Token(Token = "0x6002AFE")]
		[Address(RVA = "0x112273C", Offset = "0x112273C", VA = "0x112273C")]
		public void CallWithSelf()
		{
		}
	}

	[Token(Token = "0x2000311")]
	private class UnityEngine_Events_UnityAction_Event : LuaDelegate
	{
		[Token(Token = "0x6002AFF")]
		[Address(RVA = "0x111D0BC", Offset = "0x111D0BC", VA = "0x111D0BC")]
		public UnityEngine_Events_UnityAction_Event(LuaFunction func)
		{
		}

		[Token(Token = "0x6002B00")]
		[Address(RVA = "0x111D0C4", Offset = "0x111D0C4", VA = "0x111D0C4")]
		public UnityEngine_Events_UnityAction_Event(LuaFunction func, LuaTable self)
		{
		}

		[Token(Token = "0x6002B01")]
		[Address(RVA = "0x11236B8", Offset = "0x11236B8", VA = "0x11236B8")]
		public void Call()
		{
		}

		[Token(Token = "0x6002B02")]
		[Address(RVA = "0x11236D4", Offset = "0x11236D4", VA = "0x11236D4")]
		public void CallWithSelf()
		{
		}
	}

	[Token(Token = "0x2000312")]
	private class System_Predicate_int_Event : LuaDelegate
	{
		[Token(Token = "0x6002B03")]
		[Address(RVA = "0x111D398", Offset = "0x111D398", VA = "0x111D398")]
		public System_Predicate_int_Event(LuaFunction func)
		{
		}

		[Token(Token = "0x6002B04")]
		[Address(RVA = "0x111D3A0", Offset = "0x111D3A0", VA = "0x111D3A0")]
		public System_Predicate_int_Event(LuaFunction func, LuaTable self)
		{
		}

		[Token(Token = "0x6002B05")]
		[Address(RVA = "0x1122EC0", Offset = "0x1122EC0", VA = "0x1122EC0")]
		public bool Call(int param0)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B06")]
		[Address(RVA = "0x1122F48", Offset = "0x1122F48", VA = "0x1122F48")]
		public bool CallWithSelf(int param0)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000313")]
	private class System_Action_int_Event : LuaDelegate
	{
		[Token(Token = "0x6002B07")]
		[Address(RVA = "0x111D674", Offset = "0x111D674", VA = "0x111D674")]
		public System_Action_int_Event(LuaFunction func)
		{
		}

		[Token(Token = "0x6002B08")]
		[Address(RVA = "0x111D67C", Offset = "0x111D67C", VA = "0x111D67C")]
		public System_Action_int_Event(LuaFunction func, LuaTable self)
		{
		}

		[Token(Token = "0x6002B09")]
		[Address(RVA = "0x1122A10", Offset = "0x1122A10", VA = "0x1122A10")]
		public void Call(int param0)
		{
		}

		[Token(Token = "0x6002B0A")]
		[Address(RVA = "0x1122A78", Offset = "0x1122A78", VA = "0x1122A78")]
		public void CallWithSelf(int param0)
		{
		}
	}

	[Token(Token = "0x2000314")]
	private class System_Comparison_int_Event : LuaDelegate
	{
		[Token(Token = "0x6002B0B")]
		[Address(RVA = "0x111D950", Offset = "0x111D950", VA = "0x111D950")]
		public System_Comparison_int_Event(LuaFunction func)
		{
		}

		[Token(Token = "0x6002B0C")]
		[Address(RVA = "0x111D958", Offset = "0x111D958", VA = "0x111D958")]
		public System_Comparison_int_Event(LuaFunction func, LuaTable self)
		{
		}

		[Token(Token = "0x6002B0D")]
		[Address(RVA = "0x1122BD8", Offset = "0x1122BD8", VA = "0x1122BD8")]
		public int Call(int param0, int param1)
		{
			return default(int);
		}

		[Token(Token = "0x6002B0E")]
		[Address(RVA = "0x1122C98", Offset = "0x1122C98", VA = "0x1122C98")]
		public int CallWithSelf(int param0, int param1)
		{
			return default(int);
		}
	}

	[Token(Token = "0x2000315")]
	private class System_Func_int_int_Event : LuaDelegate
	{
		[Token(Token = "0x6002B0F")]
		[Address(RVA = "0x111DC2C", Offset = "0x111DC2C", VA = "0x111DC2C")]
		public System_Func_int_int_Event(LuaFunction func)
		{
		}

		[Token(Token = "0x6002B10")]
		[Address(RVA = "0x111DC34", Offset = "0x111DC34", VA = "0x111DC34")]
		public System_Func_int_int_Event(LuaFunction func, LuaTable self)
		{
		}

		[Token(Token = "0x6002B11")]
		[Address(RVA = "0x1122D6C", Offset = "0x1122D6C", VA = "0x1122D6C")]
		public int Call(int param0)
		{
			return default(int);
		}

		[Token(Token = "0x6002B12")]
		[Address(RVA = "0x1122E0C", Offset = "0x1122E0C", VA = "0x1122E0C")]
		public int CallWithSelf(int param0)
		{
			return default(int);
		}
	}

	[Token(Token = "0x2000316")]
	private class Sword_TimeHandler_Event : LuaDelegate
	{
		[Token(Token = "0x6002B13")]
		[Address(RVA = "0x111DEF8", Offset = "0x111DEF8", VA = "0x111DEF8")]
		public Sword_TimeHandler_Event(LuaFunction func)
		{
		}

		[Token(Token = "0x6002B14")]
		[Address(RVA = "0x111DF00", Offset = "0x111DF00", VA = "0x111DF00")]
		public Sword_TimeHandler_Event(LuaFunction func, LuaTable self)
		{
		}

		[Token(Token = "0x6002B15")]
		[Address(RVA = "0x11220E4", Offset = "0x11220E4", VA = "0x11220E4")]
		public void Call(object param0)
		{
		}

		[Token(Token = "0x6002B16")]
		[Address(RVA = "0x112214C", Offset = "0x112214C", VA = "0x112214C")]
		public void CallWithSelf(object param0)
		{
		}
	}

	[Token(Token = "0x2000317")]
	private class UnityEngine_Camera_CameraCallback_Event : LuaDelegate
	{
		[Token(Token = "0x6002B17")]
		[Address(RVA = "0x111E1C4", Offset = "0x111E1C4", VA = "0x111E1C4")]
		public UnityEngine_Camera_CameraCallback_Event(LuaFunction func)
		{
		}

		[Token(Token = "0x6002B18")]
		[Address(RVA = "0x111E1CC", Offset = "0x111E1CC", VA = "0x111E1CC")]
		public UnityEngine_Camera_CameraCallback_Event(LuaFunction func, LuaTable self)
		{
		}

		[Token(Token = "0x6002B19")]
		[Address(RVA = "0x112356C", Offset = "0x112356C", VA = "0x112356C")]
		public void Call(Camera param0)
		{
		}

		[Token(Token = "0x6002B1A")]
		[Address(RVA = "0x1123608", Offset = "0x1123608", VA = "0x1123608")]
		public void CallWithSelf(Camera param0)
		{
		}
	}

	[Token(Token = "0x2000318")]
	private class UnityEngine_Application_LowMemoryCallback_Event : LuaDelegate
	{
		[Token(Token = "0x6002B1B")]
		[Address(RVA = "0x111E490", Offset = "0x111E490", VA = "0x111E490")]
		public UnityEngine_Application_LowMemoryCallback_Event(LuaFunction func)
		{
		}

		[Token(Token = "0x6002B1C")]
		[Address(RVA = "0x111E498", Offset = "0x111E498", VA = "0x111E498")]
		public UnityEngine_Application_LowMemoryCallback_Event(LuaFunction func, LuaTable self)
		{
		}

		[Token(Token = "0x6002B1D")]
		[Address(RVA = "0x1123324", Offset = "0x1123324", VA = "0x1123324")]
		public void Call()
		{
		}

		[Token(Token = "0x6002B1E")]
		[Address(RVA = "0x1123340", Offset = "0x1123340", VA = "0x1123340")]
		public void CallWithSelf()
		{
		}
	}

	[Token(Token = "0x2000319")]
	private class UnityEngine_Application_AdvertisingIdentifierCallback_Event : LuaDelegate
	{
		[Token(Token = "0x6002B1F")]
		[Address(RVA = "0x111E75C", Offset = "0x111E75C", VA = "0x111E75C")]
		public UnityEngine_Application_AdvertisingIdentifierCallback_Event(LuaFunction func)
		{
		}

		[Token(Token = "0x6002B20")]
		[Address(RVA = "0x111E764", Offset = "0x111E764", VA = "0x111E764")]
		public UnityEngine_Application_AdvertisingIdentifierCallback_Event(LuaFunction func, LuaTable self)
		{
		}

		[Token(Token = "0x6002B21")]
		[Address(RVA = "0x1122FE4", Offset = "0x1122FE4", VA = "0x1122FE4")]
		public void Call(string param0, bool param1, string param2)
		{
		}

		[Token(Token = "0x6002B22")]
		[Address(RVA = "0x1123084", Offset = "0x1123084", VA = "0x1123084")]
		public void CallWithSelf(string param0, bool param1, string param2)
		{
		}
	}

	[Token(Token = "0x200031A")]
	private class UnityEngine_Application_LogCallback_Event : LuaDelegate
	{
		[Token(Token = "0x6002B23")]
		[Address(RVA = "0x111EA28", Offset = "0x111EA28", VA = "0x111EA28")]
		public UnityEngine_Application_LogCallback_Event(LuaFunction func)
		{
		}

		[Token(Token = "0x6002B24")]
		[Address(RVA = "0x111EA30", Offset = "0x111EA30", VA = "0x111EA30")]
		public UnityEngine_Application_LogCallback_Event(LuaFunction func, LuaTable self)
		{
		}

		[Token(Token = "0x6002B25")]
		[Address(RVA = "0x1123138", Offset = "0x1123138", VA = "0x1123138")]
		public void Call(string param0, string param1, LogType param2)
		{
		}

		[Token(Token = "0x6002B26")]
		[Address(RVA = "0x1123224", Offset = "0x1123224", VA = "0x1123224")]
		public void CallWithSelf(string param0, string param1, LogType param2)
		{
		}
	}

	[Token(Token = "0x200031B")]
	private class UnityEngine_AudioClip_PCMReaderCallback_Event : LuaDelegate
	{
		[Token(Token = "0x6002B27")]
		[Address(RVA = "0x111ECF4", Offset = "0x111ECF4", VA = "0x111ECF4")]
		public UnityEngine_AudioClip_PCMReaderCallback_Event(LuaFunction func)
		{
		}

		[Token(Token = "0x6002B28")]
		[Address(RVA = "0x111ECFC", Offset = "0x111ECFC", VA = "0x111ECFC")]
		public UnityEngine_AudioClip_PCMReaderCallback_Event(LuaFunction func, LuaTable self)
		{
		}

		[Token(Token = "0x6002B29")]
		[Address(RVA = "0x11233A4", Offset = "0x11233A4", VA = "0x11233A4")]
		public void Call(float[] param0)
		{
		}

		[Token(Token = "0x6002B2A")]
		[Address(RVA = "0x112340C", Offset = "0x112340C", VA = "0x112340C")]
		public void CallWithSelf(float[] param0)
		{
		}
	}

	[Token(Token = "0x200031C")]
	private class UnityEngine_AudioClip_PCMSetPositionCallback_Event : LuaDelegate
	{
		[Token(Token = "0x6002B2B")]
		[Address(RVA = "0x111EFC0", Offset = "0x111EFC0", VA = "0x111EFC0")]
		public UnityEngine_AudioClip_PCMSetPositionCallback_Event(LuaFunction func)
		{
		}

		[Token(Token = "0x6002B2C")]
		[Address(RVA = "0x111EFC8", Offset = "0x111EFC8", VA = "0x111EFC8")]
		public UnityEngine_AudioClip_PCMSetPositionCallback_Event(LuaFunction func, LuaTable self)
		{
		}

		[Token(Token = "0x6002B2D")]
		[Address(RVA = "0x1123488", Offset = "0x1123488", VA = "0x1123488")]
		public void Call(int param0)
		{
		}

		[Token(Token = "0x6002B2E")]
		[Address(RVA = "0x11234F0", Offset = "0x11234F0", VA = "0x11234F0")]
		public void CallWithSelf(int param0)
		{
		}
	}

	[Token(Token = "0x200031D")]
	private class UnityEngine_RectTransform_ReapplyDrivenProperties_Event : LuaDelegate
	{
		[Token(Token = "0x6002B2F")]
		[Address(RVA = "0x111F28C", Offset = "0x111F28C", VA = "0x111F28C")]
		public UnityEngine_RectTransform_ReapplyDrivenProperties_Event(LuaFunction func)
		{
		}

		[Token(Token = "0x6002B30")]
		[Address(RVA = "0x111F294", Offset = "0x111F294", VA = "0x111F294")]
		public UnityEngine_RectTransform_ReapplyDrivenProperties_Event(LuaFunction func, LuaTable self)
		{
		}

		[Token(Token = "0x6002B31")]
		[Address(RVA = "0x1123738", Offset = "0x1123738", VA = "0x1123738")]
		public void Call(RectTransform param0)
		{
		}

		[Token(Token = "0x6002B32")]
		[Address(RVA = "0x11237D4", Offset = "0x11237D4", VA = "0x11237D4")]
		public void CallWithSelf(RectTransform param0)
		{
		}
	}

	[Token(Token = "0x200031E")]
	private class UnityEngine_UI_InputField_OnValidateInput_Event : LuaDelegate
	{
		[Token(Token = "0x6002B33")]
		[Address(RVA = "0x111F558", Offset = "0x111F558", VA = "0x111F558")]
		public UnityEngine_UI_InputField_OnValidateInput_Event(LuaFunction func)
		{
		}

		[Token(Token = "0x6002B34")]
		[Address(RVA = "0x111F560", Offset = "0x111F560", VA = "0x111F560")]
		public UnityEngine_UI_InputField_OnValidateInput_Event(LuaFunction func, LuaTable self)
		{
		}

		[Token(Token = "0x6002B35")]
		[Address(RVA = "0x1123884", Offset = "0x1123884", VA = "0x1123884")]
		public char Call(string param0, int param1, char param2)
		{
			return default(char);
		}

		[Token(Token = "0x6002B36")]
		[Address(RVA = "0x1123950", Offset = "0x1123950", VA = "0x1123950")]
		public char CallWithSelf(string param0, int param1, char param2)
		{
			return default(char);
		}
	}

	[Token(Token = "0x200031F")]
	private class Sword_NotifyHandler_Event : LuaDelegate
	{
		[Token(Token = "0x6002B37")]
		[Address(RVA = "0x111F824", Offset = "0x111F824", VA = "0x111F824")]
		public Sword_NotifyHandler_Event(LuaFunction func)
		{
		}

		[Token(Token = "0x6002B38")]
		[Address(RVA = "0x111F82C", Offset = "0x111F82C", VA = "0x111F82C")]
		public Sword_NotifyHandler_Event(LuaFunction func, LuaTable self)
		{
		}

		[Token(Token = "0x6002B39")]
		[Address(RVA = "0x1121AA8", Offset = "0x1121AA8", VA = "0x1121AA8")]
		public void Call(int param0)
		{
		}

		[Token(Token = "0x6002B3A")]
		[Address(RVA = "0x1121B10", Offset = "0x1121B10", VA = "0x1121B10")]
		public void CallWithSelf(int param0)
		{
		}
	}

	[Token(Token = "0x2000320")]
	private class System_Action_UnityEngine_GameObject_Event : LuaDelegate
	{
		[Token(Token = "0x6002B3B")]
		[Address(RVA = "0x111FB00", Offset = "0x111FB00", VA = "0x111FB00")]
		public System_Action_UnityEngine_GameObject_Event(LuaFunction func)
		{
		}

		[Token(Token = "0x6002B3C")]
		[Address(RVA = "0x111FB08", Offset = "0x111FB08", VA = "0x111FB08")]
		public System_Action_UnityEngine_GameObject_Event(LuaFunction func, LuaTable self)
		{
		}

		[Token(Token = "0x6002B3D")]
		[Address(RVA = "0x11228C4", Offset = "0x11228C4", VA = "0x11228C4")]
		public void Call(GameObject param0)
		{
		}

		[Token(Token = "0x6002B3E")]
		[Address(RVA = "0x1122960", Offset = "0x1122960", VA = "0x1122960")]
		public void CallWithSelf(GameObject param0)
		{
		}
	}

	[Token(Token = "0x2000321")]
	private class Sword_OnCheckDirty_Event : LuaDelegate
	{
		[Token(Token = "0x6002B3F")]
		[Address(RVA = "0x111FDCC", Offset = "0x111FDCC", VA = "0x111FDCC")]
		public Sword_OnCheckDirty_Event(LuaFunction func)
		{
		}

		[Token(Token = "0x6002B40")]
		[Address(RVA = "0x111FDD4", Offset = "0x111FDD4", VA = "0x111FDD4")]
		public Sword_OnCheckDirty_Event(LuaFunction func, LuaTable self)
		{
		}

		[Token(Token = "0x6002B41")]
		[Address(RVA = "0x1121B8C", Offset = "0x1121B8C", VA = "0x1121B8C")]
		public bool Call()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B42")]
		[Address(RVA = "0x1121BFC", Offset = "0x1121BFC", VA = "0x1121BFC")]
		public bool CallWithSelf()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000322")]
	private class System_Action_object_Event : LuaDelegate
	{
		[Token(Token = "0x6002B43")]
		[Address(RVA = "0x11200A8", Offset = "0x11200A8", VA = "0x11200A8")]
		public System_Action_object_Event(LuaFunction func)
		{
		}

		[Token(Token = "0x6002B44")]
		[Address(RVA = "0x11200B0", Offset = "0x11200B0", VA = "0x11200B0")]
		public System_Action_object_Event(LuaFunction func, LuaTable self)
		{
		}

		[Token(Token = "0x6002B45")]
		[Address(RVA = "0x1122AF4", Offset = "0x1122AF4", VA = "0x1122AF4")]
		public void Call(object param0)
		{
		}

		[Token(Token = "0x6002B46")]
		[Address(RVA = "0x1122B5C", Offset = "0x1122B5C", VA = "0x1122B5C")]
		public void CallWithSelf(object param0)
		{
		}
	}

	[Token(Token = "0x2000323")]
	private class Sword_ReloadChildCompoent_OnFillItem_Event : LuaDelegate
	{
		[Token(Token = "0x6002B47")]
		[Address(RVA = "0x1121DCC", Offset = "0x1121DCC", VA = "0x1121DCC")]
		public Sword_ReloadChildCompoent_OnFillItem_Event(LuaFunction func)
		{
		}

		[Token(Token = "0x6002B48")]
		[Address(RVA = "0x1121DD4", Offset = "0x1121DD4", VA = "0x1121DD4")]
		public Sword_ReloadChildCompoent_OnFillItem_Event(LuaFunction func, LuaTable self)
		{
		}

		[Token(Token = "0x6002B49")]
		[Address(RVA = "0x1121DDC", Offset = "0x1121DDC", VA = "0x1121DDC")]
		public void Call(GameObject param0, int param1)
		{
		}

		[Token(Token = "0x6002B4A")]
		[Address(RVA = "0x1121E90", Offset = "0x1121E90", VA = "0x1121E90")]
		public void CallWithSelf(GameObject param0, int param1)
		{
		}
	}

	[Token(Token = "0x2000324")]
	private class Sword_ReloadChildCompoent_OnInitItem_Event : LuaDelegate
	{
		[Token(Token = "0x6002B4B")]
		[Address(RVA = "0x1121F58", Offset = "0x1121F58", VA = "0x1121F58")]
		public Sword_ReloadChildCompoent_OnInitItem_Event(LuaFunction func)
		{
		}

		[Token(Token = "0x6002B4C")]
		[Address(RVA = "0x1121F60", Offset = "0x1121F60", VA = "0x1121F60")]
		public Sword_ReloadChildCompoent_OnInitItem_Event(LuaFunction func, LuaTable self)
		{
		}

		[Token(Token = "0x6002B4D")]
		[Address(RVA = "0x1121F68", Offset = "0x1121F68", VA = "0x1121F68")]
		public void Call(GameObject param0, int param1)
		{
		}

		[Token(Token = "0x6002B4E")]
		[Address(RVA = "0x112201C", Offset = "0x112201C", VA = "0x112201C")]
		public void CallWithSelf(GameObject param0, int param1)
		{
		}
	}

	[Token(Token = "0x2000325")]
	private class Sword_LoadHandler_Event : LuaDelegate
	{
		[Token(Token = "0x6002B4F")]
		[Address(RVA = "0x1120374", Offset = "0x1120374", VA = "0x1120374")]
		public Sword_LoadHandler_Event(LuaFunction func)
		{
		}

		[Token(Token = "0x6002B50")]
		[Address(RVA = "0x112037C", Offset = "0x112037C", VA = "0x112037C")]
		public Sword_LoadHandler_Event(LuaFunction func, LuaTable self)
		{
		}

		[Token(Token = "0x6002B51")]
		[Address(RVA = "0x1121984", Offset = "0x1121984", VA = "0x1121984")]
		public void Call(Resource param0, object param1)
		{
		}

		[Token(Token = "0x6002B52")]
		[Address(RVA = "0x1121A0C", Offset = "0x1121A0C", VA = "0x1121A0C")]
		public void CallWithSelf(Resource param0, object param1)
		{
		}
	}

	[Token(Token = "0x2000326")]
	private class Sword_ZeroRefAsset_Event : LuaDelegate
	{
		[Token(Token = "0x6002B53")]
		[Address(RVA = "0x1120640", Offset = "0x1120640", VA = "0x1120640")]
		public Sword_ZeroRefAsset_Event(LuaFunction func)
		{
		}

		[Token(Token = "0x6002B54")]
		[Address(RVA = "0x1120648", Offset = "0x1120648", VA = "0x1120648")]
		public Sword_ZeroRefAsset_Event(LuaFunction func, LuaTable self)
		{
		}

		[Token(Token = "0x6002B55")]
		[Address(RVA = "0x112263C", Offset = "0x112263C", VA = "0x112263C")]
		public void Call(Resource param0)
		{
		}

		[Token(Token = "0x6002B56")]
		[Address(RVA = "0x11226A4", Offset = "0x11226A4", VA = "0x11226A4")]
		public void CallWithSelf(Resource param0)
		{
		}
	}

	[Token(Token = "0x2000327")]
	private class Sword_HttpManager_OnHttpByteCallback_Event : LuaDelegate
	{
		[Token(Token = "0x6002B57")]
		[Address(RVA = "0x112171C", Offset = "0x112171C", VA = "0x112171C")]
		public Sword_HttpManager_OnHttpByteCallback_Event(LuaFunction func)
		{
		}

		[Token(Token = "0x6002B58")]
		[Address(RVA = "0x1121724", Offset = "0x1121724", VA = "0x1121724")]
		public Sword_HttpManager_OnHttpByteCallback_Event(LuaFunction func, LuaTable self)
		{
		}

		[Token(Token = "0x6002B59")]
		[Address(RVA = "0x112172C", Offset = "0x112172C", VA = "0x112172C")]
		public void Call(int param0, byte[] param1)
		{
		}

		[Token(Token = "0x6002B5A")]
		[Address(RVA = "0x11217B4", Offset = "0x11217B4", VA = "0x11217B4")]
		public void CallWithSelf(int param0, byte[] param1)
		{
		}
	}

	[Token(Token = "0x2000328")]
	private class Sword_HttpManager_OnHttpCallback_Event : LuaDelegate
	{
		[Token(Token = "0x6002B5B")]
		[Address(RVA = "0x1121850", Offset = "0x1121850", VA = "0x1121850")]
		public Sword_HttpManager_OnHttpCallback_Event(LuaFunction func)
		{
		}

		[Token(Token = "0x6002B5C")]
		[Address(RVA = "0x1121858", Offset = "0x1121858", VA = "0x1121858")]
		public Sword_HttpManager_OnHttpCallback_Event(LuaFunction func, LuaTable self)
		{
		}

		[Token(Token = "0x6002B5D")]
		[Address(RVA = "0x1121860", Offset = "0x1121860", VA = "0x1121860")]
		public void Call(int param0, string param1)
		{
		}

		[Token(Token = "0x6002B5E")]
		[Address(RVA = "0x11218E8", Offset = "0x11218E8", VA = "0x11218E8")]
		public void CallWithSelf(int param0, string param1)
		{
		}
	}

	[Token(Token = "0x2000329")]
	private class Sword_OnTexture_Event : LuaDelegate
	{
		[Token(Token = "0x6002B5F")]
		[Address(RVA = "0x112090C", Offset = "0x112090C", VA = "0x112090C")]
		public Sword_OnTexture_Event(LuaFunction func)
		{
		}

		[Token(Token = "0x6002B60")]
		[Address(RVA = "0x1120914", Offset = "0x1120914", VA = "0x1120914")]
		public Sword_OnTexture_Event(LuaFunction func, LuaTable self)
		{
		}

		[Token(Token = "0x6002B61")]
		[Address(RVA = "0x1121C80", Offset = "0x1121C80", VA = "0x1121C80")]
		public void Call(Texture2D param0)
		{
		}

		[Token(Token = "0x6002B62")]
		[Address(RVA = "0x1121D1C", Offset = "0x1121D1C", VA = "0x1121D1C")]
		public void CallWithSelf(Texture2D param0)
		{
		}
	}

	[Token(Token = "0x200032A")]
	private class Sword_GameVoidAction_object_Event : LuaDelegate
	{
		[Token(Token = "0x6002B63")]
		[Address(RVA = "0x1120BE8", Offset = "0x1120BE8", VA = "0x1120BE8")]
		public Sword_GameVoidAction_object_Event(LuaFunction func)
		{
		}

		[Token(Token = "0x6002B64")]
		[Address(RVA = "0x1120BF0", Offset = "0x1120BF0", VA = "0x1120BF0")]
		public Sword_GameVoidAction_object_Event(LuaFunction func, LuaTable self)
		{
		}

		[Token(Token = "0x6002B65")]
		[Address(RVA = "0x1121638", Offset = "0x1121638", VA = "0x1121638")]
		public void Call(object param0)
		{
		}

		[Token(Token = "0x6002B66")]
		[Address(RVA = "0x11216A0", Offset = "0x11216A0", VA = "0x11216A0")]
		public void CallWithSelf(object param0)
		{
		}
	}

	[Token(Token = "0x200032B")]
	private class Sword_GameVoidAction_int_int_Event : LuaDelegate
	{
		[Token(Token = "0x6002B67")]
		[Address(RVA = "0x1120EC4", Offset = "0x1120EC4", VA = "0x1120EC4")]
		public Sword_GameVoidAction_int_int_Event(LuaFunction func)
		{
		}

		[Token(Token = "0x6002B68")]
		[Address(RVA = "0x1120ECC", Offset = "0x1120ECC", VA = "0x1120ECC")]
		public Sword_GameVoidAction_int_int_Event(LuaFunction func, LuaTable self)
		{
		}

		[Token(Token = "0x6002B69")]
		[Address(RVA = "0x1121514", Offset = "0x1121514", VA = "0x1121514")]
		public void Call(int param0, int param1)
		{
		}

		[Token(Token = "0x6002B6A")]
		[Address(RVA = "0x112159C", Offset = "0x112159C", VA = "0x112159C")]
		public void CallWithSelf(int param0, int param1)
		{
		}
	}

	[Token(Token = "0x200032C")]
	private class System_Action_Sword_DownloadInfo_string_Event : LuaDelegate
	{
		[Token(Token = "0x6002B6B")]
		[Address(RVA = "0x11211A0", Offset = "0x11211A0", VA = "0x11211A0")]
		public System_Action_Sword_DownloadInfo_string_Event(LuaFunction func)
		{
		}

		[Token(Token = "0x6002B6C")]
		[Address(RVA = "0x11211A8", Offset = "0x11211A8", VA = "0x11211A8")]
		public System_Action_Sword_DownloadInfo_string_Event(LuaFunction func, LuaTable self)
		{
		}

		[Token(Token = "0x6002B6D")]
		[Address(RVA = "0x11227A0", Offset = "0x11227A0", VA = "0x11227A0")]
		public void Call(DownloadInfo param0, string param1)
		{
		}

		[Token(Token = "0x6002B6E")]
		[Address(RVA = "0x1122828", Offset = "0x1122828", VA = "0x1122828")]
		public void CallWithSelf(DownloadInfo param0, string param1)
		{
		}
	}

	[Token(Token = "0x200032D")]
	private class Sword_WrapContent_OnCreateItem_Event : LuaDelegate
	{
		[Token(Token = "0x6002B6F")]
		[Address(RVA = "0x1122354", Offset = "0x1122354", VA = "0x1122354")]
		public Sword_WrapContent_OnCreateItem_Event(LuaFunction func)
		{
		}

		[Token(Token = "0x6002B70")]
		[Address(RVA = "0x112235C", Offset = "0x112235C", VA = "0x112235C")]
		public Sword_WrapContent_OnCreateItem_Event(LuaFunction func, LuaTable self)
		{
		}

		[Token(Token = "0x6002B71")]
		[Address(RVA = "0x1122364", Offset = "0x1122364", VA = "0x1122364")]
		public void Call(GameObject param0)
		{
		}

		[Token(Token = "0x6002B72")]
		[Address(RVA = "0x1122400", Offset = "0x1122400", VA = "0x1122400")]
		public void CallWithSelf(GameObject param0)
		{
		}
	}

	[Token(Token = "0x200032E")]
	private class Sword_WrapContent_OnFillItem_Event : LuaDelegate
	{
		[Token(Token = "0x6002B73")]
		[Address(RVA = "0x11224B0", Offset = "0x11224B0", VA = "0x11224B0")]
		public Sword_WrapContent_OnFillItem_Event(LuaFunction func)
		{
		}

		[Token(Token = "0x6002B74")]
		[Address(RVA = "0x11224B8", Offset = "0x11224B8", VA = "0x11224B8")]
		public Sword_WrapContent_OnFillItem_Event(LuaFunction func, LuaTable self)
		{
		}

		[Token(Token = "0x6002B75")]
		[Address(RVA = "0x11224C0", Offset = "0x11224C0", VA = "0x11224C0")]
		public void Call(GameObject param0, int param1)
		{
		}

		[Token(Token = "0x6002B76")]
		[Address(RVA = "0x1122574", Offset = "0x1122574", VA = "0x1122574")]
		public void CallWithSelf(GameObject param0, int param1)
		{
		}
	}

	[Token(Token = "0x200032F")]
	private class Sword_WrapContent_OnCenterItem_Event : LuaDelegate
	{
		[Token(Token = "0x6002B77")]
		[Address(RVA = "0x11221C8", Offset = "0x11221C8", VA = "0x11221C8")]
		public Sword_WrapContent_OnCenterItem_Event(LuaFunction func)
		{
		}

		[Token(Token = "0x6002B78")]
		[Address(RVA = "0x11221D0", Offset = "0x11221D0", VA = "0x11221D0")]
		public Sword_WrapContent_OnCenterItem_Event(LuaFunction func, LuaTable self)
		{
		}

		[Token(Token = "0x6002B79")]
		[Address(RVA = "0x11221D8", Offset = "0x11221D8", VA = "0x11221D8")]
		public void Call(GameObject param0, int param1)
		{
		}

		[Token(Token = "0x6002B7A")]
		[Address(RVA = "0x112228C", Offset = "0x112228C", VA = "0x112228C")]
		public void CallWithSelf(GameObject param0, int param1)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000330")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93FD70", Offset = "0x93FD70")]
	private sealed class <>c
	{
		[Token(Token = "0x4000DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action <>9__10_0;

		[Token(Token = "0x4000DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static UnityAction <>9__14_0;

		[Token(Token = "0x4000DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Predicate<int> <>9__18_0;

		[Token(Token = "0x4000DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Action<int> <>9__22_0;

		[Token(Token = "0x4000DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Comparison<int> <>9__26_0;

		[Token(Token = "0x4000DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static Func<int, int> <>9__30_0;

		[Token(Token = "0x4000DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static TimeHandler <>9__34_0;

		[Token(Token = "0x4000DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static Camera.CameraCallback <>9__38_0;

		[Token(Token = "0x4000DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static Application.LowMemoryCallback <>9__42_0;

		[Token(Token = "0x4000DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static Application.AdvertisingIdentifierCallback <>9__46_0;

		[Token(Token = "0x4000DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public static Application.LogCallback <>9__50_0;

		[Token(Token = "0x4000DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public static AudioClip.PCMReaderCallback <>9__54_0;

		[Token(Token = "0x4000DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public static AudioClip.PCMSetPositionCallback <>9__58_0;

		[Token(Token = "0x4000DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public static RectTransform.ReapplyDrivenProperties <>9__62_0;

		[Token(Token = "0x4000DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public static InputField.OnValidateInput <>9__66_0;

		[Token(Token = "0x4000DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public static NotifyHandler <>9__70_0;

		[Token(Token = "0x4000DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public static Action<GameObject> <>9__74_0;

		[Token(Token = "0x4000DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public static OnCheckDirty <>9__78_0;

		[Token(Token = "0x4000DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public static Action<object> <>9__82_0;

		[Token(Token = "0x4000DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public static LoadHandler <>9__88_0;

		[Token(Token = "0x4000DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public static ZeroRefAsset <>9__92_0;

		[Token(Token = "0x4000DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public static OnTexture <>9__98_0;

		[Token(Token = "0x4000DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public static GameVoidAction<object> <>9__102_0;

		[Token(Token = "0x4000DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public static GameVoidAction<int, int> <>9__106_0;

		[Token(Token = "0x4000DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public static Action<DownloadInfo, string> <>9__110_0;

		[Token(Token = "0x6002B7C")]
		[Address(RVA = "0x11213E4", Offset = "0x11213E4", VA = "0x11213E4")]
		public <>c()
		{
		}

		[Token(Token = "0x6002B7D")]
		[Address(RVA = "0x11213EC", Offset = "0x11213EC", VA = "0x11213EC")]
		internal void <System_Action>b__10_0()
		{
		}

		[Token(Token = "0x6002B7E")]
		[Address(RVA = "0x11213F0", Offset = "0x11213F0", VA = "0x11213F0")]
		internal void <UnityEngine_Events_UnityAction>b__14_0()
		{
		}

		[Token(Token = "0x6002B7F")]
		[Address(RVA = "0x11213F4", Offset = "0x11213F4", VA = "0x11213F4")]
		internal bool <System_Predicate_int>b__18_0(int param0)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B80")]
		[Address(RVA = "0x11213FC", Offset = "0x11213FC", VA = "0x11213FC")]
		internal void <System_Action_int>b__22_0(int param0)
		{
		}

		[Token(Token = "0x6002B81")]
		[Address(RVA = "0x1121400", Offset = "0x1121400", VA = "0x1121400")]
		internal int <System_Comparison_int>b__26_0(int param0, int param1)
		{
			return default(int);
		}

		[Token(Token = "0x6002B82")]
		[Address(RVA = "0x1121408", Offset = "0x1121408", VA = "0x1121408")]
		internal int <System_Func_int_int>b__30_0(int param0)
		{
			return default(int);
		}

		[Token(Token = "0x6002B83")]
		[Address(RVA = "0x1121410", Offset = "0x1121410", VA = "0x1121410")]
		internal void <Sword_TimeHandler>b__34_0(object param0)
		{
		}

		[Token(Token = "0x6002B84")]
		[Address(RVA = "0x1121414", Offset = "0x1121414", VA = "0x1121414")]
		internal void <UnityEngine_Camera_CameraCallback>b__38_0(Camera param0)
		{
		}

		[Token(Token = "0x6002B85")]
		[Address(RVA = "0x1121418", Offset = "0x1121418", VA = "0x1121418")]
		internal void <UnityEngine_Application_LowMemoryCallback>b__42_0()
		{
		}

		[Token(Token = "0x6002B86")]
		[Address(RVA = "0x112141C", Offset = "0x112141C", VA = "0x112141C")]
		internal void <UnityEngine_Application_AdvertisingIdentifierCallback>b__46_0(string param0, bool param1, string param2)
		{
		}

		[Token(Token = "0x6002B87")]
		[Address(RVA = "0x1121420", Offset = "0x1121420", VA = "0x1121420")]
		internal void <UnityEngine_Application_LogCallback>b__50_0(string param0, string param1, LogType param2)
		{
		}

		[Token(Token = "0x6002B88")]
		[Address(RVA = "0x1121424", Offset = "0x1121424", VA = "0x1121424")]
		internal void <UnityEngine_AudioClip_PCMReaderCallback>b__54_0(float[] param0)
		{
		}

		[Token(Token = "0x6002B89")]
		[Address(RVA = "0x1121428", Offset = "0x1121428", VA = "0x1121428")]
		internal void <UnityEngine_AudioClip_PCMSetPositionCallback>b__58_0(int param0)
		{
		}

		[Token(Token = "0x6002B8A")]
		[Address(RVA = "0x112142C", Offset = "0x112142C", VA = "0x112142C")]
		internal void <UnityEngine_RectTransform_ReapplyDrivenProperties>b__62_0(RectTransform param0)
		{
		}

		[Token(Token = "0x6002B8B")]
		[Address(RVA = "0x1121430", Offset = "0x1121430", VA = "0x1121430")]
		internal char <UnityEngine_UI_InputField_OnValidateInput>b__66_0(string param0, int param1, char param2)
		{
			return default(char);
		}

		[Token(Token = "0x6002B8C")]
		[Address(RVA = "0x1121438", Offset = "0x1121438", VA = "0x1121438")]
		internal void <Sword_NotifyHandler>b__70_0(int param0)
		{
		}

		[Token(Token = "0x6002B8D")]
		[Address(RVA = "0x112143C", Offset = "0x112143C", VA = "0x112143C")]
		internal void <System_Action_UnityEngine_GameObject>b__74_0(GameObject param0)
		{
		}

		[Token(Token = "0x6002B8E")]
		[Address(RVA = "0x1121440", Offset = "0x1121440", VA = "0x1121440")]
		internal bool <Sword_OnCheckDirty>b__78_0()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B8F")]
		[Address(RVA = "0x1121448", Offset = "0x1121448", VA = "0x1121448")]
		internal void <System_Action_object>b__82_0(object param0)
		{
		}

		[Token(Token = "0x6002B90")]
		[Address(RVA = "0x112144C", Offset = "0x112144C", VA = "0x112144C")]
		internal void <Sword_LoadHandler>b__88_0(Resource param0, object param1)
		{
		}

		[Token(Token = "0x6002B91")]
		[Address(RVA = "0x1121450", Offset = "0x1121450", VA = "0x1121450")]
		internal void <Sword_ZeroRefAsset>b__92_0(Resource param0)
		{
		}

		[Token(Token = "0x6002B92")]
		[Address(RVA = "0x1121454", Offset = "0x1121454", VA = "0x1121454")]
		internal void <Sword_OnTexture>b__98_0(Texture2D param0)
		{
		}

		[Token(Token = "0x6002B93")]
		[Address(RVA = "0x1121458", Offset = "0x1121458", VA = "0x1121458")]
		internal void <Sword_GameVoidAction_object>b__102_0(object param0)
		{
		}

		[Token(Token = "0x6002B94")]
		[Address(RVA = "0x112145C", Offset = "0x112145C", VA = "0x112145C")]
		internal void <Sword_GameVoidAction_int_int>b__106_0(int param0, int param1)
		{
		}

		[Token(Token = "0x6002B95")]
		[Address(RVA = "0x1121460", Offset = "0x1121460", VA = "0x1121460")]
		internal void <System_Action_Sword_DownloadInfo_string>b__110_0(DownloadInfo param0, string param1)
		{
		}
	}

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<Type, DelegateCreate> dict;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static DelegateFactory factory;

	[Token(Token = "0x6000273")]
	[Address(RVA = "0x11196E4", Offset = "0x11196E4", VA = "0x11196E4")]
	public static void Init()
	{
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0x1119740", Offset = "0x1119740", VA = "0x1119740")]
	public static void Register()
	{
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0x111C0BC", Offset = "0x111C0BC", VA = "0x111C0BC")]
	public static Delegate CreateDelegate(Type t, [Optional] LuaFunction func)
	{
		return null;
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0x111C6E0", Offset = "0x111C6E0", VA = "0x111C6E0")]
	public static Delegate CreateDelegate(Type t, LuaFunction func, LuaTable self)
	{
		return null;
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0x111C8F8", Offset = "0x111C8F8", VA = "0x111C8F8")]
	public static Delegate RemoveDelegate(Delegate obj, LuaFunction func)
	{
		return null;
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0x111CA68", Offset = "0x111CA68", VA = "0x111CA68")]
	public static Delegate RemoveDelegate(Delegate obj, Delegate dg)
	{
		return null;
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0x111CC68", Offset = "0x111CC68", VA = "0x111CC68")]
	public Action System_Action(LuaFunction func, LuaTable self, bool flag)
	{
		return null;
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0x111CE00", Offset = "0x111CE00", VA = "0x111CE00")]
	private bool Check_System_Action(IntPtr L, int pos)
	{
		return default(bool);
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0x111CEBC", Offset = "0x111CEBC", VA = "0x111CEBC")]
	private void Push_System_Action(IntPtr L, Action o)
	{
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0x111CF34", Offset = "0x111CF34", VA = "0x111CF34")]
	public UnityAction UnityEngine_Events_UnityAction(LuaFunction func, LuaTable self, bool flag)
	{
		return null;
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0x111D0CC", Offset = "0x111D0CC", VA = "0x111D0CC")]
	private bool Check_UnityEngine_Events_UnityAction(IntPtr L, int pos)
	{
		return default(bool);
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0x111D188", Offset = "0x111D188", VA = "0x111D188")]
	private void Push_UnityEngine_Events_UnityAction(IntPtr L, UnityAction o)
	{
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0x111D200", Offset = "0x111D200", VA = "0x111D200")]
	public Predicate<int> System_Predicate_int(LuaFunction func, LuaTable self, bool flag)
	{
		return null;
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0x111D3A8", Offset = "0x111D3A8", VA = "0x111D3A8")]
	private bool Check_System_Predicate_int(IntPtr L, int pos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0x111D464", Offset = "0x111D464", VA = "0x111D464")]
	private void Push_System_Predicate_int(IntPtr L, Predicate<int> o)
	{
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0x111D4DC", Offset = "0x111D4DC", VA = "0x111D4DC")]
	public Action<int> System_Action_int(LuaFunction func, LuaTable self, bool flag)
	{
		return null;
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0x111D684", Offset = "0x111D684", VA = "0x111D684")]
	private bool Check_System_Action_int(IntPtr L, int pos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0x111D740", Offset = "0x111D740", VA = "0x111D740")]
	private void Push_System_Action_int(IntPtr L, Action<int> o)
	{
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0x111D7B8", Offset = "0x111D7B8", VA = "0x111D7B8")]
	public Comparison<int> System_Comparison_int(LuaFunction func, LuaTable self, bool flag)
	{
		return null;
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0x111D960", Offset = "0x111D960", VA = "0x111D960")]
	private bool Check_System_Comparison_int(IntPtr L, int pos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0x111DA1C", Offset = "0x111DA1C", VA = "0x111DA1C")]
	private void Push_System_Comparison_int(IntPtr L, Comparison<int> o)
	{
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0x111DA94", Offset = "0x111DA94", VA = "0x111DA94")]
	public Func<int, int> System_Func_int_int(LuaFunction func, LuaTable self, bool flag)
	{
		return null;
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0x111DC3C", Offset = "0x111DC3C", VA = "0x111DC3C")]
	private bool Check_System_Func_int_int(IntPtr L, int pos)
	{
		return default(bool);
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0x111DCF8", Offset = "0x111DCF8", VA = "0x111DCF8")]
	private void Push_System_Func_int_int(IntPtr L, Func<int, int> o)
	{
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0x111DD70", Offset = "0x111DD70", VA = "0x111DD70")]
	public TimeHandler Sword_TimeHandler(LuaFunction func, LuaTable self, bool flag)
	{
		return null;
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0x111DF08", Offset = "0x111DF08", VA = "0x111DF08")]
	private bool Check_Sword_TimeHandler(IntPtr L, int pos)
	{
		return default(bool);
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0x111DFC4", Offset = "0x111DFC4", VA = "0x111DFC4")]
	private void Push_Sword_TimeHandler(IntPtr L, TimeHandler o)
	{
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0x111E03C", Offset = "0x111E03C", VA = "0x111E03C")]
	public Camera.CameraCallback UnityEngine_Camera_CameraCallback(LuaFunction func, LuaTable self, bool flag)
	{
		return null;
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0x111E1D4", Offset = "0x111E1D4", VA = "0x111E1D4")]
	private bool Check_UnityEngine_Camera_CameraCallback(IntPtr L, int pos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0x111E290", Offset = "0x111E290", VA = "0x111E290")]
	private void Push_UnityEngine_Camera_CameraCallback(IntPtr L, Camera.CameraCallback o)
	{
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0x111E308", Offset = "0x111E308", VA = "0x111E308")]
	public Application.LowMemoryCallback UnityEngine_Application_LowMemoryCallback(LuaFunction func, LuaTable self, bool flag)
	{
		return null;
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0x111E4A0", Offset = "0x111E4A0", VA = "0x111E4A0")]
	private bool Check_UnityEngine_Application_LowMemoryCallback(IntPtr L, int pos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0x111E55C", Offset = "0x111E55C", VA = "0x111E55C")]
	private void Push_UnityEngine_Application_LowMemoryCallback(IntPtr L, Application.LowMemoryCallback o)
	{
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0x111E5D4", Offset = "0x111E5D4", VA = "0x111E5D4")]
	public Application.AdvertisingIdentifierCallback UnityEngine_Application_AdvertisingIdentifierCallback(LuaFunction func, LuaTable self, bool flag)
	{
		return null;
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0x111E76C", Offset = "0x111E76C", VA = "0x111E76C")]
	private bool Check_UnityEngine_Application_AdvertisingIdentifierCallback(IntPtr L, int pos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0x111E828", Offset = "0x111E828", VA = "0x111E828")]
	private void Push_UnityEngine_Application_AdvertisingIdentifierCallback(IntPtr L, Application.AdvertisingIdentifierCallback o)
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0x111E8A0", Offset = "0x111E8A0", VA = "0x111E8A0")]
	public Application.LogCallback UnityEngine_Application_LogCallback(LuaFunction func, LuaTable self, bool flag)
	{
		return null;
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0x111EA38", Offset = "0x111EA38", VA = "0x111EA38")]
	private bool Check_UnityEngine_Application_LogCallback(IntPtr L, int pos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0x111EAF4", Offset = "0x111EAF4", VA = "0x111EAF4")]
	private void Push_UnityEngine_Application_LogCallback(IntPtr L, Application.LogCallback o)
	{
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0x111EB6C", Offset = "0x111EB6C", VA = "0x111EB6C")]
	public AudioClip.PCMReaderCallback UnityEngine_AudioClip_PCMReaderCallback(LuaFunction func, LuaTable self, bool flag)
	{
		return null;
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0x111ED04", Offset = "0x111ED04", VA = "0x111ED04")]
	private bool Check_UnityEngine_AudioClip_PCMReaderCallback(IntPtr L, int pos)
	{
		return default(bool);
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0x111EDC0", Offset = "0x111EDC0", VA = "0x111EDC0")]
	private void Push_UnityEngine_AudioClip_PCMReaderCallback(IntPtr L, AudioClip.PCMReaderCallback o)
	{
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0x111EE38", Offset = "0x111EE38", VA = "0x111EE38")]
	public AudioClip.PCMSetPositionCallback UnityEngine_AudioClip_PCMSetPositionCallback(LuaFunction func, LuaTable self, bool flag)
	{
		return null;
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0x111EFD0", Offset = "0x111EFD0", VA = "0x111EFD0")]
	private bool Check_UnityEngine_AudioClip_PCMSetPositionCallback(IntPtr L, int pos)
	{
		return default(bool);
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0x111F08C", Offset = "0x111F08C", VA = "0x111F08C")]
	private void Push_UnityEngine_AudioClip_PCMSetPositionCallback(IntPtr L, AudioClip.PCMSetPositionCallback o)
	{
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0x111F104", Offset = "0x111F104", VA = "0x111F104")]
	public RectTransform.ReapplyDrivenProperties UnityEngine_RectTransform_ReapplyDrivenProperties(LuaFunction func, LuaTable self, bool flag)
	{
		return null;
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0x111F29C", Offset = "0x111F29C", VA = "0x111F29C")]
	private bool Check_UnityEngine_RectTransform_ReapplyDrivenProperties(IntPtr L, int pos)
	{
		return default(bool);
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0x111F358", Offset = "0x111F358", VA = "0x111F358")]
	private void Push_UnityEngine_RectTransform_ReapplyDrivenProperties(IntPtr L, RectTransform.ReapplyDrivenProperties o)
	{
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0x111F3D0", Offset = "0x111F3D0", VA = "0x111F3D0")]
	public InputField.OnValidateInput UnityEngine_UI_InputField_OnValidateInput(LuaFunction func, LuaTable self, bool flag)
	{
		return null;
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0x111F568", Offset = "0x111F568", VA = "0x111F568")]
	private bool Check_UnityEngine_UI_InputField_OnValidateInput(IntPtr L, int pos)
	{
		return default(bool);
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0x111F624", Offset = "0x111F624", VA = "0x111F624")]
	private void Push_UnityEngine_UI_InputField_OnValidateInput(IntPtr L, InputField.OnValidateInput o)
	{
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0x111F69C", Offset = "0x111F69C", VA = "0x111F69C")]
	public NotifyHandler Sword_NotifyHandler(LuaFunction func, LuaTable self, bool flag)
	{
		return null;
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0x111F834", Offset = "0x111F834", VA = "0x111F834")]
	private bool Check_Sword_NotifyHandler(IntPtr L, int pos)
	{
		return default(bool);
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0x111F8F0", Offset = "0x111F8F0", VA = "0x111F8F0")]
	private void Push_Sword_NotifyHandler(IntPtr L, NotifyHandler o)
	{
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0x111F968", Offset = "0x111F968", VA = "0x111F968")]
	public Action<GameObject> System_Action_UnityEngine_GameObject(LuaFunction func, LuaTable self, bool flag)
	{
		return null;
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0x111FB10", Offset = "0x111FB10", VA = "0x111FB10")]
	private bool Check_System_Action_UnityEngine_GameObject(IntPtr L, int pos)
	{
		return default(bool);
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0x111FBCC", Offset = "0x111FBCC", VA = "0x111FBCC")]
	private void Push_System_Action_UnityEngine_GameObject(IntPtr L, Action<GameObject> o)
	{
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0x111FC44", Offset = "0x111FC44", VA = "0x111FC44")]
	public OnCheckDirty Sword_OnCheckDirty(LuaFunction func, LuaTable self, bool flag)
	{
		return null;
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0x111FDDC", Offset = "0x111FDDC", VA = "0x111FDDC")]
	private bool Check_Sword_OnCheckDirty(IntPtr L, int pos)
	{
		return default(bool);
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0x111FE98", Offset = "0x111FE98", VA = "0x111FE98")]
	private void Push_Sword_OnCheckDirty(IntPtr L, OnCheckDirty o)
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0x111FF10", Offset = "0x111FF10", VA = "0x111FF10")]
	public Action<object> System_Action_object(LuaFunction func, LuaTable self, bool flag)
	{
		return null;
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0x11200B8", Offset = "0x11200B8", VA = "0x11200B8")]
	private bool Check_System_Action_object(IntPtr L, int pos)
	{
		return default(bool);
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0x1120174", Offset = "0x1120174", VA = "0x1120174")]
	private void Push_System_Action_object(IntPtr L, Action<object> o)
	{
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0x11201EC", Offset = "0x11201EC", VA = "0x11201EC")]
	public LoadHandler Sword_LoadHandler(LuaFunction func, LuaTable self, bool flag)
	{
		return null;
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0x1120384", Offset = "0x1120384", VA = "0x1120384")]
	private bool Check_Sword_LoadHandler(IntPtr L, int pos)
	{
		return default(bool);
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0x1120440", Offset = "0x1120440", VA = "0x1120440")]
	private void Push_Sword_LoadHandler(IntPtr L, LoadHandler o)
	{
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0x11204B8", Offset = "0x11204B8", VA = "0x11204B8")]
	public ZeroRefAsset Sword_ZeroRefAsset(LuaFunction func, LuaTable self, bool flag)
	{
		return null;
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0x1120650", Offset = "0x1120650", VA = "0x1120650")]
	private bool Check_Sword_ZeroRefAsset(IntPtr L, int pos)
	{
		return default(bool);
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0x112070C", Offset = "0x112070C", VA = "0x112070C")]
	private void Push_Sword_ZeroRefAsset(IntPtr L, ZeroRefAsset o)
	{
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0x1120784", Offset = "0x1120784", VA = "0x1120784")]
	public OnTexture Sword_OnTexture(LuaFunction func, LuaTable self, bool flag)
	{
		return null;
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0x112091C", Offset = "0x112091C", VA = "0x112091C")]
	private bool Check_Sword_OnTexture(IntPtr L, int pos)
	{
		return default(bool);
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0x11209D8", Offset = "0x11209D8", VA = "0x11209D8")]
	private void Push_Sword_OnTexture(IntPtr L, OnTexture o)
	{
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0x1120A50", Offset = "0x1120A50", VA = "0x1120A50")]
	public GameVoidAction<object> Sword_GameVoidAction_object(LuaFunction func, LuaTable self, bool flag)
	{
		return null;
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0x1120BF8", Offset = "0x1120BF8", VA = "0x1120BF8")]
	private bool Check_Sword_GameVoidAction_object(IntPtr L, int pos)
	{
		return default(bool);
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0x1120CB4", Offset = "0x1120CB4", VA = "0x1120CB4")]
	private void Push_Sword_GameVoidAction_object(IntPtr L, GameVoidAction<object> o)
	{
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0x1120D2C", Offset = "0x1120D2C", VA = "0x1120D2C")]
	public GameVoidAction<int, int> Sword_GameVoidAction_int_int(LuaFunction func, LuaTable self, bool flag)
	{
		return null;
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0x1120ED4", Offset = "0x1120ED4", VA = "0x1120ED4")]
	private bool Check_Sword_GameVoidAction_int_int(IntPtr L, int pos)
	{
		return default(bool);
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0x1120F90", Offset = "0x1120F90", VA = "0x1120F90")]
	private void Push_Sword_GameVoidAction_int_int(IntPtr L, GameVoidAction<int, int> o)
	{
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0x1121008", Offset = "0x1121008", VA = "0x1121008")]
	public Action<DownloadInfo, string> System_Action_Sword_DownloadInfo_string(LuaFunction func, LuaTable self, bool flag)
	{
		return null;
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0x11211B0", Offset = "0x11211B0", VA = "0x11211B0")]
	private bool Check_System_Action_Sword_DownloadInfo_string(IntPtr L, int pos)
	{
		return default(bool);
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0x112126C", Offset = "0x112126C", VA = "0x112126C")]
	private void Push_System_Action_Sword_DownloadInfo_string(IntPtr L, Action<DownloadInfo, string> o)
	{
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0x11212E4", Offset = "0x11212E4", VA = "0x11212E4")]
	public DelegateFactory()
	{
	}
}
[Token(Token = "0x2000049")]
public class GameSettingsWrap
{
	[Token(Token = "0x60002C6")]
	[Address(RVA = "0x11E816C", Offset = "0x11E816C", VA = "0x11E816C")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0x11DBB4C", Offset = "0x11DBB4C", VA = "0x11DBB4C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94FDAC", Offset = "0x94FDAC")]
	private static int _CreateGameSettings(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0x11DBD04", Offset = "0x11DBD04", VA = "0x11DBD04")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94FE10", Offset = "0x94FE10")]
	private static int GetData(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0x11DBEA4", Offset = "0x11DBEA4", VA = "0x11DBEA4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94FE74", Offset = "0x94FE74")]
	private static int RuntimeInit(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0x11DBFEC", Offset = "0x11DBFEC", VA = "0x11DBFEC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94FED8", Offset = "0x94FED8")]
	private static int InitByVersion(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0x11DC134", Offset = "0x11DC134", VA = "0x11DC134")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94FF3C", Offset = "0x94FF3C")]
	private static int InitByConfig(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0x11DC27C", Offset = "0x11DC27C", VA = "0x11DC27C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x94FFA0", Offset = "0x94FFA0")]
	private static int get_HTTP_PREFIX(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0x11DC3A8", Offset = "0x11DC3A8", VA = "0x11DC3A8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x950004", Offset = "0x950004")]
	private static int get_Version(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0x11DC500", Offset = "0x11DC500", VA = "0x11DC500")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x950068", Offset = "0x950068")]
	private static int get_VersionCode(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0x11DC658", Offset = "0x11DC658", VA = "0x11DC658")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9500CC", Offset = "0x9500CC")]
	private static int get_BuildCode(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0x11DC7B0", Offset = "0x11DC7B0", VA = "0x11DC7B0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x950130", Offset = "0x950130")]
	private static int get_BuildIOSVersionCode(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0x11DC908", Offset = "0x11DC908", VA = "0x11DC908")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x950194", Offset = "0x950194")]
	private static int get_BuildTime(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0x11DCA60", Offset = "0x11DCA60", VA = "0x11DCA60")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9501F8", Offset = "0x9501F8")]
	private static int get_StorageType(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0x11DCBC8", Offset = "0x11DCBC8", VA = "0x11DCBC8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95025C", Offset = "0x95025C")]
	private static int get_IsVR(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0x11DCD24", Offset = "0x11DCD24", VA = "0x11DCD24")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9502C0", Offset = "0x9502C0")]
	private static int get_IsAllRelease(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0x11DCE80", Offset = "0x11DCE80", VA = "0x11DCE80")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x950324", Offset = "0x950324")]
	private static int get_IsStartGuide(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0x11DCFDC", Offset = "0x11DCFDC", VA = "0x11DCFDC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x950388", Offset = "0x950388")]
	private static int get_IsReleaseView(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0x11DD138", Offset = "0x11DD138", VA = "0x11DD138")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9503EC", Offset = "0x9503EC")]
	private static int get_IsReleaseViewImmediately(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0x11DD294", Offset = "0x11DD294", VA = "0x11DD294")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x950450", Offset = "0x950450")]
	private static int get_Channel(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0x11DD3EC", Offset = "0x11DD3EC", VA = "0x11DD3EC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9504B4", Offset = "0x9504B4")]
	private static int get_WebIOSRoot(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0x11DD544", Offset = "0x11DD544", VA = "0x11DD544")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x950518", Offset = "0x950518")]
	private static int get_WebOtherRoot(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0x11DD69C", Offset = "0x11DD69C", VA = "0x11DD69C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95057C", Offset = "0x95057C")]
	private static int get_WebRoot(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0x11DD7F4", Offset = "0x11DD7F4", VA = "0x11DD7F4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9505E0", Offset = "0x9505E0")]
	private static int get_IsDebug(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0x11DD950", Offset = "0x11DD950", VA = "0x11DD950")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x950644", Offset = "0x950644")]
	private static int get_IsIOSPackOpenDebug(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0x11DDAAC", Offset = "0x11DDAAC", VA = "0x11DDAAC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9506A8", Offset = "0x9506A8")]
	private static int get_IsOpenBugly(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0x11DDC08", Offset = "0x11DDC08", VA = "0x11DDC08")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95070C", Offset = "0x95070C")]
	private static int get_ABIsCompress(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0x11DDD64", Offset = "0x11DDD64", VA = "0x11DDD64")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x950770", Offset = "0x950770")]
	private static int get_IsCopyInFirst(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0x11DDEC0", Offset = "0x11DDEC0", VA = "0x11DDEC0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9507D4", Offset = "0x9507D4")]
	private static int get_IsEtc(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0x11DE01C", Offset = "0x11DE01C", VA = "0x11DE01C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x950838", Offset = "0x950838")]
	private static int get_IsVoice(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0x11DE178", Offset = "0x11DE178", VA = "0x11DE178")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95089C", Offset = "0x95089C")]
	private static int get_IsSupportoffline(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0x11DE2D4", Offset = "0x11DE2D4", VA = "0x11DE2D4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x950900", Offset = "0x950900")]
	private static int get_IsShare(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0x11DE430", Offset = "0x11DE430", VA = "0x11DE430")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x950964", Offset = "0x950964")]
	private static int get_IsTestUpdate(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0x11DE58C", Offset = "0x11DE58C", VA = "0x11DE58C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9509C8", Offset = "0x9509C8")]
	private static int get_Zone(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0x11DE6E4", Offset = "0x11DE6E4", VA = "0x11DE6E4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x950A2C", Offset = "0x950A2C")]
	private static int get_IsPurchase(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0x11DE840", Offset = "0x11DE840", VA = "0x11DE840")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x950A90", Offset = "0x950A90")]
	private static int get_ActivityUrl(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0x11DE998", Offset = "0x11DE998", VA = "0x11DE998")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x950AF4", Offset = "0x950AF4")]
	private static int get_IsCheckActiveSkillState(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0x11DEAF4", Offset = "0x11DEAF4", VA = "0x11DEAF4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x950B58", Offset = "0x950B58")]
	private static int get_IsResourceUpdate(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0x11DEC50", Offset = "0x11DEC50", VA = "0x11DEC50")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x950BBC", Offset = "0x950BBC")]
	private static int get_IsNeedFPS(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0x11DEDAC", Offset = "0x11DEDAC", VA = "0x11DEDAC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x950C20", Offset = "0x950C20")]
	private static int get_IsBattleScene(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0x11DEF08", Offset = "0x11DEF08", VA = "0x11DEF08")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x950C84", Offset = "0x950C84")]
	private static int get_EnableTracking(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0x11DF064", Offset = "0x11DF064", VA = "0x11DF064")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x950CE8", Offset = "0x950CE8")]
	private static int get_IsReyun(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0x11DF1C0", Offset = "0x11DF1C0", VA = "0x11DF1C0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x950D4C", Offset = "0x950D4C")]
	private static int get_ModelPoolSize(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0x11DF318", Offset = "0x11DF318", VA = "0x11DF318")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x950DB0", Offset = "0x950DB0")]
	private static int get_CheckAllPoolFrame(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0x11DF470", Offset = "0x11DF470", VA = "0x11DF470")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x950E14", Offset = "0x950E14")]
	private static int get_CheckGCTime(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0x11DF5C8", Offset = "0x11DF5C8", VA = "0x11DF5C8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x950E78", Offset = "0x950E78")]
	private static int get_SwitchSceneGCTime(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0x11DF720", Offset = "0x11DF720", VA = "0x11DF720")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x950EDC", Offset = "0x950EDC")]
	private static int get_NetMaxCountByFrame(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0x11DF878", Offset = "0x11DF878", VA = "0x11DF878")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x950F40", Offset = "0x950F40")]
	private static int get_ReleaseSpriteTime(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0x11DF9D0", Offset = "0x11DF9D0", VA = "0x11DF9D0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x950FA4", Offset = "0x950FA4")]
	private static int get_PVEMonsterMaxCount(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0x11DFB28", Offset = "0x11DFB28", VA = "0x11DFB28")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x951008", Offset = "0x951008")]
	private static int get_IP(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0x11DFC80", Offset = "0x11DFC80", VA = "0x11DFC80")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95106C", Offset = "0x95106C")]
	private static int get_Port(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0x11DFDD8", Offset = "0x11DFDD8", VA = "0x11DFDD8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9510D0", Offset = "0x9510D0")]
	private static int get_ShareUrl(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0x11DFF30", Offset = "0x11DFF30", VA = "0x11DFF30")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x951134", Offset = "0x951134")]
	private static int get_UIIsUseUnity(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0x11E008C", Offset = "0x11E008C", VA = "0x11E008C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x951198", Offset = "0x951198")]
	private static int get_IsMoveUIAndUnVisible(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0x11E01E8", Offset = "0x11E01E8", VA = "0x11E01E8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9511FC", Offset = "0x9511FC")]
	private static int get_IsShowBattleText(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0x11E0340", Offset = "0x11E0340", VA = "0x11E0340")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x951260", Offset = "0x951260")]
	private static int get_IsShowBattleBlood(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0x11E0498", Offset = "0x11E0498", VA = "0x11E0498")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9512C4", Offset = "0x9512C4")]
	private static int get_IsShowBattleEffect(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0x11E05F0", Offset = "0x11E05F0", VA = "0x11E05F0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x951328", Offset = "0x951328")]
	private static int get_IsShowHitEffect(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0x11E0748", Offset = "0x11E0748", VA = "0x11E0748")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95138C", Offset = "0x95138C")]
	private static int get_GroupNoticeUrl(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0x11E08A0", Offset = "0x11E08A0", VA = "0x11E08A0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9513F0", Offset = "0x9513F0")]
	private static int get_ServerListUrl(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0x11E09F8", Offset = "0x11E09F8", VA = "0x11E09F8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x951454", Offset = "0x951454")]
	private static int get_ServerRootUrl(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0x11E0B50", Offset = "0x11E0B50", VA = "0x11E0B50")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9514B8", Offset = "0x9514B8")]
	private static int get_PlayerLevel(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0x11E0CA8", Offset = "0x11E0CA8", VA = "0x11E0CA8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95151C", Offset = "0x95151C")]
	private static int get_IsIgnoreCDN(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0x11E0E04", Offset = "0x11E0E04", VA = "0x11E0E04")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x951580", Offset = "0x951580")]
	private static int get_VersionJson(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0x11E0F5C", Offset = "0x11E0F5C", VA = "0x11E0F5C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9515E4", Offset = "0x9515E4")]
	private static int get_IsRecordAssetBundleList(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0x11E10B8", Offset = "0x11E10B8", VA = "0x11E10B8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x951648", Offset = "0x951648")]
	private static int get_MaxGuideUIErrorFindCount(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0x11E1210", Offset = "0x11E1210", VA = "0x11E1210")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9516AC", Offset = "0x9516AC")]
	private static int get_DownloadSizeInDesList(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0x11E1368", Offset = "0x11E1368", VA = "0x11E1368")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x951710", Offset = "0x951710")]
	private static int get_DownloadDay(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0x11E14C0", Offset = "0x11E14C0", VA = "0x11E14C0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x951774", Offset = "0x951774")]
	private static int get_CompressVersionPath(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0x11E1618", Offset = "0x11E1618", VA = "0x11E1618")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9517D8", Offset = "0x9517D8")]
	private static int get_CompressUnVersionPath(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0x11E1770", Offset = "0x11E1770", VA = "0x11E1770")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95183C", Offset = "0x95183C")]
	private static int get_BattleTipPreResCount(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0x11E18C8", Offset = "0x11E18C8", VA = "0x11E18C8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9518A0", Offset = "0x9518A0")]
	private static int get_WrapContentIsCache(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0x11E1A24", Offset = "0x11E1A24", VA = "0x11E1A24")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x951904", Offset = "0x951904")]
	private static int get_IsReportGuideRes(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0x11E1B80", Offset = "0x11E1B80", VA = "0x11E1B80")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x951968", Offset = "0x951968")]
	private static int get_VersionURL(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0x11E1CD0", Offset = "0x11E1CD0", VA = "0x11E1CD0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9519CC", Offset = "0x9519CC")]
	private static int get_ReleaseViewTime(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0x11E1E64", Offset = "0x11E1E64", VA = "0x11E1E64")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x951A30", Offset = "0x951A30")]
	private static int get_PlayerId(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0x11E1FF8", Offset = "0x11E1FF8", VA = "0x11E1FF8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x951A94", Offset = "0x951A94")]
	private static int get_IsStarter(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0x11E2190", Offset = "0x11E2190", VA = "0x11E2190")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x951AF8", Offset = "0x951AF8")]
	private static int set_Version(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0x11E22E8", Offset = "0x11E22E8", VA = "0x11E22E8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x951B5C", Offset = "0x951B5C")]
	private static int set_VersionCode(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0x11E2464", Offset = "0x11E2464", VA = "0x11E2464")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x951BC0", Offset = "0x951BC0")]
	private static int set_BuildCode(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0x11E25E0", Offset = "0x11E25E0", VA = "0x11E25E0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x951C24", Offset = "0x951C24")]
	private static int set_BuildIOSVersionCode(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0x11E275C", Offset = "0x11E275C", VA = "0x11E275C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x951C88", Offset = "0x951C88")]
	private static int set_BuildTime(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0x11E28B4", Offset = "0x11E28B4", VA = "0x11E28B4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x951CEC", Offset = "0x951CEC")]
	private static int set_StorageType(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0x11E2A8C", Offset = "0x11E2A8C", VA = "0x11E2A8C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x951D50", Offset = "0x951D50")]
	private static int set_IsVR(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0x11E2BE8", Offset = "0x11E2BE8", VA = "0x11E2BE8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x951DB4", Offset = "0x951DB4")]
	private static int set_IsAllRelease(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0x11E2D44", Offset = "0x11E2D44", VA = "0x11E2D44")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x951E18", Offset = "0x951E18")]
	private static int set_IsStartGuide(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0x11E2EA0", Offset = "0x11E2EA0", VA = "0x11E2EA0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x951E7C", Offset = "0x951E7C")]
	private static int set_IsReleaseView(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0x11E2FFC", Offset = "0x11E2FFC", VA = "0x11E2FFC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x951EE0", Offset = "0x951EE0")]
	private static int set_IsReleaseViewImmediately(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0x11E3158", Offset = "0x11E3158", VA = "0x11E3158")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x951F44", Offset = "0x951F44")]
	private static int set_Channel(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0x11E32B0", Offset = "0x11E32B0", VA = "0x11E32B0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x951FA8", Offset = "0x951FA8")]
	private static int set_WebIOSRoot(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0x11E3408", Offset = "0x11E3408", VA = "0x11E3408")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95200C", Offset = "0x95200C")]
	private static int set_WebOtherRoot(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0x11E3560", Offset = "0x11E3560", VA = "0x11E3560")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x952070", Offset = "0x952070")]
	private static int set_WebRoot(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0x11E36B8", Offset = "0x11E36B8", VA = "0x11E36B8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9520D4", Offset = "0x9520D4")]
	private static int set_IsDebug(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0x11E3814", Offset = "0x11E3814", VA = "0x11E3814")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x952138", Offset = "0x952138")]
	private static int set_IsIOSPackOpenDebug(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0x11E3970", Offset = "0x11E3970", VA = "0x11E3970")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95219C", Offset = "0x95219C")]
	private static int set_IsOpenBugly(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0x11E3ACC", Offset = "0x11E3ACC", VA = "0x11E3ACC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x952200", Offset = "0x952200")]
	private static int set_ABIsCompress(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0x11E3C28", Offset = "0x11E3C28", VA = "0x11E3C28")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x952264", Offset = "0x952264")]
	private static int set_IsCopyInFirst(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0x11E3D84", Offset = "0x11E3D84", VA = "0x11E3D84")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9522C8", Offset = "0x9522C8")]
	private static int set_IsEtc(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0x11E3EE0", Offset = "0x11E3EE0", VA = "0x11E3EE0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95232C", Offset = "0x95232C")]
	private static int set_IsVoice(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0x11E403C", Offset = "0x11E403C", VA = "0x11E403C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x952390", Offset = "0x952390")]
	private static int set_IsSupportoffline(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0x11E4198", Offset = "0x11E4198", VA = "0x11E4198")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9523F4", Offset = "0x9523F4")]
	private static int set_IsShare(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0x11E42F4", Offset = "0x11E42F4", VA = "0x11E42F4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x952458", Offset = "0x952458")]
	private static int set_IsTestUpdate(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0x11E4450", Offset = "0x11E4450", VA = "0x11E4450")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9524BC", Offset = "0x9524BC")]
	private static int set_Zone(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0x11E45A8", Offset = "0x11E45A8", VA = "0x11E45A8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x952520", Offset = "0x952520")]
	private static int set_IsPurchase(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0x11E4704", Offset = "0x11E4704", VA = "0x11E4704")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x952584", Offset = "0x952584")]
	private static int set_ActivityUrl(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0x11E485C", Offset = "0x11E485C", VA = "0x11E485C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9525E8", Offset = "0x9525E8")]
	private static int set_IsCheckActiveSkillState(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0x11E49B8", Offset = "0x11E49B8", VA = "0x11E49B8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95264C", Offset = "0x95264C")]
	private static int set_IsResourceUpdate(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0x11E4B14", Offset = "0x11E4B14", VA = "0x11E4B14")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9526B0", Offset = "0x9526B0")]
	private static int set_IsNeedFPS(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0x11E4C70", Offset = "0x11E4C70", VA = "0x11E4C70")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x952714", Offset = "0x952714")]
	private static int set_IsBattleScene(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0x11E4DCC", Offset = "0x11E4DCC", VA = "0x11E4DCC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x952778", Offset = "0x952778")]
	private static int set_EnableTracking(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0x11E4F28", Offset = "0x11E4F28", VA = "0x11E4F28")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9527DC", Offset = "0x9527DC")]
	private static int set_IsReyun(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0x11E5084", Offset = "0x11E5084", VA = "0x11E5084")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x952840", Offset = "0x952840")]
	private static int set_ModelPoolSize(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0x11E5200", Offset = "0x11E5200", VA = "0x11E5200")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9528A4", Offset = "0x9528A4")]
	private static int set_CheckAllPoolFrame(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0x11E537C", Offset = "0x11E537C", VA = "0x11E537C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x952908", Offset = "0x952908")]
	private static int set_CheckGCTime(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0x11E54F8", Offset = "0x11E54F8", VA = "0x11E54F8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95296C", Offset = "0x95296C")]
	private static int set_SwitchSceneGCTime(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0x11E5674", Offset = "0x11E5674", VA = "0x11E5674")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9529D0", Offset = "0x9529D0")]
	private static int set_NetMaxCountByFrame(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0x11E57F0", Offset = "0x11E57F0", VA = "0x11E57F0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x952A34", Offset = "0x952A34")]
	private static int set_ReleaseSpriteTime(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0x11E596C", Offset = "0x11E596C", VA = "0x11E596C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x952A98", Offset = "0x952A98")]
	private static int set_PVEMonsterMaxCount(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0x11E5AE8", Offset = "0x11E5AE8", VA = "0x11E5AE8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x952AFC", Offset = "0x952AFC")]
	private static int set_IP(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0x11E5C40", Offset = "0x11E5C40", VA = "0x11E5C40")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x952B60", Offset = "0x952B60")]
	private static int set_Port(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0x11E5DBC", Offset = "0x11E5DBC", VA = "0x11E5DBC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x952BC4", Offset = "0x952BC4")]
	private static int set_ShareUrl(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0x11E5F14", Offset = "0x11E5F14", VA = "0x11E5F14")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x952C28", Offset = "0x952C28")]
	private static int set_UIIsUseUnity(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0x11E6070", Offset = "0x11E6070", VA = "0x11E6070")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x952C8C", Offset = "0x952C8C")]
	private static int set_IsMoveUIAndUnVisible(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0x11E61CC", Offset = "0x11E61CC", VA = "0x11E61CC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x952CF0", Offset = "0x952CF0")]
	private static int set_IsShowBattleText(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0x11E6348", Offset = "0x11E6348", VA = "0x11E6348")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x952D54", Offset = "0x952D54")]
	private static int set_IsShowBattleBlood(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0x11E64C4", Offset = "0x11E64C4", VA = "0x11E64C4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x952DB8", Offset = "0x952DB8")]
	private static int set_IsShowBattleEffect(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0x11E6640", Offset = "0x11E6640", VA = "0x11E6640")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x952E1C", Offset = "0x952E1C")]
	private static int set_IsShowHitEffect(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0x11E67BC", Offset = "0x11E67BC", VA = "0x11E67BC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x952E80", Offset = "0x952E80")]
	private static int set_GroupNoticeUrl(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0x11E6914", Offset = "0x11E6914", VA = "0x11E6914")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x952EE4", Offset = "0x952EE4")]
	private static int set_ServerListUrl(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0x11E6A6C", Offset = "0x11E6A6C", VA = "0x11E6A6C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x952F48", Offset = "0x952F48")]
	private static int set_ServerRootUrl(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0x11E6BC4", Offset = "0x11E6BC4", VA = "0x11E6BC4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x952FAC", Offset = "0x952FAC")]
	private static int set_PlayerLevel(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0x11E6D40", Offset = "0x11E6D40", VA = "0x11E6D40")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x953010", Offset = "0x953010")]
	private static int set_IsIgnoreCDN(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0x11E6E9C", Offset = "0x11E6E9C", VA = "0x11E6E9C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x953074", Offset = "0x953074")]
	private static int set_VersionJson(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0x11E6FF4", Offset = "0x11E6FF4", VA = "0x11E6FF4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9530D8", Offset = "0x9530D8")]
	private static int set_IsRecordAssetBundleList(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0x11E7150", Offset = "0x11E7150", VA = "0x11E7150")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95313C", Offset = "0x95313C")]
	private static int set_MaxGuideUIErrorFindCount(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0x11E72CC", Offset = "0x11E72CC", VA = "0x11E72CC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9531A0", Offset = "0x9531A0")]
	private static int set_DownloadSizeInDesList(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0x11E7448", Offset = "0x11E7448", VA = "0x11E7448")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x953204", Offset = "0x953204")]
	private static int set_DownloadDay(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0x11E75C4", Offset = "0x11E75C4", VA = "0x11E75C4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x953268", Offset = "0x953268")]
	private static int set_CompressVersionPath(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0x11E771C", Offset = "0x11E771C", VA = "0x11E771C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9532CC", Offset = "0x9532CC")]
	private static int set_CompressUnVersionPath(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0x11E7874", Offset = "0x11E7874", VA = "0x11E7874")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x953330", Offset = "0x953330")]
	private static int set_BattleTipPreResCount(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0x11E79F0", Offset = "0x11E79F0", VA = "0x11E79F0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x953394", Offset = "0x953394")]
	private static int set_WrapContentIsCache(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0x11E7B4C", Offset = "0x11E7B4C", VA = "0x11E7B4C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9533F8", Offset = "0x9533F8")]
	private static int set_IsReportGuideRes(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0x11E7CA8", Offset = "0x11E7CA8", VA = "0x11E7CA8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95345C", Offset = "0x95345C")]
	private static int set_ReleaseViewTime(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0x11E7E60", Offset = "0x11E7E60", VA = "0x11E7E60")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9534C0", Offset = "0x9534C0")]
	private static int set_PlayerId(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0x11E8018", Offset = "0x11E8018", VA = "0x11E8018")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x953524", Offset = "0x953524")]
	private static int set_IsStarter(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0x11E9FE0", Offset = "0x11E9FE0", VA = "0x11E9FE0")]
	public GameSettingsWrap()
	{
	}
}
[Token(Token = "0x200004A")]
public static class LuaBinder
{
	[Token(Token = "0x2000331")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93FD80", Offset = "0x93FD80")]
	private sealed class <Bind>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LuaState L;

		[Token(Token = "0x4000DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <t>5__2;

		[Token(Token = "0x170001E9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B99")]
			[Address(RVA = "0x146F628", Offset = "0x146F628", VA = "0x146F628", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B9B")]
			[Address(RVA = "0x146F690", Offset = "0x146F690", VA = "0x146F690", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B96")]
		[Address(RVA = "0x146E130", Offset = "0x146E130", VA = "0x146E130")]
		[DebuggerHidden]
		public <Bind>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x6002B97")]
		[Address(RVA = "0x146E15C", Offset = "0x146E15C", VA = "0x146E15C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B98")]
		[Address(RVA = "0x146E160", Offset = "0x146E160", VA = "0x146E160", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B9A")]
		[Address(RVA = "0x146F630", Offset = "0x146F630", VA = "0x146F630", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0x11F3538", Offset = "0x11F3538", VA = "0x11F3538")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x953588", Offset = "0x953588")]
	public static IEnumerator Bind(LuaState L)
	{
		return null;
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0x11ED568", Offset = "0x11ED568", VA = "0x11ED568")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9535EC", Offset = "0x9535EC")]
	private static int UnityEngine_UI_InputField_OnValidateInput(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0x11ED7D0", Offset = "0x11ED7D0", VA = "0x11ED7D0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x953650", Offset = "0x953650")]
	private static int UnityEngine_Events_UnityAction(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0x11EDA38", Offset = "0x11EDA38", VA = "0x11EDA38")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9536B4", Offset = "0x9536B4")]
	private static int UnityEngine_Camera_CameraCallback(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0x11EDCA0", Offset = "0x11EDCA0", VA = "0x11EDCA0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x953718", Offset = "0x953718")]
	private static int UnityEngine_Application_AdvertisingIdentifierCallback(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0x11EDF08", Offset = "0x11EDF08", VA = "0x11EDF08")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95377C", Offset = "0x95377C")]
	private static int UnityEngine_Application_LowMemoryCallback(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0x11EE170", Offset = "0x11EE170", VA = "0x11EE170")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9537E0", Offset = "0x9537E0")]
	private static int UnityEngine_Application_LogCallback(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0x11EE3D8", Offset = "0x11EE3D8", VA = "0x11EE3D8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x953844", Offset = "0x953844")]
	private static int UnityEngine_AudioClip_PCMReaderCallback(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0x11EE640", Offset = "0x11EE640", VA = "0x11EE640")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9538A8", Offset = "0x9538A8")]
	private static int UnityEngine_AudioClip_PCMSetPositionCallback(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0x11EE8A8", Offset = "0x11EE8A8", VA = "0x11EE8A8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95390C", Offset = "0x95390C")]
	private static int UnityEngine_RectTransform_ReapplyDrivenProperties(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0x11EEB10", Offset = "0x11EEB10", VA = "0x11EEB10")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x953970", Offset = "0x953970")]
	private static int UnityEngine_Canvas_WillRenderCanvases(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0x11EED78", Offset = "0x11EED78", VA = "0x11EED78")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9539D4", Offset = "0x9539D4")]
	private static int Sword_TimeHandler(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0x11EEFE0", Offset = "0x11EEFE0", VA = "0x11EEFE0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x953A38", Offset = "0x953A38")]
	private static int Sword_LoadHandler(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0x11EF248", Offset = "0x11EF248", VA = "0x11EF248")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x953A9C", Offset = "0x953A9C")]
	private static int Sword_ZeroRefAsset(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0x11EF4B0", Offset = "0x11EF4B0", VA = "0x11EF4B0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x953B00", Offset = "0x953B00")]
	private static int Sword_OnTexture(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0x11EF718", Offset = "0x11EF718", VA = "0x11EF718")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x953B64", Offset = "0x953B64")]
	private static int Sword_GameVoidAction_object(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0x11EF980", Offset = "0x11EF980", VA = "0x11EF980")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x953BC8", Offset = "0x953BC8")]
	private static int Sword_GameVoidAction_int_int(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0x11EFBE8", Offset = "0x11EFBE8", VA = "0x11EFBE8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x953C2C", Offset = "0x953C2C")]
	private static int Sword_DownloadProcessHandler(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0x11EFE50", Offset = "0x11EFE50", VA = "0x11EFE50")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x953C90", Offset = "0x953C90")]
	private static int Sword_Game_HttpManager_OnHttpByteCallback(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0x11F00B8", Offset = "0x11F00B8", VA = "0x11F00B8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x953CF4", Offset = "0x953CF4")]
	private static int Sword_Game_HttpManager_OnHttpCallback(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0x11F0320", Offset = "0x11F0320", VA = "0x11F0320")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x953D58", Offset = "0x953D58")]
	private static int Sword_Framework_ReloadChildCompoent_OnFillItem(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0x11F0588", Offset = "0x11F0588", VA = "0x11F0588")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x953DBC", Offset = "0x953DBC")]
	private static int Sword_Framework_ReloadChildCompoent_OnInitItem(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0x11F07F0", Offset = "0x11F07F0", VA = "0x11F07F0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x953E20", Offset = "0x953E20")]
	private static int Sword_Framework_WrapContent_OnCreateItem(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0x11F0A58", Offset = "0x11F0A58", VA = "0x11F0A58")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x953E84", Offset = "0x953E84")]
	private static int Sword_Framework_WrapContent_OnFillItem(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0x11F0CC0", Offset = "0x11F0CC0", VA = "0x11F0CC0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x953EE8", Offset = "0x953EE8")]
	private static int Sword_Framework_WrapContent_OnCenterItem(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0x11F0F28", Offset = "0x11F0F28", VA = "0x11F0F28")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x953F4C", Offset = "0x953F4C")]
	private static int System_Action(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0x11F1190", Offset = "0x11F1190", VA = "0x11F1190")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x953FB0", Offset = "0x953FB0")]
	private static int System_Predicate_int(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0x11F13F8", Offset = "0x11F13F8", VA = "0x11F13F8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x954014", Offset = "0x954014")]
	private static int System_Action_int(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0x11F1660", Offset = "0x11F1660", VA = "0x11F1660")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x954078", Offset = "0x954078")]
	private static int System_Comparison_int(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0x11F18C8", Offset = "0x11F18C8", VA = "0x11F18C8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9540DC", Offset = "0x9540DC")]
	private static int System_Func_int_int(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0x11F1B30", Offset = "0x11F1B30", VA = "0x11F1B30")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x954140", Offset = "0x954140")]
	private static int System_Action_bool(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0x11F1D98", Offset = "0x11F1D98", VA = "0x11F1D98")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9541A4", Offset = "0x9541A4")]
	private static int System_Action_string(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0x11F2000", Offset = "0x11F2000", VA = "0x11F2000")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x954208", Offset = "0x954208")]
	private static int System_Func_bool(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0x11F2268", Offset = "0x11F2268", VA = "0x11F2268")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95426C", Offset = "0x95426C")]
	private static int System_Action_object(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0x11F24D0", Offset = "0x11F24D0", VA = "0x11F24D0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9542D0", Offset = "0x9542D0")]
	private static int System_Action_string_string_string_string(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0x11F2738", Offset = "0x11F2738", VA = "0x11F2738")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x954334", Offset = "0x954334")]
	private static int LuaOpen_UnityEngine_MeshRenderer(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0x11F2938", Offset = "0x11F2938", VA = "0x11F2938")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x954398", Offset = "0x954398")]
	private static int LuaOpen_UnityEngine_BoxCollider(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0x11F2B38", Offset = "0x11F2B38", VA = "0x11F2B38")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9543FC", Offset = "0x9543FC")]
	private static int LuaOpen_UnityEngine_Animation(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0x11F2D38", Offset = "0x11F2D38", VA = "0x11F2D38")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x954460", Offset = "0x954460")]
	private static int LuaOpen_UnityEngine_AnimationClip(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0x11F2F38", Offset = "0x11F2F38", VA = "0x11F2F38")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9544C4", Offset = "0x9544C4")]
	private static int LuaOpen_UnityEngine_AnimationState(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0x11F3138", Offset = "0x11F3138", VA = "0x11F3138")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x954528", Offset = "0x954528")]
	private static int LuaOpen_UnityEngine_SkinWeights(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0x11F3338", Offset = "0x11F3338", VA = "0x11F3338")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95458C", Offset = "0x95458C")]
	private static int LuaOpen_UnityEngine_RenderTexture(IntPtr L)
	{
		return default(int);
	}
}
[Token(Token = "0x200004B")]
public class LuaInterface_DebuggerWrap
{
	[Token(Token = "0x6000381")]
	[Address(RVA = "0x15BF0E4", Offset = "0x15BF0E4", VA = "0x15BF0E4")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0x15BD320", Offset = "0x15BD320", VA = "0x15BD320")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9545F0", Offset = "0x9545F0")]
	private static int Log(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0x15BD99C", Offset = "0x15BD99C", VA = "0x15BD99C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x954654", Offset = "0x954654")]
	private static int LogWarning(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0x15BE018", Offset = "0x15BE018", VA = "0x15BE018")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9546B8", Offset = "0x9546B8")]
	private static int LogError(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0x15BE5B4", Offset = "0x15BE5B4", VA = "0x15BE5B4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95471C", Offset = "0x95471C")]
	private static int LogException(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0x15BE89C", Offset = "0x15BE89C", VA = "0x15BE89C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x954780", Offset = "0x954780")]
	private static int get_useLog(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0x15BE9F8", Offset = "0x15BE9F8", VA = "0x15BE9F8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9547E4", Offset = "0x9547E4")]
	private static int get_threadStack(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0x15BEB50", Offset = "0x15BEB50", VA = "0x15BEB50")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x954848", Offset = "0x954848")]
	private static int get_logger(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0x15BECA4", Offset = "0x15BECA4", VA = "0x15BECA4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9548AC", Offset = "0x9548AC")]
	private static int set_useLog(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0x15BEE00", Offset = "0x15BEE00", VA = "0x15BEE00")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x954910", Offset = "0x954910")]
	private static int set_threadStack(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0x15BEF54", Offset = "0x15BEF54", VA = "0x15BEF54")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x954974", Offset = "0x954974")]
	private static int set_logger(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0x15BF394", Offset = "0x15BF394", VA = "0x15BF394")]
	public LuaInterface_DebuggerWrap()
	{
	}
}
[Token(Token = "0x200004C")]
public class Sword_AudioMgrWrap
{
	[Token(Token = "0x600038D")]
	[Address(RVA = "0xC2ACD4", Offset = "0xC2ACD4", VA = "0xC2ACD4")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0xC28AF0", Offset = "0xC28AF0", VA = "0xC28AF0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9549D8", Offset = "0x9549D8")]
	private static int playSecondBg(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0xC28D50", Offset = "0xC28D50", VA = "0xC28D50")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x954A3C", Offset = "0x954A3C")]
	private static int BgFadeRecoverLogic(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0xC28ED8", Offset = "0xC28ED8", VA = "0xC28ED8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x954AA0", Offset = "0x954AA0")]
	private static int SetFadeInSeconds(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0xC290AC", Offset = "0xC290AC", VA = "0xC290AC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x954B04", Offset = "0x954B04")]
	private static int PlayAudio(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0xC2930C", Offset = "0xC2930C", VA = "0xC2930C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x954B68", Offset = "0x954B68")]
	private static int PlayAudioWithCallback(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0xC295AC", Offset = "0xC295AC", VA = "0xC295AC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x954BCC", Offset = "0x954BCC")]
	private static int PlayBgById(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0xC297D4", Offset = "0xC297D4", VA = "0xC297D4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x954C30", Offset = "0x954C30")]
	private static int CloseBgAudio(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0xC2995C", Offset = "0xC2995C", VA = "0xC2995C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x954C94", Offset = "0x954C94")]
	private static int CloseSound(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0xC29AE4", Offset = "0xC29AE4", VA = "0xC29AE4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x954CF8", Offset = "0x954CF8")]
	private static int OpenSound(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0xC29C6C", Offset = "0xC29C6C", VA = "0xC29C6C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x954D5C", Offset = "0x954D5C")]
	private static int CloseBg(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0xC29DF4", Offset = "0xC29DF4", VA = "0xC29DF4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x954DC0", Offset = "0x954DC0")]
	private static int OpenBg(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0xC29F7C", Offset = "0xC29F7C", VA = "0xC29F7C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x954E24", Offset = "0x954E24")]
	private static int CloseByAutoID(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0xC2A164", Offset = "0xC2A164", VA = "0xC2A164")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x954E88", Offset = "0x954E88")]
	private static int FadeByAutoID(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0xC2A34C", Offset = "0xC2A34C", VA = "0xC2A34C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x954EEC", Offset = "0x954EEC")]
	private static int SetBgVolume(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0xC2A520", Offset = "0xC2A520", VA = "0xC2A520")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x954F50", Offset = "0x954F50")]
	private static int FadeBgVolume(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0xC2A6A8", Offset = "0xC2A6A8", VA = "0xC2A6A8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x954FB4", Offset = "0x954FB4")]
	private static int GetSoundPlayTime(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0xC2A8A8", Offset = "0xC2A8A8", VA = "0xC2A8A8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x955018", Offset = "0x955018")]
	private static int CloseSoundByType(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0xC2AA90", Offset = "0xC2AA90", VA = "0xC2AA90")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95507C", Offset = "0x95507C")]
	private static int op_Equality(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0xC2B260", Offset = "0xC2B260", VA = "0xC2B260")]
	public Sword_AudioMgrWrap()
	{
	}
}
[Token(Token = "0x200004D")]
public class Sword_CacheWrap
{
	[Token(Token = "0x60003A1")]
	[Address(RVA = "0xC2C360", Offset = "0xC2C360", VA = "0xC2C360")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0xC2B268", Offset = "0xC2B268", VA = "0xC2B268")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9550E0", Offset = "0x9550E0")]
	private static int _CreateSword_Cache(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0xC2B420", Offset = "0xC2B420", VA = "0xC2B420")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x955144", Offset = "0x955144")]
	private static int SaveStr(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0xC2B5EC", Offset = "0xC2B5EC", VA = "0xC2B5EC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9551A8", Offset = "0x9551A8")]
	private static int SaveInt(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0xC2B7F0", Offset = "0xC2B7F0", VA = "0xC2B7F0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95520C", Offset = "0x95520C")]
	private static int SaveFloat(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0xC2B9E0", Offset = "0xC2B9E0", VA = "0xC2B9E0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x955270", Offset = "0x955270")]
	private static int GetInt(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0xC2BBD0", Offset = "0xC2BBD0", VA = "0xC2BBD0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9552D4", Offset = "0x9552D4")]
	private static int GetStr(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0xC2BDC0", Offset = "0xC2BDC0", VA = "0xC2BDC0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x955338", Offset = "0x955338")]
	private static int GetFloat(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0xC2BFBC", Offset = "0xC2BFBC", VA = "0xC2BFBC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95539C", Offset = "0x95539C")]
	private static int ContainsKey(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0xC2C1AC", Offset = "0xC2C1AC", VA = "0xC2C1AC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x955400", Offset = "0x955400")]
	private static int RemoveKey(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0xC2C6AC", Offset = "0xC2C6AC", VA = "0xC2C6AC")]
	public Sword_CacheWrap()
	{
	}
}
[Token(Token = "0x200004E")]
public class Sword_CheckInsideItemWrap
{
	[Token(Token = "0x60003AC")]
	[Address(RVA = "0xC2C8F8", Offset = "0xC2C8F8", VA = "0xC2C8F8")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0xC2C6B4", Offset = "0xC2C6B4", VA = "0xC2C6B4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x955464", Offset = "0x955464")]
	private static int op_Equality(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0xC2CA44", Offset = "0xC2CA44", VA = "0xC2CA44")]
	public Sword_CheckInsideItemWrap()
	{
	}
}
[Token(Token = "0x200004F")]
public class Sword_CircleLoopWrap
{
	[Token(Token = "0x60003AF")]
	[Address(RVA = "0xC2DED4", Offset = "0xC2DED4", VA = "0xC2DED4")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0xC2CA4C", Offset = "0xC2CA4C", VA = "0xC2CA4C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9554C8", Offset = "0x9554C8")]
	private static int Init(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0xC2CBD4", Offset = "0xC2CBD4", VA = "0xC2CBD4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95552C", Offset = "0x95552C")]
	private static int GetIndex(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0xC2CD98", Offset = "0xC2CD98", VA = "0xC2CD98")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x955590", Offset = "0x955590")]
	private static int SelecIndex(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0xC2CF80", Offset = "0xC2CF80", VA = "0xC2CF80")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9555F4", Offset = "0x9555F4")]
	private static int op_Equality(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0xC2D1C4", Offset = "0xC2D1C4", VA = "0xC2D1C4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x955658", Offset = "0x955658")]
	private static int get_OnResetItemIndex(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0xC2D364", Offset = "0xC2D364", VA = "0xC2D364")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9556BC", Offset = "0x9556BC")]
	private static int get_OnTweenCompelete(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0xC2D504", Offset = "0xC2D504", VA = "0xC2D504")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x955720", Offset = "0x955720")]
	private static int get_OnChangeSelect(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0xC2D6A4", Offset = "0xC2D6A4", VA = "0xC2D6A4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x955784", Offset = "0x955784")]
	private static int get_OnNearSelect(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0xC2D844", Offset = "0xC2D844", VA = "0xC2D844")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9557E8", Offset = "0x9557E8")]
	private static int set_OnResetItemIndex(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0xC2D9E8", Offset = "0xC2D9E8", VA = "0xC2D9E8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95584C", Offset = "0x95584C")]
	private static int set_OnTweenCompelete(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0xC2DB8C", Offset = "0xC2DB8C", VA = "0xC2DB8C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9558B0", Offset = "0x9558B0")]
	private static int set_OnChangeSelect(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0xC2DD30", Offset = "0xC2DD30", VA = "0xC2DD30")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x955914", Offset = "0x955914")]
	private static int set_OnNearSelect(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0xC2E280", Offset = "0xC2E280", VA = "0xC2E280")]
	public Sword_CircleLoopWrap()
	{
	}
}
[Token(Token = "0x2000050")]
public class Sword_ConstWrap
{
	[Token(Token = "0x60003BD")]
	[Address(RVA = "0xC2EB58", Offset = "0xC2EB58", VA = "0xC2EB58")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0xC2E288", Offset = "0xC2E288", VA = "0xC2E288")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x955978", Offset = "0x955978")]
	private static int get_vEFFECT_OFFSET(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0xC2E2C8", Offset = "0xC2E2C8", VA = "0xC2E2C8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9559DC", Offset = "0x9559DC")]
	private static int get_vPVP_BUFF_OFFSET(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0xC2E308", Offset = "0xC2E308", VA = "0xC2E308")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x955A40", Offset = "0x955A40")]
	private static int get_vPVP_SCENE_UI_OFFSET(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0xC2E348", Offset = "0xC2E348", VA = "0xC2E348")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x955AA4", Offset = "0x955AA4")]
	private static int get_PVP_BUFF_INTERVAL(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0xC2E388", Offset = "0xC2E388", VA = "0xC2E388")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x955B08", Offset = "0x955B08")]
	private static int get_IS_TEST_BATTLE(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0xC2E3C8", Offset = "0xC2E3C8", VA = "0xC2E3C8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x955B6C", Offset = "0x955B6C")]
	private static int get_TestMonsterId(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0xC2E408", Offset = "0xC2E408", VA = "0xC2E408")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x955BD0", Offset = "0x955BD0")]
	private static int get_TestMonsterLine(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0xC2E448", Offset = "0xC2E448", VA = "0xC2E448")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x955C34", Offset = "0x955C34")]
	private static int get_TestMonsterHp(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0xC2E488", Offset = "0xC2E488", VA = "0xC2E488")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x955C98", Offset = "0x955C98")]
	private static int get_IS_DONT_LOAD_SCENE(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0xC2E4C8", Offset = "0xC2E4C8", VA = "0xC2E4C8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x955CFC", Offset = "0x955CFC")]
	private static int get_IsTestSkill(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0xC2E508", Offset = "0xC2E508", VA = "0xC2E508")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x955D60", Offset = "0x955D60")]
	private static int get_IS_ALL_SYS_OPEN(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0xC2E548", Offset = "0xC2E548", VA = "0xC2E548")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x955DC4", Offset = "0x955DC4")]
	private static int get_IsOpenGuide(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0xC2E588", Offset = "0xC2E588", VA = "0xC2E588")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x955E28", Offset = "0x955E28")]
	private static int get_ForceGuideGroupID(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0xC2E5C8", Offset = "0xC2E5C8", VA = "0xC2E5C8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x955E8C", Offset = "0x955E8C")]
	private static int get_IsGuideCanBack(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0xC2E608", Offset = "0xC2E608", VA = "0xC2E608")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x955EF0", Offset = "0x955EF0")]
	private static int get_IsGuideAutoPlay(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0xC2E648", Offset = "0xC2E648", VA = "0xC2E648")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x955F54", Offset = "0x955F54")]
	private static int get_IsUnityEditor(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0xC2E688", Offset = "0xC2E688", VA = "0xC2E688")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x955FB8", Offset = "0x955FB8")]
	private static int get_IsDebug(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0xC2E6C8", Offset = "0xC2E6C8", VA = "0xC2E6C8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95601C", Offset = "0x95601C")]
	private static int set_vEFFECT_OFFSET(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0xC2E7EC", Offset = "0xC2E7EC", VA = "0xC2E7EC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x956080", Offset = "0x956080")]
	private static int set_vPVP_BUFF_OFFSET(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0xC2E910", Offset = "0xC2E910", VA = "0xC2E910")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9560E4", Offset = "0x9560E4")]
	private static int set_vPVP_SCENE_UI_OFFSET(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0xC2EA34", Offset = "0xC2EA34", VA = "0xC2EA34")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x956148", Offset = "0x956148")]
	private static int set_PVP_BUFF_INTERVAL(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0xC2F4F4", Offset = "0xC2F4F4", VA = "0xC2F4F4")]
	public Sword_ConstWrap()
	{
	}
}
[Token(Token = "0x2000051")]
public class Sword_ControllerWrap
{
	[Token(Token = "0x60003D4")]
	[Address(RVA = "0xC2F4FC", Offset = "0xC2F4FC", VA = "0xC2F4FC")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0xC2F600", Offset = "0xC2F600", VA = "0xC2F600")]
	public Sword_ControllerWrap()
	{
	}
}
[Token(Token = "0x2000052")]
public class Sword_Framework_BaseMonoWrap
{
	[Token(Token = "0x60003D6")]
	[Address(RVA = "0xC2F84C", Offset = "0xC2F84C", VA = "0xC2F84C")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0xC2F608", Offset = "0xC2F608", VA = "0xC2F608")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9561AC", Offset = "0x9561AC")]
	private static int op_Equality(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0xC2F998", Offset = "0xC2F998", VA = "0xC2F998")]
	public Sword_Framework_BaseMonoWrap()
	{
	}
}
[Token(Token = "0x2000053")]
public class Sword_Framework_BaseViewWrap
{
	[Token(Token = "0x60003D9")]
	[Address(RVA = "0xC2FBE4", Offset = "0xC2FBE4", VA = "0xC2FBE4")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0xC2F9A0", Offset = "0xC2F9A0", VA = "0xC2F9A0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x956210", Offset = "0x956210")]
	private static int op_Equality(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0xC2FD30", Offset = "0xC2FD30", VA = "0xC2FD30")]
	public Sword_Framework_BaseViewWrap()
	{
	}
}
[Token(Token = "0x2000054")]
public class Sword_Framework_ComLuaResLoaderWrap
{
	[Token(Token = "0x60003DC")]
	[Address(RVA = "0xC305F8", Offset = "0xC305F8", VA = "0xC305F8")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0xC2FD38", Offset = "0xC2FD38", VA = "0xC2FD38")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x956274", Offset = "0x956274")]
	private static int _CreateSword_Framework_ComLuaResLoader(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0xC2FEF0", Offset = "0xC2FEF0", VA = "0xC2FEF0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9562D8", Offset = "0x9562D8")]
	private static int Load(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0xC300BC", Offset = "0xC300BC", VA = "0xC300BC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95633C", Offset = "0x95633C")]
	private static int LoadAssets(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0xC302A4", Offset = "0xC302A4", VA = "0xC302A4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9563A0", Offset = "0x9563A0")]
	private static int LoadResources(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0xC30470", Offset = "0xC30470", VA = "0xC30470")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x956404", Offset = "0x956404")]
	private static int Clear(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0xC30844", Offset = "0xC30844", VA = "0xC30844")]
	public Sword_Framework_ComLuaResLoaderWrap()
	{
	}
}
[Token(Token = "0x2000055")]
public class Sword_Framework_ComViewLoaderWrap
{
	[Token(Token = "0x60003E3")]
	[Address(RVA = "0xC4F558", Offset = "0xC4F558", VA = "0xC4F558")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0xC3084C", Offset = "0xC3084C", VA = "0xC3084C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x956468", Offset = "0x956468")]
	private static int _CreateSword_Framework_ComViewLoader(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0xC30A04", Offset = "0xC30A04", VA = "0xC30A04")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9564CC", Offset = "0x9564CC")]
	private static int AddBg(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0xC30B8C", Offset = "0xC30B8C", VA = "0xC30B8C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x956530", Offset = "0x956530")]
	private static int SetBgActive(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0xC30D60", Offset = "0xC30D60", VA = "0xC30D60")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x956594", Offset = "0x956594")]
	private static int SetBgToTop(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0xC30F34", Offset = "0xC30F34", VA = "0xC30F34")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9565F8", Offset = "0x9565F8")]
	private static int SetBgCallback(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0xC310E8", Offset = "0xC310E8", VA = "0xC310E8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95665C", Offset = "0x95665C")]
	private static int SetGameObject(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0xC31304", Offset = "0xC31304", VA = "0xC31304")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9566C0", Offset = "0x9566C0")]
	private static int SetTable(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0xC314A8", Offset = "0xC314A8", VA = "0xC314A8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x956724", Offset = "0x956724")]
	private static int SetActive(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0xC3167C", Offset = "0xC3167C", VA = "0xC3167C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x956788", Offset = "0x956788")]
	private static int GetActiveInHierarchy(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0xC318D4", Offset = "0xC318D4", VA = "0xC318D4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9567EC", Offset = "0x9567EC")]
	private static int AddNames(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0xC31CB0", Offset = "0xC31CB0", VA = "0xC31CB0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x956850", Offset = "0x956850")]
	private static int LoadWidget(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0xC31F60", Offset = "0xC31F60", VA = "0xC31F60")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9568B4", Offset = "0x9568B4")]
	private static int Dispose(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0xC320E8", Offset = "0xC320E8", VA = "0xC320E8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x956918", Offset = "0x956918")]
	private static int IsDestroyed(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0xC322A8", Offset = "0xC322A8", VA = "0xC322A8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95697C", Offset = "0x95697C")]
	private static int GetComp(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0xC324D8", Offset = "0xC324D8", VA = "0xC324D8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9569E0", Offset = "0x9569E0")]
	private static int GetComps(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0xC326E0", Offset = "0xC326E0", VA = "0xC326E0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x956A44", Offset = "0x956A44")]
	private static int TryGetComp(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0xC32910", Offset = "0xC32910", VA = "0xC32910")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x956AA8", Offset = "0x956AA8")]
	private static int GetBehaviour(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0xC32B58", Offset = "0xC32B58", VA = "0xC32B58")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x956B0C", Offset = "0x956B0C")]
	private static int GetGO(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0xC32D90", Offset = "0xC32D90", VA = "0xC32D90")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x956B70", Offset = "0x956B70")]
	private static int GetTS(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0xC32FC0", Offset = "0xC32FC0", VA = "0xC32FC0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x956BD4", Offset = "0x956BD4")]
	private static int SetComEnable(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0xC3320C", Offset = "0xC3320C", VA = "0xC3320C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x956C38", Offset = "0x956C38")]
	private static int SetAlpha(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0xC3343C", Offset = "0xC3343C", VA = "0xC3343C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x956C9C", Offset = "0x956C9C")]
	private static int SetPos(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0xC3366C", Offset = "0xC3366C", VA = "0xC3366C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x956D00", Offset = "0x956D00")]
	private static int SetScale(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0xC3389C", Offset = "0xC3389C", VA = "0xC3389C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x956D64", Offset = "0x956D64")]
	private static int SetColor(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0xC33ACC", Offset = "0xC33ACC", VA = "0xC33ACC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x956DC8", Offset = "0x956DC8")]
	private static int SetColor32(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0xC33D4C", Offset = "0xC33D4C", VA = "0xC33D4C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x956E2C", Offset = "0x956E2C")]
	private static int SetOutlineColor(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0xC33FCC", Offset = "0xC33FCC", VA = "0xC33FCC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x956E90", Offset = "0x956E90")]
	private static int SetVisible(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0xC341FC", Offset = "0xC341FC", VA = "0xC341FC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x956EF4", Offset = "0x956EF4")]
	private static int SetEnable(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0xC3442C", Offset = "0xC3442C", VA = "0xC3442C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x956F58", Offset = "0x956F58")]
	private static int SetChildVisible(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0xC346AC", Offset = "0xC346AC", VA = "0xC346AC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x956FBC", Offset = "0x956FBC")]
	private static int SetGray(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0xC348DC", Offset = "0xC348DC", VA = "0xC348DC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x957020", Offset = "0x957020")]
	private static int SetAllGray(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0xC34B34", Offset = "0xC34B34", VA = "0xC34B34")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x957084", Offset = "0x957084")]
	private static int GetCompChild(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0xC34D9C", Offset = "0xC34D9C", VA = "0xC34D9C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9570E8", Offset = "0x9570E8")]
	private static int GetChildComp(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0xC35014", Offset = "0xC35014", VA = "0xC35014")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95714C", Offset = "0x95714C")]
	private static int GetCompChildCount(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0xC35244", Offset = "0xC35244", VA = "0xC35244")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9571B0", Offset = "0x9571B0")]
	private static int GetRect(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0xC3547C", Offset = "0xC3547C", VA = "0xC3547C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x957214", Offset = "0x957214")]
	private static int GetElem(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0xC356AC", Offset = "0xC356AC", VA = "0xC356AC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x957278", Offset = "0x957278")]
	private static int GetTrigger(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0xC358DC", Offset = "0xC358DC", VA = "0xC358DC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9572DC", Offset = "0x9572DC")]
	private static int GetDragItem(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0xC35B0C", Offset = "0xC35B0C", VA = "0xC35B0C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x957340", Offset = "0x957340")]
	private static int GetDropItem(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0xC35D3C", Offset = "0xC35D3C", VA = "0xC35D3C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9573A4", Offset = "0x9573A4")]
	private static int GetColliderItem(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0xC35F6C", Offset = "0xC35F6C", VA = "0xC35F6C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x957408", Offset = "0x957408")]
	private static int GetFitter(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0xC3619C", Offset = "0xC3619C", VA = "0xC3619C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95746C", Offset = "0x95746C")]
	private static int SetSize(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0xC363F8", Offset = "0xC363F8", VA = "0xC363F8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9574D0", Offset = "0x9574D0")]
	private static int SetWidth(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0xC36628", Offset = "0xC36628", VA = "0xC36628")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x957534", Offset = "0x957534")]
	private static int GetSize(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0xC36854", Offset = "0xC36854", VA = "0xC36854")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x957598", Offset = "0x957598")]
	private static int GetHeight(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0xC36A84", Offset = "0xC36A84", VA = "0xC36A84")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9575FC", Offset = "0x9575FC")]
	private static int GetWidth(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0xC36CB4", Offset = "0xC36CB4", VA = "0xC36CB4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x957660", Offset = "0x957660")]
	private static int SetLayoutSize(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0xC36EFC", Offset = "0xC36EFC", VA = "0xC36EFC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9576C4", Offset = "0x9576C4")]
	private static int GetPreferredSize(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0xC3715C", Offset = "0xC3715C", VA = "0xC3715C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x957728", Offset = "0x957728")]
	private static int SetPreferredWidth(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0xC3738C", Offset = "0xC3738C", VA = "0xC3738C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95778C", Offset = "0x95778C")]
	private static int GetPreferredWidth(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0xC375BC", Offset = "0xC375BC", VA = "0xC375BC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9577F0", Offset = "0x9577F0")]
	private static int SetPreferredHeight(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0xC377EC", Offset = "0xC377EC", VA = "0xC377EC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x957854", Offset = "0x957854")]
	private static int GetPreferredHeight(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0xC37A1C", Offset = "0xC37A1C", VA = "0xC37A1C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9578B8", Offset = "0x9578B8")]
	private static int GetPreferredHeightLayoutGroup(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0xC37C4C", Offset = "0xC37C4C", VA = "0xC37C4C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95791C", Offset = "0x95791C")]
	private static int GetPreferredWidthLayoutGroup(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0xC37E7C", Offset = "0xC37E7C", VA = "0xC37E7C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x957980", Offset = "0x957980")]
	private static int SetRaycast(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0xC380AC", Offset = "0xC380AC", VA = "0xC380AC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9579E4", Offset = "0x9579E4")]
	private static int BindBtn(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0xC38460", Offset = "0xC38460", VA = "0xC38460")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x957A48", Offset = "0x957A48")]
	private static int BindBtnLongPressClick(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0xC38814", Offset = "0xC38814", VA = "0xC38814")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x957AAC", Offset = "0x957AAC")]
	private static int BindBtnEnter(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0xC389E0", Offset = "0xC389E0", VA = "0xC389E0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x957B10", Offset = "0x957B10")]
	private static int BindBtnExit(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0xC38BAC", Offset = "0xC38BAC", VA = "0xC38BAC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x957B74", Offset = "0x957B74")]
	private static int BindClickDown(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0xC38D78", Offset = "0xC38D78", VA = "0xC38D78")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x957BD8", Offset = "0x957BD8")]
	private static int BindClickUp(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000421")]
	[Address(RVA = "0xC38F44", Offset = "0xC38F44", VA = "0xC38F44")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x957C3C", Offset = "0x957C3C")]
	private static int BindClick(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0xC39158", Offset = "0xC39158", VA = "0xC39158")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x957CA0", Offset = "0x957CA0")]
	private static int BindBtnLongPress(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0xC39324", Offset = "0xC39324", VA = "0xC39324")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x957D04", Offset = "0x957D04")]
	private static int BindBtnLongPressUp(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0xC394F0", Offset = "0xC394F0", VA = "0xC394F0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x957D68", Offset = "0x957D68")]
	private static int BindBtnLongPressDown(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0xC396BC", Offset = "0xC396BC", VA = "0xC396BC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x957DCC", Offset = "0x957DCC")]
	private static int BindBtnLongPressNormalUp(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0xC39888", Offset = "0xC39888", VA = "0xC39888")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x957E30", Offset = "0x957E30")]
	private static int BindBtnLongPressNormalClick(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0xC39A54", Offset = "0xC39A54", VA = "0xC39A54")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x957E94", Offset = "0x957E94")]
	private static int BindBtnLongPressDownEnter(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0xC39C20", Offset = "0xC39C20", VA = "0xC39C20")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x957EF8", Offset = "0x957EF8")]
	private static int BindBtnLongPressDownExit(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0xC39DEC", Offset = "0xC39DEC", VA = "0xC39DEC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x957F5C", Offset = "0x957F5C")]
	private static int BindBtnLongPressDrag(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0xC39FB8", Offset = "0xC39FB8", VA = "0xC39FB8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x957FC0", Offset = "0x957FC0")]
	private static int BindBtnLongPressDragBegin(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0xC3A184", Offset = "0xC3A184", VA = "0xC3A184")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x958024", Offset = "0x958024")]
	private static int BindBtnLongPressDragEnd(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0xC3A350", Offset = "0xC3A350", VA = "0xC3A350")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x958088", Offset = "0x958088")]
	private static int BindColliderItemOnSelectEntered(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0xC3A580", Offset = "0xC3A580", VA = "0xC3A580")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9580EC", Offset = "0x9580EC")]
	private static int BindColliderItemOnSelectExited(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0xC3A7B0", Offset = "0xC3A7B0", VA = "0xC3A7B0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x958150", Offset = "0x958150")]
	private static int BindColliderItemOnHoverEntered(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0xC3A9E0", Offset = "0xC3A9E0", VA = "0xC3A9E0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9581B4", Offset = "0x9581B4")]
	private static int BindColliderItemOnHoverExited(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0xC3AC10", Offset = "0xC3AC10", VA = "0xC3AC10")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x958218", Offset = "0x958218")]
	private static int BindDragItemOnDrag(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0xC3AE40", Offset = "0xC3AE40", VA = "0xC3AE40")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95827C", Offset = "0x95827C")]
	private static int BindDragItemOnDragBegin(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0xC3B070", Offset = "0xC3B070", VA = "0xC3B070")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9582E0", Offset = "0x9582E0")]
	private static int BindDragItemOnDragEnd(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0xC3B2A0", Offset = "0xC3B2A0", VA = "0xC3B2A0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x958344", Offset = "0x958344")]
	private static int BindDragItemOnDown(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0xC3B4D0", Offset = "0xC3B4D0", VA = "0xC3B4D0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9583A8", Offset = "0x9583A8")]
	private static int BindDragItemOnUp(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0xC3B700", Offset = "0xC3B700", VA = "0xC3B700")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95840C", Offset = "0x95840C")]
	private static int BindDragItemOnDragOut(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0xC3B930", Offset = "0xC3B930", VA = "0xC3B930")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x958470", Offset = "0x958470")]
	private static int BindDragItemOnPointerEnter(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0xC3BB60", Offset = "0xC3BB60", VA = "0xC3BB60")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9584D4", Offset = "0x9584D4")]
	private static int BindDragItemOnPointerExit(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0xC3BD90", Offset = "0xC3BD90", VA = "0xC3BD90")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x958538", Offset = "0x958538")]
	private static int BindDragItemOnDragOutAtFirst(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0xC3BFC0", Offset = "0xC3BFC0", VA = "0xC3BFC0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95859C", Offset = "0x95859C")]
	private static int SetButtonImg(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0xC3C4E8", Offset = "0xC3C4E8", VA = "0xC3C4E8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x958600", Offset = "0x958600")]
	private static int SetButtonState(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0xC3C6F4", Offset = "0xC3C6F4", VA = "0xC3C6F4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x958664", Offset = "0x958664")]
	private static int SetTxtAnim(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0xC3C928", Offset = "0xC3C928", VA = "0xC3C928")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9586C8", Offset = "0x9586C8")]
	private static int SetTxtTimeAnim(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600043D")]
	[Address(RVA = "0xC3CB88", Offset = "0xC3CB88", VA = "0xC3CB88")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95872C", Offset = "0x95872C")]
	private static int SetInlineTxt(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0xC3CD94", Offset = "0xC3CD94", VA = "0xC3CD94")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x958790", Offset = "0x958790")]
	private static int SetInlineTextAutoAdaptive(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0xC3CFA0", Offset = "0xC3CFA0", VA = "0xC3CFA0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9587F4", Offset = "0x9587F4")]
	private static int GetInlineTextPreferredHeight(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0xC3D1A0", Offset = "0xC3D1A0", VA = "0xC3D1A0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x958858", Offset = "0x958858")]
	private static int GetTextPreferredHeight(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0xC3D3A0", Offset = "0xC3D3A0", VA = "0xC3D3A0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9588BC", Offset = "0x9588BC")]
	private static int GetInlineTextPreferredWidth(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0xC3D5A0", Offset = "0xC3D5A0", VA = "0xC3D5A0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x958920", Offset = "0x958920")]
	private static int GetTxt(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0xC3D7A0", Offset = "0xC3D7A0", VA = "0xC3D7A0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x958984", Offset = "0x958984")]
	private static int SetInlineCharOffX(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0xC3D9AC", Offset = "0xC3D9AC", VA = "0xC3D9AC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9589E8", Offset = "0x9589E8")]
	private static int BindRichTextHRefClick(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0xC3DD60", Offset = "0xC3DD60", VA = "0xC3DD60")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x958A4C", Offset = "0x958A4C")]
	private static int SetInlineTextOutline(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0xC3DF6C", Offset = "0xC3DF6C", VA = "0xC3DF6C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x958AB0", Offset = "0x958AB0")]
	private static int BindSld(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0xC3E138", Offset = "0xC3E138", VA = "0xC3E138")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x958B14", Offset = "0x958B14")]
	private static int SetSldValue(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0xC3E344", Offset = "0xC3E344", VA = "0xC3E344")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x958B78", Offset = "0x958B78")]
	private static int SetSldValueAnim(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0xC3E590", Offset = "0xC3E590", VA = "0xC3E590")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x958BDC", Offset = "0x958BDC")]
	private static int GetSldValue(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0xC3E790", Offset = "0xC3E790", VA = "0xC3E790")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x958C40", Offset = "0x958C40")]
	private static int SetSldMax(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0xC3E99C", Offset = "0xC3E99C", VA = "0xC3E99C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x958CA4", Offset = "0x958CA4")]
	private static int GetSldMax(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0xC3EB9C", Offset = "0xC3EB9C", VA = "0xC3EB9C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x958D08", Offset = "0x958D08")]
	private static int SetSldMin(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0xC3EDA8", Offset = "0xC3EDA8", VA = "0xC3EDA8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x958D6C", Offset = "0x958D6C")]
	private static int GetSldMin(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0xC3EFA8", Offset = "0xC3EFA8", VA = "0xC3EFA8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x958DD0", Offset = "0x958DD0")]
	private static int SetSldIsWholeNumbers(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0xC3F1B4", Offset = "0xC3F1B4", VA = "0xC3F1B4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x958E34", Offset = "0x958E34")]
	private static int GetSldIsWholeNumbers(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0xC3F3B4", Offset = "0xC3F3B4", VA = "0xC3F3B4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x958E98", Offset = "0x958E98")]
	private static int SetImg(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0xC3F7A8", Offset = "0xC3F7A8", VA = "0xC3F7A8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x958EFC", Offset = "0x958EFC")]
	private static int SetImgFillAmount(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0xC3F9B4", Offset = "0xC3F9B4", VA = "0xC3F9B4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x958F60", Offset = "0x958F60")]
	private static int SetImgFillVertical(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0xC3FB9C", Offset = "0xC3FB9C", VA = "0xC3FB9C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x958FC4", Offset = "0x958FC4")]
	private static int SetImgFillHorizontal(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0xC3FD84", Offset = "0xC3FD84", VA = "0xC3FD84")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95A028", Offset = "0x95A028")]
	private static int SetImgWithCall(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0xC401A4", Offset = "0xC401A4", VA = "0xC401A4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95A08C", Offset = "0x95A08C")]
	private static int SetCompImg(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0xC403D4", Offset = "0xC403D4", VA = "0xC403D4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95A0F0", Offset = "0x95A0F0")]
	private static int SetImgNativeSize(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000457")]
	[Address(RVA = "0xC405BC", Offset = "0xC405BC", VA = "0xC405BC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95A154", Offset = "0x95A154")]
	private static int SetImgAndNotSetMaterial(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0xC407C8", Offset = "0xC407C8", VA = "0xC407C8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95A1B8", Offset = "0x95A1B8")]
	private static int SetImgAndMaterial(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000459")]
	[Address(RVA = "0xC409F0", Offset = "0xC409F0", VA = "0xC409F0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95A21C", Offset = "0x95A21C")]
	private static int SetRawImg(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0xC40BFC", Offset = "0xC40BFC", VA = "0xC40BFC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95A280", Offset = "0x95A280")]
	private static int GetDropDownValue(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0xC40DFC", Offset = "0xC40DFC", VA = "0xC40DFC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95A2E4", Offset = "0x95A2E4")]
	private static int SetDropDownValue(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0xC41014", Offset = "0xC41014", VA = "0xC41014")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95A348", Offset = "0x95A348")]
	private static int BindDropdown(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0xC411E0", Offset = "0xC411E0", VA = "0xC411E0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95A3AC", Offset = "0x95A3AC")]
	private static int AddDropDownValue(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0xC413EC", Offset = "0xC413EC", VA = "0xC413EC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95A410", Offset = "0x95A410")]
	private static int ClearDropDownValue(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600045F")]
	[Address(RVA = "0xC415D4", Offset = "0xC415D4", VA = "0xC415D4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95A474", Offset = "0x95A474")]
	private static int BindTog(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0xC417A0", Offset = "0xC417A0", VA = "0xC417A0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95A4D8", Offset = "0x95A4D8")]
	private static int SetTogValue(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0xC419AC", Offset = "0xC419AC", VA = "0xC419AC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95A53C", Offset = "0x95A53C")]
	private static int GetTogValue(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0xC41BAC", Offset = "0xC41BAC", VA = "0xC41BAC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95A5A0", Offset = "0x95A5A0")]
	private static int BindToggleGroup(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0xC41D78", Offset = "0xC41D78", VA = "0xC41D78")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95A604", Offset = "0x95A604")]
	private static int BindToggleGroupAndRemove(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0xC41F44", Offset = "0xC41F44", VA = "0xC41F44")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95A668", Offset = "0x95A668")]
	private static int SetToggleWithGroupIndex(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0xC42178", Offset = "0xC42178", VA = "0xC42178")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95A6CC", Offset = "0x95A6CC")]
	private static int BindInp(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0xC42360", Offset = "0xC42360", VA = "0xC42360")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95A730", Offset = "0x95A730")]
	private static int GetInputValue(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0xC42560", Offset = "0xC42560", VA = "0xC42560")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95A794", Offset = "0x95A794")]
	private static int SetInputPlaceHolder(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0xC4276C", Offset = "0xC4276C", VA = "0xC4276C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95A7F8", Offset = "0x95A7F8")]
	private static int SetInputValue(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0xC42978", Offset = "0xC42978", VA = "0xC42978")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95A85C", Offset = "0x95A85C")]
	private static int SetInputFocus(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0xC42B84", Offset = "0xC42B84", VA = "0xC42B84")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95A8C0", Offset = "0x95A8C0")]
	private static int SetInputCharacterLimit(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0xC42D9C", Offset = "0xC42D9C", VA = "0xC42D9C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95A924", Offset = "0x95A924")]
	private static int Select(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0xC42FB4", Offset = "0xC42FB4", VA = "0xC42FB4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95A988", Offset = "0x95A988")]
	private static int SetGrid(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0xC43464", Offset = "0xC43464", VA = "0xC43464")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95A9EC", Offset = "0x95A9EC")]
	private static int SetGridMoveCall(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0xC43670", Offset = "0xC43670", VA = "0xC43670")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95AA50", Offset = "0x95AA50")]
	private static int SetGridMoveBeginCall(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0xC4387C", Offset = "0xC4387C", VA = "0xC4387C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95AAB4", Offset = "0x95AAB4")]
	private static int SetGridMoveEndCall(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0xC43A88", Offset = "0xC43A88", VA = "0xC43A88")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95AB18", Offset = "0x95AB18")]
	private static int SetGridCount(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0xC43CB8", Offset = "0xC43CB8", VA = "0xC43CB8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95AB7C", Offset = "0x95AB7C")]
	private static int SetGriUpdate(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0xC43EA0", Offset = "0xC43EA0", VA = "0xC43EA0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95ABE0", Offset = "0x95ABE0")]
	private static int SetGridIndex(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0xC440B8", Offset = "0xC440B8", VA = "0xC440B8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95AC44", Offset = "0x95AC44")]
	private static int SetGridScollIndex(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0xC442D0", Offset = "0xC442D0", VA = "0xC442D0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95ACA8", Offset = "0x95ACA8")]
	private static int SetGridScollMoveTo(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0xC444D8", Offset = "0xC444D8", VA = "0xC444D8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95AD0C", Offset = "0x95AD0C")]
	private static int GetGridNormalizedPosition(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0xC446D4", Offset = "0xC446D4", VA = "0xC446D4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95AD70", Offset = "0x95AD70")]
	private static int SetGridScollSpeed(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0xC448E0", Offset = "0xC448E0", VA = "0xC448E0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95ADD4", Offset = "0x95ADD4")]
	private static int SetPageViewScrollIndex(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0xC44AF8", Offset = "0xC44AF8", VA = "0xC44AF8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95AE38", Offset = "0x95AE38")]
	private static int SetGridScollIndexAndSpeed(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0xC44D28", Offset = "0xC44D28", VA = "0xC44D28")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95AE9C", Offset = "0x95AE9C")]
	private static int GetGridIndex(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0xC44F28", Offset = "0xC44F28", VA = "0xC44F28")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95AF00", Offset = "0x95AF00")]
	private static int GetPageIndex(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600047B")]
	[Address(RVA = "0xC45128", Offset = "0xC45128", VA = "0xC45128")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95AF64", Offset = "0x95AF64")]
	private static int SetGridCenter(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0xC45310", Offset = "0xC45310", VA = "0xC45310")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95AFC8", Offset = "0x95AFC8")]
	private static int SetGridCreateFinish(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0xC4551C", Offset = "0xC4551C", VA = "0xC4551C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95C02C", Offset = "0x95C02C")]
	private static int SetGridCoroutine(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0xC45728", Offset = "0xC45728", VA = "0xC45728")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95C090", Offset = "0x95C090")]
	private static int AddCenterComp(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0xC45950", Offset = "0xC45950", VA = "0xC45950")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95C0F4", Offset = "0x95C0F4")]
	private static int SetLoopRect(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0xC45C04", Offset = "0xC45C04", VA = "0xC45C04")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95C158", Offset = "0x95C158")]
	private static int SetLoopRectCount(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0xC45E1C", Offset = "0xC45E1C", VA = "0xC45E1C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95C1BC", Offset = "0x95C1BC")]
	private static int SetLoopRectIndex(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0xC46034", Offset = "0xC46034", VA = "0xC46034")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95C220", Offset = "0x95C220")]
	private static int SetLoopRectRefresh(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0xC4621C", Offset = "0xC4621C", VA = "0xC4621C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95C284", Offset = "0x95C284")]
	private static int SetEnhancedSCVController(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0xC46460", Offset = "0xC46460", VA = "0xC46460")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95C2E8", Offset = "0x95C2E8")]
	private static int SetEnhancedSCVCount(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0xC46678", Offset = "0xC46678", VA = "0xC46678")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95C34C", Offset = "0x95C34C")]
	private static int SetEnhancedSCVIndex(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0xC46890", Offset = "0xC46890", VA = "0xC46890")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95C3B0", Offset = "0x95C3B0")]
	private static int SetEnhancedSCVLoop(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0xC46A9C", Offset = "0xC46A9C", VA = "0xC46A9C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95C414", Offset = "0x95C414")]
	private static int SetAdjustPosCall(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0xC46CE4", Offset = "0xC46CE4", VA = "0xC46CE4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95C478", Offset = "0x95C478")]
	private static int SetAnimInt(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0xC46EFC", Offset = "0xC46EFC", VA = "0xC46EFC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95C4DC", Offset = "0x95C4DC")]
	private static int PlayAnimByName(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0xC470B0", Offset = "0xC470B0", VA = "0xC470B0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95C540", Offset = "0x95C540")]
	private static int GetPrefab(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0xC47284", Offset = "0xC47284", VA = "0xC47284")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95C5A4", Offset = "0x95C5A4")]
	private static int LoadResource(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0xC47450", Offset = "0xC47450", VA = "0xC47450")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95C608", Offset = "0x95C608")]
	private static int LoadAssets(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0xC47638", Offset = "0xC47638", VA = "0xC47638")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95C66C", Offset = "0x95C66C")]
	private static int LoadResources(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0xC47804", Offset = "0xC47804", VA = "0xC47804")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95C6D0", Offset = "0x95C6D0")]
	private static int AddUIComponent(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0xC47A50", Offset = "0xC47A50", VA = "0xC47A50")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95C734", Offset = "0x95C734")]
	private static int RemoveUIComponent(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0xC47C6C", Offset = "0xC47C6C", VA = "0xC47C6C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95C798", Offset = "0x95C798")]
	private static int OnBeginExitUIComps(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0xC47DF4", Offset = "0xC47DF4", VA = "0xC47DF4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95C7FC", Offset = "0x95C7FC")]
	private static int TweenRestart(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0xC4800C", Offset = "0xC4800C", VA = "0xC4800C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95C860", Offset = "0x95C860")]
	private static int SetTxt(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0xC48400", Offset = "0xC48400", VA = "0xC48400")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95C8C4", Offset = "0x95C8C4")]
	private static int SetTextFontSize(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000494")]
	[Address(RVA = "0xC48618", Offset = "0xC48618", VA = "0xC48618")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95C928", Offset = "0x95C928")]
	private static int GetTextFontSize(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0xC48818", Offset = "0xC48818", VA = "0xC48818")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95C98C", Offset = "0x95C98C")]
	private static int SetInlineTextHorizontalOverflow(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0xC48A30", Offset = "0xC48A30", VA = "0xC48A30")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95C9F0", Offset = "0x95C9F0")]
	private static int PlayAnimOnGO(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0xC48C48", Offset = "0xC48C48", VA = "0xC48C48")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95CA54", Offset = "0x95CA54")]
	private static int PlayAnimatorByName(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0xC48E78", Offset = "0xC48E78", VA = "0xC48E78")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95CAB8", Offset = "0x95CAB8")]
	private static int ReParent(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0xC49090", Offset = "0xC49090", VA = "0xC49090")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95CB1C", Offset = "0x95CB1C")]
	private static int ClonePrefab(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0xC49264", Offset = "0xC49264", VA = "0xC49264")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95CB80", Offset = "0x95CB80")]
	private static int AddPrefabChild(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0xC494B4", Offset = "0xC494B4", VA = "0xC494B4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95CBE4", Offset = "0x95CBE4")]
	private static int AddPrefabChildByParent(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0xC49928", Offset = "0xC49928", VA = "0xC49928")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95CC48", Offset = "0x95CC48")]
	private static int AddPrefabChildByOriPos(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0xC49B78", Offset = "0xC49B78", VA = "0xC49B78")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95CCAC", Offset = "0x95CCAC")]
	private static int ForceRebuild(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600049E")]
	[Address(RVA = "0xC49D90", Offset = "0xC49D90", VA = "0xC49D90")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95CD10", Offset = "0x95CD10")]
	private static int AdjusePreferredSize(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0xC49F18", Offset = "0xC49F18", VA = "0xC49F18")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95CD74", Offset = "0x95CD74")]
	private static int AddButtonDepth(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0xC4A130", Offset = "0xC4A130", VA = "0xC4A130")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95CDD8", Offset = "0x95CDD8")]
	private static int SetVrControllerFunc(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0xC4A2E4", Offset = "0xC4A2E4", VA = "0xC4A2E4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95CE3C", Offset = "0x95CE3C")]
	private static int AddButtonDepthByGO(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0xC4A550", Offset = "0xC4A550", VA = "0xC4A550")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95CEA0", Offset = "0x95CEA0")]
	private static int InlineTxtUpdateLines(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0xC4A738", Offset = "0xC4A738", VA = "0xC4A738")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95CF04", Offset = "0x95CF04")]
	private static int AddGrayText(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0xC4A920", Offset = "0xC4A920", VA = "0xC4A920")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95CF68", Offset = "0x95CF68")]
	private static int UpdateGrid(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0xC4AB08", Offset = "0xC4AB08", VA = "0xC4AB08")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95CFCC", Offset = "0x95CFCC")]
	private static int StopAnim(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0xC4AC90", Offset = "0xC4AC90", VA = "0xC4AC90")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95D030", Offset = "0x95D030")]
	private static int PauseTween(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0xC4AEA8", Offset = "0xC4AEA8", VA = "0xC4AEA8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95D094", Offset = "0x95D094")]
	private static int AddCompleteViewNotify(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0xC4B10C", Offset = "0xC4B10C", VA = "0xC4B10C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95D0F8", Offset = "0x95D0F8")]
	private static int TweenRestartByID(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0xC4B33C", Offset = "0xC4B33C", VA = "0xC4B33C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95D15C", Offset = "0x95D15C")]
	private static int Playbacks(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0xC4B554", Offset = "0xC4B554", VA = "0xC4B554")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95D1C0", Offset = "0x95D1C0")]
	private static int GetTweenDuration(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0xC4B784", Offset = "0xC4B784", VA = "0xC4B784")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95D224", Offset = "0x95D224")]
	private static int SetTxtNumberAnim(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0xC4B9B4", Offset = "0xC4B9B4", VA = "0xC4B9B4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95D288", Offset = "0x95D288")]
	private static int SetTxtNumberAnimWithFmt(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0xC4BC48", Offset = "0xC4BC48", VA = "0xC4BC48")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95D2EC", Offset = "0x95D2EC")]
	private static int SetSldAnim(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0xC4C058", Offset = "0xC4C058", VA = "0xC4C058")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95D350", Offset = "0x95D350")]
	private static int BindImgDrag(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0xC4C488", Offset = "0xC4C488", VA = "0xC4C488")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95D3B4", Offset = "0x95D3B4")]
	private static int SetDownloadID(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0xC4C6A0", Offset = "0xC4C6A0", VA = "0xC4C6A0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95D418", Offset = "0x95D418")]
	private static int BindRawImgDrag(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0xC4C918", Offset = "0xC4C918", VA = "0xC4C918")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95D47C", Offset = "0x95D47C")]
	private static int SetLongPressBtnRepeat(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0xC4CCE8", Offset = "0xC4CCE8", VA = "0xC4CCE8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95D4E0", Offset = "0x95D4E0")]
	private static int SetLongPressBtnPressTime(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0xC4D0B8", Offset = "0xC4D0B8", VA = "0xC4D0B8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95D544", Offset = "0x95D544")]
	private static int FindImgAndSetActive(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0xC4D32C", Offset = "0xC4D32C", VA = "0xC4D32C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95D5A8", Offset = "0x95D5A8")]
	private static int SetPageView(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0xC4D738", Offset = "0xC4D738", VA = "0xC4D738")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95D60C", Offset = "0x95D60C")]
	private static int SetPageViewCount(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0xC4D968", Offset = "0xC4D968", VA = "0xC4D968")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95D670", Offset = "0x95D670")]
	private static int SetPageViewIndex(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0xC4DB80", Offset = "0xC4DB80", VA = "0xC4DB80")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95D6D4", Offset = "0x95D6D4")]
	private static int AddPageViewCenter(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0xC4DD8C", Offset = "0xC4DD8C", VA = "0xC4DD8C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95D738", Offset = "0x95D738")]
	private static int SetImgState(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0xC4DFE4", Offset = "0xC4DFE4", VA = "0xC4DFE4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95D79C", Offset = "0x95D79C")]
	private static int PlayMedia(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0xC4E270", Offset = "0xC4E270", VA = "0xC4E270")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95D800", Offset = "0x95D800")]
	private static int SkipMedia(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0xC4E48C", Offset = "0xC4E48C", VA = "0xC4E48C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95D864", Offset = "0x95D864")]
	private static int GetSlider(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0xC4E68C", Offset = "0xC4E68C", VA = "0xC4E68C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95D8C8", Offset = "0x95D8C8")]
	private static int AnimImgAlphaStart(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0xC4E8BC", Offset = "0xC4E8BC", VA = "0xC4E8BC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95D92C", Offset = "0x95D92C")]
	private static int CallAnimSliderStar(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0xC4EB60", Offset = "0xC4EB60", VA = "0xC4EB60")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95D990", Offset = "0x95D990")]
	private static int LoadPoolObject(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0xC4EDC8", Offset = "0xC4EDC8", VA = "0xC4EDC8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95D9F4", Offset = "0x95D9F4")]
	private static int UnloadGO(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0xC4EFE4", Offset = "0xC4EFE4", VA = "0xC4EFE4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95DA58", Offset = "0x95DA58")]
	private static int SetSprite(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0xC4F1F0", Offset = "0xC4F1F0", VA = "0xC4F1F0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95DABC", Offset = "0x95DABC")]
	private static int get_OwnerRect(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0xC4F3A8", Offset = "0xC4F3A8", VA = "0xC4F3A8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95DB20", Offset = "0x95DB20")]
	private static int get_OwnerLayout(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0xC52E2C", Offset = "0xC52E2C", VA = "0xC52E2C")]
	public Sword_Framework_ComViewLoaderWrap()
	{
	}
}
[Token(Token = "0x2000056")]
public class Sword_Framework_LuaComponentWrap
{
	[Token(Token = "0x60004C4")]
	[Address(RVA = "0xDE49B8", Offset = "0xDE49B8", VA = "0xDE49B8")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0xDE4774", Offset = "0xDE4774", VA = "0xDE4774")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95DB84", Offset = "0x95DB84")]
	private static int op_Equality(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0xDE4B04", Offset = "0xDE4B04", VA = "0xDE4B04")]
	public Sword_Framework_LuaComponentWrap()
	{
	}
}
[Token(Token = "0x2000057")]
public class Sword_Framework_PageViewWrap
{
	[Token(Token = "0x60004C7")]
	[Address(RVA = "0xDE4D50", Offset = "0xDE4D50", VA = "0xDE4D50")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0xDE4B0C", Offset = "0xDE4B0C", VA = "0xDE4B0C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95DBE8", Offset = "0x95DBE8")]
	private static int op_Equality(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0xDE4E9C", Offset = "0xDE4E9C", VA = "0xDE4E9C")]
	public Sword_Framework_PageViewWrap()
	{
	}
}
[Token(Token = "0x2000058")]
public class Sword_Framework_QualityMgrWrap
{
	[Token(Token = "0x60004CA")]
	[Address(RVA = "0xDE55D8", Offset = "0xDE55D8", VA = "0xDE55D8")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0xDE4EA4", Offset = "0xDE4EA4", VA = "0xDE4EA4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95DC4C", Offset = "0x95DC4C")]
	private static int SetQualityLevel(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0xDE508C", Offset = "0xDE508C", VA = "0xDE508C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95DCB0", Offset = "0x95DCB0")]
	private static int GetQualityLevel(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0xDE5250", Offset = "0xDE5250", VA = "0xDE5250")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95DD14", Offset = "0x95DD14")]
	private static int GetGraphicsMemorySize(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0xDE5414", Offset = "0xDE5414", VA = "0xDE5414")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95DD78", Offset = "0x95DD78")]
	private static int GetGraphicsDevice(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0xDE57E4", Offset = "0xDE57E4", VA = "0xDE57E4")]
	public Sword_Framework_QualityMgrWrap()
	{
	}
}
[Token(Token = "0x2000059")]
public class Sword_Framework_StickOnBorderWrap
{
	[Token(Token = "0x60004D0")]
	[Address(RVA = "0xDE6EEC", Offset = "0xDE6EEC", VA = "0xDE6EEC")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0xDE57EC", Offset = "0xDE57EC", VA = "0xDE57EC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95DDDC", Offset = "0x95DDDC")]
	private static int SetToLeft(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0xDE5974", Offset = "0xDE5974", VA = "0xDE5974")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95DE40", Offset = "0x95DE40")]
	private static int SetToRight(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0xDE5AFC", Offset = "0xDE5AFC", VA = "0xDE5AFC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95DEA4", Offset = "0x95DEA4")]
	private static int MoveToLeft(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0xDE5C84", Offset = "0xDE5C84", VA = "0xDE5C84")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95DF08", Offset = "0x95DF08")]
	private static int MoveToRight(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0xDE5E0C", Offset = "0xDE5E0C", VA = "0xDE5E0C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95DF6C", Offset = "0x95DF6C")]
	private static int AddMidSync(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0xDE6028", Offset = "0xDE6028", VA = "0xDE6028")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95DFD0", Offset = "0x95DFD0")]
	private static int RemoveMidSync(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0xDE6244", Offset = "0xDE6244", VA = "0xDE6244")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95E034", Offset = "0x95E034")]
	private static int AddEndDragCall(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0xDE63F8", Offset = "0xDE63F8", VA = "0xDE63F8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95E098", Offset = "0x95E098")]
	private static int RemoveEndDragCall(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0xDE65AC", Offset = "0xDE65AC", VA = "0xDE65AC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95E0FC", Offset = "0x95E0FC")]
	private static int AddBeginDragCall(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0xDE6760", Offset = "0xDE6760", VA = "0xDE6760")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95E160", Offset = "0x95E160")]
	private static int RemoveBeginDragCall(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0xDE6914", Offset = "0xDE6914", VA = "0xDE6914")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95E1C4", Offset = "0x95E1C4")]
	private static int op_Equality(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0xDE6B58", Offset = "0xDE6B58", VA = "0xDE6B58")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95E228", Offset = "0x95E228")]
	private static int get_IsCanDrag(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0xDE6D20", Offset = "0xDE6D20", VA = "0xDE6D20")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95E28C", Offset = "0x95E28C")]
	private static int set_IsCanDrag(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0xDE7320", Offset = "0xDE7320", VA = "0xDE7320")]
	public Sword_Framework_StickOnBorderWrap()
	{
	}
}
[Token(Token = "0x200005A")]
public class Sword_Framework_UICameraWrap
{
	[Token(Token = "0x60004DF")]
	[Address(RVA = "0xDE791C", Offset = "0xDE791C", VA = "0xDE791C")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0xDE7328", Offset = "0xDE7328", VA = "0xDE7328")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95E2F0", Offset = "0x95E2F0")]
	private static int FromScenePoint(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0xDE759C", Offset = "0xDE759C", VA = "0xDE759C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95E354", Offset = "0x95E354")]
	private static int FromScreenPoint(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0xDE775C", Offset = "0xDE775C", VA = "0xDE775C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95E3B8", Offset = "0x95E3B8")]
	private static int WorldToScreenPoint(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0xDE7AE8", Offset = "0xDE7AE8", VA = "0xDE7AE8")]
	public Sword_Framework_UICameraWrap()
	{
	}
}
[Token(Token = "0x200005B")]
public class Sword_Framework_WrapContentWrap
{
	[Token(Token = "0x60004E4")]
	[Address(RVA = "0xDE8B78", Offset = "0xDE8B78", VA = "0xDE8B78")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0xDE7AF0", Offset = "0xDE7AF0", VA = "0xDE7AF0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95E41C", Offset = "0x95E41C")]
	private static int Set(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0xDE7D38", Offset = "0xDE7D38", VA = "0xDE7D38")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95E480", Offset = "0x95E480")]
	private static int MoveToIndex(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0xDE7F54", Offset = "0xDE7F54", VA = "0xDE7F54")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95E4E4", Offset = "0x95E4E4")]
	private static int SetCellSize(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0xDE816C", Offset = "0xDE816C", VA = "0xDE816C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95E548", Offset = "0x95E548")]
	private static int op_Equality(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0xDE83B0", Offset = "0xDE83B0", VA = "0xDE83B0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95E5AC", Offset = "0x95E5AC")]
	private static int get__cellHeight(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0xDE8574", Offset = "0xDE8574", VA = "0xDE8574")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95E610", Offset = "0x95E610")]
	private static int get_Count(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0xDE877C", Offset = "0xDE877C", VA = "0xDE877C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95E674", Offset = "0x95E674")]
	private static int set__cellHeight(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0xDE895C", Offset = "0xDE895C", VA = "0xDE895C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95E6D8", Offset = "0x95E6D8")]
	private static int set_Count(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0xDE8E54", Offset = "0xDE8E54", VA = "0xDE8E54")]
	public Sword_Framework_WrapContentWrap()
	{
	}
}
[Token(Token = "0x200005C")]
public class Sword_Game_HttpManagerWrap
{
	[Token(Token = "0x60004EE")]
	[Address(RVA = "0xDE95E8", Offset = "0xDE95E8", VA = "0xDE95E8")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0xDE8E5C", Offset = "0xDE8E5C", VA = "0xDE8E5C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95E73C", Offset = "0x95E73C")]
	private static int ReqHttp(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0xDE8FC0", Offset = "0xDE8FC0", VA = "0xDE8FC0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95E7A0", Offset = "0x95E7A0")]
	private static int PostHttp(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0xDE9140", Offset = "0xDE9140", VA = "0xDE9140")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95E804", Offset = "0x95E804")]
	private static int HttpPostString(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0xDE92C0", Offset = "0xDE92C0", VA = "0xDE92C0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95E868", Offset = "0x95E868")]
	private static int DownLoadImgAsyn(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0xDE97F4", Offset = "0xDE97F4", VA = "0xDE97F4")]
	public Sword_Game_HttpManagerWrap()
	{
	}
}
[Token(Token = "0x200005D")]
public class Sword_Game_MainCameraWrap
{
	[Token(Token = "0x60004F4")]
	[Address(RVA = "0xDEA644", Offset = "0xDEA644", VA = "0xDEA644")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0xDE97FC", Offset = "0xDE97FC", VA = "0xDE97FC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95E8CC", Offset = "0x95E8CC")]
	private static int GetRoot(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0xDE9998", Offset = "0xDE9998", VA = "0xDE9998")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95E930", Offset = "0x95E930")]
	private static int GetEyesightPos(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0xDE9B58", Offset = "0xDE9B58", VA = "0xDE9B58")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95E994", Offset = "0x95E994")]
	private static int FromScreenPoint(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0xDE9D18", Offset = "0xDE9D18", VA = "0xDE9D18")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95E9F8", Offset = "0x95E9F8")]
	private static int WorldToScreenPoint(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0xDE9ED8", Offset = "0xDE9ED8", VA = "0xDE9ED8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95EA5C", Offset = "0x95EA5C")]
	private static int SetTouch(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0xDEA0AC", Offset = "0xDEA0AC", VA = "0xDEA0AC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95EAC0", Offset = "0x95EAC0")]
	private static int SetCameraParams(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0xDEA470", Offset = "0xDEA470", VA = "0xDEA470")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95EB24", Offset = "0x95EB24")]
	private static int SetUseCamera(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0xDEA910", Offset = "0xDEA910", VA = "0xDEA910")]
	public Sword_Game_MainCameraWrap()
	{
	}
}
[Token(Token = "0x200005E")]
public class Sword_Game_UtilLuaWrap
{
	[Token(Token = "0x60004FD")]
	[Address(RVA = "0xE0EF88", Offset = "0xE0EF88", VA = "0xE0EF88")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0xDEA918", Offset = "0xDEA918", VA = "0xDEA918")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95EB88", Offset = "0x95EB88")]
	private static int GetGOFullPath(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0xDEAB24", Offset = "0xDEAB24", VA = "0xDEAB24")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95EBEC", Offset = "0x95EBEC")]
	private static int GetQuality(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0xDEAC88", Offset = "0xDEAC88", VA = "0xDEAC88")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95EC50", Offset = "0x95EC50")]
	private static int GetAudioMgr(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0xDEADEC", Offset = "0xDEADEC", VA = "0xDEADEC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95ECB4", Offset = "0x95ECB4")]
	private static int GetMainCam(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0xDEAF50", Offset = "0xDEAF50", VA = "0xDEAF50")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95ED18", Offset = "0x95ED18")]
	private static int GetUICam(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0xDEB0B4", Offset = "0xDEB0B4", VA = "0xDEB0B4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95ED7C", Offset = "0x95ED7C")]
	private static int GetCache(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0xDEB218", Offset = "0xDEB218", VA = "0xDEB218")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95EDE0", Offset = "0x95EDE0")]
	private static int GetTouchMgr(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0xDEB37C", Offset = "0xDEB37C", VA = "0xDEB37C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95EE44", Offset = "0x95EE44")]
	private static int GetGuideMgr(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0xDEB4E0", Offset = "0xDEB4E0", VA = "0xDEB4E0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95EEA8", Offset = "0x95EEA8")]
	private static int AddUIComponent(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0xDEB6E8", Offset = "0xDEB6E8", VA = "0xDEB6E8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95EF0C", Offset = "0x95EF0C")]
	private static int AddSceneComponent(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0xDEB8F0", Offset = "0xDEB8F0", VA = "0xDEB8F0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95EF70", Offset = "0x95EF70")]
	private static int AddLuaComponent(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0xDEBAF8", Offset = "0xDEBAF8", VA = "0xDEBAF8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95EFD4", Offset = "0x95EFD4")]
	private static int RemoveLuaUIComponent(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0xDEBCC8", Offset = "0xDEBCC8", VA = "0xDEBCC8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95F038", Offset = "0x95F038")]
	private static int AddComponent(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0xDEC138", Offset = "0xDEC138", VA = "0xDEC138")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95F09C", Offset = "0x95F09C")]
	private static int GetDeviceUid(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0xDEC2C0", Offset = "0xDEC2C0", VA = "0xDEC2C0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95F100", Offset = "0x95F100")]
	private static int GetPlatform(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600050D")]
	[Address(RVA = "0xDEC424", Offset = "0xDEC424", VA = "0xDEC424")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95F164", Offset = "0x95F164")]
	private static int UserQuit(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0xDEC570", Offset = "0xDEC570", VA = "0xDEC570")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95F1C8", Offset = "0x95F1C8")]
	private static int GetGameName(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0xDEC6F8", Offset = "0xDEC6F8", VA = "0xDEC6F8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95F22C", Offset = "0x95F22C")]
	private static int LoginInPlatform(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0xDEC860", Offset = "0xDEC860", VA = "0xDEC860")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95F290", Offset = "0x95F290")]
	private static int GetBirthdayFromSDK(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0xDEC9E8", Offset = "0xDEC9E8", VA = "0xDEC9E8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95F2F4", Offset = "0x95F2F4")]
	private static int LogC(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0xDECB7C", Offset = "0xDECB7C", VA = "0xDECB7C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95F358", Offset = "0x95F358")]
	private static int GetLog(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000513")]
	[Address(RVA = "0xDECF40", Offset = "0xDECF40", VA = "0xDECF40")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95F3BC", Offset = "0x95F3BC")]
	private static int LogColor(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0xDED2D8", Offset = "0xDED2D8", VA = "0xDED2D8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95F420", Offset = "0x95F420")]
	private static int GetChannelId(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0xDED460", Offset = "0xDED460", VA = "0xDED460")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95F484", Offset = "0x95F484")]
	private static int PlatformSwitchAccount(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0xDED5AC", Offset = "0xDED5AC", VA = "0xDED5AC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95F4E8", Offset = "0x95F4E8")]
	private static int PlatformRestart(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0xDED758", Offset = "0xDED758", VA = "0xDED758")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95F54C", Offset = "0x95F54C")]
	private static int UpdateLuaError(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0xDED8A4", Offset = "0xDED8A4", VA = "0xDED8A4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95F5B0", Offset = "0x95F5B0")]
	private static int SubmitRoleData(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000519")]
	[Address(RVA = "0xDEDBBC", Offset = "0xDEDBBC", VA = "0xDEDBBC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95F614", Offset = "0x95F614")]
	private static int CallPay(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0xDEDE68", Offset = "0xDEDE68", VA = "0xDEDE68")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95F678", Offset = "0x95F678")]
	private static int CheckPay(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600051B")]
	[Address(RVA = "0xDEDFB4", Offset = "0xDEDFB4", VA = "0xDEDFB4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95F6DC", Offset = "0x95F6DC")]
	private static int ReportChat(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0xDEE220", Offset = "0xDEE220", VA = "0xDEE220")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95F740", Offset = "0x95F740")]
	private static int SendNotification(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600051D")]
	[Address(RVA = "0xDEE5FC", Offset = "0xDEE5FC", VA = "0xDEE5FC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95F7A4", Offset = "0x95F7A4")]
	private static int ClearNotification(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600051E")]
	[Address(RVA = "0xDEE748", Offset = "0xDEE748", VA = "0xDEE748")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95F808", Offset = "0x95F808")]
	private static int ClearChild(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0xDEE918", Offset = "0xDEE918", VA = "0xDEE918")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95F86C", Offset = "0x95F86C")]
	private static int SetPosAndLookAt(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000520")]
	[Address(RVA = "0xDEEBDC", Offset = "0xDEEBDC", VA = "0xDEEBDC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95F8D0", Offset = "0x95F8D0")]
	private static int SetLocalScaleByTransform(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0xDEEE20", Offset = "0xDEEE20", VA = "0xDEEE20")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95F934", Offset = "0x95F934")]
	private static int SetLocalScale(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000522")]
	[Address(RVA = "0xDEF084", Offset = "0xDEF084", VA = "0xDEF084")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95F998", Offset = "0x95F998")]
	private static int SetScale(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000523")]
	[Address(RVA = "0xDEF2E8", Offset = "0xDEF2E8", VA = "0xDEF2E8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95F9FC", Offset = "0x95F9FC")]
	private static int SetSkillRangeScale(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000524")]
	[Address(RVA = "0xDEF524", Offset = "0xDEF524", VA = "0xDEF524")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95FA60", Offset = "0x95FA60")]
	private static int GetLocalScale(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0xDEF708", Offset = "0xDEF708", VA = "0xDEF708")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95FAC4", Offset = "0x95FAC4")]
	private static int GetLocalScaleX(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000526")]
	[Address(RVA = "0xDEF920", Offset = "0xDEF920", VA = "0xDEF920")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95FB28", Offset = "0x95FB28")]
	private static int GetLocalScaleY(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0xDEFB38", Offset = "0xDEFB38", VA = "0xDEFB38")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95FB8C", Offset = "0x95FB8C")]
	private static int GetLocalScaleZ(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0xDEFD50", Offset = "0xDEFD50", VA = "0xDEFD50")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95FBF0", Offset = "0x95FBF0")]
	private static int SetAnchoredLocalPos(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0xDEFF8C", Offset = "0xDEFF8C", VA = "0xDEFF8C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95FC54", Offset = "0x95FC54")]
	private static int SetRectLocalPos(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0xDF01F0", Offset = "0xDF01F0", VA = "0xDF01F0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95FCB8", Offset = "0x95FCB8")]
	private static int SetLocalPos(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0xDF0454", Offset = "0xDF0454", VA = "0xDF0454")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95FD1C", Offset = "0x95FD1C")]
	private static int GetLocalPosX(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0xDF066C", Offset = "0xDF066C", VA = "0xDF066C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95FD80", Offset = "0x95FD80")]
	private static int GetLocalPosY(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0xDF0884", Offset = "0xDF0884", VA = "0xDF0884")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95FDE4", Offset = "0x95FDE4")]
	private static int GetLocalPosZ(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0xDF0A9C", Offset = "0xDF0A9C", VA = "0xDF0A9C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95FE48", Offset = "0x95FE48")]
	private static int SetLocalPosZ(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0xDF0CBC", Offset = "0xDF0CBC", VA = "0xDF0CBC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95FEAC", Offset = "0x95FEAC")]
	private static int SetPosByEventData(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0xDF0EF4", Offset = "0xDF0EF4", VA = "0xDF0EF4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95FF10", Offset = "0x95FF10")]
	private static int SetPosByGO(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0xDF1124", Offset = "0xDF1124", VA = "0xDF1124")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95FF74", Offset = "0x95FF74")]
	private static int LookAt(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0xDF1388", Offset = "0xDF1388", VA = "0xDF1388")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x95FFD8", Offset = "0x95FFD8")]
	private static int Rotate(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0xDF15EC", Offset = "0xDF15EC", VA = "0xDF15EC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96003C", Offset = "0x96003C")]
	private static int SetLocalEulerAngles(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0xDF1850", Offset = "0xDF1850", VA = "0xDF1850")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9600A0", Offset = "0x9600A0")]
	private static int SetEulerAngles(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0xDF1AB4", Offset = "0xDF1AB4", VA = "0xDF1AB4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x960104", Offset = "0x960104")]
	private static int RotateGO(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0xDF1D18", Offset = "0xDF1D18", VA = "0xDF1D18")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x960168", Offset = "0x960168")]
	private static int GetEulerAngles(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0xDF1EFC", Offset = "0xDF1EFC", VA = "0xDF1EFC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9601CC", Offset = "0x9601CC")]
	private static int GetPos(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0xDF20E0", Offset = "0xDF20E0", VA = "0xDF20E0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x960230", Offset = "0x960230")]
	private static int GetLocalPos(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000539")]
	[Address(RVA = "0xDF22C4", Offset = "0xDF22C4", VA = "0xDF22C4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x960294", Offset = "0x960294")]
	private static int GetLocalEulerAngles(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0xDF24A8", Offset = "0xDF24A8", VA = "0xDF24A8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9602F8", Offset = "0x9602F8")]
	private static int NetConnect(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0xDF2670", Offset = "0xDF2670", VA = "0xDF2670")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96035C", Offset = "0x96035C")]
	private static int NetShutdown(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0xDF27BC", Offset = "0xDF27BC", VA = "0xDF27BC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9603C0", Offset = "0x9603C0")]
	private static int NetSend(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0xDF2944", Offset = "0xDF2944", VA = "0xDF2944")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x960424", Offset = "0x960424")]
	private static int NetClearData(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0xDF2A90", Offset = "0xDF2A90", VA = "0xDF2A90")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x960488", Offset = "0x960488")]
	private static int CreateTouchLayer(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0xDF2C74", Offset = "0xDF2C74", VA = "0xDF2C74")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9604EC", Offset = "0x9604EC")]
	private static int AddTouchLayer(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0xDF2E24", Offset = "0xDF2E24", VA = "0xDF2E24")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x960550", Offset = "0x960550")]
	private static int RemoveTouchLayer(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0xDF2FD4", Offset = "0xDF2FD4", VA = "0xDF2FD4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9605B4", Offset = "0x9605B4")]
	private static int InitGVoice(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000542")]
	[Address(RVA = "0xDF31A0", Offset = "0xDF31A0", VA = "0xDF31A0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x960618", Offset = "0x960618")]
	private static int GetVoiceSec(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000543")]
	[Address(RVA = "0xDF3344", Offset = "0xDF3344", VA = "0xDF3344")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96067C", Offset = "0x96067C")]
	private static int StartRecord(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000544")]
	[Address(RVA = "0xDF34CC", Offset = "0xDF34CC", VA = "0xDF34CC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9606E0", Offset = "0x9606E0")]
	private static int StopRecord(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0xDF3634", Offset = "0xDF3634", VA = "0xDF3634")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x960744", Offset = "0x960744")]
	private static int UploadRecord(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0xDF379C", Offset = "0xDF379C", VA = "0xDF379C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9607A8", Offset = "0x9607A8")]
	private static int DownloadRecord(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0xDF3904", Offset = "0xDF3904", VA = "0xDF3904")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96080C", Offset = "0x96080C")]
	private static int PlayVoice(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0xDF3A6C", Offset = "0xDF3A6C", VA = "0xDF3A6C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x960870", Offset = "0x960870")]
	private static int StopPlayVoice(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0xDF3BB8", Offset = "0xDF3BB8", VA = "0xDF3BB8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9608D4", Offset = "0x9608D4")]
	private static int Voice2Text(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0xDF3D20", Offset = "0xDF3D20", VA = "0xDF3D20")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x960938", Offset = "0x960938")]
	private static int GetVolumePercent(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0xDF3EB4", Offset = "0xDF3EB4", VA = "0xDF3EB4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96099C", Offset = "0x96099C")]
	private static int InitShareSDK(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0xDF4080", Offset = "0xDF4080", VA = "0xDF4080")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x960A00", Offset = "0x960A00")]
	private static int TestShare(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0xDF41CC", Offset = "0xDF41CC", VA = "0xDF41CC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x960A64", Offset = "0x960A64")]
	private static int ShareByPlatform(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0xDF4468", Offset = "0xDF4468", VA = "0xDF4468")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x960AC8", Offset = "0x960AC8")]
	private static int ShareByShowList(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0xDF4760", Offset = "0xDF4760", VA = "0xDF4760")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x960B2C", Offset = "0x960B2C")]
	private static int Capture(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0xDF48E8", Offset = "0xDF48E8", VA = "0xDF48E8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x960B90", Offset = "0x960B90")]
	private static int CaptureToAlbum(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0xDF4A70", Offset = "0xDF4A70", VA = "0xDF4A70")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x960BF4", Offset = "0x960BF4")]
	private static int GetCurTime(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000552")]
	[Address(RVA = "0xDF4BF8", Offset = "0xDF4BF8", VA = "0xDF4BF8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x960C58", Offset = "0x960C58")]
	private static int GetWriteCapturePath(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0xDF4D9C", Offset = "0xDF4D9C", VA = "0xDF4D9C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x960CBC", Offset = "0x960CBC")]
	private static int GetReadCapturePath(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0xDF4F40", Offset = "0xDF4F40", VA = "0xDF4F40")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x960D20", Offset = "0x960D20")]
	private static int GetHash(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0xDF50E4", Offset = "0xDF50E4", VA = "0xDF50E4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x960D84", Offset = "0x960D84")]
	private static int SetImageFillAnimation(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0xDF5320", Offset = "0xDF5320", VA = "0xDF5320")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x960DE8", Offset = "0x960DE8")]
	private static int SetGridGroupActive(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0xDF5534", Offset = "0xDF5534", VA = "0xDF5534")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x960E4C", Offset = "0x960E4C")]
	private static int SetRectSize(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0xDF5770", Offset = "0xDF5770", VA = "0xDF5770")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x960EB0", Offset = "0x960EB0")]
	private static int SetRectStretch(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0xDF5A18", Offset = "0xDF5A18", VA = "0xDF5A18")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x960F14", Offset = "0x960F14")]
	private static int LogNormal(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0xDF5B80", Offset = "0xDF5B80", VA = "0xDF5B80")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x960F78", Offset = "0x960F78")]
	private static int LogInfo(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600055B")]
	[Address(RVA = "0xDF5CE8", Offset = "0xDF5CE8", VA = "0xDF5CE8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x960FDC", Offset = "0x960FDC")]
	private static int GetAnimComp(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600055C")]
	[Address(RVA = "0xDF5ED0", Offset = "0xDF5ED0", VA = "0xDF5ED0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x962040", Offset = "0x962040")]
	private static int PlayAnim(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600055D")]
	[Address(RVA = "0xDF60C0", Offset = "0xDF60C0", VA = "0xDF60C0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9620A4", Offset = "0x9620A4")]
	private static int PlayAnimWithGO(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0xDF62B0", Offset = "0xDF62B0", VA = "0xDF62B0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x962108", Offset = "0x962108")]
	private static int PlayAnimator(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0xDF64A0", Offset = "0xDF64A0", VA = "0xDF64A0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96216C", Offset = "0x96216C")]
	private static int PlayAnimatorInFixedTime(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0xDF6708", Offset = "0xDF6708", VA = "0xDF6708")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9621D0", Offset = "0x9621D0")]
	private static int GetAnimatorCurrentTime(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0xDF6920", Offset = "0xDF6920", VA = "0xDF6920")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x962234", Offset = "0x962234")]
	private static int SetAnimatorSpeed(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0xDF6B40", Offset = "0xDF6B40", VA = "0xDF6B40")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x962298", Offset = "0x962298")]
	private static int PlayAnimatorInChild(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0xDF6D30", Offset = "0xDF6D30", VA = "0xDF6D30")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9622FC", Offset = "0x9622FC")]
	private static int PlayAnimatorInChildByProcess(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0xDF6F6C", Offset = "0xDF6F6C", VA = "0xDF6F6C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x962360", Offset = "0x962360")]
	private static int PlayAnimationInChildByProcess(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0xDF71A8", Offset = "0xDF71A8", VA = "0xDF71A8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9623C4", Offset = "0x9623C4")]
	private static int CrossFadeQueuedAnimationInChildByProcess(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0xDF73E4", Offset = "0xDF73E4", VA = "0xDF73E4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x962428", Offset = "0x962428")]
	private static int SetGridArgs(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0xDF7664", Offset = "0xDF7664", VA = "0xDF7664")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96248C", Offset = "0x96248C")]
	private static int SetPoolCapacity(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0xDF782C", Offset = "0xDF782C", VA = "0xDF782C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9624F0", Offset = "0x9624F0")]
	private static int InitPoolWithTimer(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000569")]
	[Address(RVA = "0xDF7A10", Offset = "0xDF7A10", VA = "0xDF7A10")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x962554", Offset = "0x962554")]
	private static int DoShake(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0xDF7B5C", Offset = "0xDF7B5C", VA = "0xDF7B5C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9625B8", Offset = "0x9625B8")]
	private static int GetTime(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0xDF7CF0", Offset = "0xDF7CF0", VA = "0xDF7CF0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96261C", Offset = "0x96261C")]
	private static int GetFrameCount(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0xDF7E78", Offset = "0xDF7E78", VA = "0xDF7E78")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x962680", Offset = "0x962680")]
	private static int SetTextByGo(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0xDF8068", Offset = "0xDF8068", VA = "0xDF8068")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9626E4", Offset = "0x9626E4")]
	private static int RestartTween(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0xDF8238", Offset = "0xDF8238", VA = "0xDF8238")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x962748", Offset = "0x962748")]
	private static int RestartTweenByID(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0xDF83A0", Offset = "0xDF83A0", VA = "0xDF83A0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9627AC", Offset = "0x9627AC")]
	private static int RewindTweenByID(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0xDF8508", Offset = "0xDF8508", VA = "0xDF8508")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x962810", Offset = "0x962810")]
	private static int Playback(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0xDF8670", Offset = "0xDF8670", VA = "0xDF8670")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x962874", Offset = "0x962874")]
	private static int DebugBreak(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0xDF87BC", Offset = "0xDF87BC", VA = "0xDF87BC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9628D8", Offset = "0x9628D8")]
	private static int SetSibling(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0xDF89EC", Offset = "0xDF89EC", VA = "0xDF89EC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96293C", Offset = "0x96293C")]
	private static int ClearCall(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0xDF8B54", Offset = "0xDF8B54", VA = "0xDF8B54")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9629A0", Offset = "0x9629A0")]
	private static int SetClipboard(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0xDF8CF8", Offset = "0xDF8CF8", VA = "0xDF8CF8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x962A04", Offset = "0x962A04")]
	private static int GetClipBoard(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0xDF8E80", Offset = "0xDF8E80", VA = "0xDF8E80")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x962A68", Offset = "0x962A68")]
	private static int EscapeText(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0xDF9024", Offset = "0xDF9024", VA = "0xDF9024")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x962ACC", Offset = "0x962ACC")]
	private static int UnescapeText(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0xDF91C8", Offset = "0xDF91C8", VA = "0xDF91C8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x962B30", Offset = "0x962B30")]
	private static int SetColorBlendAlpha(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0xDF93E8", Offset = "0xDF93E8", VA = "0xDF93E8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x962B94", Offset = "0x962B94")]
	private static int ForceShaderNoRim(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0xDF95B8", Offset = "0xDF95B8", VA = "0xDF95B8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x962BF8", Offset = "0x962BF8")]
	private static int LoadGo(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0xDF9740", Offset = "0xDF9740", VA = "0xDF9740")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x962C5C", Offset = "0x962C5C")]
	private static int UnLoadGo(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0xDF9910", Offset = "0xDF9910", VA = "0xDF9910")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x962CC0", Offset = "0x962CC0")]
	private static int CheckPool(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600057D")]
	[Address(RVA = "0xDF9A5C", Offset = "0xDF9A5C", VA = "0xDF9A5C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x962D24", Offset = "0x962D24")]
	private static int RunAction(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0xDF9C08", Offset = "0xDF9C08", VA = "0xDF9C08")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x962D88", Offset = "0x962D88")]
	private static int GetLeftTime(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0xDF9D90", Offset = "0xDF9D90", VA = "0xDF9D90")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x962DEC", Offset = "0x962DEC")]
	private static int SetClientTime(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0xDF9EDC", Offset = "0xDF9EDC", VA = "0xDF9EDC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x962E50", Offset = "0x962E50")]
	private static int SetGrayImage(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0xDFA0D0", Offset = "0xDFA0D0", VA = "0xDFA0D0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x962EB4", Offset = "0x962EB4")]
	private static int HideNativeView(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0xDFA21C", Offset = "0xDFA21C", VA = "0xDFA21C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x962F18", Offset = "0x962F18")]
	private static int FindChildByName(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0xDFA42C", Offset = "0xDFA42C", VA = "0xDFA42C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x962F7C", Offset = "0x962F7C")]
	private static int SetRenderTextureCamera(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0xDFA5B8", Offset = "0xDFA5B8", VA = "0xDFA5B8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x962FE0", Offset = "0x962FE0")]
	private static int GetPlatformName(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0xDFA740", Offset = "0xDFA740", VA = "0xDFA740")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x964044", Offset = "0x964044")]
	private static int SetTriangleAnimation(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0xDFA9D0", Offset = "0xDFA9D0", VA = "0xDFA9D0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9640A8", Offset = "0x9640A8")]
	private static int SetLineTitleAnimation(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0xDFAC60", Offset = "0xDFAC60", VA = "0xDFAC60")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96410C", Offset = "0x96410C")]
	private static int SetSpriteName(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0xDFAE50", Offset = "0xDFAE50", VA = "0xDFAE50")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x964170", Offset = "0x964170")]
	private static int SetLayoutElementSize(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0xDFB08C", Offset = "0xDFB08C", VA = "0xDFB08C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9641D4", Offset = "0x9641D4")]
	private static int SetRadar(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0xDFB334", Offset = "0xDFB334", VA = "0xDFB334")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x964238", Offset = "0x964238")]
	private static int SetAnimatorProcess(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600058B")]
	[Address(RVA = "0xDFB554", Offset = "0xDFB554", VA = "0xDFB554")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96429C", Offset = "0x96429C")]
	private static int SetTypewriterFinishCall(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0xDFB71C", Offset = "0xDFB71C", VA = "0xDFB71C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x964300", Offset = "0x964300")]
	private static int SetTypewriterFinish(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600058D")]
	[Address(RVA = "0xDFB8CC", Offset = "0xDFB8CC", VA = "0xDFB8CC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x964364", Offset = "0x964364")]
	private static int PlayWheelAnim(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0xDFBB68", Offset = "0xDFBB68", VA = "0xDFBB68")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9643C8", Offset = "0x9643C8")]
	private static int StopWheelAnim(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600058F")]
	[Address(RVA = "0xDFBD18", Offset = "0xDFBD18", VA = "0xDFBD18")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96442C", Offset = "0x96442C")]
	private static int PlayWheelIdle(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0xDFBF44", Offset = "0xDFBF44", VA = "0xDFBF44")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x964490", Offset = "0x964490")]
	private static int SetWheelIndex(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0xDFC154", Offset = "0xDFC154", VA = "0xDFC154")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9644F4", Offset = "0x9644F4")]
	private static int GetWheelIndex(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0xDFC338", Offset = "0xDFC338", VA = "0xDFC338")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x964558", Offset = "0x964558")]
	private static int PlayWheelActive(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0xDFC5F8", Offset = "0xDFC5F8", VA = "0xDFC5F8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9645BC", Offset = "0x9645BC")]
	private static int PlayMoveTween(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0xDFC8A4", Offset = "0xDFC8A4", VA = "0xDFC8A4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x964620", Offset = "0x964620")]
	private static int PlayLocalMoveTween(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0xDFCB50", Offset = "0xDFCB50", VA = "0xDFCB50")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x964684", Offset = "0x964684")]
	private static int PlayLocalValueMoveTween(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0xDFCDDC", Offset = "0xDFCDDC", VA = "0xDFCDDC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9646E8", Offset = "0x9646E8")]
	private static int PlayLocalValueRotateTween(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0xDFD068", Offset = "0xDFD068", VA = "0xDFD068")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96474C", Offset = "0x96474C")]
	private static int PlaySliderTo(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0xDFD2B8", Offset = "0xDFD2B8", VA = "0xDFD2B8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9647B0", Offset = "0x9647B0")]
	private static int TweenDoMove(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000599")]
	[Address(RVA = "0xDFD528", Offset = "0xDFD528", VA = "0xDFD528")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x964814", Offset = "0x964814")]
	private static int TweenDoMoveLua(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0xDFD7DC", Offset = "0xDFD7DC", VA = "0xDFD7DC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x964878", Offset = "0x964878")]
	private static int PlayAnimLua(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600059B")]
	[Address(RVA = "0xDFD9CC", Offset = "0xDFD9CC", VA = "0xDFD9CC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9648DC", Offset = "0x9648DC")]
	private static int PlayAnimLuaReturnTime(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600059C")]
	[Address(RVA = "0xDFDC04", Offset = "0xDFDC04", VA = "0xDFDC04")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x964940", Offset = "0x964940")]
	private static int GetAnimLength(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600059D")]
	[Address(RVA = "0xDFDE3C", Offset = "0xDFDE3C", VA = "0xDFDE3C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9649A4", Offset = "0x9649A4")]
	private static int PlayPathMoveTween(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600059E")]
	[Address(RVA = "0xDFE10C", Offset = "0xDFE10C", VA = "0xDFE10C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x964A08", Offset = "0x964A08")]
	private static int KillTween(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600059F")]
	[Address(RVA = "0xDFE2BC", Offset = "0xDFE2BC", VA = "0xDFE2BC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x964A6C", Offset = "0x964A6C")]
	private static int SetCenterToLevelIndex(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0xDFE4EC", Offset = "0xDFE4EC", VA = "0xDFE4EC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x964AD0", Offset = "0x964AD0")]
	private static int GetOtherResourceSize(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0xDFE674", Offset = "0xDFE674", VA = "0xDFE674")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x964B34", Offset = "0x964B34")]
	private static int GetDeleteListCount(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0xDFE7FC", Offset = "0xDFE7FC", VA = "0xDFE7FC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x964B98", Offset = "0x964B98")]
	private static int DownloadOtherResource(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0xDFE984", Offset = "0xDFE984", VA = "0xDFE984")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x964BFC", Offset = "0x964BFC")]
	private static int StopDownLoadOtherResource(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0xDFEB0C", Offset = "0xDFEB0C", VA = "0xDFEB0C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x964C60", Offset = "0x964C60")]
	private static int SetMatByResource(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0xDFED44", Offset = "0xDFED44", VA = "0xDFED44")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x964CC4", Offset = "0x964CC4")]
	private static int SetAsyncLoadBundle(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0xDFEE90", Offset = "0xDFEE90", VA = "0xDFEE90")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x964D28", Offset = "0x964D28")]
	private static int SetSyncLoadBundle(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0xDFEFDC", Offset = "0xDFEFDC", VA = "0xDFEFDC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x964D8C", Offset = "0x964D8C")]
	private static int GetDeviceName(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0xDFF164", Offset = "0xDFF164", VA = "0xDFF164")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x964DF0", Offset = "0x964DF0")]
	private static int SetMaskEnable(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0xDFF378", Offset = "0xDFF378", VA = "0xDFF378")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x964E54", Offset = "0x964E54")]
	private static int GetPxrPuiVersion(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0xDFF500", Offset = "0xDFF500", VA = "0xDFF500")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x964EB8", Offset = "0x964EB8")]
	private static int GetPxrEquipmentModel(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0xDFF688", Offset = "0xDFF688", VA = "0xDFF688")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x964F1C", Offset = "0x964F1C")]
	private static int GetPxrCustomerSN(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0xDFF810", Offset = "0xDFF810", VA = "0xDFF810")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x964F80", Offset = "0x964F80")]
	private static int GetPxrEquipmentSN(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0xDFF998", Offset = "0xDFF998", VA = "0xDFF998")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x964FE4", Offset = "0x964FE4")]
	private static int GetDeviceModel(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0xDFFB20", Offset = "0xDFFB20", VA = "0xDFFB20")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x965048", Offset = "0x965048")]
	private static int AppendFileLog(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0xDFFC88", Offset = "0xDFFC88", VA = "0xDFFC88")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9650AC", Offset = "0x9650AC")]
	private static int GetNewRolePath(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0xDFFE2C", Offset = "0xDFFE2C", VA = "0xDFFE2C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x965110", Offset = "0x965110")]
	private static int RefreshSorting(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0xE0005C", Offset = "0xE0005C", VA = "0xE0005C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x965174", Offset = "0x965174")]
	private static int RefreshDepth(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0xE00270", Offset = "0xE00270", VA = "0xE00270")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9651D8", Offset = "0x9651D8")]
	private static int SetUIDepthEnabled(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0xE00484", Offset = "0xE00484", VA = "0xE00484")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96523C", Offset = "0x96523C")]
	private static int SetLuaCallBack(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0xE00674", Offset = "0xE00674", VA = "0xE00674")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9652A0", Offset = "0x9652A0")]
	private static int ClearHideNodes(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0xE007C0", Offset = "0xE007C0", VA = "0xE007C0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x965304", Offset = "0x965304")]
	private static int AddHideNodes(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0xE0096C", Offset = "0xE0096C", VA = "0xE0096C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x965368", Offset = "0x965368")]
	private static int LoadShader(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0xE00AB8", Offset = "0xE00AB8", VA = "0xE00AB8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9653CC", Offset = "0x9653CC")]
	private static int LogTime(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0xE00C20", Offset = "0xE00C20", VA = "0xE00C20")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x965430", Offset = "0x965430")]
	private static int SetFps(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0xE00DCC", Offset = "0xE00DCC", VA = "0xE00DCC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x965494", Offset = "0x965494")]
	private static int StartDownloadTiming(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0xE00F18", Offset = "0xE00F18", VA = "0xE00F18")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9654F8", Offset = "0x9654F8")]
	private static int StopDownloadTiming(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0xE01064", Offset = "0xE01064", VA = "0xE01064")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96555C", Offset = "0x96555C")]
	private static int AddSeeFrame(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0xE011B0", Offset = "0xE011B0", VA = "0xE011B0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9655C0", Offset = "0x9655C0")]
	private static int AddLuaTime(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0xE01318", Offset = "0xE01318", VA = "0xE01318")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x965624", Offset = "0x965624")]
	private static int ReleaseScene(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0xE01480", Offset = "0xE01480", VA = "0xE01480")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x965688", Offset = "0x965688")]
	private static int AddCameraToEasyTouch(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0xE01650", Offset = "0xE01650", VA = "0xE01650")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9656EC", Offset = "0x9656EC")]
	private static int RemoveCameraFromEasyTouch(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0xE01820", Offset = "0xE01820", VA = "0xE01820")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x965750", Offset = "0x965750")]
	private static int Record(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0xE01988", Offset = "0xE01988", VA = "0xE01988")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9657B4", Offset = "0x9657B4")]
	private static int Game_Register(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0xE01BCC", Offset = "0xE01BCC", VA = "0xE01BCC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x965818", Offset = "0x965818")]
	private static int Game_Login(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0xE01E18", Offset = "0xE01E18", VA = "0xE01E18")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96587C", Offset = "0x96587C")]
	private static int Game_SetPayment(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0xE020A8", Offset = "0xE020A8", VA = "0xE020A8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9658E0", Offset = "0x9658E0")]
	private static int SetActiveScene(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0xE02230", Offset = "0xE02230", VA = "0xE02230")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x965944", Offset = "0x965944")]
	private static int SetRenderSettings(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0xE0237C", Offset = "0xE0237C", VA = "0xE0237C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9659A8", Offset = "0x9659A8")]
	private static int GetBranchInfoDesc(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0xE02504", Offset = "0xE02504", VA = "0xE02504")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x965A0C", Offset = "0x965A0C")]
	private static int GetScreenSize(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0xE026AC", Offset = "0xE026AC", VA = "0xE026AC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x965A70", Offset = "0x965A70")]
	private static int GetRectLocalPos(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0xE02934", Offset = "0xE02934", VA = "0xE02934")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x965AD4", Offset = "0x965AD4")]
	private static int FormatGO(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0xE02B04", Offset = "0xE02B04", VA = "0xE02B04")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x965B38", Offset = "0x965B38")]
	private static int SetNetFunction(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0xE02C6C", Offset = "0xE02C6C", VA = "0xE02C6C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x965B9C", Offset = "0x965B9C")]
	private static int AddLuaListener(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0xE02E68", Offset = "0xE02E68", VA = "0xE02E68")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x965C00", Offset = "0x965C00")]
	private static int RemoveLuaListener(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0xE03064", Offset = "0xE03064", VA = "0xE03064")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x965C64", Offset = "0x965C64")]
	private static int Dispatch(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0xE03268", Offset = "0xE03268", VA = "0xE03268")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x965CC8", Offset = "0x965CC8")]
	private static int SetUIPosByWorldPos(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0xE03528", Offset = "0xE03528", VA = "0xE03528")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x965D2C", Offset = "0x965D2C")]
	private static int SetPos(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0xE0378C", Offset = "0xE0378C", VA = "0xE0378C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x965D90", Offset = "0x965D90")]
	private static int AddAnimationCallback(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0xE0397C", Offset = "0xE0397C", VA = "0xE0397C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x965DF4", Offset = "0x965DF4")]
	private static int SetUICameraShake(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0xE03B5C", Offset = "0xE03B5C", VA = "0xE03B5C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x965E58", Offset = "0x965E58")]
	private static int SetGoShader(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0xE03D4C", Offset = "0xE03D4C", VA = "0xE03D4C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x965EBC", Offset = "0x965EBC")]
	private static int ReConnect(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0xE03E98", Offset = "0xE03E98", VA = "0xE03E98")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x965F20", Offset = "0x965F20")]
	private static int Logout(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0xE03FE4", Offset = "0xE03FE4", VA = "0xE03FE4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x965F84", Offset = "0x965F84")]
	private static int LuaToCS(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0xE041B0", Offset = "0xE041B0", VA = "0xE041B0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x965FE8", Offset = "0x965FE8")]
	private static int CSToLua(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0xE0437C", Offset = "0xE0437C", VA = "0xE0437C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96604C", Offset = "0x96604C")]
	private static int DiffLong(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0xE04540", Offset = "0xE04540", VA = "0xE04540")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9660B0", Offset = "0x9660B0")]
	private static int Base64Encrypt(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0xE0484C", Offset = "0xE0484C", VA = "0xE0484C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x966114", Offset = "0x966114")]
	private static int Base64Decrypt(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0xE04B58", Offset = "0xE04B58", VA = "0xE04B58")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x966178", Offset = "0x966178")]
	private static int DecryptJsonString(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0xE04CFC", Offset = "0xE04CFC", VA = "0xE04CFC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9661DC", Offset = "0x9661DC")]
	private static int CalculateMutiLong(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0xE04ECC", Offset = "0xE04ECC", VA = "0xE04ECC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x966240", Offset = "0x966240")]
	private static int UnityToNative(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0xE05054", Offset = "0xE05054", VA = "0xE05054")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9662A4", Offset = "0x9662A4")]
	private static int RepairUpdate(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0xE051A0", Offset = "0xE051A0", VA = "0xE051A0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x966308", Offset = "0x966308")]
	private static int SetLuaMem(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0xE05344", Offset = "0xE05344", VA = "0xE05344")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96636C", Offset = "0x96636C")]
	private static int SetLuaTimeMgrMem(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0xE054CC", Offset = "0xE054CC", VA = "0xE054CC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9663D0", Offset = "0x9663D0")]
	private static int AddView(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0xE05794", Offset = "0xE05794", VA = "0xE05794")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x966434", Offset = "0x966434")]
	private static int AddSceneGoView(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0xE059FC", Offset = "0xE059FC", VA = "0xE059FC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x966498", Offset = "0x966498")]
	private static int AddUICanvas(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0xE05C4C", Offset = "0xE05C4C", VA = "0xE05C4C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9664FC", Offset = "0x9664FC")]
	private static int AddBoxCollider(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0xE05E88", Offset = "0xE05E88", VA = "0xE05E88")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x966560", Offset = "0x966560")]
	private static int BitOperation(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0xE06320", Offset = "0xE06320", VA = "0xE06320")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9665C4", Offset = "0x9665C4")]
	private static int SetXXLTable(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0xE064C4", Offset = "0xE064C4", VA = "0xE064C4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x966628", Offset = "0x966628")]
	private static int CombineSkinned(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0xE0686C", Offset = "0xE0686C", VA = "0xE0686C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96668C", Offset = "0x96668C")]
	private static int CombineSkinnedOnlyBone(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0xE06A64", Offset = "0xE06A64", VA = "0xE06A64")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9666F0", Offset = "0x9666F0")]
	private static int CaptureScreenOnImage(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0xE06C54", Offset = "0xE06C54", VA = "0xE06C54")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x966754", Offset = "0x966754")]
	private static int SetMeshRenderColorValue(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0xE06E60", Offset = "0xE06E60", VA = "0xE06E60")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9667B8", Offset = "0x9667B8")]
	private static int SetChildMeshRenderColorValue(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0xE07094", Offset = "0xE07094", VA = "0xE07094")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96681C", Offset = "0x96681C")]
	private static int SetMeshRenderTexture(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0xE072C8", Offset = "0xE072C8", VA = "0xE072C8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x966880", Offset = "0x966880")]
	private static int RemoveTextureLoaderCom(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0xE07498", Offset = "0xE07498", VA = "0xE07498")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9668E4", Offset = "0x9668E4")]
	private static int SetSpineAniName(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0xE07688", Offset = "0xE07688", VA = "0xE07688")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x966948", Offset = "0x966948")]
	private static int MathLerp(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0xE07880", Offset = "0xE07880", VA = "0xE07880")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9669AC", Offset = "0x9669AC")]
	private static int GoFindNode(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0xE07A90", Offset = "0xE07A90", VA = "0xE07A90")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x966A10", Offset = "0x966A10")]
	private static int SaveCameraCapture(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0xE07D00", Offset = "0xE07D00", VA = "0xE07D00")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x966A74", Offset = "0x966A74")]
	private static int AddCanvas2D(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0xE08014", Offset = "0xE08014", VA = "0xE08014")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x966AD8", Offset = "0x966AD8")]
	private static int GetNameToLayer(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0xE081B8", Offset = "0xE081B8", VA = "0xE081B8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x966B3C", Offset = "0x966B3C")]
	private static int GetMask(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0xE08364", Offset = "0xE08364", VA = "0xE08364")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x966BA0", Offset = "0x966BA0")]
	private static int SetUICamera(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0xE08534", Offset = "0xE08534", VA = "0xE08534")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x966C04", Offset = "0x966C04")]
	private static int ChangeLayerRecursively(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0xE08764", Offset = "0xE08764", VA = "0xE08764")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x966C68", Offset = "0x966C68")]
	private static int GetDateTimeNowTicks(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0xE088EC", Offset = "0xE088EC", VA = "0xE088EC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x966CCC", Offset = "0x966CCC")]
	private static int AddLogToFile(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0xE08A74", Offset = "0xE08A74", VA = "0xE08A74")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x966D30", Offset = "0x966D30")]
	private static int GetVRPingtai(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0xE08BFC", Offset = "0xE08BFC", VA = "0xE08BFC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x966D94", Offset = "0x966D94")]
	private static int CheckGCSprite(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0xE08D48", Offset = "0xE08D48", VA = "0xE08D48")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x966DF8", Offset = "0x966DF8")]
	private static int CheckGCUnityResource(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0xE08E94", Offset = "0xE08E94", VA = "0xE08E94")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x966E5C", Offset = "0x966E5C")]
	private static int CheckGCAssetBundle(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0xE09040", Offset = "0xE09040", VA = "0xE09040")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x966EC0", Offset = "0x966EC0")]
	private static int CheckGCLua(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0xE0918C", Offset = "0xE0918C", VA = "0xE0918C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x966F24", Offset = "0x966F24")]
	private static int CheckLibSettingCheck(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0xE092D8", Offset = "0xE092D8", VA = "0xE092D8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x966F88", Offset = "0x966F88")]
	private static int GetVrHandActive(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0xE0949C", Offset = "0xE0949C", VA = "0xE0949C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x966FEC", Offset = "0x966FEC")]
	private static int SetVrControllerFunc(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0xE09604", Offset = "0xE09604", VA = "0xE09604")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x967050", Offset = "0x967050")]
	private static int SetVrControllerNotifyToLua(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000601")]
	[Address(RVA = "0xE09790", Offset = "0xE09790", VA = "0xE09790")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9670B4", Offset = "0x9670B4")]
	private static int SetVrControllerMianHand(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0xE0993C", Offset = "0xE0993C", VA = "0xE0993C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x967118", Offset = "0x967118")]
	private static int VrControllerShakeHand(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0xE09B30", Offset = "0xE09B30", VA = "0xE09B30")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96717C", Offset = "0x96717C")]
	private static int VrControllerSetLineRendererActive(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0xE09CBC", Offset = "0xE09CBC", VA = "0xE09CBC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9671E0", Offset = "0x9671E0")]
	private static int VrControllerSetHandControllerActive(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000605")]
	[Address(RVA = "0xE09E48", Offset = "0xE09E48", VA = "0xE09E48")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x967244", Offset = "0x967244")]
	private static int SetAntiAliasing(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0xE09FF4", Offset = "0xE09FF4", VA = "0xE09FF4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9672A8", Offset = "0x9672A8")]
	private static int GetRectSize(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0xE0A1D8", Offset = "0xE0A1D8", VA = "0xE0A1D8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96730C", Offset = "0x96730C")]
	private static int GetSystemLanguage(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000608")]
	[Address(RVA = "0xE0A360", Offset = "0xE0A360", VA = "0xE0A360")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x967370", Offset = "0x967370")]
	private static int GetImgColorParam(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0xE0A548", Offset = "0xE0A548", VA = "0xE0A548")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9673D4", Offset = "0x9673D4")]
	private static int SetImgColorParamInGo(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0xE0A738", Offset = "0xE0A738", VA = "0xE0A738")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x967438", Offset = "0x967438")]
	private static int GetSpriteRenderColorParam(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0xE0A920", Offset = "0xE0A920", VA = "0xE0A920")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96749C", Offset = "0x96749C")]
	private static int SetSpriteRenderColorParamInGo(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0xE0AB10", Offset = "0xE0AB10", VA = "0xE0AB10")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x967500", Offset = "0x967500")]
	private static int PlayComVideo(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600060D")]
	[Address(RVA = "0xE0AD30", Offset = "0xE0AD30", VA = "0xE0AD30")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x967564", Offset = "0x967564")]
	private static int GetComVideoTime(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600060E")]
	[Address(RVA = "0xE0AF48", Offset = "0xE0AF48", VA = "0xE0AF48")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9675C8", Offset = "0x9675C8")]
	private static int SetComVideoTime(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0xE0B168", Offset = "0xE0B168", VA = "0xE0B168")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96762C", Offset = "0x96762C")]
	private static int SetComVideoSpeed(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0xE0B388", Offset = "0xE0B388", VA = "0xE0B388")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x967690", Offset = "0x967690")]
	private static int StopComVideo(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0xE0B558", Offset = "0xE0B558", VA = "0xE0B558")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9676F4", Offset = "0x9676F4")]
	private static int SetComVideoUtl(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0xE0B748", Offset = "0xE0B748", VA = "0xE0B748")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x967758", Offset = "0x967758")]
	private static int SetComVideoPrePareFunc(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0xE0B938", Offset = "0xE0B938", VA = "0xE0B938")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9677BC", Offset = "0x9677BC")]
	private static int SetComVideoEndTimeFunc(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0xE0BB74", Offset = "0xE0BB74", VA = "0xE0BB74")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x967820", Offset = "0x967820")]
	private static int SetComVideoOutTimeFunc(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0xE0BDB0", Offset = "0xE0BDB0", VA = "0xE0BDB0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x967884", Offset = "0x967884")]
	private static int SetComVideoStartTimeFunc(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0xE0BFEC", Offset = "0xE0BFEC", VA = "0xE0BFEC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9678E8", Offset = "0x9678E8")]
	private static int ClearComVideoParams(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0xE0C1BC", Offset = "0xE0C1BC", VA = "0xE0C1BC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96794C", Offset = "0x96794C")]
	private static int SetComVideoPercentLuaFun(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0xE0C3AC", Offset = "0xE0C3AC", VA = "0xE0C3AC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9679B0", Offset = "0x9679B0")]
	private static int SetComVideoAddFrame(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0xE0C57C", Offset = "0xE0C57C", VA = "0xE0C57C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x967A14", Offset = "0x967A14")]
	private static int SetComVideoReduceFrame(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0xE0C74C", Offset = "0xE0C74C", VA = "0xE0C74C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x967A78", Offset = "0x967A78")]
	private static int GetComVideoFile(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0xE0C958", Offset = "0xE0C958", VA = "0xE0C958")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x967ADC", Offset = "0x967ADC")]
	private static int VideoPlayByUrl(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0xE0CB48", Offset = "0xE0CB48", VA = "0xE0CB48")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x967B40", Offset = "0x967B40")]
	private static int SetComVideoTimeByPercent(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0xE0CD68", Offset = "0xE0CD68", VA = "0xE0CD68")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x967BA4", Offset = "0x967BA4")]
	private static int DownloadVideo(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0xE0CF0C", Offset = "0xE0CF0C", VA = "0xE0CF0C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x967C08", Offset = "0x967C08")]
	private static int HasVideoFile(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0xE0D0B0", Offset = "0xE0D0B0", VA = "0xE0D0B0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x967C6C", Offset = "0x967C6C")]
	private static int GetPersistentDataPath(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0xE0D254", Offset = "0xE0D254", VA = "0xE0D254")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x967CD0", Offset = "0x967CD0")]
	private static int SetComVideoPathType(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0xE0D484", Offset = "0xE0D484", VA = "0xE0D484")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x967D34", Offset = "0x967D34")]
	private static int SetComVideoStepForward(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0xE0D654", Offset = "0xE0D654", VA = "0xE0D654")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x967D98", Offset = "0x967D98")]
	private static int GetBuglyIsOpen(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0xE0D828", Offset = "0xE0D828", VA = "0xE0D828")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x967DFC", Offset = "0x967DFC")]
	private static int SetAnimationEvent(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0xE0DA18", Offset = "0xE0DA18", VA = "0xE0DA18")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x967E60", Offset = "0x967E60")]
	private static int GetValueOnAnimationCurveByTime(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0xE0DC30", Offset = "0xE0DC30", VA = "0xE0DC30")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x967EC4", Offset = "0x967EC4")]
	private static int PlayAnimatorWithCom(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0xE0DE00", Offset = "0xE0DE00", VA = "0xE0DE00")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x967F28", Offset = "0x967F28")]
	private static int SetMeshTexture(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0xE0DFF0", Offset = "0xE0DFF0", VA = "0xE0DFF0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x967F8C", Offset = "0x967F8C")]
	private static int SetComVideoPercentVolume(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0xE0E210", Offset = "0xE0E210", VA = "0xE0E210")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x967FF0", Offset = "0x967FF0")]
	private static int get_IsDownloading(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0xE0E36C", Offset = "0xE0E36C", VA = "0xE0E36C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x968054", Offset = "0x968054")]
	private static int get_AllLuaTableMem(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0xE0E4C4", Offset = "0xE0E4C4", VA = "0xE0E4C4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9680B8", Offset = "0x9680B8")]
	private static int get_AllTimerTimeDicMem(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600062B")]
	[Address(RVA = "0xE0E61C", Offset = "0xE0E61C", VA = "0xE0E61C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96811C", Offset = "0x96811C")]
	private static int get_AllTimerFrameDicMem(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0xE0E774", Offset = "0xE0E774", VA = "0xE0E774")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x968180", Offset = "0x968180")]
	private static int get_XXLTable(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0xE0E8CC", Offset = "0xE0E8CC", VA = "0xE0E8CC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9681E4", Offset = "0x9681E4")]
	private static int set_IsDownloading(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0xE0EA28", Offset = "0xE0EA28", VA = "0xE0EA28")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x968248", Offset = "0x968248")]
	private static int set_AllLuaTableMem(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0xE0EB80", Offset = "0xE0EB80", VA = "0xE0EB80")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9682AC", Offset = "0x9682AC")]
	private static int set_AllTimerTimeDicMem(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000630")]
	[Address(RVA = "0xE0ECD8", Offset = "0xE0ECD8", VA = "0xE0ECD8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x968310", Offset = "0x968310")]
	private static int set_AllTimerFrameDicMem(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000631")]
	[Address(RVA = "0xE0EE30", Offset = "0xE0EE30", VA = "0xE0EE30")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x968374", Offset = "0x968374")]
	private static int set_XXLTable(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000632")]
	[Address(RVA = "0xE13C88", Offset = "0xE13C88", VA = "0xE13C88")]
	public Sword_Game_UtilLuaWrap()
	{
	}
}
[Token(Token = "0x200005F")]
public class Sword_Game_ViewToolWrap
{
	[Token(Token = "0x6000633")]
	[Address(RVA = "0x14EB784", Offset = "0x14EB784", VA = "0x14EB784")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x6000634")]
	[Address(RVA = "0x14E3CA8", Offset = "0x14E3CA8", VA = "0x14E3CA8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9683D8", Offset = "0x9683D8")]
	private static int NewUIObject(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000635")]
	[Address(RVA = "0x14E3E08", Offset = "0x14E3E08", VA = "0x14E3E08")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96843C", Offset = "0x96843C")]
	private static int SetInteractable(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0x14E3FD8", Offset = "0x14E3FD8", VA = "0x14E3FD8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9684A0", Offset = "0x9684A0")]
	private static int GetLocalPosWith(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000637")]
	[Address(RVA = "0x14E4200", Offset = "0x14E4200", VA = "0x14E4200")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x968504", Offset = "0x968504")]
	private static int SetColor(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0x14E4558", Offset = "0x14E4558", VA = "0x14E4558")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x968568", Offset = "0x968568")]
	private static int SetGray(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0x14E4748", Offset = "0x14E4748", VA = "0x14E4748")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9685CC", Offset = "0x9685CC")]
	private static int SetGrayImage(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0x14E4918", Offset = "0x14E4918", VA = "0x14E4918")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x968630", Offset = "0x968630")]
	private static int SetImg(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0x14E4AC8", Offset = "0x14E4AC8", VA = "0x14E4AC8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x968694", Offset = "0x968694")]
	private static int GetSoftClip(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0x14E4D0C", Offset = "0x14E4D0C", VA = "0x14E4D0C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9686F8", Offset = "0x9686F8")]
	private static int UpdateMaterial(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0x14E4EF8", Offset = "0x14E4EF8", VA = "0x14E4EF8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96875C", Offset = "0x96875C")]
	private static int AddDragScrollViewItem(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0x14E50FC", Offset = "0x14E50FC", VA = "0x14E50FC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9687C0", Offset = "0x9687C0")]
	private static int SetDragScrollViewItemEnable(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0x14E52EC", Offset = "0x14E52EC", VA = "0x14E52EC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x968824", Offset = "0x968824")]
	private static int SetImageFillAmount(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0x14E54BC", Offset = "0x14E54BC", VA = "0x14E54BC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x968888", Offset = "0x968888")]
	private static int SetCompActive(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0x14E568C", Offset = "0x14E568C", VA = "0x14E568C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9688EC", Offset = "0x9688EC")]
	private static int AddGrayText(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0x14E5810", Offset = "0x14E5810", VA = "0x14E5810")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x968950", Offset = "0x968950")]
	private static int SetRawImageCameral(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0x14E5A28", Offset = "0x14E5A28", VA = "0x14E5A28")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9689B4", Offset = "0x9689B4")]
	private static int LoadPlayerHeadIcon(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0x14E5BD8", Offset = "0x14E5BD8", VA = "0x14E5BD8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x968A18", Offset = "0x968A18")]
	private static int GetChildComp(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0x14E5DD4", Offset = "0x14E5DD4", VA = "0x14E5DD4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x968A7C", Offset = "0x968A7C")]
	private static int GetComp(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0x14E5FB8", Offset = "0x14E5FB8", VA = "0x14E5FB8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x968AE0", Offset = "0x968AE0")]
	private static int BindClick(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0x14E6188", Offset = "0x14E6188", VA = "0x14E6188")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x968B44", Offset = "0x968B44")]
	private static int SetHorizontalNormalizedPosition(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000648")]
	[Address(RVA = "0x14E6378", Offset = "0x14E6378", VA = "0x14E6378")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x968BA8", Offset = "0x968BA8")]
	private static int SetHorizontalNormalizedPositionWithTime(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0x14E6594", Offset = "0x14E6594", VA = "0x14E6594")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x968C0C", Offset = "0x968C0C")]
	private static int SetVerticalNormalizedPosition(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0x14E6784", Offset = "0x14E6784", VA = "0x14E6784")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x968C70", Offset = "0x968C70")]
	private static int SetScrollRectContentMoveEnable(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0x14E6974", Offset = "0x14E6974", VA = "0x14E6974")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x968CD4", Offset = "0x968CD4")]
	private static int TeewAlpha(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0x14E6B90", Offset = "0x14E6B90", VA = "0x14E6B90")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x968D38", Offset = "0x968D38")]
	private static int SetLayoutPreferredWidth(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0x14E6D60", Offset = "0x14E6D60", VA = "0x14E6D60")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x968D9C", Offset = "0x968D9C")]
	private static int SetLayoutPreferredHeight(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0x14E6F30", Offset = "0x14E6F30", VA = "0x14E6F30")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x968E00", Offset = "0x968E00")]
	private static int GetLayoutPreferredWidth(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600064F")]
	[Address(RVA = "0x14E70FC", Offset = "0x14E70FC", VA = "0x14E70FC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x968E64", Offset = "0x968E64")]
	private static int GetLayoutPreferredHeight(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0x14E72C8", Offset = "0x14E72C8", VA = "0x14E72C8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x968EC8", Offset = "0x968EC8")]
	private static int SetFitter(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0x14E74AC", Offset = "0x14E74AC", VA = "0x14E74AC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x968F2C", Offset = "0x968F2C")]
	private static int SetRectSize(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0x14E76C8", Offset = "0x14E76C8", VA = "0x14E76C8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x968F90", Offset = "0x968F90")]
	private static int SetRectAnchor(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0x14E7928", Offset = "0x14E7928", VA = "0x14E7928")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x968FF4", Offset = "0x968FF4")]
	private static int SetRectOffsetMin(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0x14E7B44", Offset = "0x14E7B44", VA = "0x14E7B44")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x969058", Offset = "0x969058")]
	private static int SetRectOffsetMax(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000655")]
	[Address(RVA = "0x14E7D60", Offset = "0x14E7D60", VA = "0x14E7D60")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9690BC", Offset = "0x9690BC")]
	private static int SetRectPosition(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0x14E7F98", Offset = "0x14E7F98", VA = "0x14E7F98")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x969120", Offset = "0x969120")]
	private static int SetRectPositionByTransform(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0x14E817C", Offset = "0x14E817C", VA = "0x14E817C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x969184", Offset = "0x969184")]
	private static int SetRectAnchorPosition(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000658")]
	[Address(RVA = "0x14E83B4", Offset = "0x14E83B4", VA = "0x14E83B4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9691E8", Offset = "0x9691E8")]
	private static int SetRectPivotByRect(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000659")]
	[Address(RVA = "0x14E85B0", Offset = "0x14E85B0", VA = "0x14E85B0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96924C", Offset = "0x96924C")]
	private static int SetRectPivot(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0x14E87CC", Offset = "0x14E87CC", VA = "0x14E87CC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9692B0", Offset = "0x9692B0")]
	private static int ChangeRendererStencil(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600065B")]
	[Address(RVA = "0x14E89C8", Offset = "0x14E89C8", VA = "0x14E89C8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x969314", Offset = "0x969314")]
	private static int SetAsFirstSibling(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600065C")]
	[Address(RVA = "0x14E8B6C", Offset = "0x14E8B6C", VA = "0x14E8B6C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x969378", Offset = "0x969378")]
	private static int SetAsLastSibling(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0x14E8D10", Offset = "0x14E8D10", VA = "0x14E8D10")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9693DC", Offset = "0x9693DC")]
	private static int SetAsFirstSiblingWithRect(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0x14E8EB4", Offset = "0x14E8EB4", VA = "0x14E8EB4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x969440", Offset = "0x969440")]
	private static int SetAsLastSiblingWithRect(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600065F")]
	[Address(RVA = "0x14E9058", Offset = "0x14E9058", VA = "0x14E9058")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9694A4", Offset = "0x9694A4")]
	private static int ForceRebuild(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000660")]
	[Address(RVA = "0x14E91FC", Offset = "0x14E91FC", VA = "0x14E91FC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x969508", Offset = "0x969508")]
	private static int SetGridSpacing(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000661")]
	[Address(RVA = "0x14E93F8", Offset = "0x14E93F8", VA = "0x14E93F8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96956C", Offset = "0x96956C")]
	private static int SetCompEnable(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000662")]
	[Address(RVA = "0x14E95C8", Offset = "0x14E95C8", VA = "0x14E95C8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9695D0", Offset = "0x9695D0")]
	private static int GetCanvasGroup(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0x14E976C", Offset = "0x14E976C", VA = "0x14E976C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x969634", Offset = "0x969634")]
	private static int GetCanvasGroupByGO(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0x14E9930", Offset = "0x14E9930", VA = "0x14E9930")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x969698", Offset = "0x969698")]
	private static int GetParentCanvasEnabledByGO(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0x14E9B10", Offset = "0x14E9B10", VA = "0x14E9B10")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9696FC", Offset = "0x9696FC")]
	private static int SetCanvasGroupAlpha(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0x14E9D00", Offset = "0x14E9D00", VA = "0x14E9D00")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x969760", Offset = "0x969760")]
	private static int SetGeneralColor(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0x14E9EF0", Offset = "0x14E9EF0", VA = "0x14E9EF0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9697C4", Offset = "0x9697C4")]
	private static int SetGeneralGray(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0x14EA0E0", Offset = "0x14EA0E0", VA = "0x14EA0E0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x969828", Offset = "0x969828")]
	private static int PlayAni(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000669")]
	[Address(RVA = "0x14EA2B0", Offset = "0x14EA2B0", VA = "0x14EA2B0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96988C", Offset = "0x96988C")]
	private static int GetAniTime(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0x14EA4C4", Offset = "0x14EA4C4", VA = "0x14EA4C4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9698F0", Offset = "0x9698F0")]
	private static int RestartTween(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0x14EA604", Offset = "0x14EA604", VA = "0x14EA604")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x969954", Offset = "0x969954")]
	private static int ReloadLuaChild(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600066C")]
	[Address(RVA = "0x14EA8E4", Offset = "0x14EA8E4", VA = "0x14EA8E4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9699B8", Offset = "0x9699B8")]
	private static int ReloadLuaChildWithPath(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600066D")]
	[Address(RVA = "0x14EAB88", Offset = "0x14EAB88", VA = "0x14EAB88")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x969A1C", Offset = "0x969A1C")]
	private static int SetGridConstraintCount(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0x14EAD8C", Offset = "0x14EAD8C", VA = "0x14EAD8C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x969A80", Offset = "0x969A80")]
	private static int GetTextFontSize(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0x14EAF6C", Offset = "0x14EAF6C", VA = "0x14EAF6C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x969AE4", Offset = "0x969AE4")]
	private static int SetTextFontSize(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000670")]
	[Address(RVA = "0x14EB170", Offset = "0x14EB170", VA = "0x14EB170")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x969B48", Offset = "0x969B48")]
	private static int PlayAnimator(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000671")]
	[Address(RVA = "0x14EB320", Offset = "0x14EB320", VA = "0x14EB320")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x969BAC", Offset = "0x969BAC")]
	private static int PlayAnimatorPause(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000672")]
	[Address(RVA = "0x14EB4D0", Offset = "0x14EB4D0", VA = "0x14EB4D0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x969C10", Offset = "0x969C10")]
	private static int KillTween(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0x14EB654", Offset = "0x14EB654", VA = "0x14EB654")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x969C74", Offset = "0x969C74")]
	private static int get_IsTouchUI(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0x14EC800", Offset = "0x14EC800", VA = "0x14EC800")]
	public Sword_Game_ViewToolWrap()
	{
	}
}
[Token(Token = "0x2000060")]
public class Sword_Guide_GuideMgrWrap
{
	[Token(Token = "0x6000675")]
	[Address(RVA = "0x14F2330", Offset = "0x14F2330", VA = "0x14F2330")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0x14EC808", Offset = "0x14EC808", VA = "0x14EC808")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x969CD8", Offset = "0x969CD8")]
	private static int _CreateSword_Guide_GuideMgr(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000677")]
	[Address(RVA = "0x14EC9C0", Offset = "0x14EC9C0", VA = "0x14EC9C0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x969D3C", Offset = "0x969D3C")]
	private static int Init(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000678")]
	[Address(RVA = "0x14ECBE4", Offset = "0x14ECBE4", VA = "0x14ECBE4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x969DA0", Offset = "0x969DA0")]
	private static int _newTemplateGO(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0x14ECDB8", Offset = "0x14ECDB8", VA = "0x14ECDB8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x969E04", Offset = "0x969E04")]
	private static int _doUINormal(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600067A")]
	[Address(RVA = "0x14ECFD0", Offset = "0x14ECFD0", VA = "0x14ECFD0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x969E68", Offset = "0x969E68")]
	private static int _doSceneNormal(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600067B")]
	[Address(RVA = "0x14ED1D0", Offset = "0x14ED1D0", VA = "0x14ED1D0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x969ECC", Offset = "0x969ECC")]
	private static int _doSearching(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600067C")]
	[Address(RVA = "0x14ED4BC", Offset = "0x14ED4BC", VA = "0x14ED4BC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x969F30", Offset = "0x969F30")]
	private static int _doUITarget(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0x14ED644", Offset = "0x14ED644", VA = "0x14ED644")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x969F94", Offset = "0x969F94")]
	private static int _doSceneTarget(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600067E")]
	[Address(RVA = "0x14ED7CC", Offset = "0x14ED7CC", VA = "0x14ED7CC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x969FF8", Offset = "0x969FF8")]
	private static int _setTouchSize(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0x14ED9CC", Offset = "0x14ED9CC", VA = "0x14ED9CC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96A05C", Offset = "0x96A05C")]
	private static int _setTouchSizeFull(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000680")]
	[Address(RVA = "0x14EDB54", Offset = "0x14EDB54", VA = "0x14EDB54")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96A0C0", Offset = "0x96A0C0")]
	private static int _doStop(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000681")]
	[Address(RVA = "0x14EDCDC", Offset = "0x14EDCDC", VA = "0x14EDCDC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96A124", Offset = "0x96A124")]
	private static int SetActiveRoot(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000682")]
	[Address(RVA = "0x14EDEB0", Offset = "0x14EDEB0", VA = "0x14EDEB0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96A188", Offset = "0x96A188")]
	private static int SetRectAnchor(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000683")]
	[Address(RVA = "0x14EE0F0", Offset = "0x14EE0F0", VA = "0x14EE0F0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96A1EC", Offset = "0x96A1EC")]
	private static int TestTouch(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000684")]
	[Address(RVA = "0x14EE278", Offset = "0x14EE278", VA = "0x14EE278")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96A250", Offset = "0x96A250")]
	private static int _doUITouch(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000685")]
	[Address(RVA = "0x14EE400", Offset = "0x14EE400", VA = "0x14EE400")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96A2B4", Offset = "0x96A2B4")]
	private static int _doSceneTouch(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000686")]
	[Address(RVA = "0x14EE5FC", Offset = "0x14EE5FC", VA = "0x14EE5FC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96A318", Offset = "0x96A318")]
	private static int _clearCurrentUIDepth(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000687")]
	[Address(RVA = "0x14EE784", Offset = "0x14EE784", VA = "0x14EE784")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96A37C", Offset = "0x96A37C")]
	private static int _clearSceneTarget(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000688")]
	[Address(RVA = "0x14EE90C", Offset = "0x14EE90C", VA = "0x14EE90C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96A3E0", Offset = "0x96A3E0")]
	private static int GetCurrentOrder(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000689")]
	[Address(RVA = "0x14EEAD0", Offset = "0x14EEAD0", VA = "0x14EEAD0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96A444", Offset = "0x96A444")]
	private static int ResetCurrentOrder(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600068A")]
	[Address(RVA = "0x14EECB8", Offset = "0x14EECB8", VA = "0x14EECB8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96A4A8", Offset = "0x96A4A8")]
	private static int SetAppointedGuidePos(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600068B")]
	[Address(RVA = "0x14EEEF8", Offset = "0x14EEEF8", VA = "0x14EEEF8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96A50C", Offset = "0x96A50C")]
	private static int ClearAppointedGuidePos(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600068C")]
	[Address(RVA = "0x14EF080", Offset = "0x14EF080", VA = "0x14EF080")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96A570", Offset = "0x96A570")]
	private static int ResetOrder(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600068D")]
	[Address(RVA = "0x14EF2EC", Offset = "0x14EF2EC", VA = "0x14EF2EC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96A5D4", Offset = "0x96A5D4")]
	private static int ResetRootOrder(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600068E")]
	[Address(RVA = "0x14EF4D4", Offset = "0x14EF4D4", VA = "0x14EF4D4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96A638", Offset = "0x96A638")]
	private static int SetBgRaycast(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600068F")]
	[Address(RVA = "0x14EF6A8", Offset = "0x14EF6A8", VA = "0x14EF6A8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96A69C", Offset = "0x96A69C")]
	private static int SetBgAlpha(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000690")]
	[Address(RVA = "0x14EF87C", Offset = "0x14EF87C", VA = "0x14EF87C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96A700", Offset = "0x96A700")]
	private static int UpdateAntiMask(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000691")]
	[Address(RVA = "0x14EFA78", Offset = "0x14EFA78", VA = "0x14EFA78")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96A764", Offset = "0x96A764")]
	private static int SetAppointedGuideAttrID(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000692")]
	[Address(RVA = "0x14EFC58", Offset = "0x14EFC58", VA = "0x14EFC58")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96A7C8", Offset = "0x96A7C8")]
	private static int SetAppointedTransform(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000693")]
	[Address(RVA = "0x14EFE0C", Offset = "0x14EFE0C", VA = "0x14EFE0C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96A82C", Offset = "0x96A82C")]
	private static int TryDoFingerAnim(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000694")]
	[Address(RVA = "0x14F0028", Offset = "0x14F0028", VA = "0x14F0028")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96A890", Offset = "0x96A890")]
	private static int ClearFingerTween(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000695")]
	[Address(RVA = "0x14F01B0", Offset = "0x14F01B0", VA = "0x14F01B0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96A8F4", Offset = "0x96A8F4")]
	private static int SetGuideState(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000696")]
	[Address(RVA = "0x14F0390", Offset = "0x14F0390", VA = "0x14F0390")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96A958", Offset = "0x96A958")]
	private static int IsEmbattleGuideValid(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000697")]
	[Address(RVA = "0x14F05C8", Offset = "0x14F05C8", VA = "0x14F05C8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96A9BC", Offset = "0x96A9BC")]
	private static int SyncArrow(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000698")]
	[Address(RVA = "0x14F0844", Offset = "0x14F0844", VA = "0x14F0844")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96AA20", Offset = "0x96AA20")]
	private static int get__currentSceneRaycastTransform(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000699")]
	[Address(RVA = "0x14F09E4", Offset = "0x14F09E4", VA = "0x14F09E4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96AA84", Offset = "0x96AA84")]
	private static int get__currentRaycastTransform(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600069A")]
	[Address(RVA = "0x14F0B8C", Offset = "0x14F0B8C", VA = "0x14F0B8C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96AAE8", Offset = "0x96AAE8")]
	private static int get_IsChecking(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600069B")]
	[Address(RVA = "0x14F0D54", Offset = "0x14F0D54", VA = "0x14F0D54")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96AB4C", Offset = "0x96AB4C")]
	private static int get__rectRoot(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600069C")]
	[Address(RVA = "0x14F0EFC", Offset = "0x14F0EFC", VA = "0x14F0EFC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96ABB0", Offset = "0x96ABB0")]
	private static int get__rectTouch(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600069D")]
	[Address(RVA = "0x14F10A4", Offset = "0x14F10A4", VA = "0x14F10A4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96AC14", Offset = "0x96AC14")]
	private static int get_IsNeedActiveCam(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600069E")]
	[Address(RVA = "0x14F126C", Offset = "0x14F126C", VA = "0x14F126C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96AC78", Offset = "0x96AC78")]
	private static int get_PosRectTouch(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600069F")]
	[Address(RVA = "0x14F1418", Offset = "0x14F1418", VA = "0x14F1418")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96ACDC", Offset = "0x96ACDC")]
	private static int get_SizeRectTouch(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0x14F15C4", Offset = "0x14F15C4", VA = "0x14F15C4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96AD40", Offset = "0x96AD40")]
	private static int get_IsRunning(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0x14F1798", Offset = "0x14F1798", VA = "0x14F1798")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96ADA4", Offset = "0x96ADA4")]
	private static int set__currentSceneRaycastTransform(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0x14F1980", Offset = "0x14F1980", VA = "0x14F1980")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96AE08", Offset = "0x96AE08")]
	private static int set__currentRaycastTransform(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0x14F1B88", Offset = "0x14F1B88", VA = "0x14F1B88")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96AE6C", Offset = "0x96AE6C")]
	private static int set_IsChecking(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0x14F1D54", Offset = "0x14F1D54", VA = "0x14F1D54")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96AED0", Offset = "0x96AED0")]
	private static int set__rectRoot(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0x14F1F5C", Offset = "0x14F1F5C", VA = "0x14F1F5C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96AF34", Offset = "0x96AF34")]
	private static int set__rectTouch(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0x14F2164", Offset = "0x14F2164", VA = "0x14F2164")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96AF98", Offset = "0x96AF98")]
	private static int set_IsNeedActiveCam(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0x14F2FF8", Offset = "0x14F2FF8", VA = "0x14F2FF8")]
	public Sword_Guide_GuideMgrWrap()
	{
	}
}
[Token(Token = "0x2000061")]
public class Sword_IComWrap
{
	[Token(Token = "0x60006A8")]
	[Address(RVA = "0x14F3000", Offset = "0x14F3000", VA = "0x14F3000")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0x14F3098", Offset = "0x14F3098", VA = "0x14F3098")]
	public Sword_IComWrap()
	{
	}
}
[Token(Token = "0x2000062")]
public class Sword_LogicWrap
{
	[Token(Token = "0x60006AA")]
	[Address(RVA = "0x14F30A0", Offset = "0x14F30A0", VA = "0x14F30A0")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0x14F31A4", Offset = "0x14F31A4", VA = "0x14F31A4")]
	public Sword_LogicWrap()
	{
	}
}
[Token(Token = "0x2000063")]
public class Sword_MsgPacketWrap
{
	[Token(Token = "0x60006AC")]
	[Address(RVA = "0x14F3DFC", Offset = "0x14F3DFC", VA = "0x14F3DFC")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0x14F31AC", Offset = "0x14F31AC", VA = "0x14F31AC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96AFFC", Offset = "0x96AFFC")]
	private static int GetMessage(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0x14F3358", Offset = "0x14F3358", VA = "0x14F3358")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96B060", Offset = "0x96B060")]
	private static int get_type(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0x14F351C", Offset = "0x14F351C", VA = "0x14F351C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96B0C4", Offset = "0x96B0C4")]
	private static int get_code1(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0x14F36E0", Offset = "0x14F36E0", VA = "0x14F36E0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96B128", Offset = "0x96B128")]
	private static int get_typeName(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0x14F38A4", Offset = "0x14F38A4", VA = "0x14F38A4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96B18C", Offset = "0x96B18C")]
	private static int set_type(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0x14F3A84", Offset = "0x14F3A84", VA = "0x14F3A84")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96B1F0", Offset = "0x96B1F0")]
	private static int set_code1(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0x14F3C58", Offset = "0x14F3C58", VA = "0x14F3C58")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96B254", Offset = "0x96B254")]
	private static int set_typeName(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0x14F4080", Offset = "0x14F4080", VA = "0x14F4080")]
	public Sword_MsgPacketWrap()
	{
	}
}
[Token(Token = "0x2000064")]
public class Sword_MySequenceWrap
{
	[Token(Token = "0x60006B5")]
	[Address(RVA = "0x14F4088", Offset = "0x14F4088", VA = "0x14F4088")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0x14F418C", Offset = "0x14F418C", VA = "0x14F418C")]
	public Sword_MySequenceWrap()
	{
	}
}
[Token(Token = "0x2000065")]
public class Sword_MyTeenerWrap
{
	[Token(Token = "0x60006B7")]
	[Address(RVA = "0x14F4194", Offset = "0x14F4194", VA = "0x14F4194")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0x14F4298", Offset = "0x14F4298", VA = "0x14F4298")]
	public Sword_MyTeenerWrap()
	{
	}
}
[Token(Token = "0x2000066")]
public class Sword_QSingleton_Sword_CacheWrap
{
	[Token(Token = "0x60006B9")]
	[Address(RVA = "0x14F4764", Offset = "0x14F4764", VA = "0x14F4764")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0x14F42A0", Offset = "0x14F42A0", VA = "0x14F42A0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96B2B8", Offset = "0x96B2B8")]
	private static int Dispose(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0x14F4454", Offset = "0x14F4454", VA = "0x14F4454")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96B31C", Offset = "0x96B31C")]
	private static int OnSingletonInit(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0x14F4608", Offset = "0x14F4608", VA = "0x14F4608")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96B380", Offset = "0x96B380")]
	private static int get_Instance(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0x14F493C", Offset = "0x14F493C", VA = "0x14F493C")]
	public Sword_QSingleton_Sword_CacheWrap()
	{
	}
}
[Token(Token = "0x2000067")]
public class Sword_QSingleton_Sword_Framework_QualityMgrWrap
{
	[Token(Token = "0x60006BE")]
	[Address(RVA = "0x14F4944", Offset = "0x14F4944", VA = "0x14F4944")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0x14F4A50", Offset = "0x14F4A50", VA = "0x14F4A50")]
	public Sword_QSingleton_Sword_Framework_QualityMgrWrap()
	{
	}
}
[Token(Token = "0x2000068")]
public class Sword_QSingleton_Sword_Framework_UICameraWrap
{
	[Token(Token = "0x60006C0")]
	[Address(RVA = "0x14F4A58", Offset = "0x14F4A58", VA = "0x14F4A58")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0x14F4B64", Offset = "0x14F4B64", VA = "0x14F4B64")]
	public Sword_QSingleton_Sword_Framework_UICameraWrap()
	{
	}
}
[Token(Token = "0x2000069")]
public class Sword_QSingleton_Sword_Game_MainCameraWrap
{
	[Token(Token = "0x60006C2")]
	[Address(RVA = "0x14F4B6C", Offset = "0x14F4B6C", VA = "0x14F4B6C")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0x14F4C78", Offset = "0x14F4C78", VA = "0x14F4C78")]
	public Sword_QSingleton_Sword_Game_MainCameraWrap()
	{
	}
}
[Token(Token = "0x200006A")]
public class Sword_QSingleton_Sword_Guide_GuideMgrWrap
{
	[Token(Token = "0x60006C4")]
	[Address(RVA = "0x14F5144", Offset = "0x14F5144", VA = "0x14F5144")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0x14F4C80", Offset = "0x14F4C80", VA = "0x14F4C80")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96B3E4", Offset = "0x96B3E4")]
	private static int Dispose(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0x14F4E34", Offset = "0x14F4E34", VA = "0x14F4E34")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96B448", Offset = "0x96B448")]
	private static int OnSingletonInit(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0x14F4FE8", Offset = "0x14F4FE8", VA = "0x14F4FE8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96B4AC", Offset = "0x96B4AC")]
	private static int get_Instance(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0x14F531C", Offset = "0x14F531C", VA = "0x14F531C")]
	public Sword_QSingleton_Sword_Guide_GuideMgrWrap()
	{
	}
}
[Token(Token = "0x200006B")]
public class Sword_RefCounterWrap
{
	[Token(Token = "0x60006C9")]
	[Address(RVA = "0x14F5324", Offset = "0x14F5324", VA = "0x14F5324")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0x14F5428", Offset = "0x14F5428", VA = "0x14F5428")]
	public Sword_RefCounterWrap()
	{
	}
}
[Token(Token = "0x200006C")]
public class Sword_ResourceWrap
{
	[Token(Token = "0x60006CB")]
	[Address(RVA = "0x14F9858", Offset = "0x14F9858", VA = "0x14F9858")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0x14F5430", Offset = "0x14F5430", VA = "0x14F5430")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96B510", Offset = "0x96B510")]
	private static int AddCallback(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0x14F5778", Offset = "0x14F5778", VA = "0x14F5778")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96B574", Offset = "0x96B574")]
	private static int GetCallbacks(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0x14F5920", Offset = "0x14F5920", VA = "0x14F5920")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96B5D8", Offset = "0x96B5D8")]
	private static int OnCallBack(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0x14F5AA8", Offset = "0x14F5AA8", VA = "0x14F5AA8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96B63C", Offset = "0x96B63C")]
	private static int LoadAsync(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0x14F5C60", Offset = "0x14F5C60", VA = "0x14F5C60")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96B6A0", Offset = "0x96B6A0")]
	private static int LoadSync(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0x14F5E18", Offset = "0x14F5E18", VA = "0x14F5E18")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96B704", Offset = "0x96B704")]
	private static int GetDependence(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0x14F5FE8", Offset = "0x14F5FE8", VA = "0x14F5FE8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96B768", Offset = "0x96B768")]
	private static int IsFinishByAsync(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0x14F61DC", Offset = "0x14F61DC", VA = "0x14F61DC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96B7CC", Offset = "0x96B7CC")]
	private static int UnLoadAsset(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0x14F6394", Offset = "0x14F6394", VA = "0x14F6394")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96B830", Offset = "0x96B830")]
	private static int GetBytes(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0x14F6564", Offset = "0x14F6564", VA = "0x14F6564")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96B894", Offset = "0x96B894")]
	private static int GetTxt(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0x14F6758", Offset = "0x14F6758", VA = "0x14F6758")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96B8F8", Offset = "0x96B8F8")]
	private static int Retain(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60006D7")]
	[Address(RVA = "0x14F690C", Offset = "0x14F690C", VA = "0x14F690C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96B95C", Offset = "0x96B95C")]
	private static int Release(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0x14F6AC0", Offset = "0x14F6AC0", VA = "0x14F6AC0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96B9C0", Offset = "0x96B9C0")]
	private static int InitPoolable(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0x14F6C74", Offset = "0x14F6C74", VA = "0x14F6C74")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96BA24", Offset = "0x96BA24")]
	private static int ResetPoolable(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0x14F6E28", Offset = "0x14F6E28", VA = "0x14F6E28")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96BA88", Offset = "0x96BA88")]
	private static int Remove(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0x14F6FE0", Offset = "0x14F6FE0", VA = "0x14F6FE0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96BAEC", Offset = "0x96BAEC")]
	private static int Delete(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0x14F7168", Offset = "0x14F7168", VA = "0x14F7168")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96BB50", Offset = "0x96BB50")]
	private static int GetPoolType(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0x14F735C", Offset = "0x14F735C", VA = "0x14F735C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96BBB4", Offset = "0x96BBB4")]
	private static int LoadSprites(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0x14F74E4", Offset = "0x14F74E4", VA = "0x14F74E4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96BC18", Offset = "0x96BC18")]
	private static int GetSprite(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0x14F76EC", Offset = "0x14F76EC", VA = "0x14F76EC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96BC7C", Offset = "0x96BC7C")]
	private static int get_OnZeroRefAsset(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0x14F7824", Offset = "0x14F7824", VA = "0x14F7824")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96BCE0", Offset = "0x96BCE0")]
	private static int get_mFileType(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0x14F79EC", Offset = "0x14F79EC", VA = "0x14F79EC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96BD44", Offset = "0x96BD44")]
	private static int get_mAssetType(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0x14F7BB4", Offset = "0x14F7BB4", VA = "0x14F7BB4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96BDA8", Offset = "0x96BDA8")]
	private static int get_mAssetUsedState(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0x14F7D7C", Offset = "0x14F7D7C", VA = "0x14F7D7C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96BE0C", Offset = "0x96BE0C")]
	private static int get_AssetState(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0x14F7F40", Offset = "0x14F7F40", VA = "0x14F7F40")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96BE70", Offset = "0x96BE70")]
	private static int get_AssetLevel(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0x14F8108", Offset = "0x14F8108", VA = "0x14F8108")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96BED4", Offset = "0x96BED4")]
	private static int get_mIsLoad(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0x14F82D0", Offset = "0x14F82D0", VA = "0x14F82D0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96BF38", Offset = "0x96BF38")]
	private static int get_Obj(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0x14F84B4", Offset = "0x14F84B4", VA = "0x14F84B4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96BF9C", Offset = "0x96BF9C")]
	private static int get_Prefab(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0x14F866C", Offset = "0x14F866C", VA = "0x14F866C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96C000", Offset = "0x96C000")]
	private static int get_Path(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0x14F8840", Offset = "0x14F8840", VA = "0x14F8840")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96C064", Offset = "0x96C064")]
	private static int get_IsLoaded(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0x14F8A14", Offset = "0x14F8A14", VA = "0x14F8A14")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96C0C8", Offset = "0x96C0C8")]
	private static int set_OnZeroRefAsset(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0x14F8B78", Offset = "0x14F8B78", VA = "0x14F8B78")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96C12C", Offset = "0x96C12C")]
	private static int set_mFileType(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0x14F8D58", Offset = "0x14F8D58", VA = "0x14F8D58")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96C190", Offset = "0x96C190")]
	private static int set_mAssetType(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0x14F8F38", Offset = "0x14F8F38", VA = "0x14F8F38")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96C1F4", Offset = "0x96C1F4")]
	private static int set_mAssetUsedState(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0x14F9118", Offset = "0x14F9118", VA = "0x14F9118")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96C258", Offset = "0x96C258")]
	private static int set_AssetState(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0x14F92F8", Offset = "0x14F92F8", VA = "0x14F92F8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96C2BC", Offset = "0x96C2BC")]
	private static int set_AssetLevel(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0x14F94D8", Offset = "0x14F94D8", VA = "0x14F94D8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96C320", Offset = "0x96C320")]
	private static int set_mIsLoad(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0x14F96A4", Offset = "0x14F96A4", VA = "0x14F96A4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96C384", Offset = "0x96C384")]
	private static int set_Path(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0x14FA230", Offset = "0x14FA230", VA = "0x14FA230")]
	public Sword_ResourceWrap()
	{
	}
}
[Token(Token = "0x200006D")]
public class Sword_SBehaviourWrap
{
	[Token(Token = "0x60006F3")]
	[Address(RVA = "0x14FA47C", Offset = "0x14FA47C", VA = "0x14FA47C")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0x14FA238", Offset = "0x14FA238", VA = "0x14FA238")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96C3E8", Offset = "0x96C3E8")]
	private static int op_Equality(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0x14FA5C8", Offset = "0x14FA5C8", VA = "0x14FA5C8")]
	public Sword_SBehaviourWrap()
	{
	}
}
[Token(Token = "0x200006E")]
public class Sword_SComponentWrap
{
	[Token(Token = "0x60006F6")]
	[Address(RVA = "0x14FA5D0", Offset = "0x14FA5D0", VA = "0x14FA5D0")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0x14FA6D4", Offset = "0x14FA6D4", VA = "0x14FA6D4")]
	public Sword_SComponentWrap()
	{
	}
}
[Token(Token = "0x200006F")]
public class Sword_SEntityWrap
{
	[Token(Token = "0x60006F8")]
	[Address(RVA = "0x14FA6DC", Offset = "0x14FA6DC", VA = "0x14FA6DC")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0x14FA7E0", Offset = "0x14FA7E0", VA = "0x14FA7E0")]
	public Sword_SEntityWrap()
	{
	}
}
[Token(Token = "0x2000070")]
public class Sword_SingletonMonoBehaviour_Sword_AudioMgrWrap
{
	[Token(Token = "0x60006FA")]
	[Address(RVA = "0x14FAA2C", Offset = "0x14FAA2C", VA = "0x14FAA2C")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0x14FA7E8", Offset = "0x14FA7E8", VA = "0x14FA7E8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96C44C", Offset = "0x96C44C")]
	private static int op_Equality(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0x14FAB80", Offset = "0x14FAB80", VA = "0x14FAB80")]
	public Sword_SingletonMonoBehaviour_Sword_AudioMgrWrap()
	{
	}
}
[Token(Token = "0x2000071")]
public class Sword_TweenUtilWrap
{
	[Token(Token = "0x60006FD")]
	[Address(RVA = "0x14FFE8C", Offset = "0x14FFE8C", VA = "0x14FFE8C")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0x14FAB88", Offset = "0x14FAB88", VA = "0x14FAB88")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96C4B0", Offset = "0x96C4B0")]
	private static int _CreateSword_TweenUtil(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0x14FAD40", Offset = "0x14FAD40", VA = "0x14FAD40")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96C514", Offset = "0x96C514")]
	private static int PlayMove(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0x14FAF68", Offset = "0x14FAF68", VA = "0x14FAF68")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96C578", Offset = "0x96C578")]
	private static int PlayAlpha(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0x14FB1D4", Offset = "0x14FB1D4", VA = "0x14FB1D4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96C5DC", Offset = "0x96C5DC")]
	private static int PlayLocalRotateLoop(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0x14FB44C", Offset = "0x14FB44C", VA = "0x14FB44C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96C640", Offset = "0x96C640")]
	private static int PlayMoveTo(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0x14FB694", Offset = "0x14FB694", VA = "0x14FB694")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96C6A4", Offset = "0x96C6A4")]
	private static int PlayColor(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000704")]
	[Address(RVA = "0x14FB8BC", Offset = "0x14FB8BC", VA = "0x14FB8BC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96C708", Offset = "0x96C708")]
	private static int PlayScale(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0x14FBB04", Offset = "0x14FBB04", VA = "0x14FBB04")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96C76C", Offset = "0x96C76C")]
	private static int PlayRoate(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0x14FBD4C", Offset = "0x14FBD4C", VA = "0x14FBD4C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96C7D0", Offset = "0x96C7D0")]
	private static int PlayLocalRotate(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0x14FBF94", Offset = "0x14FBF94", VA = "0x14FBF94")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96C834", Offset = "0x96C834")]
	private static int PlayWorldMoveTo(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0x14FC1DC", Offset = "0x14FC1DC", VA = "0x14FC1DC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96C898", Offset = "0x96C898")]
	private static int DOBlendableLocalMoveBy(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0x14FC410", Offset = "0x14FC410", VA = "0x14FC410")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96C8FC", Offset = "0x96C8FC")]
	private static int PlayScaleWithCall(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0x14FC664", Offset = "0x14FC664", VA = "0x14FC664")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96C960", Offset = "0x96C960")]
	private static int TweenValue(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0x14FC880", Offset = "0x14FC880", VA = "0x14FC880")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96C9C4", Offset = "0x96C9C4")]
	private static int TweenValueWithFormat(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0x14FCADC", Offset = "0x14FCADC", VA = "0x14FCADC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96CA28", Offset = "0x96CA28")]
	private static int TweenTimeValue(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0x14FCD1C", Offset = "0x14FCD1C", VA = "0x14FCD1C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96CA8C", Offset = "0x96CA8C")]
	private static int TweenText(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0x14FCF34", Offset = "0x14FCF34", VA = "0x14FCF34")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96CAF0", Offset = "0x96CAF0")]
	private static int TweenTextFont(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0x14FD158", Offset = "0x14FD158", VA = "0x14FD158")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96CB54", Offset = "0x96CB54")]
	private static int TweenSlider(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0x14FD370", Offset = "0x14FD370", VA = "0x14FD370")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96CBB8", Offset = "0x96CBB8")]
	private static int TweenChildScale(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000711")]
	[Address(RVA = "0x14FD5B8", Offset = "0x14FD5B8", VA = "0x14FD5B8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96CC1C", Offset = "0x96CC1C")]
	private static int TweenCanvasAlpha(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000712")]
	[Address(RVA = "0x14FD7F0", Offset = "0x14FD7F0", VA = "0x14FD7F0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96CC80", Offset = "0x96CC80")]
	private static int PlayMoveToWithCall(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0x14FDA58", Offset = "0x14FDA58", VA = "0x14FDA58")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96CCE4", Offset = "0x96CCE4")]
	private static int PlayWorldMoveToWithCall(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0x14FDCC0", Offset = "0x14FDCC0", VA = "0x14FDCC0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96CD48", Offset = "0x96CD48")]
	private static int PlayBezierPath(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0x14FDF58", Offset = "0x14FDF58", VA = "0x14FDF58")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96CDAC", Offset = "0x96CDAC")]
	private static int Parabola(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000716")]
	[Address(RVA = "0x14FE178", Offset = "0x14FE178", VA = "0x14FE178")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96CE10", Offset = "0x96CE10")]
	private static int GetCurveFromLuaTable(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000717")]
	[Address(RVA = "0x14FE2D0", Offset = "0x14FE2D0", VA = "0x14FE2D0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96CE74", Offset = "0x96CE74")]
	private static int DOLocalMoveXWithCurve(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000718")]
	[Address(RVA = "0x14FE57C", Offset = "0x14FE57C", VA = "0x14FE57C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96CED8", Offset = "0x96CED8")]
	private static int DOLocalMoveYWithCurve(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000719")]
	[Address(RVA = "0x14FE828", Offset = "0x14FE828", VA = "0x14FE828")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96CF3C", Offset = "0x96CF3C")]
	private static int DoLoacalScaleWithCurve(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600071A")]
	[Address(RVA = "0x14FEAD4", Offset = "0x14FEAD4", VA = "0x14FEAD4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96CFA0", Offset = "0x96CFA0")]
	private static int DoLoacalScaleVector3WithCurve(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0x14FED9C", Offset = "0x14FED9C", VA = "0x14FED9C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96D004", Offset = "0x96D004")]
	private static int DOMoveXWithCurve(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600071C")]
	[Address(RVA = "0x14FF048", Offset = "0x14FF048", VA = "0x14FF048")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96D068", Offset = "0x96D068")]
	private static int DOMoveYWithCurve(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600071D")]
	[Address(RVA = "0x14FF2F4", Offset = "0x14FF2F4", VA = "0x14FF2F4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96D0CC", Offset = "0x96D0CC")]
	private static int DOMoveZWithCurve(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600071E")]
	[Address(RVA = "0x14FF5A0", Offset = "0x14FF5A0", VA = "0x14FF5A0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96D130", Offset = "0x96D130")]
	private static int DOLocalRotateVector3WithCurve(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600071F")]
	[Address(RVA = "0x14FF868", Offset = "0x14FF868", VA = "0x14FF868")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96D194", Offset = "0x96D194")]
	private static int KillMyTween(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000720")]
	[Address(RVA = "0x14FF9EC", Offset = "0x14FF9EC", VA = "0x14FF9EC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96D1F8", Offset = "0x96D1F8")]
	private static int ChangeMyTweenTimeScale(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000721")]
	[Address(RVA = "0x14FFBBC", Offset = "0x14FFBBC", VA = "0x14FFBBC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96D25C", Offset = "0x96D25C")]
	private static int PlayXxlTargetCollectTween(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000722")]
	[Address(RVA = "0x1500898", Offset = "0x1500898", VA = "0x1500898")]
	public Sword_TweenUtilWrap()
	{
	}
}
[Token(Token = "0x2000072")]
public class Sword_TypewriterEffectWrap
{
	[Token(Token = "0x6000723")]
	[Address(RVA = "0x1500C98", Offset = "0x1500C98", VA = "0x1500C98")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x6000724")]
	[Address(RVA = "0x15008A0", Offset = "0x15008A0", VA = "0x15008A0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96D2C0", Offset = "0x96D2C0")]
	private static int PlayEffect(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000725")]
	[Address(RVA = "0x1500A54", Offset = "0x1500A54", VA = "0x1500A54")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96D324", Offset = "0x96D324")]
	private static int op_Equality(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000726")]
	[Address(RVA = "0x1500E24", Offset = "0x1500E24", VA = "0x1500E24")]
	public Sword_TypewriterEffectWrap()
	{
	}
}
[Token(Token = "0x2000073")]
public class Sword_UtilGameObjectWrap
{
	[Token(Token = "0x6000727")]
	[Address(RVA = "0x150532C", Offset = "0x150532C", VA = "0x150532C")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x6000728")]
	[Address(RVA = "0x1500E2C", Offset = "0x1500E2C", VA = "0x1500E2C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96D388", Offset = "0x96D388")]
	private static int Clone(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000729")]
	[Address(RVA = "0x15011D0", Offset = "0x15011D0", VA = "0x15011D0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96D3EC", Offset = "0x96D3EC")]
	private static int CloneWithInitPos(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600072A")]
	[Address(RVA = "0x1501400", Offset = "0x1501400", VA = "0x1501400")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96D450", Offset = "0x96D450")]
	private static int AddNewChildTo(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600072B")]
	[Address(RVA = "0x1501728", Offset = "0x1501728", VA = "0x1501728")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96D4B4", Offset = "0x96D4B4")]
	private static int ClearChildren(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600072C")]
	[Address(RVA = "0x15018CC", Offset = "0x15018CC", VA = "0x15018CC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96D518", Offset = "0x96D518")]
	private static int CopyLocalTransform(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600072D")]
	[Address(RVA = "0x1501AC8", Offset = "0x1501AC8", VA = "0x1501AC8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96D57C", Offset = "0x96D57C")]
	private static int Reset(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600072E")]
	[Address(RVA = "0x1501C6C", Offset = "0x1501C6C", VA = "0x1501C6C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96D5E0", Offset = "0x96D5E0")]
	private static int GetChild(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600072F")]
	[Address(RVA = "0x150205C", Offset = "0x150205C", VA = "0x150205C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96D644", Offset = "0x96D644")]
	private static int FindChild(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000730")]
	[Address(RVA = "0x1502248", Offset = "0x1502248", VA = "0x1502248")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96D6A8", Offset = "0x96D6A8")]
	private static int AddMissingChild(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000731")]
	[Address(RVA = "0x1502434", Offset = "0x1502434", VA = "0x1502434")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96D70C", Offset = "0x96D70C")]
	private static int ChangeLayerRecursively(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000732")]
	[Address(RVA = "0x1502618", Offset = "0x1502618", VA = "0x1502618")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96D770", Offset = "0x96D770")]
	private static int GetChildByIndex(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000733")]
	[Address(RVA = "0x1502838", Offset = "0x1502838", VA = "0x1502838")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96D7D4", Offset = "0x96D7D4")]
	private static int RemoveComponent(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000734")]
	[Address(RVA = "0x1502B00", Offset = "0x1502B00", VA = "0x1502B00")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96D838", Offset = "0x96D838")]
	private static int DestroySelf(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000735")]
	[Address(RVA = "0x1502CA4", Offset = "0x1502CA4", VA = "0x1502CA4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96D89C", Offset = "0x96D89C")]
	private static int GetChilds(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000736")]
	[Address(RVA = "0x1502E60", Offset = "0x1502E60", VA = "0x1502E60")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96D900", Offset = "0x96D900")]
	private static int RemoveAllChildren(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000737")]
	[Address(RVA = "0x1503004", Offset = "0x1503004", VA = "0x1503004")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96D964", Offset = "0x96D964")]
	private static int AddChildToParent(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000738")]
	[Address(RVA = "0x15036F8", Offset = "0x15036F8", VA = "0x15036F8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96D9C8", Offset = "0x96D9C8")]
	private static int AddPrefabChildTo(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000739")]
	[Address(RVA = "0x150392C", Offset = "0x150392C", VA = "0x150392C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96DA2C", Offset = "0x96DA2C")]
	private static int AddChild(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600073A")]
	[Address(RVA = "0x1503BAC", Offset = "0x1503BAC", VA = "0x1503BAC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96DA90", Offset = "0x96DA90")]
	private static int AddPrefab(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600073B")]
	[Address(RVA = "0x1503E2C", Offset = "0x1503E2C", VA = "0x1503E2C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96DAF4", Offset = "0x96DAF4")]
	private static int AddNewChild(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600073C")]
	[Address(RVA = "0x1504154", Offset = "0x1504154", VA = "0x1504154")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96DB58", Offset = "0x96DB58")]
	private static int AddViewToParent(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600073D")]
	[Address(RVA = "0x15043C4", Offset = "0x15043C4", VA = "0x15043C4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96DBBC", Offset = "0x96DBBC")]
	private static int AddViewToParentRecusive(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600073E")]
	[Address(RVA = "0x1504650", Offset = "0x1504650", VA = "0x1504650")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96DC20", Offset = "0x96DC20")]
	private static int ReParent(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600073F")]
	[Address(RVA = "0x15047F4", Offset = "0x15047F4", VA = "0x15047F4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96DC84", Offset = "0x96DC84")]
	private static int SetLayer(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000740")]
	[Address(RVA = "0x1504A1C", Offset = "0x1504A1C", VA = "0x1504A1C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96DCE8", Offset = "0x96DCE8")]
	private static int SyncLayer(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000741")]
	[Address(RVA = "0x1504C58", Offset = "0x1504C58", VA = "0x1504C58")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96DD4C", Offset = "0x96DD4C")]
	private static int AddGameObject(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000742")]
	[Address(RVA = "0x1504DB8", Offset = "0x1504DB8", VA = "0x1504DB8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96DDB0", Offset = "0x96DDB0")]
	private static int AddCanvasComponent(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000743")]
	[Address(RVA = "0x1504F7C", Offset = "0x1504F7C", VA = "0x1504F7C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96DE14", Offset = "0x96DE14")]
	private static int PlayAnimByName(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000744")]
	[Address(RVA = "0x150514C", Offset = "0x150514C", VA = "0x150514C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96DE78", Offset = "0x96DE78")]
	private static int GetFullPath(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000745")]
	[Address(RVA = "0x1505AE4", Offset = "0x1505AE4", VA = "0x1505AE4")]
	public Sword_UtilGameObjectWrap()
	{
	}
}
[Token(Token = "0x2000074")]
public class UnityEngine_AnimationBlendModeWrap
{
	[Token(Token = "0x6000746")]
	[Address(RVA = "0xF59E08", Offset = "0xF59E08", VA = "0xF59E08")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x6000747")]
	[Address(RVA = "0xF5A03C", Offset = "0xF5A03C", VA = "0xF5A03C")]
	private static void Push(IntPtr L, AnimationBlendMode arg)
	{
	}

	[Token(Token = "0x6000748")]
	[Address(RVA = "0xF5A0D8", Offset = "0xF5A0D8", VA = "0xF5A0D8")]
	private static bool CheckType(IntPtr L, int pos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000749")]
	[Address(RVA = "0xF59BE8", Offset = "0xF59BE8", VA = "0xF59BE8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96DEDC", Offset = "0x96DEDC")]
	private static int get_Blend(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600074A")]
	[Address(RVA = "0xF59C84", Offset = "0xF59C84", VA = "0xF59C84")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96DF40", Offset = "0x96DF40")]
	private static int get_Additive(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0xF59D24", Offset = "0xF59D24", VA = "0xF59D24")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96DFA4", Offset = "0x96DFA4")]
	private static int IntToEnum(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600074C")]
	[Address(RVA = "0xF5A194", Offset = "0xF5A194", VA = "0xF5A194")]
	public UnityEngine_AnimationBlendModeWrap()
	{
	}
}
[Token(Token = "0x2000075")]
public class UnityEngine_AnimationClipWrap
{
	[Token(Token = "0x600074D")]
	[Address(RVA = "0xF5CD18", Offset = "0xF5CD18", VA = "0xF5CD18")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x600074E")]
	[Address(RVA = "0xF5A19C", Offset = "0xF5A19C", VA = "0xF5A19C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96E008", Offset = "0x96E008")]
	private static int _CreateUnityEngine_AnimationClip(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600074F")]
	[Address(RVA = "0xF5A35C", Offset = "0xF5A35C", VA = "0xF5A35C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96E06C", Offset = "0x96E06C")]
	private static int SampleAnimation(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000750")]
	[Address(RVA = "0xF5A5AC", Offset = "0xF5A5AC", VA = "0xF5A5AC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96E0D0", Offset = "0x96E0D0")]
	private static int SetCurve(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000751")]
	[Address(RVA = "0xF5A824", Offset = "0xF5A824", VA = "0xF5A824")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96E134", Offset = "0x96E134")]
	private static int EnsureQuaternionContinuity(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000752")]
	[Address(RVA = "0xF5A9CC", Offset = "0xF5A9CC", VA = "0xF5A9CC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96E198", Offset = "0x96E198")]
	private static int ClearCurves(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000753")]
	[Address(RVA = "0xF5AB74", Offset = "0xF5AB74", VA = "0xF5AB74")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96E1FC", Offset = "0x96E1FC")]
	private static int AddEvent(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000754")]
	[Address(RVA = "0xF5AD88", Offset = "0xF5AD88", VA = "0xF5AD88")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96E260", Offset = "0x96E260")]
	private static int op_Equality(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000755")]
	[Address(RVA = "0xF5AFCC", Offset = "0xF5AFCC", VA = "0xF5AFCC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96E2C4", Offset = "0x96E2C4")]
	private static int get_length(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000756")]
	[Address(RVA = "0xF5B190", Offset = "0xF5B190", VA = "0xF5B190")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96E328", Offset = "0x96E328")]
	private static int get_frameRate(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000757")]
	[Address(RVA = "0xF5B354", Offset = "0xF5B354", VA = "0xF5B354")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96E38C", Offset = "0x96E38C")]
	private static int get_wrapMode(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000758")]
	[Address(RVA = "0xF5B504", Offset = "0xF5B504", VA = "0xF5B504")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96E3F0", Offset = "0x96E3F0")]
	private static int get_localBounds(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000759")]
	[Address(RVA = "0xF5B6AC", Offset = "0xF5B6AC", VA = "0xF5B6AC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96E454", Offset = "0x96E454")]
	private static int get_legacy(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600075A")]
	[Address(RVA = "0xF5B864", Offset = "0xF5B864", VA = "0xF5B864")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96E4B8", Offset = "0x96E4B8")]
	private static int get_humanMotion(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600075B")]
	[Address(RVA = "0xF5BA1C", Offset = "0xF5BA1C", VA = "0xF5BA1C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96E51C", Offset = "0x96E51C")]
	private static int get_empty(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600075C")]
	[Address(RVA = "0xF5BBD4", Offset = "0xF5BBD4", VA = "0xF5BBD4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96E580", Offset = "0x96E580")]
	private static int get_hasGenericRootTransform(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600075D")]
	[Address(RVA = "0xF5BD8C", Offset = "0xF5BD8C", VA = "0xF5BD8C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96E5E4", Offset = "0x96E5E4")]
	private static int get_hasMotionFloatCurves(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600075E")]
	[Address(RVA = "0xF5BF44", Offset = "0xF5BF44", VA = "0xF5BF44")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96E648", Offset = "0x96E648")]
	private static int get_hasMotionCurves(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0xF5C0FC", Offset = "0xF5C0FC", VA = "0xF5C0FC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96E6AC", Offset = "0x96E6AC")]
	private static int get_hasRootCurves(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0xF5C2B4", Offset = "0xF5C2B4", VA = "0xF5C2B4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96E710", Offset = "0x96E710")]
	private static int get_events(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0xF5C448", Offset = "0xF5C448", VA = "0xF5C448")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96E774", Offset = "0x96E774")]
	private static int set_frameRate(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0xF5C600", Offset = "0xF5C600", VA = "0xF5C600")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96E7D8", Offset = "0x96E7D8")]
	private static int set_wrapMode(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000763")]
	[Address(RVA = "0xF5C808", Offset = "0xF5C808", VA = "0xF5C808")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96E83C", Offset = "0x96E83C")]
	private static int set_localBounds(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0xF5C9C0", Offset = "0xF5C9C0", VA = "0xF5C9C0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96E8A0", Offset = "0x96E8A0")]
	private static int set_legacy(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0xF5CB78", Offset = "0xF5CB78", VA = "0xF5CB78")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96E904", Offset = "0x96E904")]
	private static int set_events(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000766")]
	[Address(RVA = "0xF5D3C8", Offset = "0xF5D3C8", VA = "0xF5D3C8")]
	public UnityEngine_AnimationClipWrap()
	{
	}
}
[Token(Token = "0x2000076")]
public class UnityEngine_AnimationStateWrap
{
	[Token(Token = "0x6000767")]
	[Address(RVA = "0xF60418", Offset = "0xF60418", VA = "0xF60418")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x6000768")]
	[Address(RVA = "0xF5D3D0", Offset = "0xF5D3D0", VA = "0xF5D3D0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96E968", Offset = "0x96E968")]
	private static int _CreateUnityEngine_AnimationState(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000769")]
	[Address(RVA = "0xF5D590", Offset = "0xF5D590", VA = "0xF5D590")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96E9CC", Offset = "0x96E9CC")]
	private static int AddMixingTransform(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600076A")]
	[Address(RVA = "0xF5D968", Offset = "0xF5D968", VA = "0xF5D968")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96EA30", Offset = "0x96EA30")]
	private static int RemoveMixingTransform(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600076B")]
	[Address(RVA = "0xF5DB84", Offset = "0xF5DB84", VA = "0xF5DB84")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96EA94", Offset = "0x96EA94")]
	private static int op_Equality(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600076C")]
	[Address(RVA = "0xF5DD98", Offset = "0xF5DD98", VA = "0xF5DD98")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96EAF8", Offset = "0x96EAF8")]
	private static int get_enabled(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600076D")]
	[Address(RVA = "0xF5DF50", Offset = "0xF5DF50", VA = "0xF5DF50")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96EB5C", Offset = "0x96EB5C")]
	private static int get_weight(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600076E")]
	[Address(RVA = "0xF5E114", Offset = "0xF5E114", VA = "0xF5E114")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96EBC0", Offset = "0x96EBC0")]
	private static int get_wrapMode(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600076F")]
	[Address(RVA = "0xF5E2C4", Offset = "0xF5E2C4", VA = "0xF5E2C4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96EC24", Offset = "0x96EC24")]
	private static int get_time(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000770")]
	[Address(RVA = "0xF5E488", Offset = "0xF5E488", VA = "0xF5E488")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96EC88", Offset = "0x96EC88")]
	private static int get_normalizedTime(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000771")]
	[Address(RVA = "0xF5E64C", Offset = "0xF5E64C", VA = "0xF5E64C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96ECEC", Offset = "0x96ECEC")]
	private static int get_speed(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000772")]
	[Address(RVA = "0xF5E810", Offset = "0xF5E810", VA = "0xF5E810")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96ED50", Offset = "0x96ED50")]
	private static int get_normalizedSpeed(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000773")]
	[Address(RVA = "0xF5E9D4", Offset = "0xF5E9D4", VA = "0xF5E9D4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96EDB4", Offset = "0x96EDB4")]
	private static int get_length(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000774")]
	[Address(RVA = "0xF5EB98", Offset = "0xF5EB98", VA = "0xF5EB98")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96EE18", Offset = "0x96EE18")]
	private static int get_layer(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000775")]
	[Address(RVA = "0xF5ED50", Offset = "0xF5ED50", VA = "0xF5ED50")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96EE7C", Offset = "0x96EE7C")]
	private static int get_clip(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000776")]
	[Address(RVA = "0xF5EEEC", Offset = "0xF5EEEC", VA = "0xF5EEEC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96EEE0", Offset = "0x96EEE0")]
	private static int get_name(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000777")]
	[Address(RVA = "0xF5F0A4", Offset = "0xF5F0A4", VA = "0xF5F0A4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96EF44", Offset = "0x96EF44")]
	private static int get_blendMode(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000778")]
	[Address(RVA = "0xF5F254", Offset = "0xF5F254", VA = "0xF5F254")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96EFA8", Offset = "0x96EFA8")]
	private static int set_enabled(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000779")]
	[Address(RVA = "0xF5F40C", Offset = "0xF5F40C", VA = "0xF5F40C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96F00C", Offset = "0x96F00C")]
	private static int set_weight(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600077A")]
	[Address(RVA = "0xF5F5C4", Offset = "0xF5F5C4", VA = "0xF5F5C4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96F070", Offset = "0x96F070")]
	private static int set_wrapMode(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600077B")]
	[Address(RVA = "0xF5F7CC", Offset = "0xF5F7CC", VA = "0xF5F7CC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96F0D4", Offset = "0x96F0D4")]
	private static int set_time(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600077C")]
	[Address(RVA = "0xF5F984", Offset = "0xF5F984", VA = "0xF5F984")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96F138", Offset = "0x96F138")]
	private static int set_normalizedTime(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600077D")]
	[Address(RVA = "0xF5FB3C", Offset = "0xF5FB3C", VA = "0xF5FB3C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96F19C", Offset = "0x96F19C")]
	private static int set_speed(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600077E")]
	[Address(RVA = "0xF5FCF4", Offset = "0xF5FCF4", VA = "0xF5FCF4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96F200", Offset = "0x96F200")]
	private static int set_normalizedSpeed(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600077F")]
	[Address(RVA = "0xF5FEAC", Offset = "0xF5FEAC", VA = "0xF5FEAC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96F264", Offset = "0x96F264")]
	private static int set_layer(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000780")]
	[Address(RVA = "0xF60078", Offset = "0xF60078", VA = "0xF60078")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96F2C8", Offset = "0x96F2C8")]
	private static int set_name(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0xF60210", Offset = "0xF60210", VA = "0xF60210")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96F32C", Offset = "0x96F32C")]
	private static int set_blendMode(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000782")]
	[Address(RVA = "0xF60ABC", Offset = "0xF60ABC", VA = "0xF60ABC")]
	public UnityEngine_AnimationStateWrap()
	{
	}
}
[Token(Token = "0x2000077")]
public class UnityEngine_AnimationWrap
{
	[Token(Token = "0x6000783")]
	[Address(RVA = "0xF662C0", Offset = "0xF662C0", VA = "0xF662C0")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x6000784")]
	[Address(RVA = "0xF60AC4", Offset = "0xF60AC4", VA = "0xF60AC4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96F390", Offset = "0x96F390")]
	private static int _CreateUnityEngine_Animation(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000785")]
	[Address(RVA = "0xF60C84", Offset = "0xF60C84", VA = "0xF60C84")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96F3F4", Offset = "0x96F3F4")]
	private static int _get_this(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000786")]
	[Address(RVA = "0xF60E78", Offset = "0xF60E78", VA = "0xF60E78")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96F458", Offset = "0x96F458")]
	private static int _this(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000787")]
	[Address(RVA = "0xF60FE0", Offset = "0xF60FE0", VA = "0xF60FE0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96F4BC", Offset = "0x96F4BC")]
	private static int Stop(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000788")]
	[Address(RVA = "0xF612D0", Offset = "0xF612D0", VA = "0xF612D0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96F520", Offset = "0x96F520")]
	private static int Rewind(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000789")]
	[Address(RVA = "0xF615C0", Offset = "0xF615C0", VA = "0xF615C0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96F584", Offset = "0x96F584")]
	private static int Sample(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600078A")]
	[Address(RVA = "0xF61768", Offset = "0xF61768", VA = "0xF61768")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96F5E8", Offset = "0x96F5E8")]
	private static int IsPlaying(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600078B")]
	[Address(RVA = "0xF61978", Offset = "0xF61978", VA = "0xF61978")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96F64C", Offset = "0x96F64C")]
	private static int get_Item(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600078C")]
	[Address(RVA = "0xF61B6C", Offset = "0xF61B6C", VA = "0xF61B6C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96F6B0", Offset = "0x96F6B0")]
	private static int Play(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600078D")]
	[Address(RVA = "0xF621EC", Offset = "0xF621EC", VA = "0xF621EC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96F714", Offset = "0x96F714")]
	private static int CrossFade(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600078E")]
	[Address(RVA = "0xF626BC", Offset = "0xF626BC", VA = "0xF626BC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96F778", Offset = "0x96F778")]
	private static int Blend(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600078F")]
	[Address(RVA = "0xF62B44", Offset = "0xF62B44", VA = "0xF62B44")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96F7DC", Offset = "0x96F7DC")]
	private static int CrossFadeQueued(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0xF63284", Offset = "0xF63284", VA = "0xF63284")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96F840", Offset = "0x96F840")]
	private static int PlayQueued(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0xF63814", Offset = "0xF63814", VA = "0xF63814")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96F8A4", Offset = "0x96F8A4")]
	private static int AddClip(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000792")]
	[Address(RVA = "0xF63E20", Offset = "0xF63E20", VA = "0xF63E20")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96F908", Offset = "0x96F908")]
	private static int RemoveClip(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000793")]
	[Address(RVA = "0xF641D8", Offset = "0xF641D8", VA = "0xF641D8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96F96C", Offset = "0x96F96C")]
	private static int GetClipCount(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000794")]
	[Address(RVA = "0xF643BC", Offset = "0xF643BC", VA = "0xF643BC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96F9D0", Offset = "0x96F9D0")]
	private static int SyncLayer(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000795")]
	[Address(RVA = "0xF645C4", Offset = "0xF645C4", VA = "0xF645C4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96FA34", Offset = "0x96FA34")]
	private static int GetEnumerator(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000796")]
	[Address(RVA = "0xF64784", Offset = "0xF64784", VA = "0xF64784")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96FA98", Offset = "0x96FA98")]
	private static int GetClip(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000797")]
	[Address(RVA = "0xF64978", Offset = "0xF64978", VA = "0xF64978")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96FAFC", Offset = "0x96FAFC")]
	private static int op_Equality(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000798")]
	[Address(RVA = "0xF64BBC", Offset = "0xF64BBC", VA = "0xF64BBC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96FB60", Offset = "0x96FB60")]
	private static int get_clip(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0xF64D58", Offset = "0xF64D58", VA = "0xF64D58")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96FBC4", Offset = "0x96FBC4")]
	private static int get_playAutomatically(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0xF64F10", Offset = "0xF64F10", VA = "0xF64F10")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96FC28", Offset = "0x96FC28")]
	private static int get_wrapMode(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600079B")]
	[Address(RVA = "0xF650C0", Offset = "0xF650C0", VA = "0xF650C0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96FC8C", Offset = "0x96FC8C")]
	private static int get_isPlaying(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600079C")]
	[Address(RVA = "0xF65278", Offset = "0xF65278", VA = "0xF65278")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96FCF0", Offset = "0x96FCF0")]
	private static int get_animatePhysics(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600079D")]
	[Address(RVA = "0xF65430", Offset = "0xF65430", VA = "0xF65430")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96FD54", Offset = "0x96FD54")]
	private static int get_cullingType(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600079E")]
	[Address(RVA = "0xF655E0", Offset = "0xF655E0", VA = "0xF655E0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96FDB8", Offset = "0x96FDB8")]
	private static int get_localBounds(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600079F")]
	[Address(RVA = "0xF65788", Offset = "0xF65788", VA = "0xF65788")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96FE1C", Offset = "0x96FE1C")]
	private static int set_clip(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0xF65988", Offset = "0xF65988", VA = "0xF65988")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96FE80", Offset = "0x96FE80")]
	private static int set_playAutomatically(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0xF65B40", Offset = "0xF65B40", VA = "0xF65B40")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96FEE4", Offset = "0x96FEE4")]
	private static int set_wrapMode(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0xF65D48", Offset = "0xF65D48", VA = "0xF65D48")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96FF48", Offset = "0x96FF48")]
	private static int set_animatePhysics(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0xF65F00", Offset = "0xF65F00", VA = "0xF65F00")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x96FFAC", Offset = "0x96FFAC")]
	private static int set_cullingType(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007A4")]
	[Address(RVA = "0xF66108", Offset = "0xF66108", VA = "0xF66108")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x970010", Offset = "0x970010")]
	private static int set_localBounds(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0xF66B44", Offset = "0xF66B44", VA = "0xF66B44")]
	public UnityEngine_AnimationWrap()
	{
	}
}
[Token(Token = "0x2000078")]
public class UnityEngine_AnimatorWrap
{
	[Token(Token = "0x60007A6")]
	[Address(RVA = "0x1984CF4", Offset = "0x1984CF4", VA = "0x1984CF4")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x60007A7")]
	[Address(RVA = "0x1972144", Offset = "0x1972144", VA = "0x1972144")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x970074", Offset = "0x970074")]
	private static int _CreateUnityEngine_Animator(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0x19722FC", Offset = "0x19722FC", VA = "0x19722FC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9700D8", Offset = "0x9700D8")]
	private static int GetFloat(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0x19726D4", Offset = "0x19726D4", VA = "0x19726D4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97013C", Offset = "0x97013C")]
	private static int SetFloat(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007AA")]
	[Address(RVA = "0x1972D98", Offset = "0x1972D98", VA = "0x1972D98")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9701A0", Offset = "0x9701A0")]
	private static int GetBool(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007AB")]
	[Address(RVA = "0x1973164", Offset = "0x1973164", VA = "0x1973164")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x970204", Offset = "0x970204")]
	private static int SetBool(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007AC")]
	[Address(RVA = "0x1973534", Offset = "0x1973534", VA = "0x1973534")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x970268", Offset = "0x970268")]
	private static int GetInteger(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007AD")]
	[Address(RVA = "0x1973900", Offset = "0x1973900", VA = "0x1973900")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9702CC", Offset = "0x9702CC")]
	private static int SetInteger(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007AE")]
	[Address(RVA = "0x1973CF0", Offset = "0x1973CF0", VA = "0x1973CF0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x970330", Offset = "0x970330")]
	private static int SetTrigger(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007AF")]
	[Address(RVA = "0x1974070", Offset = "0x1974070", VA = "0x1974070")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x970394", Offset = "0x970394")]
	private static int ResetTrigger(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007B0")]
	[Address(RVA = "0x19743F0", Offset = "0x19743F0", VA = "0x19743F0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9703F8", Offset = "0x9703F8")]
	private static int IsParameterControlledByCurve(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007B1")]
	[Address(RVA = "0x19747BC", Offset = "0x19747BC", VA = "0x19747BC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97045C", Offset = "0x97045C")]
	private static int GetIKPosition(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007B2")]
	[Address(RVA = "0x19749F4", Offset = "0x19749F4", VA = "0x19749F4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9704C0", Offset = "0x9704C0")]
	private static int SetIKPosition(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007B3")]
	[Address(RVA = "0x1974C30", Offset = "0x1974C30", VA = "0x1974C30")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x970524", Offset = "0x970524")]
	private static int GetIKRotation(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007B4")]
	[Address(RVA = "0x1974E68", Offset = "0x1974E68", VA = "0x1974E68")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x970588", Offset = "0x970588")]
	private static int SetIKRotation(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007B5")]
	[Address(RVA = "0x19750A4", Offset = "0x19750A4", VA = "0x19750A4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9705EC", Offset = "0x9705EC")]
	private static int GetIKPositionWeight(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0x1975310", Offset = "0x1975310", VA = "0x1975310")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x970650", Offset = "0x970650")]
	private static int SetIKPositionWeight(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0x1975578", Offset = "0x1975578", VA = "0x1975578")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9706B4", Offset = "0x9706B4")]
	private static int GetIKRotationWeight(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007B8")]
	[Address(RVA = "0x19757E4", Offset = "0x19757E4", VA = "0x19757E4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x970718", Offset = "0x970718")]
	private static int SetIKRotationWeight(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0x1975A4C", Offset = "0x1975A4C", VA = "0x1975A4C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97077C", Offset = "0x97077C")]
	private static int GetIKHintPosition(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0x1975C84", Offset = "0x1975C84", VA = "0x1975C84")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9707E0", Offset = "0x9707E0")]
	private static int SetIKHintPosition(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0x1975EC0", Offset = "0x1975EC0", VA = "0x1975EC0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x970844", Offset = "0x970844")]
	private static int GetIKHintPositionWeight(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007BC")]
	[Address(RVA = "0x197612C", Offset = "0x197612C", VA = "0x197612C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9708A8", Offset = "0x9708A8")]
	private static int SetIKHintPositionWeight(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007BD")]
	[Address(RVA = "0x1976394", Offset = "0x1976394", VA = "0x1976394")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97090C", Offset = "0x97090C")]
	private static int SetLookAtPosition(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007BE")]
	[Address(RVA = "0x1976540", Offset = "0x1976540", VA = "0x1976540")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x970970", Offset = "0x970970")]
	private static int SetLookAtWeight(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007BF")]
	[Address(RVA = "0x1976C0C", Offset = "0x1976C0C", VA = "0x1976C0C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9709D4", Offset = "0x9709D4")]
	private static int SetBoneLocalRotation(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007C0")]
	[Address(RVA = "0x1976E48", Offset = "0x1976E48", VA = "0x1976E48")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x970A38", Offset = "0x970A38")]
	private static int GetBehaviours(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007C1")]
	[Address(RVA = "0x1977078", Offset = "0x1977078", VA = "0x1977078")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x970A9C", Offset = "0x970A9C")]
	private static int GetLayerName(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007C2")]
	[Address(RVA = "0x1977278", Offset = "0x1977278", VA = "0x1977278")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x970B00", Offset = "0x970B00")]
	private static int GetLayerIndex(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007C3")]
	[Address(RVA = "0x1977468", Offset = "0x1977468", VA = "0x1977468")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x970B64", Offset = "0x970B64")]
	private static int GetLayerWeight(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007C4")]
	[Address(RVA = "0x1977668", Offset = "0x1977668", VA = "0x1977668")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x970BC8", Offset = "0x970BC8")]
	private static int SetLayerWeight(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007C5")]
	[Address(RVA = "0x1977874", Offset = "0x1977874", VA = "0x1977874")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x970C2C", Offset = "0x970C2C")]
	private static int GetCurrentAnimatorStateInfo(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007C6")]
	[Address(RVA = "0x1977A94", Offset = "0x1977A94", VA = "0x1977A94")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x970C90", Offset = "0x970C90")]
	private static int GetNextAnimatorStateInfo(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007C7")]
	[Address(RVA = "0x1977CB4", Offset = "0x1977CB4", VA = "0x1977CB4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x970CF4", Offset = "0x970CF4")]
	private static int GetAnimatorTransitionInfo(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007C8")]
	[Address(RVA = "0x1977EC8", Offset = "0x1977EC8", VA = "0x1977EC8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x970D58", Offset = "0x970D58")]
	private static int GetCurrentAnimatorClipInfoCount(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0x19780C8", Offset = "0x19780C8", VA = "0x19780C8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x970DBC", Offset = "0x970DBC")]
	private static int GetNextAnimatorClipInfoCount(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0x19782C8", Offset = "0x19782C8", VA = "0x19782C8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x970E20", Offset = "0x970E20")]
	private static int GetCurrentAnimatorClipInfo(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0x19786B8", Offset = "0x19786B8", VA = "0x19786B8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x970E84", Offset = "0x970E84")]
	private static int GetNextAnimatorClipInfo(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007CC")]
	[Address(RVA = "0x1978AA8", Offset = "0x1978AA8", VA = "0x1978AA8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x970EE8", Offset = "0x970EE8")]
	private static int IsInTransition(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007CD")]
	[Address(RVA = "0x1978CA8", Offset = "0x1978CA8", VA = "0x1978CA8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x970F4C", Offset = "0x970F4C")]
	private static int GetParameter(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0x1978EA8", Offset = "0x1978EA8", VA = "0x1978EA8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x970FB0", Offset = "0x970FB0")]
	private static int MatchTarget(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0x1979778", Offset = "0x1979778", VA = "0x1979778")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x971014", Offset = "0x971014")]
	private static int InterruptMatchTarget(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0x1979A40", Offset = "0x1979A40", VA = "0x1979A40")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x971078", Offset = "0x971078")]
	private static int CrossFadeInFixedTime(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0x197A71C", Offset = "0x197A71C", VA = "0x197A71C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9710DC", Offset = "0x9710DC")]
	private static int WriteDefaultValues(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0x197A8A4", Offset = "0x197A8A4", VA = "0x197A8A4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x971140", Offset = "0x971140")]
	private static int CrossFade(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007D3")]
	[Address(RVA = "0x197B580", Offset = "0x197B580", VA = "0x197B580")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9711A4", Offset = "0x9711A4")]
	private static int PlayInFixedTime(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007D4")]
	[Address(RVA = "0x197BE54", Offset = "0x197BE54", VA = "0x197BE54")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x971208", Offset = "0x971208")]
	private static int Play(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0x197C728", Offset = "0x197C728", VA = "0x197C728")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97126C", Offset = "0x97126C")]
	private static int SetTarget(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007D6")]
	[Address(RVA = "0x197C990", Offset = "0x197C990", VA = "0x197C990")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9712D0", Offset = "0x9712D0")]
	private static int GetBoneTransform(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0x197CBCC", Offset = "0x197CBCC", VA = "0x197CBCC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x971334", Offset = "0x971334")]
	private static int StartPlayback(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007D8")]
	[Address(RVA = "0x197CD54", Offset = "0x197CD54", VA = "0x197CD54")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x971398", Offset = "0x971398")]
	private static int StopPlayback(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0x197CEDC", Offset = "0x197CEDC", VA = "0x197CEDC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9713FC", Offset = "0x9713FC")]
	private static int StartRecording(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007DA")]
	[Address(RVA = "0x197D0C4", Offset = "0x197D0C4", VA = "0x197D0C4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x971460", Offset = "0x971460")]
	private static int StopRecording(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007DB")]
	[Address(RVA = "0x197D24C", Offset = "0x197D24C", VA = "0x197D24C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9714C4", Offset = "0x9714C4")]
	private static int HasState(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0x197D47C", Offset = "0x197D47C", VA = "0x197D47C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x971528", Offset = "0x971528")]
	private static int StringToHash(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007DD")]
	[Address(RVA = "0x197D5F8", Offset = "0x197D5F8", VA = "0x197D5F8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97158C", Offset = "0x97158C")]
	private static int Update(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007DE")]
	[Address(RVA = "0x197D7CC", Offset = "0x197D7CC", VA = "0x197D7CC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9715F0", Offset = "0x9715F0")]
	private static int Rebind(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007DF")]
	[Address(RVA = "0x197D954", Offset = "0x197D954", VA = "0x197D954")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x971654", Offset = "0x971654")]
	private static int ApplyBuiltinRootMotion(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007E0")]
	[Address(RVA = "0x197DADC", Offset = "0x197DADC", VA = "0x197DADC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9716B8", Offset = "0x9716B8")]
	private static int op_Equality(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007E1")]
	[Address(RVA = "0x197DD20", Offset = "0x197DD20", VA = "0x197DD20")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97171C", Offset = "0x97171C")]
	private static int get_isOptimizable(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007E2")]
	[Address(RVA = "0x197DEF4", Offset = "0x197DEF4", VA = "0x197DEF4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x971780", Offset = "0x971780")]
	private static int get_isHuman(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007E3")]
	[Address(RVA = "0x197E0C8", Offset = "0x197E0C8", VA = "0x197E0C8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9717E4", Offset = "0x9717E4")]
	private static int get_hasRootMotion(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007E4")]
	[Address(RVA = "0x197E29C", Offset = "0x197E29C", VA = "0x197E29C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x971848", Offset = "0x971848")]
	private static int get_humanScale(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007E5")]
	[Address(RVA = "0x197E47C", Offset = "0x197E47C", VA = "0x197E47C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9718AC", Offset = "0x9718AC")]
	private static int get_isInitialized(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007E6")]
	[Address(RVA = "0x197E650", Offset = "0x197E650", VA = "0x197E650")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x971910", Offset = "0x971910")]
	private static int get_deltaPosition(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007E7")]
	[Address(RVA = "0x197E7FC", Offset = "0x197E7FC", VA = "0x197E7FC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x971974", Offset = "0x971974")]
	private static int get_deltaRotation(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007E8")]
	[Address(RVA = "0x197E9A8", Offset = "0x197E9A8", VA = "0x197E9A8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9719D8", Offset = "0x9719D8")]
	private static int get_velocity(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007E9")]
	[Address(RVA = "0x197EB54", Offset = "0x197EB54", VA = "0x197EB54")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x971A3C", Offset = "0x971A3C")]
	private static int get_angularVelocity(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007EA")]
	[Address(RVA = "0x197ED00", Offset = "0x197ED00", VA = "0x197ED00")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x971AA0", Offset = "0x971AA0")]
	private static int get_rootPosition(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0x197EEAC", Offset = "0x197EEAC", VA = "0x197EEAC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x971B04", Offset = "0x971B04")]
	private static int get_rootRotation(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0x197F058", Offset = "0x197F058", VA = "0x197F058")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x971B68", Offset = "0x971B68")]
	private static int get_applyRootMotion(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007ED")]
	[Address(RVA = "0x197F22C", Offset = "0x197F22C", VA = "0x197F22C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x971BCC", Offset = "0x971BCC")]
	private static int get_updateMode(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0x197F3F8", Offset = "0x197F3F8", VA = "0x197F3F8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x971C30", Offset = "0x971C30")]
	private static int get_hasTransformHierarchy(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0x197F5CC", Offset = "0x197F5CC", VA = "0x197F5CC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x971C94", Offset = "0x971C94")]
	private static int get_gravityWeight(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0x197F7AC", Offset = "0x197F7AC", VA = "0x197F7AC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x971CF8", Offset = "0x971CF8")]
	private static int get_bodyPosition(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0x197F958", Offset = "0x197F958", VA = "0x197F958")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x971D5C", Offset = "0x971D5C")]
	private static int get_bodyRotation(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0x197FB04", Offset = "0x197FB04", VA = "0x197FB04")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x971DC0", Offset = "0x971DC0")]
	private static int get_stabilizeFeet(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0x197FCD8", Offset = "0x197FCD8", VA = "0x197FCD8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x971E24", Offset = "0x971E24")]
	private static int get_layerCount(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0x197FEAC", Offset = "0x197FEAC", VA = "0x197FEAC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x971E88", Offset = "0x971E88")]
	private static int get_parameters(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0x198005C", Offset = "0x198005C", VA = "0x198005C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x971EEC", Offset = "0x971EEC")]
	private static int get_parameterCount(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0x1980230", Offset = "0x1980230", VA = "0x1980230")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x971F50", Offset = "0x971F50")]
	private static int get_feetPivotActive(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0x1980410", Offset = "0x1980410", VA = "0x1980410")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x971FB4", Offset = "0x971FB4")]
	private static int get_pivotWeight(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0x19805F0", Offset = "0x19805F0", VA = "0x19805F0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x972018", Offset = "0x972018")]
	private static int get_pivotPosition(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0x198079C", Offset = "0x198079C", VA = "0x198079C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97207C", Offset = "0x97207C")]
	private static int get_isMatchingTarget(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0x1980970", Offset = "0x1980970", VA = "0x1980970")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9720E0", Offset = "0x9720E0")]
	private static int get_speed(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007FB")]
	[Address(RVA = "0x1980B50", Offset = "0x1980B50", VA = "0x1980B50")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x972144", Offset = "0x972144")]
	private static int get_targetPosition(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0x1980CFC", Offset = "0x1980CFC", VA = "0x1980CFC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9721A8", Offset = "0x9721A8")]
	private static int get_targetRotation(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007FD")]
	[Address(RVA = "0x1980EA8", Offset = "0x1980EA8", VA = "0x1980EA8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97220C", Offset = "0x97220C")]
	private static int get_cullingMode(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007FE")]
	[Address(RVA = "0x1981074", Offset = "0x1981074", VA = "0x1981074")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x972270", Offset = "0x972270")]
	private static int get_playbackTime(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60007FF")]
	[Address(RVA = "0x1981254", Offset = "0x1981254", VA = "0x1981254")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9722D4", Offset = "0x9722D4")]
	private static int get_recorderStartTime(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000800")]
	[Address(RVA = "0x1981434", Offset = "0x1981434", VA = "0x1981434")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x972338", Offset = "0x972338")]
	private static int get_recorderStopTime(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000801")]
	[Address(RVA = "0x1981614", Offset = "0x1981614", VA = "0x1981614")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97239C", Offset = "0x97239C")]
	private static int get_recorderMode(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000802")]
	[Address(RVA = "0x19817E0", Offset = "0x19817E0", VA = "0x19817E0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x972400", Offset = "0x972400")]
	private static int get_runtimeAnimatorController(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000803")]
	[Address(RVA = "0x1981990", Offset = "0x1981990", VA = "0x1981990")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x972464", Offset = "0x972464")]
	private static int get_hasBoundPlayables(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000804")]
	[Address(RVA = "0x1981B64", Offset = "0x1981B64", VA = "0x1981B64")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9724C8", Offset = "0x9724C8")]
	private static int get_avatar(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000805")]
	[Address(RVA = "0x1981D14", Offset = "0x1981D14", VA = "0x1981D14")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97252C", Offset = "0x97252C")]
	private static int get_playableGraph(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000806")]
	[Address(RVA = "0x1981ED8", Offset = "0x1981ED8", VA = "0x1981ED8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x972590", Offset = "0x972590")]
	private static int get_layersAffectMassCenter(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000807")]
	[Address(RVA = "0x19820AC", Offset = "0x19820AC", VA = "0x19820AC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9725F4", Offset = "0x9725F4")]
	private static int get_leftFeetBottomHeight(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000808")]
	[Address(RVA = "0x198228C", Offset = "0x198228C", VA = "0x198228C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x972658", Offset = "0x972658")]
	private static int get_rightFeetBottomHeight(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000809")]
	[Address(RVA = "0x198246C", Offset = "0x198246C", VA = "0x198246C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9726BC", Offset = "0x9726BC")]
	private static int get_logWarnings(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600080A")]
	[Address(RVA = "0x1982640", Offset = "0x1982640", VA = "0x1982640")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x972720", Offset = "0x972720")]
	private static int get_fireEvents(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600080B")]
	[Address(RVA = "0x1982814", Offset = "0x1982814", VA = "0x1982814")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x972784", Offset = "0x972784")]
	private static int get_keepAnimatorControllerStateOnDisable(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600080C")]
	[Address(RVA = "0x19829E8", Offset = "0x19829E8", VA = "0x19829E8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9727E8", Offset = "0x9727E8")]
	private static int set_rootPosition(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600080D")]
	[Address(RVA = "0x1982B94", Offset = "0x1982B94", VA = "0x1982B94")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97284C", Offset = "0x97284C")]
	private static int set_rootRotation(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600080E")]
	[Address(RVA = "0x1982D40", Offset = "0x1982D40", VA = "0x1982D40")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9728B0", Offset = "0x9728B0")]
	private static int set_applyRootMotion(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600080F")]
	[Address(RVA = "0x1982F14", Offset = "0x1982F14", VA = "0x1982F14")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x972914", Offset = "0x972914")]
	private static int set_updateMode(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000810")]
	[Address(RVA = "0x1983138", Offset = "0x1983138", VA = "0x1983138")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x972978", Offset = "0x972978")]
	private static int set_bodyPosition(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000811")]
	[Address(RVA = "0x19832E4", Offset = "0x19832E4", VA = "0x19832E4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9729DC", Offset = "0x9729DC")]
	private static int set_bodyRotation(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000812")]
	[Address(RVA = "0x1983490", Offset = "0x1983490", VA = "0x1983490")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x972A40", Offset = "0x972A40")]
	private static int set_stabilizeFeet(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000813")]
	[Address(RVA = "0x1983664", Offset = "0x1983664", VA = "0x1983664")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x972AA4", Offset = "0x972AA4")]
	private static int set_feetPivotActive(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000814")]
	[Address(RVA = "0x1983838", Offset = "0x1983838", VA = "0x1983838")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x972B08", Offset = "0x972B08")]
	private static int set_speed(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000815")]
	[Address(RVA = "0x1983A0C", Offset = "0x1983A0C", VA = "0x1983A0C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x972B6C", Offset = "0x972B6C")]
	private static int set_cullingMode(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000816")]
	[Address(RVA = "0x1983C30", Offset = "0x1983C30", VA = "0x1983C30")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x972BD0", Offset = "0x972BD0")]
	private static int set_playbackTime(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000817")]
	[Address(RVA = "0x1983E04", Offset = "0x1983E04", VA = "0x1983E04")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x972C34", Offset = "0x972C34")]
	private static int set_recorderStartTime(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000818")]
	[Address(RVA = "0x1983FD8", Offset = "0x1983FD8", VA = "0x1983FD8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x972C98", Offset = "0x972C98")]
	private static int set_recorderStopTime(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000819")]
	[Address(RVA = "0x19841AC", Offset = "0x19841AC", VA = "0x19841AC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x972CFC", Offset = "0x972CFC")]
	private static int set_runtimeAnimatorController(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600081A")]
	[Address(RVA = "0x19843A8", Offset = "0x19843A8", VA = "0x19843A8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x972D60", Offset = "0x972D60")]
	private static int set_avatar(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600081B")]
	[Address(RVA = "0x19845A4", Offset = "0x19845A4", VA = "0x19845A4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x972DC4", Offset = "0x972DC4")]
	private static int set_layersAffectMassCenter(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600081C")]
	[Address(RVA = "0x1984778", Offset = "0x1984778", VA = "0x1984778")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x972E28", Offset = "0x972E28")]
	private static int set_logWarnings(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600081D")]
	[Address(RVA = "0x198494C", Offset = "0x198494C", VA = "0x198494C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x972E8C", Offset = "0x972E8C")]
	private static int set_fireEvents(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600081E")]
	[Address(RVA = "0x1984B20", Offset = "0x1984B20", VA = "0x1984B20")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x972EF0", Offset = "0x972EF0")]
	private static int set_keepAnimatorControllerStateOnDisable(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600081F")]
	[Address(RVA = "0x1986A98", Offset = "0x1986A98", VA = "0x1986A98")]
	public UnityEngine_AnimatorWrap()
	{
	}
}
[Token(Token = "0x2000079")]
public class UnityEngine_ApplicationWrap
{
	[Token(Token = "0x6000820")]
	[Address(RVA = "0x198CA14", Offset = "0x198CA14", VA = "0x198CA14")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x6000821")]
	[Address(RVA = "0x1986AA0", Offset = "0x1986AA0", VA = "0x1986AA0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x972F54", Offset = "0x972F54")]
	private static int Quit(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000822")]
	[Address(RVA = "0x1986C6C", Offset = "0x1986C6C", VA = "0x1986C6C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x972FB8", Offset = "0x972FB8")]
	private static int Unload(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000823")]
	[Address(RVA = "0x1986D98", Offset = "0x1986D98", VA = "0x1986D98")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97301C", Offset = "0x97301C")]
	private static int CanStreamedLevelBeLoaded(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000824")]
	[Address(RVA = "0x1987060", Offset = "0x1987060", VA = "0x1987060")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x973080", Offset = "0x973080")]
	private static int IsPlaying(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0x1987220", Offset = "0x1987220", VA = "0x1987220")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9730E4", Offset = "0x9730E4")]
	private static int GetBuildTags(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000826")]
	[Address(RVA = "0x1987364", Offset = "0x1987364", VA = "0x1987364")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x973148", Offset = "0x973148")]
	private static int SetBuildTags(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000827")]
	[Address(RVA = "0x19874A4", Offset = "0x19874A4", VA = "0x19874A4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9731AC", Offset = "0x9731AC")]
	private static int HasProLicense(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0x198760C", Offset = "0x198760C", VA = "0x198760C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x973210", Offset = "0x973210")]
	private static int RequestAdvertisingIdentifierAsync(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000829")]
	[Address(RVA = "0x19877B0", Offset = "0x19877B0", VA = "0x19877B0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x973274", Offset = "0x973274")]
	private static int OpenURL(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600082A")]
	[Address(RVA = "0x19878F0", Offset = "0x19878F0", VA = "0x19878F0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9732D8", Offset = "0x9732D8")]
	private static int GetStackTraceLogType(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600082B")]
	[Address(RVA = "0x1987AD4", Offset = "0x1987AD4", VA = "0x1987AD4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97333C", Offset = "0x97333C")]
	private static int SetStackTraceLogType(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600082C")]
	[Address(RVA = "0x1987D04", Offset = "0x1987D04", VA = "0x1987D04")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9733A0", Offset = "0x9733A0")]
	private static int RequestUserAuthorization(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600082D")]
	[Address(RVA = "0x1987ED4", Offset = "0x1987ED4", VA = "0x1987ED4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x973404", Offset = "0x973404")]
	private static int HasUserAuthorization(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600082E")]
	[Address(RVA = "0x19880C8", Offset = "0x19880C8", VA = "0x19880C8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x973468", Offset = "0x973468")]
	private static int get_isPlaying(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600082F")]
	[Address(RVA = "0x19881F8", Offset = "0x19881F8", VA = "0x19881F8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9734CC", Offset = "0x9734CC")]
	private static int get_isFocused(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000830")]
	[Address(RVA = "0x1988328", Offset = "0x1988328", VA = "0x1988328")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x973530", Offset = "0x973530")]
	private static int get_buildGUID(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000831")]
	[Address(RVA = "0x1988458", Offset = "0x1988458", VA = "0x1988458")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x973594", Offset = "0x973594")]
	private static int get_runInBackground(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000832")]
	[Address(RVA = "0x1988588", Offset = "0x1988588", VA = "0x1988588")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9735F8", Offset = "0x9735F8")]
	private static int get_isBatchMode(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0x19886B8", Offset = "0x19886B8", VA = "0x19886B8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97365C", Offset = "0x97365C")]
	private static int get_dataPath(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000834")]
	[Address(RVA = "0x19887E8", Offset = "0x19887E8", VA = "0x19887E8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9736C0", Offset = "0x9736C0")]
	private static int get_streamingAssetsPath(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000835")]
	[Address(RVA = "0x1988918", Offset = "0x1988918", VA = "0x1988918")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x973724", Offset = "0x973724")]
	private static int get_persistentDataPath(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000836")]
	[Address(RVA = "0x1988A48", Offset = "0x1988A48", VA = "0x1988A48")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x973788", Offset = "0x973788")]
	private static int get_temporaryCachePath(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000837")]
	[Address(RVA = "0x1988B78", Offset = "0x1988B78", VA = "0x1988B78")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9737EC", Offset = "0x9737EC")]
	private static int get_absoluteURL(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000838")]
	[Address(RVA = "0x1988CA8", Offset = "0x1988CA8", VA = "0x1988CA8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x973850", Offset = "0x973850")]
	private static int get_unityVersion(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000839")]
	[Address(RVA = "0x1988DD8", Offset = "0x1988DD8", VA = "0x1988DD8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9738B4", Offset = "0x9738B4")]
	private static int get_version(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0x1988F08", Offset = "0x1988F08", VA = "0x1988F08")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x973918", Offset = "0x973918")]
	private static int get_installerName(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600083B")]
	[Address(RVA = "0x1989038", Offset = "0x1989038", VA = "0x1989038")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97397C", Offset = "0x97397C")]
	private static int get_identifier(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0x1989168", Offset = "0x1989168", VA = "0x1989168")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9739E0", Offset = "0x9739E0")]
	private static int get_installMode(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600083D")]
	[Address(RVA = "0x19892B0", Offset = "0x19892B0", VA = "0x19892B0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x973A44", Offset = "0x973A44")]
	private static int get_sandboxType(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600083E")]
	[Address(RVA = "0x19893F8", Offset = "0x19893F8", VA = "0x19893F8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x973AA8", Offset = "0x973AA8")]
	private static int get_productName(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600083F")]
	[Address(RVA = "0x1989528", Offset = "0x1989528", VA = "0x1989528")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x973B0C", Offset = "0x973B0C")]
	private static int get_companyName(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000840")]
	[Address(RVA = "0x1989658", Offset = "0x1989658", VA = "0x1989658")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x973B70", Offset = "0x973B70")]
	private static int get_cloudProjectId(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000841")]
	[Address(RVA = "0x1989788", Offset = "0x1989788", VA = "0x1989788")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x973BD4", Offset = "0x973BD4")]
	private static int get_targetFrameRate(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000842")]
	[Address(RVA = "0x19898B8", Offset = "0x19898B8", VA = "0x19898B8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x973C38", Offset = "0x973C38")]
	private static int get_consoleLogPath(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000843")]
	[Address(RVA = "0x19899E8", Offset = "0x19899E8", VA = "0x19899E8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x973C9C", Offset = "0x973C9C")]
	private static int get_backgroundLoadingPriority(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0x1989B30", Offset = "0x1989B30", VA = "0x1989B30")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x973D00", Offset = "0x973D00")]
	private static int get_genuine(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000845")]
	[Address(RVA = "0x1989C60", Offset = "0x1989C60", VA = "0x1989C60")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x973D64", Offset = "0x973D64")]
	private static int get_genuineCheckAvailable(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000846")]
	[Address(RVA = "0x1989D90", Offset = "0x1989D90", VA = "0x1989D90")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x973DC8", Offset = "0x973DC8")]
	private static int get_platform(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000847")]
	[Address(RVA = "0x1989ED8", Offset = "0x1989ED8", VA = "0x1989ED8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x973E2C", Offset = "0x973E2C")]
	private static int get_isMobilePlatform(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000848")]
	[Address(RVA = "0x198A008", Offset = "0x198A008", VA = "0x198A008")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x973E90", Offset = "0x973E90")]
	private static int get_isConsolePlatform(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000849")]
	[Address(RVA = "0x198A138", Offset = "0x198A138", VA = "0x198A138")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x973EF4", Offset = "0x973EF4")]
	private static int get_systemLanguage(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600084A")]
	[Address(RVA = "0x198A280", Offset = "0x198A280", VA = "0x198A280")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x973F58", Offset = "0x973F58")]
	private static int get_internetReachability(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600084B")]
	[Address(RVA = "0x198A3C8", Offset = "0x198A3C8", VA = "0x198A3C8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x973FBC", Offset = "0x973FBC")]
	private static int get_isEditor(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600084C")]
	[Address(RVA = "0x198A4F8", Offset = "0x198A4F8", VA = "0x198A4F8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x974020", Offset = "0x974020")]
	private static int get_lowMemory(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600084D")]
	[Address(RVA = "0x198A5D4", Offset = "0x198A5D4", VA = "0x198A5D4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x974084", Offset = "0x974084")]
	private static int get_logMessageReceived(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600084E")]
	[Address(RVA = "0x198A6B0", Offset = "0x198A6B0", VA = "0x198A6B0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9740E8", Offset = "0x9740E8")]
	private static int get_logMessageReceivedThreaded(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600084F")]
	[Address(RVA = "0x198A78C", Offset = "0x198A78C", VA = "0x198A78C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97414C", Offset = "0x97414C")]
	private static int get_onBeforeRender(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000850")]
	[Address(RVA = "0x198A868", Offset = "0x198A868", VA = "0x198A868")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9741B0", Offset = "0x9741B0")]
	private static int get_focusChanged(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000851")]
	[Address(RVA = "0x198A944", Offset = "0x198A944", VA = "0x198A944")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x974214", Offset = "0x974214")]
	private static int get_deepLinkActivated(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000852")]
	[Address(RVA = "0x198AA20", Offset = "0x198AA20", VA = "0x198AA20")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x974278", Offset = "0x974278")]
	private static int get_wantsToQuit(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000853")]
	[Address(RVA = "0x198AAFC", Offset = "0x198AAFC", VA = "0x198AAFC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9742DC", Offset = "0x9742DC")]
	private static int get_quitting(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000854")]
	[Address(RVA = "0x198ABD8", Offset = "0x198ABD8", VA = "0x198ABD8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x974340", Offset = "0x974340")]
	private static int set_runInBackground(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000855")]
	[Address(RVA = "0x198AD0C", Offset = "0x198AD0C", VA = "0x198AD0C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9743A4", Offset = "0x9743A4")]
	private static int set_targetFrameRate(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000856")]
	[Address(RVA = "0x198AE54", Offset = "0x198AE54", VA = "0x198AE54")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x974408", Offset = "0x974408")]
	private static int set_backgroundLoadingPriority(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000857")]
	[Address(RVA = "0x198AFFC", Offset = "0x198AFFC", VA = "0x198AFFC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97446C", Offset = "0x97446C")]
	private static int set_lowMemory(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000858")]
	[Address(RVA = "0x198B258", Offset = "0x198B258", VA = "0x198B258")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9744D0", Offset = "0x9744D0")]
	private static int set_logMessageReceived(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000859")]
	[Address(RVA = "0x198B4B4", Offset = "0x198B4B4", VA = "0x198B4B4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x974534", Offset = "0x974534")]
	private static int set_logMessageReceivedThreaded(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600085A")]
	[Address(RVA = "0x198B710", Offset = "0x198B710", VA = "0x198B710")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x974598", Offset = "0x974598")]
	private static int set_onBeforeRender(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600085B")]
	[Address(RVA = "0x198B96C", Offset = "0x198B96C", VA = "0x198B96C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9745FC", Offset = "0x9745FC")]
	private static int set_focusChanged(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600085C")]
	[Address(RVA = "0x198BBC8", Offset = "0x198BBC8", VA = "0x198BBC8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x974660", Offset = "0x974660")]
	private static int set_deepLinkActivated(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600085D")]
	[Address(RVA = "0x198BE24", Offset = "0x198BE24", VA = "0x198BE24")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9746C4", Offset = "0x9746C4")]
	private static int set_wantsToQuit(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600085E")]
	[Address(RVA = "0x198C080", Offset = "0x198C080", VA = "0x198C080")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x974728", Offset = "0x974728")]
	private static int set_quitting(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600085F")]
	[Address(RVA = "0x198C2DC", Offset = "0x198C2DC", VA = "0x198C2DC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97478C", Offset = "0x97478C")]
	private static int UnityEngine_Application_AdvertisingIdentifierCallback(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000860")]
	[Address(RVA = "0x198C544", Offset = "0x198C544", VA = "0x198C544")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9747F0", Offset = "0x9747F0")]
	private static int UnityEngine_Application_LogCallback(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000861")]
	[Address(RVA = "0x198C7AC", Offset = "0x198C7AC", VA = "0x198C7AC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x974854", Offset = "0x974854")]
	private static int UnityEngine_Application_LowMemoryCallback(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000862")]
	[Address(RVA = "0x198DA30", Offset = "0x198DA30", VA = "0x198DA30")]
	public UnityEngine_ApplicationWrap()
	{
	}
}
[Token(Token = "0x200007A")]
public class UnityEngine_AudioBehaviourWrap
{
	[Token(Token = "0x6000863")]
	[Address(RVA = "0x198DE34", Offset = "0x198DE34", VA = "0x198DE34")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x6000864")]
	[Address(RVA = "0x198DA38", Offset = "0x198DA38", VA = "0x198DA38")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9748B8", Offset = "0x9748B8")]
	private static int _CreateUnityEngine_AudioBehaviour(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000865")]
	[Address(RVA = "0x198DBF0", Offset = "0x198DBF0", VA = "0x198DBF0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97491C", Offset = "0x97491C")]
	private static int op_Equality(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000866")]
	[Address(RVA = "0x198DFC0", Offset = "0x198DFC0", VA = "0x198DFC0")]
	public UnityEngine_AudioBehaviourWrap()
	{
	}
}
[Token(Token = "0x200007B")]
public class UnityEngine_AudioClipWrap
{
	[Token(Token = "0x6000867")]
	[Address(RVA = "0x1990448", Offset = "0x1990448", VA = "0x1990448")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x6000868")]
	[Address(RVA = "0x198DFC8", Offset = "0x198DFC8", VA = "0x198DFC8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x974980", Offset = "0x974980")]
	private static int LoadAudioData(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000869")]
	[Address(RVA = "0x198E1AC", Offset = "0x198E1AC", VA = "0x198E1AC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9749E4", Offset = "0x9749E4")]
	private static int UnloadAudioData(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600086A")]
	[Address(RVA = "0x198E390", Offset = "0x198E390", VA = "0x198E390")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x974A48", Offset = "0x974A48")]
	private static int GetData(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600086B")]
	[Address(RVA = "0x198E5D4", Offset = "0x198E5D4", VA = "0x198E5D4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x974AAC", Offset = "0x974AAC")]
	private static int SetData(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600086C")]
	[Address(RVA = "0x198E818", Offset = "0x198E818", VA = "0x198E818")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x974B10", Offset = "0x974B10")]
	private static int Create(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600086D")]
	[Address(RVA = "0x198EDC0", Offset = "0x198EDC0", VA = "0x198EDC0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x974B74", Offset = "0x974B74")]
	private static int op_Equality(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600086E")]
	[Address(RVA = "0x198F004", Offset = "0x198F004", VA = "0x198F004")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x974BD8", Offset = "0x974BD8")]
	private static int get_length(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600086F")]
	[Address(RVA = "0x198F1C8", Offset = "0x198F1C8", VA = "0x198F1C8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x974C3C", Offset = "0x974C3C")]
	private static int get_samples(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000870")]
	[Address(RVA = "0x198F380", Offset = "0x198F380", VA = "0x198F380")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x974CA0", Offset = "0x974CA0")]
	private static int get_channels(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000871")]
	[Address(RVA = "0x198F538", Offset = "0x198F538", VA = "0x198F538")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x974D04", Offset = "0x974D04")]
	private static int get_frequency(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000872")]
	[Address(RVA = "0x198F6F0", Offset = "0x198F6F0", VA = "0x198F6F0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x974D68", Offset = "0x974D68")]
	private static int get_loadType(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000873")]
	[Address(RVA = "0x198F8A0", Offset = "0x198F8A0", VA = "0x198F8A0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x974DCC", Offset = "0x974DCC")]
	private static int get_preloadAudioData(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000874")]
	[Address(RVA = "0x198FA58", Offset = "0x198FA58", VA = "0x198FA58")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x974E30", Offset = "0x974E30")]
	private static int get_ambisonic(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000875")]
	[Address(RVA = "0x198FC10", Offset = "0x198FC10", VA = "0x198FC10")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x974E94", Offset = "0x974E94")]
	private static int get_loadInBackground(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000876")]
	[Address(RVA = "0x198FDC8", Offset = "0x198FDC8", VA = "0x198FDC8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x974EF8", Offset = "0x974EF8")]
	private static int get_loadState(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000877")]
	[Address(RVA = "0x198FF78", Offset = "0x198FF78", VA = "0x198FF78")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x974F5C", Offset = "0x974F5C")]
	private static int UnityEngine_AudioClip_PCMReaderCallback(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000878")]
	[Address(RVA = "0x19901E0", Offset = "0x19901E0", VA = "0x19901E0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x974FC0", Offset = "0x974FC0")]
	private static int UnityEngine_AudioClip_PCMSetPositionCallback(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000879")]
	[Address(RVA = "0x19909B8", Offset = "0x19909B8", VA = "0x19909B8")]
	public UnityEngine_AudioClipWrap()
	{
	}
}
[Token(Token = "0x200007C")]
public class UnityEngine_AudioSourceWrap
{
	[Token(Token = "0x600087A")]
	[Address(RVA = "0x160CC5C", Offset = "0x160CC5C", VA = "0x160CC5C")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x600087B")]
	[Address(RVA = "0x16040BC", Offset = "0x16040BC", VA = "0x16040BC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x975024", Offset = "0x975024")]
	private static int _CreateUnityEngine_AudioSource(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600087C")]
	[Address(RVA = "0x160427C", Offset = "0x160427C", VA = "0x160427C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x975088", Offset = "0x975088")]
	private static int Play(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600087D")]
	[Address(RVA = "0x1604588", Offset = "0x1604588", VA = "0x1604588")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9750EC", Offset = "0x9750EC")]
	private static int PlayDelayed(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600087E")]
	[Address(RVA = "0x160477C", Offset = "0x160477C", VA = "0x160477C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x975150", Offset = "0x975150")]
	private static int PlayScheduled(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600087F")]
	[Address(RVA = "0x160496C", Offset = "0x160496C", VA = "0x160496C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9751B4", Offset = "0x9751B4")]
	private static int PlayOneShot(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000880")]
	[Address(RVA = "0x1604D34", Offset = "0x1604D34", VA = "0x1604D34")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x975218", Offset = "0x975218")]
	private static int SetScheduledStartTime(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000881")]
	[Address(RVA = "0x1604F24", Offset = "0x1604F24", VA = "0x1604F24")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97527C", Offset = "0x97527C")]
	private static int SetScheduledEndTime(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000882")]
	[Address(RVA = "0x1605114", Offset = "0x1605114", VA = "0x1605114")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9752E0", Offset = "0x9752E0")]
	private static int Stop(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000883")]
	[Address(RVA = "0x16052BC", Offset = "0x16052BC", VA = "0x16052BC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x975344", Offset = "0x975344")]
	private static int Pause(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000884")]
	[Address(RVA = "0x1605464", Offset = "0x1605464", VA = "0x1605464")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9753A8", Offset = "0x9753A8")]
	private static int UnPause(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000885")]
	[Address(RVA = "0x160560C", Offset = "0x160560C", VA = "0x160560C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97540C", Offset = "0x97540C")]
	private static int PlayClipAtPoint(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000886")]
	[Address(RVA = "0x1605974", Offset = "0x1605974", VA = "0x1605974")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x975470", Offset = "0x975470")]
	private static int SetCustomCurve(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000887")]
	[Address(RVA = "0x1605BF4", Offset = "0x1605BF4", VA = "0x1605BF4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9754D4", Offset = "0x9754D4")]
	private static int GetCustomCurve(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000888")]
	[Address(RVA = "0x1605E28", Offset = "0x1605E28", VA = "0x1605E28")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x975538", Offset = "0x975538")]
	private static int GetOutputData(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000889")]
	[Address(RVA = "0x1606054", Offset = "0x1606054", VA = "0x1606054")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97559C", Offset = "0x97559C")]
	private static int GetSpectrumData(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600088A")]
	[Address(RVA = "0x16062F0", Offset = "0x16062F0", VA = "0x16062F0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x975600", Offset = "0x975600")]
	private static int SetSpatializerFloat(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600088B")]
	[Address(RVA = "0x1606534", Offset = "0x1606534", VA = "0x1606534")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x975664", Offset = "0x975664")]
	private static int GetSpatializerFloat(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600088C")]
	[Address(RVA = "0x160676C", Offset = "0x160676C", VA = "0x160676C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9756C8", Offset = "0x9756C8")]
	private static int GetAmbisonicDecoderFloat(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600088D")]
	[Address(RVA = "0x16069A4", Offset = "0x16069A4", VA = "0x16069A4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97572C", Offset = "0x97572C")]
	private static int SetAmbisonicDecoderFloat(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600088E")]
	[Address(RVA = "0x1606BE8", Offset = "0x1606BE8", VA = "0x1606BE8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x975790", Offset = "0x975790")]
	private static int op_Equality(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0x1606E2C", Offset = "0x1606E2C", VA = "0x1606E2C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9757F4", Offset = "0x9757F4")]
	private static int get_volume(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000890")]
	[Address(RVA = "0x1606FF0", Offset = "0x1606FF0", VA = "0x1606FF0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x975858", Offset = "0x975858")]
	private static int get_pitch(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000891")]
	[Address(RVA = "0x16071B4", Offset = "0x16071B4", VA = "0x16071B4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9758BC", Offset = "0x9758BC")]
	private static int get_time(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000892")]
	[Address(RVA = "0x1607378", Offset = "0x1607378", VA = "0x1607378")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x975920", Offset = "0x975920")]
	private static int get_timeSamples(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000893")]
	[Address(RVA = "0x1607530", Offset = "0x1607530", VA = "0x1607530")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x975984", Offset = "0x975984")]
	private static int get_clip(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000894")]
	[Address(RVA = "0x16076CC", Offset = "0x16076CC", VA = "0x16076CC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9759E8", Offset = "0x9759E8")]
	private static int get_outputAudioMixerGroup(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000895")]
	[Address(RVA = "0x1607860", Offset = "0x1607860", VA = "0x1607860")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x975A4C", Offset = "0x975A4C")]
	private static int get_isPlaying(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000896")]
	[Address(RVA = "0x1607A18", Offset = "0x1607A18", VA = "0x1607A18")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x975AB0", Offset = "0x975AB0")]
	private static int get_isVirtual(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000897")]
	[Address(RVA = "0x1607BD0", Offset = "0x1607BD0", VA = "0x1607BD0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x975B14", Offset = "0x975B14")]
	private static int get_loop(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000898")]
	[Address(RVA = "0x1607D88", Offset = "0x1607D88", VA = "0x1607D88")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x975B78", Offset = "0x975B78")]
	private static int get_ignoreListenerVolume(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000899")]
	[Address(RVA = "0x1607F40", Offset = "0x1607F40", VA = "0x1607F40")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x975BDC", Offset = "0x975BDC")]
	private static int get_playOnAwake(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600089A")]
	[Address(RVA = "0x16080F8", Offset = "0x16080F8", VA = "0x16080F8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x975C40", Offset = "0x975C40")]
	private static int get_ignoreListenerPause(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600089B")]
	[Address(RVA = "0x16082B0", Offset = "0x16082B0", VA = "0x16082B0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x975CA4", Offset = "0x975CA4")]
	private static int get_velocityUpdateMode(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600089C")]
	[Address(RVA = "0x1608460", Offset = "0x1608460", VA = "0x1608460")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x975D08", Offset = "0x975D08")]
	private static int get_panStereo(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600089D")]
	[Address(RVA = "0x1608624", Offset = "0x1608624", VA = "0x1608624")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x975D6C", Offset = "0x975D6C")]
	private static int get_spatialBlend(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600089E")]
	[Address(RVA = "0x16087E8", Offset = "0x16087E8", VA = "0x16087E8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x975DD0", Offset = "0x975DD0")]
	private static int get_spatialize(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600089F")]
	[Address(RVA = "0x16089A0", Offset = "0x16089A0", VA = "0x16089A0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x975E34", Offset = "0x975E34")]
	private static int get_spatializePostEffects(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0x1608B58", Offset = "0x1608B58", VA = "0x1608B58")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x975E98", Offset = "0x975E98")]
	private static int get_reverbZoneMix(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0x1608D1C", Offset = "0x1608D1C", VA = "0x1608D1C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x975EFC", Offset = "0x975EFC")]
	private static int get_bypassEffects(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0x1608ED4", Offset = "0x1608ED4", VA = "0x1608ED4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x975F60", Offset = "0x975F60")]
	private static int get_bypassListenerEffects(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0x160908C", Offset = "0x160908C", VA = "0x160908C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x975FC4", Offset = "0x975FC4")]
	private static int get_bypassReverbZones(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0x1609244", Offset = "0x1609244", VA = "0x1609244")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x977028", Offset = "0x977028")]
	private static int get_dopplerLevel(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0x1609408", Offset = "0x1609408", VA = "0x1609408")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97708C", Offset = "0x97708C")]
	private static int get_spread(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0x16095CC", Offset = "0x16095CC", VA = "0x16095CC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9770F0", Offset = "0x9770F0")]
	private static int get_priority(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0x1609784", Offset = "0x1609784", VA = "0x1609784")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x977154", Offset = "0x977154")]
	private static int get_mute(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60008A8")]
	[Address(RVA = "0x160993C", Offset = "0x160993C", VA = "0x160993C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9771B8", Offset = "0x9771B8")]
	private static int get_minDistance(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0x1609B00", Offset = "0x1609B00", VA = "0x1609B00")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97721C", Offset = "0x97721C")]
	private static int get_maxDistance(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0x1609CC4", Offset = "0x1609CC4", VA = "0x1609CC4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x977280", Offset = "0x977280")]
	private static int get_rolloffMode(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60008AB")]
	[Address(RVA = "0x1609E74", Offset = "0x1609E74", VA = "0x1609E74")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9772E4", Offset = "0x9772E4")]
	private static int set_volume(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60008AC")]
	[Address(RVA = "0x160A02C", Offset = "0x160A02C", VA = "0x160A02C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x977348", Offset = "0x977348")]
	private static int set_pitch(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60008AD")]
	[Address(RVA = "0x160A1E4", Offset = "0x160A1E4", VA = "0x160A1E4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9773AC", Offset = "0x9773AC")]
	private static int set_time(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60008AE")]
	[Address(RVA = "0x160A39C", Offset = "0x160A39C", VA = "0x160A39C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x977410", Offset = "0x977410")]
	private static int set_timeSamples(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60008AF")]
	[Address(RVA = "0x160A568", Offset = "0x160A568", VA = "0x160A568")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x977474", Offset = "0x977474")]
	private static int set_clip(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0x160A768", Offset = "0x160A768", VA = "0x160A768")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9774D8", Offset = "0x9774D8")]
	private static int set_outputAudioMixerGroup(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60008B1")]
	[Address(RVA = "0x160A948", Offset = "0x160A948", VA = "0x160A948")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97753C", Offset = "0x97753C")]
	private static int set_loop(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0x160AB00", Offset = "0x160AB00", VA = "0x160AB00")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9775A0", Offset = "0x9775A0")]
	private static int set_ignoreListenerVolume(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0x160ACB8", Offset = "0x160ACB8", VA = "0x160ACB8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x977604", Offset = "0x977604")]
	private static int set_playOnAwake(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60008B4")]
	[Address(RVA = "0x160AE70", Offset = "0x160AE70", VA = "0x160AE70")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x977668", Offset = "0x977668")]
	private static int set_ignoreListenerPause(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60008B5")]
	[Address(RVA = "0x160B028", Offset = "0x160B028", VA = "0x160B028")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9776CC", Offset = "0x9776CC")]
	private static int set_velocityUpdateMode(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0x160B230", Offset = "0x160B230", VA = "0x160B230")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x977730", Offset = "0x977730")]
	private static int set_panStereo(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0x160B3E8", Offset = "0x160B3E8", VA = "0x160B3E8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x977794", Offset = "0x977794")]
	private static int set_spatialBlend(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60008B8")]
	[Address(RVA = "0x160B5A0", Offset = "0x160B5A0", VA = "0x160B5A0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9777F8", Offset = "0x9777F8")]
	private static int set_spatialize(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60008B9")]
	[Address(RVA = "0x160B758", Offset = "0x160B758", VA = "0x160B758")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97785C", Offset = "0x97785C")]
	private static int set_spatializePostEffects(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0x160B910", Offset = "0x160B910", VA = "0x160B910")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9778C0", Offset = "0x9778C0")]
	private static int set_reverbZoneMix(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60008BB")]
	[Address(RVA = "0x160BAC8", Offset = "0x160BAC8", VA = "0x160BAC8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x977924", Offset = "0x977924")]
	private static int set_bypassEffects(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60008BC")]
	[Address(RVA = "0x160BC80", Offset = "0x160BC80", VA = "0x160BC80")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x977988", Offset = "0x977988")]
	private static int set_bypassListenerEffects(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0x160BE38", Offset = "0x160BE38", VA = "0x160BE38")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9779EC", Offset = "0x9779EC")]
	private static int set_bypassReverbZones(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60008BE")]
	[Address(RVA = "0x160BFF0", Offset = "0x160BFF0", VA = "0x160BFF0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x977A50", Offset = "0x977A50")]
	private static int set_dopplerLevel(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60008BF")]
	[Address(RVA = "0x160C1A8", Offset = "0x160C1A8", VA = "0x160C1A8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x977AB4", Offset = "0x977AB4")]
	private static int set_spread(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60008C0")]
	[Address(RVA = "0x160C360", Offset = "0x160C360", VA = "0x160C360")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x977B18", Offset = "0x977B18")]
	private static int set_priority(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60008C1")]
	[Address(RVA = "0x160C52C", Offset = "0x160C52C", VA = "0x160C52C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x977B7C", Offset = "0x977B7C")]
	private static int set_mute(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60008C2")]
	[Address(RVA = "0x160C6E4", Offset = "0x160C6E4", VA = "0x160C6E4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x977BE0", Offset = "0x977BE0")]
	private static int set_minDistance(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60008C3")]
	[Address(RVA = "0x160C89C", Offset = "0x160C89C", VA = "0x160C89C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x977C44", Offset = "0x977C44")]
	private static int set_maxDistance(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60008C4")]
	[Address(RVA = "0x160CA54", Offset = "0x160CA54", VA = "0x160CA54")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x977CA8", Offset = "0x977CA8")]
	private static int set_rolloffMode(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60008C5")]
	[Address(RVA = "0x160DD80", Offset = "0x160DD80", VA = "0x160DD80")]
	public UnityEngine_AudioSourceWrap()
	{
	}
}
[Token(Token = "0x200007D")]
public class UnityEngine_BehaviourWrap
{
	[Token(Token = "0x60008C6")]
	[Address(RVA = "0x160E700", Offset = "0x160E700", VA = "0x160E700")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x60008C7")]
	[Address(RVA = "0x160DD88", Offset = "0x160DD88", VA = "0x160DD88")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x977D0C", Offset = "0x977D0C")]
	private static int _CreateUnityEngine_Behaviour(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60008C8")]
	[Address(RVA = "0x160DF40", Offset = "0x160DF40", VA = "0x160DF40")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x977D70", Offset = "0x977D70")]
	private static int op_Equality(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0x160E184", Offset = "0x160E184", VA = "0x160E184")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x977DD4", Offset = "0x977DD4")]
	private static int get_enabled(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60008CA")]
	[Address(RVA = "0x160E358", Offset = "0x160E358", VA = "0x160E358")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x977E38", Offset = "0x977E38")]
	private static int get_isActiveAndEnabled(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60008CB")]
	[Address(RVA = "0x160E52C", Offset = "0x160E52C", VA = "0x160E52C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x977E9C", Offset = "0x977E9C")]
	private static int set_enabled(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60008CC")]
	[Address(RVA = "0x160E938", Offset = "0x160E938", VA = "0x160E938")]
	public UnityEngine_BehaviourWrap()
	{
	}
}
[Token(Token = "0x200007E")]
public class UnityEngine_BlendWeightsWrap
{
	[Token(Token = "0x60008CD")]
	[Address(RVA = "0x160EC04", Offset = "0x160EC04", VA = "0x160EC04")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x60008CE")]
	[Address(RVA = "0x160EE7C", Offset = "0x160EE7C", VA = "0x160EE7C")]
	private static void Push(IntPtr L, SkinWeights arg)
	{
	}

	[Token(Token = "0x60008CF")]
	[Address(RVA = "0x160EF18", Offset = "0x160EF18", VA = "0x160EF18")]
	private static bool CheckType(IntPtr L, int pos)
	{
		return default(bool);
	}

	[Token(Token = "0x60008D0")]
	[Address(RVA = "0x160E940", Offset = "0x160E940", VA = "0x160E940")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x977F00", Offset = "0x977F00")]
	private static int get_OneBone(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60008D1")]
	[Address(RVA = "0x160E9E0", Offset = "0x160E9E0", VA = "0x160E9E0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x977F64", Offset = "0x977F64")]
	private static int get_TwoBones(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60008D2")]
	[Address(RVA = "0x160EA80", Offset = "0x160EA80", VA = "0x160EA80")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x977FC8", Offset = "0x977FC8")]
	private static int get_FourBones(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60008D3")]
	[Address(RVA = "0x160EB20", Offset = "0x160EB20", VA = "0x160EB20")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97902C", Offset = "0x97902C")]
	private static int IntToEnum(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60008D4")]
	[Address(RVA = "0x160EFD4", Offset = "0x160EFD4", VA = "0x160EFD4")]
	public UnityEngine_BlendWeightsWrap()
	{
	}
}
[Token(Token = "0x200007F")]
public class UnityEngine_BoxColliderWrap
{
	[Token(Token = "0x60008D5")]
	[Address(RVA = "0x160FA88", Offset = "0x160FA88", VA = "0x160FA88")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x60008D6")]
	[Address(RVA = "0x160EFDC", Offset = "0x160EFDC", VA = "0x160EFDC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x979090", Offset = "0x979090")]
	private static int _CreateUnityEngine_BoxCollider(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60008D7")]
	[Address(RVA = "0x160F194", Offset = "0x160F194", VA = "0x160F194")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9790F4", Offset = "0x9790F4")]
	private static int op_Equality(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60008D8")]
	[Address(RVA = "0x160F3D8", Offset = "0x160F3D8", VA = "0x160F3D8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x979158", Offset = "0x979158")]
	private static int get_center(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60008D9")]
	[Address(RVA = "0x160F584", Offset = "0x160F584", VA = "0x160F584")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9791BC", Offset = "0x9791BC")]
	private static int get_size(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60008DA")]
	[Address(RVA = "0x160F730", Offset = "0x160F730", VA = "0x160F730")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x979220", Offset = "0x979220")]
	private static int set_center(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60008DB")]
	[Address(RVA = "0x160F8DC", Offset = "0x160F8DC", VA = "0x160F8DC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x979284", Offset = "0x979284")]
	private static int set_size(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60008DC")]
	[Address(RVA = "0x160FCE4", Offset = "0x160FCE4", VA = "0x160FCE4")]
	public UnityEngine_BoxColliderWrap()
	{
	}
}
[Token(Token = "0x2000080")]
public class UnityEngine_CameraClearFlagsWrap
{
	[Token(Token = "0x60008DD")]
	[Address(RVA = "0x16100F0", Offset = "0x16100F0", VA = "0x16100F0")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x60008DE")]
	[Address(RVA = "0x16103F0", Offset = "0x16103F0", VA = "0x16103F0")]
	private static void Push(IntPtr L, CameraClearFlags arg)
	{
	}

	[Token(Token = "0x60008DF")]
	[Address(RVA = "0x161048C", Offset = "0x161048C", VA = "0x161048C")]
	private static bool CheckType(IntPtr L, int pos)
	{
		return default(bool);
	}

	[Token(Token = "0x60008E0")]
	[Address(RVA = "0x160FCEC", Offset = "0x160FCEC", VA = "0x160FCEC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9792E8", Offset = "0x9792E8")]
	private static int get_Skybox(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60008E1")]
	[Address(RVA = "0x160FD8C", Offset = "0x160FD8C", VA = "0x160FD8C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97934C", Offset = "0x97934C")]
	private static int get_Color(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60008E2")]
	[Address(RVA = "0x160FE2C", Offset = "0x160FE2C", VA = "0x160FE2C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9793B0", Offset = "0x9793B0")]
	private static int get_SolidColor(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60008E3")]
	[Address(RVA = "0x160FECC", Offset = "0x160FECC", VA = "0x160FECC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x979414", Offset = "0x979414")]
	private static int get_Depth(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60008E4")]
	[Address(RVA = "0x160FF6C", Offset = "0x160FF6C", VA = "0x160FF6C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x979478", Offset = "0x979478")]
	private static int get_Nothing(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60008E5")]
	[Address(RVA = "0x161000C", Offset = "0x161000C", VA = "0x161000C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9794DC", Offset = "0x9794DC")]
	private static int IntToEnum(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60008E6")]
	[Address(RVA = "0x1610548", Offset = "0x1610548", VA = "0x1610548")]
	public UnityEngine_CameraClearFlagsWrap()
	{
	}
}
[Token(Token = "0x2000081")]
public class UnityEngine_CameraWrap
{
	[Token(Token = "0x60008E7")]
	[Address(RVA = "0x162403C", Offset = "0x162403C", VA = "0x162403C")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x60008E8")]
	[Address(RVA = "0x1610550", Offset = "0x1610550", VA = "0x1610550")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x979540", Offset = "0x979540")]
	private static int _CreateUnityEngine_Camera(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60008E9")]
	[Address(RVA = "0x1610710", Offset = "0x1610710", VA = "0x1610710")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9795A4", Offset = "0x9795A4")]
	private static int Reset(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60008EA")]
	[Address(RVA = "0x16108B8", Offset = "0x16108B8", VA = "0x16108B8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x979608", Offset = "0x979608")]
	private static int ResetTransparencySortSettings(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60008EB")]
	[Address(RVA = "0x1610A60", Offset = "0x1610A60", VA = "0x1610A60")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97966C", Offset = "0x97966C")]
	private static int ResetAspect(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60008EC")]
	[Address(RVA = "0x1610C08", Offset = "0x1610C08", VA = "0x1610C08")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9796D0", Offset = "0x9796D0")]
	private static int ResetCullingMatrix(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60008ED")]
	[Address(RVA = "0x1610DB0", Offset = "0x1610DB0", VA = "0x1610DB0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x979734", Offset = "0x979734")]
	private static int SetReplacementShader(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60008EE")]
	[Address(RVA = "0x1610FDC", Offset = "0x1610FDC", VA = "0x1610FDC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x979798", Offset = "0x979798")]
	private static int ResetReplacementShader(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60008EF")]
	[Address(RVA = "0x1611184", Offset = "0x1611184", VA = "0x1611184")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9797FC", Offset = "0x9797FC")]
	private static int GetGateFittedFieldOfView(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60008F0")]
	[Address(RVA = "0x1611374", Offset = "0x1611374", VA = "0x1611374")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x979860", Offset = "0x979860")]
	private static int GetGateFittedLensShift(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60008F1")]
	[Address(RVA = "0x1611530", Offset = "0x1611530", VA = "0x1611530")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9798C4", Offset = "0x9798C4")]
	private static int SetTargetBuffers(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60008F2")]
	[Address(RVA = "0x16119B4", Offset = "0x16119B4", VA = "0x16119B4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x979928", Offset = "0x979928")]
	private static int ResetWorldToCameraMatrix(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60008F3")]
	[Address(RVA = "0x1611B5C", Offset = "0x1611B5C", VA = "0x1611B5C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97998C", Offset = "0x97998C")]
	private static int ResetProjectionMatrix(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60008F4")]
	[Address(RVA = "0x1611D04", Offset = "0x1611D04", VA = "0x1611D04")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9799F0", Offset = "0x9799F0")]
	private static int CalculateObliqueMatrix(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0x1611F04", Offset = "0x1611F04", VA = "0x1611F04")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x979A54", Offset = "0x979A54")]
	private static int WorldToScreenPoint(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60008F6")]
	[Address(RVA = "0x16122CC", Offset = "0x16122CC", VA = "0x16122CC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x979AB8", Offset = "0x979AB8")]
	private static int WorldToViewportPoint(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0x1612694", Offset = "0x1612694", VA = "0x1612694")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x979B1C", Offset = "0x979B1C")]
	private static int ViewportToWorldPoint(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0x1612A5C", Offset = "0x1612A5C", VA = "0x1612A5C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x979B80", Offset = "0x979B80")]
	private static int ScreenToWorldPoint(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0x1612E24", Offset = "0x1612E24", VA = "0x1612E24")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x979BE4", Offset = "0x979BE4")]
	private static int ScreenToViewportPoint(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0x1613004", Offset = "0x1613004", VA = "0x1613004")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x979C48", Offset = "0x979C48")]
	private static int ViewportToScreenPoint(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60008FB")]
	[Address(RVA = "0x16131E4", Offset = "0x16131E4", VA = "0x16131E4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x979CAC", Offset = "0x979CAC")]
	private static int ViewportPointToRay(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60008FC")]
	[Address(RVA = "0x16135D4", Offset = "0x16135D4", VA = "0x16135D4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x979D10", Offset = "0x979D10")]
	private static int ScreenPointToRay(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60008FD")]
	[Address(RVA = "0x16139C4", Offset = "0x16139C4", VA = "0x16139C4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x979D74", Offset = "0x979D74")]
	private static int CalculateFrustumCorners(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60008FE")]
	[Address(RVA = "0x1613CDC", Offset = "0x1613CDC", VA = "0x1613CDC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x979DD8", Offset = "0x979DD8")]
	private static int CalculateProjectionMatrixFromPhysicalProperties(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60008FF")]
	[Address(RVA = "0x1614110", Offset = "0x1614110", VA = "0x1614110")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x979E3C", Offset = "0x979E3C")]
	private static int FocalLengthToFieldOfView(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000900")]
	[Address(RVA = "0x16142B8", Offset = "0x16142B8", VA = "0x16142B8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x979EA0", Offset = "0x979EA0")]
	private static int FieldOfViewToFocalLength(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000901")]
	[Address(RVA = "0x1614460", Offset = "0x1614460", VA = "0x1614460")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x979F04", Offset = "0x979F04")]
	private static int HorizontalToVerticalFieldOfView(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000902")]
	[Address(RVA = "0x1614608", Offset = "0x1614608", VA = "0x1614608")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x979F68", Offset = "0x979F68")]
	private static int VerticalToHorizontalFieldOfView(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000903")]
	[Address(RVA = "0x16147B0", Offset = "0x16147B0", VA = "0x16147B0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x979FCC", Offset = "0x979FCC")]
	private static int GetStereoNonJitteredProjectionMatrix(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000904")]
	[Address(RVA = "0x1614A00", Offset = "0x1614A00", VA = "0x1614A00")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97A030", Offset = "0x97A030")]
	private static int GetStereoViewMatrix(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000905")]
	[Address(RVA = "0x1614C50", Offset = "0x1614C50", VA = "0x1614C50")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97A094", Offset = "0x97A094")]
	private static int CopyStereoDeviceProjectionMatrixToNonJittered(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000906")]
	[Address(RVA = "0x1614E6C", Offset = "0x1614E6C", VA = "0x1614E6C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97A0F8", Offset = "0x97A0F8")]
	private static int GetStereoProjectionMatrix(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000907")]
	[Address(RVA = "0x16150BC", Offset = "0x16150BC", VA = "0x16150BC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97A15C", Offset = "0x97A15C")]
	private static int SetStereoProjectionMatrix(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000908")]
	[Address(RVA = "0x161535C", Offset = "0x161535C", VA = "0x161535C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97A1C0", Offset = "0x97A1C0")]
	private static int ResetStereoProjectionMatrices(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000909")]
	[Address(RVA = "0x1615504", Offset = "0x1615504", VA = "0x1615504")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97A224", Offset = "0x97A224")]
	private static int SetStereoViewMatrix(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600090A")]
	[Address(RVA = "0x16157A4", Offset = "0x16157A4", VA = "0x16157A4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97A288", Offset = "0x97A288")]
	private static int ResetStereoViewMatrices(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600090B")]
	[Address(RVA = "0x161594C", Offset = "0x161594C", VA = "0x161594C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97A2EC", Offset = "0x97A2EC")]
	private static int GetAllCameras(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600090C")]
	[Address(RVA = "0x1615AD0", Offset = "0x1615AD0", VA = "0x1615AD0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97A350", Offset = "0x97A350")]
	private static int RenderToCubemap(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600090D")]
	[Address(RVA = "0x161647C", Offset = "0x161647C", VA = "0x161647C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97A3B4", Offset = "0x97A3B4")]
	private static int Render(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600090E")]
	[Address(RVA = "0x1616624", Offset = "0x1616624", VA = "0x1616624")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97A418", Offset = "0x97A418")]
	private static int RenderWithShader(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600090F")]
	[Address(RVA = "0x1616850", Offset = "0x1616850", VA = "0x1616850")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97A47C", Offset = "0x97A47C")]
	private static int RenderDontRestore(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000910")]
	[Address(RVA = "0x16169F8", Offset = "0x16169F8", VA = "0x16169F8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97A4E0", Offset = "0x97A4E0")]
	private static int SetupCurrent(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000911")]
	[Address(RVA = "0x1616B9C", Offset = "0x1616B9C", VA = "0x1616B9C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97A544", Offset = "0x97A544")]
	private static int CopyFrom(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000912")]
	[Address(RVA = "0x1616D9C", Offset = "0x1616D9C", VA = "0x1616D9C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97A5A8", Offset = "0x97A5A8")]
	private static int RemoveCommandBuffers(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000913")]
	[Address(RVA = "0x1616FB8", Offset = "0x1616FB8", VA = "0x1616FB8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97A60C", Offset = "0x97A60C")]
	private static int RemoveAllCommandBuffers(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000914")]
	[Address(RVA = "0x1617160", Offset = "0x1617160", VA = "0x1617160")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97A670", Offset = "0x97A670")]
	private static int AddCommandBuffer(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000915")]
	[Address(RVA = "0x16173E0", Offset = "0x16173E0", VA = "0x16173E0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97A6D4", Offset = "0x97A6D4")]
	private static int AddCommandBufferAsync(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000916")]
	[Address(RVA = "0x16176C8", Offset = "0x16176C8", VA = "0x16176C8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97A738", Offset = "0x97A738")]
	private static int RemoveCommandBuffer(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000917")]
	[Address(RVA = "0x1617948", Offset = "0x1617948", VA = "0x1617948")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97A79C", Offset = "0x97A79C")]
	private static int GetCommandBuffers(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000918")]
	[Address(RVA = "0x1617B7C", Offset = "0x1617B7C", VA = "0x1617B7C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97A800", Offset = "0x97A800")]
	private static int TryGetCullingParameters(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000919")]
	[Address(RVA = "0x1617F60", Offset = "0x1617F60", VA = "0x1617F60")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97A864", Offset = "0x97A864")]
	private static int op_Equality(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600091A")]
	[Address(RVA = "0x16181A4", Offset = "0x16181A4", VA = "0x16181A4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97A8C8", Offset = "0x97A8C8")]
	private static int get_onPreCull(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600091B")]
	[Address(RVA = "0x16182DC", Offset = "0x16182DC", VA = "0x16182DC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97A92C", Offset = "0x97A92C")]
	private static int get_onPreRender(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600091C")]
	[Address(RVA = "0x1618414", Offset = "0x1618414", VA = "0x1618414")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97A990", Offset = "0x97A990")]
	private static int get_onPostRender(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600091D")]
	[Address(RVA = "0x161854C", Offset = "0x161854C", VA = "0x161854C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97A9F4", Offset = "0x97A9F4")]
	private static int get_nearClipPlane(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600091E")]
	[Address(RVA = "0x1618710", Offset = "0x1618710", VA = "0x1618710")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97AA58", Offset = "0x97AA58")]
	private static int get_farClipPlane(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600091F")]
	[Address(RVA = "0x16188D4", Offset = "0x16188D4", VA = "0x16188D4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97AABC", Offset = "0x97AABC")]
	private static int get_fieldOfView(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000920")]
	[Address(RVA = "0x1618A98", Offset = "0x1618A98", VA = "0x1618A98")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97AB20", Offset = "0x97AB20")]
	private static int get_renderingPath(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000921")]
	[Address(RVA = "0x1618C48", Offset = "0x1618C48", VA = "0x1618C48")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97AB84", Offset = "0x97AB84")]
	private static int get_actualRenderingPath(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000922")]
	[Address(RVA = "0x1618DF8", Offset = "0x1618DF8", VA = "0x1618DF8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97ABE8", Offset = "0x97ABE8")]
	private static int get_allowHDR(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000923")]
	[Address(RVA = "0x1618FB0", Offset = "0x1618FB0", VA = "0x1618FB0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97AC4C", Offset = "0x97AC4C")]
	private static int get_allowMSAA(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000924")]
	[Address(RVA = "0x1619168", Offset = "0x1619168", VA = "0x1619168")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97ACB0", Offset = "0x97ACB0")]
	private static int get_allowDynamicResolution(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000925")]
	[Address(RVA = "0x1619320", Offset = "0x1619320", VA = "0x1619320")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97AD14", Offset = "0x97AD14")]
	private static int get_forceIntoRenderTexture(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000926")]
	[Address(RVA = "0x16194D8", Offset = "0x16194D8", VA = "0x16194D8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97AD78", Offset = "0x97AD78")]
	private static int get_orthographicSize(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000927")]
	[Address(RVA = "0x161969C", Offset = "0x161969C", VA = "0x161969C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97ADDC", Offset = "0x97ADDC")]
	private static int get_orthographic(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000928")]
	[Address(RVA = "0x1619854", Offset = "0x1619854", VA = "0x1619854")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97AE40", Offset = "0x97AE40")]
	private static int get_opaqueSortMode(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000929")]
	[Address(RVA = "0x1619A04", Offset = "0x1619A04", VA = "0x1619A04")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97AEA4", Offset = "0x97AEA4")]
	private static int get_transparencySortMode(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600092A")]
	[Address(RVA = "0x1619BB4", Offset = "0x1619BB4", VA = "0x1619BB4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97AF08", Offset = "0x97AF08")]
	private static int get_transparencySortAxis(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600092B")]
	[Address(RVA = "0x1619D44", Offset = "0x1619D44", VA = "0x1619D44")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97AF6C", Offset = "0x97AF6C")]
	private static int get_depth(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600092C")]
	[Address(RVA = "0x1619F08", Offset = "0x1619F08", VA = "0x1619F08")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97AFD0", Offset = "0x97AFD0")]
	private static int get_aspect(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600092D")]
	[Address(RVA = "0x161A0CC", Offset = "0x161A0CC", VA = "0x161A0CC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97B034", Offset = "0x97B034")]
	private static int get_velocity(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600092E")]
	[Address(RVA = "0x161A25C", Offset = "0x161A25C", VA = "0x161A25C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97B098", Offset = "0x97B098")]
	private static int get_cullingMask(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600092F")]
	[Address(RVA = "0x161A414", Offset = "0x161A414", VA = "0x161A414")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97B0FC", Offset = "0x97B0FC")]
	private static int get_eventMask(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000930")]
	[Address(RVA = "0x161A5CC", Offset = "0x161A5CC", VA = "0x161A5CC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97B160", Offset = "0x97B160")]
	private static int get_layerCullSpherical(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000931")]
	[Address(RVA = "0x161A784", Offset = "0x161A784", VA = "0x161A784")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97B1C4", Offset = "0x97B1C4")]
	private static int get_cameraType(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000932")]
	[Address(RVA = "0x161A934", Offset = "0x161A934", VA = "0x161A934")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97B228", Offset = "0x97B228")]
	private static int get_overrideSceneCullingMask(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000933")]
	[Address(RVA = "0x161AAEC", Offset = "0x161AAEC", VA = "0x161AAEC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97B28C", Offset = "0x97B28C")]
	private static int get_layerCullDistances(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000934")]
	[Address(RVA = "0x161AC80", Offset = "0x161AC80", VA = "0x161AC80")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97B2F0", Offset = "0x97B2F0")]
	private static int get_useOcclusionCulling(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000935")]
	[Address(RVA = "0x161AE38", Offset = "0x161AE38", VA = "0x161AE38")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97B354", Offset = "0x97B354")]
	private static int get_cullingMatrix(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000936")]
	[Address(RVA = "0x161AFE8", Offset = "0x161AFE8", VA = "0x161AFE8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97B3B8", Offset = "0x97B3B8")]
	private static int get_backgroundColor(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000937")]
	[Address(RVA = "0x161B178", Offset = "0x161B178", VA = "0x161B178")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97B41C", Offset = "0x97B41C")]
	private static int get_clearFlags(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000938")]
	[Address(RVA = "0x161B328", Offset = "0x161B328", VA = "0x161B328")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97B480", Offset = "0x97B480")]
	private static int get_depthTextureMode(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000939")]
	[Address(RVA = "0x161B4D8", Offset = "0x161B4D8", VA = "0x161B4D8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97B4E4", Offset = "0x97B4E4")]
	private static int get_clearStencilAfterLightingPass(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600093A")]
	[Address(RVA = "0x161B690", Offset = "0x161B690", VA = "0x161B690")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97B548", Offset = "0x97B548")]
	private static int get_usePhysicalProperties(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600093B")]
	[Address(RVA = "0x161B848", Offset = "0x161B848", VA = "0x161B848")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97B5AC", Offset = "0x97B5AC")]
	private static int get_sensorSize(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600093C")]
	[Address(RVA = "0x161B9D8", Offset = "0x161B9D8", VA = "0x161B9D8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97B610", Offset = "0x97B610")]
	private static int get_lensShift(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600093D")]
	[Address(RVA = "0x161BB68", Offset = "0x161BB68", VA = "0x161BB68")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97B674", Offset = "0x97B674")]
	private static int get_focalLength(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600093E")]
	[Address(RVA = "0x161BD2C", Offset = "0x161BD2C", VA = "0x161BD2C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97B6D8", Offset = "0x97B6D8")]
	private static int get_gateFit(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600093F")]
	[Address(RVA = "0x161BEDC", Offset = "0x161BEDC", VA = "0x161BEDC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97B73C", Offset = "0x97B73C")]
	private static int get_rect(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000940")]
	[Address(RVA = "0x161C074", Offset = "0x161C074", VA = "0x161C074")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97B7A0", Offset = "0x97B7A0")]
	private static int get_pixelRect(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000941")]
	[Address(RVA = "0x161C20C", Offset = "0x161C20C", VA = "0x161C20C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97B804", Offset = "0x97B804")]
	private static int get_pixelWidth(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000942")]
	[Address(RVA = "0x161C3C4", Offset = "0x161C3C4", VA = "0x161C3C4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97B868", Offset = "0x97B868")]
	private static int get_pixelHeight(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000943")]
	[Address(RVA = "0x161C57C", Offset = "0x161C57C", VA = "0x161C57C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97B8CC", Offset = "0x97B8CC")]
	private static int get_scaledPixelWidth(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000944")]
	[Address(RVA = "0x161C734", Offset = "0x161C734", VA = "0x161C734")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97B930", Offset = "0x97B930")]
	private static int get_scaledPixelHeight(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000945")]
	[Address(RVA = "0x161C8EC", Offset = "0x161C8EC", VA = "0x161C8EC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97B994", Offset = "0x97B994")]
	private static int get_targetTexture(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000946")]
	[Address(RVA = "0x161CA80", Offset = "0x161CA80", VA = "0x161CA80")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97B9F8", Offset = "0x97B9F8")]
	private static int get_activeTexture(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000947")]
	[Address(RVA = "0x161CC14", Offset = "0x161CC14", VA = "0x161CC14")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97BA5C", Offset = "0x97BA5C")]
	private static int get_targetDisplay(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000948")]
	[Address(RVA = "0x161CDCC", Offset = "0x161CDCC", VA = "0x161CDCC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97BAC0", Offset = "0x97BAC0")]
	private static int get_cameraToWorldMatrix(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000949")]
	[Address(RVA = "0x161CF7C", Offset = "0x161CF7C", VA = "0x161CF7C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97BB24", Offset = "0x97BB24")]
	private static int get_worldToCameraMatrix(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600094A")]
	[Address(RVA = "0x161D12C", Offset = "0x161D12C", VA = "0x161D12C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97BB88", Offset = "0x97BB88")]
	private static int get_projectionMatrix(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600094B")]
	[Address(RVA = "0x161D2DC", Offset = "0x161D2DC", VA = "0x161D2DC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97BBEC", Offset = "0x97BBEC")]
	private static int get_nonJitteredProjectionMatrix(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600094C")]
	[Address(RVA = "0x161D48C", Offset = "0x161D48C", VA = "0x161D48C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97BC50", Offset = "0x97BC50")]
	private static int get_useJitteredProjectionMatrixForTransparentRendering(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600094D")]
	[Address(RVA = "0x161D644", Offset = "0x161D644", VA = "0x161D644")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97BCB4", Offset = "0x97BCB4")]
	private static int get_previousViewProjectionMatrix(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600094E")]
	[Address(RVA = "0x161D7F4", Offset = "0x161D7F4", VA = "0x161D7F4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97BD18", Offset = "0x97BD18")]
	private static int get_main(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600094F")]
	[Address(RVA = "0x161D92C", Offset = "0x161D92C", VA = "0x161D92C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97BD7C", Offset = "0x97BD7C")]
	private static int get_current(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000950")]
	[Address(RVA = "0x161DA64", Offset = "0x161DA64", VA = "0x161DA64")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97BDE0", Offset = "0x97BDE0")]
	private static int get_scene(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000951")]
	[Address(RVA = "0x161DC00", Offset = "0x161DC00", VA = "0x161DC00")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97BE44", Offset = "0x97BE44")]
	private static int get_stereoEnabled(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000952")]
	[Address(RVA = "0x161DDB8", Offset = "0x161DDB8", VA = "0x161DDB8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97BEA8", Offset = "0x97BEA8")]
	private static int get_stereoSeparation(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000953")]
	[Address(RVA = "0x161DF7C", Offset = "0x161DF7C", VA = "0x161DF7C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97BF0C", Offset = "0x97BF0C")]
	private static int get_stereoConvergence(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000954")]
	[Address(RVA = "0x161E140", Offset = "0x161E140", VA = "0x161E140")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97BF70", Offset = "0x97BF70")]
	private static int get_areVRStereoViewMatricesWithinSingleCullTolerance(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000955")]
	[Address(RVA = "0x161E2F8", Offset = "0x161E2F8", VA = "0x161E2F8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97BFD4", Offset = "0x97BFD4")]
	private static int get_stereoTargetEye(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000956")]
	[Address(RVA = "0x161E4A8", Offset = "0x161E4A8", VA = "0x161E4A8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97C038", Offset = "0x97C038")]
	private static int get_stereoActiveEye(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000957")]
	[Address(RVA = "0x161E658", Offset = "0x161E658", VA = "0x161E658")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97C09C", Offset = "0x97C09C")]
	private static int get_allCamerasCount(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000958")]
	[Address(RVA = "0x161E788", Offset = "0x161E788", VA = "0x161E788")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97C100", Offset = "0x97C100")]
	private static int get_allCameras(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000959")]
	[Address(RVA = "0x161E8B8", Offset = "0x161E8B8", VA = "0x161E8B8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97C164", Offset = "0x97C164")]
	private static int get_commandBufferCount(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600095A")]
	[Address(RVA = "0x161EA70", Offset = "0x161EA70", VA = "0x161EA70")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97C1C8", Offset = "0x97C1C8")]
	private static int set_onPreCull(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600095B")]
	[Address(RVA = "0x161EBD4", Offset = "0x161EBD4", VA = "0x161EBD4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97C22C", Offset = "0x97C22C")]
	private static int set_onPreRender(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600095C")]
	[Address(RVA = "0x161ED38", Offset = "0x161ED38", VA = "0x161ED38")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97C290", Offset = "0x97C290")]
	private static int set_onPostRender(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600095D")]
	[Address(RVA = "0x161EE9C", Offset = "0x161EE9C", VA = "0x161EE9C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97C2F4", Offset = "0x97C2F4")]
	private static int set_nearClipPlane(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600095E")]
	[Address(RVA = "0x161F054", Offset = "0x161F054", VA = "0x161F054")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97C358", Offset = "0x97C358")]
	private static int set_farClipPlane(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600095F")]
	[Address(RVA = "0x161F20C", Offset = "0x161F20C", VA = "0x161F20C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97C3BC", Offset = "0x97C3BC")]
	private static int set_fieldOfView(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000960")]
	[Address(RVA = "0x161F3C4", Offset = "0x161F3C4", VA = "0x161F3C4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97C420", Offset = "0x97C420")]
	private static int set_renderingPath(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000961")]
	[Address(RVA = "0x161F5CC", Offset = "0x161F5CC", VA = "0x161F5CC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97C484", Offset = "0x97C484")]
	private static int set_allowHDR(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000962")]
	[Address(RVA = "0x161F784", Offset = "0x161F784", VA = "0x161F784")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97C4E8", Offset = "0x97C4E8")]
	private static int set_allowMSAA(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000963")]
	[Address(RVA = "0x161F93C", Offset = "0x161F93C", VA = "0x161F93C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97C54C", Offset = "0x97C54C")]
	private static int set_allowDynamicResolution(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000964")]
	[Address(RVA = "0x161FAF4", Offset = "0x161FAF4", VA = "0x161FAF4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97C5B0", Offset = "0x97C5B0")]
	private static int set_forceIntoRenderTexture(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000965")]
	[Address(RVA = "0x161FCAC", Offset = "0x161FCAC", VA = "0x161FCAC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97C614", Offset = "0x97C614")]
	private static int set_orthographicSize(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000966")]
	[Address(RVA = "0x161FE64", Offset = "0x161FE64", VA = "0x161FE64")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97C678", Offset = "0x97C678")]
	private static int set_orthographic(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000967")]
	[Address(RVA = "0x162001C", Offset = "0x162001C", VA = "0x162001C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97C6DC", Offset = "0x97C6DC")]
	private static int set_opaqueSortMode(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000968")]
	[Address(RVA = "0x1620224", Offset = "0x1620224", VA = "0x1620224")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97C740", Offset = "0x97C740")]
	private static int set_transparencySortMode(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000969")]
	[Address(RVA = "0x162042C", Offset = "0x162042C", VA = "0x162042C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97C7A4", Offset = "0x97C7A4")]
	private static int set_transparencySortAxis(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600096A")]
	[Address(RVA = "0x16205BC", Offset = "0x16205BC", VA = "0x16205BC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97C808", Offset = "0x97C808")]
	private static int set_depth(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600096B")]
	[Address(RVA = "0x1620774", Offset = "0x1620774", VA = "0x1620774")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97C86C", Offset = "0x97C86C")]
	private static int set_aspect(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600096C")]
	[Address(RVA = "0x162092C", Offset = "0x162092C", VA = "0x162092C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97C8D0", Offset = "0x97C8D0")]
	private static int set_cullingMask(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600096D")]
	[Address(RVA = "0x1620AF8", Offset = "0x1620AF8", VA = "0x1620AF8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97C934", Offset = "0x97C934")]
	private static int set_eventMask(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600096E")]
	[Address(RVA = "0x1620CC4", Offset = "0x1620CC4", VA = "0x1620CC4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97C998", Offset = "0x97C998")]
	private static int set_layerCullSpherical(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600096F")]
	[Address(RVA = "0x1620E7C", Offset = "0x1620E7C", VA = "0x1620E7C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97C9FC", Offset = "0x97C9FC")]
	private static int set_cameraType(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000970")]
	[Address(RVA = "0x1621084", Offset = "0x1621084", VA = "0x1621084")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97CA60", Offset = "0x97CA60")]
	private static int set_overrideSceneCullingMask(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000971")]
	[Address(RVA = "0x1621240", Offset = "0x1621240", VA = "0x1621240")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97CAC4", Offset = "0x97CAC4")]
	private static int set_layerCullDistances(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000972")]
	[Address(RVA = "0x16213E0", Offset = "0x16213E0", VA = "0x16213E0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97CB28", Offset = "0x97CB28")]
	private static int set_useOcclusionCulling(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000973")]
	[Address(RVA = "0x1621598", Offset = "0x1621598", VA = "0x1621598")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97CB8C", Offset = "0x97CB8C")]
	private static int set_cullingMatrix(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000974")]
	[Address(RVA = "0x1621794", Offset = "0x1621794", VA = "0x1621794")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97CBF0", Offset = "0x97CBF0")]
	private static int set_backgroundColor(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000975")]
	[Address(RVA = "0x1621924", Offset = "0x1621924", VA = "0x1621924")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97CC54", Offset = "0x97CC54")]
	private static int set_clearFlags(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000976")]
	[Address(RVA = "0x1621B2C", Offset = "0x1621B2C", VA = "0x1621B2C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97CCB8", Offset = "0x97CCB8")]
	private static int set_depthTextureMode(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000977")]
	[Address(RVA = "0x1621D34", Offset = "0x1621D34", VA = "0x1621D34")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97CD1C", Offset = "0x97CD1C")]
	private static int set_clearStencilAfterLightingPass(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000978")]
	[Address(RVA = "0x1621EEC", Offset = "0x1621EEC", VA = "0x1621EEC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97CD80", Offset = "0x97CD80")]
	private static int set_usePhysicalProperties(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000979")]
	[Address(RVA = "0x16220A4", Offset = "0x16220A4", VA = "0x16220A4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97CDE4", Offset = "0x97CDE4")]
	private static int set_sensorSize(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600097A")]
	[Address(RVA = "0x1622234", Offset = "0x1622234", VA = "0x1622234")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97CE48", Offset = "0x97CE48")]
	private static int set_lensShift(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600097B")]
	[Address(RVA = "0x16223C4", Offset = "0x16223C4", VA = "0x16223C4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97CEAC", Offset = "0x97CEAC")]
	private static int set_focalLength(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600097C")]
	[Address(RVA = "0x162257C", Offset = "0x162257C", VA = "0x162257C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97CF10", Offset = "0x97CF10")]
	private static int set_gateFit(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600097D")]
	[Address(RVA = "0x1622784", Offset = "0x1622784", VA = "0x1622784")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97CF74", Offset = "0x97CF74")]
	private static int set_rect(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600097E")]
	[Address(RVA = "0x1622958", Offset = "0x1622958", VA = "0x1622958")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97CFD8", Offset = "0x97CFD8")]
	private static int set_pixelRect(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600097F")]
	[Address(RVA = "0x1622B2C", Offset = "0x1622B2C", VA = "0x1622B2C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97D03C", Offset = "0x97D03C")]
	private static int set_targetTexture(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000980")]
	[Address(RVA = "0x1622D0C", Offset = "0x1622D0C", VA = "0x1622D0C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97D0A0", Offset = "0x97D0A0")]
	private static int set_targetDisplay(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000981")]
	[Address(RVA = "0x1622ED8", Offset = "0x1622ED8", VA = "0x1622ED8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97D104", Offset = "0x97D104")]
	private static int set_worldToCameraMatrix(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000982")]
	[Address(RVA = "0x16230D4", Offset = "0x16230D4", VA = "0x16230D4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97D168", Offset = "0x97D168")]
	private static int set_projectionMatrix(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000983")]
	[Address(RVA = "0x16232D0", Offset = "0x16232D0", VA = "0x16232D0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97D1CC", Offset = "0x97D1CC")]
	private static int set_nonJitteredProjectionMatrix(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000984")]
	[Address(RVA = "0x16234CC", Offset = "0x16234CC", VA = "0x16234CC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97D230", Offset = "0x97D230")]
	private static int set_useJitteredProjectionMatrixForTransparentRendering(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000985")]
	[Address(RVA = "0x1623684", Offset = "0x1623684", VA = "0x1623684")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97D294", Offset = "0x97D294")]
	private static int set_scene(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000986")]
	[Address(RVA = "0x162385C", Offset = "0x162385C", VA = "0x162385C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97D2F8", Offset = "0x97D2F8")]
	private static int set_stereoSeparation(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000987")]
	[Address(RVA = "0x1623A14", Offset = "0x1623A14", VA = "0x1623A14")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97D35C", Offset = "0x97D35C")]
	private static int set_stereoConvergence(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000988")]
	[Address(RVA = "0x1623BCC", Offset = "0x1623BCC", VA = "0x1623BCC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97D3C0", Offset = "0x97D3C0")]
	private static int set_stereoTargetEye(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000989")]
	[Address(RVA = "0x1623DD4", Offset = "0x1623DD4", VA = "0x1623DD4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97D424", Offset = "0x97D424")]
	private static int UnityEngine_Camera_CameraCallback(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600098A")]
	[Address(RVA = "0x16265A4", Offset = "0x16265A4", VA = "0x16265A4")]
	public UnityEngine_CameraWrap()
	{
	}
}
[Token(Token = "0x2000082")]
public class UnityEngine_CanvasWrap
{
	[Token(Token = "0x600098B")]
	[Address(RVA = "0x18791F8", Offset = "0x18791F8", VA = "0x18791F8")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x600098C")]
	[Address(RVA = "0x1874654", Offset = "0x1874654", VA = "0x1874654")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97D488", Offset = "0x97D488")]
	private static int _CreateUnityEngine_Canvas(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600098D")]
	[Address(RVA = "0x1874814", Offset = "0x1874814", VA = "0x1874814")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97D4EC", Offset = "0x97D4EC")]
	private static int GetDefaultCanvasMaterial(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600098E")]
	[Address(RVA = "0x1874958", Offset = "0x1874958", VA = "0x1874958")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97D550", Offset = "0x97D550")]
	private static int GetETC1SupportedCanvasMaterial(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600098F")]
	[Address(RVA = "0x1874A9C", Offset = "0x1874A9C", VA = "0x1874A9C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97D5B4", Offset = "0x97D5B4")]
	private static int ForceUpdateCanvases(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000990")]
	[Address(RVA = "0x1874BC8", Offset = "0x1874BC8", VA = "0x1874BC8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97D618", Offset = "0x97D618")]
	private static int op_Equality(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000991")]
	[Address(RVA = "0x1874E0C", Offset = "0x1874E0C", VA = "0x1874E0C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97D67C", Offset = "0x97D67C")]
	private static int get_renderMode(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000992")]
	[Address(RVA = "0x1874FBC", Offset = "0x1874FBC", VA = "0x1874FBC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97D6E0", Offset = "0x97D6E0")]
	private static int get_isRootCanvas(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000993")]
	[Address(RVA = "0x1875174", Offset = "0x1875174", VA = "0x1875174")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97D744", Offset = "0x97D744")]
	private static int get_pixelRect(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000994")]
	[Address(RVA = "0x187530C", Offset = "0x187530C", VA = "0x187530C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97D7A8", Offset = "0x97D7A8")]
	private static int get_scaleFactor(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000995")]
	[Address(RVA = "0x18754D0", Offset = "0x18754D0", VA = "0x18754D0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97D80C", Offset = "0x97D80C")]
	private static int get_referencePixelsPerUnit(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000996")]
	[Address(RVA = "0x1875694", Offset = "0x1875694", VA = "0x1875694")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97D870", Offset = "0x97D870")]
	private static int get_overridePixelPerfect(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000997")]
	[Address(RVA = "0x187584C", Offset = "0x187584C", VA = "0x187584C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97D8D4", Offset = "0x97D8D4")]
	private static int get_pixelPerfect(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000998")]
	[Address(RVA = "0x1875A04", Offset = "0x1875A04", VA = "0x1875A04")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97D938", Offset = "0x97D938")]
	private static int get_planeDistance(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000999")]
	[Address(RVA = "0x1875BC8", Offset = "0x1875BC8", VA = "0x1875BC8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97D99C", Offset = "0x97D99C")]
	private static int get_renderOrder(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600099A")]
	[Address(RVA = "0x1875D80", Offset = "0x1875D80", VA = "0x1875D80")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97DA00", Offset = "0x97DA00")]
	private static int get_overrideSorting(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600099B")]
	[Address(RVA = "0x1875F38", Offset = "0x1875F38", VA = "0x1875F38")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97DA64", Offset = "0x97DA64")]
	private static int get_sortingOrder(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600099C")]
	[Address(RVA = "0x18760F0", Offset = "0x18760F0", VA = "0x18760F0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97DAC8", Offset = "0x97DAC8")]
	private static int get_targetDisplay(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600099D")]
	[Address(RVA = "0x18762A8", Offset = "0x18762A8", VA = "0x18762A8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97DB2C", Offset = "0x97DB2C")]
	private static int get_sortingLayerID(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600099E")]
	[Address(RVA = "0x1876460", Offset = "0x1876460", VA = "0x1876460")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97DB90", Offset = "0x97DB90")]
	private static int get_cachedSortingLayerValue(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x600099F")]
	[Address(RVA = "0x1876618", Offset = "0x1876618", VA = "0x1876618")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97DBF4", Offset = "0x97DBF4")]
	private static int get_additionalShaderChannels(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009A0")]
	[Address(RVA = "0x18767C8", Offset = "0x18767C8", VA = "0x18767C8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97DC58", Offset = "0x97DC58")]
	private static int get_sortingLayerName(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009A1")]
	[Address(RVA = "0x1876980", Offset = "0x1876980", VA = "0x1876980")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97DCBC", Offset = "0x97DCBC")]
	private static int get_rootCanvas(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009A2")]
	[Address(RVA = "0x1876B1C", Offset = "0x1876B1C", VA = "0x1876B1C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97DD20", Offset = "0x97DD20")]
	private static int get_renderingDisplaySize(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009A3")]
	[Address(RVA = "0x1876CAC", Offset = "0x1876CAC", VA = "0x1876CAC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97DD84", Offset = "0x97DD84")]
	private static int get_worldCamera(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009A4")]
	[Address(RVA = "0x1876E48", Offset = "0x1876E48", VA = "0x1876E48")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97DDE8", Offset = "0x97DDE8")]
	private static int get_normalizedSortingGridSize(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009A5")]
	[Address(RVA = "0x187700C", Offset = "0x187700C", VA = "0x187700C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97DE4C", Offset = "0x97DE4C")]
	private static int get_preWillRenderCanvases(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009A6")]
	[Address(RVA = "0x18770E8", Offset = "0x18770E8", VA = "0x18770E8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97DEB0", Offset = "0x97DEB0")]
	private static int get_willRenderCanvases(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009A7")]
	[Address(RVA = "0x18771C4", Offset = "0x18771C4", VA = "0x18771C4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97DF14", Offset = "0x97DF14")]
	private static int set_renderMode(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009A8")]
	[Address(RVA = "0x18773CC", Offset = "0x18773CC", VA = "0x18773CC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97DF78", Offset = "0x97DF78")]
	private static int set_scaleFactor(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009A9")]
	[Address(RVA = "0x1877584", Offset = "0x1877584", VA = "0x1877584")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97DFDC", Offset = "0x97DFDC")]
	private static int set_referencePixelsPerUnit(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009AA")]
	[Address(RVA = "0x187773C", Offset = "0x187773C", VA = "0x187773C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97F040", Offset = "0x97F040")]
	private static int set_overridePixelPerfect(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009AB")]
	[Address(RVA = "0x18778F4", Offset = "0x18778F4", VA = "0x18778F4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97F0A4", Offset = "0x97F0A4")]
	private static int set_pixelPerfect(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009AC")]
	[Address(RVA = "0x1877AAC", Offset = "0x1877AAC", VA = "0x1877AAC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97F108", Offset = "0x97F108")]
	private static int set_planeDistance(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009AD")]
	[Address(RVA = "0x1877C64", Offset = "0x1877C64", VA = "0x1877C64")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97F16C", Offset = "0x97F16C")]
	private static int set_overrideSorting(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009AE")]
	[Address(RVA = "0x1877E1C", Offset = "0x1877E1C", VA = "0x1877E1C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97F1D0", Offset = "0x97F1D0")]
	private static int set_sortingOrder(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009AF")]
	[Address(RVA = "0x1877FE8", Offset = "0x1877FE8", VA = "0x1877FE8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97F234", Offset = "0x97F234")]
	private static int set_targetDisplay(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009B0")]
	[Address(RVA = "0x18781B4", Offset = "0x18781B4", VA = "0x18781B4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97F298", Offset = "0x97F298")]
	private static int set_sortingLayerID(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009B1")]
	[Address(RVA = "0x1878380", Offset = "0x1878380", VA = "0x1878380")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97F2FC", Offset = "0x97F2FC")]
	private static int set_additionalShaderChannels(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009B2")]
	[Address(RVA = "0x1878588", Offset = "0x1878588", VA = "0x1878588")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97F360", Offset = "0x97F360")]
	private static int set_sortingLayerName(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009B3")]
	[Address(RVA = "0x1878720", Offset = "0x1878720", VA = "0x1878720")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97F3C4", Offset = "0x97F3C4")]
	private static int set_worldCamera(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009B4")]
	[Address(RVA = "0x1878920", Offset = "0x1878920", VA = "0x1878920")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97F428", Offset = "0x97F428")]
	private static int set_normalizedSortingGridSize(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009B5")]
	[Address(RVA = "0x1878AD8", Offset = "0x1878AD8", VA = "0x1878AD8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97F48C", Offset = "0x97F48C")]
	private static int set_preWillRenderCanvases(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009B6")]
	[Address(RVA = "0x1878D34", Offset = "0x1878D34", VA = "0x1878D34")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97F4F0", Offset = "0x97F4F0")]
	private static int set_willRenderCanvases(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009B7")]
	[Address(RVA = "0x1878F90", Offset = "0x1878F90", VA = "0x1878F90")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97F554", Offset = "0x97F554")]
	private static int UnityEngine_Canvas_WillRenderCanvases(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009B8")]
	[Address(RVA = "0x1879C9C", Offset = "0x1879C9C", VA = "0x1879C9C")]
	public UnityEngine_CanvasWrap()
	{
	}
}
[Token(Token = "0x2000083")]
public class UnityEngine_ColliderWrap
{
	[Token(Token = "0x60009B9")]
	[Address(RVA = "0x187BCD0", Offset = "0x187BCD0", VA = "0x187BCD0")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x60009BA")]
	[Address(RVA = "0x1879CA4", Offset = "0x1879CA4", VA = "0x1879CA4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97F5B8", Offset = "0x97F5B8")]
	private static int _CreateUnityEngine_Collider(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009BB")]
	[Address(RVA = "0x1879E5C", Offset = "0x1879E5C", VA = "0x1879E5C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97F61C", Offset = "0x97F61C")]
	private static int ClosestPoint(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009BC")]
	[Address(RVA = "0x187A01C", Offset = "0x187A01C", VA = "0x187A01C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97F680", Offset = "0x97F680")]
	private static int Raycast(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009BD")]
	[Address(RVA = "0x187A2FC", Offset = "0x187A2FC", VA = "0x187A2FC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97F6E4", Offset = "0x97F6E4")]
	private static int ClosestPointOnBounds(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009BE")]
	[Address(RVA = "0x187A4BC", Offset = "0x187A4BC", VA = "0x187A4BC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97F748", Offset = "0x97F748")]
	private static int op_Equality(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009BF")]
	[Address(RVA = "0x187A700", Offset = "0x187A700", VA = "0x187A700")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97F7AC", Offset = "0x97F7AC")]
	private static int get_enabled(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009C0")]
	[Address(RVA = "0x187A8D4", Offset = "0x187A8D4", VA = "0x187A8D4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97F810", Offset = "0x97F810")]
	private static int get_attachedRigidbody(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009C1")]
	[Address(RVA = "0x187AA84", Offset = "0x187AA84", VA = "0x187AA84")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97F874", Offset = "0x97F874")]
	private static int get_isTrigger(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009C2")]
	[Address(RVA = "0x187AC58", Offset = "0x187AC58", VA = "0x187AC58")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97F8D8", Offset = "0x97F8D8")]
	private static int get_contactOffset(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009C3")]
	[Address(RVA = "0x187AE38", Offset = "0x187AE38", VA = "0x187AE38")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97F93C", Offset = "0x97F93C")]
	private static int get_bounds(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009C4")]
	[Address(RVA = "0x187AFFC", Offset = "0x187AFFC", VA = "0x187AFFC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97F9A0", Offset = "0x97F9A0")]
	private static int get_sharedMaterial(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009C5")]
	[Address(RVA = "0x187B1AC", Offset = "0x187B1AC", VA = "0x187B1AC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97FA04", Offset = "0x97FA04")]
	private static int get_material(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009C6")]
	[Address(RVA = "0x187B35C", Offset = "0x187B35C", VA = "0x187B35C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97FA68", Offset = "0x97FA68")]
	private static int set_enabled(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009C7")]
	[Address(RVA = "0x187B530", Offset = "0x187B530", VA = "0x187B530")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97FACC", Offset = "0x97FACC")]
	private static int set_isTrigger(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009C8")]
	[Address(RVA = "0x187B704", Offset = "0x187B704", VA = "0x187B704")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97FB30", Offset = "0x97FB30")]
	private static int set_contactOffset(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009C9")]
	[Address(RVA = "0x187B8D8", Offset = "0x187B8D8", VA = "0x187B8D8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97FB94", Offset = "0x97FB94")]
	private static int set_sharedMaterial(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009CA")]
	[Address(RVA = "0x187BAD4", Offset = "0x187BAD4", VA = "0x187BAD4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97FBF8", Offset = "0x97FBF8")]
	private static int set_material(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009CB")]
	[Address(RVA = "0x187C1AC", Offset = "0x187C1AC", VA = "0x187C1AC")]
	public UnityEngine_ColliderWrap()
	{
	}
}
[Token(Token = "0x2000084")]
public class UnityEngine_ComponentWrap
{
	[Token(Token = "0x60009CC")]
	[Address(RVA = "0x187F508", Offset = "0x187F508", VA = "0x187F508")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x60009CD")]
	[Address(RVA = "0x187C1B4", Offset = "0x187C1B4", VA = "0x187C1B4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97FC5C", Offset = "0x97FC5C")]
	private static int _CreateUnityEngine_Component(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009CE")]
	[Address(RVA = "0x187C36C", Offset = "0x187C36C", VA = "0x187C36C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97FCC0", Offset = "0x97FCC0")]
	private static int GetComponent(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009CF")]
	[Address(RVA = "0x187C730", Offset = "0x187C730", VA = "0x187C730")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97FD24", Offset = "0x97FD24")]
	private static int TryGetComponent(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009D0")]
	[Address(RVA = "0x187C938", Offset = "0x187C938", VA = "0x187C938")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97FD88", Offset = "0x97FD88")]
	private static int GetComponentInChildren(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009D1")]
	[Address(RVA = "0x187CC70", Offset = "0x187CC70", VA = "0x187CC70")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97FDEC", Offset = "0x97FDEC")]
	private static int GetComponentsInChildren(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009D2")]
	[Address(RVA = "0x187CFA8", Offset = "0x187CFA8", VA = "0x187CFA8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97FE50", Offset = "0x97FE50")]
	private static int GetComponentInParent(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009D3")]
	[Address(RVA = "0x187D174", Offset = "0x187D174", VA = "0x187D174")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97FEB4", Offset = "0x97FEB4")]
	private static int GetComponentsInParent(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009D4")]
	[Address(RVA = "0x187D4AC", Offset = "0x187D4AC", VA = "0x187D4AC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97FF18", Offset = "0x97FF18")]
	private static int GetComponents(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009D5")]
	[Address(RVA = "0x187D844", Offset = "0x187D844", VA = "0x187D844")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97FF7C", Offset = "0x97FF7C")]
	private static int CompareTag(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009D6")]
	[Address(RVA = "0x187DA34", Offset = "0x187DA34", VA = "0x187DA34")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x97FFE0", Offset = "0x97FFE0")]
	private static int SendMessageUpwards(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009D7")]
	[Address(RVA = "0x187E014", Offset = "0x187E014", VA = "0x187E014")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x981044", Offset = "0x981044")]
	private static int SendMessage(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009D8")]
	[Address(RVA = "0x187E5F4", Offset = "0x187E5F4", VA = "0x187E5F4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9810A8", Offset = "0x9810A8")]
	private static int BroadcastMessage(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009D9")]
	[Address(RVA = "0x187EBD4", Offset = "0x187EBD4", VA = "0x187EBD4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98110C", Offset = "0x98110C")]
	private static int op_Equality(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009DA")]
	[Address(RVA = "0x187EE18", Offset = "0x187EE18", VA = "0x187EE18")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x981170", Offset = "0x981170")]
	private static int get_transform(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009DB")]
	[Address(RVA = "0x187EFC8", Offset = "0x187EFC8", VA = "0x187EFC8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9811D4", Offset = "0x9811D4")]
	private static int get_gameObject(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009DC")]
	[Address(RVA = "0x187F180", Offset = "0x187F180", VA = "0x187F180")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x981238", Offset = "0x981238")]
	private static int get_tag(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009DD")]
	[Address(RVA = "0x187F354", Offset = "0x187F354", VA = "0x187F354")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98129C", Offset = "0x98129C")]
	private static int set_tag(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009DE")]
	[Address(RVA = "0x187FA44", Offset = "0x187FA44", VA = "0x187FA44")]
	public UnityEngine_ComponentWrap()
	{
	}
}
[Token(Token = "0x2000085")]
public class UnityEngine_EventSystems_AbstractEventDataWrap
{
	[Token(Token = "0x60009DF")]
	[Address(RVA = "0x18800A8", Offset = "0x18800A8", VA = "0x18800A8")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x60009E0")]
	[Address(RVA = "0x187FB3C", Offset = "0x187FB3C", VA = "0x187FB3C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x981300", Offset = "0x981300")]
	private static int Reset(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009E1")]
	[Address(RVA = "0x187FCF0", Offset = "0x187FCF0", VA = "0x187FCF0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x981364", Offset = "0x981364")]
	private static int Use(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009E2")]
	[Address(RVA = "0x187FEA4", Offset = "0x187FEA4", VA = "0x187FEA4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9813C8", Offset = "0x9813C8")]
	private static int get_used(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009E3")]
	[Address(RVA = "0x1880278", Offset = "0x1880278", VA = "0x1880278")]
	public UnityEngine_EventSystems_AbstractEventDataWrap()
	{
	}
}
[Token(Token = "0x2000086")]
public class UnityEngine_EventSystems_BaseEventDataWrap
{
	[Token(Token = "0x60009E4")]
	[Address(RVA = "0x1880A24", Offset = "0x1880A24", VA = "0x1880A24")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x60009E5")]
	[Address(RVA = "0x1880280", Offset = "0x1880280", VA = "0x1880280")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98142C", Offset = "0x98142C")]
	private static int _CreateUnityEngine_EventSystems_BaseEventData(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009E6")]
	[Address(RVA = "0x18804A0", Offset = "0x18804A0", VA = "0x18804A0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x981490", Offset = "0x981490")]
	private static int get_currentInputModule(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009E7")]
	[Address(RVA = "0x1880650", Offset = "0x1880650", VA = "0x1880650")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9814F4", Offset = "0x9814F4")]
	private static int get_selectedObject(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009E8")]
	[Address(RVA = "0x1880808", Offset = "0x1880808", VA = "0x1880808")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x981558", Offset = "0x981558")]
	private static int set_selectedObject(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009E9")]
	[Address(RVA = "0x1880C1C", Offset = "0x1880C1C", VA = "0x1880C1C")]
	public UnityEngine_EventSystems_BaseEventDataWrap()
	{
	}
}
[Token(Token = "0x2000087")]
public class UnityEngine_EventSystems_PointerEventDataWrap
{
	[Token(Token = "0x60009EA")]
	[Address(RVA = "0x188598C", Offset = "0x188598C", VA = "0x188598C")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x60009EB")]
	[Address(RVA = "0x1880C24", Offset = "0x1880C24", VA = "0x1880C24")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9815BC", Offset = "0x9815BC")]
	private static int _CreateUnityEngine_EventSystems_PointerEventData(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009EC")]
	[Address(RVA = "0x1880E44", Offset = "0x1880E44", VA = "0x1880E44")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x981620", Offset = "0x981620")]
	private static int IsPointerMoving(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009ED")]
	[Address(RVA = "0x1881008", Offset = "0x1881008", VA = "0x1881008")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x981684", Offset = "0x981684")]
	private static int IsScrolling(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009EE")]
	[Address(RVA = "0x18811CC", Offset = "0x18811CC", VA = "0x18811CC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9816E8", Offset = "0x9816E8")]
	private static int ToString(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009EF")]
	[Address(RVA = "0x18813BC", Offset = "0x18813BC", VA = "0x18813BC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98174C", Offset = "0x98174C")]
	private static int get_hovered(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009F0")]
	[Address(RVA = "0x1881564", Offset = "0x1881564", VA = "0x1881564")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9817B0", Offset = "0x9817B0")]
	private static int get_pointerEnter(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009F1")]
	[Address(RVA = "0x188170C", Offset = "0x188170C", VA = "0x188170C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x981814", Offset = "0x981814")]
	private static int get_lastPress(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009F2")]
	[Address(RVA = "0x18818B4", Offset = "0x18818B4", VA = "0x18818B4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x981878", Offset = "0x981878")]
	private static int get_rawPointerPress(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009F3")]
	[Address(RVA = "0x1881A5C", Offset = "0x1881A5C", VA = "0x1881A5C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9818DC", Offset = "0x9818DC")]
	private static int get_pointerDrag(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009F4")]
	[Address(RVA = "0x1881C04", Offset = "0x1881C04", VA = "0x1881C04")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x981940", Offset = "0x981940")]
	private static int get_pointerCurrentRaycast(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009F5")]
	[Address(RVA = "0x1881DC0", Offset = "0x1881DC0", VA = "0x1881DC0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9819A4", Offset = "0x9819A4")]
	private static int get_pointerPressRaycast(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009F6")]
	[Address(RVA = "0x1881F7C", Offset = "0x1881F7C", VA = "0x1881F7C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x981A08", Offset = "0x981A08")]
	private static int get_eligibleForClick(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009F7")]
	[Address(RVA = "0x1882144", Offset = "0x1882144", VA = "0x1882144")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x981A6C", Offset = "0x981A6C")]
	private static int get_pointerId(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009F8")]
	[Address(RVA = "0x1882308", Offset = "0x1882308", VA = "0x1882308")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x981AD0", Offset = "0x981AD0")]
	private static int get_position(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009F9")]
	[Address(RVA = "0x18824A8", Offset = "0x18824A8", VA = "0x18824A8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x981B34", Offset = "0x981B34")]
	private static int get_delta(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009FA")]
	[Address(RVA = "0x1882648", Offset = "0x1882648", VA = "0x1882648")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x981B98", Offset = "0x981B98")]
	private static int get_pressPosition(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009FB")]
	[Address(RVA = "0x18827E8", Offset = "0x18827E8", VA = "0x18827E8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x981BFC", Offset = "0x981BFC")]
	private static int get_clickTime(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009FC")]
	[Address(RVA = "0x18829B8", Offset = "0x18829B8", VA = "0x18829B8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x981C60", Offset = "0x981C60")]
	private static int get_clickCount(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009FD")]
	[Address(RVA = "0x1882B7C", Offset = "0x1882B7C", VA = "0x1882B7C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x981CC4", Offset = "0x981CC4")]
	private static int get_scrollDelta(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009FE")]
	[Address(RVA = "0x1882D20", Offset = "0x1882D20", VA = "0x1882D20")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x981D28", Offset = "0x981D28")]
	private static int get_useDragThreshold(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x60009FF")]
	[Address(RVA = "0x1882EE8", Offset = "0x1882EE8", VA = "0x1882EE8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x981D8C", Offset = "0x981D8C")]
	private static int get_dragging(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A00")]
	[Address(RVA = "0x18830B0", Offset = "0x18830B0", VA = "0x18830B0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x981DF0", Offset = "0x981DF0")]
	private static int get_button(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A01")]
	[Address(RVA = "0x188326C", Offset = "0x188326C", VA = "0x188326C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x981E54", Offset = "0x981E54")]
	private static int get_enterEventCamera(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A02")]
	[Address(RVA = "0x1883424", Offset = "0x1883424", VA = "0x1883424")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x981EB8", Offset = "0x981EB8")]
	private static int get_pressEventCamera(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A03")]
	[Address(RVA = "0x18835DC", Offset = "0x18835DC", VA = "0x18835DC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x981F1C", Offset = "0x981F1C")]
	private static int get_pointerPress(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A04")]
	[Address(RVA = "0x1883784", Offset = "0x1883784", VA = "0x1883784")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x981F80", Offset = "0x981F80")]
	private static int set_hovered(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A05")]
	[Address(RVA = "0x18839A8", Offset = "0x18839A8", VA = "0x18839A8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x981FE4", Offset = "0x981FE4")]
	private static int set_pointerEnter(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A06")]
	[Address(RVA = "0x1883BB0", Offset = "0x1883BB0", VA = "0x1883BB0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x982048", Offset = "0x982048")]
	private static int set_rawPointerPress(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A07")]
	[Address(RVA = "0x1883DB8", Offset = "0x1883DB8", VA = "0x1883DB8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9820AC", Offset = "0x9820AC")]
	private static int set_pointerDrag(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A08")]
	[Address(RVA = "0x1883FC0", Offset = "0x1883FC0", VA = "0x1883FC0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x982110", Offset = "0x982110")]
	private static int set_pointerCurrentRaycast(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A09")]
	[Address(RVA = "0x18841C8", Offset = "0x18841C8", VA = "0x18841C8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x982174", Offset = "0x982174")]
	private static int set_pointerPressRaycast(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A0A")]
	[Address(RVA = "0x18843D0", Offset = "0x18843D0", VA = "0x18843D0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9821D8", Offset = "0x9821D8")]
	private static int set_eligibleForClick(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A0B")]
	[Address(RVA = "0x188459C", Offset = "0x188459C", VA = "0x188459C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98223C", Offset = "0x98223C")]
	private static int set_pointerId(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A0C")]
	[Address(RVA = "0x188477C", Offset = "0x188477C", VA = "0x188477C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9822A0", Offset = "0x9822A0")]
	private static int set_position(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A0D")]
	[Address(RVA = "0x1884920", Offset = "0x1884920", VA = "0x1884920")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x982304", Offset = "0x982304")]
	private static int set_delta(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A0E")]
	[Address(RVA = "0x1884AC4", Offset = "0x1884AC4", VA = "0x1884AC4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x982368", Offset = "0x982368")]
	private static int set_pressPosition(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A0F")]
	[Address(RVA = "0x1884C68", Offset = "0x1884C68", VA = "0x1884C68")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9823CC", Offset = "0x9823CC")]
	private static int set_clickTime(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A10")]
	[Address(RVA = "0x1884E34", Offset = "0x1884E34", VA = "0x1884E34")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x982430", Offset = "0x982430")]
	private static int set_clickCount(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A11")]
	[Address(RVA = "0x1885014", Offset = "0x1885014", VA = "0x1885014")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x982494", Offset = "0x982494")]
	private static int set_scrollDelta(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A12")]
	[Address(RVA = "0x18851BC", Offset = "0x18851BC", VA = "0x18851BC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9824F8", Offset = "0x9824F8")]
	private static int set_useDragThreshold(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A13")]
	[Address(RVA = "0x1885388", Offset = "0x1885388", VA = "0x1885388")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98255C", Offset = "0x98255C")]
	private static int set_dragging(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A14")]
	[Address(RVA = "0x1885554", Offset = "0x1885554", VA = "0x1885554")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9825C0", Offset = "0x9825C0")]
	private static int set_button(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A15")]
	[Address(RVA = "0x1885770", Offset = "0x1885770", VA = "0x1885770")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x982624", Offset = "0x982624")]
	private static int set_pointerPress(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A16")]
	[Address(RVA = "0x18863B4", Offset = "0x18863B4", VA = "0x18863B4")]
	public UnityEngine_EventSystems_PointerEventDataWrap()
	{
	}
}
[Token(Token = "0x2000088")]
public class UnityEngine_EventSystems_RaycastResultWrap
{
	[Token(Token = "0x6000A17")]
	[Address(RVA = "0x188955C", Offset = "0x188955C", VA = "0x188955C")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x6000A18")]
	[Address(RVA = "0x18863BC", Offset = "0x18863BC", VA = "0x18863BC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x982688", Offset = "0x982688")]
	private static int _CreateUnityEngine_EventSystems_RaycastResult(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A19")]
	[Address(RVA = "0x1886464", Offset = "0x1886464", VA = "0x1886464")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9826EC", Offset = "0x9826EC")]
	private static int Clear(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A1A")]
	[Address(RVA = "0x1886670", Offset = "0x1886670", VA = "0x1886670")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x982750", Offset = "0x982750")]
	private static int ToString(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A1B")]
	[Address(RVA = "0x1886884", Offset = "0x1886884", VA = "0x1886884")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9827B4", Offset = "0x9827B4")]
	private static int get_module(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A1C")]
	[Address(RVA = "0x1886A18", Offset = "0x1886A18", VA = "0x1886A18")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x982818", Offset = "0x982818")]
	private static int get_distance(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A1D")]
	[Address(RVA = "0x1886BE0", Offset = "0x1886BE0", VA = "0x1886BE0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98287C", Offset = "0x98287C")]
	private static int get_index(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A1E")]
	[Address(RVA = "0x1886DA8", Offset = "0x1886DA8", VA = "0x1886DA8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9828E0", Offset = "0x9828E0")]
	private static int get_depth(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A1F")]
	[Address(RVA = "0x1886F64", Offset = "0x1886F64", VA = "0x1886F64")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x982944", Offset = "0x982944")]
	private static int get_sortingLayer(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A20")]
	[Address(RVA = "0x1887120", Offset = "0x1887120", VA = "0x1887120")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9829A8", Offset = "0x9829A8")]
	private static int get_sortingOrder(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A21")]
	[Address(RVA = "0x18872DC", Offset = "0x18872DC", VA = "0x18872DC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x982A0C", Offset = "0x982A0C")]
	private static int get_worldPosition(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A22")]
	[Address(RVA = "0x1887474", Offset = "0x1887474", VA = "0x1887474")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x982A70", Offset = "0x982A70")]
	private static int get_worldNormal(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A23")]
	[Address(RVA = "0x188760C", Offset = "0x188760C", VA = "0x188760C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x982AD4", Offset = "0x982AD4")]
	private static int get_screenPosition(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A24")]
	[Address(RVA = "0x18877A0", Offset = "0x18877A0", VA = "0x18877A0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x982B38", Offset = "0x982B38")]
	private static int get_displayIndex(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A25")]
	[Address(RVA = "0x188795C", Offset = "0x188795C", VA = "0x188795C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x982B9C", Offset = "0x982B9C")]
	private static int get_gameObject(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A26")]
	[Address(RVA = "0x1887AF8", Offset = "0x1887AF8", VA = "0x1887AF8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x982C00", Offset = "0x982C00")]
	private static int get_isValid(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A27")]
	[Address(RVA = "0x1887CE0", Offset = "0x1887CE0", VA = "0x1887CE0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x982C64", Offset = "0x982C64")]
	private static int set_module(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A28")]
	[Address(RVA = "0x1887F28", Offset = "0x1887F28", VA = "0x1887F28")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x982CC8", Offset = "0x982CC8")]
	private static int set_distance(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A29")]
	[Address(RVA = "0x1888170", Offset = "0x1888170", VA = "0x1888170")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x982D2C", Offset = "0x982D2C")]
	private static int set_index(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A2A")]
	[Address(RVA = "0x18883B4", Offset = "0x18883B4", VA = "0x18883B4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x982D90", Offset = "0x982D90")]
	private static int set_depth(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A2B")]
	[Address(RVA = "0x1888610", Offset = "0x1888610", VA = "0x1888610")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x982DF4", Offset = "0x982DF4")]
	private static int set_sortingLayer(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A2C")]
	[Address(RVA = "0x1888868", Offset = "0x1888868", VA = "0x1888868")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x982E58", Offset = "0x982E58")]
	private static int set_sortingOrder(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A2D")]
	[Address(RVA = "0x1888AB0", Offset = "0x1888AB0", VA = "0x1888AB0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x982EBC", Offset = "0x982EBC")]
	private static int set_worldPosition(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A2E")]
	[Address(RVA = "0x1888CC4", Offset = "0x1888CC4", VA = "0x1888CC4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x982F20", Offset = "0x982F20")]
	private static int set_worldNormal(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A2F")]
	[Address(RVA = "0x1888ED8", Offset = "0x1888ED8", VA = "0x1888ED8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x982F84", Offset = "0x982F84")]
	private static int set_screenPosition(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A30")]
	[Address(RVA = "0x18890E0", Offset = "0x18890E0", VA = "0x18890E0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x982FE8", Offset = "0x982FE8")]
	private static int set_displayIndex(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A31")]
	[Address(RVA = "0x1889308", Offset = "0x1889308", VA = "0x1889308")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98304C", Offset = "0x98304C")]
	private static int set_gameObject(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A32")]
	[Address(RVA = "0x1889BC8", Offset = "0x1889BC8", VA = "0x1889BC8")]
	public UnityEngine_EventSystems_RaycastResultWrap()
	{
	}
}
[Token(Token = "0x2000089")]
public class UnityEngine_EventSystems_UIBehaviourWrap
{
	[Token(Token = "0x6000A33")]
	[Address(RVA = "0x188A1C8", Offset = "0x188A1C8", VA = "0x188A1C8")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x6000A34")]
	[Address(RVA = "0x1889BD0", Offset = "0x1889BD0", VA = "0x1889BD0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9830B0", Offset = "0x9830B0")]
	private static int IsActive(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A35")]
	[Address(RVA = "0x1889DC0", Offset = "0x1889DC0", VA = "0x1889DC0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x983114", Offset = "0x983114")]
	private static int IsDestroyed(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A36")]
	[Address(RVA = "0x1889F84", Offset = "0x1889F84", VA = "0x1889F84")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x983178", Offset = "0x983178")]
	private static int op_Equality(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A37")]
	[Address(RVA = "0x188A394", Offset = "0x188A394", VA = "0x188A394")]
	public UnityEngine_EventSystems_UIBehaviourWrap()
	{
	}
}
[Token(Token = "0x200008A")]
public class UnityEngine_Events_UnityEventBaseWrap
{
	[Token(Token = "0x6000A38")]
	[Address(RVA = "0x188B0F4", Offset = "0x188B0F4", VA = "0x188B0F4")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x6000A39")]
	[Address(RVA = "0x188A39C", Offset = "0x188A39C", VA = "0x188A39C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9831DC", Offset = "0x9831DC")]
	private static int GetPersistentEventCount(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A3A")]
	[Address(RVA = "0x188A560", Offset = "0x188A560", VA = "0x188A560")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x983240", Offset = "0x983240")]
	private static int GetPersistentTarget(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A3B")]
	[Address(RVA = "0x188A760", Offset = "0x188A760", VA = "0x188A760")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9832A4", Offset = "0x9832A4")]
	private static int GetPersistentMethodName(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A3C")]
	[Address(RVA = "0x188A960", Offset = "0x188A960", VA = "0x188A960")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x983308", Offset = "0x983308")]
	private static int SetPersistentListenerState(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A3D")]
	[Address(RVA = "0x188ABE0", Offset = "0x188ABE0", VA = "0x188ABE0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98336C", Offset = "0x98336C")]
	private static int RemoveAllListeners(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A3E")]
	[Address(RVA = "0x188AD68", Offset = "0x188AD68", VA = "0x188AD68")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9833D0", Offset = "0x9833D0")]
	private static int ToString(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A3F")]
	[Address(RVA = "0x188AF58", Offset = "0x188AF58", VA = "0x188AF58")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x983434", Offset = "0x983434")]
	private static int GetValidMethodInfo(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A40")]
	[Address(RVA = "0x188B3C0", Offset = "0x188B3C0", VA = "0x188B3C0")]
	public UnityEngine_Events_UnityEventBaseWrap()
	{
	}
}
[Token(Token = "0x200008B")]
public class UnityEngine_Events_UnityEventWrap
{
	[Token(Token = "0x6000A41")]
	[Address(RVA = "0x188BAC8", Offset = "0x188BAC8", VA = "0x188BAC8")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x6000A42")]
	[Address(RVA = "0x188B3C8", Offset = "0x188B3C8", VA = "0x188B3C8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x983498", Offset = "0x983498")]
	private static int _CreateUnityEngine_Events_UnityEvent(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A43")]
	[Address(RVA = "0x188B580", Offset = "0x188B580", VA = "0x188B580")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9834FC", Offset = "0x9834FC")]
	private static int AddListener(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A44")]
	[Address(RVA = "0x188B760", Offset = "0x188B760", VA = "0x188B760")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x983560", Offset = "0x983560")]
	private static int RemoveListener(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A45")]
	[Address(RVA = "0x188B940", Offset = "0x188B940", VA = "0x188B940")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9835C4", Offset = "0x9835C4")]
	private static int Invoke(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A46")]
	[Address(RVA = "0x188BCD4", Offset = "0x188BCD4", VA = "0x188BCD4")]
	public UnityEngine_Events_UnityEventWrap()
	{
	}
}
[Token(Token = "0x200008C")]
public class UnityEngine_GameObjectWrap
{
	[Token(Token = "0x6000A47")]
	[Address(RVA = "0x189202C", Offset = "0x189202C", VA = "0x189202C")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x6000A48")]
	[Address(RVA = "0x188BCDC", Offset = "0x188BCDC", VA = "0x188BCDC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x983628", Offset = "0x983628")]
	private static int _CreateUnityEngine_GameObject(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A49")]
	[Address(RVA = "0x188C098", Offset = "0x188C098", VA = "0x188C098")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98368C", Offset = "0x98368C")]
	private static int CreatePrimitive(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A4A")]
	[Address(RVA = "0x188C270", Offset = "0x188C270", VA = "0x188C270")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9836F0", Offset = "0x9836F0")]
	private static int GetComponent(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A4B")]
	[Address(RVA = "0x188C66C", Offset = "0x188C66C", VA = "0x188C66C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x983754", Offset = "0x983754")]
	private static int GetComponentInChildren(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A4C")]
	[Address(RVA = "0x188C9E4", Offset = "0x188C9E4", VA = "0x188C9E4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9837B8", Offset = "0x9837B8")]
	private static int GetComponentInParent(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A4D")]
	[Address(RVA = "0x188CBD0", Offset = "0x188CBD0", VA = "0x188CBD0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98381C", Offset = "0x98381C")]
	private static int GetComponents(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A4E")]
	[Address(RVA = "0x188CF74", Offset = "0x188CF74", VA = "0x188CF74")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x983880", Offset = "0x983880")]
	private static int GetComponentsInChildren(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A4F")]
	[Address(RVA = "0x188D2EC", Offset = "0x188D2EC", VA = "0x188D2EC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9838E4", Offset = "0x9838E4")]
	private static int GetComponentsInParent(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A50")]
	[Address(RVA = "0x188D664", Offset = "0x188D664", VA = "0x188D664")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x983948", Offset = "0x983948")]
	private static int TryGetComponent(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A51")]
	[Address(RVA = "0x188D88C", Offset = "0x188D88C", VA = "0x188D88C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9839AC", Offset = "0x9839AC")]
	private static int FindWithTag(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A52")]
	[Address(RVA = "0x188D9EC", Offset = "0x188D9EC", VA = "0x188D9EC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x983A10", Offset = "0x983A10")]
	private static int SetActive(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A53")]
	[Address(RVA = "0x188DBE0", Offset = "0x188DBE0", VA = "0x188DBE0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x983A74", Offset = "0x983A74")]
	private static int CompareTag(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A54")]
	[Address(RVA = "0x188DDF0", Offset = "0x188DDF0", VA = "0x188DDF0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x983AD8", Offset = "0x983AD8")]
	private static int FindGameObjectWithTag(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A55")]
	[Address(RVA = "0x188DF50", Offset = "0x188DF50", VA = "0x188DF50")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x983B3C", Offset = "0x983B3C")]
	private static int FindGameObjectsWithTag(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A56")]
	[Address(RVA = "0x188E0A8", Offset = "0x188E0A8", VA = "0x188E0A8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x983BA0", Offset = "0x983BA0")]
	private static int Find(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A57")]
	[Address(RVA = "0x188E208", Offset = "0x188E208", VA = "0x188E208")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x983C04", Offset = "0x983C04")]
	private static int AddComponent(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A58")]
	[Address(RVA = "0x188E610", Offset = "0x188E610", VA = "0x188E610")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x983C68", Offset = "0x983C68")]
	private static int BroadcastMessage(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A59")]
	[Address(RVA = "0x188F1F0", Offset = "0x188F1F0", VA = "0x188F1F0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x983CCC", Offset = "0x983CCC")]
	private static int SendMessageUpwards(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A5A")]
	[Address(RVA = "0x188FDD0", Offset = "0x188FDD0", VA = "0x188FDD0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x983D30", Offset = "0x983D30")]
	private static int SendMessage(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A5B")]
	[Address(RVA = "0x18909B0", Offset = "0x18909B0", VA = "0x18909B0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x983D94", Offset = "0x983D94")]
	private static int op_Equality(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A5C")]
	[Address(RVA = "0x1890BF4", Offset = "0x1890BF4", VA = "0x1890BF4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x983DF8", Offset = "0x983DF8")]
	private static int get_transform(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A5D")]
	[Address(RVA = "0x1890D88", Offset = "0x1890D88", VA = "0x1890D88")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x983E5C", Offset = "0x983E5C")]
	private static int get_layer(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A5E")]
	[Address(RVA = "0x1890F40", Offset = "0x1890F40", VA = "0x1890F40")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x983EC0", Offset = "0x983EC0")]
	private static int get_activeSelf(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A5F")]
	[Address(RVA = "0x18910F8", Offset = "0x18910F8", VA = "0x18910F8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x983F24", Offset = "0x983F24")]
	private static int get_activeInHierarchy(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A60")]
	[Address(RVA = "0x18912B0", Offset = "0x18912B0", VA = "0x18912B0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x983F88", Offset = "0x983F88")]
	private static int get_isStatic(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A61")]
	[Address(RVA = "0x1891468", Offset = "0x1891468", VA = "0x1891468")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x983FEC", Offset = "0x983FEC")]
	private static int get_tag(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A62")]
	[Address(RVA = "0x1891620", Offset = "0x1891620", VA = "0x1891620")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x984050", Offset = "0x984050")]
	private static int get_scene(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A63")]
	[Address(RVA = "0x18917BC", Offset = "0x18917BC", VA = "0x18917BC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9840B4", Offset = "0x9840B4")]
	private static int get_sceneCullingMask(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A64")]
	[Address(RVA = "0x1891974", Offset = "0x1891974", VA = "0x1891974")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x984118", Offset = "0x984118")]
	private static int get_gameObject(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A65")]
	[Address(RVA = "0x1891B10", Offset = "0x1891B10", VA = "0x1891B10")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98417C", Offset = "0x98417C")]
	private static int set_layer(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A66")]
	[Address(RVA = "0x1891CDC", Offset = "0x1891CDC", VA = "0x1891CDC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9841E0", Offset = "0x9841E0")]
	private static int set_isStatic(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A67")]
	[Address(RVA = "0x1891E94", Offset = "0x1891E94", VA = "0x1891E94")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x984244", Offset = "0x984244")]
	private static int set_tag(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A68")]
	[Address(RVA = "0x1892908", Offset = "0x1892908", VA = "0x1892908")]
	public UnityEngine_GameObjectWrap()
	{
	}
}
[Token(Token = "0x200008D")]
public class UnityEngine_LightTypeWrap
{
	[Token(Token = "0x6000A69")]
	[Address(RVA = "0x18A4548", Offset = "0x18A4548", VA = "0x18A4548")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x6000A6A")]
	[Address(RVA = "0x18A488C", Offset = "0x18A488C", VA = "0x18A488C")]
	private static void Push(IntPtr L, LightType arg)
	{
	}

	[Token(Token = "0x6000A6B")]
	[Address(RVA = "0x18A4928", Offset = "0x18A4928", VA = "0x18A4928")]
	private static bool CheckType(IntPtr L, int pos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A6C")]
	[Address(RVA = "0x18A40A8", Offset = "0x18A40A8", VA = "0x18A40A8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9842A8", Offset = "0x9842A8")]
	private static int get_Spot(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A6D")]
	[Address(RVA = "0x18A4144", Offset = "0x18A4144", VA = "0x18A4144")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98430C", Offset = "0x98430C")]
	private static int get_Directional(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A6E")]
	[Address(RVA = "0x18A41E4", Offset = "0x18A41E4", VA = "0x18A41E4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x984370", Offset = "0x984370")]
	private static int get_Point(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A6F")]
	[Address(RVA = "0x18A4284", Offset = "0x18A4284", VA = "0x18A4284")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9843D4", Offset = "0x9843D4")]
	private static int get_Area(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A70")]
	[Address(RVA = "0x18A4324", Offset = "0x18A4324", VA = "0x18A4324")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x984438", Offset = "0x984438")]
	private static int get_Rectangle(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A71")]
	[Address(RVA = "0x18A43C4", Offset = "0x18A43C4", VA = "0x18A43C4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98449C", Offset = "0x98449C")]
	private static int get_Disc(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A72")]
	[Address(RVA = "0x18A4464", Offset = "0x18A4464", VA = "0x18A4464")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x984500", Offset = "0x984500")]
	private static int IntToEnum(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A73")]
	[Address(RVA = "0x18A49E4", Offset = "0x18A49E4", VA = "0x18A49E4")]
	public UnityEngine_LightTypeWrap()
	{
	}
}
[Token(Token = "0x200008E")]
public class UnityEngine_LightWrap
{
	[Token(Token = "0x6000A74")]
	[Address(RVA = "0x18AD6C8", Offset = "0x18AD6C8", VA = "0x18AD6C8")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x6000A75")]
	[Address(RVA = "0x18A49EC", Offset = "0x18A49EC", VA = "0x18A49EC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x984564", Offset = "0x984564")]
	private static int _CreateUnityEngine_Light(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A76")]
	[Address(RVA = "0x18A4BAC", Offset = "0x18A4BAC", VA = "0x18A4BAC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9845C8", Offset = "0x9845C8")]
	private static int Reset(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A77")]
	[Address(RVA = "0x18A4D54", Offset = "0x18A4D54", VA = "0x18A4D54")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98462C", Offset = "0x98462C")]
	private static int SetLightDirty(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A78")]
	[Address(RVA = "0x18A4ED0", Offset = "0x18A4ED0", VA = "0x18A4ED0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x984690", Offset = "0x984690")]
	private static int AddCommandBuffer(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A79")]
	[Address(RVA = "0x18A53B0", Offset = "0x18A53B0", VA = "0x18A53B0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9846F4", Offset = "0x9846F4")]
	private static int AddCommandBufferAsync(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A7A")]
	[Address(RVA = "0x18A5960", Offset = "0x18A5960", VA = "0x18A5960")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x984758", Offset = "0x984758")]
	private static int RemoveCommandBuffer(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A7B")]
	[Address(RVA = "0x18A5BE0", Offset = "0x18A5BE0", VA = "0x18A5BE0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9847BC", Offset = "0x9847BC")]
	private static int RemoveCommandBuffers(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A7C")]
	[Address(RVA = "0x18A5DFC", Offset = "0x18A5DFC", VA = "0x18A5DFC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x984820", Offset = "0x984820")]
	private static int RemoveAllCommandBuffers(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A7D")]
	[Address(RVA = "0x18A5FA4", Offset = "0x18A5FA4", VA = "0x18A5FA4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x984884", Offset = "0x984884")]
	private static int GetCommandBuffers(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A7E")]
	[Address(RVA = "0x18A61D8", Offset = "0x18A61D8", VA = "0x18A61D8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9848E8", Offset = "0x9848E8")]
	private static int GetLights(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A7F")]
	[Address(RVA = "0x18A6410", Offset = "0x18A6410", VA = "0x18A6410")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98494C", Offset = "0x98494C")]
	private static int op_Equality(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A80")]
	[Address(RVA = "0x18A6654", Offset = "0x18A6654", VA = "0x18A6654")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9849B0", Offset = "0x9849B0")]
	private static int get_type(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A81")]
	[Address(RVA = "0x18A6804", Offset = "0x18A6804", VA = "0x18A6804")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x984A14", Offset = "0x984A14")]
	private static int get_shape(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A82")]
	[Address(RVA = "0x18A69B4", Offset = "0x18A69B4", VA = "0x18A69B4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x984A78", Offset = "0x984A78")]
	private static int get_spotAngle(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A83")]
	[Address(RVA = "0x18A6B78", Offset = "0x18A6B78", VA = "0x18A6B78")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x984ADC", Offset = "0x984ADC")]
	private static int get_innerSpotAngle(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A84")]
	[Address(RVA = "0x18A6D3C", Offset = "0x18A6D3C", VA = "0x18A6D3C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x984B40", Offset = "0x984B40")]
	private static int get_color(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A85")]
	[Address(RVA = "0x18A6ECC", Offset = "0x18A6ECC", VA = "0x18A6ECC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x984BA4", Offset = "0x984BA4")]
	private static int get_colorTemperature(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A86")]
	[Address(RVA = "0x18A7090", Offset = "0x18A7090", VA = "0x18A7090")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x984C08", Offset = "0x984C08")]
	private static int get_useColorTemperature(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A87")]
	[Address(RVA = "0x18A7248", Offset = "0x18A7248", VA = "0x18A7248")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x984C6C", Offset = "0x984C6C")]
	private static int get_intensity(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A88")]
	[Address(RVA = "0x18A740C", Offset = "0x18A740C", VA = "0x18A740C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x984CD0", Offset = "0x984CD0")]
	private static int get_bounceIntensity(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A89")]
	[Address(RVA = "0x18A75D0", Offset = "0x18A75D0", VA = "0x18A75D0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x984D34", Offset = "0x984D34")]
	private static int get_useBoundingSphereOverride(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A8A")]
	[Address(RVA = "0x18A7788", Offset = "0x18A7788", VA = "0x18A7788")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x984D98", Offset = "0x984D98")]
	private static int get_boundingSphereOverride(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A8B")]
	[Address(RVA = "0x18A7918", Offset = "0x18A7918", VA = "0x18A7918")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x984DFC", Offset = "0x984DFC")]
	private static int get_shadowCustomResolution(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A8C")]
	[Address(RVA = "0x18A7AD0", Offset = "0x18A7AD0", VA = "0x18A7AD0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x984E60", Offset = "0x984E60")]
	private static int get_shadowBias(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A8D")]
	[Address(RVA = "0x18A7C94", Offset = "0x18A7C94", VA = "0x18A7C94")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x984EC4", Offset = "0x984EC4")]
	private static int get_shadowNormalBias(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A8E")]
	[Address(RVA = "0x18A7E58", Offset = "0x18A7E58", VA = "0x18A7E58")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x984F28", Offset = "0x984F28")]
	private static int get_shadowNearPlane(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A8F")]
	[Address(RVA = "0x18A801C", Offset = "0x18A801C", VA = "0x18A801C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x984F8C", Offset = "0x984F8C")]
	private static int get_useShadowMatrixOverride(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A90")]
	[Address(RVA = "0x18A81D4", Offset = "0x18A81D4", VA = "0x18A81D4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x984FF0", Offset = "0x984FF0")]
	private static int get_shadowMatrixOverride(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A91")]
	[Address(RVA = "0x18A8384", Offset = "0x18A8384", VA = "0x18A8384")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x985054", Offset = "0x985054")]
	private static int get_range(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A92")]
	[Address(RVA = "0x18A8548", Offset = "0x18A8548", VA = "0x18A8548")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9850B8", Offset = "0x9850B8")]
	private static int get_flare(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A93")]
	[Address(RVA = "0x18A86E4", Offset = "0x18A86E4", VA = "0x18A86E4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98511C", Offset = "0x98511C")]
	private static int get_bakingOutput(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A94")]
	[Address(RVA = "0x18A8894", Offset = "0x18A8894", VA = "0x18A8894")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x985180", Offset = "0x985180")]
	private static int get_cullingMask(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A95")]
	[Address(RVA = "0x18A8A4C", Offset = "0x18A8A4C", VA = "0x18A8A4C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9851E4", Offset = "0x9851E4")]
	private static int get_renderingLayerMask(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A96")]
	[Address(RVA = "0x18A8C04", Offset = "0x18A8C04", VA = "0x18A8C04")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x985248", Offset = "0x985248")]
	private static int get_lightShadowCasterMode(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A97")]
	[Address(RVA = "0x18A8DB4", Offset = "0x18A8DB4", VA = "0x18A8DB4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9852AC", Offset = "0x9852AC")]
	private static int get_shadowRadius(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A98")]
	[Address(RVA = "0x18A8EEC", Offset = "0x18A8EEC", VA = "0x18A8EEC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x985310", Offset = "0x985310")]
	private static int get_shadowAngle(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A99")]
	[Address(RVA = "0x18A9024", Offset = "0x18A9024", VA = "0x18A9024")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x985374", Offset = "0x985374")]
	private static int get_shadows(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A9A")]
	[Address(RVA = "0x18A91D4", Offset = "0x18A91D4", VA = "0x18A91D4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9853D8", Offset = "0x9853D8")]
	private static int get_shadowStrength(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A9B")]
	[Address(RVA = "0x18A9398", Offset = "0x18A9398", VA = "0x18A9398")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98543C", Offset = "0x98543C")]
	private static int get_shadowResolution(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A9C")]
	[Address(RVA = "0x18A9548", Offset = "0x18A9548", VA = "0x18A9548")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9854A0", Offset = "0x9854A0")]
	private static int get_layerShadowCullDistances(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A9D")]
	[Address(RVA = "0x18A96DC", Offset = "0x18A96DC", VA = "0x18A96DC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x985504", Offset = "0x985504")]
	private static int get_cookieSize(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A9E")]
	[Address(RVA = "0x18A98A0", Offset = "0x18A98A0", VA = "0x18A98A0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x985568", Offset = "0x985568")]
	private static int get_cookie(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000A9F")]
	[Address(RVA = "0x18A9A34", Offset = "0x18A9A34", VA = "0x18A9A34")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9855CC", Offset = "0x9855CC")]
	private static int get_renderMode(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000AA0")]
	[Address(RVA = "0x18A9BE4", Offset = "0x18A9BE4", VA = "0x18A9BE4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x985630", Offset = "0x985630")]
	private static int get_commandBufferCount(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000AA1")]
	[Address(RVA = "0x18A9D9C", Offset = "0x18A9D9C", VA = "0x18A9D9C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x985694", Offset = "0x985694")]
	private static int set_type(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000AA2")]
	[Address(RVA = "0x18A9FA4", Offset = "0x18A9FA4", VA = "0x18A9FA4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9856F8", Offset = "0x9856F8")]
	private static int set_shape(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000AA3")]
	[Address(RVA = "0x18AA1AC", Offset = "0x18AA1AC", VA = "0x18AA1AC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98575C", Offset = "0x98575C")]
	private static int set_spotAngle(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000AA4")]
	[Address(RVA = "0x18AA364", Offset = "0x18AA364", VA = "0x18AA364")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9857C0", Offset = "0x9857C0")]
	private static int set_innerSpotAngle(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000AA5")]
	[Address(RVA = "0x18AA51C", Offset = "0x18AA51C", VA = "0x18AA51C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x985824", Offset = "0x985824")]
	private static int set_color(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000AA6")]
	[Address(RVA = "0x18AA6AC", Offset = "0x18AA6AC", VA = "0x18AA6AC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x985888", Offset = "0x985888")]
	private static int set_colorTemperature(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000AA7")]
	[Address(RVA = "0x18AA864", Offset = "0x18AA864", VA = "0x18AA864")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9858EC", Offset = "0x9858EC")]
	private static int set_useColorTemperature(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000AA8")]
	[Address(RVA = "0x18AAA1C", Offset = "0x18AAA1C", VA = "0x18AAA1C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x985950", Offset = "0x985950")]
	private static int set_intensity(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000AA9")]
	[Address(RVA = "0x18AABD4", Offset = "0x18AABD4", VA = "0x18AABD4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9859B4", Offset = "0x9859B4")]
	private static int set_bounceIntensity(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000AAA")]
	[Address(RVA = "0x18AAD8C", Offset = "0x18AAD8C", VA = "0x18AAD8C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x985A18", Offset = "0x985A18")]
	private static int set_useBoundingSphereOverride(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000AAB")]
	[Address(RVA = "0x18AAF44", Offset = "0x18AAF44", VA = "0x18AAF44")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x985A7C", Offset = "0x985A7C")]
	private static int set_boundingSphereOverride(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000AAC")]
	[Address(RVA = "0x18AB0D4", Offset = "0x18AB0D4", VA = "0x18AB0D4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x985AE0", Offset = "0x985AE0")]
	private static int set_shadowCustomResolution(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000AAD")]
	[Address(RVA = "0x18AB2A0", Offset = "0x18AB2A0", VA = "0x18AB2A0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x985B44", Offset = "0x985B44")]
	private static int set_shadowBias(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000AAE")]
	[Address(RVA = "0x18AB458", Offset = "0x18AB458", VA = "0x18AB458")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x985BA8", Offset = "0x985BA8")]
	private static int set_shadowNormalBias(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000AAF")]
	[Address(RVA = "0x18AB610", Offset = "0x18AB610", VA = "0x18AB610")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x985C0C", Offset = "0x985C0C")]
	private static int set_shadowNearPlane(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000AB0")]
	[Address(RVA = "0x18AB7C8", Offset = "0x18AB7C8", VA = "0x18AB7C8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x985C70", Offset = "0x985C70")]
	private static int set_useShadowMatrixOverride(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000AB1")]
	[Address(RVA = "0x18AB980", Offset = "0x18AB980", VA = "0x18AB980")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x985CD4", Offset = "0x985CD4")]
	private static int set_shadowMatrixOverride(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000AB2")]
	[Address(RVA = "0x18ABB7C", Offset = "0x18ABB7C", VA = "0x18ABB7C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x985D38", Offset = "0x985D38")]
	private static int set_range(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000AB3")]
	[Address(RVA = "0x18ABD34", Offset = "0x18ABD34", VA = "0x18ABD34")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x985D9C", Offset = "0x985D9C")]
	private static int set_flare(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000AB4")]
	[Address(RVA = "0x18ABF34", Offset = "0x18ABF34", VA = "0x18ABF34")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x985E00", Offset = "0x985E00")]
	private static int set_bakingOutput(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000AB5")]
	[Address(RVA = "0x18AC130", Offset = "0x18AC130", VA = "0x18AC130")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x985E64", Offset = "0x985E64")]
	private static int set_cullingMask(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000AB6")]
	[Address(RVA = "0x18AC2FC", Offset = "0x18AC2FC", VA = "0x18AC2FC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x985EC8", Offset = "0x985EC8")]
	private static int set_renderingLayerMask(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000AB7")]
	[Address(RVA = "0x18AC4C8", Offset = "0x18AC4C8", VA = "0x18AC4C8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x985F2C", Offset = "0x985F2C")]
	private static int set_lightShadowCasterMode(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000AB8")]
	[Address(RVA = "0x18AC6D0", Offset = "0x18AC6D0", VA = "0x18AC6D0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x985F90", Offset = "0x985F90")]
	private static int set_shadowRadius(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000AB9")]
	[Address(RVA = "0x18AC848", Offset = "0x18AC848", VA = "0x18AC848")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x985FF4", Offset = "0x985FF4")]
	private static int set_shadowAngle(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000ABA")]
	[Address(RVA = "0x18AC9C0", Offset = "0x18AC9C0", VA = "0x18AC9C0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x986058", Offset = "0x986058")]
	private static int set_shadows(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000ABB")]
	[Address(RVA = "0x18ACBC8", Offset = "0x18ACBC8", VA = "0x18ACBC8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9860BC", Offset = "0x9860BC")]
	private static int set_shadowStrength(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000ABC")]
	[Address(RVA = "0x18ACD80", Offset = "0x18ACD80", VA = "0x18ACD80")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x986120", Offset = "0x986120")]
	private static int set_shadowResolution(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000ABD")]
	[Address(RVA = "0x18ACF88", Offset = "0x18ACF88", VA = "0x18ACF88")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x986184", Offset = "0x986184")]
	private static int set_layerShadowCullDistances(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000ABE")]
	[Address(RVA = "0x18AD128", Offset = "0x18AD128", VA = "0x18AD128")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9861E8", Offset = "0x9861E8")]
	private static int set_cookieSize(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000ABF")]
	[Address(RVA = "0x18AD2E0", Offset = "0x18AD2E0", VA = "0x18AD2E0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98624C", Offset = "0x98624C")]
	private static int set_cookie(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000AC0")]
	[Address(RVA = "0x18AD4C0", Offset = "0x18AD4C0", VA = "0x18AD4C0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9862B0", Offset = "0x9862B0")]
	private static int set_renderMode(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000AC1")]
	[Address(RVA = "0x18AE7D8", Offset = "0x18AE7D8", VA = "0x18AE7D8")]
	public UnityEngine_LightWrap()
	{
	}
}
[Token(Token = "0x200008F")]
public class UnityEngine_MaterialWrap
{
	[Token(Token = "0x6000AC2")]
	[Address(RVA = "0x18BB5C8", Offset = "0x18BB5C8", VA = "0x18BB5C8")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x6000AC3")]
	[Address(RVA = "0x18AE7E0", Offset = "0x18AE7E0", VA = "0x18AE7E0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x986314", Offset = "0x986314")]
	private static int _CreateUnityEngine_Material(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000AC4")]
	[Address(RVA = "0x18AEB1C", Offset = "0x18AEB1C", VA = "0x18AEB1C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x986378", Offset = "0x986378")]
	private static int HasProperty(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000AC5")]
	[Address(RVA = "0x18AEEE8", Offset = "0x18AEEE8", VA = "0x18AEEE8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9863DC", Offset = "0x9863DC")]
	private static int EnableKeyword(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000AC6")]
	[Address(RVA = "0x18AF09C", Offset = "0x18AF09C", VA = "0x18AF09C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x986440", Offset = "0x986440")]
	private static int DisableKeyword(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000AC7")]
	[Address(RVA = "0x18AF250", Offset = "0x18AF250", VA = "0x18AF250")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9864A4", Offset = "0x9864A4")]
	private static int IsKeywordEnabled(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000AC8")]
	[Address(RVA = "0x18AF440", Offset = "0x18AF440", VA = "0x18AF440")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x986508", Offset = "0x986508")]
	private static int SetShaderPassEnabled(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000AC9")]
	[Address(RVA = "0x18AF630", Offset = "0x18AF630", VA = "0x18AF630")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98656C", Offset = "0x98656C")]
	private static int GetShaderPassEnabled(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000ACA")]
	[Address(RVA = "0x18AF820", Offset = "0x18AF820", VA = "0x18AF820")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9865D0", Offset = "0x9865D0")]
	private static int GetPassName(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000ACB")]
	[Address(RVA = "0x18AFA20", Offset = "0x18AFA20", VA = "0x18AFA20")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x986634", Offset = "0x986634")]
	private static int FindPass(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000ACC")]
	[Address(RVA = "0x18AFC10", Offset = "0x18AFC10", VA = "0x18AFC10")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x986698", Offset = "0x986698")]
	private static int SetOverrideTag(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000ACD")]
	[Address(RVA = "0x18AFDDC", Offset = "0x18AFDDC", VA = "0x18AFDDC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9866FC", Offset = "0x9866FC")]
	private static int GetTag(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000ACE")]
	[Address(RVA = "0x18B0170", Offset = "0x18B0170", VA = "0x18B0170")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x986760", Offset = "0x986760")]
	private static int Lerp(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000ACF")]
	[Address(RVA = "0x18B03F8", Offset = "0x18B03F8", VA = "0x18B03F8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9867C4", Offset = "0x9867C4")]
	private static int SetPass(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000AD0")]
	[Address(RVA = "0x18B05F8", Offset = "0x18B05F8", VA = "0x18B05F8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x986828", Offset = "0x986828")]
	private static int CopyPropertiesFromMaterial(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000AD1")]
	[Address(RVA = "0x18B07E0", Offset = "0x18B07E0", VA = "0x18B07E0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98688C", Offset = "0x98688C")]
	private static int ComputeCRC(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000AD2")]
	[Address(RVA = "0x18B09A4", Offset = "0x18B09A4", VA = "0x18B09A4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9868F0", Offset = "0x9868F0")]
	private static int GetTexturePropertyNames(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000AD3")]
	[Address(RVA = "0x18B0CEC", Offset = "0x18B0CEC", VA = "0x18B0CEC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x986954", Offset = "0x986954")]
	private static int GetTexturePropertyNameIDs(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000AD4")]
	[Address(RVA = "0x18B1034", Offset = "0x18B1034", VA = "0x18B1034")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9869B8", Offset = "0x9869B8")]
	private static int SetFloat(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000AD5")]
	[Address(RVA = "0x18B1404", Offset = "0x18B1404", VA = "0x18B1404")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x986A1C", Offset = "0x986A1C")]
	private static int SetInt(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000AD6")]
	[Address(RVA = "0x18B17F4", Offset = "0x18B17F4", VA = "0x18B17F4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x986A80", Offset = "0x986A80")]
	private static int SetColor(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000AD7")]
	[Address(RVA = "0x18B1BA0", Offset = "0x18B1BA0", VA = "0x18B1BA0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x986AE4", Offset = "0x986AE4")]
	private static int SetVector(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000AD8")]
	[Address(RVA = "0x18B1F4C", Offset = "0x18B1F4C", VA = "0x18B1F4C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x986B48", Offset = "0x986B48")]
	private static int SetMatrix(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000AD9")]
	[Address(RVA = "0x18B23CC", Offset = "0x18B23CC", VA = "0x18B23CC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x986BAC", Offset = "0x986BAC")]
	private static int SetTexture(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000ADA")]
	[Address(RVA = "0x18B2B78", Offset = "0x18B2B78", VA = "0x18B2B78")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x986C10", Offset = "0x986C10")]
	private static int SetBuffer(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000ADB")]
	[Address(RVA = "0x18B2F74", Offset = "0x18B2F74", VA = "0x18B2F74")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x986C74", Offset = "0x986C74")]
	private static int SetConstantBuffer(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000ADC")]
	[Address(RVA = "0x18B3444", Offset = "0x18B3444", VA = "0x18B3444")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x986CD8", Offset = "0x986CD8")]
	private static int SetFloatArray(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000ADD")]
	[Address(RVA = "0x18B3ACC", Offset = "0x18B3ACC", VA = "0x18B3ACC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x986D3C", Offset = "0x986D3C")]
	private static int SetColorArray(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000ADE")]
	[Address(RVA = "0x18B4154", Offset = "0x18B4154", VA = "0x18B4154")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x986DA0", Offset = "0x986DA0")]
	private static int SetVectorArray(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000ADF")]
	[Address(RVA = "0x18B47DC", Offset = "0x18B47DC", VA = "0x18B47DC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x986E04", Offset = "0x986E04")]
	private static int SetMatrixArray(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000AE0")]
	[Address(RVA = "0x18B4E64", Offset = "0x18B4E64", VA = "0x18B4E64")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x986E68", Offset = "0x986E68")]
	private static int GetFloat(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000AE1")]
	[Address(RVA = "0x18B523C", Offset = "0x18B523C", VA = "0x18B523C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x986ECC", Offset = "0x986ECC")]
	private static int GetInt(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000AE2")]
	[Address(RVA = "0x18B5608", Offset = "0x18B5608", VA = "0x18B5608")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x986F30", Offset = "0x986F30")]
	private static int GetColor(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000AE3")]
	[Address(RVA = "0x18B59B0", Offset = "0x18B59B0", VA = "0x18B59B0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x986F94", Offset = "0x986F94")]
	private static int GetVector(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000AE4")]
	[Address(RVA = "0x18B5D58", Offset = "0x18B5D58", VA = "0x18B5D58")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x986FF8", Offset = "0x986FF8")]
	private static int GetMatrix(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000AE5")]
	[Address(RVA = "0x18B6140", Offset = "0x18B6140", VA = "0x18B6140")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98705C", Offset = "0x98705C")]
	private static int GetTexture(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000AE6")]
	[Address(RVA = "0x18B64F0", Offset = "0x18B64F0", VA = "0x18B64F0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9870C0", Offset = "0x9870C0")]
	private static int GetFloatArray(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000AE7")]
	[Address(RVA = "0x18B6B7C", Offset = "0x18B6B7C", VA = "0x18B6B7C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x987124", Offset = "0x987124")]
	private static int GetColorArray(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000AE8")]
	[Address(RVA = "0x18B7208", Offset = "0x18B7208", VA = "0x18B7208")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x987188", Offset = "0x987188")]
	private static int GetVectorArray(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000AE9")]
	[Address(RVA = "0x18B7894", Offset = "0x18B7894", VA = "0x18B7894")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9871EC", Offset = "0x9871EC")]
	private static int GetMatrixArray(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000AEA")]
	[Address(RVA = "0x18B7F20", Offset = "0x18B7F20", VA = "0x18B7F20")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x987250", Offset = "0x987250")]
	private static int SetTextureOffset(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000AEB")]
	[Address(RVA = "0x18B82CC", Offset = "0x18B82CC", VA = "0x18B82CC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9872B4", Offset = "0x9872B4")]
	private static int SetTextureScale(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000AEC")]
	[Address(RVA = "0x18B8678", Offset = "0x18B8678", VA = "0x18B8678")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x987318", Offset = "0x987318")]
	private static int GetTextureOffset(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000AED")]
	[Address(RVA = "0x18B8A20", Offset = "0x18B8A20", VA = "0x18B8A20")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98737C", Offset = "0x98737C")]
	private static int GetTextureScale(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000AEE")]
	[Address(RVA = "0x18B8DC8", Offset = "0x18B8DC8", VA = "0x18B8DC8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9873E0", Offset = "0x9873E0")]
	private static int op_Equality(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000AEF")]
	[Address(RVA = "0x18B900C", Offset = "0x18B900C", VA = "0x18B900C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x987444", Offset = "0x987444")]
	private static int get_shader(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000AF0")]
	[Address(RVA = "0x18B91C4", Offset = "0x18B91C4", VA = "0x18B91C4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9874A8", Offset = "0x9874A8")]
	private static int get_color(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000AF1")]
	[Address(RVA = "0x18B9370", Offset = "0x18B9370", VA = "0x18B9370")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98750C", Offset = "0x98750C")]
	private static int get_mainTexture(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000AF2")]
	[Address(RVA = "0x18B9520", Offset = "0x18B9520", VA = "0x18B9520")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x987570", Offset = "0x987570")]
	private static int get_mainTextureOffset(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000AF3")]
	[Address(RVA = "0x18B96CC", Offset = "0x18B96CC", VA = "0x18B96CC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9875D4", Offset = "0x9875D4")]
	private static int get_mainTextureScale(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000AF4")]
	[Address(RVA = "0x18B9878", Offset = "0x18B9878", VA = "0x18B9878")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x987638", Offset = "0x987638")]
	private static int get_renderQueue(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000AF5")]
	[Address(RVA = "0x18B9A4C", Offset = "0x18B9A4C", VA = "0x18B9A4C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98769C", Offset = "0x98769C")]
	private static int get_globalIlluminationFlags(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000AF6")]
	[Address(RVA = "0x18B9C18", Offset = "0x18B9C18", VA = "0x18B9C18")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x987700", Offset = "0x987700")]
	private static int get_doubleSidedGI(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000AF7")]
	[Address(RVA = "0x18B9DEC", Offset = "0x18B9DEC", VA = "0x18B9DEC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x987764", Offset = "0x987764")]
	private static int get_enableInstancing(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000AF8")]
	[Address(RVA = "0x18B9FC0", Offset = "0x18B9FC0", VA = "0x18B9FC0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9877C8", Offset = "0x9877C8")]
	private static int get_passCount(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000AF9")]
	[Address(RVA = "0x18BA194", Offset = "0x18BA194", VA = "0x18BA194")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98782C", Offset = "0x98782C")]
	private static int get_shaderKeywords(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000AFA")]
	[Address(RVA = "0x18BA344", Offset = "0x18BA344", VA = "0x18BA344")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x987890", Offset = "0x987890")]
	private static int set_shader(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000AFB")]
	[Address(RVA = "0x18BA560", Offset = "0x18BA560", VA = "0x18BA560")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9878F4", Offset = "0x9878F4")]
	private static int set_color(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000AFC")]
	[Address(RVA = "0x18BA70C", Offset = "0x18BA70C", VA = "0x18BA70C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x987958", Offset = "0x987958")]
	private static int set_mainTexture(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000AFD")]
	[Address(RVA = "0x18BA908", Offset = "0x18BA908", VA = "0x18BA908")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9879BC", Offset = "0x9879BC")]
	private static int set_mainTextureOffset(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000AFE")]
	[Address(RVA = "0x18BAAB4", Offset = "0x18BAAB4", VA = "0x18BAAB4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x987A20", Offset = "0x987A20")]
	private static int set_mainTextureScale(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000AFF")]
	[Address(RVA = "0x18BAC60", Offset = "0x18BAC60", VA = "0x18BAC60")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x987A84", Offset = "0x987A84")]
	private static int set_renderQueue(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B00")]
	[Address(RVA = "0x18BAE48", Offset = "0x18BAE48", VA = "0x18BAE48")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x987AE8", Offset = "0x987AE8")]
	private static int set_globalIlluminationFlags(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B01")]
	[Address(RVA = "0x18BB06C", Offset = "0x18BB06C", VA = "0x18BB06C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x987B4C", Offset = "0x987B4C")]
	private static int set_doubleSidedGI(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B02")]
	[Address(RVA = "0x18BB240", Offset = "0x18BB240", VA = "0x18BB240")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x987BB0", Offset = "0x987BB0")]
	private static int set_enableInstancing(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B03")]
	[Address(RVA = "0x18BB414", Offset = "0x18BB414", VA = "0x18BB414")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x987C14", Offset = "0x987C14")]
	private static int set_shaderKeywords(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B04")]
	[Address(RVA = "0x18BC628", Offset = "0x18BC628", VA = "0x18BC628")]
	public UnityEngine_MaterialWrap()
	{
	}
}
[Token(Token = "0x2000090")]
public class UnityEngine_MeshRendererWrap
{
	[Token(Token = "0x6000B05")]
	[Address(RVA = "0x18BD808", Offset = "0x18BD808", VA = "0x18BD808")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x6000B06")]
	[Address(RVA = "0x18BC630", Offset = "0x18BC630", VA = "0x18BC630")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x987C78", Offset = "0x987C78")]
	private static int _CreateUnityEngine_MeshRenderer(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B07")]
	[Address(RVA = "0x18BC7E8", Offset = "0x18BC7E8", VA = "0x18BC7E8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x987CDC", Offset = "0x987CDC")]
	private static int op_Equality(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B08")]
	[Address(RVA = "0x18BCA2C", Offset = "0x18BCA2C", VA = "0x18BCA2C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x987D40", Offset = "0x987D40")]
	private static int get_additionalVertexStreams(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B09")]
	[Address(RVA = "0x18BCBE4", Offset = "0x18BCBE4", VA = "0x18BCBE4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x987DA4", Offset = "0x987DA4")]
	private static int get_subMeshStartIndex(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B0A")]
	[Address(RVA = "0x18BCDB8", Offset = "0x18BCDB8", VA = "0x18BCDB8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x987E08", Offset = "0x987E08")]
	private static int get_scaleInLightmap(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B0B")]
	[Address(RVA = "0x18BCEF0", Offset = "0x18BCEF0", VA = "0x18BCEF0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x987E6C", Offset = "0x987E6C")]
	private static int get_receiveGI(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B0C")]
	[Address(RVA = "0x18BD028", Offset = "0x18BD028", VA = "0x18BD028")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x987ED0", Offset = "0x987ED0")]
	private static int get_stitchLightmapSeams(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B0D")]
	[Address(RVA = "0x18BD160", Offset = "0x18BD160", VA = "0x18BD160")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x987F34", Offset = "0x987F34")]
	private static int set_additionalVertexStreams(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B0E")]
	[Address(RVA = "0x18BD37C", Offset = "0x18BD37C", VA = "0x18BD37C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x987F98", Offset = "0x987F98")]
	private static int set_scaleInLightmap(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B0F")]
	[Address(RVA = "0x18BD4F4", Offset = "0x18BD4F4", VA = "0x18BD4F4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x987FFC", Offset = "0x987FFC")]
	private static int set_receiveGI(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B10")]
	[Address(RVA = "0x18BD690", Offset = "0x18BD690", VA = "0x18BD690")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x988060", Offset = "0x988060")]
	private static int set_stitchLightmapSeams(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B11")]
	[Address(RVA = "0x18BDB78", Offset = "0x18BDB78", VA = "0x18BDB78")]
	public UnityEngine_MeshRendererWrap()
	{
	}
}
[Token(Token = "0x2000091")]
public class UnityEngine_MonoBehaviourWrap
{
	[Token(Token = "0x6000B12")]
	[Address(RVA = "0x18BF778", Offset = "0x18BF778", VA = "0x18BF778")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x6000B13")]
	[Address(RVA = "0x18BDB80", Offset = "0x18BDB80", VA = "0x18BDB80")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9880C4", Offset = "0x9880C4")]
	private static int IsInvoking(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B14")]
	[Address(RVA = "0x18BDE98", Offset = "0x18BDE98", VA = "0x18BDE98")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x988128", Offset = "0x988128")]
	private static int CancelInvoke(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B15")]
	[Address(RVA = "0x18BE148", Offset = "0x18BE148", VA = "0x18BE148")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98818C", Offset = "0x98818C")]
	private static int Invoke(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B16")]
	[Address(RVA = "0x18BE338", Offset = "0x18BE338", VA = "0x18BE338")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9881F0", Offset = "0x9881F0")]
	private static int InvokeRepeating(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B17")]
	[Address(RVA = "0x18BE554", Offset = "0x18BE554", VA = "0x18BE554")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x988254", Offset = "0x988254")]
	private static int StartCoroutine(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B18")]
	[Address(RVA = "0x18BEA1C", Offset = "0x18BEA1C", VA = "0x18BEA1C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9882B8", Offset = "0x9882B8")]
	private static int StopCoroutine(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B19")]
	[Address(RVA = "0x18BEEC4", Offset = "0x18BEEC4", VA = "0x18BEEC4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98831C", Offset = "0x98831C")]
	private static int StopAllCoroutines(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B1A")]
	[Address(RVA = "0x18BF04C", Offset = "0x18BF04C", VA = "0x18BF04C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x988380", Offset = "0x988380")]
	private static int print(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B1B")]
	[Address(RVA = "0x18BF18C", Offset = "0x18BF18C", VA = "0x18BF18C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9883E4", Offset = "0x9883E4")]
	private static int op_Equality(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B1C")]
	[Address(RVA = "0x18BF3D0", Offset = "0x18BF3D0", VA = "0x18BF3D0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x988448", Offset = "0x988448")]
	private static int get_useGUILayout(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B1D")]
	[Address(RVA = "0x18BF5A4", Offset = "0x18BF5A4", VA = "0x18BF5A4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9884AC", Offset = "0x9884AC")]
	private static int set_useGUILayout(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B1E")]
	[Address(RVA = "0x18BFB2C", Offset = "0x18BFB2C", VA = "0x18BFB2C")]
	public UnityEngine_MonoBehaviourWrap()
	{
	}
}
[Token(Token = "0x2000092")]
public class UnityEngine_ParticleSystemWrap
{
	[Token(Token = "0x6000B1F")]
	[Address(RVA = "0x154B5F4", Offset = "0x154B5F4", VA = "0x154B5F4")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x6000B20")]
	[Address(RVA = "0x15435F8", Offset = "0x15435F8", VA = "0x15435F8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x988510", Offset = "0x988510")]
	private static int _CreateUnityEngine_ParticleSystem(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B21")]
	[Address(RVA = "0x15437B8", Offset = "0x15437B8", VA = "0x15437B8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x988574", Offset = "0x988574")]
	private static int SetParticles(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B22")]
	[Address(RVA = "0x1544094", Offset = "0x1544094", VA = "0x1544094")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9885D8", Offset = "0x9885D8")]
	private static int GetParticles(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B23")]
	[Address(RVA = "0x1544A38", Offset = "0x1544A38", VA = "0x1544A38")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98863C", Offset = "0x98863C")]
	private static int SetCustomParticleData(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B24")]
	[Address(RVA = "0x1544CCC", Offset = "0x1544CCC", VA = "0x1544CCC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9886A0", Offset = "0x9886A0")]
	private static int GetCustomParticleData(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B25")]
	[Address(RVA = "0x1544F9C", Offset = "0x1544F9C", VA = "0x1544F9C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x988704", Offset = "0x988704")]
	private static int GetPlaybackState(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B26")]
	[Address(RVA = "0x154517C", Offset = "0x154517C", VA = "0x154517C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x988768", Offset = "0x988768")]
	private static int SetPlaybackState(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B27")]
	[Address(RVA = "0x15453B0", Offset = "0x15453B0", VA = "0x15453B0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9887CC", Offset = "0x9887CC")]
	private static int GetTrails(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B28")]
	[Address(RVA = "0x1545590", Offset = "0x1545590", VA = "0x1545590")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x988830", Offset = "0x988830")]
	private static int SetTrails(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B29")]
	[Address(RVA = "0x15457C8", Offset = "0x15457C8", VA = "0x15457C8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x988894", Offset = "0x988894")]
	private static int Simulate(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B2A")]
	[Address(RVA = "0x1545DBC", Offset = "0x1545DBC", VA = "0x1545DBC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9888F8", Offset = "0x9888F8")]
	private static int Play(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B2B")]
	[Address(RVA = "0x15460C4", Offset = "0x15460C4", VA = "0x15460C4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98895C", Offset = "0x98895C")]
	private static int Pause(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B2C")]
	[Address(RVA = "0x15463CC", Offset = "0x15463CC", VA = "0x15463CC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9889C0", Offset = "0x9889C0")]
	private static int Stop(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B2D")]
	[Address(RVA = "0x154682C", Offset = "0x154682C", VA = "0x154682C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x988A24", Offset = "0x988A24")]
	private static int Clear(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B2E")]
	[Address(RVA = "0x1546B34", Offset = "0x1546B34", VA = "0x1546B34")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x988A88", Offset = "0x988A88")]
	private static int IsAlive(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B2F")]
	[Address(RVA = "0x1546E88", Offset = "0x1546E88", VA = "0x1546E88")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x988AEC", Offset = "0x988AEC")]
	private static int Emit(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B30")]
	[Address(RVA = "0x15472A4", Offset = "0x15472A4", VA = "0x15472A4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x988B50", Offset = "0x988B50")]
	private static int TriggerSubEmitter(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B31")]
	[Address(RVA = "0x15478AC", Offset = "0x15478AC", VA = "0x15478AC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x988BB4", Offset = "0x988BB4")]
	private static int ResetPreMappedBufferMemory(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B32")]
	[Address(RVA = "0x15479D8", Offset = "0x15479D8", VA = "0x15479D8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x988C18", Offset = "0x988C18")]
	private static int SetMaximumPreMappedBufferCounts(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B33")]
	[Address(RVA = "0x1547B8C", Offset = "0x1547B8C", VA = "0x1547B8C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x988C7C", Offset = "0x988C7C")]
	private static int op_Equality(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B34")]
	[Address(RVA = "0x1547DD0", Offset = "0x1547DD0", VA = "0x1547DD0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x988CE0", Offset = "0x988CE0")]
	private static int get_isPlaying(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B35")]
	[Address(RVA = "0x1547F88", Offset = "0x1547F88", VA = "0x1547F88")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x988D44", Offset = "0x988D44")]
	private static int get_isEmitting(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B36")]
	[Address(RVA = "0x1548140", Offset = "0x1548140", VA = "0x1548140")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x988DA8", Offset = "0x988DA8")]
	private static int get_isStopped(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B37")]
	[Address(RVA = "0x15482F8", Offset = "0x15482F8", VA = "0x15482F8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x988E0C", Offset = "0x988E0C")]
	private static int get_isPaused(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B38")]
	[Address(RVA = "0x15484B0", Offset = "0x15484B0", VA = "0x15484B0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x988E70", Offset = "0x988E70")]
	private static int get_particleCount(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B39")]
	[Address(RVA = "0x1548668", Offset = "0x1548668", VA = "0x1548668")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x988ED4", Offset = "0x988ED4")]
	private static int get_time(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B3A")]
	[Address(RVA = "0x154882C", Offset = "0x154882C", VA = "0x154882C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x988F38", Offset = "0x988F38")]
	private static int get_randomSeed(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B3B")]
	[Address(RVA = "0x15489E4", Offset = "0x15489E4", VA = "0x15489E4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x988F9C", Offset = "0x988F9C")]
	private static int get_useAutoRandomSeed(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B3C")]
	[Address(RVA = "0x1548B9C", Offset = "0x1548B9C", VA = "0x1548B9C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x989000", Offset = "0x989000")]
	private static int get_proceduralSimulationSupported(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B3D")]
	[Address(RVA = "0x1548D54", Offset = "0x1548D54", VA = "0x1548D54")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x989064", Offset = "0x989064")]
	private static int get_main(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B3E")]
	[Address(RVA = "0x1548EF0", Offset = "0x1548EF0", VA = "0x1548EF0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9890C8", Offset = "0x9890C8")]
	private static int get_emission(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B3F")]
	[Address(RVA = "0x154908C", Offset = "0x154908C", VA = "0x154908C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98912C", Offset = "0x98912C")]
	private static int get_shape(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B40")]
	[Address(RVA = "0x1549228", Offset = "0x1549228", VA = "0x1549228")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x989190", Offset = "0x989190")]
	private static int get_velocityOverLifetime(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B41")]
	[Address(RVA = "0x15493C4", Offset = "0x15493C4", VA = "0x15493C4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9891F4", Offset = "0x9891F4")]
	private static int get_limitVelocityOverLifetime(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B42")]
	[Address(RVA = "0x1549560", Offset = "0x1549560", VA = "0x1549560")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x989258", Offset = "0x989258")]
	private static int get_inheritVelocity(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B43")]
	[Address(RVA = "0x15496FC", Offset = "0x15496FC", VA = "0x15496FC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9892BC", Offset = "0x9892BC")]
	private static int get_forceOverLifetime(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B44")]
	[Address(RVA = "0x1549898", Offset = "0x1549898", VA = "0x1549898")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x989320", Offset = "0x989320")]
	private static int get_colorOverLifetime(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B45")]
	[Address(RVA = "0x1549A34", Offset = "0x1549A34", VA = "0x1549A34")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x989384", Offset = "0x989384")]
	private static int get_colorBySpeed(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B46")]
	[Address(RVA = "0x1549BD0", Offset = "0x1549BD0", VA = "0x1549BD0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9893E8", Offset = "0x9893E8")]
	private static int get_sizeOverLifetime(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B47")]
	[Address(RVA = "0x1549D6C", Offset = "0x1549D6C", VA = "0x1549D6C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98944C", Offset = "0x98944C")]
	private static int get_sizeBySpeed(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B48")]
	[Address(RVA = "0x1549F08", Offset = "0x1549F08", VA = "0x1549F08")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9894B0", Offset = "0x9894B0")]
	private static int get_rotationOverLifetime(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B49")]
	[Address(RVA = "0x154A0A4", Offset = "0x154A0A4", VA = "0x154A0A4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x989514", Offset = "0x989514")]
	private static int get_rotationBySpeed(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B4A")]
	[Address(RVA = "0x154A240", Offset = "0x154A240", VA = "0x154A240")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x989578", Offset = "0x989578")]
	private static int get_externalForces(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B4B")]
	[Address(RVA = "0x154A3DC", Offset = "0x154A3DC", VA = "0x154A3DC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9895DC", Offset = "0x9895DC")]
	private static int get_noise(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B4C")]
	[Address(RVA = "0x154A578", Offset = "0x154A578", VA = "0x154A578")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x989640", Offset = "0x989640")]
	private static int get_collision(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B4D")]
	[Address(RVA = "0x154A714", Offset = "0x154A714", VA = "0x154A714")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9896A4", Offset = "0x9896A4")]
	private static int get_trigger(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B4E")]
	[Address(RVA = "0x154A8B0", Offset = "0x154A8B0", VA = "0x154A8B0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x989708", Offset = "0x989708")]
	private static int get_subEmitters(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B4F")]
	[Address(RVA = "0x154AA4C", Offset = "0x154AA4C", VA = "0x154AA4C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98976C", Offset = "0x98976C")]
	private static int get_textureSheetAnimation(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B50")]
	[Address(RVA = "0x154ABE8", Offset = "0x154ABE8", VA = "0x154ABE8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9897D0", Offset = "0x9897D0")]
	private static int get_lights(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B51")]
	[Address(RVA = "0x154AD84", Offset = "0x154AD84", VA = "0x154AD84")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x989834", Offset = "0x989834")]
	private static int get_trails(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B52")]
	[Address(RVA = "0x154AF20", Offset = "0x154AF20", VA = "0x154AF20")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x989898", Offset = "0x989898")]
	private static int get_customData(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B53")]
	[Address(RVA = "0x154B0BC", Offset = "0x154B0BC", VA = "0x154B0BC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9898FC", Offset = "0x9898FC")]
	private static int set_time(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B54")]
	[Address(RVA = "0x154B274", Offset = "0x154B274", VA = "0x154B274")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x989960", Offset = "0x989960")]
	private static int set_randomSeed(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B55")]
	[Address(RVA = "0x154B43C", Offset = "0x154B43C", VA = "0x154B43C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9899C4", Offset = "0x9899C4")]
	private static int set_useAutoRandomSeed(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B56")]
	[Address(RVA = "0x154C4A8", Offset = "0x154C4A8", VA = "0x154C4A8")]
	public UnityEngine_ParticleSystemWrap()
	{
	}
}
[Token(Token = "0x2000093")]
public class UnityEngine_PhysicsWrap
{
	[Token(Token = "0x6000B57")]
	[Address(RVA = "0x155D138", Offset = "0x155D138", VA = "0x155D138")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x6000B58")]
	[Address(RVA = "0x154C4B0", Offset = "0x154C4B0", VA = "0x154C4B0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x989A28", Offset = "0x989A28")]
	private static int IgnoreCollision(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B59")]
	[Address(RVA = "0x154C828", Offset = "0x154C828", VA = "0x154C828")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x989A8C", Offset = "0x989A8C")]
	private static int IgnoreLayerCollision(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B5A")]
	[Address(RVA = "0x154CAC0", Offset = "0x154CAC0", VA = "0x154CAC0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x989AF0", Offset = "0x989AF0")]
	private static int GetIgnoreLayerCollision(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B5B")]
	[Address(RVA = "0x154CC88", Offset = "0x154CC88", VA = "0x154CC88")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x989B54", Offset = "0x989B54")]
	private static int GetIgnoreCollision(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B5C")]
	[Address(RVA = "0x154CEA4", Offset = "0x154CEA4", VA = "0x154CEA4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x989BB8", Offset = "0x989BB8")]
	private static int Raycast(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B5D")]
	[Address(RVA = "0x154E69C", Offset = "0x154E69C", VA = "0x154E69C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x989C1C", Offset = "0x989C1C")]
	private static int Linecast(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B5E")]
	[Address(RVA = "0x154EFB8", Offset = "0x154EFB8", VA = "0x154EFB8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x989C80", Offset = "0x989C80")]
	private static int CapsuleCast(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B5F")]
	[Address(RVA = "0x154FE20", Offset = "0x154FE20", VA = "0x154FE20")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x989CE4", Offset = "0x989CE4")]
	private static int SphereCast(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B60")]
	[Address(RVA = "0x1550FCC", Offset = "0x1550FCC", VA = "0x1550FCC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x989D48", Offset = "0x989D48")]
	private static int BoxCast(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B61")]
	[Address(RVA = "0x1552114", Offset = "0x1552114", VA = "0x1552114")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x989DAC", Offset = "0x989DAC")]
	private static int RaycastAll(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B62")]
	[Address(RVA = "0x1552B44", Offset = "0x1552B44", VA = "0x1552B44")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x989E10", Offset = "0x989E10")]
	private static int RaycastNonAlloc(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B63")]
	[Address(RVA = "0x15536CC", Offset = "0x15536CC", VA = "0x15536CC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x989E74", Offset = "0x989E74")]
	private static int CapsuleCastAll(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B64")]
	[Address(RVA = "0x1553DCC", Offset = "0x1553DCC", VA = "0x1553DCC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x989ED8", Offset = "0x989ED8")]
	private static int SphereCastAll(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B65")]
	[Address(RVA = "0x1554914", Offset = "0x1554914", VA = "0x1554914")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x989F3C", Offset = "0x989F3C")]
	private static int OverlapCapsule(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B66")]
	[Address(RVA = "0x1554E20", Offset = "0x1554E20", VA = "0x1554E20")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x989FA0", Offset = "0x989FA0")]
	private static int OverlapSphere(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B67")]
	[Address(RVA = "0x155529C", Offset = "0x155529C", VA = "0x155529C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98A004", Offset = "0x98A004")]
	private static int Simulate(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B68")]
	[Address(RVA = "0x1555404", Offset = "0x1555404", VA = "0x1555404")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98A068", Offset = "0x98A068")]
	private static int SyncTransforms(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B69")]
	[Address(RVA = "0x1555530", Offset = "0x1555530", VA = "0x1555530")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98A0CC", Offset = "0x98A0CC")]
	private static int ComputePenetration(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B6A")]
	[Address(RVA = "0x1555858", Offset = "0x1555858", VA = "0x1555858")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98A130", Offset = "0x98A130")]
	private static int ClosestPoint(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B6B")]
	[Address(RVA = "0x1555AA0", Offset = "0x1555AA0", VA = "0x1555AA0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98A194", Offset = "0x98A194")]
	private static int OverlapSphereNonAlloc(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B6C")]
	[Address(RVA = "0x1555F7C", Offset = "0x1555F7C", VA = "0x1555F7C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98A1F8", Offset = "0x98A1F8")]
	private static int CheckSphere(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B6D")]
	[Address(RVA = "0x15563F8", Offset = "0x15563F8", VA = "0x15563F8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98A25C", Offset = "0x98A25C")]
	private static int CapsuleCastNonAlloc(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B6E")]
	[Address(RVA = "0x1556BA8", Offset = "0x1556BA8", VA = "0x1556BA8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98A2C0", Offset = "0x98A2C0")]
	private static int SphereCastNonAlloc(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B6F")]
	[Address(RVA = "0x155781C", Offset = "0x155781C", VA = "0x155781C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98A324", Offset = "0x98A324")]
	private static int CheckCapsule(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B70")]
	[Address(RVA = "0x1557D28", Offset = "0x1557D28", VA = "0x1557D28")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98A388", Offset = "0x98A388")]
	private static int CheckBox(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B71")]
	[Address(RVA = "0x1558324", Offset = "0x1558324", VA = "0x1558324")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98A3EC", Offset = "0x98A3EC")]
	private static int OverlapBox(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B72")]
	[Address(RVA = "0x15588E8", Offset = "0x15588E8", VA = "0x15588E8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98A450", Offset = "0x98A450")]
	private static int OverlapBoxNonAlloc(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B73")]
	[Address(RVA = "0x1558F6C", Offset = "0x1558F6C", VA = "0x1558F6C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98A4B4", Offset = "0x98A4B4")]
	private static int BoxCastNonAlloc(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B74")]
	[Address(RVA = "0x1559854", Offset = "0x1559854", VA = "0x1559854")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98A518", Offset = "0x98A518")]
	private static int BoxCastAll(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B75")]
	[Address(RVA = "0x155A044", Offset = "0x155A044", VA = "0x155A044")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98A57C", Offset = "0x98A57C")]
	private static int OverlapCapsuleNonAlloc(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B76")]
	[Address(RVA = "0x155A5B0", Offset = "0x155A5B0", VA = "0x155A5B0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98A5E0", Offset = "0x98A5E0")]
	private static int RebuildBroadphaseRegions(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B77")]
	[Address(RVA = "0x155A75C", Offset = "0x155A75C", VA = "0x155A75C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98A644", Offset = "0x98A644")]
	private static int BakeMesh(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B78")]
	[Address(RVA = "0x155A908", Offset = "0x155A908", VA = "0x155A908")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98A6A8", Offset = "0x98A6A8")]
	private static int get_gravity(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B79")]
	[Address(RVA = "0x155AA60", Offset = "0x155AA60", VA = "0x155AA60")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98A70C", Offset = "0x98A70C")]
	private static int get_defaultContactOffset(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B7A")]
	[Address(RVA = "0x155AB9C", Offset = "0x155AB9C", VA = "0x155AB9C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98A770", Offset = "0x98A770")]
	private static int get_sleepThreshold(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B7B")]
	[Address(RVA = "0x155ACD8", Offset = "0x155ACD8", VA = "0x155ACD8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98A7D4", Offset = "0x98A7D4")]
	private static int get_queriesHitTriggers(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B7C")]
	[Address(RVA = "0x155AE08", Offset = "0x155AE08", VA = "0x155AE08")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98A838", Offset = "0x98A838")]
	private static int get_queriesHitBackfaces(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B7D")]
	[Address(RVA = "0x155AF38", Offset = "0x155AF38", VA = "0x155AF38")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98A89C", Offset = "0x98A89C")]
	private static int get_bounceThreshold(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B7E")]
	[Address(RVA = "0x155B074", Offset = "0x155B074", VA = "0x155B074")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98A900", Offset = "0x98A900")]
	private static int get_defaultSolverIterations(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B7F")]
	[Address(RVA = "0x155B1A4", Offset = "0x155B1A4", VA = "0x155B1A4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98A964", Offset = "0x98A964")]
	private static int get_defaultSolverVelocityIterations(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B80")]
	[Address(RVA = "0x155B2D4", Offset = "0x155B2D4", VA = "0x155B2D4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98A9C8", Offset = "0x98A9C8")]
	private static int get_defaultMaxAngularSpeed(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B81")]
	[Address(RVA = "0x155B410", Offset = "0x155B410", VA = "0x155B410")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98AA2C", Offset = "0x98AA2C")]
	private static int get_defaultPhysicsScene(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B82")]
	[Address(RVA = "0x155B548", Offset = "0x155B548", VA = "0x155B548")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98AA90", Offset = "0x98AA90")]
	private static int get_autoSimulation(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B83")]
	[Address(RVA = "0x155B678", Offset = "0x155B678", VA = "0x155B678")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98AAF4", Offset = "0x98AAF4")]
	private static int get_autoSyncTransforms(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B84")]
	[Address(RVA = "0x155B7A8", Offset = "0x155B7A8", VA = "0x155B7A8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98AB58", Offset = "0x98AB58")]
	private static int get_reuseCollisionCallbacks(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B85")]
	[Address(RVA = "0x155B8D8", Offset = "0x155B8D8", VA = "0x155B8D8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98ABBC", Offset = "0x98ABBC")]
	private static int get_interCollisionDistance(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B86")]
	[Address(RVA = "0x155BA14", Offset = "0x155BA14", VA = "0x155BA14")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98AC20", Offset = "0x98AC20")]
	private static int get_interCollisionStiffness(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B87")]
	[Address(RVA = "0x155BB50", Offset = "0x155BB50", VA = "0x155BB50")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98AC84", Offset = "0x98AC84")]
	private static int get_interCollisionSettingsToggle(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B88")]
	[Address(RVA = "0x155BC80", Offset = "0x155BC80", VA = "0x155BC80")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98ACE8", Offset = "0x98ACE8")]
	private static int get_clothGravity(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B89")]
	[Address(RVA = "0x155BDD8", Offset = "0x155BDD8", VA = "0x155BDD8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98AD4C", Offset = "0x98AD4C")]
	private static int set_gravity(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B8A")]
	[Address(RVA = "0x155BF08", Offset = "0x155BF08", VA = "0x155BF08")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98ADB0", Offset = "0x98ADB0")]
	private static int set_defaultContactOffset(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B8B")]
	[Address(RVA = "0x155C03C", Offset = "0x155C03C", VA = "0x155C03C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98AE14", Offset = "0x98AE14")]
	private static int set_sleepThreshold(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B8C")]
	[Address(RVA = "0x155C170", Offset = "0x155C170", VA = "0x155C170")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98AE78", Offset = "0x98AE78")]
	private static int set_queriesHitTriggers(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B8D")]
	[Address(RVA = "0x155C2A4", Offset = "0x155C2A4", VA = "0x155C2A4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98AEDC", Offset = "0x98AEDC")]
	private static int set_queriesHitBackfaces(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B8E")]
	[Address(RVA = "0x155C3D8", Offset = "0x155C3D8", VA = "0x155C3D8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98AF40", Offset = "0x98AF40")]
	private static int set_bounceThreshold(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B8F")]
	[Address(RVA = "0x155C50C", Offset = "0x155C50C", VA = "0x155C50C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98AFA4", Offset = "0x98AFA4")]
	private static int set_defaultSolverIterations(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B90")]
	[Address(RVA = "0x155C654", Offset = "0x155C654", VA = "0x155C654")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98B008", Offset = "0x98B008")]
	private static int set_defaultSolverVelocityIterations(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B91")]
	[Address(RVA = "0x155C79C", Offset = "0x155C79C", VA = "0x155C79C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98B06C", Offset = "0x98B06C")]
	private static int set_defaultMaxAngularSpeed(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B92")]
	[Address(RVA = "0x155C8D0", Offset = "0x155C8D0", VA = "0x155C8D0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98B0D0", Offset = "0x98B0D0")]
	private static int set_autoSimulation(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B93")]
	[Address(RVA = "0x155CA04", Offset = "0x155CA04", VA = "0x155CA04")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98B134", Offset = "0x98B134")]
	private static int set_autoSyncTransforms(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B94")]
	[Address(RVA = "0x155CB38", Offset = "0x155CB38", VA = "0x155CB38")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98B198", Offset = "0x98B198")]
	private static int set_reuseCollisionCallbacks(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B95")]
	[Address(RVA = "0x155CC6C", Offset = "0x155CC6C", VA = "0x155CC6C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98B1FC", Offset = "0x98B1FC")]
	private static int set_interCollisionDistance(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B96")]
	[Address(RVA = "0x155CDA0", Offset = "0x155CDA0", VA = "0x155CDA0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98B260", Offset = "0x98B260")]
	private static int set_interCollisionStiffness(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B97")]
	[Address(RVA = "0x155CED4", Offset = "0x155CED4", VA = "0x155CED4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98B2C4", Offset = "0x98B2C4")]
	private static int set_interCollisionSettingsToggle(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B98")]
	[Address(RVA = "0x155D008", Offset = "0x155D008", VA = "0x155D008")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98B328", Offset = "0x98B328")]
	private static int set_clothGravity(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B99")]
	[Address(RVA = "0x155E0C8", Offset = "0x155E0C8", VA = "0x155E0C8")]
	public UnityEngine_PhysicsWrap()
	{
	}
}
[Token(Token = "0x2000094")]
public class UnityEngine_PlayModeWrap
{
	[Token(Token = "0x6000B9A")]
	[Address(RVA = "0x155E2F0", Offset = "0x155E2F0", VA = "0x155E2F0")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x6000B9B")]
	[Address(RVA = "0x155E524", Offset = "0x155E524", VA = "0x155E524")]
	private static void Push(IntPtr L, PlayMode arg)
	{
	}

	[Token(Token = "0x6000B9C")]
	[Address(RVA = "0x155E5C0", Offset = "0x155E5C0", VA = "0x155E5C0")]
	private static bool CheckType(IntPtr L, int pos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B9D")]
	[Address(RVA = "0x155E0D0", Offset = "0x155E0D0", VA = "0x155E0D0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98B38C", Offset = "0x98B38C")]
	private static int get_StopSameLayer(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B9E")]
	[Address(RVA = "0x155E16C", Offset = "0x155E16C", VA = "0x155E16C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98B3F0", Offset = "0x98B3F0")]
	private static int get_StopAll(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000B9F")]
	[Address(RVA = "0x155E20C", Offset = "0x155E20C", VA = "0x155E20C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98B454", Offset = "0x98B454")]
	private static int IntToEnum(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BA0")]
	[Address(RVA = "0x155E67C", Offset = "0x155E67C", VA = "0x155E67C")]
	public UnityEngine_PlayModeWrap()
	{
	}
}
[Token(Token = "0x2000095")]
public class UnityEngine_QualitySettingsWrap
{
	[Token(Token = "0x6000BA1")]
	[Address(RVA = "0x15630DC", Offset = "0x15630DC", VA = "0x15630DC")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x6000BA2")]
	[Address(RVA = "0x155E684", Offset = "0x155E684", VA = "0x155E684")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98B4B8", Offset = "0x98B4B8")]
	private static int GetQualityLevel(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BA3")]
	[Address(RVA = "0x155E7EC", Offset = "0x155E7EC", VA = "0x155E7EC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98B51C", Offset = "0x98B51C")]
	private static int SetQualityLevel(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BA4")]
	[Address(RVA = "0x155EA30", Offset = "0x155EA30", VA = "0x155EA30")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98B580", Offset = "0x98B580")]
	private static int IncreaseLevel(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BA5")]
	[Address(RVA = "0x155EBE8", Offset = "0x155EBE8", VA = "0x155EBE8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98B5E4", Offset = "0x98B5E4")]
	private static int DecreaseLevel(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BA6")]
	[Address(RVA = "0x155EDA0", Offset = "0x155EDA0", VA = "0x155EDA0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98B648", Offset = "0x98B648")]
	private static int op_Equality(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BA7")]
	[Address(RVA = "0x155EFE4", Offset = "0x155EFE4", VA = "0x155EFE4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98B6AC", Offset = "0x98B6AC")]
	private static int get_names(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BA8")]
	[Address(RVA = "0x155F114", Offset = "0x155F114", VA = "0x155F114")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98B710", Offset = "0x98B710")]
	private static int get_pixelLightCount(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BA9")]
	[Address(RVA = "0x155F244", Offset = "0x155F244", VA = "0x155F244")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98B774", Offset = "0x98B774")]
	private static int get_shadows(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BAA")]
	[Address(RVA = "0x155F38C", Offset = "0x155F38C", VA = "0x155F38C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98B7D8", Offset = "0x98B7D8")]
	private static int get_shadowProjection(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BAB")]
	[Address(RVA = "0x155F4D4", Offset = "0x155F4D4", VA = "0x155F4D4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98B83C", Offset = "0x98B83C")]
	private static int get_shadowCascades(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BAC")]
	[Address(RVA = "0x155F604", Offset = "0x155F604", VA = "0x155F604")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98B8A0", Offset = "0x98B8A0")]
	private static int get_shadowDistance(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BAD")]
	[Address(RVA = "0x155F740", Offset = "0x155F740", VA = "0x155F740")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98B904", Offset = "0x98B904")]
	private static int get_shadowResolution(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BAE")]
	[Address(RVA = "0x155F888", Offset = "0x155F888", VA = "0x155F888")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98B968", Offset = "0x98B968")]
	private static int get_shadowNearPlaneOffset(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BAF")]
	[Address(RVA = "0x155F9C4", Offset = "0x155F9C4", VA = "0x155F9C4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98B9CC", Offset = "0x98B9CC")]
	private static int get_shadowCascade2Split(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BB0")]
	[Address(RVA = "0x155FB00", Offset = "0x155FB00", VA = "0x155FB00")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98BA30", Offset = "0x98BA30")]
	private static int get_shadowCascade4Split(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BB1")]
	[Address(RVA = "0x155FC58", Offset = "0x155FC58", VA = "0x155FC58")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98BA94", Offset = "0x98BA94")]
	private static int get_masterTextureLimit(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BB2")]
	[Address(RVA = "0x155FD88", Offset = "0x155FD88", VA = "0x155FD88")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98BAF8", Offset = "0x98BAF8")]
	private static int get_anisotropicFiltering(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BB3")]
	[Address(RVA = "0x155FED0", Offset = "0x155FED0", VA = "0x155FED0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98BB5C", Offset = "0x98BB5C")]
	private static int get_lodBias(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BB4")]
	[Address(RVA = "0x156000C", Offset = "0x156000C", VA = "0x156000C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98BBC0", Offset = "0x98BBC0")]
	private static int get_maximumLODLevel(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BB5")]
	[Address(RVA = "0x156013C", Offset = "0x156013C", VA = "0x156013C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98BC24", Offset = "0x98BC24")]
	private static int get_particleRaycastBudget(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BB6")]
	[Address(RVA = "0x156026C", Offset = "0x156026C", VA = "0x156026C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98BC88", Offset = "0x98BC88")]
	private static int get_softParticles(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BB7")]
	[Address(RVA = "0x156039C", Offset = "0x156039C", VA = "0x156039C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98BCEC", Offset = "0x98BCEC")]
	private static int get_softVegetation(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BB8")]
	[Address(RVA = "0x15604CC", Offset = "0x15604CC", VA = "0x15604CC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98BD50", Offset = "0x98BD50")]
	private static int get_realtimeReflectionProbes(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BB9")]
	[Address(RVA = "0x15605FC", Offset = "0x15605FC", VA = "0x15605FC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98BDB4", Offset = "0x98BDB4")]
	private static int get_billboardsFaceCameraPosition(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BBA")]
	[Address(RVA = "0x156072C", Offset = "0x156072C", VA = "0x156072C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98BE18", Offset = "0x98BE18")]
	private static int get_maxQueuedFrames(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BBB")]
	[Address(RVA = "0x156085C", Offset = "0x156085C", VA = "0x156085C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98BE7C", Offset = "0x98BE7C")]
	private static int get_vSyncCount(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BBC")]
	[Address(RVA = "0x156098C", Offset = "0x156098C", VA = "0x156098C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98BEE0", Offset = "0x98BEE0")]
	private static int get_antiAliasing(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BBD")]
	[Address(RVA = "0x1560ABC", Offset = "0x1560ABC", VA = "0x1560ABC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98BF44", Offset = "0x98BF44")]
	private static int get_desiredColorSpace(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BBE")]
	[Address(RVA = "0x1560C04", Offset = "0x1560C04", VA = "0x1560C04")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98BFA8", Offset = "0x98BFA8")]
	private static int get_activeColorSpace(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BBF")]
	[Address(RVA = "0x1560D4C", Offset = "0x1560D4C", VA = "0x1560D4C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98C00C", Offset = "0x98C00C")]
	private static int get_blendWeights(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BC0")]
	[Address(RVA = "0x1560E94", Offset = "0x1560E94", VA = "0x1560E94")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98C070", Offset = "0x98C070")]
	private static int get_asyncUploadTimeSlice(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BC1")]
	[Address(RVA = "0x1560FC4", Offset = "0x1560FC4", VA = "0x1560FC4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98C0D4", Offset = "0x98C0D4")]
	private static int get_asyncUploadBufferSize(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BC2")]
	[Address(RVA = "0x15610F4", Offset = "0x15610F4", VA = "0x15610F4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98C138", Offset = "0x98C138")]
	private static int set_pixelLightCount(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BC3")]
	[Address(RVA = "0x156123C", Offset = "0x156123C", VA = "0x156123C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98C19C", Offset = "0x98C19C")]
	private static int set_shadows(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BC4")]
	[Address(RVA = "0x15613E4", Offset = "0x15613E4", VA = "0x15613E4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98C200", Offset = "0x98C200")]
	private static int set_shadowProjection(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BC5")]
	[Address(RVA = "0x156158C", Offset = "0x156158C", VA = "0x156158C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98C264", Offset = "0x98C264")]
	private static int set_shadowCascades(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BC6")]
	[Address(RVA = "0x15616D4", Offset = "0x15616D4", VA = "0x15616D4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98C2C8", Offset = "0x98C2C8")]
	private static int set_shadowDistance(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BC7")]
	[Address(RVA = "0x1561808", Offset = "0x1561808", VA = "0x1561808")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98C32C", Offset = "0x98C32C")]
	private static int set_shadowResolution(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BC8")]
	[Address(RVA = "0x15619B0", Offset = "0x15619B0", VA = "0x15619B0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98C390", Offset = "0x98C390")]
	private static int set_shadowNearPlaneOffset(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BC9")]
	[Address(RVA = "0x1561AE4", Offset = "0x1561AE4", VA = "0x1561AE4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98C3F4", Offset = "0x98C3F4")]
	private static int set_shadowCascade2Split(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BCA")]
	[Address(RVA = "0x1561C18", Offset = "0x1561C18", VA = "0x1561C18")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98C458", Offset = "0x98C458")]
	private static int set_shadowCascade4Split(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BCB")]
	[Address(RVA = "0x1561D48", Offset = "0x1561D48", VA = "0x1561D48")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98C4BC", Offset = "0x98C4BC")]
	private static int set_masterTextureLimit(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BCC")]
	[Address(RVA = "0x1561E90", Offset = "0x1561E90", VA = "0x1561E90")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98C520", Offset = "0x98C520")]
	private static int set_anisotropicFiltering(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BCD")]
	[Address(RVA = "0x1562038", Offset = "0x1562038", VA = "0x1562038")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98C584", Offset = "0x98C584")]
	private static int set_lodBias(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BCE")]
	[Address(RVA = "0x156216C", Offset = "0x156216C", VA = "0x156216C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98C5E8", Offset = "0x98C5E8")]
	private static int set_maximumLODLevel(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BCF")]
	[Address(RVA = "0x15622B4", Offset = "0x15622B4", VA = "0x15622B4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98C64C", Offset = "0x98C64C")]
	private static int set_particleRaycastBudget(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BD0")]
	[Address(RVA = "0x15623FC", Offset = "0x15623FC", VA = "0x15623FC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98C6B0", Offset = "0x98C6B0")]
	private static int set_softParticles(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BD1")]
	[Address(RVA = "0x1562530", Offset = "0x1562530", VA = "0x1562530")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98C714", Offset = "0x98C714")]
	private static int set_softVegetation(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BD2")]
	[Address(RVA = "0x1562664", Offset = "0x1562664", VA = "0x1562664")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98C778", Offset = "0x98C778")]
	private static int set_realtimeReflectionProbes(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BD3")]
	[Address(RVA = "0x1562798", Offset = "0x1562798", VA = "0x1562798")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98C7DC", Offset = "0x98C7DC")]
	private static int set_billboardsFaceCameraPosition(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BD4")]
	[Address(RVA = "0x15628CC", Offset = "0x15628CC", VA = "0x15628CC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98C840", Offset = "0x98C840")]
	private static int set_maxQueuedFrames(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BD5")]
	[Address(RVA = "0x1562A14", Offset = "0x1562A14", VA = "0x1562A14")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98C8A4", Offset = "0x98C8A4")]
	private static int set_vSyncCount(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BD6")]
	[Address(RVA = "0x1562B5C", Offset = "0x1562B5C", VA = "0x1562B5C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98C908", Offset = "0x98C908")]
	private static int set_antiAliasing(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BD7")]
	[Address(RVA = "0x1562CA4", Offset = "0x1562CA4", VA = "0x1562CA4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98C96C", Offset = "0x98C96C")]
	private static int set_blendWeights(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BD8")]
	[Address(RVA = "0x1562E4C", Offset = "0x1562E4C", VA = "0x1562E4C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98C9D0", Offset = "0x98C9D0")]
	private static int set_asyncUploadTimeSlice(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BD9")]
	[Address(RVA = "0x1562F94", Offset = "0x1562F94", VA = "0x1562F94")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98CA34", Offset = "0x98CA34")]
	private static int set_asyncUploadBufferSize(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BDA")]
	[Address(RVA = "0x1563D20", Offset = "0x1563D20", VA = "0x1563D20")]
	public UnityEngine_QualitySettingsWrap()
	{
	}
}
[Token(Token = "0x2000096")]
public class UnityEngine_QueueModeWrap
{
	[Token(Token = "0x6000BDB")]
	[Address(RVA = "0x16C3A84", Offset = "0x16C3A84", VA = "0x16C3A84")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x6000BDC")]
	[Address(RVA = "0x16C3CB8", Offset = "0x16C3CB8", VA = "0x16C3CB8")]
	private static void Push(IntPtr L, QueueMode arg)
	{
	}

	[Token(Token = "0x6000BDD")]
	[Address(RVA = "0x16C3D54", Offset = "0x16C3D54", VA = "0x16C3D54")]
	private static bool CheckType(IntPtr L, int pos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BDE")]
	[Address(RVA = "0x16C3864", Offset = "0x16C3864", VA = "0x16C3864")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98CA98", Offset = "0x98CA98")]
	private static int get_CompleteOthers(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BDF")]
	[Address(RVA = "0x16C3900", Offset = "0x16C3900", VA = "0x16C3900")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98CAFC", Offset = "0x98CAFC")]
	private static int get_PlayNow(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BE0")]
	[Address(RVA = "0x16C39A0", Offset = "0x16C39A0", VA = "0x16C39A0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98CB60", Offset = "0x98CB60")]
	private static int IntToEnum(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BE1")]
	[Address(RVA = "0x16C3E10", Offset = "0x16C3E10", VA = "0x16C3E10")]
	public UnityEngine_QueueModeWrap()
	{
	}
}
[Token(Token = "0x2000097")]
public class UnityEngine_RectTransformWrap
{
	[Token(Token = "0x6000BE2")]
	[Address(RVA = "0x16C6F58", Offset = "0x16C6F58", VA = "0x16C6F58")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x6000BE3")]
	[Address(RVA = "0x16C3E18", Offset = "0x16C3E18", VA = "0x16C3E18")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98CBC4", Offset = "0x98CBC4")]
	private static int _CreateUnityEngine_RectTransform(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BE4")]
	[Address(RVA = "0x16C3FD8", Offset = "0x16C3FD8", VA = "0x16C3FD8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98CC28", Offset = "0x98CC28")]
	private static int ForceUpdateRectTransforms(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BE5")]
	[Address(RVA = "0x16C4180", Offset = "0x16C4180", VA = "0x16C4180")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98CC8C", Offset = "0x98CC8C")]
	private static int GetLocalCorners(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BE6")]
	[Address(RVA = "0x16C44B8", Offset = "0x16C44B8", VA = "0x16C44B8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98CCF0", Offset = "0x98CCF0")]
	private static int GetWorldCorners(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BE7")]
	[Address(RVA = "0x16C47F0", Offset = "0x16C47F0", VA = "0x16C47F0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98CD54", Offset = "0x98CD54")]
	private static int SetInsetAndSizeFromParentEdge(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BE8")]
	[Address(RVA = "0x16C4A7C", Offset = "0x16C4A7C", VA = "0x16C4A7C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98CDB8", Offset = "0x98CDB8")]
	private static int SetSizeWithCurrentAnchors(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BE9")]
	[Address(RVA = "0x16C4CDC", Offset = "0x16C4CDC", VA = "0x16C4CDC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98CE1C", Offset = "0x98CE1C")]
	private static int op_Equality(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BEA")]
	[Address(RVA = "0x16C4F20", Offset = "0x16C4F20", VA = "0x16C4F20")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98CE80", Offset = "0x98CE80")]
	private static int get_rect(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BEB")]
	[Address(RVA = "0x16C50B8", Offset = "0x16C50B8", VA = "0x16C50B8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98CEE4", Offset = "0x98CEE4")]
	private static int get_anchorMin(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BEC")]
	[Address(RVA = "0x16C5248", Offset = "0x16C5248", VA = "0x16C5248")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98CF48", Offset = "0x98CF48")]
	private static int get_anchorMax(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BED")]
	[Address(RVA = "0x16C53D8", Offset = "0x16C53D8", VA = "0x16C53D8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98CFAC", Offset = "0x98CFAC")]
	private static int get_anchoredPosition(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BEE")]
	[Address(RVA = "0x16C5568", Offset = "0x16C5568", VA = "0x16C5568")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98D010", Offset = "0x98D010")]
	private static int get_sizeDelta(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BEF")]
	[Address(RVA = "0x16C56F8", Offset = "0x16C56F8", VA = "0x16C56F8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98D074", Offset = "0x98D074")]
	private static int get_pivot(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BF0")]
	[Address(RVA = "0x16C5888", Offset = "0x16C5888", VA = "0x16C5888")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98D0D8", Offset = "0x98D0D8")]
	private static int get_anchoredPosition3D(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BF1")]
	[Address(RVA = "0x16C5A18", Offset = "0x16C5A18", VA = "0x16C5A18")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98D13C", Offset = "0x98D13C")]
	private static int get_offsetMin(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BF2")]
	[Address(RVA = "0x16C5BA8", Offset = "0x16C5BA8", VA = "0x16C5BA8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98D1A0", Offset = "0x98D1A0")]
	private static int get_offsetMax(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BF3")]
	[Address(RVA = "0x16C5D38", Offset = "0x16C5D38", VA = "0x16C5D38")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98D204", Offset = "0x98D204")]
	private static int get_reapplyDrivenProperties(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BF4")]
	[Address(RVA = "0x16C5E14", Offset = "0x16C5E14", VA = "0x16C5E14")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98D268", Offset = "0x98D268")]
	private static int set_anchorMin(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BF5")]
	[Address(RVA = "0x16C5FA4", Offset = "0x16C5FA4", VA = "0x16C5FA4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98D2CC", Offset = "0x98D2CC")]
	private static int set_anchorMax(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BF6")]
	[Address(RVA = "0x16C6134", Offset = "0x16C6134", VA = "0x16C6134")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98D330", Offset = "0x98D330")]
	private static int set_anchoredPosition(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BF7")]
	[Address(RVA = "0x16C62C4", Offset = "0x16C62C4", VA = "0x16C62C4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98D394", Offset = "0x98D394")]
	private static int set_sizeDelta(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BF8")]
	[Address(RVA = "0x16C6454", Offset = "0x16C6454", VA = "0x16C6454")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98D3F8", Offset = "0x98D3F8")]
	private static int set_pivot(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BF9")]
	[Address(RVA = "0x16C65E4", Offset = "0x16C65E4", VA = "0x16C65E4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98D45C", Offset = "0x98D45C")]
	private static int set_anchoredPosition3D(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BFA")]
	[Address(RVA = "0x16C6774", Offset = "0x16C6774", VA = "0x16C6774")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98D4C0", Offset = "0x98D4C0")]
	private static int set_offsetMin(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BFB")]
	[Address(RVA = "0x16C6904", Offset = "0x16C6904", VA = "0x16C6904")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98D524", Offset = "0x98D524")]
	private static int set_offsetMax(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BFC")]
	[Address(RVA = "0x16C6A94", Offset = "0x16C6A94", VA = "0x16C6A94")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98D588", Offset = "0x98D588")]
	private static int set_reapplyDrivenProperties(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BFD")]
	[Address(RVA = "0x16C6CF0", Offset = "0x16C6CF0", VA = "0x16C6CF0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98D5EC", Offset = "0x98D5EC")]
	private static int UnityEngine_RectTransform_ReapplyDrivenProperties(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000BFE")]
	[Address(RVA = "0x16C7650", Offset = "0x16C7650", VA = "0x16C7650")]
	public UnityEngine_RectTransformWrap()
	{
	}
}
[Token(Token = "0x2000098")]
public class UnityEngine_RectWrap
{
	[Token(Token = "0x6000BFF")]
	[Address(RVA = "0x16CCC00", Offset = "0x16CCC00", VA = "0x16CCC00")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x6000C00")]
	[Address(RVA = "0x16C7658", Offset = "0x16C7658", VA = "0x16C7658")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98D650", Offset = "0x98D650")]
	private static int _CreateUnityEngine_Rect(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C01")]
	[Address(RVA = "0x16C7A84", Offset = "0x16C7A84", VA = "0x16C7A84")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98D6B4", Offset = "0x98D6B4")]
	private static int MinMaxRect(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C02")]
	[Address(RVA = "0x16C7C74", Offset = "0x16C7C74", VA = "0x16C7C74")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98D718", Offset = "0x98D718")]
	private static int Set(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C03")]
	[Address(RVA = "0x16C7F0C", Offset = "0x16C7F0C", VA = "0x16C7F0C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98D77C", Offset = "0x98D77C")]
	private static int Contains(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C04")]
	[Address(RVA = "0x16C84F0", Offset = "0x16C84F0", VA = "0x16C84F0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98D7E0", Offset = "0x98D7E0")]
	private static int Overlaps(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C05")]
	[Address(RVA = "0x16C89A0", Offset = "0x16C89A0", VA = "0x16C89A0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98D844", Offset = "0x98D844")]
	private static int NormalizedToPoint(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C06")]
	[Address(RVA = "0x16C8B88", Offset = "0x16C8B88", VA = "0x16C8B88")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98D8A8", Offset = "0x98D8A8")]
	private static int PointToNormalized(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C07")]
	[Address(RVA = "0x16C8D70", Offset = "0x16C8D70", VA = "0x16C8D70")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98D90C", Offset = "0x98D90C")]
	private static int op_Equality(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C08")]
	[Address(RVA = "0x16C8FA0", Offset = "0x16C8FA0", VA = "0x16C8FA0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98D970", Offset = "0x98D970")]
	private static int GetHashCode(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C09")]
	[Address(RVA = "0x16C91CC", Offset = "0x16C91CC", VA = "0x16C91CC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98D9D4", Offset = "0x98D9D4")]
	private static int Equals(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C0A")]
	[Address(RVA = "0x16C9670", Offset = "0x16C9670", VA = "0x16C9670")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98DA38", Offset = "0x98DA38")]
	private static int ToString(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C0B")]
	[Address(RVA = "0x16C99F0", Offset = "0x16C99F0", VA = "0x16C99F0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98DA9C", Offset = "0x98DA9C")]
	private static int get_zero(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C0C")]
	[Address(RVA = "0x16C9B58", Offset = "0x16C9B58", VA = "0x16C9B58")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98DB00", Offset = "0x98DB00")]
	private static int get_x(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C0D")]
	[Address(RVA = "0x16C9D34", Offset = "0x16C9D34", VA = "0x16C9D34")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98DB64", Offset = "0x98DB64")]
	private static int get_y(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C0E")]
	[Address(RVA = "0x16C9F10", Offset = "0x16C9F10", VA = "0x16C9F10")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98DBC8", Offset = "0x98DBC8")]
	private static int get_position(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C0F")]
	[Address(RVA = "0x16CA0BC", Offset = "0x16CA0BC", VA = "0x16CA0BC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98DC2C", Offset = "0x98DC2C")]
	private static int get_center(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C10")]
	[Address(RVA = "0x16CA268", Offset = "0x16CA268", VA = "0x16CA268")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98DC90", Offset = "0x98DC90")]
	private static int get_min(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C11")]
	[Address(RVA = "0x16CA414", Offset = "0x16CA414", VA = "0x16CA414")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98DCF4", Offset = "0x98DCF4")]
	private static int get_max(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C12")]
	[Address(RVA = "0x16CA5C0", Offset = "0x16CA5C0", VA = "0x16CA5C0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98DD58", Offset = "0x98DD58")]
	private static int get_width(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C13")]
	[Address(RVA = "0x16CA79C", Offset = "0x16CA79C", VA = "0x16CA79C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98DDBC", Offset = "0x98DDBC")]
	private static int get_height(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C14")]
	[Address(RVA = "0x16CA978", Offset = "0x16CA978", VA = "0x16CA978")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98DE20", Offset = "0x98DE20")]
	private static int get_size(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C15")]
	[Address(RVA = "0x16CAB24", Offset = "0x16CAB24", VA = "0x16CAB24")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98DE84", Offset = "0x98DE84")]
	private static int get_xMin(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C16")]
	[Address(RVA = "0x16CAD00", Offset = "0x16CAD00", VA = "0x16CAD00")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98DEE8", Offset = "0x98DEE8")]
	private static int get_yMin(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C17")]
	[Address(RVA = "0x16CAEDC", Offset = "0x16CAEDC", VA = "0x16CAEDC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98DF4C", Offset = "0x98DF4C")]
	private static int get_xMax(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C18")]
	[Address(RVA = "0x16CB0B8", Offset = "0x16CB0B8", VA = "0x16CB0B8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98DFB0", Offset = "0x98DFB0")]
	private static int get_yMax(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C19")]
	[Address(RVA = "0x16CB294", Offset = "0x16CB294", VA = "0x16CB294")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98E014", Offset = "0x98E014")]
	private static int set_x(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C1A")]
	[Address(RVA = "0x16CB498", Offset = "0x16CB498", VA = "0x16CB498")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98E078", Offset = "0x98E078")]
	private static int set_y(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C1B")]
	[Address(RVA = "0x16CB69C", Offset = "0x16CB69C", VA = "0x16CB69C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98E0DC", Offset = "0x98E0DC")]
	private static int set_position(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C1C")]
	[Address(RVA = "0x16CB878", Offset = "0x16CB878", VA = "0x16CB878")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98E140", Offset = "0x98E140")]
	private static int set_center(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C1D")]
	[Address(RVA = "0x16CBA54", Offset = "0x16CBA54", VA = "0x16CBA54")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98E1A4", Offset = "0x98E1A4")]
	private static int set_min(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C1E")]
	[Address(RVA = "0x16CBC30", Offset = "0x16CBC30", VA = "0x16CBC30")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98E208", Offset = "0x98E208")]
	private static int set_max(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C1F")]
	[Address(RVA = "0x16CBE0C", Offset = "0x16CBE0C", VA = "0x16CBE0C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98E26C", Offset = "0x98E26C")]
	private static int set_width(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C20")]
	[Address(RVA = "0x16CC010", Offset = "0x16CC010", VA = "0x16CC010")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98E2D0", Offset = "0x98E2D0")]
	private static int set_height(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C21")]
	[Address(RVA = "0x16CC214", Offset = "0x16CC214", VA = "0x16CC214")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98E334", Offset = "0x98E334")]
	private static int set_size(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C22")]
	[Address(RVA = "0x16CC3F0", Offset = "0x16CC3F0", VA = "0x16CC3F0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98E398", Offset = "0x98E398")]
	private static int set_xMin(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C23")]
	[Address(RVA = "0x16CC5F4", Offset = "0x16CC5F4", VA = "0x16CC5F4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98E3FC", Offset = "0x98E3FC")]
	private static int set_yMin(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C24")]
	[Address(RVA = "0x16CC7F8", Offset = "0x16CC7F8", VA = "0x16CC7F8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98E460", Offset = "0x98E460")]
	private static int set_xMax(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C25")]
	[Address(RVA = "0x16CC9FC", Offset = "0x16CC9FC", VA = "0x16CC9FC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98E4C4", Offset = "0x98E4C4")]
	private static int set_yMax(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C26")]
	[Address(RVA = "0x16CD53C", Offset = "0x16CD53C", VA = "0x16CD53C")]
	public UnityEngine_RectWrap()
	{
	}
}
[Token(Token = "0x2000099")]
public class UnityEngine_RenderModeWrap
{
	[Token(Token = "0x6000C27")]
	[Address(RVA = "0x16CD804", Offset = "0x16CD804", VA = "0x16CD804")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x6000C28")]
	[Address(RVA = "0x16CDA7C", Offset = "0x16CDA7C", VA = "0x16CDA7C")]
	private static void Push(IntPtr L, RenderMode arg)
	{
	}

	[Token(Token = "0x6000C29")]
	[Address(RVA = "0x16CDB18", Offset = "0x16CDB18", VA = "0x16CDB18")]
	private static bool CheckType(IntPtr L, int pos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C2A")]
	[Address(RVA = "0x16CD544", Offset = "0x16CD544", VA = "0x16CD544")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98E528", Offset = "0x98E528")]
	private static int get_ScreenSpaceOverlay(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C2B")]
	[Address(RVA = "0x16CD5E0", Offset = "0x16CD5E0", VA = "0x16CD5E0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98E58C", Offset = "0x98E58C")]
	private static int get_ScreenSpaceCamera(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C2C")]
	[Address(RVA = "0x16CD680", Offset = "0x16CD680", VA = "0x16CD680")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98E5F0", Offset = "0x98E5F0")]
	private static int get_WorldSpace(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C2D")]
	[Address(RVA = "0x16CD720", Offset = "0x16CD720", VA = "0x16CD720")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98E654", Offset = "0x98E654")]
	private static int IntToEnum(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C2E")]
	[Address(RVA = "0x16CDBD4", Offset = "0x16CDBD4", VA = "0x16CDBD4")]
	public UnityEngine_RenderModeWrap()
	{
	}
}
[Token(Token = "0x200009A")]
public class UnityEngine_RenderSettingsWrap
{
	[Token(Token = "0x6000C2F")]
	[Address(RVA = "0x16D1C14", Offset = "0x16D1C14", VA = "0x16D1C14")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x6000C30")]
	[Address(RVA = "0x16CDBDC", Offset = "0x16CDBDC", VA = "0x16CDBDC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98E6B8", Offset = "0x98E6B8")]
	private static int op_Equality(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C31")]
	[Address(RVA = "0x16CDE20", Offset = "0x16CDE20", VA = "0x16CDE20")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98E71C", Offset = "0x98E71C")]
	private static int get_fog(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C32")]
	[Address(RVA = "0x16CDF50", Offset = "0x16CDF50", VA = "0x16CDF50")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98E780", Offset = "0x98E780")]
	private static int get_fogMode(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C33")]
	[Address(RVA = "0x16CE098", Offset = "0x16CE098", VA = "0x16CE098")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98E7E4", Offset = "0x98E7E4")]
	private static int get_fogColor(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C34")]
	[Address(RVA = "0x16CE1F8", Offset = "0x16CE1F8", VA = "0x16CE1F8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98E848", Offset = "0x98E848")]
	private static int get_fogDensity(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C35")]
	[Address(RVA = "0x16CE334", Offset = "0x16CE334", VA = "0x16CE334")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98E8AC", Offset = "0x98E8AC")]
	private static int get_fogStartDistance(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C36")]
	[Address(RVA = "0x16CE470", Offset = "0x16CE470", VA = "0x16CE470")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98E910", Offset = "0x98E910")]
	private static int get_fogEndDistance(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C37")]
	[Address(RVA = "0x16CE5AC", Offset = "0x16CE5AC", VA = "0x16CE5AC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98E974", Offset = "0x98E974")]
	private static int get_ambientMode(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C38")]
	[Address(RVA = "0x16CE6F4", Offset = "0x16CE6F4", VA = "0x16CE6F4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98E9D8", Offset = "0x98E9D8")]
	private static int get_ambientSkyColor(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C39")]
	[Address(RVA = "0x16CE854", Offset = "0x16CE854", VA = "0x16CE854")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98EA3C", Offset = "0x98EA3C")]
	private static int get_ambientEquatorColor(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C3A")]
	[Address(RVA = "0x16CE9B4", Offset = "0x16CE9B4", VA = "0x16CE9B4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98EAA0", Offset = "0x98EAA0")]
	private static int get_ambientGroundColor(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C3B")]
	[Address(RVA = "0x16CEB14", Offset = "0x16CEB14", VA = "0x16CEB14")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98EB04", Offset = "0x98EB04")]
	private static int get_ambientLight(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C3C")]
	[Address(RVA = "0x16CEC74", Offset = "0x16CEC74", VA = "0x16CEC74")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98EB68", Offset = "0x98EB68")]
	private static int get_ambientIntensity(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C3D")]
	[Address(RVA = "0x16CEDB0", Offset = "0x16CEDB0", VA = "0x16CEDB0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98EBCC", Offset = "0x98EBCC")]
	private static int get_ambientProbe(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C3E")]
	[Address(RVA = "0x16CEEFC", Offset = "0x16CEEFC", VA = "0x16CEEFC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98EC30", Offset = "0x98EC30")]
	private static int get_subtractiveShadowColor(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C3F")]
	[Address(RVA = "0x16CF05C", Offset = "0x16CF05C", VA = "0x16CF05C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98EC94", Offset = "0x98EC94")]
	private static int get_reflectionIntensity(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C40")]
	[Address(RVA = "0x16CF198", Offset = "0x16CF198", VA = "0x16CF198")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98ECF8", Offset = "0x98ECF8")]
	private static int get_reflectionBounces(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C41")]
	[Address(RVA = "0x16CF2C8", Offset = "0x16CF2C8", VA = "0x16CF2C8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98ED5C", Offset = "0x98ED5C")]
	private static int get_haloStrength(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C42")]
	[Address(RVA = "0x16CF404", Offset = "0x16CF404", VA = "0x16CF404")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98EDC0", Offset = "0x98EDC0")]
	private static int get_flareStrength(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C43")]
	[Address(RVA = "0x16CF540", Offset = "0x16CF540", VA = "0x16CF540")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98EE24", Offset = "0x98EE24")]
	private static int get_flareFadeSpeed(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C44")]
	[Address(RVA = "0x16CF67C", Offset = "0x16CF67C", VA = "0x16CF67C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98EE88", Offset = "0x98EE88")]
	private static int get_skybox(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C45")]
	[Address(RVA = "0x16CF7AC", Offset = "0x16CF7AC", VA = "0x16CF7AC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98EEEC", Offset = "0x98EEEC")]
	private static int get_sun(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C46")]
	[Address(RVA = "0x16CF8E4", Offset = "0x16CF8E4", VA = "0x16CF8E4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98EF50", Offset = "0x98EF50")]
	private static int get_defaultReflectionMode(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C47")]
	[Address(RVA = "0x16CFA2C", Offset = "0x16CFA2C", VA = "0x16CFA2C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98EFB4", Offset = "0x98EFB4")]
	private static int get_defaultReflectionResolution(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C48")]
	[Address(RVA = "0x16CFB5C", Offset = "0x16CFB5C", VA = "0x16CFB5C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98F018", Offset = "0x98F018")]
	private static int get_customReflection(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C49")]
	[Address(RVA = "0x16CFC94", Offset = "0x16CFC94", VA = "0x16CFC94")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98F07C", Offset = "0x98F07C")]
	private static int set_fog(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C4A")]
	[Address(RVA = "0x16CFDC8", Offset = "0x16CFDC8", VA = "0x16CFDC8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98F0E0", Offset = "0x98F0E0")]
	private static int set_fogMode(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C4B")]
	[Address(RVA = "0x16CFF70", Offset = "0x16CFF70", VA = "0x16CFF70")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98F144", Offset = "0x98F144")]
	private static int set_fogColor(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C4C")]
	[Address(RVA = "0x16D00A0", Offset = "0x16D00A0", VA = "0x16D00A0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98F1A8", Offset = "0x98F1A8")]
	private static int set_fogDensity(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C4D")]
	[Address(RVA = "0x16D01D4", Offset = "0x16D01D4", VA = "0x16D01D4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98F20C", Offset = "0x98F20C")]
	private static int set_fogStartDistance(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C4E")]
	[Address(RVA = "0x16D0308", Offset = "0x16D0308", VA = "0x16D0308")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98F270", Offset = "0x98F270")]
	private static int set_fogEndDistance(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C4F")]
	[Address(RVA = "0x16D043C", Offset = "0x16D043C", VA = "0x16D043C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98F2D4", Offset = "0x98F2D4")]
	private static int set_ambientMode(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C50")]
	[Address(RVA = "0x16D05E4", Offset = "0x16D05E4", VA = "0x16D05E4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98F338", Offset = "0x98F338")]
	private static int set_ambientSkyColor(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C51")]
	[Address(RVA = "0x16D0714", Offset = "0x16D0714", VA = "0x16D0714")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98F39C", Offset = "0x98F39C")]
	private static int set_ambientEquatorColor(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C52")]
	[Address(RVA = "0x16D0844", Offset = "0x16D0844", VA = "0x16D0844")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98F400", Offset = "0x98F400")]
	private static int set_ambientGroundColor(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C53")]
	[Address(RVA = "0x16D0974", Offset = "0x16D0974", VA = "0x16D0974")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98F464", Offset = "0x98F464")]
	private static int set_ambientLight(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C54")]
	[Address(RVA = "0x16D0AA4", Offset = "0x16D0AA4", VA = "0x16D0AA4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98F4C8", Offset = "0x98F4C8")]
	private static int set_ambientIntensity(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C55")]
	[Address(RVA = "0x16D0BD8", Offset = "0x16D0BD8", VA = "0x16D0BD8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98F52C", Offset = "0x98F52C")]
	private static int set_ambientProbe(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C56")]
	[Address(RVA = "0x16D0D40", Offset = "0x16D0D40", VA = "0x16D0D40")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98F590", Offset = "0x98F590")]
	private static int set_subtractiveShadowColor(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C57")]
	[Address(RVA = "0x16D0E70", Offset = "0x16D0E70", VA = "0x16D0E70")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98F5F4", Offset = "0x98F5F4")]
	private static int set_reflectionIntensity(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C58")]
	[Address(RVA = "0x16D0FA4", Offset = "0x16D0FA4", VA = "0x16D0FA4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98F658", Offset = "0x98F658")]
	private static int set_reflectionBounces(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C59")]
	[Address(RVA = "0x16D10EC", Offset = "0x16D10EC", VA = "0x16D10EC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98F6BC", Offset = "0x98F6BC")]
	private static int set_haloStrength(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C5A")]
	[Address(RVA = "0x16D1220", Offset = "0x16D1220", VA = "0x16D1220")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98F720", Offset = "0x98F720")]
	private static int set_flareStrength(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C5B")]
	[Address(RVA = "0x16D1354", Offset = "0x16D1354", VA = "0x16D1354")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98F784", Offset = "0x98F784")]
	private static int set_flareFadeSpeed(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C5C")]
	[Address(RVA = "0x16D1488", Offset = "0x16D1488", VA = "0x16D1488")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98F7E8", Offset = "0x98F7E8")]
	private static int set_skybox(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C5D")]
	[Address(RVA = "0x16D15FC", Offset = "0x16D15FC", VA = "0x16D15FC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98F84C", Offset = "0x98F84C")]
	private static int set_sun(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C5E")]
	[Address(RVA = "0x16D1790", Offset = "0x16D1790", VA = "0x16D1790")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98F8B0", Offset = "0x98F8B0")]
	private static int set_defaultReflectionMode(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C5F")]
	[Address(RVA = "0x16D1938", Offset = "0x16D1938", VA = "0x16D1938")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98F914", Offset = "0x98F914")]
	private static int set_defaultReflectionResolution(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C60")]
	[Address(RVA = "0x16D1A80", Offset = "0x16D1A80", VA = "0x16D1A80")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98F978", Offset = "0x98F978")]
	private static int set_customReflection(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C61")]
	[Address(RVA = "0x16D268C", Offset = "0x16D268C", VA = "0x16D268C")]
	public UnityEngine_RenderSettingsWrap()
	{
	}
}
[Token(Token = "0x200009B")]
public class UnityEngine_RenderTextureWrap
{
	[Token(Token = "0x6000C62")]
	[Address(RVA = "0x16DB640", Offset = "0x16DB640", VA = "0x16DB640")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x6000C63")]
	[Address(RVA = "0x16D2694", Offset = "0x16D2694", VA = "0x16D2694")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98F9DC", Offset = "0x98F9DC")]
	private static int _CreateUnityEngine_RenderTexture(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C64")]
	[Address(RVA = "0x16D349C", Offset = "0x16D349C", VA = "0x16D349C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98FA40", Offset = "0x98FA40")]
	private static int GetNativeDepthBufferPtr(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C65")]
	[Address(RVA = "0x16D3660", Offset = "0x16D3660", VA = "0x16D3660")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98FAA4", Offset = "0x98FAA4")]
	private static int DiscardContents(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C66")]
	[Address(RVA = "0x16D393C", Offset = "0x16D393C", VA = "0x16D393C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98FB08", Offset = "0x98FB08")]
	private static int MarkRestoreExpected(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C67")]
	[Address(RVA = "0x16D3AC4", Offset = "0x16D3AC4", VA = "0x16D3AC4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98FB6C", Offset = "0x98FB6C")]
	private static int ResolveAntiAliasedSurface(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C68")]
	[Address(RVA = "0x16D3DA8", Offset = "0x16D3DA8", VA = "0x16D3DA8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98FBD0", Offset = "0x98FBD0")]
	private static int SetGlobalShaderProperty(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C69")]
	[Address(RVA = "0x16D3F5C", Offset = "0x16D3F5C", VA = "0x16D3F5C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98FC34", Offset = "0x98FC34")]
	private static int Create(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C6A")]
	[Address(RVA = "0x16D4120", Offset = "0x16D4120", VA = "0x16D4120")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98FC98", Offset = "0x98FC98")]
	private static int Release(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C6B")]
	[Address(RVA = "0x16D42A8", Offset = "0x16D42A8", VA = "0x16D42A8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98FCFC", Offset = "0x98FCFC")]
	private static int IsCreated(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C6C")]
	[Address(RVA = "0x16D446C", Offset = "0x16D446C", VA = "0x16D446C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98FD60", Offset = "0x98FD60")]
	private static int GenerateMips(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C6D")]
	[Address(RVA = "0x16D45F4", Offset = "0x16D45F4", VA = "0x16D45F4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98FDC4", Offset = "0x98FDC4")]
	private static int ConvertToEquirect(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C6E")]
	[Address(RVA = "0x16D49D0", Offset = "0x16D49D0", VA = "0x16D49D0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98FE28", Offset = "0x98FE28")]
	private static int SupportsStencil(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C6F")]
	[Address(RVA = "0x16D4B90", Offset = "0x16D4B90", VA = "0x16D4B90")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98FE8C", Offset = "0x98FE8C")]
	private static int ReleaseTemporary(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C70")]
	[Address(RVA = "0x16D4D14", Offset = "0x16D4D14", VA = "0x16D4D14")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98FEF0", Offset = "0x98FEF0")]
	private static int GetTemporary(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C71")]
	[Address(RVA = "0x16D669C", Offset = "0x16D669C", VA = "0x16D669C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98FF54", Offset = "0x98FF54")]
	private static int op_Equality(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C72")]
	[Address(RVA = "0x16D68E0", Offset = "0x16D68E0", VA = "0x16D68E0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98FFB8", Offset = "0x98FFB8")]
	private static int get_width(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C73")]
	[Address(RVA = "0x16D6AE4", Offset = "0x16D6AE4", VA = "0x16D6AE4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99001C", Offset = "0x99001C")]
	private static int get_height(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C74")]
	[Address(RVA = "0x16D6CE8", Offset = "0x16D6CE8", VA = "0x16D6CE8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x990080", Offset = "0x990080")]
	private static int get_dimension(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C75")]
	[Address(RVA = "0x16D6EE4", Offset = "0x16D6EE4", VA = "0x16D6EE4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9900E4", Offset = "0x9900E4")]
	private static int get_graphicsFormat(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C76")]
	[Address(RVA = "0x16D70B0", Offset = "0x16D70B0", VA = "0x16D70B0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x990148", Offset = "0x990148")]
	private static int get_useMipMap(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C77")]
	[Address(RVA = "0x16D7284", Offset = "0x16D7284", VA = "0x16D7284")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9901AC", Offset = "0x9901AC")]
	private static int get_sRGB(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C78")]
	[Address(RVA = "0x16D7458", Offset = "0x16D7458", VA = "0x16D7458")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x990210", Offset = "0x990210")]
	private static int get_vrUsage(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C79")]
	[Address(RVA = "0x16D7624", Offset = "0x16D7624", VA = "0x16D7624")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x990274", Offset = "0x990274")]
	private static int get_memorylessMode(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C7A")]
	[Address(RVA = "0x16D77F0", Offset = "0x16D77F0", VA = "0x16D77F0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9902D8", Offset = "0x9902D8")]
	private static int get_format(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C7B")]
	[Address(RVA = "0x16D79BC", Offset = "0x16D79BC", VA = "0x16D79BC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99033C", Offset = "0x99033C")]
	private static int get_stencilFormat(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C7C")]
	[Address(RVA = "0x16D7B88", Offset = "0x16D7B88", VA = "0x16D7B88")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9903A0", Offset = "0x9903A0")]
	private static int get_autoGenerateMips(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C7D")]
	[Address(RVA = "0x16D7D5C", Offset = "0x16D7D5C", VA = "0x16D7D5C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x990404", Offset = "0x990404")]
	private static int get_volumeDepth(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C7E")]
	[Address(RVA = "0x16D7F30", Offset = "0x16D7F30", VA = "0x16D7F30")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x990468", Offset = "0x990468")]
	private static int get_antiAliasing(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C7F")]
	[Address(RVA = "0x16D8104", Offset = "0x16D8104", VA = "0x16D8104")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9904CC", Offset = "0x9904CC")]
	private static int get_bindTextureMS(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C80")]
	[Address(RVA = "0x16D82D8", Offset = "0x16D82D8", VA = "0x16D82D8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x990530", Offset = "0x990530")]
	private static int get_enableRandomWrite(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C81")]
	[Address(RVA = "0x16D84AC", Offset = "0x16D84AC", VA = "0x16D84AC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x990594", Offset = "0x990594")]
	private static int get_useDynamicScale(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C82")]
	[Address(RVA = "0x16D8680", Offset = "0x16D8680", VA = "0x16D8680")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9905F8", Offset = "0x9905F8")]
	private static int get_isPowerOfTwo(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C83")]
	[Address(RVA = "0x16D8854", Offset = "0x16D8854", VA = "0x16D8854")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99065C", Offset = "0x99065C")]
	private static int get_active(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C84")]
	[Address(RVA = "0x16D8984", Offset = "0x16D8984", VA = "0x16D8984")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9906C0", Offset = "0x9906C0")]
	private static int get_colorBuffer(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C85")]
	[Address(RVA = "0x16D8B48", Offset = "0x16D8B48", VA = "0x16D8B48")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x990724", Offset = "0x990724")]
	private static int get_depthBuffer(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C86")]
	[Address(RVA = "0x16D8D0C", Offset = "0x16D8D0C", VA = "0x16D8D0C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x990788", Offset = "0x990788")]
	private static int get_depth(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C87")]
	[Address(RVA = "0x16D8EE0", Offset = "0x16D8EE0", VA = "0x16D8EE0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9907EC", Offset = "0x9907EC")]
	private static int get_descriptor(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C88")]
	[Address(RVA = "0x16D90B8", Offset = "0x16D90B8", VA = "0x16D90B8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x990850", Offset = "0x990850")]
	private static int set_width(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C89")]
	[Address(RVA = "0x16D92D0", Offset = "0x16D92D0", VA = "0x16D92D0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9908B4", Offset = "0x9908B4")]
	private static int set_height(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C8A")]
	[Address(RVA = "0x16D94E8", Offset = "0x16D94E8", VA = "0x16D94E8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x990918", Offset = "0x990918")]
	private static int set_dimension(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C8B")]
	[Address(RVA = "0x16D973C", Offset = "0x16D973C", VA = "0x16D973C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99097C", Offset = "0x99097C")]
	private static int set_graphicsFormat(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C8C")]
	[Address(RVA = "0x16D9960", Offset = "0x16D9960", VA = "0x16D9960")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9909E0", Offset = "0x9909E0")]
	private static int set_useMipMap(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C8D")]
	[Address(RVA = "0x16D9B34", Offset = "0x16D9B34", VA = "0x16D9B34")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x990A44", Offset = "0x990A44")]
	private static int set_vrUsage(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C8E")]
	[Address(RVA = "0x16D9D58", Offset = "0x16D9D58", VA = "0x16D9D58")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x990AA8", Offset = "0x990AA8")]
	private static int set_memorylessMode(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C8F")]
	[Address(RVA = "0x16D9F7C", Offset = "0x16D9F7C", VA = "0x16D9F7C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x990B0C", Offset = "0x990B0C")]
	private static int set_format(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C90")]
	[Address(RVA = "0x16DA1A0", Offset = "0x16DA1A0", VA = "0x16DA1A0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x990B70", Offset = "0x990B70")]
	private static int set_stencilFormat(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C91")]
	[Address(RVA = "0x16DA3C4", Offset = "0x16DA3C4", VA = "0x16DA3C4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x990BD4", Offset = "0x990BD4")]
	private static int set_autoGenerateMips(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C92")]
	[Address(RVA = "0x16DA598", Offset = "0x16DA598", VA = "0x16DA598")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x990C38", Offset = "0x990C38")]
	private static int set_volumeDepth(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C93")]
	[Address(RVA = "0x16DA780", Offset = "0x16DA780", VA = "0x16DA780")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x990C9C", Offset = "0x990C9C")]
	private static int set_antiAliasing(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C94")]
	[Address(RVA = "0x16DA968", Offset = "0x16DA968", VA = "0x16DA968")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x990D00", Offset = "0x990D00")]
	private static int set_bindTextureMS(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C95")]
	[Address(RVA = "0x16DAB3C", Offset = "0x16DAB3C", VA = "0x16DAB3C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x990D64", Offset = "0x990D64")]
	private static int set_enableRandomWrite(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C96")]
	[Address(RVA = "0x16DAD10", Offset = "0x16DAD10", VA = "0x16DAD10")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x990DC8", Offset = "0x990DC8")]
	private static int set_useDynamicScale(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C97")]
	[Address(RVA = "0x16DAEE4", Offset = "0x16DAEE4", VA = "0x16DAEE4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x990E2C", Offset = "0x990E2C")]
	private static int set_isPowerOfTwo(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C98")]
	[Address(RVA = "0x16DB0B8", Offset = "0x16DB0B8", VA = "0x16DB0B8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x990E90", Offset = "0x990E90")]
	private static int set_active(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C99")]
	[Address(RVA = "0x16DB22C", Offset = "0x16DB22C", VA = "0x16DB22C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x990EF4", Offset = "0x990EF4")]
	private static int set_depth(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C9A")]
	[Address(RVA = "0x16DB414", Offset = "0x16DB414", VA = "0x16DB414")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x990F58", Offset = "0x990F58")]
	private static int set_descriptor(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C9B")]
	[Address(RVA = "0x16DC390", Offset = "0x16DC390", VA = "0x16DC390")]
	public UnityEngine_RenderTextureWrap()
	{
	}
}
[Token(Token = "0x200009C")]
public class UnityEngine_RendererWrap
{
	[Token(Token = "0x6000C9C")]
	[Address(RVA = "0x16E3978", Offset = "0x16E3978", VA = "0x16E3978")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x6000C9D")]
	[Address(RVA = "0x16DC398", Offset = "0x16DC398", VA = "0x16DC398")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x990FBC", Offset = "0x990FBC")]
	private static int _CreateUnityEngine_Renderer(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C9E")]
	[Address(RVA = "0x16DC550", Offset = "0x16DC550", VA = "0x16DC550")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x991020", Offset = "0x991020")]
	private static int HasPropertyBlock(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000C9F")]
	[Address(RVA = "0x16DC714", Offset = "0x16DC714", VA = "0x16DC714")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x991084", Offset = "0x991084")]
	private static int SetPropertyBlock(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CA0")]
	[Address(RVA = "0x16DCB00", Offset = "0x16DCB00", VA = "0x16DCB00")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9910E8", Offset = "0x9910E8")]
	private static int GetPropertyBlock(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CA1")]
	[Address(RVA = "0x16DCEEC", Offset = "0x16DCEEC", VA = "0x16DCEEC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99114C", Offset = "0x99114C")]
	private static int GetMaterials(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CA2")]
	[Address(RVA = "0x16DD124", Offset = "0x16DD124", VA = "0x16DD124")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9911B0", Offset = "0x9911B0")]
	private static int GetSharedMaterials(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CA3")]
	[Address(RVA = "0x16DD35C", Offset = "0x16DD35C", VA = "0x16DD35C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x991214", Offset = "0x991214")]
	private static int GetClosestReflectionProbes(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CA4")]
	[Address(RVA = "0x16DD594", Offset = "0x16DD594", VA = "0x16DD594")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x991278", Offset = "0x991278")]
	private static int op_Equality(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CA5")]
	[Address(RVA = "0x16DD7D8", Offset = "0x16DD7D8", VA = "0x16DD7D8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9912DC", Offset = "0x9912DC")]
	private static int get_bounds(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CA6")]
	[Address(RVA = "0x16DD99C", Offset = "0x16DD99C", VA = "0x16DD99C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x991340", Offset = "0x991340")]
	private static int get_enabled(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CA7")]
	[Address(RVA = "0x16DDB70", Offset = "0x16DDB70", VA = "0x16DDB70")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9913A4", Offset = "0x9913A4")]
	private static int get_isVisible(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CA8")]
	[Address(RVA = "0x16DDD44", Offset = "0x16DDD44", VA = "0x16DDD44")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x991408", Offset = "0x991408")]
	private static int get_shadowCastingMode(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CA9")]
	[Address(RVA = "0x16DDF10", Offset = "0x16DDF10", VA = "0x16DDF10")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99146C", Offset = "0x99146C")]
	private static int get_receiveShadows(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CAA")]
	[Address(RVA = "0x16DE0E4", Offset = "0x16DE0E4", VA = "0x16DE0E4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9914D0", Offset = "0x9914D0")]
	private static int get_forceRenderingOff(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CAB")]
	[Address(RVA = "0x16DE2B8", Offset = "0x16DE2B8", VA = "0x16DE2B8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x991534", Offset = "0x991534")]
	private static int get_motionVectorGenerationMode(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CAC")]
	[Address(RVA = "0x16DE484", Offset = "0x16DE484", VA = "0x16DE484")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x991598", Offset = "0x991598")]
	private static int get_lightProbeUsage(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CAD")]
	[Address(RVA = "0x16DE650", Offset = "0x16DE650", VA = "0x16DE650")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9915FC", Offset = "0x9915FC")]
	private static int get_reflectionProbeUsage(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CAE")]
	[Address(RVA = "0x16DE81C", Offset = "0x16DE81C", VA = "0x16DE81C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x991660", Offset = "0x991660")]
	private static int get_renderingLayerMask(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CAF")]
	[Address(RVA = "0x16DE9F0", Offset = "0x16DE9F0", VA = "0x16DE9F0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9916C4", Offset = "0x9916C4")]
	private static int get_rendererPriority(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CB0")]
	[Address(RVA = "0x16DEBC4", Offset = "0x16DEBC4", VA = "0x16DEBC4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x991728", Offset = "0x991728")]
	private static int get_rayTracingMode(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CB1")]
	[Address(RVA = "0x16DED90", Offset = "0x16DED90", VA = "0x16DED90")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99178C", Offset = "0x99178C")]
	private static int get_sortingLayerName(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CB2")]
	[Address(RVA = "0x16DEF64", Offset = "0x16DEF64", VA = "0x16DEF64")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9917F0", Offset = "0x9917F0")]
	private static int get_sortingLayerID(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CB3")]
	[Address(RVA = "0x16DF138", Offset = "0x16DF138", VA = "0x16DF138")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x991854", Offset = "0x991854")]
	private static int get_sortingOrder(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CB4")]
	[Address(RVA = "0x16DF30C", Offset = "0x16DF30C", VA = "0x16DF30C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9918B8", Offset = "0x9918B8")]
	private static int get_allowOcclusionWhenDynamic(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CB5")]
	[Address(RVA = "0x16DF4E0", Offset = "0x16DF4E0", VA = "0x16DF4E0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99191C", Offset = "0x99191C")]
	private static int get_isPartOfStaticBatch(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CB6")]
	[Address(RVA = "0x16DF6B4", Offset = "0x16DF6B4", VA = "0x16DF6B4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x991980", Offset = "0x991980")]
	private static int get_worldToLocalMatrix(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CB7")]
	[Address(RVA = "0x16DF880", Offset = "0x16DF880", VA = "0x16DF880")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9919E4", Offset = "0x9919E4")]
	private static int get_localToWorldMatrix(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CB8")]
	[Address(RVA = "0x16DFA4C", Offset = "0x16DFA4C", VA = "0x16DFA4C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x991A48", Offset = "0x991A48")]
	private static int get_lightProbeProxyVolumeOverride(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CB9")]
	[Address(RVA = "0x16DFC04", Offset = "0x16DFC04", VA = "0x16DFC04")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x991AAC", Offset = "0x991AAC")]
	private static int get_probeAnchor(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CBA")]
	[Address(RVA = "0x16DFDB4", Offset = "0x16DFDB4", VA = "0x16DFDB4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x991B10", Offset = "0x991B10")]
	private static int get_lightmapIndex(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CBB")]
	[Address(RVA = "0x16DFF88", Offset = "0x16DFF88", VA = "0x16DFF88")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x991B74", Offset = "0x991B74")]
	private static int get_realtimeLightmapIndex(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CBC")]
	[Address(RVA = "0x16E015C", Offset = "0x16E015C", VA = "0x16E015C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x991BD8", Offset = "0x991BD8")]
	private static int get_lightmapScaleOffset(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CBD")]
	[Address(RVA = "0x16E0308", Offset = "0x16E0308", VA = "0x16E0308")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x991C3C", Offset = "0x991C3C")]
	private static int get_realtimeLightmapScaleOffset(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CBE")]
	[Address(RVA = "0x16E04B4", Offset = "0x16E04B4", VA = "0x16E04B4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x991CA0", Offset = "0x991CA0")]
	private static int get_materials(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CBF")]
	[Address(RVA = "0x16E0664", Offset = "0x16E0664", VA = "0x16E0664")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x991D04", Offset = "0x991D04")]
	private static int get_material(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CC0")]
	[Address(RVA = "0x16E0814", Offset = "0x16E0814", VA = "0x16E0814")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x991D68", Offset = "0x991D68")]
	private static int get_sharedMaterial(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CC1")]
	[Address(RVA = "0x16E09C4", Offset = "0x16E09C4", VA = "0x16E09C4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x991DCC", Offset = "0x991DCC")]
	private static int get_sharedMaterials(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CC2")]
	[Address(RVA = "0x16E0B74", Offset = "0x16E0B74", VA = "0x16E0B74")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x991E30", Offset = "0x991E30")]
	private static int set_enabled(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CC3")]
	[Address(RVA = "0x16E0D48", Offset = "0x16E0D48", VA = "0x16E0D48")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x991E94", Offset = "0x991E94")]
	private static int set_shadowCastingMode(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CC4")]
	[Address(RVA = "0x16E0F6C", Offset = "0x16E0F6C", VA = "0x16E0F6C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x991EF8", Offset = "0x991EF8")]
	private static int set_receiveShadows(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CC5")]
	[Address(RVA = "0x16E1140", Offset = "0x16E1140", VA = "0x16E1140")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x991F5C", Offset = "0x991F5C")]
	private static int set_forceRenderingOff(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CC6")]
	[Address(RVA = "0x16E1314", Offset = "0x16E1314", VA = "0x16E1314")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x991FC0", Offset = "0x991FC0")]
	private static int set_motionVectorGenerationMode(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CC7")]
	[Address(RVA = "0x16E1538", Offset = "0x16E1538", VA = "0x16E1538")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x992024", Offset = "0x992024")]
	private static int set_lightProbeUsage(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CC8")]
	[Address(RVA = "0x16E175C", Offset = "0x16E175C", VA = "0x16E175C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x992088", Offset = "0x992088")]
	private static int set_reflectionProbeUsage(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CC9")]
	[Address(RVA = "0x16E1980", Offset = "0x16E1980", VA = "0x16E1980")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9920EC", Offset = "0x9920EC")]
	private static int set_renderingLayerMask(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CCA")]
	[Address(RVA = "0x16E1B64", Offset = "0x16E1B64", VA = "0x16E1B64")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x992150", Offset = "0x992150")]
	private static int set_rendererPriority(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CCB")]
	[Address(RVA = "0x16E1D4C", Offset = "0x16E1D4C", VA = "0x16E1D4C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9921B4", Offset = "0x9921B4")]
	private static int set_rayTracingMode(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CCC")]
	[Address(RVA = "0x16E1F70", Offset = "0x16E1F70", VA = "0x16E1F70")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x992218", Offset = "0x992218")]
	private static int set_sortingLayerName(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CCD")]
	[Address(RVA = "0x16E2124", Offset = "0x16E2124", VA = "0x16E2124")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99227C", Offset = "0x99227C")]
	private static int set_sortingLayerID(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CCE")]
	[Address(RVA = "0x16E230C", Offset = "0x16E230C", VA = "0x16E230C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9922E0", Offset = "0x9922E0")]
	private static int set_sortingOrder(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CCF")]
	[Address(RVA = "0x16E24F4", Offset = "0x16E24F4", VA = "0x16E24F4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x992344", Offset = "0x992344")]
	private static int set_allowOcclusionWhenDynamic(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CD0")]
	[Address(RVA = "0x16E26C8", Offset = "0x16E26C8", VA = "0x16E26C8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9923A8", Offset = "0x9923A8")]
	private static int set_lightProbeProxyVolumeOverride(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CD1")]
	[Address(RVA = "0x16E28E4", Offset = "0x16E28E4", VA = "0x16E28E4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99240C", Offset = "0x99240C")]
	private static int set_probeAnchor(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CD2")]
	[Address(RVA = "0x16E2AE0", Offset = "0x16E2AE0", VA = "0x16E2AE0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x992470", Offset = "0x992470")]
	private static int set_lightmapIndex(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CD3")]
	[Address(RVA = "0x16E2CC8", Offset = "0x16E2CC8", VA = "0x16E2CC8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9924D4", Offset = "0x9924D4")]
	private static int set_realtimeLightmapIndex(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CD4")]
	[Address(RVA = "0x16E2EB0", Offset = "0x16E2EB0", VA = "0x16E2EB0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x992538", Offset = "0x992538")]
	private static int set_lightmapScaleOffset(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CD5")]
	[Address(RVA = "0x16E305C", Offset = "0x16E305C", VA = "0x16E305C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99259C", Offset = "0x99259C")]
	private static int set_realtimeLightmapScaleOffset(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CD6")]
	[Address(RVA = "0x16E3208", Offset = "0x16E3208", VA = "0x16E3208")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x992600", Offset = "0x992600")]
	private static int set_materials(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CD7")]
	[Address(RVA = "0x16E33C4", Offset = "0x16E33C4", VA = "0x16E33C4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x992664", Offset = "0x992664")]
	private static int set_material(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CD8")]
	[Address(RVA = "0x16E35C0", Offset = "0x16E35C0", VA = "0x16E35C0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9926C8", Offset = "0x9926C8")]
	private static int set_sharedMaterial(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CD9")]
	[Address(RVA = "0x16E37BC", Offset = "0x16E37BC", VA = "0x16E37BC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99272C", Offset = "0x99272C")]
	private static int set_sharedMaterials(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CDA")]
	[Address(RVA = "0x16E4798", Offset = "0x16E4798", VA = "0x16E4798")]
	public UnityEngine_RendererWrap()
	{
	}
}
[Token(Token = "0x200009D")]
public class UnityEngine_ResourcesWrap
{
	[Token(Token = "0x6000CDB")]
	[Address(RVA = "0x17B8F48", Offset = "0x17B8F48", VA = "0x17B8F48")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x6000CDC")]
	[Address(RVA = "0x17B82D4", Offset = "0x17B82D4", VA = "0x17B82D4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x992790", Offset = "0x992790")]
	private static int FindObjectsOfTypeAll(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CDD")]
	[Address(RVA = "0x17B842C", Offset = "0x17B842C", VA = "0x17B842C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9927F4", Offset = "0x9927F4")]
	private static int Load(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CDE")]
	[Address(RVA = "0x17B8670", Offset = "0x17B8670", VA = "0x17B8670")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x992858", Offset = "0x992858")]
	private static int LoadAsync(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CDF")]
	[Address(RVA = "0x17B88C4", Offset = "0x17B88C4", VA = "0x17B88C4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9928BC", Offset = "0x9928BC")]
	private static int LoadAll(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CE0")]
	[Address(RVA = "0x17B8B08", Offset = "0x17B8B08", VA = "0x17B8B08")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x992920", Offset = "0x992920")]
	private static int GetBuiltinResource(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CE1")]
	[Address(RVA = "0x17B8C80", Offset = "0x17B8C80", VA = "0x17B8C80")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x992984", Offset = "0x992984")]
	private static int UnloadAsset(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CE2")]
	[Address(RVA = "0x17B8E04", Offset = "0x17B8E04", VA = "0x17B8E04")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9929E8", Offset = "0x9929E8")]
	private static int UnloadUnusedAssets(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CE3")]
	[Address(RVA = "0x17B9180", Offset = "0x17B9180", VA = "0x17B9180")]
	public UnityEngine_ResourcesWrap()
	{
	}
}
[Token(Token = "0x200009E")]
public class UnityEngine_ScreenWrap
{
	[Token(Token = "0x6000CE4")]
	[Address(RVA = "0x17BB6CC", Offset = "0x17BB6CC", VA = "0x17BB6CC")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x6000CE5")]
	[Address(RVA = "0x17B9188", Offset = "0x17B9188", VA = "0x17B9188")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x992A4C", Offset = "0x992A4C")]
	private static int SetResolution(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CE6")]
	[Address(RVA = "0x17B976C", Offset = "0x17B976C", VA = "0x17B976C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x992AB0", Offset = "0x992AB0")]
	private static int get_width(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CE7")]
	[Address(RVA = "0x17B989C", Offset = "0x17B989C", VA = "0x17B989C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x992B14", Offset = "0x992B14")]
	private static int get_height(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CE8")]
	[Address(RVA = "0x17B99CC", Offset = "0x17B99CC", VA = "0x17B99CC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x992B78", Offset = "0x992B78")]
	private static int get_dpi(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CE9")]
	[Address(RVA = "0x17B9B08", Offset = "0x17B9B08", VA = "0x17B9B08")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x992BDC", Offset = "0x992BDC")]
	private static int get_currentResolution(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CEA")]
	[Address(RVA = "0x17B9C48", Offset = "0x17B9C48", VA = "0x17B9C48")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x992C40", Offset = "0x992C40")]
	private static int get_resolutions(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CEB")]
	[Address(RVA = "0x17B9D78", Offset = "0x17B9D78", VA = "0x17B9D78")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x992CA4", Offset = "0x992CA4")]
	private static int get_fullScreen(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CEC")]
	[Address(RVA = "0x17B9EA8", Offset = "0x17B9EA8", VA = "0x17B9EA8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x992D08", Offset = "0x992D08")]
	private static int get_fullScreenMode(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CED")]
	[Address(RVA = "0x17B9FF0", Offset = "0x17B9FF0", VA = "0x17B9FF0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x992D6C", Offset = "0x992D6C")]
	private static int get_safeArea(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CEE")]
	[Address(RVA = "0x17BA158", Offset = "0x17BA158", VA = "0x17BA158")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x992DD0", Offset = "0x992DD0")]
	private static int get_cutouts(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CEF")]
	[Address(RVA = "0x17BA288", Offset = "0x17BA288", VA = "0x17BA288")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x992E34", Offset = "0x992E34")]
	private static int get_autorotateToPortrait(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CF0")]
	[Address(RVA = "0x17BA3B8", Offset = "0x17BA3B8", VA = "0x17BA3B8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x992E98", Offset = "0x992E98")]
	private static int get_autorotateToPortraitUpsideDown(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CF1")]
	[Address(RVA = "0x17BA4E8", Offset = "0x17BA4E8", VA = "0x17BA4E8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x992EFC", Offset = "0x992EFC")]
	private static int get_autorotateToLandscapeLeft(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CF2")]
	[Address(RVA = "0x17BA618", Offset = "0x17BA618", VA = "0x17BA618")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x992F60", Offset = "0x992F60")]
	private static int get_autorotateToLandscapeRight(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CF3")]
	[Address(RVA = "0x17BA748", Offset = "0x17BA748", VA = "0x17BA748")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x992FC4", Offset = "0x992FC4")]
	private static int get_orientation(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CF4")]
	[Address(RVA = "0x17BA890", Offset = "0x17BA890", VA = "0x17BA890")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x994028", Offset = "0x994028")]
	private static int get_sleepTimeout(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CF5")]
	[Address(RVA = "0x17BA9C0", Offset = "0x17BA9C0", VA = "0x17BA9C0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99408C", Offset = "0x99408C")]
	private static int get_brightness(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CF6")]
	[Address(RVA = "0x17BAAFC", Offset = "0x17BAAFC", VA = "0x17BAAFC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9940F0", Offset = "0x9940F0")]
	private static int set_fullScreen(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CF7")]
	[Address(RVA = "0x17BAC30", Offset = "0x17BAC30", VA = "0x17BAC30")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x994154", Offset = "0x994154")]
	private static int set_fullScreenMode(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CF8")]
	[Address(RVA = "0x17BADD8", Offset = "0x17BADD8", VA = "0x17BADD8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9941B8", Offset = "0x9941B8")]
	private static int set_autorotateToPortrait(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CF9")]
	[Address(RVA = "0x17BAF0C", Offset = "0x17BAF0C", VA = "0x17BAF0C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99421C", Offset = "0x99421C")]
	private static int set_autorotateToPortraitUpsideDown(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CFA")]
	[Address(RVA = "0x17BB040", Offset = "0x17BB040", VA = "0x17BB040")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x994280", Offset = "0x994280")]
	private static int set_autorotateToLandscapeLeft(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CFB")]
	[Address(RVA = "0x17BB174", Offset = "0x17BB174", VA = "0x17BB174")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9942E4", Offset = "0x9942E4")]
	private static int set_autorotateToLandscapeRight(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CFC")]
	[Address(RVA = "0x17BB2A8", Offset = "0x17BB2A8", VA = "0x17BB2A8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x994348", Offset = "0x994348")]
	private static int set_orientation(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CFD")]
	[Address(RVA = "0x17BB450", Offset = "0x17BB450", VA = "0x17BB450")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9943AC", Offset = "0x9943AC")]
	private static int set_sleepTimeout(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CFE")]
	[Address(RVA = "0x17BB598", Offset = "0x17BB598", VA = "0x17BB598")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x994410", Offset = "0x994410")]
	private static int set_brightness(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000CFF")]
	[Address(RVA = "0x17BBD08", Offset = "0x17BBD08", VA = "0x17BBD08")]
	public UnityEngine_ScreenWrap()
	{
	}
}
[Token(Token = "0x200009F")]
public class UnityEngine_ShaderWrap
{
	[Token(Token = "0x6000D00")]
	[Address(RVA = "0x17C3F0C", Offset = "0x17C3F0C", VA = "0x17C3F0C")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x6000D01")]
	[Address(RVA = "0x17BBD10", Offset = "0x17BBD10", VA = "0x17BBD10")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x994474", Offset = "0x994474")]
	private static int Find(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D02")]
	[Address(RVA = "0x17BBE70", Offset = "0x17BBE70", VA = "0x17BBE70")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9944D8", Offset = "0x9944D8")]
	private static int EnableKeyword(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D03")]
	[Address(RVA = "0x17BBFB0", Offset = "0x17BBFB0", VA = "0x17BBFB0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99453C", Offset = "0x99453C")]
	private static int DisableKeyword(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D04")]
	[Address(RVA = "0x17BC0F0", Offset = "0x17BC0F0", VA = "0x17BC0F0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9945A0", Offset = "0x9945A0")]
	private static int IsKeywordEnabled(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D05")]
	[Address(RVA = "0x17BC26C", Offset = "0x17BC26C", VA = "0x17BC26C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x994604", Offset = "0x994604")]
	private static int WarmupAllShaders(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D06")]
	[Address(RVA = "0x17BC398", Offset = "0x17BC398", VA = "0x17BC398")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x994668", Offset = "0x994668")]
	private static int PropertyToID(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D07")]
	[Address(RVA = "0x17BC514", Offset = "0x17BC514", VA = "0x17BC514")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9946CC", Offset = "0x9946CC")]
	private static int GetDependency(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D08")]
	[Address(RVA = "0x17BC708", Offset = "0x17BC708", VA = "0x17BC708")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x994730", Offset = "0x994730")]
	private static int FindPassTagValue(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D09")]
	[Address(RVA = "0x17BC994", Offset = "0x17BC994", VA = "0x17BC994")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x994794", Offset = "0x994794")]
	private static int SetGlobalFloat(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D0A")]
	[Address(RVA = "0x17BCC7C", Offset = "0x17BCC7C", VA = "0x17BCC7C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9947F8", Offset = "0x9947F8")]
	private static int SetGlobalInt(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D0B")]
	[Address(RVA = "0x17BCF84", Offset = "0x17BCF84", VA = "0x17BCF84")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99485C", Offset = "0x99485C")]
	private static int SetGlobalVector(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D0C")]
	[Address(RVA = "0x17BD26C", Offset = "0x17BD26C", VA = "0x17BD26C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9948C0", Offset = "0x9948C0")]
	private static int SetGlobalColor(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D0D")]
	[Address(RVA = "0x17BD554", Offset = "0x17BD554", VA = "0x17BD554")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x994924", Offset = "0x994924")]
	private static int SetGlobalMatrix(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D0E")]
	[Address(RVA = "0x17BD8C4", Offset = "0x17BD8C4", VA = "0x17BD8C4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x994988", Offset = "0x994988")]
	private static int SetGlobalTexture(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D0F")]
	[Address(RVA = "0x17BDED4", Offset = "0x17BDED4", VA = "0x17BDED4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9949EC", Offset = "0x9949EC")]
	private static int SetGlobalBuffer(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D10")]
	[Address(RVA = "0x17BE214", Offset = "0x17BE214", VA = "0x17BE214")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x994A50", Offset = "0x994A50")]
	private static int SetGlobalConstantBuffer(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D11")]
	[Address(RVA = "0x17BE474", Offset = "0x17BE474", VA = "0x17BE474")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x994AB4", Offset = "0x994AB4")]
	private static int SetGlobalFloatArray(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D12")]
	[Address(RVA = "0x17BE974", Offset = "0x17BE974", VA = "0x17BE974")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x994B18", Offset = "0x994B18")]
	private static int SetGlobalVectorArray(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D13")]
	[Address(RVA = "0x17BEE74", Offset = "0x17BEE74", VA = "0x17BEE74")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x994B7C", Offset = "0x994B7C")]
	private static int SetGlobalMatrixArray(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D14")]
	[Address(RVA = "0x17BF374", Offset = "0x17BF374", VA = "0x17BF374")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x994BE0", Offset = "0x994BE0")]
	private static int GetGlobalFloat(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D15")]
	[Address(RVA = "0x17BF648", Offset = "0x17BF648", VA = "0x17BF648")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x994C44", Offset = "0x994C44")]
	private static int GetGlobalInt(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D16")]
	[Address(RVA = "0x17BF910", Offset = "0x17BF910", VA = "0x17BF910")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x994CA8", Offset = "0x994CA8")]
	private static int GetGlobalVector(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D17")]
	[Address(RVA = "0x17BFC0C", Offset = "0x17BFC0C", VA = "0x17BFC0C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x994D0C", Offset = "0x994D0C")]
	private static int GetGlobalColor(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D18")]
	[Address(RVA = "0x17BFF08", Offset = "0x17BFF08", VA = "0x17BFF08")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x994D70", Offset = "0x994D70")]
	private static int GetGlobalMatrix(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D19")]
	[Address(RVA = "0x17C021C", Offset = "0x17C021C", VA = "0x17C021C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x994DD4", Offset = "0x994DD4")]
	private static int GetGlobalTexture(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D1A")]
	[Address(RVA = "0x17C04EC", Offset = "0x17C04EC", VA = "0x17C04EC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x994E38", Offset = "0x994E38")]
	private static int GetGlobalFloatArray(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D1B")]
	[Address(RVA = "0x17C09DC", Offset = "0x17C09DC", VA = "0x17C09DC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x994E9C", Offset = "0x994E9C")]
	private static int GetGlobalVectorArray(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D1C")]
	[Address(RVA = "0x17C0ECC", Offset = "0x17C0ECC", VA = "0x17C0ECC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x994F00", Offset = "0x994F00")]
	private static int GetGlobalMatrixArray(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D1D")]
	[Address(RVA = "0x17C13BC", Offset = "0x17C13BC", VA = "0x17C13BC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x994F64", Offset = "0x994F64")]
	private static int GetPropertyCount(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D1E")]
	[Address(RVA = "0x17C15A0", Offset = "0x17C15A0", VA = "0x17C15A0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x994FC8", Offset = "0x994FC8")]
	private static int FindPropertyIndex(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D1F")]
	[Address(RVA = "0x17C17B0", Offset = "0x17C17B0", VA = "0x17C17B0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99602C", Offset = "0x99602C")]
	private static int GetPropertyName(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D20")]
	[Address(RVA = "0x17C19D0", Offset = "0x17C19D0", VA = "0x17C19D0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x996090", Offset = "0x996090")]
	private static int GetPropertyNameId(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D21")]
	[Address(RVA = "0x17C1BF0", Offset = "0x17C1BF0", VA = "0x17C1BF0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9960F4", Offset = "0x9960F4")]
	private static int GetPropertyType(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D22")]
	[Address(RVA = "0x17C1E24", Offset = "0x17C1E24", VA = "0x17C1E24")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x996158", Offset = "0x996158")]
	private static int GetPropertyDescription(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D23")]
	[Address(RVA = "0x17C2044", Offset = "0x17C2044", VA = "0x17C2044")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9961BC", Offset = "0x9961BC")]
	private static int GetPropertyFlags(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D24")]
	[Address(RVA = "0x17C2278", Offset = "0x17C2278", VA = "0x17C2278")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x996220", Offset = "0x996220")]
	private static int GetPropertyAttributes(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D25")]
	[Address(RVA = "0x17C2498", Offset = "0x17C2498", VA = "0x17C2498")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x996284", Offset = "0x996284")]
	private static int GetPropertyDefaultFloatValue(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D26")]
	[Address(RVA = "0x17C26B8", Offset = "0x17C26B8", VA = "0x17C26B8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9962E8", Offset = "0x9962E8")]
	private static int GetPropertyDefaultVectorValue(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D27")]
	[Address(RVA = "0x17C28D4", Offset = "0x17C28D4", VA = "0x17C28D4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99634C", Offset = "0x99634C")]
	private static int GetPropertyRangeLimits(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D28")]
	[Address(RVA = "0x17C2AF0", Offset = "0x17C2AF0", VA = "0x17C2AF0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9963B0", Offset = "0x9963B0")]
	private static int GetPropertyTextureDimension(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D29")]
	[Address(RVA = "0x17C2D24", Offset = "0x17C2D24", VA = "0x17C2D24")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x996414", Offset = "0x996414")]
	private static int GetPropertyTextureDefaultName(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D2A")]
	[Address(RVA = "0x17C2F44", Offset = "0x17C2F44", VA = "0x17C2F44")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x996478", Offset = "0x996478")]
	private static int op_Equality(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D2B")]
	[Address(RVA = "0x17C3188", Offset = "0x17C3188", VA = "0x17C3188")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9964DC", Offset = "0x9964DC")]
	private static int get_maximumLOD(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D2C")]
	[Address(RVA = "0x17C3340", Offset = "0x17C3340", VA = "0x17C3340")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x996540", Offset = "0x996540")]
	private static int get_globalMaximumLOD(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D2D")]
	[Address(RVA = "0x17C3470", Offset = "0x17C3470", VA = "0x17C3470")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9965A4", Offset = "0x9965A4")]
	private static int get_isSupported(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D2E")]
	[Address(RVA = "0x17C3628", Offset = "0x17C3628", VA = "0x17C3628")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x996608", Offset = "0x996608")]
	private static int get_globalRenderPipeline(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D2F")]
	[Address(RVA = "0x17C3758", Offset = "0x17C3758", VA = "0x17C3758")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99666C", Offset = "0x99666C")]
	private static int get_renderQueue(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D30")]
	[Address(RVA = "0x17C3910", Offset = "0x17C3910", VA = "0x17C3910")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9966D0", Offset = "0x9966D0")]
	private static int get_passCount(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D31")]
	[Address(RVA = "0x17C3AC8", Offset = "0x17C3AC8", VA = "0x17C3AC8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x996734", Offset = "0x996734")]
	private static int set_maximumLOD(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D32")]
	[Address(RVA = "0x17C3C94", Offset = "0x17C3C94", VA = "0x17C3C94")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x996798", Offset = "0x996798")]
	private static int set_globalMaximumLOD(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D33")]
	[Address(RVA = "0x17C3DDC", Offset = "0x17C3DDC", VA = "0x17C3DDC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9967FC", Offset = "0x9967FC")]
	private static int set_globalRenderPipeline(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D34")]
	[Address(RVA = "0x17C4C9C", Offset = "0x17C4C9C", VA = "0x17C4C9C")]
	public UnityEngine_ShaderWrap()
	{
	}
}
[Token(Token = "0x20000A0")]
public class UnityEngine_SkinWeightsWrap
{
	[Token(Token = "0x6000D35")]
	[Address(RVA = "0x17C5008", Offset = "0x17C5008", VA = "0x17C5008")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x6000D36")]
	[Address(RVA = "0x17C52C4", Offset = "0x17C52C4", VA = "0x17C52C4")]
	private static void Push(IntPtr L, SkinWeights arg)
	{
	}

	[Token(Token = "0x6000D37")]
	[Address(RVA = "0x17C5360", Offset = "0x17C5360", VA = "0x17C5360")]
	private static bool CheckType(IntPtr L, int pos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D38")]
	[Address(RVA = "0x17C4CA4", Offset = "0x17C4CA4", VA = "0x17C4CA4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x996860", Offset = "0x996860")]
	private static int get_OneBone(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D39")]
	[Address(RVA = "0x17C4D44", Offset = "0x17C4D44", VA = "0x17C4D44")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9968C4", Offset = "0x9968C4")]
	private static int get_TwoBones(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D3A")]
	[Address(RVA = "0x17C4DE4", Offset = "0x17C4DE4", VA = "0x17C4DE4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x996928", Offset = "0x996928")]
	private static int get_FourBones(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D3B")]
	[Address(RVA = "0x17C4E84", Offset = "0x17C4E84", VA = "0x17C4E84")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99698C", Offset = "0x99698C")]
	private static int get_Unlimited(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D3C")]
	[Address(RVA = "0x17C4F24", Offset = "0x17C4F24", VA = "0x17C4F24")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9969F0", Offset = "0x9969F0")]
	private static int IntToEnum(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D3D")]
	[Address(RVA = "0x17C541C", Offset = "0x17C541C", VA = "0x17C541C")]
	public UnityEngine_SkinWeightsWrap()
	{
	}
}
[Token(Token = "0x20000A1")]
public class UnityEngine_SkinnedMeshRendererWrap
{
	[Token(Token = "0x6000D3E")]
	[Address(RVA = "0x17C7BB4", Offset = "0x17C7BB4", VA = "0x17C7BB4")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x6000D3F")]
	[Address(RVA = "0x17C5424", Offset = "0x17C5424", VA = "0x17C5424")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x996A54", Offset = "0x996A54")]
	private static int _CreateUnityEngine_SkinnedMeshRenderer(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D40")]
	[Address(RVA = "0x17C55DC", Offset = "0x17C55DC", VA = "0x17C55DC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x996AB8", Offset = "0x996AB8")]
	private static int GetBlendShapeWeight(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D41")]
	[Address(RVA = "0x17C57DC", Offset = "0x17C57DC", VA = "0x17C57DC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x996B1C", Offset = "0x996B1C")]
	private static int SetBlendShapeWeight(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D42")]
	[Address(RVA = "0x17C59E8", Offset = "0x17C59E8", VA = "0x17C59E8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x996B80", Offset = "0x996B80")]
	private static int BakeMesh(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D43")]
	[Address(RVA = "0x17C5C04", Offset = "0x17C5C04", VA = "0x17C5C04")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x996BE4", Offset = "0x996BE4")]
	private static int op_Equality(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D44")]
	[Address(RVA = "0x17C5E48", Offset = "0x17C5E48", VA = "0x17C5E48")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x996C48", Offset = "0x996C48")]
	private static int get_quality(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D45")]
	[Address(RVA = "0x17C6014", Offset = "0x17C6014", VA = "0x17C6014")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x996CAC", Offset = "0x996CAC")]
	private static int get_updateWhenOffscreen(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D46")]
	[Address(RVA = "0x17C61E8", Offset = "0x17C61E8", VA = "0x17C61E8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x996D10", Offset = "0x996D10")]
	private static int get_forceMatrixRecalculationPerRender(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D47")]
	[Address(RVA = "0x17C63BC", Offset = "0x17C63BC", VA = "0x17C63BC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x996D74", Offset = "0x996D74")]
	private static int get_rootBone(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D48")]
	[Address(RVA = "0x17C656C", Offset = "0x17C656C", VA = "0x17C656C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x996DD8", Offset = "0x996DD8")]
	private static int get_bones(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D49")]
	[Address(RVA = "0x17C671C", Offset = "0x17C671C", VA = "0x17C671C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x996E3C", Offset = "0x996E3C")]
	private static int get_sharedMesh(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D4A")]
	[Address(RVA = "0x17C68D4", Offset = "0x17C68D4", VA = "0x17C68D4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x996EA0", Offset = "0x996EA0")]
	private static int get_skinnedMotionVectors(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D4B")]
	[Address(RVA = "0x17C6AA8", Offset = "0x17C6AA8", VA = "0x17C6AA8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x996F04", Offset = "0x996F04")]
	private static int get_localBounds(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D4C")]
	[Address(RVA = "0x17C6C6C", Offset = "0x17C6C6C", VA = "0x17C6C6C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x996F68", Offset = "0x996F68")]
	private static int set_quality(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D4D")]
	[Address(RVA = "0x17C6E90", Offset = "0x17C6E90", VA = "0x17C6E90")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x996FCC", Offset = "0x996FCC")]
	private static int set_updateWhenOffscreen(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D4E")]
	[Address(RVA = "0x17C7064", Offset = "0x17C7064", VA = "0x17C7064")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x997030", Offset = "0x997030")]
	private static int set_forceMatrixRecalculationPerRender(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D4F")]
	[Address(RVA = "0x17C7238", Offset = "0x17C7238", VA = "0x17C7238")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x997094", Offset = "0x997094")]
	private static int set_rootBone(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D50")]
	[Address(RVA = "0x17C7434", Offset = "0x17C7434", VA = "0x17C7434")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9970F8", Offset = "0x9970F8")]
	private static int set_bones(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D51")]
	[Address(RVA = "0x17C75F0", Offset = "0x17C75F0", VA = "0x17C75F0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99715C", Offset = "0x99715C")]
	private static int set_sharedMesh(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D52")]
	[Address(RVA = "0x17C780C", Offset = "0x17C780C", VA = "0x17C780C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9971C0", Offset = "0x9971C0")]
	private static int set_skinnedMotionVectors(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D53")]
	[Address(RVA = "0x17C79E0", Offset = "0x17C79E0", VA = "0x17C79E0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x997224", Offset = "0x997224")]
	private static int set_localBounds(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D54")]
	[Address(RVA = "0x17C8140", Offset = "0x17C8140", VA = "0x17C8140")]
	public UnityEngine_SkinnedMeshRendererWrap()
	{
	}
}
[Token(Token = "0x20000A2")]
public class UnityEngine_SpaceWrap
{
	[Token(Token = "0x6000D55")]
	[Address(RVA = "0x17C8368", Offset = "0x17C8368", VA = "0x17C8368")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x6000D56")]
	[Address(RVA = "0x17C859C", Offset = "0x17C859C", VA = "0x17C859C")]
	private static void Push(IntPtr L, Space arg)
	{
	}

	[Token(Token = "0x6000D57")]
	[Address(RVA = "0x17C8638", Offset = "0x17C8638", VA = "0x17C8638")]
	private static bool CheckType(IntPtr L, int pos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D58")]
	[Address(RVA = "0x17C8148", Offset = "0x17C8148", VA = "0x17C8148")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x997288", Offset = "0x997288")]
	private static int get_World(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D59")]
	[Address(RVA = "0x17C81E4", Offset = "0x17C81E4", VA = "0x17C81E4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9972EC", Offset = "0x9972EC")]
	private static int get_Self(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D5A")]
	[Address(RVA = "0x17C8284", Offset = "0x17C8284", VA = "0x17C8284")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x997350", Offset = "0x997350")]
	private static int IntToEnum(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D5B")]
	[Address(RVA = "0x17C86F4", Offset = "0x17C86F4", VA = "0x17C86F4")]
	public UnityEngine_SpaceWrap()
	{
	}
}
[Token(Token = "0x20000A3")]
public class UnityEngine_TextAnchorWrap
{
	[Token(Token = "0x6000D5C")]
	[Address(RVA = "0x17C8D7C", Offset = "0x17C8D7C", VA = "0x17C8D7C")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x6000D5D")]
	[Address(RVA = "0x17C918C", Offset = "0x17C918C", VA = "0x17C918C")]
	private static void Push(IntPtr L, TextAnchor arg)
	{
	}

	[Token(Token = "0x6000D5E")]
	[Address(RVA = "0x17C9228", Offset = "0x17C9228", VA = "0x17C9228")]
	private static bool CheckType(IntPtr L, int pos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D5F")]
	[Address(RVA = "0x17C86FC", Offset = "0x17C86FC", VA = "0x17C86FC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9973B4", Offset = "0x9973B4")]
	private static int get_UpperLeft(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D60")]
	[Address(RVA = "0x17C8798", Offset = "0x17C8798", VA = "0x17C8798")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x997418", Offset = "0x997418")]
	private static int get_UpperCenter(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D61")]
	[Address(RVA = "0x17C8838", Offset = "0x17C8838", VA = "0x17C8838")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99747C", Offset = "0x99747C")]
	private static int get_UpperRight(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D62")]
	[Address(RVA = "0x17C88D8", Offset = "0x17C88D8", VA = "0x17C88D8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9974E0", Offset = "0x9974E0")]
	private static int get_MiddleLeft(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D63")]
	[Address(RVA = "0x17C8978", Offset = "0x17C8978", VA = "0x17C8978")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x997544", Offset = "0x997544")]
	private static int get_MiddleCenter(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D64")]
	[Address(RVA = "0x17C8A18", Offset = "0x17C8A18", VA = "0x17C8A18")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9975A8", Offset = "0x9975A8")]
	private static int get_MiddleRight(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D65")]
	[Address(RVA = "0x17C8AB8", Offset = "0x17C8AB8", VA = "0x17C8AB8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99760C", Offset = "0x99760C")]
	private static int get_LowerLeft(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D66")]
	[Address(RVA = "0x17C8B58", Offset = "0x17C8B58", VA = "0x17C8B58")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x997670", Offset = "0x997670")]
	private static int get_LowerCenter(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D67")]
	[Address(RVA = "0x17C8BF8", Offset = "0x17C8BF8", VA = "0x17C8BF8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9976D4", Offset = "0x9976D4")]
	private static int get_LowerRight(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D68")]
	[Address(RVA = "0x17C8C98", Offset = "0x17C8C98", VA = "0x17C8C98")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x997738", Offset = "0x997738")]
	private static int IntToEnum(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D69")]
	[Address(RVA = "0x17C92E4", Offset = "0x17C92E4", VA = "0x17C92E4")]
	public UnityEngine_TextAnchorWrap()
	{
	}
}
[Token(Token = "0x20000A4")]
public class UnityEngine_Texture2DWrap
{
	[Token(Token = "0x6000D6A")]
	[Address(RVA = "0x17D0814", Offset = "0x17D0814", VA = "0x17D0814")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x6000D6B")]
	[Address(RVA = "0x17C92EC", Offset = "0x17C92EC", VA = "0x17C92EC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99779C", Offset = "0x99779C")]
	private static int _CreateUnityEngine_Texture2D(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D6C")]
	[Address(RVA = "0x17C9F24", Offset = "0x17C9F24", VA = "0x17C9F24")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x997800", Offset = "0x997800")]
	private static int Compress(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D6D")]
	[Address(RVA = "0x17CA118", Offset = "0x17CA118", VA = "0x17CA118")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x997864", Offset = "0x997864")]
	private static int ClearRequestedMipmapLevel(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D6E")]
	[Address(RVA = "0x17CA2C0", Offset = "0x17CA2C0", VA = "0x17CA2C0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9978C8", Offset = "0x9978C8")]
	private static int IsRequestedMipmapLevelLoaded(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D6F")]
	[Address(RVA = "0x17CA4A4", Offset = "0x17CA4A4", VA = "0x17CA4A4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99792C", Offset = "0x99792C")]
	private static int ClearMinimumMipmapLevel(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D70")]
	[Address(RVA = "0x17CA64C", Offset = "0x17CA64C", VA = "0x17CA64C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x997990", Offset = "0x997990")]
	private static int UpdateExternalTexture(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D71")]
	[Address(RVA = "0x17CA820", Offset = "0x17CA820", VA = "0x17CA820")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9979F4", Offset = "0x9979F4")]
	private static int GetRawTextureData(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D72")]
	[Address(RVA = "0x17CA9E0", Offset = "0x17CA9E0", VA = "0x17CA9E0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x997A58", Offset = "0x997A58")]
	private static int GetPixels(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D73")]
	[Address(RVA = "0x17CB094", Offset = "0x17CB094", VA = "0x17CB094")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x997ABC", Offset = "0x997ABC")]
	private static int GetPixels32(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D74")]
	[Address(RVA = "0x17CB3E0", Offset = "0x17CB3E0", VA = "0x17CB3E0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x997B20", Offset = "0x997B20")]
	private static int PackTextures(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D75")]
	[Address(RVA = "0x17CB978", Offset = "0x17CB978", VA = "0x17CB978")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x997B84", Offset = "0x997B84")]
	private static int CreateExternalTexture(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D76")]
	[Address(RVA = "0x17CBC34", Offset = "0x17CBC34", VA = "0x17CBC34")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x997BE8", Offset = "0x997BE8")]
	private static int SetPixel(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D77")]
	[Address(RVA = "0x17CC08C", Offset = "0x17CC08C", VA = "0x17CC08C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x997C4C", Offset = "0x997C4C")]
	private static int SetPixels(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D78")]
	[Address(RVA = "0x17CC774", Offset = "0x17CC774", VA = "0x17CC774")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x997CB0", Offset = "0x997CB0")]
	private static int GetPixel(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D79")]
	[Address(RVA = "0x17CCB94", Offset = "0x17CCB94", VA = "0x17CCB94")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x997D14", Offset = "0x997D14")]
	private static int GetPixelBilinear(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D7A")]
	[Address(RVA = "0x17CCF80", Offset = "0x17CCF80", VA = "0x17CCF80")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x997D78", Offset = "0x997D78")]
	private static int LoadRawTextureData(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D7B")]
	[Address(RVA = "0x17CD2DC", Offset = "0x17CD2DC", VA = "0x17CD2DC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x997DDC", Offset = "0x997DDC")]
	private static int Apply(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D7C")]
	[Address(RVA = "0x17CD6F0", Offset = "0x17CD6F0", VA = "0x17CD6F0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x997E40", Offset = "0x997E40")]
	private static int Resize(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D7D")]
	[Address(RVA = "0x17CDB60", Offset = "0x17CDB60", VA = "0x17CDB60")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x997EA4", Offset = "0x997EA4")]
	private static int ReadPixels(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D7E")]
	[Address(RVA = "0x17CE040", Offset = "0x17CE040", VA = "0x17CE040")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x997F08", Offset = "0x997F08")]
	private static int GenerateAtlas(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D7F")]
	[Address(RVA = "0x17CE2C4", Offset = "0x17CE2C4", VA = "0x17CE2C4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x997F6C", Offset = "0x997F6C")]
	private static int SetPixels32(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D80")]
	[Address(RVA = "0x17CE9AC", Offset = "0x17CE9AC", VA = "0x17CE9AC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x997FD0", Offset = "0x997FD0")]
	private static int op_Equality(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D81")]
	[Address(RVA = "0x17CEBF0", Offset = "0x17CEBF0", VA = "0x17CEBF0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x998034", Offset = "0x998034")]
	private static int get_format(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D82")]
	[Address(RVA = "0x17CEDA0", Offset = "0x17CEDA0", VA = "0x17CEDA0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x998098", Offset = "0x998098")]
	private static int get_whiteTexture(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D83")]
	[Address(RVA = "0x17CEED8", Offset = "0x17CEED8", VA = "0x17CEED8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9980FC", Offset = "0x9980FC")]
	private static int get_blackTexture(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D84")]
	[Address(RVA = "0x17CF010", Offset = "0x17CF010", VA = "0x17CF010")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x998160", Offset = "0x998160")]
	private static int get_redTexture(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D85")]
	[Address(RVA = "0x17CF148", Offset = "0x17CF148", VA = "0x17CF148")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9981C4", Offset = "0x9981C4")]
	private static int get_grayTexture(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D86")]
	[Address(RVA = "0x17CF280", Offset = "0x17CF280", VA = "0x17CF280")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x998228", Offset = "0x998228")]
	private static int get_linearGrayTexture(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D87")]
	[Address(RVA = "0x17CF3B8", Offset = "0x17CF3B8", VA = "0x17CF3B8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99828C", Offset = "0x99828C")]
	private static int get_normalTexture(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D88")]
	[Address(RVA = "0x17CF4F0", Offset = "0x17CF4F0", VA = "0x17CF4F0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9982F0", Offset = "0x9982F0")]
	private static int get_isReadable(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D89")]
	[Address(RVA = "0x17CF6BC", Offset = "0x17CF6BC", VA = "0x17CF6BC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x998354", Offset = "0x998354")]
	private static int get_streamingMipmaps(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D8A")]
	[Address(RVA = "0x17CF874", Offset = "0x17CF874", VA = "0x17CF874")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9983B8", Offset = "0x9983B8")]
	private static int get_streamingMipmapsPriority(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D8B")]
	[Address(RVA = "0x17CFA2C", Offset = "0x17CFA2C", VA = "0x17CFA2C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99841C", Offset = "0x99841C")]
	private static int get_requestedMipmapLevel(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D8C")]
	[Address(RVA = "0x17CFBE4", Offset = "0x17CFBE4", VA = "0x17CFBE4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x998480", Offset = "0x998480")]
	private static int get_minimumMipmapLevel(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D8D")]
	[Address(RVA = "0x17CFD9C", Offset = "0x17CFD9C", VA = "0x17CFD9C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9984E4", Offset = "0x9984E4")]
	private static int get_calculatedMipmapLevel(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D8E")]
	[Address(RVA = "0x17CFF54", Offset = "0x17CFF54", VA = "0x17CFF54")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x998548", Offset = "0x998548")]
	private static int get_desiredMipmapLevel(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D8F")]
	[Address(RVA = "0x17D010C", Offset = "0x17D010C", VA = "0x17D010C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9985AC", Offset = "0x9985AC")]
	private static int get_loadingMipmapLevel(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D90")]
	[Address(RVA = "0x17D02C4", Offset = "0x17D02C4", VA = "0x17D02C4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x998610", Offset = "0x998610")]
	private static int get_loadedMipmapLevel(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D91")]
	[Address(RVA = "0x17D047C", Offset = "0x17D047C", VA = "0x17D047C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x998674", Offset = "0x998674")]
	private static int set_requestedMipmapLevel(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D92")]
	[Address(RVA = "0x17D0648", Offset = "0x17D0648", VA = "0x17D0648")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9986D8", Offset = "0x9986D8")]
	private static int set_minimumMipmapLevel(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D93")]
	[Address(RVA = "0x17D1328", Offset = "0x17D1328", VA = "0x17D1328")]
	public UnityEngine_Texture2DWrap()
	{
	}
}
[Token(Token = "0x20000A5")]
public class UnityEngine_TextureWrap
{
	[Token(Token = "0x6000D94")]
	[Address(RVA = "0x17D6AEC", Offset = "0x17D6AEC", VA = "0x17D6AEC")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x6000D95")]
	[Address(RVA = "0x17D1330", Offset = "0x17D1330", VA = "0x17D1330")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99873C", Offset = "0x99873C")]
	private static int SetGlobalAnisotropicFilteringLimits(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D96")]
	[Address(RVA = "0x17D1510", Offset = "0x17D1510", VA = "0x17D1510")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9987A0", Offset = "0x9987A0")]
	private static int GetNativeTexturePtr(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D97")]
	[Address(RVA = "0x17D16D4", Offset = "0x17D16D4", VA = "0x17D16D4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x998804", Offset = "0x998804")]
	private static int IncrementUpdateCount(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D98")]
	[Address(RVA = "0x17D185C", Offset = "0x17D185C", VA = "0x17D185C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x998868", Offset = "0x998868")]
	private static int SetStreamingTextureMaterialDebugProperties(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D99")]
	[Address(RVA = "0x17D19A8", Offset = "0x17D19A8", VA = "0x17D19A8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9988CC", Offset = "0x9988CC")]
	private static int op_Equality(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D9A")]
	[Address(RVA = "0x17D1BEC", Offset = "0x17D1BEC", VA = "0x17D1BEC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x998930", Offset = "0x998930")]
	private static int get_GenerateAllMips(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D9B")]
	[Address(RVA = "0x17D1D44", Offset = "0x17D1D44", VA = "0x17D1D44")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x998994", Offset = "0x998994")]
	private static int get_masterTextureLimit(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D9C")]
	[Address(RVA = "0x17D1E98", Offset = "0x17D1E98", VA = "0x17D1E98")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9989F8", Offset = "0x9989F8")]
	private static int get_mipmapCount(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D9D")]
	[Address(RVA = "0x17D206C", Offset = "0x17D206C", VA = "0x17D206C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x998A5C", Offset = "0x998A5C")]
	private static int get_anisotropicFiltering(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D9E")]
	[Address(RVA = "0x17D21D8", Offset = "0x17D21D8", VA = "0x17D21D8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x998AC0", Offset = "0x998AC0")]
	private static int get_graphicsFormat(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000D9F")]
	[Address(RVA = "0x17D23D4", Offset = "0x17D23D4", VA = "0x17D23D4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x998B24", Offset = "0x998B24")]
	private static int get_width(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DA0")]
	[Address(RVA = "0x17D25D8", Offset = "0x17D25D8", VA = "0x17D25D8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x998B88", Offset = "0x998B88")]
	private static int get_height(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DA1")]
	[Address(RVA = "0x17D27DC", Offset = "0x17D27DC", VA = "0x17D27DC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x998BEC", Offset = "0x998BEC")]
	private static int get_dimension(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DA2")]
	[Address(RVA = "0x17D29D8", Offset = "0x17D29D8", VA = "0x17D29D8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x998C50", Offset = "0x998C50")]
	private static int get_isReadable(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DA3")]
	[Address(RVA = "0x17D2BDC", Offset = "0x17D2BDC", VA = "0x17D2BDC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x998CB4", Offset = "0x998CB4")]
	private static int get_wrapMode(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DA4")]
	[Address(RVA = "0x17D2DA8", Offset = "0x17D2DA8", VA = "0x17D2DA8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x998D18", Offset = "0x998D18")]
	private static int get_wrapModeU(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DA5")]
	[Address(RVA = "0x17D2F74", Offset = "0x17D2F74", VA = "0x17D2F74")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x998D7C", Offset = "0x998D7C")]
	private static int get_wrapModeV(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DA6")]
	[Address(RVA = "0x17D3140", Offset = "0x17D3140", VA = "0x17D3140")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x998DE0", Offset = "0x998DE0")]
	private static int get_wrapModeW(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DA7")]
	[Address(RVA = "0x17D330C", Offset = "0x17D330C", VA = "0x17D330C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x998E44", Offset = "0x998E44")]
	private static int get_filterMode(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DA8")]
	[Address(RVA = "0x17D34D8", Offset = "0x17D34D8", VA = "0x17D34D8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x998EA8", Offset = "0x998EA8")]
	private static int get_anisoLevel(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DA9")]
	[Address(RVA = "0x17D36AC", Offset = "0x17D36AC", VA = "0x17D36AC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x998F0C", Offset = "0x998F0C")]
	private static int get_mipMapBias(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DAA")]
	[Address(RVA = "0x17D388C", Offset = "0x17D388C", VA = "0x17D388C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x998F70", Offset = "0x998F70")]
	private static int get_texelSize(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DAB")]
	[Address(RVA = "0x17D3A38", Offset = "0x17D3A38", VA = "0x17D3A38")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x998FD4", Offset = "0x998FD4")]
	private static int get_updateCount(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DAC")]
	[Address(RVA = "0x17D3C0C", Offset = "0x17D3C0C", VA = "0x17D3C0C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x999038", Offset = "0x999038")]
	private static int get_totalTextureMemory(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DAD")]
	[Address(RVA = "0x17D3D60", Offset = "0x17D3D60", VA = "0x17D3D60")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99909C", Offset = "0x99909C")]
	private static int get_desiredTextureMemory(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DAE")]
	[Address(RVA = "0x17D3EB4", Offset = "0x17D3EB4", VA = "0x17D3EB4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x999100", Offset = "0x999100")]
	private static int get_targetTextureMemory(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DAF")]
	[Address(RVA = "0x17D4008", Offset = "0x17D4008", VA = "0x17D4008")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x999164", Offset = "0x999164")]
	private static int get_currentTextureMemory(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DB0")]
	[Address(RVA = "0x17D415C", Offset = "0x17D415C", VA = "0x17D415C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9991C8", Offset = "0x9991C8")]
	private static int get_nonStreamingTextureMemory(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DB1")]
	[Address(RVA = "0x17D42B0", Offset = "0x17D42B0", VA = "0x17D42B0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99922C", Offset = "0x99922C")]
	private static int get_streamingMipmapUploadCount(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DB2")]
	[Address(RVA = "0x17D4404", Offset = "0x17D4404", VA = "0x17D4404")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x999290", Offset = "0x999290")]
	private static int get_streamingRendererCount(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DB3")]
	[Address(RVA = "0x17D4558", Offset = "0x17D4558", VA = "0x17D4558")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9992F4", Offset = "0x9992F4")]
	private static int get_streamingTextureCount(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DB4")]
	[Address(RVA = "0x17D46AC", Offset = "0x17D46AC", VA = "0x17D46AC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x999358", Offset = "0x999358")]
	private static int get_nonStreamingTextureCount(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DB5")]
	[Address(RVA = "0x17D4800", Offset = "0x17D4800", VA = "0x17D4800")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9993BC", Offset = "0x9993BC")]
	private static int get_streamingTexturePendingLoadCount(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DB6")]
	[Address(RVA = "0x17D4954", Offset = "0x17D4954", VA = "0x17D4954")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x999420", Offset = "0x999420")]
	private static int get_streamingTextureLoadingCount(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DB7")]
	[Address(RVA = "0x17D4AA8", Offset = "0x17D4AA8", VA = "0x17D4AA8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x999484", Offset = "0x999484")]
	private static int get_streamingTextureForceLoadAll(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DB8")]
	[Address(RVA = "0x17D4BFC", Offset = "0x17D4BFC", VA = "0x17D4BFC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9994E8", Offset = "0x9994E8")]
	private static int get_streamingTextureDiscardUnusedMips(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DB9")]
	[Address(RVA = "0x17D4D50", Offset = "0x17D4D50", VA = "0x17D4D50")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99954C", Offset = "0x99954C")]
	private static int get_allowThreadedTextureCreation(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DBA")]
	[Address(RVA = "0x17D4EA4", Offset = "0x17D4EA4", VA = "0x17D4EA4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9995B0", Offset = "0x9995B0")]
	private static int set_masterTextureLimit(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DBB")]
	[Address(RVA = "0x17D501C", Offset = "0x17D501C", VA = "0x17D501C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x999614", Offset = "0x999614")]
	private static int set_anisotropicFiltering(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DBC")]
	[Address(RVA = "0x17D51F0", Offset = "0x17D51F0", VA = "0x17D51F0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x999678", Offset = "0x999678")]
	private static int set_width(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DBD")]
	[Address(RVA = "0x17D5408", Offset = "0x17D5408", VA = "0x17D5408")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9996DC", Offset = "0x9996DC")]
	private static int set_height(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DBE")]
	[Address(RVA = "0x17D5620", Offset = "0x17D5620", VA = "0x17D5620")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x999740", Offset = "0x999740")]
	private static int set_dimension(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DBF")]
	[Address(RVA = "0x17D5874", Offset = "0x17D5874", VA = "0x17D5874")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9997A4", Offset = "0x9997A4")]
	private static int set_wrapMode(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DC0")]
	[Address(RVA = "0x17D5A98", Offset = "0x17D5A98", VA = "0x17D5A98")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x999808", Offset = "0x999808")]
	private static int set_wrapModeU(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DC1")]
	[Address(RVA = "0x17D5CBC", Offset = "0x17D5CBC", VA = "0x17D5CBC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99986C", Offset = "0x99986C")]
	private static int set_wrapModeV(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DC2")]
	[Address(RVA = "0x17D5EE0", Offset = "0x17D5EE0", VA = "0x17D5EE0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9998D0", Offset = "0x9998D0")]
	private static int set_wrapModeW(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DC3")]
	[Address(RVA = "0x17D6104", Offset = "0x17D6104", VA = "0x17D6104")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x999934", Offset = "0x999934")]
	private static int set_filterMode(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DC4")]
	[Address(RVA = "0x17D6328", Offset = "0x17D6328", VA = "0x17D6328")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x999998", Offset = "0x999998")]
	private static int set_anisoLevel(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DC5")]
	[Address(RVA = "0x17D6510", Offset = "0x17D6510", VA = "0x17D6510")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9999FC", Offset = "0x9999FC")]
	private static int set_mipMapBias(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DC6")]
	[Address(RVA = "0x17D66E4", Offset = "0x17D66E4", VA = "0x17D66E4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x999A60", Offset = "0x999A60")]
	private static int set_streamingTextureForceLoadAll(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DC7")]
	[Address(RVA = "0x17D683C", Offset = "0x17D683C", VA = "0x17D683C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x999AC4", Offset = "0x999AC4")]
	private static int set_streamingTextureDiscardUnusedMips(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DC8")]
	[Address(RVA = "0x17D6994", Offset = "0x17D6994", VA = "0x17D6994")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x999B28", Offset = "0x999B28")]
	private static int set_allowThreadedTextureCreation(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DC9")]
	[Address(RVA = "0x17D77D4", Offset = "0x17D77D4", VA = "0x17D77D4")]
	public UnityEngine_TextureWrap()
	{
	}
}
[Token(Token = "0x20000A6")]
public class UnityEngine_TimeWrap
{
	[Token(Token = "0x6000DCA")]
	[Address(RVA = "0x15CBE4C", Offset = "0x15CBE4C", VA = "0x15CBE4C")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x6000DCB")]
	[Address(RVA = "0x15C9FBC", Offset = "0x15C9FBC", VA = "0x15C9FBC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x999B8C", Offset = "0x999B8C")]
	private static int get_time(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DCC")]
	[Address(RVA = "0x15CA0F8", Offset = "0x15CA0F8", VA = "0x15CA0F8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x999BF0", Offset = "0x999BF0")]
	private static int get_timeSinceLevelLoad(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DCD")]
	[Address(RVA = "0x15CA234", Offset = "0x15CA234", VA = "0x15CA234")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x999C54", Offset = "0x999C54")]
	private static int get_deltaTime(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DCE")]
	[Address(RVA = "0x15CA370", Offset = "0x15CA370", VA = "0x15CA370")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x999CB8", Offset = "0x999CB8")]
	private static int get_fixedTime(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DCF")]
	[Address(RVA = "0x15CA4AC", Offset = "0x15CA4AC", VA = "0x15CA4AC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x999D1C", Offset = "0x999D1C")]
	private static int get_unscaledTime(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DD0")]
	[Address(RVA = "0x15CA5E8", Offset = "0x15CA5E8", VA = "0x15CA5E8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x999D80", Offset = "0x999D80")]
	private static int get_fixedUnscaledTime(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DD1")]
	[Address(RVA = "0x15CA724", Offset = "0x15CA724", VA = "0x15CA724")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x999DE4", Offset = "0x999DE4")]
	private static int get_unscaledDeltaTime(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DD2")]
	[Address(RVA = "0x15CA860", Offset = "0x15CA860", VA = "0x15CA860")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x999E48", Offset = "0x999E48")]
	private static int get_fixedUnscaledDeltaTime(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DD3")]
	[Address(RVA = "0x15CA99C", Offset = "0x15CA99C", VA = "0x15CA99C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x999EAC", Offset = "0x999EAC")]
	private static int get_fixedDeltaTime(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DD4")]
	[Address(RVA = "0x15CAAD8", Offset = "0x15CAAD8", VA = "0x15CAAD8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x999F10", Offset = "0x999F10")]
	private static int get_maximumDeltaTime(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DD5")]
	[Address(RVA = "0x15CAC14", Offset = "0x15CAC14", VA = "0x15CAC14")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x999F74", Offset = "0x999F74")]
	private static int get_smoothDeltaTime(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DD6")]
	[Address(RVA = "0x15CAD50", Offset = "0x15CAD50", VA = "0x15CAD50")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x999FD8", Offset = "0x999FD8")]
	private static int get_maximumParticleDeltaTime(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DD7")]
	[Address(RVA = "0x15CAE8C", Offset = "0x15CAE8C", VA = "0x15CAE8C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99A03C", Offset = "0x99A03C")]
	private static int get_timeScale(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DD8")]
	[Address(RVA = "0x15CAFC8", Offset = "0x15CAFC8", VA = "0x15CAFC8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99A0A0", Offset = "0x99A0A0")]
	private static int get_frameCount(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DD9")]
	[Address(RVA = "0x15CB0F8", Offset = "0x15CB0F8", VA = "0x15CB0F8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99A104", Offset = "0x99A104")]
	private static int get_renderedFrameCount(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DDA")]
	[Address(RVA = "0x15CB228", Offset = "0x15CB228", VA = "0x15CB228")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99A168", Offset = "0x99A168")]
	private static int get_realtimeSinceStartup(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DDB")]
	[Address(RVA = "0x15CB364", Offset = "0x15CB364", VA = "0x15CB364")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99A1CC", Offset = "0x99A1CC")]
	private static int get_captureDeltaTime(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DDC")]
	[Address(RVA = "0x15CB4A0", Offset = "0x15CB4A0", VA = "0x15CB4A0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99A230", Offset = "0x99A230")]
	private static int get_captureFramerate(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DDD")]
	[Address(RVA = "0x15CB5D0", Offset = "0x15CB5D0", VA = "0x15CB5D0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99A294", Offset = "0x99A294")]
	private static int get_inFixedTimeStep(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DDE")]
	[Address(RVA = "0x15CB700", Offset = "0x15CB700", VA = "0x15CB700")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99A2F8", Offset = "0x99A2F8")]
	private static int set_fixedDeltaTime(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DDF")]
	[Address(RVA = "0x15CB834", Offset = "0x15CB834", VA = "0x15CB834")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99A35C", Offset = "0x99A35C")]
	private static int set_maximumDeltaTime(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DE0")]
	[Address(RVA = "0x15CB968", Offset = "0x15CB968", VA = "0x15CB968")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99A3C0", Offset = "0x99A3C0")]
	private static int set_maximumParticleDeltaTime(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DE1")]
	[Address(RVA = "0x15CBA9C", Offset = "0x15CBA9C", VA = "0x15CBA9C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99A424", Offset = "0x99A424")]
	private static int set_timeScale(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DE2")]
	[Address(RVA = "0x15CBBD0", Offset = "0x15CBBD0", VA = "0x15CBBD0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99A488", Offset = "0x99A488")]
	private static int set_captureDeltaTime(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DE3")]
	[Address(RVA = "0x15CBD04", Offset = "0x15CBD04", VA = "0x15CBD04")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99A4EC", Offset = "0x99A4EC")]
	private static int set_captureFramerate(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DE4")]
	[Address(RVA = "0x15CC4A8", Offset = "0x15CC4A8", VA = "0x15CC4A8")]
	public UnityEngine_TimeWrap()
	{
	}
}
[Token(Token = "0x20000A7")]
public class UnityEngine_TrackedReferenceWrap
{
	[Token(Token = "0x6000DE5")]
	[Address(RVA = "0x15CCAD0", Offset = "0x15CCAD0", VA = "0x15CCAD0")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x6000DE6")]
	[Address(RVA = "0x15CC4B0", Offset = "0x15CC4B0", VA = "0x15CC4B0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99A550", Offset = "0x99A550")]
	private static int op_Equality(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DE7")]
	[Address(RVA = "0x15CC6C4", Offset = "0x15CC6C4", VA = "0x15CC6C4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99A5B4", Offset = "0x99A5B4")]
	private static int Equals(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DE8")]
	[Address(RVA = "0x15CC8E0", Offset = "0x15CC8E0", VA = "0x15CC8E0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99A618", Offset = "0x99A618")]
	private static int GetHashCode(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DE9")]
	[Address(RVA = "0x15CCC9C", Offset = "0x15CCC9C", VA = "0x15CCC9C")]
	public UnityEngine_TrackedReferenceWrap()
	{
	}
}
[Token(Token = "0x20000A8")]
public class UnityEngine_TransformWrap
{
	[Token(Token = "0x6000DEA")]
	[Address(RVA = "0x15D4A40", Offset = "0x15D4A40", VA = "0x15D4A40")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x6000DEB")]
	[Address(RVA = "0x15CCCA4", Offset = "0x15CCCA4", VA = "0x15CCCA4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99A67C", Offset = "0x99A67C")]
	private static int SetParent(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DEC")]
	[Address(RVA = "0x15CD024", Offset = "0x15CD024", VA = "0x15CD024")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99A6E0", Offset = "0x99A6E0")]
	private static int SetPositionAndRotation(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DED")]
	[Address(RVA = "0x15CD234", Offset = "0x15CD234", VA = "0x15CD234")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99A744", Offset = "0x99A744")]
	private static int Translate(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DEE")]
	[Address(RVA = "0x15CDB5C", Offset = "0x15CDB5C", VA = "0x15CDB5C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99A7A8", Offset = "0x99A7A8")]
	private static int Rotate(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DEF")]
	[Address(RVA = "0x15CE490", Offset = "0x15CE490", VA = "0x15CE490")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99A80C", Offset = "0x99A80C")]
	private static int RotateAround(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DF0")]
	[Address(RVA = "0x15CE6E0", Offset = "0x15CE6E0", VA = "0x15CE6E0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99A870", Offset = "0x99A870")]
	private static int LookAt(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DF1")]
	[Address(RVA = "0x15CECF0", Offset = "0x15CECF0", VA = "0x15CECF0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99A8D4", Offset = "0x99A8D4")]
	private static int TransformDirection(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DF2")]
	[Address(RVA = "0x15CF04C", Offset = "0x15CF04C", VA = "0x15CF04C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99A938", Offset = "0x99A938")]
	private static int InverseTransformDirection(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DF3")]
	[Address(RVA = "0x15CF3A8", Offset = "0x15CF3A8", VA = "0x15CF3A8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99A99C", Offset = "0x99A99C")]
	private static int TransformVector(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DF4")]
	[Address(RVA = "0x15CF704", Offset = "0x15CF704", VA = "0x15CF704")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99AA00", Offset = "0x99AA00")]
	private static int InverseTransformVector(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DF5")]
	[Address(RVA = "0x15CFA60", Offset = "0x15CFA60", VA = "0x15CFA60")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99AA64", Offset = "0x99AA64")]
	private static int TransformPoint(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DF6")]
	[Address(RVA = "0x15CFDBC", Offset = "0x15CFDBC", VA = "0x15CFDBC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99AAC8", Offset = "0x99AAC8")]
	private static int InverseTransformPoint(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DF7")]
	[Address(RVA = "0x15D0118", Offset = "0x15D0118", VA = "0x15D0118")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99AB2C", Offset = "0x99AB2C")]
	private static int DetachChildren(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DF8")]
	[Address(RVA = "0x15D02A0", Offset = "0x15D02A0", VA = "0x15D02A0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99AB90", Offset = "0x99AB90")]
	private static int SetAsFirstSibling(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DF9")]
	[Address(RVA = "0x15D0428", Offset = "0x15D0428", VA = "0x15D0428")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99ABF4", Offset = "0x99ABF4")]
	private static int SetAsLastSibling(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DFA")]
	[Address(RVA = "0x15D05B0", Offset = "0x15D05B0", VA = "0x15D05B0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99AC58", Offset = "0x99AC58")]
	private static int SetSiblingIndex(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DFB")]
	[Address(RVA = "0x15D0798", Offset = "0x15D0798", VA = "0x15D0798")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99ACBC", Offset = "0x99ACBC")]
	private static int GetSiblingIndex(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DFC")]
	[Address(RVA = "0x15D095C", Offset = "0x15D095C", VA = "0x15D095C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99AD20", Offset = "0x99AD20")]
	private static int Find(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DFD")]
	[Address(RVA = "0x15D0B28", Offset = "0x15D0B28", VA = "0x15D0B28")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99AD84", Offset = "0x99AD84")]
	private static int IsChildOf(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DFE")]
	[Address(RVA = "0x15D0D4C", Offset = "0x15D0D4C", VA = "0x15D0D4C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99ADE8", Offset = "0x99ADE8")]
	private static int GetEnumerator(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000DFF")]
	[Address(RVA = "0x15D0EEC", Offset = "0x15D0EEC", VA = "0x15D0EEC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99AE4C", Offset = "0x99AE4C")]
	private static int GetChild(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E00")]
	[Address(RVA = "0x15D10EC", Offset = "0x15D10EC", VA = "0x15D10EC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99AEB0", Offset = "0x99AEB0")]
	private static int op_Equality(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E01")]
	[Address(RVA = "0x15D1330", Offset = "0x15D1330", VA = "0x15D1330")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99AF14", Offset = "0x99AF14")]
	private static int get_position(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E02")]
	[Address(RVA = "0x15D14DC", Offset = "0x15D14DC", VA = "0x15D14DC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99AF78", Offset = "0x99AF78")]
	private static int get_localPosition(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E03")]
	[Address(RVA = "0x15D1688", Offset = "0x15D1688", VA = "0x15D1688")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99AFDC", Offset = "0x99AFDC")]
	private static int get_eulerAngles(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E04")]
	[Address(RVA = "0x15D1834", Offset = "0x15D1834", VA = "0x15D1834")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99C040", Offset = "0x99C040")]
	private static int get_localEulerAngles(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E05")]
	[Address(RVA = "0x15D19E0", Offset = "0x15D19E0", VA = "0x15D19E0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99C0A4", Offset = "0x99C0A4")]
	private static int get_right(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E06")]
	[Address(RVA = "0x15D1B8C", Offset = "0x15D1B8C", VA = "0x15D1B8C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99C108", Offset = "0x99C108")]
	private static int get_up(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E07")]
	[Address(RVA = "0x15D1D38", Offset = "0x15D1D38", VA = "0x15D1D38")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99C16C", Offset = "0x99C16C")]
	private static int get_forward(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E08")]
	[Address(RVA = "0x15D1EE4", Offset = "0x15D1EE4", VA = "0x15D1EE4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99C1D0", Offset = "0x99C1D0")]
	private static int get_rotation(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E09")]
	[Address(RVA = "0x15D2090", Offset = "0x15D2090", VA = "0x15D2090")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99C234", Offset = "0x99C234")]
	private static int get_localRotation(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E0A")]
	[Address(RVA = "0x15D223C", Offset = "0x15D223C", VA = "0x15D223C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99C298", Offset = "0x99C298")]
	private static int get_localScale(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E0B")]
	[Address(RVA = "0x15D23E8", Offset = "0x15D23E8", VA = "0x15D23E8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99C2FC", Offset = "0x99C2FC")]
	private static int get_parent(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E0C")]
	[Address(RVA = "0x15D2598", Offset = "0x15D2598", VA = "0x15D2598")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99C360", Offset = "0x99C360")]
	private static int get_worldToLocalMatrix(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E0D")]
	[Address(RVA = "0x15D2764", Offset = "0x15D2764", VA = "0x15D2764")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99C3C4", Offset = "0x99C3C4")]
	private static int get_localToWorldMatrix(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E0E")]
	[Address(RVA = "0x15D2930", Offset = "0x15D2930", VA = "0x15D2930")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99C428", Offset = "0x99C428")]
	private static int get_root(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E0F")]
	[Address(RVA = "0x15D2AE0", Offset = "0x15D2AE0", VA = "0x15D2AE0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99C48C", Offset = "0x99C48C")]
	private static int get_childCount(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E10")]
	[Address(RVA = "0x15D2CB4", Offset = "0x15D2CB4", VA = "0x15D2CB4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99C4F0", Offset = "0x99C4F0")]
	private static int get_lossyScale(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E11")]
	[Address(RVA = "0x15D2E60", Offset = "0x15D2E60", VA = "0x15D2E60")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99C554", Offset = "0x99C554")]
	private static int get_hasChanged(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E12")]
	[Address(RVA = "0x15D3034", Offset = "0x15D3034", VA = "0x15D3034")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99C5B8", Offset = "0x99C5B8")]
	private static int get_hierarchyCapacity(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E13")]
	[Address(RVA = "0x15D3208", Offset = "0x15D3208", VA = "0x15D3208")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99C61C", Offset = "0x99C61C")]
	private static int get_hierarchyCount(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E14")]
	[Address(RVA = "0x15D33DC", Offset = "0x15D33DC", VA = "0x15D33DC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99C680", Offset = "0x99C680")]
	private static int set_position(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E15")]
	[Address(RVA = "0x15D3588", Offset = "0x15D3588", VA = "0x15D3588")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99C6E4", Offset = "0x99C6E4")]
	private static int set_localPosition(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E16")]
	[Address(RVA = "0x15D3734", Offset = "0x15D3734", VA = "0x15D3734")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99C748", Offset = "0x99C748")]
	private static int set_eulerAngles(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E17")]
	[Address(RVA = "0x15D38E0", Offset = "0x15D38E0", VA = "0x15D38E0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99C7AC", Offset = "0x99C7AC")]
	private static int set_localEulerAngles(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E18")]
	[Address(RVA = "0x15D3A8C", Offset = "0x15D3A8C", VA = "0x15D3A8C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99C810", Offset = "0x99C810")]
	private static int set_right(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E19")]
	[Address(RVA = "0x15D3C38", Offset = "0x15D3C38", VA = "0x15D3C38")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99C874", Offset = "0x99C874")]
	private static int set_up(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E1A")]
	[Address(RVA = "0x15D3DE4", Offset = "0x15D3DE4", VA = "0x15D3DE4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99C8D8", Offset = "0x99C8D8")]
	private static int set_forward(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E1B")]
	[Address(RVA = "0x15D3F90", Offset = "0x15D3F90", VA = "0x15D3F90")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99C93C", Offset = "0x99C93C")]
	private static int set_rotation(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E1C")]
	[Address(RVA = "0x15D413C", Offset = "0x15D413C", VA = "0x15D413C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99C9A0", Offset = "0x99C9A0")]
	private static int set_localRotation(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E1D")]
	[Address(RVA = "0x15D42E8", Offset = "0x15D42E8", VA = "0x15D42E8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99CA04", Offset = "0x99CA04")]
	private static int set_localScale(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E1E")]
	[Address(RVA = "0x15D4494", Offset = "0x15D4494", VA = "0x15D4494")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99CA68", Offset = "0x99CA68")]
	private static int set_parent(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E1F")]
	[Address(RVA = "0x15D4684", Offset = "0x15D4684", VA = "0x15D4684")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99CACC", Offset = "0x99CACC")]
	private static int set_hasChanged(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E20")]
	[Address(RVA = "0x15D4858", Offset = "0x15D4858", VA = "0x15D4858")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99CB30", Offset = "0x99CB30")]
	private static int set_hierarchyCapacity(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E21")]
	[Address(RVA = "0x15D57AC", Offset = "0x15D57AC", VA = "0x15D57AC")]
	public UnityEngine_TransformWrap()
	{
	}
}
[Token(Token = "0x20000A9")]
public class UnityEngine_UI_ButtonWrap
{
	[Token(Token = "0x6000E22")]
	[Address(RVA = "0x15D61E0", Offset = "0x15D61E0", VA = "0x15D61E0")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x6000E23")]
	[Address(RVA = "0x15D57B4", Offset = "0x15D57B4", VA = "0x15D57B4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99CB94", Offset = "0x99CB94")]
	private static int OnPointerClick(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E24")]
	[Address(RVA = "0x15D59E4", Offset = "0x15D59E4", VA = "0x15D59E4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99CBF8", Offset = "0x99CBF8")]
	private static int OnSubmit(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E25")]
	[Address(RVA = "0x15D5C14", Offset = "0x15D5C14", VA = "0x15D5C14")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99CC5C", Offset = "0x99CC5C")]
	private static int op_Equality(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E26")]
	[Address(RVA = "0x15D5E58", Offset = "0x15D5E58", VA = "0x15D5E58")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99CCC0", Offset = "0x99CCC0")]
	private static int get_onClick(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E27")]
	[Address(RVA = "0x15D5FF8", Offset = "0x15D5FF8", VA = "0x15D5FF8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99CD24", Offset = "0x99CD24")]
	private static int set_onClick(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E28")]
	[Address(RVA = "0x15D6414", Offset = "0x15D6414", VA = "0x15D6414")]
	public UnityEngine_UI_ButtonWrap()
	{
	}
}
[Token(Token = "0x20000AA")]
public class UnityEngine_UI_Button_ButtonClickedEventWrap
{
	[Token(Token = "0x6000E29")]
	[Address(RVA = "0x15D65D4", Offset = "0x15D65D4", VA = "0x15D65D4")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x6000E2A")]
	[Address(RVA = "0x15D641C", Offset = "0x15D641C", VA = "0x15D641C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99CD88", Offset = "0x99CD88")]
	private static int _CreateUnityEngine_UI_Button_ButtonClickedEvent(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E2B")]
	[Address(RVA = "0x15D6720", Offset = "0x15D6720", VA = "0x15D6720")]
	public UnityEngine_UI_Button_ButtonClickedEventWrap()
	{
	}
}
[Token(Token = "0x20000AB")]
public class UnityEngine_UI_GraphicWrap
{
	[Token(Token = "0x6000E2C")]
	[Address(RVA = "0x15DABA0", Offset = "0x15DABA0", VA = "0x15DABA0")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x6000E2D")]
	[Address(RVA = "0x15D6728", Offset = "0x15D6728", VA = "0x15D6728")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99CDEC", Offset = "0x99CDEC")]
	private static int SetAllDirty(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E2E")]
	[Address(RVA = "0x15D68E0", Offset = "0x15D68E0", VA = "0x15D68E0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99CE50", Offset = "0x99CE50")]
	private static int SetLayoutDirty(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E2F")]
	[Address(RVA = "0x15D6A98", Offset = "0x15D6A98", VA = "0x15D6A98")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99CEB4", Offset = "0x99CEB4")]
	private static int SetVerticesDirty(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E30")]
	[Address(RVA = "0x15D6C50", Offset = "0x15D6C50", VA = "0x15D6C50")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99CF18", Offset = "0x99CF18")]
	private static int SetMaterialDirty(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E31")]
	[Address(RVA = "0x15D6E08", Offset = "0x15D6E08", VA = "0x15D6E08")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99CF7C", Offset = "0x99CF7C")]
	private static int OnCullingChanged(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E32")]
	[Address(RVA = "0x15D6FC0", Offset = "0x15D6FC0", VA = "0x15D6FC0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99CFE0", Offset = "0x99CFE0")]
	private static int Rebuild(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E33")]
	[Address(RVA = "0x15D7218", Offset = "0x15D7218", VA = "0x15D7218")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99E044", Offset = "0x99E044")]
	private static int LayoutComplete(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E34")]
	[Address(RVA = "0x15D73D0", Offset = "0x15D73D0", VA = "0x15D73D0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99E0A8", Offset = "0x99E0A8")]
	private static int GraphicUpdateComplete(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E35")]
	[Address(RVA = "0x15D7588", Offset = "0x15D7588", VA = "0x15D7588")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99E10C", Offset = "0x99E10C")]
	private static int SetNativeSize(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E36")]
	[Address(RVA = "0x15D7740", Offset = "0x15D7740", VA = "0x15D7740")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99E170", Offset = "0x99E170")]
	private static int Raycast(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E37")]
	[Address(RVA = "0x15D79FC", Offset = "0x15D79FC", VA = "0x15D79FC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99E1D4", Offset = "0x99E1D4")]
	private static int PixelAdjustPoint(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E38")]
	[Address(RVA = "0x15D7BBC", Offset = "0x15D7BBC", VA = "0x15D7BBC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99E238", Offset = "0x99E238")]
	private static int GetPixelAdjustedRect(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E39")]
	[Address(RVA = "0x15D7D60", Offset = "0x15D7D60", VA = "0x15D7D60")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99E29C", Offset = "0x99E29C")]
	private static int CrossFadeColor(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E3A")]
	[Address(RVA = "0x15D81F0", Offset = "0x15D81F0", VA = "0x15D81F0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99E300", Offset = "0x99E300")]
	private static int CrossFadeAlpha(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E3B")]
	[Address(RVA = "0x15D843C", Offset = "0x15D843C", VA = "0x15D843C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99E364", Offset = "0x99E364")]
	private static int RegisterDirtyLayoutCallback(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E3C")]
	[Address(RVA = "0x15D861C", Offset = "0x15D861C", VA = "0x15D861C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99E3C8", Offset = "0x99E3C8")]
	private static int UnregisterDirtyLayoutCallback(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E3D")]
	[Address(RVA = "0x15D87FC", Offset = "0x15D87FC", VA = "0x15D87FC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99E42C", Offset = "0x99E42C")]
	private static int RegisterDirtyVerticesCallback(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E3E")]
	[Address(RVA = "0x15D89DC", Offset = "0x15D89DC", VA = "0x15D89DC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99E490", Offset = "0x99E490")]
	private static int UnregisterDirtyVerticesCallback(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E3F")]
	[Address(RVA = "0x15D8BBC", Offset = "0x15D8BBC", VA = "0x15D8BBC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99E4F4", Offset = "0x99E4F4")]
	private static int RegisterDirtyMaterialCallback(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E40")]
	[Address(RVA = "0x15D8D9C", Offset = "0x15D8D9C", VA = "0x15D8D9C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99E558", Offset = "0x99E558")]
	private static int UnregisterDirtyMaterialCallback(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E41")]
	[Address(RVA = "0x15D8F7C", Offset = "0x15D8F7C", VA = "0x15D8F7C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99E5BC", Offset = "0x99E5BC")]
	private static int op_Equality(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E42")]
	[Address(RVA = "0x15D91C0", Offset = "0x15D91C0", VA = "0x15D91C0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99E620", Offset = "0x99E620")]
	private static int get_defaultGraphicMaterial(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E43")]
	[Address(RVA = "0x15D9314", Offset = "0x15D9314", VA = "0x15D9314")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99E684", Offset = "0x99E684")]
	private static int get_color(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E44")]
	[Address(RVA = "0x15D94F4", Offset = "0x15D94F4", VA = "0x15D94F4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99E6E8", Offset = "0x99E6E8")]
	private static int get_raycastTarget(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E45")]
	[Address(RVA = "0x15D96FC", Offset = "0x15D96FC", VA = "0x15D96FC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99E74C", Offset = "0x99E74C")]
	private static int get_depth(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E46")]
	[Address(RVA = "0x15D98D0", Offset = "0x15D98D0", VA = "0x15D98D0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99E7B0", Offset = "0x99E7B0")]
	private static int get_rectTransform(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E47")]
	[Address(RVA = "0x15D9A88", Offset = "0x15D9A88", VA = "0x15D9A88")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99E814", Offset = "0x99E814")]
	private static int get_canvas(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E48")]
	[Address(RVA = "0x15D9C40", Offset = "0x15D9C40", VA = "0x15D9C40")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99E878", Offset = "0x99E878")]
	private static int get_canvasRenderer(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E49")]
	[Address(RVA = "0x15D9DF8", Offset = "0x15D9DF8", VA = "0x15D9DF8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99E8DC", Offset = "0x99E8DC")]
	private static int get_defaultMaterial(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E4A")]
	[Address(RVA = "0x15D9FDC", Offset = "0x15D9FDC", VA = "0x15D9FDC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99E940", Offset = "0x99E940")]
	private static int get_material(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E4B")]
	[Address(RVA = "0x15DA1C0", Offset = "0x15DA1C0", VA = "0x15DA1C0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99E9A4", Offset = "0x99E9A4")]
	private static int get_materialForRendering(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E4C")]
	[Address(RVA = "0x15DA3A4", Offset = "0x15DA3A4", VA = "0x15DA3A4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99EA08", Offset = "0x99EA08")]
	private static int get_mainTexture(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E4D")]
	[Address(RVA = "0x15DA588", Offset = "0x15DA588", VA = "0x15DA588")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99EA6C", Offset = "0x99EA6C")]
	private static int set_color(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E4E")]
	[Address(RVA = "0x15DA768", Offset = "0x15DA768", VA = "0x15DA768")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99EAD0", Offset = "0x99EAD0")]
	private static int set_raycastTarget(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E4F")]
	[Address(RVA = "0x15DA970", Offset = "0x15DA970", VA = "0x15DA970")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99EB34", Offset = "0x99EB34")]
	private static int set_material(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E50")]
	[Address(RVA = "0x15DB544", Offset = "0x15DB544", VA = "0x15DB544")]
	public UnityEngine_UI_GraphicWrap()
	{
	}
}
[Token(Token = "0x20000AC")]
public class UnityEngine_UI_ImageWrap
{
	[Token(Token = "0x6000E51")]
	[Address(RVA = "0x15E0A44", Offset = "0x15E0A44", VA = "0x15E0A44")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x6000E52")]
	[Address(RVA = "0x15DB54C", Offset = "0x15DB54C", VA = "0x15DB54C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99EB98", Offset = "0x99EB98")]
	private static int DisableSpriteOptimizations(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E53")]
	[Address(RVA = "0x15DB6D4", Offset = "0x15DB6D4", VA = "0x15DB6D4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99EBFC", Offset = "0x99EBFC")]
	private static int OnBeforeSerialize(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E54")]
	[Address(RVA = "0x15DB88C", Offset = "0x15DB88C", VA = "0x15DB88C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99EC60", Offset = "0x99EC60")]
	private static int OnAfterDeserialize(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E55")]
	[Address(RVA = "0x15DBA44", Offset = "0x15DBA44", VA = "0x15DBA44")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99ECC4", Offset = "0x99ECC4")]
	private static int SetNativeSize(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E56")]
	[Address(RVA = "0x15DBBFC", Offset = "0x15DBBFC", VA = "0x15DBBFC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99ED28", Offset = "0x99ED28")]
	private static int CalculateLayoutInputHorizontal(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E57")]
	[Address(RVA = "0x15DBDB4", Offset = "0x15DBDB4", VA = "0x15DBDB4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99ED8C", Offset = "0x99ED8C")]
	private static int CalculateLayoutInputVertical(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E58")]
	[Address(RVA = "0x15DBF6C", Offset = "0x15DBF6C", VA = "0x15DBF6C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99EDF0", Offset = "0x99EDF0")]
	private static int IsRaycastLocationValid(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E59")]
	[Address(RVA = "0x15DC228", Offset = "0x15DC228", VA = "0x15DC228")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99EE54", Offset = "0x99EE54")]
	private static int op_Equality(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E5A")]
	[Address(RVA = "0x15DC46C", Offset = "0x15DC46C", VA = "0x15DC46C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99EEB8", Offset = "0x99EEB8")]
	private static int get_sprite(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E5B")]
	[Address(RVA = "0x15DC614", Offset = "0x15DC614", VA = "0x15DC614")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99EF1C", Offset = "0x99EF1C")]
	private static int get_overrideSprite(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E5C")]
	[Address(RVA = "0x15DC7CC", Offset = "0x15DC7CC", VA = "0x15DC7CC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99EF80", Offset = "0x99EF80")]
	private static int get_type(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E5D")]
	[Address(RVA = "0x15DC988", Offset = "0x15DC988", VA = "0x15DC988")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99EFE4", Offset = "0x99EFE4")]
	private static int get_preserveAspect(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E5E")]
	[Address(RVA = "0x15DCB50", Offset = "0x15DCB50", VA = "0x15DCB50")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99F048", Offset = "0x99F048")]
	private static int get_fillCenter(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E5F")]
	[Address(RVA = "0x15DCD18", Offset = "0x15DCD18", VA = "0x15DCD18")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99F0AC", Offset = "0x99F0AC")]
	private static int get_fillMethod(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E60")]
	[Address(RVA = "0x15DCED4", Offset = "0x15DCED4", VA = "0x15DCED4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99F110", Offset = "0x99F110")]
	private static int get_fillAmount(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E61")]
	[Address(RVA = "0x15DD0A4", Offset = "0x15DD0A4", VA = "0x15DD0A4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99F174", Offset = "0x99F174")]
	private static int get_fillClockwise(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E62")]
	[Address(RVA = "0x15DD26C", Offset = "0x15DD26C", VA = "0x15DD26C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99F1D8", Offset = "0x99F1D8")]
	private static int get_fillOrigin(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E63")]
	[Address(RVA = "0x15DD430", Offset = "0x15DD430", VA = "0x15DD430")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99F23C", Offset = "0x99F23C")]
	private static int get_alphaHitTestMinimumThreshold(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E64")]
	[Address(RVA = "0x15DD600", Offset = "0x15DD600", VA = "0x15DD600")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99F2A0", Offset = "0x99F2A0")]
	private static int get_useSpriteMesh(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E65")]
	[Address(RVA = "0x15DD7C8", Offset = "0x15DD7C8", VA = "0x15DD7C8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99F304", Offset = "0x99F304")]
	private static int get_defaultETC1GraphicMaterial(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E66")]
	[Address(RVA = "0x15DD91C", Offset = "0x15DD91C", VA = "0x15DD91C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99F368", Offset = "0x99F368")]
	private static int get_mainTexture(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E67")]
	[Address(RVA = "0x15DDB00", Offset = "0x15DDB00", VA = "0x15DDB00")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99F3CC", Offset = "0x99F3CC")]
	private static int get_hasBorder(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E68")]
	[Address(RVA = "0x15DDCD4", Offset = "0x15DDCD4", VA = "0x15DDCD4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99F430", Offset = "0x99F430")]
	private static int get_pixelsPerUnitMultiplier(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E69")]
	[Address(RVA = "0x15DDEA4", Offset = "0x15DDEA4", VA = "0x15DDEA4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99F494", Offset = "0x99F494")]
	private static int get_pixelsPerUnit(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E6A")]
	[Address(RVA = "0x15DE084", Offset = "0x15DE084", VA = "0x15DE084")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99F4F8", Offset = "0x99F4F8")]
	private static int get_material(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E6B")]
	[Address(RVA = "0x15DE268", Offset = "0x15DE268", VA = "0x15DE268")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99F55C", Offset = "0x99F55C")]
	private static int get_minWidth(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E6C")]
	[Address(RVA = "0x15DE47C", Offset = "0x15DE47C", VA = "0x15DE47C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99F5C0", Offset = "0x99F5C0")]
	private static int get_preferredWidth(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E6D")]
	[Address(RVA = "0x15DE690", Offset = "0x15DE690", VA = "0x15DE690")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99F624", Offset = "0x99F624")]
	private static int get_flexibleWidth(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E6E")]
	[Address(RVA = "0x15DE8A4", Offset = "0x15DE8A4", VA = "0x15DE8A4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99F688", Offset = "0x99F688")]
	private static int get_minHeight(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E6F")]
	[Address(RVA = "0x15DEAB8", Offset = "0x15DEAB8", VA = "0x15DEAB8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99F6EC", Offset = "0x99F6EC")]
	private static int get_preferredHeight(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E70")]
	[Address(RVA = "0x15DECCC", Offset = "0x15DECCC", VA = "0x15DECCC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99F750", Offset = "0x99F750")]
	private static int get_flexibleHeight(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E71")]
	[Address(RVA = "0x15DEEE0", Offset = "0x15DEEE0", VA = "0x15DEEE0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99F7B4", Offset = "0x99F7B4")]
	private static int get_layoutPriority(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E72")]
	[Address(RVA = "0x15DF0E8", Offset = "0x15DF0E8", VA = "0x15DF0E8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99F818", Offset = "0x99F818")]
	private static int set_sprite(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E73")]
	[Address(RVA = "0x15DF304", Offset = "0x15DF304", VA = "0x15DF304")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99F87C", Offset = "0x99F87C")]
	private static int set_overrideSprite(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E74")]
	[Address(RVA = "0x15DF520", Offset = "0x15DF520", VA = "0x15DF520")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99F8E0", Offset = "0x99F8E0")]
	private static int set_type(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E75")]
	[Address(RVA = "0x15DF744", Offset = "0x15DF744", VA = "0x15DF744")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99F944", Offset = "0x99F944")]
	private static int set_preserveAspect(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E76")]
	[Address(RVA = "0x15DF918", Offset = "0x15DF918", VA = "0x15DF918")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99F9A8", Offset = "0x99F9A8")]
	private static int set_fillCenter(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E77")]
	[Address(RVA = "0x15DFAEC", Offset = "0x15DFAEC", VA = "0x15DFAEC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99FA0C", Offset = "0x99FA0C")]
	private static int set_fillMethod(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E78")]
	[Address(RVA = "0x15DFD10", Offset = "0x15DFD10", VA = "0x15DFD10")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99FA70", Offset = "0x99FA70")]
	private static int set_fillAmount(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E79")]
	[Address(RVA = "0x15DFEE4", Offset = "0x15DFEE4", VA = "0x15DFEE4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99FAD4", Offset = "0x99FAD4")]
	private static int set_fillClockwise(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E7A")]
	[Address(RVA = "0x15E00B8", Offset = "0x15E00B8", VA = "0x15E00B8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99FB38", Offset = "0x99FB38")]
	private static int set_fillOrigin(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E7B")]
	[Address(RVA = "0x15E02A0", Offset = "0x15E02A0", VA = "0x15E02A0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99FB9C", Offset = "0x99FB9C")]
	private static int set_alphaHitTestMinimumThreshold(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E7C")]
	[Address(RVA = "0x15E046C", Offset = "0x15E046C", VA = "0x15E046C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99FC00", Offset = "0x99FC00")]
	private static int set_useSpriteMesh(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E7D")]
	[Address(RVA = "0x15E0640", Offset = "0x15E0640", VA = "0x15E0640")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99FC64", Offset = "0x99FC64")]
	private static int set_pixelsPerUnitMultiplier(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E7E")]
	[Address(RVA = "0x15E0814", Offset = "0x15E0814", VA = "0x15E0814")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99FCC8", Offset = "0x99FCC8")]
	private static int set_material(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E7F")]
	[Address(RVA = "0x15E1584", Offset = "0x15E1584", VA = "0x15E1584")]
	public UnityEngine_UI_ImageWrap()
	{
	}
}
[Token(Token = "0x20000AD")]
public class UnityEngine_UI_InputFieldWrap
{
	[Token(Token = "0x6000E80")]
	[Address(RVA = "0x15EB0E8", Offset = "0x15EB0E8", VA = "0x15EB0E8")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x6000E81")]
	[Address(RVA = "0x15E158C", Offset = "0x15E158C", VA = "0x15E158C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99FD2C", Offset = "0x99FD2C")]
	private static int SetTextWithoutNotify(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E82")]
	[Address(RVA = "0x15E1740", Offset = "0x15E1740", VA = "0x15E1740")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99FD90", Offset = "0x99FD90")]
	private static int MoveTextEnd(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E83")]
	[Address(RVA = "0x15E1914", Offset = "0x15E1914", VA = "0x15E1914")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99FDF4", Offset = "0x99FDF4")]
	private static int MoveTextStart(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E84")]
	[Address(RVA = "0x15E1AE8", Offset = "0x15E1AE8", VA = "0x15E1AE8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99FE58", Offset = "0x99FE58")]
	private static int OnBeginDrag(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E85")]
	[Address(RVA = "0x15E1D18", Offset = "0x15E1D18", VA = "0x15E1D18")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99FEBC", Offset = "0x99FEBC")]
	private static int OnDrag(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E86")]
	[Address(RVA = "0x15E1F48", Offset = "0x15E1F48", VA = "0x15E1F48")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99FF20", Offset = "0x99FF20")]
	private static int OnEndDrag(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E87")]
	[Address(RVA = "0x15E2178", Offset = "0x15E2178", VA = "0x15E2178")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99FF84", Offset = "0x99FF84")]
	private static int OnPointerDown(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E88")]
	[Address(RVA = "0x15E23A8", Offset = "0x15E23A8", VA = "0x15E23A8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99FFE8", Offset = "0x99FFE8")]
	private static int ProcessEvent(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E89")]
	[Address(RVA = "0x15E25C4", Offset = "0x15E25C4", VA = "0x15E25C4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A004C", Offset = "0x9A004C")]
	private static int OnUpdateSelected(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E8A")]
	[Address(RVA = "0x15E27F4", Offset = "0x15E27F4", VA = "0x15E27F4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A00B0", Offset = "0x9A00B0")]
	private static int ForceLabelUpdate(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E8B")]
	[Address(RVA = "0x15E297C", Offset = "0x15E297C", VA = "0x15E297C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A0114", Offset = "0x9A0114")]
	private static int Rebuild(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E8C")]
	[Address(RVA = "0x15E2BD4", Offset = "0x15E2BD4", VA = "0x15E2BD4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A0178", Offset = "0x9A0178")]
	private static int LayoutComplete(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E8D")]
	[Address(RVA = "0x15E2D8C", Offset = "0x15E2D8C", VA = "0x15E2D8C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A01DC", Offset = "0x9A01DC")]
	private static int GraphicUpdateComplete(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E8E")]
	[Address(RVA = "0x15E2F44", Offset = "0x15E2F44", VA = "0x15E2F44")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A0240", Offset = "0x9A0240")]
	private static int ActivateInputField(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E8F")]
	[Address(RVA = "0x15E30CC", Offset = "0x15E30CC", VA = "0x15E30CC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A02A4", Offset = "0x9A02A4")]
	private static int OnSelect(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E90")]
	[Address(RVA = "0x15E32FC", Offset = "0x15E32FC", VA = "0x15E32FC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A0308", Offset = "0x9A0308")]
	private static int OnPointerClick(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E91")]
	[Address(RVA = "0x15E352C", Offset = "0x15E352C", VA = "0x15E352C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A036C", Offset = "0x9A036C")]
	private static int DeactivateInputField(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E92")]
	[Address(RVA = "0x15E36B4", Offset = "0x15E36B4", VA = "0x15E36B4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A03D0", Offset = "0x9A03D0")]
	private static int OnDeselect(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E93")]
	[Address(RVA = "0x15E38E4", Offset = "0x15E38E4", VA = "0x15E38E4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A0434", Offset = "0x9A0434")]
	private static int OnSubmit(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E94")]
	[Address(RVA = "0x15E3B14", Offset = "0x15E3B14", VA = "0x15E3B14")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A0498", Offset = "0x9A0498")]
	private static int CalculateLayoutInputHorizontal(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E95")]
	[Address(RVA = "0x15E3CCC", Offset = "0x15E3CCC", VA = "0x15E3CCC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A04FC", Offset = "0x9A04FC")]
	private static int CalculateLayoutInputVertical(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E96")]
	[Address(RVA = "0x15E3E84", Offset = "0x15E3E84", VA = "0x15E3E84")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A0560", Offset = "0x9A0560")]
	private static int op_Equality(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E97")]
	[Address(RVA = "0x15E40C8", Offset = "0x15E40C8", VA = "0x15E40C8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A05C4", Offset = "0x9A05C4")]
	private static int get_shouldHideMobileInput(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E98")]
	[Address(RVA = "0x15E429C", Offset = "0x15E429C", VA = "0x15E429C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A0628", Offset = "0x9A0628")]
	private static int get_shouldActivateOnSelect(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E99")]
	[Address(RVA = "0x15E44A4", Offset = "0x15E44A4", VA = "0x15E44A4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A068C", Offset = "0x9A068C")]
	private static int get_text(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E9A")]
	[Address(RVA = "0x15E4668", Offset = "0x15E4668", VA = "0x15E4668")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A06F0", Offset = "0x9A06F0")]
	private static int get_isFocused(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E9B")]
	[Address(RVA = "0x15E4830", Offset = "0x15E4830", VA = "0x15E4830")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A0754", Offset = "0x9A0754")]
	private static int get_caretBlinkRate(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E9C")]
	[Address(RVA = "0x15E4A00", Offset = "0x15E4A00", VA = "0x15E4A00")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A07B8", Offset = "0x9A07B8")]
	private static int get_caretWidth(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E9D")]
	[Address(RVA = "0x15E4BC4", Offset = "0x15E4BC4", VA = "0x15E4BC4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A081C", Offset = "0x9A081C")]
	private static int get_textComponent(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E9E")]
	[Address(RVA = "0x15E4D64", Offset = "0x15E4D64", VA = "0x15E4D64")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A0880", Offset = "0x9A0880")]
	private static int get_placeholder(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000E9F")]
	[Address(RVA = "0x15E4F04", Offset = "0x15E4F04", VA = "0x15E4F04")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A08E4", Offset = "0x9A08E4")]
	private static int get_caretColor(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000EA0")]
	[Address(RVA = "0x15E50B0", Offset = "0x15E50B0", VA = "0x15E50B0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A0948", Offset = "0x9A0948")]
	private static int get_customCaretColor(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000EA1")]
	[Address(RVA = "0x15E5278", Offset = "0x15E5278", VA = "0x15E5278")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A09AC", Offset = "0x9A09AC")]
	private static int get_selectionColor(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000EA2")]
	[Address(RVA = "0x15E5424", Offset = "0x15E5424", VA = "0x15E5424")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A0A10", Offset = "0x9A0A10")]
	private static int get_onEndEdit(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000EA3")]
	[Address(RVA = "0x15E55C4", Offset = "0x15E55C4", VA = "0x15E55C4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A0A74", Offset = "0x9A0A74")]
	private static int get_onValueChanged(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000EA4")]
	[Address(RVA = "0x15E5764", Offset = "0x15E5764", VA = "0x15E5764")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A0AD8", Offset = "0x9A0AD8")]
	private static int get_onValidateInput(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000EA5")]
	[Address(RVA = "0x15E5904", Offset = "0x15E5904", VA = "0x15E5904")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A0B3C", Offset = "0x9A0B3C")]
	private static int get_characterLimit(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000EA6")]
	[Address(RVA = "0x15E5AC8", Offset = "0x15E5AC8", VA = "0x15E5AC8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A0BA0", Offset = "0x9A0BA0")]
	private static int get_contentType(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000EA7")]
	[Address(RVA = "0x15E5C84", Offset = "0x15E5C84", VA = "0x15E5C84")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A0C04", Offset = "0x9A0C04")]
	private static int get_lineType(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000EA8")]
	[Address(RVA = "0x15E5E40", Offset = "0x15E5E40", VA = "0x15E5E40")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A0C68", Offset = "0x9A0C68")]
	private static int get_inputType(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000EA9")]
	[Address(RVA = "0x15E5FFC", Offset = "0x15E5FFC", VA = "0x15E5FFC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A0CCC", Offset = "0x9A0CCC")]
	private static int get_touchScreenKeyboard(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000EAA")]
	[Address(RVA = "0x15E619C", Offset = "0x15E619C", VA = "0x15E619C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A0D30", Offset = "0x9A0D30")]
	private static int get_keyboardType(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000EAB")]
	[Address(RVA = "0x15E6358", Offset = "0x15E6358", VA = "0x15E6358")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A0D94", Offset = "0x9A0D94")]
	private static int get_characterValidation(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000EAC")]
	[Address(RVA = "0x15E6514", Offset = "0x15E6514", VA = "0x15E6514")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A0DF8", Offset = "0x9A0DF8")]
	private static int get_readOnly(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000EAD")]
	[Address(RVA = "0x15E66DC", Offset = "0x15E66DC", VA = "0x15E66DC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A0E5C", Offset = "0x9A0E5C")]
	private static int get_multiLine(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000EAE")]
	[Address(RVA = "0x15E68B0", Offset = "0x15E68B0", VA = "0x15E68B0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A0EC0", Offset = "0x9A0EC0")]
	private static int get_asteriskChar(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000EAF")]
	[Address(RVA = "0x15E6A74", Offset = "0x15E6A74", VA = "0x15E6A74")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A0F24", Offset = "0x9A0F24")]
	private static int get_wasCanceled(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000EB0")]
	[Address(RVA = "0x15E6C3C", Offset = "0x15E6C3C", VA = "0x15E6C3C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A0F88", Offset = "0x9A0F88")]
	private static int get_caretPosition(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000EB1")]
	[Address(RVA = "0x15E6E10", Offset = "0x15E6E10", VA = "0x15E6E10")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A0FEC", Offset = "0x9A0FEC")]
	private static int get_selectionAnchorPosition(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000EB2")]
	[Address(RVA = "0x15E6FE4", Offset = "0x15E6FE4", VA = "0x15E6FE4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A1050", Offset = "0x9A1050")]
	private static int get_selectionFocusPosition(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000EB3")]
	[Address(RVA = "0x15E71B8", Offset = "0x15E71B8", VA = "0x15E71B8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A10B4", Offset = "0x9A10B4")]
	private static int get_minWidth(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000EB4")]
	[Address(RVA = "0x15E73CC", Offset = "0x15E73CC", VA = "0x15E73CC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A1118", Offset = "0x9A1118")]
	private static int get_preferredWidth(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000EB5")]
	[Address(RVA = "0x15E75E0", Offset = "0x15E75E0", VA = "0x15E75E0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A117C", Offset = "0x9A117C")]
	private static int get_flexibleWidth(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000EB6")]
	[Address(RVA = "0x15E77F4", Offset = "0x15E77F4", VA = "0x15E77F4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A11E0", Offset = "0x9A11E0")]
	private static int get_minHeight(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000EB7")]
	[Address(RVA = "0x15E7A08", Offset = "0x15E7A08", VA = "0x15E7A08")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A1244", Offset = "0x9A1244")]
	private static int get_preferredHeight(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000EB8")]
	[Address(RVA = "0x15E7C1C", Offset = "0x15E7C1C", VA = "0x15E7C1C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A12A8", Offset = "0x9A12A8")]
	private static int get_flexibleHeight(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000EB9")]
	[Address(RVA = "0x15E7E30", Offset = "0x15E7E30", VA = "0x15E7E30")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A130C", Offset = "0x9A130C")]
	private static int get_layoutPriority(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000EBA")]
	[Address(RVA = "0x15E8038", Offset = "0x15E8038", VA = "0x15E8038")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A1370", Offset = "0x9A1370")]
	private static int set_shouldHideMobileInput(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000EBB")]
	[Address(RVA = "0x15E820C", Offset = "0x15E820C", VA = "0x15E820C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A13D4", Offset = "0x9A13D4")]
	private static int set_shouldActivateOnSelect(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000EBC")]
	[Address(RVA = "0x15E8414", Offset = "0x15E8414", VA = "0x15E8414")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A1438", Offset = "0x9A1438")]
	private static int set_text(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000EBD")]
	[Address(RVA = "0x15E85C8", Offset = "0x15E85C8", VA = "0x15E85C8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A149C", Offset = "0x9A149C")]
	private static int set_caretBlinkRate(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000EBE")]
	[Address(RVA = "0x15E879C", Offset = "0x15E879C", VA = "0x15E879C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A1500", Offset = "0x9A1500")]
	private static int set_caretWidth(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000EBF")]
	[Address(RVA = "0x15E8984", Offset = "0x15E8984", VA = "0x15E8984")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A1564", Offset = "0x9A1564")]
	private static int set_textComponent(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000EC0")]
	[Address(RVA = "0x15E8B80", Offset = "0x15E8B80", VA = "0x15E8B80")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A15C8", Offset = "0x9A15C8")]
	private static int set_placeholder(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000EC1")]
	[Address(RVA = "0x15E8D7C", Offset = "0x15E8D7C", VA = "0x15E8D7C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A162C", Offset = "0x9A162C")]
	private static int set_caretColor(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000EC2")]
	[Address(RVA = "0x15E8F28", Offset = "0x15E8F28", VA = "0x15E8F28")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A1690", Offset = "0x9A1690")]
	private static int set_customCaretColor(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000EC3")]
	[Address(RVA = "0x15E90FC", Offset = "0x15E90FC", VA = "0x15E90FC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A16F4", Offset = "0x9A16F4")]
	private static int set_selectionColor(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000EC4")]
	[Address(RVA = "0x15E92A8", Offset = "0x15E92A8", VA = "0x15E92A8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A1758", Offset = "0x9A1758")]
	private static int set_onEndEdit(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000EC5")]
	[Address(RVA = "0x15E94A4", Offset = "0x15E94A4", VA = "0x15E94A4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A17BC", Offset = "0x9A17BC")]
	private static int set_onValueChanged(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000EC6")]
	[Address(RVA = "0x15E96A0", Offset = "0x15E96A0", VA = "0x15E96A0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A1820", Offset = "0x9A1820")]
	private static int set_onValidateInput(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000EC7")]
	[Address(RVA = "0x15E9880", Offset = "0x15E9880", VA = "0x15E9880")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A1884", Offset = "0x9A1884")]
	private static int set_characterLimit(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000EC8")]
	[Address(RVA = "0x15E9A68", Offset = "0x15E9A68", VA = "0x15E9A68")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A18E8", Offset = "0x9A18E8")]
	private static int set_contentType(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000EC9")]
	[Address(RVA = "0x15E9C8C", Offset = "0x15E9C8C", VA = "0x15E9C8C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A194C", Offset = "0x9A194C")]
	private static int set_lineType(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000ECA")]
	[Address(RVA = "0x15E9EB0", Offset = "0x15E9EB0", VA = "0x15E9EB0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A19B0", Offset = "0x9A19B0")]
	private static int set_inputType(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000ECB")]
	[Address(RVA = "0x15EA0D4", Offset = "0x15EA0D4", VA = "0x15EA0D4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A1A14", Offset = "0x9A1A14")]
	private static int set_keyboardType(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000ECC")]
	[Address(RVA = "0x15EA2F8", Offset = "0x15EA2F8", VA = "0x15EA2F8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A1A78", Offset = "0x9A1A78")]
	private static int set_characterValidation(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000ECD")]
	[Address(RVA = "0x15EA51C", Offset = "0x15EA51C", VA = "0x15EA51C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A1ADC", Offset = "0x9A1ADC")]
	private static int set_readOnly(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000ECE")]
	[Address(RVA = "0x15EA6E8", Offset = "0x15EA6E8", VA = "0x15EA6E8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A1B40", Offset = "0x9A1B40")]
	private static int set_asteriskChar(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000ECF")]
	[Address(RVA = "0x15EA8C8", Offset = "0x15EA8C8", VA = "0x15EA8C8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A1BA4", Offset = "0x9A1BA4")]
	private static int set_caretPosition(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000ED0")]
	[Address(RVA = "0x15EAAB0", Offset = "0x15EAAB0", VA = "0x15EAAB0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A1C08", Offset = "0x9A1C08")]
	private static int set_selectionAnchorPosition(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000ED1")]
	[Address(RVA = "0x15EAC98", Offset = "0x15EAC98", VA = "0x15EAC98")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A1C6C", Offset = "0x9A1C6C")]
	private static int set_selectionFocusPosition(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000ED2")]
	[Address(RVA = "0x15EAE80", Offset = "0x15EAE80", VA = "0x15EAE80")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A1CD0", Offset = "0x9A1CD0")]
	private static int UnityEngine_UI_InputField_OnValidateInput(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000ED3")]
	[Address(RVA = "0x15EC460", Offset = "0x15EC460", VA = "0x15EC460")]
	public UnityEngine_UI_InputFieldWrap()
	{
	}
}
[Token(Token = "0x20000AE")]
public class UnityEngine_UI_MaskableGraphicWrap
{
	[Token(Token = "0x6000ED4")]
	[Address(RVA = "0xD00B24", Offset = "0xD00B24", VA = "0xD00B24")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x6000ED5")]
	[Address(RVA = "0xCFF160", Offset = "0xCFF160", VA = "0xCFF160")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A1D34", Offset = "0x9A1D34")]
	private static int GetModifiedMaterial(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000ED6")]
	[Address(RVA = "0xCFF3A8", Offset = "0xCFF3A8", VA = "0xCFF3A8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A1D98", Offset = "0x9A1D98")]
	private static int Cull(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000ED7")]
	[Address(RVA = "0xCFF63C", Offset = "0xCFF63C", VA = "0xCFF63C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A1DFC", Offset = "0x9A1DFC")]
	private static int SetClipRect(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000ED8")]
	[Address(RVA = "0xCFF8D0", Offset = "0xCFF8D0", VA = "0xCFF8D0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A1E60", Offset = "0x9A1E60")]
	private static int SetClipSoftness(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000ED9")]
	[Address(RVA = "0xCFFAB0", Offset = "0xCFFAB0", VA = "0xCFFAB0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A1EC4", Offset = "0x9A1EC4")]
	private static int RecalculateClipping(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000EDA")]
	[Address(RVA = "0xCFFC68", Offset = "0xCFFC68", VA = "0xCFFC68")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A1F28", Offset = "0x9A1F28")]
	private static int RecalculateMasking(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000EDB")]
	[Address(RVA = "0xCFFE20", Offset = "0xCFFE20", VA = "0xCFFE20")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A1F8C", Offset = "0x9A1F8C")]
	private static int op_Equality(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000EDC")]
	[Address(RVA = "0xD00064", Offset = "0xD00064", VA = "0xD00064")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A1FF0", Offset = "0x9A1FF0")]
	private static int get_onCullStateChanged(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000EDD")]
	[Address(RVA = "0xD00204", Offset = "0xD00204", VA = "0xD00204")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A2054", Offset = "0x9A2054")]
	private static int get_maskable(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000EDE")]
	[Address(RVA = "0xD003CC", Offset = "0xD003CC", VA = "0xD003CC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A20B8", Offset = "0x9A20B8")]
	private static int get_isMaskingGraphic(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000EDF")]
	[Address(RVA = "0xD00594", Offset = "0xD00594", VA = "0xD00594")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A211C", Offset = "0x9A211C")]
	private static int set_onCullStateChanged(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000EE0")]
	[Address(RVA = "0xD0077C", Offset = "0xD0077C", VA = "0xD0077C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A2180", Offset = "0x9A2180")]
	private static int set_maskable(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000EE1")]
	[Address(RVA = "0xD00950", Offset = "0xD00950", VA = "0xD00950")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A21E4", Offset = "0x9A21E4")]
	private static int set_isMaskingGraphic(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000EE2")]
	[Address(RVA = "0xD00F28", Offset = "0xD00F28", VA = "0xD00F28")]
	public UnityEngine_UI_MaskableGraphicWrap()
	{
	}
}
[Token(Token = "0x20000AF")]
public class UnityEngine_UI_RawImageWrap
{
	[Token(Token = "0x6000EE3")]
	[Address(RVA = "0xD01C48", Offset = "0xD01C48", VA = "0xD01C48")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x6000EE4")]
	[Address(RVA = "0xD00F30", Offset = "0xD00F30", VA = "0xD00F30")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A2248", Offset = "0x9A2248")]
	private static int SetNativeSize(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000EE5")]
	[Address(RVA = "0xD010E8", Offset = "0xD010E8", VA = "0xD010E8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A22AC", Offset = "0x9A22AC")]
	private static int op_Equality(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000EE6")]
	[Address(RVA = "0xD0132C", Offset = "0xD0132C", VA = "0xD0132C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A2310", Offset = "0x9A2310")]
	private static int get_mainTexture(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000EE7")]
	[Address(RVA = "0xD01510", Offset = "0xD01510", VA = "0xD01510")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A2374", Offset = "0x9A2374")]
	private static int get_texture(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000EE8")]
	[Address(RVA = "0xD016B0", Offset = "0xD016B0", VA = "0xD016B0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A23D8", Offset = "0x9A23D8")]
	private static int get_uvRect(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000EE9")]
	[Address(RVA = "0xD0185C", Offset = "0xD0185C", VA = "0xD0185C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A243C", Offset = "0x9A243C")]
	private static int set_texture(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000EEA")]
	[Address(RVA = "0xD01A58", Offset = "0xD01A58", VA = "0xD01A58")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A24A0", Offset = "0x9A24A0")]
	private static int set_uvRect(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000EEB")]
	[Address(RVA = "0xD01EE8", Offset = "0xD01EE8", VA = "0xD01EE8")]
	public UnityEngine_UI_RawImageWrap()
	{
	}
}
[Token(Token = "0x20000B0")]
public class UnityEngine_UI_SelectableWrap
{
	[Token(Token = "0x6000EEC")]
	[Address(RVA = "0xD06130", Offset = "0xD06130", VA = "0xD06130")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x6000EED")]
	[Address(RVA = "0xD01EF0", Offset = "0xD01EF0", VA = "0xD01EF0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A2504", Offset = "0x9A2504")]
	private static int AllSelectablesNoAlloc(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000EEE")]
	[Address(RVA = "0xD0209C", Offset = "0xD0209C", VA = "0xD0209C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A2568", Offset = "0x9A2568")]
	private static int IsInteractable(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000EEF")]
	[Address(RVA = "0xD02290", Offset = "0xD02290", VA = "0xD02290")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A25CC", Offset = "0x9A25CC")]
	private static int FindSelectable(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000EF0")]
	[Address(RVA = "0xD02454", Offset = "0xD02454", VA = "0xD02454")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A2630", Offset = "0x9A2630")]
	private static int FindSelectableOnLeft(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000EF1")]
	[Address(RVA = "0xD02624", Offset = "0xD02624", VA = "0xD02624")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A2694", Offset = "0x9A2694")]
	private static int FindSelectableOnRight(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000EF2")]
	[Address(RVA = "0xD027F4", Offset = "0xD027F4", VA = "0xD027F4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A26F8", Offset = "0x9A26F8")]
	private static int FindSelectableOnUp(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000EF3")]
	[Address(RVA = "0xD029C4", Offset = "0xD029C4", VA = "0xD029C4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A275C", Offset = "0x9A275C")]
	private static int FindSelectableOnDown(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000EF4")]
	[Address(RVA = "0xD02B94", Offset = "0xD02B94", VA = "0xD02B94")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A27C0", Offset = "0x9A27C0")]
	private static int OnMove(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000EF5")]
	[Address(RVA = "0xD02DC4", Offset = "0xD02DC4", VA = "0xD02DC4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A2824", Offset = "0x9A2824")]
	private static int OnPointerDown(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000EF6")]
	[Address(RVA = "0xD02FF4", Offset = "0xD02FF4", VA = "0xD02FF4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A2888", Offset = "0x9A2888")]
	private static int OnPointerUp(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000EF7")]
	[Address(RVA = "0xD03224", Offset = "0xD03224", VA = "0xD03224")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A28EC", Offset = "0x9A28EC")]
	private static int OnPointerEnter(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000EF8")]
	[Address(RVA = "0xD03454", Offset = "0xD03454", VA = "0xD03454")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A2950", Offset = "0x9A2950")]
	private static int OnPointerExit(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000EF9")]
	[Address(RVA = "0xD03684", Offset = "0xD03684", VA = "0xD03684")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A29B4", Offset = "0x9A29B4")]
	private static int OnSelect(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000EFA")]
	[Address(RVA = "0xD038B4", Offset = "0xD038B4", VA = "0xD038B4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A2A18", Offset = "0x9A2A18")]
	private static int OnDeselect(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000EFB")]
	[Address(RVA = "0xD03AE4", Offset = "0xD03AE4", VA = "0xD03AE4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A2A7C", Offset = "0x9A2A7C")]
	private static int Select(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000EFC")]
	[Address(RVA = "0xD03C9C", Offset = "0xD03C9C", VA = "0xD03C9C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A2AE0", Offset = "0x9A2AE0")]
	private static int op_Equality(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000EFD")]
	[Address(RVA = "0xD03EE0", Offset = "0xD03EE0", VA = "0xD03EE0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A2B44", Offset = "0x9A2B44")]
	private static int get_allSelectablesArray(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000EFE")]
	[Address(RVA = "0xD04034", Offset = "0xD04034", VA = "0xD04034")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A2BA8", Offset = "0x9A2BA8")]
	private static int get_allSelectableCount(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000EFF")]
	[Address(RVA = "0xD041C8", Offset = "0xD041C8", VA = "0xD041C8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A2C0C", Offset = "0x9A2C0C")]
	private static int get_navigation(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F00")]
	[Address(RVA = "0xD04380", Offset = "0xD04380", VA = "0xD04380")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A2C70", Offset = "0x9A2C70")]
	private static int get_transition(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F01")]
	[Address(RVA = "0xD0453C", Offset = "0xD0453C", VA = "0xD0453C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A2CD4", Offset = "0x9A2CD4")]
	private static int get_colors(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F02")]
	[Address(RVA = "0xD046F8", Offset = "0xD046F8", VA = "0xD046F8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A2D38", Offset = "0x9A2D38")]
	private static int get_spriteState(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F03")]
	[Address(RVA = "0xD048AC", Offset = "0xD048AC", VA = "0xD048AC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A2D9C", Offset = "0x9A2D9C")]
	private static int get_animationTriggers(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F04")]
	[Address(RVA = "0xD04A4C", Offset = "0xD04A4C", VA = "0xD04A4C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A2E00", Offset = "0x9A2E00")]
	private static int get_targetGraphic(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F05")]
	[Address(RVA = "0xD04BEC", Offset = "0xD04BEC", VA = "0xD04BEC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A2E64", Offset = "0x9A2E64")]
	private static int get_interactable(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F06")]
	[Address(RVA = "0xD04DB4", Offset = "0xD04DB4", VA = "0xD04DB4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A2EC8", Offset = "0x9A2EC8")]
	private static int get_image(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F07")]
	[Address(RVA = "0xD04F64", Offset = "0xD04F64", VA = "0xD04F64")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A2F2C", Offset = "0x9A2F2C")]
	private static int get_animator(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F08")]
	[Address(RVA = "0xD05114", Offset = "0xD05114", VA = "0xD05114")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A2F90", Offset = "0x9A2F90")]
	private static int set_navigation(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F09")]
	[Address(RVA = "0xD05330", Offset = "0xD05330", VA = "0xD05330")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A2FF4", Offset = "0x9A2FF4")]
	private static int set_transition(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F0A")]
	[Address(RVA = "0xD05554", Offset = "0xD05554", VA = "0xD05554")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A3058", Offset = "0x9A3058")]
	private static int set_colors(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F0B")]
	[Address(RVA = "0xD05774", Offset = "0xD05774", VA = "0xD05774")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A30BC", Offset = "0x9A30BC")]
	private static int set_spriteState(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F0C")]
	[Address(RVA = "0xD0597C", Offset = "0xD0597C", VA = "0xD0597C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A3120", Offset = "0x9A3120")]
	private static int set_animationTriggers(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F0D")]
	[Address(RVA = "0xD05B78", Offset = "0xD05B78", VA = "0xD05B78")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A3184", Offset = "0x9A3184")]
	private static int set_targetGraphic(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F0E")]
	[Address(RVA = "0xD05D74", Offset = "0xD05D74", VA = "0xD05D74")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A31E8", Offset = "0x9A31E8")]
	private static int set_interactable(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F0F")]
	[Address(RVA = "0xD05F48", Offset = "0xD05F48", VA = "0xD05F48")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A324C", Offset = "0x9A324C")]
	private static int set_image(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F10")]
	[Address(RVA = "0xD06A48", Offset = "0xD06A48", VA = "0xD06A48")]
	public UnityEngine_UI_SelectableWrap()
	{
	}
}
[Token(Token = "0x20000B1")]
public class UnityEngine_UI_SliderWrap
{
	[Token(Token = "0x6000F11")]
	[Address(RVA = "0xD0A870", Offset = "0xD0A870", VA = "0xD0A870")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x6000F12")]
	[Address(RVA = "0xD06A50", Offset = "0xD06A50", VA = "0xD06A50")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A32B0", Offset = "0x9A32B0")]
	private static int SetValueWithoutNotify(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F13")]
	[Address(RVA = "0xD06C58", Offset = "0xD06C58", VA = "0xD06C58")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A3314", Offset = "0x9A3314")]
	private static int Rebuild(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F14")]
	[Address(RVA = "0xD06EB0", Offset = "0xD06EB0", VA = "0xD06EB0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A3378", Offset = "0x9A3378")]
	private static int LayoutComplete(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F15")]
	[Address(RVA = "0xD07068", Offset = "0xD07068", VA = "0xD07068")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A33DC", Offset = "0x9A33DC")]
	private static int GraphicUpdateComplete(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F16")]
	[Address(RVA = "0xD07220", Offset = "0xD07220", VA = "0xD07220")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A3440", Offset = "0x9A3440")]
	private static int OnPointerDown(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F17")]
	[Address(RVA = "0xD07450", Offset = "0xD07450", VA = "0xD07450")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A34A4", Offset = "0x9A34A4")]
	private static int OnDrag(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F18")]
	[Address(RVA = "0xD07680", Offset = "0xD07680", VA = "0xD07680")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A3508", Offset = "0x9A3508")]
	private static int OnMove(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F19")]
	[Address(RVA = "0xD078B0", Offset = "0xD078B0", VA = "0xD078B0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A356C", Offset = "0x9A356C")]
	private static int FindSelectableOnLeft(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F1A")]
	[Address(RVA = "0xD07A80", Offset = "0xD07A80", VA = "0xD07A80")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A35D0", Offset = "0x9A35D0")]
	private static int FindSelectableOnRight(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F1B")]
	[Address(RVA = "0xD07C50", Offset = "0xD07C50", VA = "0xD07C50")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A3634", Offset = "0x9A3634")]
	private static int FindSelectableOnUp(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F1C")]
	[Address(RVA = "0xD07E20", Offset = "0xD07E20", VA = "0xD07E20")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A3698", Offset = "0x9A3698")]
	private static int FindSelectableOnDown(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F1D")]
	[Address(RVA = "0xD07FF0", Offset = "0xD07FF0", VA = "0xD07FF0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A36FC", Offset = "0x9A36FC")]
	private static int OnInitializePotentialDrag(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F1E")]
	[Address(RVA = "0xD08220", Offset = "0xD08220", VA = "0xD08220")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A3760", Offset = "0x9A3760")]
	private static int SetDirection(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F1F")]
	[Address(RVA = "0xD08488", Offset = "0xD08488", VA = "0xD08488")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A37C4", Offset = "0x9A37C4")]
	private static int op_Equality(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F20")]
	[Address(RVA = "0xD086CC", Offset = "0xD086CC", VA = "0xD086CC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A3828", Offset = "0x9A3828")]
	private static int get_fillRect(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F21")]
	[Address(RVA = "0xD08874", Offset = "0xD08874", VA = "0xD08874")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A388C", Offset = "0x9A388C")]
	private static int get_handleRect(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F22")]
	[Address(RVA = "0xD08A1C", Offset = "0xD08A1C", VA = "0xD08A1C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A38F0", Offset = "0x9A38F0")]
	private static int get_direction(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F23")]
	[Address(RVA = "0xD08BD8", Offset = "0xD08BD8", VA = "0xD08BD8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A3954", Offset = "0x9A3954")]
	private static int get_minValue(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F24")]
	[Address(RVA = "0xD08DA8", Offset = "0xD08DA8", VA = "0xD08DA8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A39B8", Offset = "0x9A39B8")]
	private static int get_maxValue(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F25")]
	[Address(RVA = "0xD08F78", Offset = "0xD08F78", VA = "0xD08F78")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A3A1C", Offset = "0x9A3A1C")]
	private static int get_wholeNumbers(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F26")]
	[Address(RVA = "0xD09140", Offset = "0xD09140", VA = "0xD09140")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A3A80", Offset = "0x9A3A80")]
	private static int get_value(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F27")]
	[Address(RVA = "0xD09354", Offset = "0xD09354", VA = "0xD09354")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A3AE4", Offset = "0x9A3AE4")]
	private static int get_normalizedValue(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F28")]
	[Address(RVA = "0xD09534", Offset = "0xD09534", VA = "0xD09534")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A3B48", Offset = "0x9A3B48")]
	private static int get_onValueChanged(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F29")]
	[Address(RVA = "0xD096D4", Offset = "0xD096D4", VA = "0xD096D4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A3BAC", Offset = "0x9A3BAC")]
	private static int set_fillRect(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F2A")]
	[Address(RVA = "0xD098F0", Offset = "0xD098F0", VA = "0xD098F0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A3C10", Offset = "0x9A3C10")]
	private static int set_handleRect(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F2B")]
	[Address(RVA = "0xD09B0C", Offset = "0xD09B0C", VA = "0xD09B0C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A3C74", Offset = "0x9A3C74")]
	private static int set_direction(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F2C")]
	[Address(RVA = "0xD09D30", Offset = "0xD09D30", VA = "0xD09D30")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A3CD8", Offset = "0x9A3CD8")]
	private static int set_minValue(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F2D")]
	[Address(RVA = "0xD09F04", Offset = "0xD09F04", VA = "0xD09F04")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A3D3C", Offset = "0x9A3D3C")]
	private static int set_maxValue(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F2E")]
	[Address(RVA = "0xD0A0D8", Offset = "0xD0A0D8", VA = "0xD0A0D8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A3DA0", Offset = "0x9A3DA0")]
	private static int set_wholeNumbers(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F2F")]
	[Address(RVA = "0xD0A2AC", Offset = "0xD0A2AC", VA = "0xD0A2AC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A3E04", Offset = "0x9A3E04")]
	private static int set_value(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F30")]
	[Address(RVA = "0xD0A4B4", Offset = "0xD0A4B4", VA = "0xD0A4B4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A3E68", Offset = "0x9A3E68")]
	private static int set_normalizedValue(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F31")]
	[Address(RVA = "0xD0A688", Offset = "0xD0A688", VA = "0xD0A688")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A3ECC", Offset = "0x9A3ECC")]
	private static int set_onValueChanged(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F32")]
	[Address(RVA = "0xD0B0A4", Offset = "0xD0B0A4", VA = "0xD0B0A4")]
	public UnityEngine_UI_SliderWrap()
	{
	}
}
[Token(Token = "0x20000B2")]
public class UnityEngine_UI_TextWrap
{
	[Token(Token = "0x6000F33")]
	[Address(RVA = "0xD102DC", Offset = "0xD102DC", VA = "0xD102DC")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x6000F34")]
	[Address(RVA = "0xD0B0AC", Offset = "0xD0B0AC", VA = "0xD0B0AC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A3F30", Offset = "0x9A3F30")]
	private static int FontTextureChanged(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F35")]
	[Address(RVA = "0xD0B234", Offset = "0xD0B234", VA = "0xD0B234")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A3F94", Offset = "0x9A3F94")]
	private static int GetGenerationSettings(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F36")]
	[Address(RVA = "0xD0B418", Offset = "0xD0B418", VA = "0xD0B418")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A3FF8", Offset = "0x9A3FF8")]
	private static int GetTextAnchorPivot(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F37")]
	[Address(RVA = "0xD0B610", Offset = "0xD0B610", VA = "0xD0B610")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A405C", Offset = "0x9A405C")]
	private static int CalculateLayoutInputHorizontal(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F38")]
	[Address(RVA = "0xD0B7C8", Offset = "0xD0B7C8", VA = "0xD0B7C8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A40C0", Offset = "0x9A40C0")]
	private static int CalculateLayoutInputVertical(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F39")]
	[Address(RVA = "0xD0B980", Offset = "0xD0B980", VA = "0xD0B980")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A4124", Offset = "0x9A4124")]
	private static int op_Equality(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F3A")]
	[Address(RVA = "0xD0BBC4", Offset = "0xD0BBC4", VA = "0xD0BBC4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A4188", Offset = "0x9A4188")]
	private static int get_cachedTextGenerator(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F3B")]
	[Address(RVA = "0xD0BD7C", Offset = "0xD0BD7C", VA = "0xD0BD7C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A41EC", Offset = "0x9A41EC")]
	private static int get_cachedTextGeneratorForLayout(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F3C")]
	[Address(RVA = "0xD0BF34", Offset = "0xD0BF34", VA = "0xD0BF34")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A4250", Offset = "0x9A4250")]
	private static int get_mainTexture(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F3D")]
	[Address(RVA = "0xD0C118", Offset = "0xD0C118", VA = "0xD0C118")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A42B4", Offset = "0x9A42B4")]
	private static int get_font(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F3E")]
	[Address(RVA = "0xD0C2D0", Offset = "0xD0C2D0", VA = "0xD0C2D0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A4318", Offset = "0x9A4318")]
	private static int get_text(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F3F")]
	[Address(RVA = "0xD0C4D8", Offset = "0xD0C4D8", VA = "0xD0C4D8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A437C", Offset = "0x9A437C")]
	private static int get_supportRichText(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F40")]
	[Address(RVA = "0xD0C6AC", Offset = "0xD0C6AC", VA = "0xD0C6AC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A43E0", Offset = "0x9A43E0")]
	private static int get_resizeTextForBestFit(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F41")]
	[Address(RVA = "0xD0C880", Offset = "0xD0C880", VA = "0xD0C880")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A4444", Offset = "0x9A4444")]
	private static int get_resizeTextMinSize(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F42")]
	[Address(RVA = "0xD0CA54", Offset = "0xD0CA54", VA = "0xD0CA54")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A44A8", Offset = "0x9A44A8")]
	private static int get_resizeTextMaxSize(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F43")]
	[Address(RVA = "0xD0CC28", Offset = "0xD0CC28", VA = "0xD0CC28")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A450C", Offset = "0x9A450C")]
	private static int get_alignment(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F44")]
	[Address(RVA = "0xD0CDF4", Offset = "0xD0CDF4", VA = "0xD0CDF4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A4570", Offset = "0x9A4570")]
	private static int get_alignByGeometry(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F45")]
	[Address(RVA = "0xD0CFC8", Offset = "0xD0CFC8", VA = "0xD0CFC8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A45D4", Offset = "0x9A45D4")]
	private static int get_fontSize(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F46")]
	[Address(RVA = "0xD0D19C", Offset = "0xD0D19C", VA = "0xD0D19C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A4638", Offset = "0x9A4638")]
	private static int get_horizontalOverflow(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F47")]
	[Address(RVA = "0xD0D368", Offset = "0xD0D368", VA = "0xD0D368")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A469C", Offset = "0x9A469C")]
	private static int get_verticalOverflow(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F48")]
	[Address(RVA = "0xD0D534", Offset = "0xD0D534", VA = "0xD0D534")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A4700", Offset = "0x9A4700")]
	private static int get_lineSpacing(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F49")]
	[Address(RVA = "0xD0D714", Offset = "0xD0D714", VA = "0xD0D714")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A4764", Offset = "0x9A4764")]
	private static int get_fontStyle(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F4A")]
	[Address(RVA = "0xD0D8E0", Offset = "0xD0D8E0", VA = "0xD0D8E0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A47C8", Offset = "0x9A47C8")]
	private static int get_pixelsPerUnit(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F4B")]
	[Address(RVA = "0xD0DAC0", Offset = "0xD0DAC0", VA = "0xD0DAC0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A482C", Offset = "0x9A482C")]
	private static int get_minWidth(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F4C")]
	[Address(RVA = "0xD0DCD4", Offset = "0xD0DCD4", VA = "0xD0DCD4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A4890", Offset = "0x9A4890")]
	private static int get_preferredWidth(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F4D")]
	[Address(RVA = "0xD0DEE8", Offset = "0xD0DEE8", VA = "0xD0DEE8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A48F4", Offset = "0x9A48F4")]
	private static int get_flexibleWidth(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F4E")]
	[Address(RVA = "0xD0E0FC", Offset = "0xD0E0FC", VA = "0xD0E0FC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A4958", Offset = "0x9A4958")]
	private static int get_minHeight(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F4F")]
	[Address(RVA = "0xD0E310", Offset = "0xD0E310", VA = "0xD0E310")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A49BC", Offset = "0x9A49BC")]
	private static int get_preferredHeight(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F50")]
	[Address(RVA = "0xD0E524", Offset = "0xD0E524", VA = "0xD0E524")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A4A20", Offset = "0x9A4A20")]
	private static int get_flexibleHeight(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F51")]
	[Address(RVA = "0xD0E738", Offset = "0xD0E738", VA = "0xD0E738")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A4A84", Offset = "0x9A4A84")]
	private static int get_layoutPriority(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F52")]
	[Address(RVA = "0xD0E940", Offset = "0xD0E940", VA = "0xD0E940")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A4AE8", Offset = "0x9A4AE8")]
	private static int set_font(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F53")]
	[Address(RVA = "0xD0EB5C", Offset = "0xD0EB5C", VA = "0xD0EB5C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A4B4C", Offset = "0x9A4B4C")]
	private static int set_text(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F54")]
	[Address(RVA = "0xD0ED44", Offset = "0xD0ED44", VA = "0xD0ED44")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A4BB0", Offset = "0x9A4BB0")]
	private static int set_supportRichText(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F55")]
	[Address(RVA = "0xD0EF18", Offset = "0xD0EF18", VA = "0xD0EF18")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A4C14", Offset = "0x9A4C14")]
	private static int set_resizeTextForBestFit(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F56")]
	[Address(RVA = "0xD0F0EC", Offset = "0xD0F0EC", VA = "0xD0F0EC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A4C78", Offset = "0x9A4C78")]
	private static int set_resizeTextMinSize(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F57")]
	[Address(RVA = "0xD0F2D4", Offset = "0xD0F2D4", VA = "0xD0F2D4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A4CDC", Offset = "0x9A4CDC")]
	private static int set_resizeTextMaxSize(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F58")]
	[Address(RVA = "0xD0F4BC", Offset = "0xD0F4BC", VA = "0xD0F4BC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A4D40", Offset = "0x9A4D40")]
	private static int set_alignment(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F59")]
	[Address(RVA = "0xD0F6E0", Offset = "0xD0F6E0", VA = "0xD0F6E0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A4DA4", Offset = "0x9A4DA4")]
	private static int set_alignByGeometry(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F5A")]
	[Address(RVA = "0xD0F8B4", Offset = "0xD0F8B4", VA = "0xD0F8B4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A4E08", Offset = "0x9A4E08")]
	private static int set_fontSize(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F5B")]
	[Address(RVA = "0xD0FA9C", Offset = "0xD0FA9C", VA = "0xD0FA9C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A4E6C", Offset = "0x9A4E6C")]
	private static int set_horizontalOverflow(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F5C")]
	[Address(RVA = "0xD0FCC0", Offset = "0xD0FCC0", VA = "0xD0FCC0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A4ED0", Offset = "0x9A4ED0")]
	private static int set_verticalOverflow(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F5D")]
	[Address(RVA = "0xD0FEE4", Offset = "0xD0FEE4", VA = "0xD0FEE4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A4F34", Offset = "0x9A4F34")]
	private static int set_lineSpacing(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F5E")]
	[Address(RVA = "0xD100B8", Offset = "0xD100B8", VA = "0xD100B8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A4F98", Offset = "0x9A4F98")]
	private static int set_fontStyle(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F5F")]
	[Address(RVA = "0xD10D9C", Offset = "0xD10D9C", VA = "0xD10D9C")]
	public UnityEngine_UI_TextWrap()
	{
	}
}
[Token(Token = "0x20000B3")]
public class UnityEngine_UI_ToggleWrap
{
	[Token(Token = "0x6000F60")]
	[Address(RVA = "0xD12E04", Offset = "0xD12E04", VA = "0xD12E04")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x6000F61")]
	[Address(RVA = "0xD10DA4", Offset = "0xD10DA4", VA = "0xD10DA4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A4FFC", Offset = "0x9A4FFC")]
	private static int Rebuild(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F62")]
	[Address(RVA = "0xD10FFC", Offset = "0xD10FFC", VA = "0xD10FFC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A5060", Offset = "0x9A5060")]
	private static int LayoutComplete(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F63")]
	[Address(RVA = "0xD111B4", Offset = "0xD111B4", VA = "0xD111B4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A50C4", Offset = "0x9A50C4")]
	private static int GraphicUpdateComplete(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F64")]
	[Address(RVA = "0xD1136C", Offset = "0xD1136C", VA = "0xD1136C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A5128", Offset = "0x9A5128")]
	private static int SetIsOnWithoutNotify(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F65")]
	[Address(RVA = "0xD11540", Offset = "0xD11540", VA = "0xD11540")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A518C", Offset = "0x9A518C")]
	private static int OnPointerClick(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F66")]
	[Address(RVA = "0xD11770", Offset = "0xD11770", VA = "0xD11770")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A51F0", Offset = "0x9A51F0")]
	private static int OnSubmit(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F67")]
	[Address(RVA = "0xD119A0", Offset = "0xD119A0", VA = "0xD119A0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A5254", Offset = "0x9A5254")]
	private static int op_Equality(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F68")]
	[Address(RVA = "0xD11BE4", Offset = "0xD11BE4", VA = "0xD11BE4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A52B8", Offset = "0x9A52B8")]
	private static int get_toggleTransition(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F69")]
	[Address(RVA = "0xD11DA0", Offset = "0xD11DA0", VA = "0xD11DA0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A531C", Offset = "0x9A531C")]
	private static int get_graphic(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F6A")]
	[Address(RVA = "0xD11F40", Offset = "0xD11F40", VA = "0xD11F40")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A5380", Offset = "0x9A5380")]
	private static int get_onValueChanged(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F6B")]
	[Address(RVA = "0xD120E0", Offset = "0xD120E0", VA = "0xD120E0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A53E4", Offset = "0x9A53E4")]
	private static int get_group(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F6C")]
	[Address(RVA = "0xD12280", Offset = "0xD12280", VA = "0xD12280")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A5448", Offset = "0x9A5448")]
	private static int get_isOn(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F6D")]
	[Address(RVA = "0xD12448", Offset = "0xD12448", VA = "0xD12448")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A54AC", Offset = "0x9A54AC")]
	private static int set_toggleTransition(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F6E")]
	[Address(RVA = "0xD12664", Offset = "0xD12664", VA = "0xD12664")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A5510", Offset = "0x9A5510")]
	private static int set_graphic(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F6F")]
	[Address(RVA = "0xD1284C", Offset = "0xD1284C", VA = "0xD1284C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A5574", Offset = "0x9A5574")]
	private static int set_onValueChanged(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F70")]
	[Address(RVA = "0xD12A34", Offset = "0xD12A34", VA = "0xD12A34")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A55D8", Offset = "0x9A55D8")]
	private static int set_group(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F71")]
	[Address(RVA = "0xD12C30", Offset = "0xD12C30", VA = "0xD12C30")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A563C", Offset = "0x9A563C")]
	private static int set_isOn(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F72")]
	[Address(RVA = "0xD132D8", Offset = "0xD132D8", VA = "0xD132D8")]
	public UnityEngine_UI_ToggleWrap()
	{
	}
}
[Token(Token = "0x20000B4")]
public class UnityEngine_WrapModeWrap
{
	[Token(Token = "0x6000F73")]
	[Address(RVA = "0xD13780", Offset = "0xD13780", VA = "0xD13780")]
	public static void Register(LuaState L)
	{
	}

	[Token(Token = "0x6000F74")]
	[Address(RVA = "0xD13AC4", Offset = "0xD13AC4", VA = "0xD13AC4")]
	private static void Push(IntPtr L, WrapMode arg)
	{
	}

	[Token(Token = "0x6000F75")]
	[Address(RVA = "0xD13B60", Offset = "0xD13B60", VA = "0xD13B60")]
	private static bool CheckType(IntPtr L, int pos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F76")]
	[Address(RVA = "0xD132E0", Offset = "0xD132E0", VA = "0xD132E0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A56A0", Offset = "0x9A56A0")]
	private static int get_Once(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F77")]
	[Address(RVA = "0xD13380", Offset = "0xD13380", VA = "0xD13380")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A5704", Offset = "0x9A5704")]
	private static int get_Loop(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F78")]
	[Address(RVA = "0xD13420", Offset = "0xD13420", VA = "0xD13420")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A5768", Offset = "0x9A5768")]
	private static int get_PingPong(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F79")]
	[Address(RVA = "0xD134C0", Offset = "0xD134C0", VA = "0xD134C0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A57CC", Offset = "0x9A57CC")]
	private static int get_Default(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F7A")]
	[Address(RVA = "0xD1355C", Offset = "0xD1355C", VA = "0xD1355C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A5830", Offset = "0x9A5830")]
	private static int get_ClampForever(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F7B")]
	[Address(RVA = "0xD135FC", Offset = "0xD135FC", VA = "0xD135FC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A5894", Offset = "0x9A5894")]
	private static int get_Clamp(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F7C")]
	[Address(RVA = "0xD1369C", Offset = "0xD1369C", VA = "0xD1369C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A58F8", Offset = "0x9A58F8")]
	private static int IntToEnum(IntPtr L)
	{
		return default(int);
	}

	[Token(Token = "0x6000F7D")]
	[Address(RVA = "0xD13C1C", Offset = "0xD13C1C", VA = "0xD13C1C")]
	public UnityEngine_WrapModeWrap()
	{
	}
}
[Token(Token = "0x20000B5")]
public static class LuaConst
{
	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string luaDir;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string toluaDir;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string osDir;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string luaResDir;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string zbsDir;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static bool openLuaSocket;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public static bool openLuaDebugger;

	[Token(Token = "0x40000FD")]
	public const string AppName = "LuaFramework";

	[Token(Token = "0x1700000F")]
	public static string FrameworkRoot
	{
		[Token(Token = "0x6000F7E")]
		[Address(RVA = "0x1470E34", Offset = "0x1470E34", VA = "0x1470E34")]
		get
		{
			return null;
		}
	}
}
[Token(Token = "0x20000B6")]
public class CtrlMouseDrag : MonoBehaviour
{
	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 startPosition;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float x;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isDown;

	[Token(Token = "0x6000F80")]
	[Address(RVA = "0xEF0048", Offset = "0xEF0048", VA = "0xEF0048")]
	public void OnMouseDown()
	{
	}

	[Token(Token = "0x6000F81")]
	[Address(RVA = "0xEF007C", Offset = "0xEF007C", VA = "0xEF007C")]
	public void OnMouseUp()
	{
	}

	[Token(Token = "0x6000F82")]
	[Address(RVA = "0xEF0084", Offset = "0xEF0084", VA = "0xEF0084")]
	public void Update()
	{
	}

	[Token(Token = "0x6000F83")]
	[Address(RVA = "0xEF0124", Offset = "0xEF0124", VA = "0xEF0124")]
	public CtrlMouseDrag()
	{
	}
}
[Token(Token = "0x20000B7")]
public class BuglyInit : MonoBehaviour
{
	[Token(Token = "0x4000101")]
	private const string BuglyAppID = "c94f03e55f";

	[Token(Token = "0x6000F84")]
	[Address(RVA = "0xEEA124", Offset = "0xEEA124", VA = "0xEEA124")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F85")]
	[Address(RVA = "0xEEA2D4", Offset = "0xEEA2D4", VA = "0xEEA2D4")]
	private static Dictionary<string, string> MyLogCallbackExtrasHandler()
	{
		return null;
	}

	[Token(Token = "0x6000F86")]
	[Address(RVA = "0xEEA7E4", Offset = "0xEEA7E4", VA = "0xEEA7E4")]
	public BuglyInit()
	{
	}
}
[Token(Token = "0x20000B8")]
public class AutoCamSize : MonoBehaviour
{
	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float NormalSize;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float NormalRatio;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float AddSizeUnit;

	[Token(Token = "0x6000F87")]
	[Address(RVA = "0xEE91A8", Offset = "0xEE91A8", VA = "0xEE91A8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F88")]
	[Address(RVA = "0xEE9264", Offset = "0xEE9264", VA = "0xEE9264")]
	public AutoCamSize()
	{
	}
}
[Token(Token = "0x20000B9")]
public class BlindWindowEffect : MonoBehaviour
{
	[Token(Token = "0x2000332")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93FD90", Offset = "0x93FD90")]
	private sealed class <Start>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BlindWindowEffect <>4__this;

		[Token(Token = "0x170001EB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B9F")]
			[Address(RVA = "0xEE98A0", Offset = "0xEE98A0", VA = "0xEE98A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002BA1")]
			[Address(RVA = "0xEE9908", Offset = "0xEE9908", VA = "0xEE9908", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B9C")]
		[Address(RVA = "0xEE9304", Offset = "0xEE9304", VA = "0xEE9304")]
		[DebuggerHidden]
		public <Start>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6002B9D")]
		[Address(RVA = "0xEE97DC", Offset = "0xEE97DC", VA = "0xEE97DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B9E")]
		[Address(RVA = "0xEE97E0", Offset = "0xEE97E0", VA = "0xEE97E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002BA0")]
		[Address(RVA = "0xEE98A8", Offset = "0xEE98A8", VA = "0xEE98A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float in_time;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float in_timer;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string btnName;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rect rect;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int w;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int h;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Dictionary<int, Texture2D> t2d;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector2 grid;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Texture2D snap_shot;

	[Token(Token = "0x17000010")]
	public Texture2D SnapShot
	{
		[Token(Token = "0x6000F8A")]
		[Address(RVA = "0xEE928C", Offset = "0xEE928C", VA = "0xEE928C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000F89")]
		[Address(RVA = "0xEE9284", Offset = "0xEE9284", VA = "0xEE9284")]
		set
		{
		}
	}

	[Token(Token = "0x6000F8B")]
	[Address(RVA = "0xEE9294", Offset = "0xEE9294", VA = "0xEE9294")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A595C", Offset = "0x9A595C")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000F8C")]
	[Address(RVA = "0xEE9330", Offset = "0xEE9330", VA = "0xEE9330")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F8D")]
	[Address(RVA = "0xEE9530", Offset = "0xEE9530", VA = "0xEE9530")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F8E")]
	[Address(RVA = "0xEE9580", Offset = "0xEE9580", VA = "0xEE9580")]
	private void Draw()
	{
	}

	[Token(Token = "0x6000F8F")]
	[Address(RVA = "0xEE972C", Offset = "0xEE972C", VA = "0xEE972C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000F90")]
	[Address(RVA = "0xEE9730", Offset = "0xEE9730", VA = "0xEE9730")]
	public BlindWindowEffect()
	{
	}
}
[Token(Token = "0x20000BA")]
public class GameSettings
{
	[Serializable]
	[Token(Token = "0x2000333")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93FDA0", Offset = "0x93FDA0")]
	private sealed class <>c
	{
		[Token(Token = "0x4000DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static GameStringAction <>9__83_0;

		[Token(Token = "0x4000DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static GameStringAction <>9__83_1;

		[Token(Token = "0x4000DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static GameStringAction <>9__83_2;

		[Token(Token = "0x6002BA3")]
		[Address(RVA = "0x11DBA0C", Offset = "0x11DBA0C", VA = "0x11DBA0C")]
		public <>c()
		{
		}

		[Token(Token = "0x6002BA4")]
		[Address(RVA = "0x11DBA14", Offset = "0x11DBA14", VA = "0x11DBA14")]
		internal string <Init>b__83_0()
		{
			return null;
		}

		[Token(Token = "0x6002BA5")]
		[Address(RVA = "0x11DBA7C", Offset = "0x11DBA7C", VA = "0x11DBA7C")]
		internal string <Init>b__83_1()
		{
			return null;
		}

		[Token(Token = "0x6002BA6")]
		[Address(RVA = "0x11DBAE4", Offset = "0x11DBAE4", VA = "0x11DBAE4")]
		internal string <Init>b__83_2()
		{
			return null;
		}
	}

	[Token(Token = "0x400010E")]
	public const string HTTP_PREFIX = "http";

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string Version;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int VersionCode;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int BuildCode;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int BuildIOSVersionCode;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string BuildTime;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static ResourceStorageType StorageType;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public static bool IsVR;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public static bool IsAllRelease;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	public static bool IsStartGuide;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
	public static bool IsReleaseView;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static bool IsReleaseViewImmediately;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string Channel;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static string IOSHost;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static string otherHost;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static string WebIOSRoot;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static string WebOtherRoot;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static string WebRoot;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static bool IsDebug;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public static bool IsIOSPackOpenDebug;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	public static bool IsOpenBugly;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
	public static bool ABIsCompress;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public static bool IsCopyInFirst;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	public static bool IsEtc;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
	public static bool IsVoice;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x67")]
	public static bool IsSupportoffline;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static bool IsShare;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	public static bool IsTestUpdate;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static string Zone;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static bool IsPurchase;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static string ActivityUrl;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static bool IsCheckActiveSkillState;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	public static bool IsResourceUpdate;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
	public static bool IsNeedFPS;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8B")]
	public static bool IsBattleScene;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public static bool EnableTracking;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
	public static bool IsReyun;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static int releaseViewTime;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public static int ModelPoolSize;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static int CheckAllPoolFrame;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public static int CheckGCTime;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static int SwitchSceneGCTime;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public static int NetMaxCountByFrame;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static int ReleaseSpriteTime;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public static int PVEMonsterMaxCount;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public static string IP;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public static int Port;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public static string ShareUrl;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public static bool UIIsUseUnity;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	public static bool IsMoveUIAndUnVisible;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public static int IsShowBattleText;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public static int IsShowBattleBlood;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public static int IsShowBattleEffect;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public static int IsShowHitEffect;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public static string GroupNoticeUrl;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public static string ServerListUrl;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public static string ServerRootUrl;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private static int mPlayerId;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public static int PlayerLevel;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public static bool IsIgnoreCDN;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public static string VersionJson;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public static bool IsRecordAssetBundleList;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public static int MaxGuideUIErrorFindCount;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private static bool mIsStarter;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public static int DownloadSizeInDesList;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public static int DownloadDay;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public static string CompressVersionPath;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public static string CompressUnVersionPath;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public static int BattleTipPreResCount;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	public static bool WrapContentIsCache;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13D")]
	public static bool IsReportGuideRes;

	[Token(Token = "0x17000011")]
	public static string VersionURL
	{
		[Token(Token = "0x6000F92")]
		[Address(RVA = "0x11DA810", Offset = "0x11DA810", VA = "0x11DA810")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000012")]
	public static int ReleaseViewTime
	{
		[Token(Token = "0x6000F93")]
		[Address(RVA = "0x11DA9AC", Offset = "0x11DA9AC", VA = "0x11DA9AC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000F94")]
		[Address(RVA = "0x11DAA14", Offset = "0x11DAA14", VA = "0x11DAA14")]
		set
		{
		}
	}

	[Token(Token = "0x17000013")]
	public static int PlayerId
	{
		[Token(Token = "0x6000F95")]
		[Address(RVA = "0x11DAA80", Offset = "0x11DAA80", VA = "0x11DAA80")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000F96")]
		[Address(RVA = "0x11DAAE8", Offset = "0x11DAAE8", VA = "0x11DAAE8")]
		set
		{
		}
	}

	[Token(Token = "0x17000014")]
	public static bool IsStarter
	{
		[Token(Token = "0x6000F97")]
		[Address(RVA = "0x11DAB54", Offset = "0x11DAB54", VA = "0x11DAB54")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000F98")]
		[Address(RVA = "0x11DABBC", Offset = "0x11DABBC", VA = "0x11DABBC")]
		set
		{
		}
	}

	[Token(Token = "0x6000F91")]
	[Address(RVA = "0x11DA7A8", Offset = "0x11DA7A8", VA = "0x11DA7A8")]
	public static bool GetData(string key)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F99")]
	[Address(RVA = "0x11DAC64", Offset = "0x11DAC64", VA = "0x11DAC64")]
	[NoToLua]
	public static void Init()
	{
	}

	[Token(Token = "0x6000F9A")]
	[Address(RVA = "0x11DB0D0", Offset = "0x11DB0D0", VA = "0x11DB0D0")]
	public static void RuntimeInit()
	{
	}

	[Token(Token = "0x6000F9B")]
	[Address(RVA = "0x11DB338", Offset = "0x11DB338", VA = "0x11DB338")]
	public static void InitByVersion()
	{
	}

	[Token(Token = "0x6000F9C")]
	[Address(RVA = "0x11DB48C", Offset = "0x11DB48C", VA = "0x11DB48C")]
	public static void InitByConfig()
	{
	}

	[Token(Token = "0x6000F9D")]
	[Address(RVA = "0x11DB5D4", Offset = "0x11DB5D4", VA = "0x11DB5D4")]
	public GameSettings()
	{
	}
}
[Token(Token = "0x20000BB")]
public class EasyAnimator : MonoBehaviour
{
	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator animator;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string animationName;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float delay;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float repet;

	[Token(Token = "0x6000F9F")]
	[Address(RVA = "0x1128BB8", Offset = "0x1128BB8", VA = "0x1128BB8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FA0")]
	[Address(RVA = "0x1128C5C", Offset = "0x1128C5C", VA = "0x1128C5C")]
	public void PlayAnimation()
	{
	}

	[Token(Token = "0x6000FA1")]
	[Address(RVA = "0x1128CB0", Offset = "0x1128CB0", VA = "0x1128CB0")]
	public EasyAnimator()
	{
	}
}
[Token(Token = "0x20000BC")]
public class FlowLight : MonoBehaviour
{
	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image target;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite spr;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material mat;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector2 tiling;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector2 offset;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float power;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector2 lastTiling;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector2 lastOffset;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float lastPower;

	[Token(Token = "0x6000FA2")]
	[Address(RVA = "0x11D8690", Offset = "0x11D8690", VA = "0x11D8690")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FA3")]
	[Address(RVA = "0x11D87A8", Offset = "0x11D87A8", VA = "0x11D87A8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FA4")]
	[Address(RVA = "0x11D8940", Offset = "0x11D8940", VA = "0x11D8940")]
	public FlowLight()
	{
	}
}
[Token(Token = "0x20000BD")]
public static class AnimationMgr
{
	[Token(Token = "0x2000334")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93FDB0", Offset = "0x93FDB0")]
	private sealed class <>c__DisplayClass0_0
	{
		[Token(Token = "0x4000DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RectTransform rect;

		[Token(Token = "0x4000DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LuaFunction onFinish;

		[Token(Token = "0x4000DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TweenerCore<Vector3, Vector3, VectorOptions> tween;

		[Token(Token = "0x6002BA7")]
		[Address(RVA = "0xEE5D00", Offset = "0xEE5D00", VA = "0xEE5D00")]
		public <>c__DisplayClass0_0()
		{
		}

		[Token(Token = "0x6002BA8")]
		[Address(RVA = "0xEE6A58", Offset = "0xEE6A58", VA = "0xEE6A58")]
		internal Vector3 <LocalMoveUI>b__0()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002BA9")]
		[Address(RVA = "0xEE6A74", Offset = "0xEE6A74", VA = "0xEE6A74")]
		internal void <LocalMoveUI>b__1(Vector3 pos)
		{
		}

		[Token(Token = "0x6002BAA")]
		[Address(RVA = "0xEE6A90", Offset = "0xEE6A90", VA = "0xEE6A90")]
		internal void <LocalMoveUI>b__2()
		{
		}
	}

	[Token(Token = "0x2000335")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93FDC0", Offset = "0x93FDC0")]
	private sealed class <>c__DisplayClass1_0
	{
		[Token(Token = "0x4000DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RectTransform rect;

		[Token(Token = "0x4000DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LuaFunction onFinish;

		[Token(Token = "0x4000DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TweenerCore<Vector2, Vector2, VectorOptions> tween;

		[Token(Token = "0x6002BAB")]
		[Address(RVA = "0xEE5ED0", Offset = "0xEE5ED0", VA = "0xEE5ED0")]
		public <>c__DisplayClass1_0()
		{
		}

		[Token(Token = "0x6002BAC")]
		[Address(RVA = "0xEE6AF4", Offset = "0xEE6AF4", VA = "0xEE6AF4")]
		internal Vector2 <LocalMoveAnchorUI>b__0()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002BAD")]
		[Address(RVA = "0xEE6B10", Offset = "0xEE6B10", VA = "0xEE6B10")]
		internal void <LocalMoveAnchorUI>b__1(Vector2 pos)
		{
		}

		[Token(Token = "0x6002BAE")]
		[Address(RVA = "0xEE6B2C", Offset = "0xEE6B2C", VA = "0xEE6B2C")]
		internal void <LocalMoveAnchorUI>b__2()
		{
		}
	}

	[Token(Token = "0x2000336")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93FDD0", Offset = "0x93FDD0")]
	private sealed class <>c__DisplayClass2_0
	{
		[Token(Token = "0x4000DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RectTransform rect;

		[Token(Token = "0x4000DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LuaFunction onFinish;

		[Token(Token = "0x4000DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TweenerCore<Vector2, Vector2, VectorOptions> tween;

		[Token(Token = "0x6002BAF")]
		[Address(RVA = "0xEE607C", Offset = "0xEE607C", VA = "0xEE607C")]
		public <>c__DisplayClass2_0()
		{
		}

		[Token(Token = "0x6002BB0")]
		[Address(RVA = "0xEE6B90", Offset = "0xEE6B90", VA = "0xEE6B90")]
		internal Vector2 <LocalMoveToAnchorUI>b__0()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002BB1")]
		[Address(RVA = "0xEE6BAC", Offset = "0xEE6BAC", VA = "0xEE6BAC")]
		internal void <LocalMoveToAnchorUI>b__1(Vector2 pos)
		{
		}

		[Token(Token = "0x6002BB2")]
		[Address(RVA = "0xEE6BC8", Offset = "0xEE6BC8", VA = "0xEE6BC8")]
		internal void <LocalMoveToAnchorUI>b__2()
		{
		}
	}

	[Token(Token = "0x2000337")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93FDE0", Offset = "0x93FDE0")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x4000DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RectTransform rect;

		[Token(Token = "0x4000DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LuaFunction onFinish;

		[Token(Token = "0x4000DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TweenerCore<Vector3, Vector3, VectorOptions> tween;

		[Token(Token = "0x6002BB3")]
		[Address(RVA = "0xEE6264", Offset = "0xEE6264", VA = "0xEE6264")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x6002BB4")]
		[Address(RVA = "0xEE6C2C", Offset = "0xEE6C2C", VA = "0xEE6C2C")]
		internal Vector3 <LocalScaleUI>b__0()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002BB5")]
		[Address(RVA = "0xEE6C48", Offset = "0xEE6C48", VA = "0xEE6C48")]
		internal void <LocalScaleUI>b__1(Vector3 s)
		{
		}

		[Token(Token = "0x6002BB6")]
		[Address(RVA = "0xEE6C64", Offset = "0xEE6C64", VA = "0xEE6C64")]
		internal void <LocalScaleUI>b__2()
		{
		}
	}

	[Token(Token = "0x2000338")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93FDF0", Offset = "0x93FDF0")]
	private sealed class <>c__DisplayClass4_0
	{
		[Token(Token = "0x4000DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RectTransform rect;

		[Token(Token = "0x4000E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LuaFunction onFinish;

		[Token(Token = "0x4000E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TweenerCore<Vector3, Vector3, VectorOptions> tween;

		[Token(Token = "0x6002BB7")]
		[Address(RVA = "0xEE644C", Offset = "0xEE644C", VA = "0xEE644C")]
		public <>c__DisplayClass4_0()
		{
		}

		[Token(Token = "0x6002BB8")]
		[Address(RVA = "0xEE6CC8", Offset = "0xEE6CC8", VA = "0xEE6CC8")]
		internal Vector3 <LocalEulerUI>b__0()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002BB9")]
		[Address(RVA = "0xEE6CE4", Offset = "0xEE6CE4", VA = "0xEE6CE4")]
		internal void <LocalEulerUI>b__1(Vector3 s)
		{
		}

		[Token(Token = "0x6002BBA")]
		[Address(RVA = "0xEE6D00", Offset = "0xEE6D00", VA = "0xEE6D00")]
		internal void <LocalEulerUI>b__2()
		{
		}
	}

	[Token(Token = "0x2000339")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93FE00", Offset = "0x93FE00")]
	private sealed class <>c__DisplayClass5_0
	{
		[Token(Token = "0x4000E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RectTransform rect;

		[Token(Token = "0x4000E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LuaFunction onFinish;

		[Token(Token = "0x4000E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TweenerCore<Vector3, Vector3, VectorOptions> tween;

		[Token(Token = "0x6002BBB")]
		[Address(RVA = "0xEE6634", Offset = "0xEE6634", VA = "0xEE6634")]
		public <>c__DisplayClass5_0()
		{
		}

		[Token(Token = "0x6002BBC")]
		[Address(RVA = "0xEE6D64", Offset = "0xEE6D64", VA = "0xEE6D64")]
		internal Vector3 <MoveUI>b__0()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002BBD")]
		[Address(RVA = "0xEE6D80", Offset = "0xEE6D80", VA = "0xEE6D80")]
		internal void <MoveUI>b__1(Vector3 pos)
		{
		}

		[Token(Token = "0x6002BBE")]
		[Address(RVA = "0xEE6D9C", Offset = "0xEE6D9C", VA = "0xEE6D9C")]
		internal void <MoveUI>b__2()
		{
		}
	}

	[Token(Token = "0x200033A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93FE10", Offset = "0x93FE10")]
	private sealed class <>c__DisplayClass7_0
	{
		[Token(Token = "0x4000E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LuaFunction onFinish;

		[Token(Token = "0x4000E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Tweener tween;

		[Token(Token = "0x6002BBF")]
		[Address(RVA = "0xEE692C", Offset = "0xEE692C", VA = "0xEE692C")]
		public <>c__DisplayClass7_0()
		{
		}

		[Token(Token = "0x6002BC0")]
		[Address(RVA = "0xEE6E00", Offset = "0xEE6E00", VA = "0xEE6E00")]
		internal void <FadeImage>b__0()
		{
		}
	}

	[Token(Token = "0x200033B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93FE20", Offset = "0x93FE20")]
	private sealed class <>c__DisplayClass8_0
	{
		[Token(Token = "0x4000E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LuaFunction onFinish;

		[Token(Token = "0x4000E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Tweener tweener;

		[Token(Token = "0x6002BC1")]
		[Address(RVA = "0xEE6A50", Offset = "0xEE6A50", VA = "0xEE6A50")]
		public <>c__DisplayClass8_0()
		{
		}

		[Token(Token = "0x6002BC2")]
		[Address(RVA = "0xEE6E64", Offset = "0xEE6E64", VA = "0xEE6E64")]
		internal void <FollowTarget>b__0()
		{
		}
	}

	[Token(Token = "0x6000FA5")]
	[Address(RVA = "0xEE5B20", Offset = "0xEE5B20", VA = "0xEE5B20")]
	[ExportToLuaAttrbute]
	public static void LocalMoveUI(GameObject go, Vector3 ori, Vector3 to, float duration, LuaFunction onFinish)
	{
	}

	[Token(Token = "0x6000FA6")]
	[Address(RVA = "0xEE5D08", Offset = "0xEE5D08", VA = "0xEE5D08")]
	[ExportToLuaAttrbute]
	public static void LocalMoveAnchorUI(GameObject go, Vector2 ori, Vector2 to, float duration, LuaFunction onFinish)
	{
	}

	[Token(Token = "0x6000FA7")]
	[Address(RVA = "0xEE5ED8", Offset = "0xEE5ED8", VA = "0xEE5ED8")]
	[ExportToLuaAttrbute]
	public static void LocalMoveToAnchorUI(GameObject go, Vector2 to, float duration, LuaFunction onFinish)
	{
	}

	[Token(Token = "0x6000FA8")]
	[Address(RVA = "0xEE6084", Offset = "0xEE6084", VA = "0xEE6084")]
	[ExportToLuaAttrbute]
	public static void LocalScaleUI(GameObject go, Vector3 ori, Vector3 to, float duration, LuaFunction onFinish)
	{
	}

	[Token(Token = "0x6000FA9")]
	[Address(RVA = "0xEE626C", Offset = "0xEE626C", VA = "0xEE626C")]
	[ExportToLuaAttrbute]
	public static void LocalEulerUI(GameObject go, Vector3 ori, Vector3 to, float duration, LuaFunction onFinish)
	{
	}

	[Token(Token = "0x6000FAA")]
	[Address(RVA = "0xEE6454", Offset = "0xEE6454", VA = "0xEE6454")]
	[ExportToLuaAttrbute]
	public static void MoveUI(GameObject go, Vector3 ori, Vector3 to, float duration, LuaFunction onFinish)
	{
	}

	[Token(Token = "0x6000FAB")]
	[Address(RVA = "0xEE663C", Offset = "0xEE663C", VA = "0xEE663C")]
	[ExportToLuaAttrbute]
	public static void Lerp(GameObject go, Vector3 ori, Vector3 to, float rate)
	{
	}

	[Token(Token = "0x6000FAC")]
	[Address(RVA = "0xEE6724", Offset = "0xEE6724", VA = "0xEE6724")]
	[ExportToLuaAttrbute]
	public static void FadeImage(GameObject go, float ori, float to, float duration, LuaFunction onFinish)
	{
	}

	[Token(Token = "0x6000FAD")]
	[Address(RVA = "0xEE6934", Offset = "0xEE6934", VA = "0xEE6934")]
	[ExportToLuaAttrbute]
	public static void FollowTarget(GameObject go, GameObject target, float duration, LuaFunction onFinish)
	{
	}
}
[Token(Token = "0x20000BE")]
public class CenterChild : SBehaviour
{
	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float doCenterOnVelocity;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float centerSpeed;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool setMovementTyeCenter;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	private bool _centering;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RectTransform content;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float _targetPos;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Action<GameObject> onCenter;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject centerChild;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private ISCVCenter _scrollView;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool isChecking;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int axis;

	[Token(Token = "0x6000FAE")]
	[Address(RVA = "0xEEB8F0", Offset = "0xEEB8F0", VA = "0xEEB8F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FAF")]
	[Address(RVA = "0xEEBDFC", Offset = "0xEEBDFC", VA = "0xEEBDFC")]
	public void OnEndDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000FB0")]
	[Address(RVA = "0xEEBB0C", Offset = "0xEEBB0C", VA = "0xEEBB0C")]
	private void checkCenter()
	{
	}

	[Token(Token = "0x6000FB1")]
	[Address(RVA = "0xEEBEC0", Offset = "0xEEBEC0", VA = "0xEEBEC0")]
	public void doCenter()
	{
	}

	[Token(Token = "0x6000FB2")]
	[Address(RVA = "0xEEC0E8", Offset = "0xEEC0E8", VA = "0xEEC0E8")]
	private bool isAllHide()
	{
		return default(bool);
	}

	[Token(Token = "0x6000FB3")]
	[Address(RVA = "0xEEC180", Offset = "0xEEC180", VA = "0xEEC180")]
	private bool IsVisible(GameObject go)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FB4")]
	[Address(RVA = "0xEEC268", Offset = "0xEEC268", VA = "0xEEC268")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000FB5")]
	[Address(RVA = "0xEEC270", Offset = "0xEEC270", VA = "0xEEC270")]
	public void OnBeginDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000FB6")]
	[Address(RVA = "0xEEC278", Offset = "0xEEC278", VA = "0xEEC278")]
	private void onFinish()
	{
	}

	[Token(Token = "0x6000FB7")]
	[Address(RVA = "0xEEBD38", Offset = "0xEEBD38", VA = "0xEEBD38")]
	public void stop(bool isFinish = false)
	{
	}

	[Token(Token = "0x6000FB8")]
	[Address(RVA = "0xEEC2DC", Offset = "0xEEC2DC", VA = "0xEEC2DC")]
	public void Start()
	{
	}

	[Token(Token = "0x6000FB9")]
	[Address(RVA = "0xEEC528", Offset = "0xEEC528", VA = "0xEEC528", Slot = "5")]
	protected override void InitMono()
	{
	}

	[Token(Token = "0x6000FBA")]
	[Address(RVA = "0xEEC52C", Offset = "0xEEC52C", VA = "0xEEC52C", Slot = "6")]
	public override void DestroyMono()
	{
	}

	[Token(Token = "0x6000FBB")]
	[Address(RVA = "0xEEC530", Offset = "0xEEC530", VA = "0xEEC530")]
	public CenterChild()
	{
	}
}
[Token(Token = "0x20000BF")]
public class LoopCenterChild : CenterChild
{
	[Token(Token = "0x6000FBC")]
	[Address(RVA = "0x11ED560", Offset = "0x11ED560", VA = "0x11ED560")]
	public LoopCenterChild()
	{
	}
}
[Token(Token = "0x20000C0")]
public class WrapContentCenterChild : CenterChild
{
	[Token(Token = "0x6000FBD")]
	[Address(RVA = "0xD184F0", Offset = "0xD184F0", VA = "0xD184F0")]
	public WrapContentCenterChild()
	{
	}
}
[Token(Token = "0x20000C1")]
public class CenterToPoint : SBehaviour
{
	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ISCVCenter _scrollView;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x940994", Offset = "0x940994")]
	public float doCenterOnVelocity;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9409CC", Offset = "0x9409CC")]
	public float centerSpeed;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool setMovementTyeCenter;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool _centering;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RectTransform content;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float _targetPos;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Action<GameObject> onCenter;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameObject centerChild;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool isChecking;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x940A04", Offset = "0x940A04")]
	public Transform[] Points;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool _isStarted;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int axis;

	[Token(Token = "0x6000FBE")]
	[Address(RVA = "0xEEC550", Offset = "0xEEC550", VA = "0xEEC550")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FBF")]
	[Address(RVA = "0xEECA5C", Offset = "0xEECA5C", VA = "0xEECA5C")]
	public void OnEndDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000FC0")]
	[Address(RVA = "0xEEC76C", Offset = "0xEEC76C", VA = "0xEEC76C")]
	private void checkCenter()
	{
	}

	[Token(Token = "0x6000FC1")]
	[Address(RVA = "0xEECB20", Offset = "0xEECB20", VA = "0xEECB20")]
	public void doCenter()
	{
	}

	[Token(Token = "0x6000FC2")]
	[Address(RVA = "0xEECD00", Offset = "0xEECD00", VA = "0xEECD00")]
	public void CenterToChildByIndex(int index)
	{
	}

	[Token(Token = "0x6000FC3")]
	[Address(RVA = "0xEECE68", Offset = "0xEECE68", VA = "0xEECE68")]
	private void _centerToPage(Transform CenterTarget)
	{
	}

	[Token(Token = "0x6000FC4")]
	[Address(RVA = "0xEECFB0", Offset = "0xEECFB0", VA = "0xEECFB0")]
	private bool IsVisible(GameObject go)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FC5")]
	[Address(RVA = "0xEED098", Offset = "0xEED098", VA = "0xEED098")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000FC6")]
	[Address(RVA = "0xEED0A0", Offset = "0xEED0A0", VA = "0xEED0A0")]
	public void OnBeginDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000FC7")]
	[Address(RVA = "0xEED0A8", Offset = "0xEED0A8", VA = "0xEED0A8")]
	private void onFinish()
	{
	}

	[Token(Token = "0x6000FC8")]
	[Address(RVA = "0xEEC998", Offset = "0xEEC998", VA = "0xEEC998")]
	public void stop(bool isFinish = false)
	{
	}

	[Token(Token = "0x6000FC9")]
	[Address(RVA = "0xEED10C", Offset = "0xEED10C", VA = "0xEED10C")]
	public void Start()
	{
	}

	[Token(Token = "0x6000FCA")]
	[Address(RVA = "0xEED3E0", Offset = "0xEED3E0", VA = "0xEED3E0", Slot = "5")]
	protected override void InitMono()
	{
	}

	[Token(Token = "0x6000FCB")]
	[Address(RVA = "0xEED3E4", Offset = "0xEED3E4", VA = "0xEED3E4", Slot = "6")]
	public override void DestroyMono()
	{
	}

	[Token(Token = "0x6000FCC")]
	[Address(RVA = "0xEED3E8", Offset = "0xEED3E8", VA = "0xEED3E8")]
	public CenterToPoint()
	{
	}
}
[Token(Token = "0x20000C2")]
public class DoubleScrollRectDrag : UIBehaviour, IBeginDragHandler, IEventSystemHandler, IDragHandler, IEndDragHandler, IInitializePotentialDragHandler
{
	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ScrollRectEx parentScrollRect;

	[Token(Token = "0x6000FCD")]
	[Address(RVA = "0x1123C18", Offset = "0x1123C18", VA = "0x1123C18", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000FCE")]
	[Address(RVA = "0x1123CE8", Offset = "0x1123CE8", VA = "0x1123CE8", Slot = "12")]
	protected override void OnTransformParentChanged()
	{
	}

	[Token(Token = "0x6000FCF")]
	[Address(RVA = "0x1123DC0", Offset = "0x1123DC0", VA = "0x1123DC0", Slot = "20")]
	public void OnInitializePotentialDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000FD0")]
	[Address(RVA = "0x1123DC4", Offset = "0x1123DC4", VA = "0x1123DC4", Slot = "17")]
	public void OnBeginDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000FD1")]
	[Address(RVA = "0x1123E74", Offset = "0x1123E74", VA = "0x1123E74", Slot = "18")]
	public void OnDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000FD2")]
	[Address(RVA = "0x1123FD4", Offset = "0x1123FD4", VA = "0x1123FD4", Slot = "19")]
	public void OnEndDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000FD3")]
	[Address(RVA = "0x1124084", Offset = "0x1124084", VA = "0x1124084")]
	public DoubleScrollRectDrag()
	{
	}
}
[Token(Token = "0x20000C3")]
public class SmoothRandom__HAIBAO__SWORD__
{
	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static FractalNoise__HAIBAO__SWORD__ s_Noise;

	[Token(Token = "0x6000FD4")]
	[Address(RVA = "0xD32F24", Offset = "0xD32F24", VA = "0xD32F24")]
	public static Vector3 GetVector3(float speed)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000FD5")]
	[Address(RVA = "0xD330A8", Offset = "0xD330A8", VA = "0xD330A8")]
	public static float Get(float speed)
	{
		return default(float);
	}

	[Token(Token = "0x6000FD6")]
	[Address(RVA = "0xD33008", Offset = "0xD33008", VA = "0xD33008")]
	private static FractalNoise__HAIBAO__SWORD__ Get()
	{
		return null;
	}

	[Token(Token = "0x6000FD7")]
	[Address(RVA = "0xD33104", Offset = "0xD33104", VA = "0xD33104")]
	public SmoothRandom__HAIBAO__SWORD__()
	{
	}
}
[Token(Token = "0x20000C4")]
public class Perlin__HAIBAO__SWORD__
{
	[Token(Token = "0x400017C")]
	private const int B = 256;

	[Token(Token = "0x400017D")]
	private const int BM = 255;

	[Token(Token = "0x400017E")]
	private const int N = 4096;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int[] p;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float[,] g3;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float[,] g2;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float[] g1;

	[Token(Token = "0x6000FD8")]
	[Address(RVA = "0x15C8294", Offset = "0x15C8294", VA = "0x15C8294")]
	private float s_curve(float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000FD9")]
	[Address(RVA = "0x15C82AC", Offset = "0x15C82AC", VA = "0x15C82AC")]
	private float lerp(float t, float a, float b)
	{
		return default(float);
	}

	[Token(Token = "0x6000FDA")]
	[Address(RVA = "0x15C82BC", Offset = "0x15C82BC", VA = "0x15C82BC")]
	private void setup(float value, out int b0, out int b1, out float r0, out float r1)
	{
	}

	[Token(Token = "0x6000FDB")]
	[Address(RVA = "0x15C8314", Offset = "0x15C8314", VA = "0x15C8314")]
	private float at2(float rx, float ry, float x, float y)
	{
		return default(float);
	}

	[Token(Token = "0x6000FDC")]
	[Address(RVA = "0x15C8324", Offset = "0x15C8324", VA = "0x15C8324")]
	private float at3(float rx, float ry, float rz, float x, float y, float z)
	{
		return default(float);
	}

	[Token(Token = "0x6000FDD")]
	[Address(RVA = "0x15C833C", Offset = "0x15C833C", VA = "0x15C833C")]
	public float Noise(float arg)
	{
		return default(float);
	}

	[Token(Token = "0x6000FDE")]
	[Address(RVA = "0x15C8420", Offset = "0x15C8420", VA = "0x15C8420")]
	public float Noise(float x, float y)
	{
		return default(float);
	}

	[Token(Token = "0x6000FDF")]
	[Address(RVA = "0x15C861C", Offset = "0x15C861C", VA = "0x15C861C")]
	public float Noise(float x, float y, float z)
	{
		return default(float);
	}

	[Token(Token = "0x6000FE0")]
	[Address(RVA = "0x15C89C0", Offset = "0x15C89C0", VA = "0x15C89C0")]
	private void normalize2(ref float x, ref float y)
	{
	}

	[Token(Token = "0x6000FE1")]
	[Address(RVA = "0x15C8A74", Offset = "0x15C8A74", VA = "0x15C8A74")]
	private void normalize3(ref float x, ref float y, ref float z)
	{
	}

	[Token(Token = "0x6000FE2")]
	[Address(RVA = "0x15C8B4C", Offset = "0x15C8B4C", VA = "0x15C8B4C")]
	public Perlin__HAIBAO__SWORD__()
	{
	}
}
[Token(Token = "0x20000C5")]
public class FractalNoise__HAIBAO__SWORD__
{
	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Perlin__HAIBAO__SWORD__ m_Noise;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float[] m_Exponent;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int m_IntOctaves;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float m_Octaves;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float m_Lacunarity;

	[Token(Token = "0x6000FE3")]
	[Address(RVA = "0x11D908C", Offset = "0x11D908C", VA = "0x11D908C")]
	public FractalNoise__HAIBAO__SWORD__(float inH, float inLacunarity, float inOctaves)
	{
	}

	[Token(Token = "0x6000FE4")]
	[Address(RVA = "0x11D9094", Offset = "0x11D9094", VA = "0x11D9094")]
	public FractalNoise__HAIBAO__SWORD__(float inH, float inLacunarity, float inOctaves, Perlin__HAIBAO__SWORD__ noise)
	{
	}

	[Token(Token = "0x6000FE5")]
	[Address(RVA = "0x11D920C", Offset = "0x11D920C", VA = "0x11D920C")]
	public float HybridMultifractal(float x, float y, float offset)
	{
		return default(float);
	}

	[Token(Token = "0x6000FE6")]
	[Address(RVA = "0x11D937C", Offset = "0x11D937C", VA = "0x11D937C")]
	public float RidgedMultifractal(float x, float y, float offset, float gain)
	{
		return default(float);
	}

	[Token(Token = "0x6000FE7")]
	[Address(RVA = "0x11D9504", Offset = "0x11D9504", VA = "0x11D9504")]
	public float BrownianMotion(float x, float y)
	{
		return default(float);
	}
}
[Token(Token = "0x20000C6")]
public class PrefabInPrefab : MonoBehaviour
{
	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Target;

	[Token(Token = "0x6000FE8")]
	[Address(RVA = "0x1013448", Offset = "0x1013448", VA = "0x1013448")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000FE9")]
	[Address(RVA = "0x10134EC", Offset = "0x10134EC", VA = "0x10134EC")]
	public PrefabInPrefab()
	{
	}
}
[Token(Token = "0x20000C7")]
public class ShaderColorAnimation : MonoBehaviour
{
	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color Start;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color End;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float[] Times;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public new string name;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color Current;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material mMat;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float mCurrentTime;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int mCurrentIndex;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool mIsLeft;

	[Token(Token = "0x6000FEA")]
	[Address(RVA = "0xD32A68", Offset = "0xD32A68", VA = "0xD32A68")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FEB")]
	[Address(RVA = "0xD32ADC", Offset = "0xD32ADC", VA = "0xD32ADC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000FEC")]
	[Address(RVA = "0xD32B64", Offset = "0xD32B64", VA = "0xD32B64")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FED")]
	[Address(RVA = "0xD32B20", Offset = "0xD32B20", VA = "0xD32B20")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000FEE")]
	[Address(RVA = "0xD32D5C", Offset = "0xD32D5C", VA = "0xD32D5C")]
	public ShaderColorAnimation()
	{
	}
}
[Token(Token = "0x20000C8")]
public class ShaderRange : MonoBehaviour
{
	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public new string name;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Range;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material mMat;

	[Token(Token = "0x6000FEF")]
	[Address(RVA = "0xD32DB4", Offset = "0xD32DB4", VA = "0xD32DB4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FF0")]
	[Address(RVA = "0xD32E28", Offset = "0xD32E28", VA = "0xD32E28")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FF1")]
	[Address(RVA = "0xD32EC4", Offset = "0xD32EC4", VA = "0xD32EC4")]
	public ShaderRange()
	{
	}
}
[Token(Token = "0x20000C9")]
public class UIFade : MonoBehaviour
{
	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Graphic targetGraphic;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float delay;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float duration;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float fromAlpha;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float toAlpha;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float fadeTime;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool fading;

	[Token(Token = "0x6000FF2")]
	[Address(RVA = "0x11AF7DC", Offset = "0x11AF7DC", VA = "0x11AF7DC")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000FF3")]
	[Address(RVA = "0x11AF834", Offset = "0x11AF834", VA = "0x11AF834")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FF4")]
	[Address(RVA = "0x11AF908", Offset = "0x11AF908", VA = "0x11AF908")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000FF5")]
	[Address(RVA = "0x11AF918", Offset = "0x11AF918", VA = "0x11AF918")]
	private void StartFade()
	{
	}

	[Token(Token = "0x6000FF6")]
	[Address(RVA = "0x11AF924", Offset = "0x11AF924", VA = "0x11AF924")]
	private float TagetAlpha()
	{
		return default(float);
	}

	[Token(Token = "0x6000FF7")]
	[Address(RVA = "0x11AF9E8", Offset = "0x11AF9E8", VA = "0x11AF9E8")]
	public UIFade()
	{
	}
}
[Token(Token = "0x20000CA")]
public class EffectTrail : MonoBehaviour
{
	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TrailRenderer[] trs;

	[Token(Token = "0x6000FF8")]
	[Address(RVA = "0x1128CB8", Offset = "0x1128CB8", VA = "0x1128CB8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FF9")]
	[Address(RVA = "0x1128D24", Offset = "0x1128D24", VA = "0x1128D24")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000FFA")]
	[Address(RVA = "0x1128DA4", Offset = "0x1128DA4", VA = "0x1128DA4")]
	public EffectTrail()
	{
	}
}
[Token(Token = "0x20000CB")]
public abstract class ISCVCenter : UIBehaviour
{
	[Token(Token = "0x17000015")]
	public abstract RectTransform content
	{
		[Token(Token = "0x6000FFB")]
		get;
		[Token(Token = "0x6000FFC")]
		set;
	}

	[Token(Token = "0x17000016")]
	public abstract Vector2 velocity
	{
		[Token(Token = "0x6000FFD")]
		get;
		[Token(Token = "0x6000FFE")]
		set;
	}

	[Token(Token = "0x17000017")]
	public abstract bool inertia
	{
		[Token(Token = "0x6000FFF")]
		get;
		[Token(Token = "0x6001000")]
		set;
	}

	[Token(Token = "0x17000018")]
	public abstract bool horizontal
	{
		[Token(Token = "0x6001001")]
		get;
		[Token(Token = "0x6001002")]
		set;
	}

	[Token(Token = "0x17000019")]
	public abstract ScrollRectEx.MovementType movementType
	{
		[Token(Token = "0x6001003")]
		get;
		[Token(Token = "0x6001004")]
		set;
	}

	[Token(Token = "0x6001005")]
	public abstract void StopMovement();

	[Token(Token = "0x6001006")]
	[Address(RVA = "0x11EB3D8", Offset = "0x11EB3D8", VA = "0x11EB3D8", Slot = "28")]
	public virtual Vector2 CalculateOffset(Vector2 delta)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6001007")]
	[Address(RVA = "0x11EB438", Offset = "0x11EB438", VA = "0x11EB438")]
	protected ISCVCenter()
	{
	}
}
[Token(Token = "0x20000CC")]
public class PrintTextAnimation : MonoBehaviour
{
	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text text;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float StepTime;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float thisTime;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string oriText;

	[Token(Token = "0x6001008")]
	[Address(RVA = "0x1013504", Offset = "0x1013504", VA = "0x1013504")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001009")]
	[Address(RVA = "0x101355C", Offset = "0x101355C", VA = "0x101355C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600100A")]
	[Address(RVA = "0x1013640", Offset = "0x1013640", VA = "0x1013640")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600100B")]
	[Address(RVA = "0x10135B8", Offset = "0x10135B8", VA = "0x10135B8")]
	public void Rest()
	{
	}

	[Token(Token = "0x600100C")]
	[Address(RVA = "0x101366C", Offset = "0x101366C", VA = "0x101366C")]
	private void Update()
	{
	}

	[Token(Token = "0x600100D")]
	[Address(RVA = "0x1013788", Offset = "0x1013788", VA = "0x1013788")]
	public PrintTextAnimation()
	{
	}
}
[Token(Token = "0x20000CD")]
public class RenderTextureMaker : MonoBehaviour
{
	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera reanderCameral;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RawImage image;

	[Token(Token = "0x600100E")]
	[Address(RVA = "0xD2FB8C", Offset = "0xD2FB8C", VA = "0xD2FB8C")]
	public void Awake()
	{
	}

	[Token(Token = "0x600100F")]
	[Address(RVA = "0xD2FC2C", Offset = "0xD2FC2C", VA = "0xD2FC2C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001010")]
	[Address(RVA = "0xD2FDE8", Offset = "0xD2FDE8", VA = "0xD2FDE8")]
	public RenderTextureMaker()
	{
	}
}
[Token(Token = "0x20000CE")]
internal class SDebug
{
	[Token(Token = "0x6001011")]
	[Address(RVA = "0xD30004", Offset = "0xD30004", VA = "0xD30004")]
	public static void LogError(object message)
	{
	}

	[Token(Token = "0x6001012")]
	[Address(RVA = "0xD300E8", Offset = "0xD300E8", VA = "0xD300E8")]
	public static void LogError(string message)
	{
	}

	[Token(Token = "0x6001013")]
	[Address(RVA = "0xD301CC", Offset = "0xD301CC", VA = "0xD301CC")]
	public static void LogError(string str, object arg0)
	{
	}

	[Token(Token = "0x6001014")]
	[Address(RVA = "0xD302C0", Offset = "0xD302C0", VA = "0xD302C0")]
	public static void LogError(string str, params object[] param)
	{
	}

	[Token(Token = "0x6001015")]
	[Address(RVA = "0xD303B4", Offset = "0xD303B4", VA = "0xD303B4")]
	public static void LogError(string str, object arg0, object arg1, object arg2)
	{
	}

	[Token(Token = "0x6001016")]
	[Address(RVA = "0xD304CC", Offset = "0xD304CC", VA = "0xD304CC")]
	public static void LogError(string str, object arg0, object arg1)
	{
	}

	[Token(Token = "0x6001017")]
	[Address(RVA = "0xD305CC", Offset = "0xD305CC", VA = "0xD305CC")]
	public SDebug()
	{
	}
}
[Token(Token = "0x20000CF")]
public class ScrollRectDragEvent : MonoBehaviour, IBeginDragHandler, IEventSystemHandler, IDragHandler, IEndDragHandler, IInitializePotentialDragHandler
{
	[Token(Token = "0x200033C")]
	public class DragEvent : UnityEvent<PointerEventData>
	{
		[Token(Token = "0x6002BC3")]
		[Address(RVA = "0xD3083C", Offset = "0xD3083C", VA = "0xD3083C")]
		public DragEvent()
		{
		}
	}

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private DragEvent m_onInitDrag;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private DragEvent m_onBeginDrag;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private DragEvent m_onDrag;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private DragEvent m_onEndDrag;

	[Token(Token = "0x1700001A")]
	public DragEvent onInitDrag
	{
		[Token(Token = "0x6001018")]
		[Address(RVA = "0xD305D4", Offset = "0xD305D4", VA = "0xD305D4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700001B")]
	public DragEvent onBeginDrag
	{
		[Token(Token = "0x6001019")]
		[Address(RVA = "0xD305DC", Offset = "0xD305DC", VA = "0xD305DC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700001C")]
	public DragEvent onDrag
	{
		[Token(Token = "0x600101A")]
		[Address(RVA = "0xD305E4", Offset = "0xD305E4", VA = "0xD305E4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700001D")]
	public DragEvent onEndDrag
	{
		[Token(Token = "0x600101B")]
		[Address(RVA = "0xD305EC", Offset = "0xD305EC", VA = "0xD305EC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600101C")]
	[Address(RVA = "0xD305F4", Offset = "0xD305F4", VA = "0xD305F4", Slot = "7")]
	public void OnInitializePotentialDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600101D")]
	[Address(RVA = "0xD3065C", Offset = "0xD3065C", VA = "0xD3065C", Slot = "4")]
	public void OnBeginDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600101E")]
	[Address(RVA = "0xD306C4", Offset = "0xD306C4", VA = "0xD306C4", Slot = "5")]
	public void OnDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600101F")]
	[Address(RVA = "0xD3072C", Offset = "0xD3072C", VA = "0xD3072C", Slot = "6")]
	public void OnEndDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6001020")]
	[Address(RVA = "0xD30794", Offset = "0xD30794", VA = "0xD30794")]
	public ScrollRectDragEvent()
	{
	}
}
[Token(Token = "0x20000D0")]
public class SetAlphaByDistToTarget : SBehaviour
{
	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform targetTrans;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public CanvasGroup Graphic;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float MinAlpha;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float MaxAlpha;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float MaxDistance;

	[Token(Token = "0x6001021")]
	[Address(RVA = "0xD3088C", Offset = "0xD3088C", VA = "0xD3088C", Slot = "5")]
	protected override void InitMono()
	{
	}

	[Token(Token = "0x6001022")]
	[Address(RVA = "0xD30890", Offset = "0xD30890", VA = "0xD30890", Slot = "6")]
	public override void DestroyMono()
	{
	}

	[Token(Token = "0x6001023")]
	[Address(RVA = "0xD30894", Offset = "0xD30894", VA = "0xD30894")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001024")]
	[Address(RVA = "0xD3093C", Offset = "0xD3093C", VA = "0xD3093C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001025")]
	[Address(RVA = "0xD30898", Offset = "0xD30898", VA = "0xD30898")]
	public void FindTargetInParent()
	{
	}

	[Token(Token = "0x6001026")]
	[Address(RVA = "0xD30AE8", Offset = "0xD30AE8", VA = "0xD30AE8")]
	public SetAlphaByDistToTarget()
	{
	}
}
[Token(Token = "0x20000D1")]
public enum VideoPathType
{
	[Token(Token = "0x40001AD")]
	streamingAssetsPath,
	[Token(Token = "0x40001AE")]
	persistentDataPath
}
[Token(Token = "0x20000D2")]
public class StreamingVideo : MonoBehaviour
{
	[Token(Token = "0x200033D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93FE30", Offset = "0x93FE30")]
	private sealed class <Start>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StreamingVideo <>4__this;

		[Token(Token = "0x170001ED")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002BC7")]
			[Address(RVA = "0xD36C68", Offset = "0xD36C68", VA = "0xD36C68", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002BC9")]
			[Address(RVA = "0xD36CD0", Offset = "0xD36CD0", VA = "0xD36CD0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002BC4")]
		[Address(RVA = "0xD36490", Offset = "0xD36490", VA = "0xD36490")]
		[DebuggerHidden]
		public <Start>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6002BC5")]
		[Address(RVA = "0xD36BE8", Offset = "0xD36BE8", VA = "0xD36BE8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002BC6")]
		[Address(RVA = "0xD36BEC", Offset = "0xD36BEC", VA = "0xD36BEC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002BC8")]
		[Address(RVA = "0xD36C70", Offset = "0xD36C70", VA = "0xD36C70", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string ResourcePath;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float volume;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float volumePercent;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private VideoPlayer video;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private LuaFunction prepareLuaFun;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LuaFunction OnEndTimeFun;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private LuaFunction OnOutTimeFun;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LuaFunction OnStartTimeFun;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private LuaFunction PercentLuaFun;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float startTime;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float endTime;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float outTime;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private VideoPathType mVideoPathType;

	[Token(Token = "0x6001027")]
	[Address(RVA = "0xD363C8", Offset = "0xD363C8", VA = "0xD363C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001028")]
	[Address(RVA = "0xD36420", Offset = "0xD36420", VA = "0xD36420")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A5A60", Offset = "0x9A5A60")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6001029")]
	[Address(RVA = "0xD364BC", Offset = "0xD364BC", VA = "0xD364BC")]
	private string GetUrl()
	{
		return null;
	}

	[Token(Token = "0x600102A")]
	[Address(RVA = "0xD36554", Offset = "0xD36554", VA = "0xD36554")]
	private void Update()
	{
	}

	[Token(Token = "0x600102B")]
	[Address(RVA = "0xD36798", Offset = "0xD36798", VA = "0xD36798")]
	public void SetResourcePathUrl(string str)
	{
	}

	[Token(Token = "0x600102C")]
	[Address(RVA = "0xD367D0", Offset = "0xD367D0", VA = "0xD367D0")]
	public void SetPrePareFunc(LuaFunction func)
	{
	}

	[Token(Token = "0x600102D")]
	[Address(RVA = "0xD367D8", Offset = "0xD367D8", VA = "0xD367D8")]
	public void SetEndTimeFunc(LuaFunction func)
	{
	}

	[Token(Token = "0x600102E")]
	[Address(RVA = "0xD367E0", Offset = "0xD367E0", VA = "0xD367E0")]
	public void SetOutTimeFunc(LuaFunction func)
	{
	}

	[Token(Token = "0x600102F")]
	[Address(RVA = "0xD367E8", Offset = "0xD367E8", VA = "0xD367E8")]
	public void SetStartTimeFunc(LuaFunction func)
	{
	}

	[Token(Token = "0x6001030")]
	[Address(RVA = "0xD367F0", Offset = "0xD367F0", VA = "0xD367F0")]
	public void SetVideoPathType(VideoPathType type)
	{
	}

	[Token(Token = "0x6001031")]
	[Address(RVA = "0xD367F8", Offset = "0xD367F8", VA = "0xD367F8")]
	public void SetPercentLuaFun(LuaFunction func)
	{
	}

	[Token(Token = "0x6001032")]
	[Address(RVA = "0xD36800", Offset = "0xD36800", VA = "0xD36800")]
	public void ClearParams()
	{
	}

	[Token(Token = "0x6001033")]
	[Address(RVA = "0xD36814", Offset = "0xD36814", VA = "0xD36814")]
	private void AddPrepareHnadler()
	{
	}

	[Token(Token = "0x6001034")]
	[Address(RVA = "0xD36778", Offset = "0xD36778", VA = "0xD36778")]
	public void SetVolum(float value)
	{
	}

	[Token(Token = "0x6001035")]
	[Address(RVA = "0xD3674C", Offset = "0xD3674C", VA = "0xD3674C")]
	public float GetVolum()
	{
		return default(float);
	}

	[Token(Token = "0x6001036")]
	[Address(RVA = "0xD3676C", Offset = "0xD3676C", VA = "0xD3676C")]
	public float GetAfterPercentVolume()
	{
		return default(float);
	}

	[Token(Token = "0x6001037")]
	[Address(RVA = "0xD368DC", Offset = "0xD368DC", VA = "0xD368DC")]
	public void SetVolumePercent(float value)
	{
	}

	[Token(Token = "0x6001038")]
	[Address(RVA = "0xD368E4", Offset = "0xD368E4", VA = "0xD368E4")]
	public void VideoAddFrame()
	{
	}

	[Token(Token = "0x6001039")]
	[Address(RVA = "0xD36920", Offset = "0xD36920", VA = "0xD36920")]
	public void VideoReduceFrame()
	{
	}

	[Token(Token = "0x600103A")]
	[Address(RVA = "0xD3695C", Offset = "0xD3695C", VA = "0xD3695C")]
	public string GetVideoFile()
	{
		return null;
	}

	[Token(Token = "0x600103B")]
	[Address(RVA = "0xD36AC0", Offset = "0xD36AC0", VA = "0xD36AC0")]
	public void VideoPlayByUrl(string fullPath)
	{
	}

	[Token(Token = "0x600103C")]
	[Address(RVA = "0xD36AFC", Offset = "0xD36AFC", VA = "0xD36AFC")]
	public void SetVideoTimeByPercent(float percent)
	{
	}

	[Token(Token = "0x600103D")]
	[Address(RVA = "0xD36B48", Offset = "0xD36B48", VA = "0xD36B48")]
	public StreamingVideo()
	{
	}

	[Token(Token = "0x600103E")]
	[Address(RVA = "0xD36B58", Offset = "0xD36B58", VA = "0xD36B58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A5AC4", Offset = "0x9A5AC4")]
	private void <AddPrepareHnadler>b__25_0(VideoPlayer source)
	{
	}

	[Token(Token = "0x600103F")]
	[Address(RVA = "0xD36BA0", Offset = "0xD36BA0", VA = "0xD36BA0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A5AD4", Offset = "0x9A5AD4")]
	private void <AddPrepareHnadler>b__25_1(VideoPlayer source)
	{
	}
}
[Token(Token = "0x20000D3")]
public class SpriteGraphic : MaskableGraphic
{
	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Texture texture;

	[Token(Token = "0x1700001E")]
	public override Texture mainTexture
	{
		[Token(Token = "0x6001040")]
		[Address(RVA = "0xD3585C", Offset = "0xD3585C", VA = "0xD3585C", Slot = "35")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001041")]
	[Address(RVA = "0xD35908", Offset = "0xD35908", VA = "0xD35908", Slot = "5")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6001042")]
	[Address(RVA = "0xD359C0", Offset = "0xD359C0", VA = "0xD359C0", Slot = "10")]
	protected override void OnRectTransformDimensionsChange()
	{
	}

	[Token(Token = "0x6001043")]
	[Address(RVA = "0xD359C4", Offset = "0xD359C4", VA = "0xD359C4")]
	public new void UpdateMaterial()
	{
	}

	[Token(Token = "0x6001044")]
	[Address(RVA = "0xD359CC", Offset = "0xD359CC", VA = "0xD359CC")]
	public SpriteGraphic()
	{
	}
}
[Token(Token = "0x20000D4")]
public class EventTriggerListener : MonoBehaviour, IPointerClickHandler, IEventSystemHandler, IPointerDownHandler, IPointerEnterHandler, IPointerExitHandler
{
	[Token(Token = "0x200033E")]
	public delegate void VoidDelegate(GameObject go);

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VoidDelegate onClick;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VoidDelegate onDown;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VoidDelegate onEnter;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VoidDelegate onExit;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public VoidDelegate onUp;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public VoidDelegate onSelect;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public VoidDelegate onUpdateSelect;

	[Token(Token = "0x6001045")]
	[Address(RVA = "0x11D7CCC", Offset = "0x11D7CCC", VA = "0x11D7CCC")]
	public static EventTriggerListener Get(GameObject go)
	{
		return null;
	}

	[Token(Token = "0x6001046")]
	[Address(RVA = "0x11D7D84", Offset = "0x11D7D84", VA = "0x11D7D84", Slot = "4")]
	public void OnPointerClick(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6001047")]
	[Address(RVA = "0x11D8154", Offset = "0x11D8154", VA = "0x11D8154", Slot = "5")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6001048")]
	[Address(RVA = "0x11D8190", Offset = "0x11D8190", VA = "0x11D8190", Slot = "6")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6001049")]
	[Address(RVA = "0x11D81CC", Offset = "0x11D81CC", VA = "0x11D81CC", Slot = "7")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600104A")]
	[Address(RVA = "0x11D8208", Offset = "0x11D8208", VA = "0x11D8208")]
	public void OnPointerUp(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600104B")]
	[Address(RVA = "0x11D8244", Offset = "0x11D8244", VA = "0x11D8244")]
	public void OnSelect(BaseEventData eventData)
	{
	}

	[Token(Token = "0x600104C")]
	[Address(RVA = "0x11D8280", Offset = "0x11D8280", VA = "0x11D8280")]
	public void OnUpdateSelected(BaseEventData eventData)
	{
	}

	[Token(Token = "0x600104D")]
	[Address(RVA = "0x11D82BC", Offset = "0x11D82BC", VA = "0x11D82BC")]
	public EventTriggerListener()
	{
	}
}
[Token(Token = "0x20000D5")]
public class RawImageUVAnimation : MonoBehaviour
{
	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RawImage rawImg;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2 xySpeed;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector2 xyMin;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector2 xyMax;

	[Token(Token = "0x600104E")]
	[Address(RVA = "0x10142E8", Offset = "0x10142E8", VA = "0x10142E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600104F")]
	[Address(RVA = "0x1014378", Offset = "0x1014378", VA = "0x1014378")]
	private void Update()
	{
	}

	[Token(Token = "0x6001050")]
	[Address(RVA = "0x101454C", Offset = "0x101454C", VA = "0x101454C")]
	public RawImageUVAnimation()
	{
	}
}
[Token(Token = "0x20000D6")]
public enum eAnchorType
{
	[Token(Token = "0x40001C9")]
	Top,
	[Token(Token = "0x40001CA")]
	Bottom,
	[Token(Token = "0x40001CB")]
	Left,
	[Token(Token = "0x40001CC")]
	Right,
	[Token(Token = "0x40001CD")]
	TopLeft,
	[Token(Token = "0x40001CE")]
	TopRight,
	[Token(Token = "0x40001CF")]
	BottomLeft,
	[Token(Token = "0x40001D0")]
	BottonRight
}
[Token(Token = "0x20000D7")]
[ExecuteInEditMode]
public class UGUIAnchor : MonoBehaviour
{
	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public eAnchorType anchor;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RectTransform target;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 offSet;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Action OnPosChange;

	[Token(Token = "0x6001051")]
	[Address(RVA = "0x11AC7E8", Offset = "0x11AC7E8", VA = "0x11AC7E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001052")]
	[Address(RVA = "0x11AC8E8", Offset = "0x11AC8E8", VA = "0x11AC8E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6001053")]
	[Address(RVA = "0x11AC8EC", Offset = "0x11AC8EC", VA = "0x11AC8EC")]
	private void UpdatePositionByAnchor()
	{
	}

	[Token(Token = "0x6001054")]
	[Address(RVA = "0x11ACD98", Offset = "0x11ACD98", VA = "0x11ACD98")]
	public UGUIAnchor()
	{
	}
}
[Token(Token = "0x20000D8")]
public class UGUIButtonScale : MonoBehaviour, IPointerClickHandler, IEventSystemHandler, IPointerDownHandler, IPointerExitHandler, IPointerUpHandler, IPointerEnterHandler
{
	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform tweenTarget;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 hover;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 pressed;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float duration;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 mScale;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool mStarted;

	[Token(Token = "0x6001055")]
	[Address(RVA = "0x11ACDA0", Offset = "0x11ACDA0", VA = "0x11ACDA0")]
	private void Start()
	{
	}

	[Token(Token = "0x6001056")]
	[Address(RVA = "0x11ACE5C", Offset = "0x11ACE5C", VA = "0x11ACE5C")]
	private bool IsSelect(GameObject obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6001057")]
	[Address(RVA = "0x11ACF78", Offset = "0x11ACF78", VA = "0x11ACF78")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001058")]
	[Address(RVA = "0x11AD0DC", Offset = "0x11AD0DC", VA = "0x11AD0DC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001059")]
	[Address(RVA = "0x11AD22C", Offset = "0x11AD22C", VA = "0x11AD22C")]
	private void OnPress(bool isPressed)
	{
	}

	[Token(Token = "0x600105A")]
	[Address(RVA = "0x11ACFB4", Offset = "0x11ACFB4", VA = "0x11ACFB4")]
	private void OnHover(bool isOver)
	{
	}

	[Token(Token = "0x600105B")]
	[Address(RVA = "0x11AD478", Offset = "0x11AD478", VA = "0x11AD478")]
	private void OnSelect(bool isSelected)
	{
	}

	[Token(Token = "0x600105C")]
	[Address(RVA = "0x11AD4BC", Offset = "0x11AD4BC", VA = "0x11AD4BC", Slot = "4")]
	public void OnPointerClick(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600105D")]
	[Address(RVA = "0x11AD4C0", Offset = "0x11AD4C0", VA = "0x11AD4C0", Slot = "5")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600105E")]
	[Address(RVA = "0x11AD4C8", Offset = "0x11AD4C8", VA = "0x11AD4C8", Slot = "6")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600105F")]
	[Address(RVA = "0x11AD4D0", Offset = "0x11AD4D0", VA = "0x11AD4D0", Slot = "7")]
	public void OnPointerUp(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6001060")]
	[Address(RVA = "0x11AD4D8", Offset = "0x11AD4D8", VA = "0x11AD4D8", Slot = "8")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6001061")]
	[Address(RVA = "0x11AD4E0", Offset = "0x11AD4E0", VA = "0x11AD4E0")]
	public UGUIButtonScale()
	{
	}
}
[Token(Token = "0x20000D9")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x93EA2C", Offset = "0x93EA2C")]
public class UGUIPlayTween : MonoBehaviour, IPointerClickHandler, IEventSystemHandler
{
	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static UGUIPlayTween current;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject tweenTarget;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int tweenGroup;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public UGUITweener.Trigger trigger;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Direction playDirection;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool resetOnPlay;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool resetIfDisabled;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UGUITweener.EnableCondition ifDisabledOnPlay;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public UGUITweener.DisableCondition disableWhenFinished;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool includeChildren;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	[SerializeField]
	private GameObject eventReceiver;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	[SerializeField]
	private string callWhenFinished;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private UGUITweener[] mTweens;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool mStarted;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int mActive;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool mActivated;

	[Token(Token = "0x6001062")]
	[Address(RVA = "0x11AD580", Offset = "0x11AD580", VA = "0x11AD580")]
	private void Start()
	{
	}

	[Token(Token = "0x6001063")]
	[Address(RVA = "0x11AD610", Offset = "0x11AD610", VA = "0x11AD610")]
	private bool IsSelect(GameObject obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6001064")]
	[Address(RVA = "0x11AD618", Offset = "0x11AD618", VA = "0x11AD618")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001065")]
	[Address(RVA = "0x11AD974", Offset = "0x11AD974", VA = "0x11AD974")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001066")]
	[Address(RVA = "0x11AD978", Offset = "0x11AD978", VA = "0x11AD978")]
	private void OnDragOver()
	{
	}

	[Token(Token = "0x6001067")]
	[Address(RVA = "0x11AD698", Offset = "0x11AD698", VA = "0x11AD698")]
	private void OnHover(bool isOver)
	{
	}

	[Token(Token = "0x6001068")]
	[Address(RVA = "0x11AD990", Offset = "0x11AD990", VA = "0x11AD990")]
	private void OnDragOut()
	{
	}

	[Token(Token = "0x6001069")]
	[Address(RVA = "0x11AD9D8", Offset = "0x11AD9D8", VA = "0x11AD9D8")]
	private void OnPress(bool isPressed)
	{
	}

	[Token(Token = "0x600106A")]
	[Address(RVA = "0x11ADA50", Offset = "0x11ADA50", VA = "0x11ADA50")]
	private void OnClick()
	{
	}

	[Token(Token = "0x600106B")]
	[Address(RVA = "0x11ADA94", Offset = "0x11ADA94", VA = "0x11ADA94")]
	private void OnDoubleClick()
	{
	}

	[Token(Token = "0x600106C")]
	[Address(RVA = "0x11ADADC", Offset = "0x11ADADC", VA = "0x11ADADC")]
	private void OnSelect(bool isSelected)
	{
	}

	[Token(Token = "0x600106D")]
	[Address(RVA = "0x11ADB54", Offset = "0x11ADB54", VA = "0x11ADB54")]
	private void OnToggle()
	{
	}

	[Token(Token = "0x600106E")]
	[Address(RVA = "0x11ADB58", Offset = "0x11ADB58", VA = "0x11ADB58")]
	private void Update()
	{
	}

	[Token(Token = "0x600106F")]
	[Address(RVA = "0x11AD710", Offset = "0x11AD710", VA = "0x11AD710")]
	public void Play(bool forward)
	{
	}

	[Token(Token = "0x6001070")]
	[Address(RVA = "0x11ADDF0", Offset = "0x11ADDF0", VA = "0x11ADDF0", Slot = "4")]
	public void OnPointerClick(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6001071")]
	[Address(RVA = "0x11ADDF4", Offset = "0x11ADDF4", VA = "0x11ADDF4")]
	public UGUIPlayTween()
	{
	}
}
[Token(Token = "0x20000DA")]
public class UGUISizeChanger : MonoBehaviour
{
	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x940AAC", Offset = "0x940AAC")]
	public RectTransform[] IncludeRects;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform mRectTransform;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool IsVertical;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float Offset;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x940AE4", Offset = "0x940AE4")]
	public float maxSize;

	[Token(Token = "0x6001072")]
	[Address(RVA = "0x11ADE04", Offset = "0x11ADE04", VA = "0x11ADE04")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001073")]
	[Address(RVA = "0x11ADE5C", Offset = "0x11ADE5C", VA = "0x11ADE5C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001074")]
	[Address(RVA = "0x11AE0A8", Offset = "0x11AE0A8", VA = "0x11AE0A8")]
	public UGUISizeChanger()
	{
	}
}
[Token(Token = "0x20000DB")]
public class UGUITweenCanvas : UGUITweener
{
	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float from;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float to;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private CanvasGroup mTarget;

	[Token(Token = "0x1700001F")]
	public CanvasGroup cachedTarget
	{
		[Token(Token = "0x6001075")]
		[Address(RVA = "0x11AE0B8", Offset = "0x11AE0B8", VA = "0x11AE0B8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000020")]
	public float value
	{
		[Token(Token = "0x6001076")]
		[Address(RVA = "0x11AE150", Offset = "0x11AE150", VA = "0x11AE150")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001077")]
		[Address(RVA = "0x11AE170", Offset = "0x11AE170", VA = "0x11AE170")]
		set
		{
		}
	}

	[Token(Token = "0x6001078")]
	[Address(RVA = "0x11AE1A0", Offset = "0x11AE1A0", VA = "0x11AE1A0", Slot = "5")]
	protected override void OnUpdate(float factor, bool isFinished)
	{
	}

	[Token(Token = "0x6001079")]
	[Address(RVA = "0x11AE1BC", Offset = "0x11AE1BC", VA = "0x11AE1BC")]
	public static UGUITweenCanvas Begin(GameObject go, float duration, float fromAlpa, float toAlpha)
	{
		return null;
	}

	[Token(Token = "0x600107A")]
	[Address(RVA = "0x11AE488", Offset = "0x11AE488", VA = "0x11AE488", Slot = "6")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9A5AE4", Offset = "0x9A5AE4")]
	public override void SetStartToCurrentValue()
	{
	}

	[Token(Token = "0x600107B")]
	[Address(RVA = "0x11AE4AC", Offset = "0x11AE4AC", VA = "0x11AE4AC", Slot = "7")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9A5B1C", Offset = "0x9A5B1C")]
	public override void SetEndToCurrentValue()
	{
	}

	[Token(Token = "0x600107C")]
	[Address(RVA = "0x11AE4D0", Offset = "0x11AE4D0", VA = "0x11AE4D0")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9A5B54", Offset = "0x9A5B54")]
	private void SetCurrentValueToStart()
	{
	}

	[Token(Token = "0x600107D")]
	[Address(RVA = "0x11AE4D8", Offset = "0x11AE4D8", VA = "0x11AE4D8")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9A5B8C", Offset = "0x9A5B8C")]
	private void SetCurrentValueToEnd()
	{
	}

	[Token(Token = "0x600107E")]
	[Address(RVA = "0x11AE4E0", Offset = "0x11AE4E0", VA = "0x11AE4E0")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9A5BC4", Offset = "0x9A5BC4")]
	private void PlayTest()
	{
	}

	[Token(Token = "0x600107F")]
	[Address(RVA = "0x11AE504", Offset = "0x11AE504", VA = "0x11AE504")]
	public UGUITweenCanvas()
	{
	}
}
[Token(Token = "0x20000DC")]
public class UGUITweenPosition : UGUITweener
{
	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public Vector3 from;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Vector3 to;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[HideInInspector]
	public bool worldSpace;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Transform mTrans;

	[Token(Token = "0x17000021")]
	public Transform cachedTransform
	{
		[Token(Token = "0x6001080")]
		[Address(RVA = "0x11AE670", Offset = "0x11AE670", VA = "0x11AE670")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000022")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9AA3E0", Offset = "0x9AA3E0")]
	public Vector3 position
	{
		[Token(Token = "0x6001081")]
		[Address(RVA = "0x11AE700", Offset = "0x11AE700", VA = "0x11AE700")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6001082")]
		[Address(RVA = "0x11AE740", Offset = "0x11AE740", VA = "0x11AE740")]
		set
		{
		}
	}

	[Token(Token = "0x17000023")]
	public Vector3 value
	{
		[Token(Token = "0x6001083")]
		[Address(RVA = "0x11AE704", Offset = "0x11AE704", VA = "0x11AE704")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6001084")]
		[Address(RVA = "0x11AE744", Offset = "0x11AE744", VA = "0x11AE744")]
		set
		{
		}
	}

	[Token(Token = "0x6001085")]
	[Address(RVA = "0x11AE7B0", Offset = "0x11AE7B0", VA = "0x11AE7B0", Slot = "5")]
	protected override void OnUpdate(float factor, bool isFinished)
	{
	}

	[Token(Token = "0x6001086")]
	[Address(RVA = "0x11AE890", Offset = "0x11AE890", VA = "0x11AE890")]
	public static UGUITweenPosition Begin(GameObject go, float duration, Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x6001087")]
	[Address(RVA = "0x11AE950", Offset = "0x11AE950", VA = "0x11AE950")]
	public static UGUITweenPosition Begin(GameObject go, float duration, Vector3 pos, bool worldSpace)
	{
		return null;
	}

	[Token(Token = "0x6001088")]
	[Address(RVA = "0x11AEA24", Offset = "0x11AEA24", VA = "0x11AEA24", Slot = "6")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9A5BFC", Offset = "0x9A5BFC")]
	public override void SetStartToCurrentValue()
	{
	}

	[Token(Token = "0x6001089")]
	[Address(RVA = "0x11AEA4C", Offset = "0x11AEA4C", VA = "0x11AEA4C", Slot = "7")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9A5C34", Offset = "0x9A5C34")]
	public override void SetEndToCurrentValue()
	{
	}

	[Token(Token = "0x600108A")]
	[Address(RVA = "0x11AEA74", Offset = "0x11AEA74", VA = "0x11AEA74")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9A5C6C", Offset = "0x9A5C6C")]
	private void SetCurrentValueToStart()
	{
	}

	[Token(Token = "0x600108B")]
	[Address(RVA = "0x11AEA80", Offset = "0x11AEA80", VA = "0x11AEA80")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9A5CA4", Offset = "0x9A5CA4")]
	private void SetCurrentValueToEnd()
	{
	}

	[Token(Token = "0x600108C")]
	[Address(RVA = "0x11AEA8C", Offset = "0x11AEA8C", VA = "0x11AEA8C")]
	public UGUITweenPosition()
	{
	}
}
[Token(Token = "0x20000DD")]
public class UGUITweenRotation : UGUITweener
{
	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public Vector3 from;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Vector3 to;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public bool quaternionLerp;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Transform mTrans;

	[Token(Token = "0x17000024")]
	public Transform cachedTransform
	{
		[Token(Token = "0x600108D")]
		[Address(RVA = "0x11AEA90", Offset = "0x11AEA90", VA = "0x11AEA90")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000025")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9AA418", Offset = "0x9AA418")]
	public Quaternion rotation
	{
		[Token(Token = "0x600108E")]
		[Address(RVA = "0x11AEB20", Offset = "0x11AEB20", VA = "0x11AEB20")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x600108F")]
		[Address(RVA = "0x11AEB44", Offset = "0x11AEB44", VA = "0x11AEB44")]
		set
		{
		}
	}

	[Token(Token = "0x17000026")]
	public Quaternion value
	{
		[Token(Token = "0x6001090")]
		[Address(RVA = "0x11AEB24", Offset = "0x11AEB24", VA = "0x11AEB24")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x6001091")]
		[Address(RVA = "0x11AEB48", Offset = "0x11AEB48", VA = "0x11AEB48")]
		set
		{
		}
	}

	[Token(Token = "0x6001092")]
	[Address(RVA = "0x11AEB98", Offset = "0x11AEB98", VA = "0x11AEB98", Slot = "5")]
	protected override void OnUpdate(float factor, bool isFinished)
	{
	}

	[Token(Token = "0x6001093")]
	[Address(RVA = "0x11AED58", Offset = "0x11AED58", VA = "0x11AED58")]
	public static UGUITweenRotation Begin(GameObject go, float duration, Quaternion rot)
	{
		return null;
	}

	[Token(Token = "0x6001094")]
	[Address(RVA = "0x11AEE3C", Offset = "0x11AEE3C", VA = "0x11AEE3C", Slot = "6")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9A5CDC", Offset = "0x9A5CDC")]
	public override void SetStartToCurrentValue()
	{
	}

	[Token(Token = "0x6001095")]
	[Address(RVA = "0x11AEE80", Offset = "0x11AEE80", VA = "0x11AEE80", Slot = "7")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9A5D14", Offset = "0x9A5D14")]
	public override void SetEndToCurrentValue()
	{
	}

	[Token(Token = "0x6001096")]
	[Address(RVA = "0x11AEEC4", Offset = "0x11AEEC4", VA = "0x11AEEC4")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9A5D4C", Offset = "0x9A5D4C")]
	private void SetCurrentValueToStart()
	{
	}

	[Token(Token = "0x6001097")]
	[Address(RVA = "0x11AEF54", Offset = "0x11AEF54", VA = "0x11AEF54")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9A5D84", Offset = "0x9A5D84")]
	private void SetCurrentValueToEnd()
	{
	}

	[Token(Token = "0x6001098")]
	[Address(RVA = "0x11AEFE4", Offset = "0x11AEFE4", VA = "0x11AEFE4")]
	public UGUITweenRotation()
	{
	}
}
[Token(Token = "0x20000DE")]
public class UGUITweenScale : UGUITweener
{
	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public Vector3 from;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Vector3 to;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Transform mTrans;

	[Token(Token = "0x17000027")]
	public Transform cachedTransform
	{
		[Token(Token = "0x6001099")]
		[Address(RVA = "0x11AEFE8", Offset = "0x11AEFE8", VA = "0x11AEFE8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000028")]
	public Vector3 value
	{
		[Token(Token = "0x600109A")]
		[Address(RVA = "0x11AF078", Offset = "0x11AF078", VA = "0x11AF078")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x600109B")]
		[Address(RVA = "0x11AD1E4", Offset = "0x11AD1E4", VA = "0x11AD1E4")]
		set
		{
		}
	}

	[Token(Token = "0x17000029")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9AA450", Offset = "0x9AA450")]
	public Vector3 scale
	{
		[Token(Token = "0x600109C")]
		[Address(RVA = "0x11AF098", Offset = "0x11AF098", VA = "0x11AF098")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x600109D")]
		[Address(RVA = "0x11AF09C", Offset = "0x11AF09C", VA = "0x11AF09C")]
		set
		{
		}
	}

	[Token(Token = "0x600109E")]
	[Address(RVA = "0x11AF0A0", Offset = "0x11AF0A0", VA = "0x11AF0A0", Slot = "5")]
	protected override void OnUpdate(float factor, bool isFinished)
	{
	}

	[Token(Token = "0x600109F")]
	[Address(RVA = "0x11AD3B8", Offset = "0x11AD3B8", VA = "0x11AD3B8")]
	public static UGUITweenScale Begin(GameObject go, float duration, Vector3 scale)
	{
		return null;
	}

	[Token(Token = "0x60010A0")]
	[Address(RVA = "0x11AF180", Offset = "0x11AF180", VA = "0x11AF180", Slot = "6")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9A5DBC", Offset = "0x9A5DBC")]
	public override void SetStartToCurrentValue()
	{
	}

	[Token(Token = "0x60010A1")]
	[Address(RVA = "0x11AF1A8", Offset = "0x11AF1A8", VA = "0x11AF1A8", Slot = "7")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9A5DF4", Offset = "0x9A5DF4")]
	public override void SetEndToCurrentValue()
	{
	}

	[Token(Token = "0x60010A2")]
	[Address(RVA = "0x11AF1D0", Offset = "0x11AF1D0", VA = "0x11AF1D0")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9A5E2C", Offset = "0x9A5E2C")]
	private void SetCurrentValueToStart()
	{
	}

	[Token(Token = "0x60010A3")]
	[Address(RVA = "0x11AF1DC", Offset = "0x11AF1DC", VA = "0x11AF1DC")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9A5E64", Offset = "0x9A5E64")]
	private void SetCurrentValueToEnd()
	{
	}

	[Token(Token = "0x60010A4")]
	[Address(RVA = "0x11AF1E8", Offset = "0x11AF1E8", VA = "0x11AF1E8")]
	public UGUITweenScale()
	{
	}
}
[Token(Token = "0x20000DF")]
public abstract class UGUITweener : MonoBehaviour
{
	[Token(Token = "0x200033F")]
	public enum Trigger
	{
		[Token(Token = "0x4000E0D")]
		OnClick,
		[Token(Token = "0x4000E0E")]
		OnHover,
		[Token(Token = "0x4000E0F")]
		OnPress,
		[Token(Token = "0x4000E10")]
		OnHoverTrue,
		[Token(Token = "0x4000E11")]
		OnHoverFalse,
		[Token(Token = "0x4000E12")]
		OnPressTrue,
		[Token(Token = "0x4000E13")]
		OnPressFalse,
		[Token(Token = "0x4000E14")]
		OnActivate,
		[Token(Token = "0x4000E15")]
		OnActivateTrue,
		[Token(Token = "0x4000E16")]
		OnActivateFalse,
		[Token(Token = "0x4000E17")]
		OnDoubleClick,
		[Token(Token = "0x4000E18")]
		OnSelect,
		[Token(Token = "0x4000E19")]
		OnSelectTrue,
		[Token(Token = "0x4000E1A")]
		OnSelectFalse
	}

	[Token(Token = "0x2000340")]
	public enum EnableCondition
	{
		[Token(Token = "0x4000E1C")]
		DoNothing,
		[Token(Token = "0x4000E1D")]
		EnableThenPlay,
		[Token(Token = "0x4000E1E")]
		IgnoreDisabledState
	}

	[Token(Token = "0x2000341")]
	public enum DisableCondition
	{
		[Token(Token = "0x4000E20")]
		DisableAfterReverse = -1,
		[Token(Token = "0x4000E21")]
		DoNotDisable,
		[Token(Token = "0x4000E22")]
		DisableAfterForward
	}

	[Token(Token = "0x2000342")]
	public enum Method
	{
		[Token(Token = "0x4000E24")]
		Linear,
		[Token(Token = "0x4000E25")]
		EaseIn,
		[Token(Token = "0x4000E26")]
		EaseOut,
		[Token(Token = "0x4000E27")]
		EaseInOut,
		[Token(Token = "0x4000E28")]
		BounceIn,
		[Token(Token = "0x4000E29")]
		BounceOut
	}

	[Token(Token = "0x2000343")]
	public enum Style
	{
		[Token(Token = "0x4000E2B")]
		Once,
		[Token(Token = "0x4000E2C")]
		Loop,
		[Token(Token = "0x4000E2D")]
		PingPong
	}

	[Token(Token = "0x2000344")]
	public enum Direction
	{
		[Token(Token = "0x4000E2F")]
		Reverse = -1,
		[Token(Token = "0x4000E30")]
		Toggle,
		[Token(Token = "0x4000E31")]
		Forward
	}

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static UGUITweener current;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public Method method;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public Style style;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public AnimationCurve animationCurve;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public float delay;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[HideInInspector]
	public float duration;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public bool steeperCurves;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public int tweenGroup;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public GameObject eventReceiver;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public string callWhenFinished;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool mStarted;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float mStartTime;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float mDuration;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float mAmountPerDelta;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float mFactor;

	[Token(Token = "0x1700002A")]
	public float amountPerDelta
	{
		[Token(Token = "0x60010A5")]
		[Address(RVA = "0x11AF26C", Offset = "0x11AF26C", VA = "0x11AF26C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700002B")]
	public float tweenFactor
	{
		[Token(Token = "0x60010A6")]
		[Address(RVA = "0x11AF324", Offset = "0x11AF324", VA = "0x11AF324")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60010A7")]
		[Address(RVA = "0x11AF32C", Offset = "0x11AF32C", VA = "0x11AF32C")]
		set
		{
		}
	}

	[Token(Token = "0x1700002C")]
	public AnimationOrTween.Direction direction
	{
		[Token(Token = "0x60010A8")]
		[Address(RVA = "0x11ADC44", Offset = "0x11ADC44", VA = "0x11ADC44")]
		get
		{
			return default(AnimationOrTween.Direction);
		}
	}

	[Token(Token = "0x60010A9")]
	[Address(RVA = "0x11AF3A8", Offset = "0x11AF3A8", VA = "0x11AF3A8")]
	private void Reset()
	{
	}

	[Token(Token = "0x60010AA")]
	[Address(RVA = "0x11AF3E8", Offset = "0x11AF3E8", VA = "0x11AF3E8", Slot = "4")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x60010AB")]
	[Address(RVA = "0x11AF3EC", Offset = "0x11AF3EC", VA = "0x11AF3EC")]
	private void Update()
	{
	}

	[Token(Token = "0x60010AC")]
	[Address(RVA = "0x11AF6F4", Offset = "0x11AF6F4", VA = "0x11AF6F4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60010AD")]
	[Address(RVA = "0x11AE270", Offset = "0x11AE270", VA = "0x11AE270")]
	public void Sample(float factor, bool isFinished)
	{
	}

	[Token(Token = "0x60010AE")]
	[Address(RVA = "0x11AF6FC", Offset = "0x11AF6FC", VA = "0x11AF6FC")]
	private float BounceLogic(float val)
	{
		return default(float);
	}

	[Token(Token = "0x60010AF")]
	[Address(RVA = "0x11AF7BC", Offset = "0x11AF7BC", VA = "0x11AF7BC")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9A5E9C", Offset = "0x9A5E9C")]
	public void Play()
	{
	}

	[Token(Token = "0x60010B0")]
	[Address(RVA = "0x11AF7C4", Offset = "0x11AF7C4", VA = "0x11AF7C4")]
	public void PlayForward()
	{
	}

	[Token(Token = "0x60010B1")]
	[Address(RVA = "0x11AF7CC", Offset = "0x11AF7CC", VA = "0x11AF7CC")]
	public void PlayReverse()
	{
	}

	[Token(Token = "0x60010B2")]
	[Address(RVA = "0x11ADD00", Offset = "0x11ADD00", VA = "0x11ADD00")]
	public void Play(bool forward)
	{
	}

	[Token(Token = "0x60010B3")]
	[Address(RVA = "0x11ADDA8", Offset = "0x11ADDA8", VA = "0x11ADDA8")]
	public void ResetToBeginning()
	{
	}

	[Token(Token = "0x60010B4")]
	[Address(RVA = "0x11ADC64", Offset = "0x11ADC64", VA = "0x11ADC64")]
	public void Toggle()
	{
	}

	[Token(Token = "0x60010B5")]
	protected abstract void OnUpdate(float factor, bool isFinished);

	[Token(Token = "0x60010B6")]
	public static T Begin<T>(GameObject go, float duration) where T : UGUITweener
	{
		return null;
	}

	[Token(Token = "0x60010B7")]
	[Address(RVA = "0x11AF7D4", Offset = "0x11AF7D4", VA = "0x11AF7D4", Slot = "6")]
	public virtual void SetStartToCurrentValue()
	{
	}

	[Token(Token = "0x60010B8")]
	[Address(RVA = "0x11AF7D8", Offset = "0x11AF7D8", VA = "0x11AF7D8", Slot = "7")]
	public virtual void SetEndToCurrentValue()
	{
	}

	[Token(Token = "0x60010B9")]
	[Address(RVA = "0x11ACE64", Offset = "0x11ACE64", VA = "0x11ACE64")]
	public static bool IsSelect(GameObject obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60010BA")]
	[Address(RVA = "0x11AE510", Offset = "0x11AE510", VA = "0x11AE510")]
	protected UGUITweener()
	{
	}
}
[Token(Token = "0x20000E0")]
public class UISetText : MonoBehaviour
{
	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Text[] copyText;

	[Token(Token = "0x60010BB")]
	[Address(RVA = "0x11AF9F0", Offset = "0x11AF9F0", VA = "0x11AF9F0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60010BC")]
	[Address(RVA = "0x11AFA90", Offset = "0x11AFA90", VA = "0x11AFA90")]
	public UISetText()
	{
	}
}
[Token(Token = "0x20000E1")]
public class UIToggleCheck : MonoBehaviour
{
	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x940BCC", Offset = "0x940BCC")]
	public GameObject ObjectOn;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x940C04", Offset = "0x940C04")]
	public GameObject ObjectOff;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Toggle mToggle;

	[Token(Token = "0x60010BD")]
	[Address(RVA = "0x11AFAF0", Offset = "0x11AFAF0", VA = "0x11AFAF0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010BE")]
	[Address(RVA = "0x11AFC00", Offset = "0x11AFC00", VA = "0x11AFC00")]
	public void BindEvent()
	{
	}

	[Token(Token = "0x60010BF")]
	[Address(RVA = "0x11AFCA4", Offset = "0x11AFCA4", VA = "0x11AFCA4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60010C0")]
	[Address(RVA = "0x11AFCA8", Offset = "0x11AFCA8", VA = "0x11AFCA8")]
	private void Refresh()
	{
	}

	[Token(Token = "0x60010C1")]
	[Address(RVA = "0x11AFDA0", Offset = "0x11AFDA0", VA = "0x11AFDA0")]
	public UIToggleCheck()
	{
	}

	[Token(Token = "0x60010C2")]
	[Address(RVA = "0x11AFDA8", Offset = "0x11AFDA8", VA = "0x11AFDA8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A5ED4", Offset = "0x9A5ED4")]
	private void <BindEvent>b__4_0(bool <p0>)
	{
	}
}
[Token(Token = "0x20000E2")]
public class animEventsMgr : MonoBehaviour
{
	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LuaFunction luaFunc;

	[Token(Token = "0x60010C3")]
	[Address(RVA = "0xD184F8", Offset = "0xD184F8", VA = "0xD184F8")]
	public void SetLuaFunc(LuaFunction func)
	{
	}

	[Token(Token = "0x60010C4")]
	[Address(RVA = "0xD18500", Offset = "0xD18500", VA = "0xD18500")]
	public void TriggerLuaFunc()
	{
	}

	[Token(Token = "0x60010C5")]
	[Address(RVA = "0xD1854C", Offset = "0xD1854C", VA = "0xD1854C")]
	public animEventsMgr()
	{
	}
}
[Token(Token = "0x20000E3")]
internal class TextureLoaderCom : SBehaviour
{
	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Resource mRes;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Texture texture;

	[Token(Token = "0x60010C6")]
	[Address(RVA = "0xBB20F0", Offset = "0xBB20F0", VA = "0xBB20F0", Slot = "6")]
	public override void DestroyMono()
	{
	}

	[Token(Token = "0x60010C7")]
	[Address(RVA = "0xBB2160", Offset = "0xBB2160", VA = "0xBB2160", Slot = "5")]
	protected override void InitMono()
	{
	}

	[Token(Token = "0x60010C8")]
	[Address(RVA = "0xBB2164", Offset = "0xBB2164", VA = "0xBB2164")]
	public void SetRes(Resource res)
	{
	}

	[Token(Token = "0x60010C9")]
	[Address(RVA = "0xBB2128", Offset = "0xBB2128", VA = "0xBB2128")]
	private void RemoveRes()
	{
	}

	[Token(Token = "0x60010CA")]
	[Address(RVA = "0xBB2284", Offset = "0xBB2284", VA = "0xBB2284")]
	public Texture GetTexture()
	{
		return null;
	}

	[Token(Token = "0x60010CB")]
	[Address(RVA = "0xBB228C", Offset = "0xBB228C", VA = "0xBB228C")]
	public TextureLoaderCom()
	{
	}
}
[Token(Token = "0x20000E4")]
public class UCombineSkinnedMgr
{
	[Token(Token = "0x4000214")]
	private const int COMBINE_TEXTURE_MAX = 512;

	[Token(Token = "0x4000215")]
	private const string COMBINE_DIFFUSE_TEXTURE = "_MainTex";

	[Token(Token = "0x60010CC")]
	[Address(RVA = "0x11ABAA4", Offset = "0x11ABAA4", VA = "0x11ABAA4")]
	public static void CombineObject(GameObject skeleton, SkinnedMeshRenderer[] meshes, bool combine = false)
	{
	}

	[Token(Token = "0x60010CD")]
	[Address(RVA = "0x11AC458", Offset = "0x11AC458", VA = "0x11AC458")]
	public static void CombineObjectOnlyBones(GameObject skeleton, SkinnedMeshRenderer[] meshes)
	{
	}

	[Token(Token = "0x60010CE")]
	[Address(RVA = "0x11AC7E0", Offset = "0x11AC7E0", VA = "0x11AC7E0")]
	public UCombineSkinnedMgr()
	{
	}
}
[Token(Token = "0x20000E5")]
public class Radar : Graphic
{
	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float[] Values;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public RectTransform[] maxPoints;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Texture tex;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Vector3[] vertexes;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool isDirty;

	[Token(Token = "0x1700002D")]
	public override Texture mainTexture
	{
		[Token(Token = "0x60010CF")]
		[Address(RVA = "0x1013A54", Offset = "0x1013A54", VA = "0x1013A54", Slot = "35")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60010D0")]
	[Address(RVA = "0x1013A5C", Offset = "0x1013A5C", VA = "0x1013A5C")]
	private new void OnEnable()
	{
	}

	[Token(Token = "0x60010D1")]
	[Address(RVA = "0x1013A60", Offset = "0x1013A60", VA = "0x1013A60")]
	public void refresh()
	{
	}

	[Token(Token = "0x60010D2")]
	[Address(RVA = "0x1013C08", Offset = "0x1013C08", VA = "0x1013C08", Slot = "44")]
	protected override void OnPopulateMesh(VertexHelper vh)
	{
	}

	[Token(Token = "0x60010D3")]
	[Address(RVA = "0x1013FAC", Offset = "0x1013FAC", VA = "0x1013FAC")]
	public Radar()
	{
	}
}
[Token(Token = "0x20000E6")]
public class LineRenderAnimation : MonoBehaviour
{
	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LineRenderer[] render;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3[] points;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float Speed;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float process;

	[Token(Token = "0x60010D4")]
	[Address(RVA = "0x11ECF90", Offset = "0x11ECF90", VA = "0x11ECF90")]
	public void Replay()
	{
	}

	[Token(Token = "0x60010D5")]
	[Address(RVA = "0x11ED0D8", Offset = "0x11ED0D8", VA = "0x11ED0D8")]
	private void Update()
	{
	}

	[Token(Token = "0x60010D6")]
	[Address(RVA = "0x11ED2B4", Offset = "0x11ED2B4", VA = "0x11ED2B4")]
	public LineRenderAnimation()
	{
	}
}
[Token(Token = "0x20000E7")]
public class LockRotation : MonoBehaviour
{
	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 euler;

	[Token(Token = "0x60010D7")]
	[Address(RVA = "0x11ED554", Offset = "0x11ED554", VA = "0x11ED554")]
	private void Update()
	{
	}

	[Token(Token = "0x60010D8")]
	[Address(RVA = "0x11ED558", Offset = "0x11ED558", VA = "0x11ED558")]
	public LockRotation()
	{
	}
}
[Token(Token = "0x20000E8")]
public class TriangleAnimation : MonoBehaviour
{
	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LineRenderer render;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3[] points;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float Speed;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float process;

	[Token(Token = "0x60010D9")]
	[Address(RVA = "0xBB2294", Offset = "0xBB2294", VA = "0xBB2294")]
	private void Start()
	{
	}

	[Token(Token = "0x60010DA")]
	[Address(RVA = "0xBB22B4", Offset = "0xBB22B4", VA = "0xBB22B4")]
	public void Replay()
	{
	}

	[Token(Token = "0x60010DB")]
	[Address(RVA = "0xBB2358", Offset = "0xBB2358", VA = "0xBB2358")]
	private void Update()
	{
	}

	[Token(Token = "0x60010DC")]
	[Address(RVA = "0xBB252C", Offset = "0xBB252C", VA = "0xBB252C")]
	public TriangleAnimation()
	{
	}
}
[Token(Token = "0x20000E9")]
public class FillImageAnimation : MonoBehaviour
{
	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image img;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float target;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float time;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float ori;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float speed;

	[Token(Token = "0x60010DD")]
	[Address(RVA = "0x11D85A0", Offset = "0x11D85A0", VA = "0x11D85A0")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60010DE")]
	[Address(RVA = "0x11D85B4", Offset = "0x11D85B4", VA = "0x11D85B4")]
	public void Play()
	{
	}

	[Token(Token = "0x60010DF")]
	[Address(RVA = "0x11D8610", Offset = "0x11D8610", VA = "0x11D8610")]
	private void Update()
	{
	}

	[Token(Token = "0x60010E0")]
	[Address(RVA = "0x11D867C", Offset = "0x11D867C", VA = "0x11D867C")]
	public FillImageAnimation()
	{
	}
}
[Token(Token = "0x20000EA")]
public class LineRenderTest : MonoBehaviour
{
	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LineRenderer[] lineRenderers;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform[] trans;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Vector3> PositionList;

	[Token(Token = "0x60010E1")]
	[Address(RVA = "0x11ED2C4", Offset = "0x11ED2C4", VA = "0x11ED2C4")]
	private void Start()
	{
	}

	[Token(Token = "0x60010E2")]
	[Address(RVA = "0x11ED31C", Offset = "0x11ED31C", VA = "0x11ED31C")]
	private void Update()
	{
	}

	[Token(Token = "0x60010E3")]
	[Address(RVA = "0x11ED4E4", Offset = "0x11ED4E4", VA = "0x11ED4E4")]
	public LineRenderTest()
	{
	}
}
[Token(Token = "0x20000EB")]
public class AnimDelay : MonoBehaviour
{
	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x940C3C", Offset = "0x940C3C")]
	public string InitAnim;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x940C74", Offset = "0x940C74")]
	public string AnimName;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x940CAC", Offset = "0x940CAC")]
	public Animator targetAnimator;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x940CE4", Offset = "0x940CE4")]
	public float DelayTime;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x940D1C", Offset = "0x940D1C")]
	public GameObject HideObj;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x940D54", Offset = "0x940D54")]
	public float HideShowDelayTime;

	[Token(Token = "0x60010E4")]
	[Address(RVA = "0xEE57FC", Offset = "0xEE57FC", VA = "0xEE57FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010E5")]
	[Address(RVA = "0xEE588C", Offset = "0xEE588C", VA = "0xEE588C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60010E6")]
	[Address(RVA = "0xEE5968", Offset = "0xEE5968", VA = "0xEE5968")]
	private void PlayAnimByName(string animName)
	{
	}

	[Token(Token = "0x60010E7")]
	[Address(RVA = "0xEE5A10", Offset = "0xEE5A10", VA = "0xEE5A10")]
	public void ShowHideObjet()
	{
	}

	[Token(Token = "0x60010E8")]
	[Address(RVA = "0xEE5AA4", Offset = "0xEE5AA4", VA = "0xEE5AA4")]
	public void PlayAnim()
	{
	}

	[Token(Token = "0x60010E9")]
	[Address(RVA = "0xEE5AAC", Offset = "0xEE5AAC", VA = "0xEE5AAC")]
	public AnimDelay()
	{
	}
}
[Token(Token = "0x20000EC")]
public class AntiMask : UIBehaviourForUpdate
{
	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RectTransform rectTransform;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RectTransform targetRectTransform;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Image img;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material _mat;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector4 _value;

	[Token(Token = "0x60010EA")]
	[Address(RVA = "0xEE8A28", Offset = "0xEE8A28", VA = "0xEE8A28", Slot = "17")]
	public override void OnFrame()
	{
	}

	[Token(Token = "0x60010EB")]
	[Address(RVA = "0xEE8AAC", Offset = "0xEE8AAC", VA = "0xEE8AAC")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9A5EE4", Offset = "0x9A5EE4")]
	public void SetData()
	{
	}

	[Token(Token = "0x60010EC")]
	[Address(RVA = "0xEE8C50", Offset = "0xEE8C50", VA = "0xEE8C50")]
	public AntiMask()
	{
	}
}
[Token(Token = "0x20000ED")]
[SelectionBase]
public class ColliderItem : XRBaseInteractable
{
	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public UnityEvent selectEntered;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public UnityEvent selectExited;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public UnityEvent hoverEntered;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public UnityEvent hoverExited;

	[Token(Token = "0x60010ED")]
	[Address(RVA = "0xEEF154", Offset = "0xEEF154", VA = "0xEEF154", Slot = "14")]
	protected override void OnSelectEntered(XRBaseInteractor interactor)
	{
	}

	[Token(Token = "0x60010EE")]
	[Address(RVA = "0xEEF1B0", Offset = "0xEEF1B0", VA = "0xEEF1B0", Slot = "16")]
	protected override void OnSelectExited(XRBaseInteractor interactor)
	{
	}

	[Token(Token = "0x60010EF")]
	[Address(RVA = "0xEEF20C", Offset = "0xEEF20C", VA = "0xEEF20C", Slot = "12")]
	protected override void OnHoverExited(XRBaseInteractor interactor)
	{
	}

	[Token(Token = "0x60010F0")]
	[Address(RVA = "0xEEF268", Offset = "0xEEF268", VA = "0xEEF268", Slot = "10")]
	protected override void OnHoverEntered(XRBaseInteractor interactor)
	{
	}

	[Token(Token = "0x60010F1")]
	[Address(RVA = "0xEEF194", Offset = "0xEEF194", VA = "0xEEF194")]
	private void Click()
	{
	}

	[Token(Token = "0x60010F2")]
	[Address(RVA = "0xEEF1F0", Offset = "0xEEF1F0", VA = "0xEEF1F0")]
	private void ClickUp()
	{
	}

	[Token(Token = "0x60010F3")]
	[Address(RVA = "0xEEF24C", Offset = "0xEEF24C", VA = "0xEEF24C")]
	private void HoverExit()
	{
	}

	[Token(Token = "0x60010F4")]
	[Address(RVA = "0xEEF2A8", Offset = "0xEEF2A8", VA = "0xEEF2A8")]
	private void HoverEnter()
	{
	}

	[Token(Token = "0x60010F5")]
	[Address(RVA = "0xEEF2C4", Offset = "0xEEF2C4", VA = "0xEEF2C4")]
	public void ClearListener()
	{
	}

	[Token(Token = "0x60010F6")]
	[Address(RVA = "0xEEF300", Offset = "0xEEF300", VA = "0xEEF300")]
	public ColliderItem()
	{
	}
}
[Token(Token = "0x20000EE")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x93EA88", Offset = "0x93EA88")]
public class Gradient : BaseMeshEffect
{
	[Token(Token = "0x2000345")]
	public enum gType
	{
		[Token(Token = "0x4000E33")]
		TopToBottom,
		[Token(Token = "0x4000E34")]
		LeftToRight
	}

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public Color32 topColor;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	public Color32 bottomColor;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public gType GradientType;

	[Token(Token = "0x60010F7")]
	[Address(RVA = "0x11EABD0", Offset = "0x11EABD0", VA = "0x11EABD0", Slot = "20")]
	public override void ModifyMesh(VertexHelper vh)
	{
	}

	[Token(Token = "0x60010F8")]
	[Address(RVA = "0x11EACA0", Offset = "0x11EACA0", VA = "0x11EACA0")]
	public void ModifyVertices(List<UIVertex> vertexList)
	{
	}

	[Token(Token = "0x60010F9")]
	[Address(RVA = "0x11EB220", Offset = "0x11EB220", VA = "0x11EB220")]
	private void ChangeColor(ref List<UIVertex> verList, int index, Color color)
	{
	}

	[Token(Token = "0x60010FA")]
	[Address(RVA = "0x11EB16C", Offset = "0x11EB16C", VA = "0x11EB16C")]
	private UIVertex SetVertexColor(UIVertex uiVertex, float rX, float lX)
	{
		return default(UIVertex);
	}

	[Token(Token = "0x60010FB")]
	[Address(RVA = "0x11EB38C", Offset = "0x11EB38C", VA = "0x11EB38C")]
	public Gradient()
	{
	}
}
[Token(Token = "0x20000EF")]
internal class InlineTextUtil__HAIBAO__SWORD__
{
	[Token(Token = "0x400023E")]
	public const int RICHTEXT_MULL_BASE = 100;

	[Token(Token = "0x400023F")]
	public const int RICHTEXT_EMOTE_BASE = 10000;

	[Token(Token = "0x4000240")]
	public const int RICHTEXT_ANIM_EMOTE_BASE = 10100;

	[Token(Token = "0x4000241")]
	public const int RICHTEXT_RES_PATH_BASE = 10200;

	[Token(Token = "0x4000242")]
	public const int RICHTEXT_TERM_BASE = 10300;

	[Token(Token = "0x4000243")]
	public const int RICHTEXT_COLOR_BASE = 20000;

	[Token(Token = "0x4000244")]
	public const int RICHTEXT_LINK_BASE = 20100;

	[Token(Token = "0x4000245")]
	public const int RICHTEXT_UNDER_LINE_BASE = 20200;

	[Token(Token = "0x4000246")]
	public const int RICHTEXT_LINK_END = 20300;

	[Token(Token = "0x4000247")]
	public const int RICHTEXT_COLOR_END = 20400;

	[Token(Token = "0x4000248")]
	public const int RICHTEXT_ENTER = 20500;

	[Token(Token = "0x4000249")]
	public const int RICHTEXT_UNDER_LINE_END = 20600;

	[Token(Token = "0x400024A")]
	public const int RICHTEXT_BOLD_BASE = 20700;

	[Token(Token = "0x400024B")]
	public const int RICHTEXT_BOLD_END = 20800;

	[Token(Token = "0x400024C")]
	public const int RICHTEXT_ITALIC_BASE = 20900;

	[Token(Token = "0x400024D")]
	public const int RICHTEXT_ITALIC_END = 21000;

	[Token(Token = "0x400024E")]
	public const int RICHTEXT_SIZE_BASE = 21100;

	[Token(Token = "0x400024F")]
	public const int RICHTEXT_SIZE_END = 21200;

	[Token(Token = "0x4000250")]
	public const int RICHTEXT_DELETE_LINE_BASE = 21300;

	[Token(Token = "0x4000251")]
	public const int RICHTEXT_DELETE_LINE_END = 21400;

	[Token(Token = "0x4000252")]
	public const int RICHTEXT_UNKNOWN = -9999;

	[Token(Token = "0x4000253")]
	public const int FIXED_LEN_COLOR_BLOCK = 17;

	[Token(Token = "0x4000254")]
	public const int FIXED_LEN_COLOR_MORPH_BLOCK = 24;

	[Token(Token = "0x4000255")]
	public const string STR_SPRITE_NAME_TAG = "SpriteName";

	[Token(Token = "0x4000256")]
	public const string STR_WIDTH_TAG = "Width";

	[Token(Token = "0x4000257")]
	public const string STR_HEIGHT_TAG = "Height";

	[Token(Token = "0x4000258")]
	public const string STR_FRAME_TAG = "Frame";

	[Token(Token = "0x4000259")]
	public const string spriteRgx = "<sprite=(.+?)\\s+w=(\\d*\\.?\\d+%?)\\s+h=(\\d*\\.?\\d+%?)\\s?frame=(\\d*\\.?\\d+%?)/>";

	[Token(Token = "0x400025A")]
	public const string resPathRgx = "<res=(.+\\.png)>";

	[Token(Token = "0x400025B")]
	public const string colorRgx = "<color=#([0-9a-fA-F]{8}|[0-9a-fA-F]{16})>";

	[Token(Token = "0x400025C")]
	public const string linkRgx = "<url=([^>]+)>";

	[Token(Token = "0x400025D")]
	public const string underLineRgx = "<u>";

	[Token(Token = "0x400025E")]
	public const string linkEndRgx = "</url>";

	[Token(Token = "0x400025F")]
	public const string colorEndRgx = "</color>";

	[Token(Token = "0x4000260")]
	public const string underLineEndRgx = "</u>";

	[Token(Token = "0x4000261")]
	public const string boldRgx = "<b>";

	[Token(Token = "0x4000262")]
	public const string boldEndRgx = "</b>";

	[Token(Token = "0x4000263")]
	public const string italicRgx = "<i>";

	[Token(Token = "0x4000264")]
	public const string italicEndRgx = "</i>";

	[Token(Token = "0x4000265")]
	public const string sizeRgx = "<size=(\\d+)>";

	[Token(Token = "0x4000266")]
	public const string sizeEndRgx = "</size>";

	[Token(Token = "0x4000267")]
	public const string deleteLineRgx = "<d>";

	[Token(Token = "0x4000268")]
	public const string deleteLineEndRgx = "</d>";

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<string, Regex> _dicRegex;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int[] _mask;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<int, string> _parms;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<int, Hashtable> _dictSprite;

	[Token(Token = "0x60010FC")]
	[Address(RVA = "0x11EB9E8", Offset = "0x11EB9E8", VA = "0x11EB9E8")]
	public string Parse(string str, out int[] mask, out Dictionary<int, string> param, out Dictionary<int, Hashtable> spriteParam, bool enableRichText)
	{
		return null;
	}

	[Token(Token = "0x60010FD")]
	[Address(RVA = "0x11EC330", Offset = "0x11EC330", VA = "0x11EC330")]
	internal Regex _getRegex(string rex)
	{
		return null;
	}

	[Token(Token = "0x60010FE")]
	[Address(RVA = "0x11EC0E0", Offset = "0x11EC0E0", VA = "0x11EC0E0")]
	internal void ParseSingle(string str, string rex, int ibase)
	{
	}

	[Token(Token = "0x60010FF")]
	[Address(RVA = "0x11EBD00", Offset = "0x11EBD00", VA = "0x11EBD00")]
	internal void ParseSingleSprite(string str, string rex, int ibase)
	{
	}

	[Token(Token = "0x6001100")]
	[Address(RVA = "0x11EC464", Offset = "0x11EC464", VA = "0x11EC464")]
	public bool IsPunctuation(char str)
	{
		return default(bool);
	}

	[Token(Token = "0x6001101")]
	[Address(RVA = "0x11EC4F4", Offset = "0x11EC4F4", VA = "0x11EC4F4")]
	public InlineTextUtil__HAIBAO__SWORD__()
	{
	}
}
[Token(Token = "0x20000F0")]
public class DragClickButton : ButtonEx, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x2000346")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93FE40", Offset = "0x93FE40")]
	private sealed class <setConfig>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DragClickButton <>4__this;

		[Token(Token = "0x170001EF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002BD1")]
			[Address(RVA = "0x1124514", Offset = "0x1124514", VA = "0x1124514", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002BD3")]
			[Address(RVA = "0x112457C", Offset = "0x112457C", VA = "0x112457C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002BCE")]
		[Address(RVA = "0x1124134", Offset = "0x1124134", VA = "0x1124134")]
		[DebuggerHidden]
		public <setConfig>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6002BCF")]
		[Address(RVA = "0x1124288", Offset = "0x1124288", VA = "0x1124288", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002BD0")]
		[Address(RVA = "0x112428C", Offset = "0x112428C", VA = "0x112428C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002BD2")]
		[Address(RVA = "0x112451C", Offset = "0x112451C", VA = "0x112451C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private Vector2 m_StartDrag;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private Vector2 m_EndDrag;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private bool isPointerDown;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private DragClickButtonConfig config;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private RectTransform mTran;

	[Token(Token = "0x6001103")]
	[Address(RVA = "0x112408C", Offset = "0x112408C", VA = "0x112408C", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6001104")]
	[Address(RVA = "0x11240C4", Offset = "0x11240C4", VA = "0x11240C4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A5F1C", Offset = "0x9A5F1C")]
	private IEnumerator setConfig()
	{
		return null;
	}

	[Token(Token = "0x6001105")]
	[Address(RVA = "0x1124160", Offset = "0x1124160", VA = "0x1124160", Slot = "32")]
	public override void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6001106")]
	[Address(RVA = "0x11241A0", Offset = "0x11241A0", VA = "0x11241A0")]
	public void OnEndDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6001107")]
	[Address(RVA = "0x1124280", Offset = "0x1124280", VA = "0x1124280")]
	public DragClickButton()
	{
	}
}
[Token(Token = "0x20000F1")]
public class DragClickButtonConfig : SBehaviour, IEndDragHandler, IEventSystemHandler
{
	[Token(Token = "0x2000347")]
	public delegate void EndDragEvent(PointerEventData eventData);

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float dragDistance;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private EndDragEvent myEvents;

	[Token(Token = "0x6001108")]
	[Address(RVA = "0x1124584", Offset = "0x1124584", VA = "0x1124584", Slot = "7")]
	public void OnEndDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6001109")]
	[Address(RVA = "0x1124488", Offset = "0x1124488", VA = "0x1124488")]
	public void AddListener(EndDragEvent e)
	{
	}

	[Token(Token = "0x600110A")]
	[Address(RVA = "0x1124928", Offset = "0x1124928", VA = "0x1124928", Slot = "5")]
	protected override void InitMono()
	{
	}

	[Token(Token = "0x600110B")]
	[Address(RVA = "0x112492C", Offset = "0x112492C", VA = "0x112492C", Slot = "6")]
	public override void DestroyMono()
	{
	}

	[Token(Token = "0x600110C")]
	[Address(RVA = "0x1124930", Offset = "0x1124930", VA = "0x1124930")]
	public DragClickButtonConfig()
	{
	}
}
[Token(Token = "0x20000F2")]
public class DeactiveIfMove : MonoBehaviour
{
	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float MoveDist;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 startPos;

	[Token(Token = "0x600110D")]
	[Address(RVA = "0x1119590", Offset = "0x1119590", VA = "0x1119590")]
	private void Update()
	{
	}

	[Token(Token = "0x600110E")]
	[Address(RVA = "0x1119694", Offset = "0x1119694", VA = "0x1119694")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600110F")]
	[Address(RVA = "0x11196D0", Offset = "0x11196D0", VA = "0x11196D0")]
	public DeactiveIfMove()
	{
	}
}
[Token(Token = "0x20000F3")]
public class DropItemEffect : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000348")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93FE50", Offset = "0x93FE50")]
	private sealed class <>c
	{
		[Token(Token = "0x4000E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static TweenCallback <>9__10_0;

		[Token(Token = "0x6002BD9")]
		[Address(RVA = "0x1125154", Offset = "0x1125154", VA = "0x1125154")]
		public <>c()
		{
		}

		[Token(Token = "0x6002BDA")]
		[Address(RVA = "0x112515C", Offset = "0x112515C", VA = "0x112515C")]
		internal void <DoTweenTest>b__10_0()
		{
		}
	}

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 initPos;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 velovity;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float deadHeight;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool Moving;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float bounceFactor;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Resource mRes;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3 randomVec;

	[Token(Token = "0x6001110")]
	[Address(RVA = "0x1124970", Offset = "0x1124970", VA = "0x1124970")]
	private void Update()
	{
	}

	[Token(Token = "0x6001111")]
	[Address(RVA = "0x1124C44", Offset = "0x1124C44", VA = "0x1124C44")]
	public void InitDrop(Resource res, Vector3 _startPos)
	{
	}

	[Token(Token = "0x6001112")]
	[Address(RVA = "0x1124D40", Offset = "0x1124D40", VA = "0x1124D40")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9A5F80", Offset = "0x9A5F80")]
	public void TestMove()
	{
	}

	[Token(Token = "0x6001113")]
	[Address(RVA = "0x1124E5C", Offset = "0x1124E5C", VA = "0x1124E5C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9A5FB8", Offset = "0x9A5FB8")]
	public void DoTweenTest()
	{
	}

	[Token(Token = "0x6001114")]
	[Address(RVA = "0x1125054", Offset = "0x1125054", VA = "0x1125054")]
	public DropItemEffect()
	{
	}
}
[Token(Token = "0x20000F4")]
public class FlyToScreenPoint : MonoBehaviour
{
	[Token(Token = "0x2000349")]
	public delegate void FlyCallBack(GameObject go);

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float DelayTime;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float InitSpeed;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Acceleration;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float mCurTime;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float curSpeed;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 targetPos;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform FlyTarget;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public FlyCallBack CallBack;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool IsFlying;

	[Token(Token = "0x6001115")]
	[Address(RVA = "0x11D89C8", Offset = "0x11D89C8", VA = "0x11D89C8")]
	public void ResetFly()
	{
	}

	[Token(Token = "0x6001116")]
	[Address(RVA = "0x11D8A5C", Offset = "0x11D8A5C", VA = "0x11D8A5C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001117")]
	[Address(RVA = "0x11D8A9C", Offset = "0x11D8A9C", VA = "0x11D8A9C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001118")]
	[Address(RVA = "0x11D8A60", Offset = "0x11D8A60", VA = "0x11D8A60")]
	private void Finish()
	{
	}

	[Token(Token = "0x6001119")]
	[Address(RVA = "0x11D8FB8", Offset = "0x11D8FB8", VA = "0x11D8FB8")]
	public FlyToScreenPoint()
	{
	}
}
[Token(Token = "0x20000F5")]
public class LuaCallBackMono : MonoBehaviour
{
	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected LuaFunction callBack;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool IsCheckCallBack;

	[Token(Token = "0x600111A")]
	[Address(RVA = "0x146F698", Offset = "0x146F698", VA = "0x146F698")]
	public void SetCallBack(LuaFunction function)
	{
	}

	[Token(Token = "0x600111B")]
	[Address(RVA = "0x146F728", Offset = "0x146F728", VA = "0x146F728")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600111C")]
	[Address(RVA = "0x146F6E8", Offset = "0x146F6E8", VA = "0x146F6E8")]
	private void ClearCallBack()
	{
	}

	[Token(Token = "0x600111D")]
	[Address(RVA = "0x146F784", Offset = "0x146F784", VA = "0x146F784")]
	protected void CheckCallBack()
	{
	}

	[Token(Token = "0x600111E")]
	[Address(RVA = "0x146F818", Offset = "0x146F818", VA = "0x146F818")]
	public LuaCallBackMono()
	{
	}
}
[Token(Token = "0x20000F6")]
public enum eRotationAix
{
	[Token(Token = "0x4000289")]
	X = 1,
	[Token(Token = "0x400028A")]
	Y,
	[Token(Token = "0x400028B")]
	Z
}
[Token(Token = "0x20000F7")]
public class RandomRotation : MonoBehaviour
{
	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public eRotationAix aix;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxAngle;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float minAngle;

	[Token(Token = "0x600111F")]
	[Address(RVA = "0x1014034", Offset = "0x1014034", VA = "0x1014034")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6001120")]
	[Address(RVA = "0x10141E0", Offset = "0x10141E0", VA = "0x10141E0")]
	public RandomRotation()
	{
	}
}
[Token(Token = "0x20000F8")]
public class RanomEulerAngle : MonoBehaviour
{
	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2 rangeX;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2 rangeY;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector2 rangeZ;

	[Token(Token = "0x6001121")]
	[Address(RVA = "0x10141F4", Offset = "0x10141F4", VA = "0x10141F4")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6001122")]
	[Address(RVA = "0x101429C", Offset = "0x101429C", VA = "0x101429C")]
	public RanomEulerAngle()
	{
	}
}
[Token(Token = "0x20000F9")]
public class StateChangeConfig : MonoBehaviour
{
	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x940DAC", Offset = "0x940DAC")]
	public Renderer TargetRenderer;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x940DE4", Offset = "0x940DE4")]
	public Material AlterMat;

	[Token(Token = "0x6001123")]
	[Address(RVA = "0xD36240", Offset = "0xD36240", VA = "0xD36240")]
	public void Change()
	{
	}

	[Token(Token = "0x6001124")]
	[Address(RVA = "0xD3633C", Offset = "0xD3633C", VA = "0xD3633C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001125")]
	[Address(RVA = "0xD363C0", Offset = "0xD363C0", VA = "0xD363C0")]
	public StateChangeConfig()
	{
	}
}
[Token(Token = "0x20000FA")]
public class WheelRotate : MonoBehaviour
{
	[Token(Token = "0x200034A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93FE60", Offset = "0x93FE60")]
	private sealed class <_play>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WheelRotate <>4__this;

		[Token(Token = "0x4000E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int countPerRound;

		[Token(Token = "0x4000E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int targetIndex;

		[Token(Token = "0x4000E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int Round;

		[Token(Token = "0x4000E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public LuaFunction callback;

		[Token(Token = "0x4000E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int <indexTotal>5__2;

		[Token(Token = "0x4000E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float <timePer>5__3;

		[Token(Token = "0x170001F1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002BE2")]
			[Address(RVA = "0xD18348", Offset = "0xD18348", VA = "0xD18348", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002BE4")]
			[Address(RVA = "0xD183B0", Offset = "0xD183B0", VA = "0xD183B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002BDF")]
		[Address(RVA = "0xD17FF4", Offset = "0xD17FF4", VA = "0xD17FF4")]
		[DebuggerHidden]
		public <_play>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6002BE0")]
		[Address(RVA = "0xD181C0", Offset = "0xD181C0", VA = "0xD181C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002BE1")]
		[Address(RVA = "0xD181C4", Offset = "0xD181C4", VA = "0xD181C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002BE3")]
		[Address(RVA = "0xD18350", Offset = "0xD18350", VA = "0xD18350", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200034B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93FE70", Offset = "0x93FE70")]
	private sealed class <_playIdle>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WheelRotate <>4__this;

		[Token(Token = "0x170001F3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002BE8")]
			[Address(RVA = "0xD18480", Offset = "0xD18480", VA = "0xD18480", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002BEA")]
			[Address(RVA = "0xD184E8", Offset = "0xD184E8", VA = "0xD184E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002BE5")]
		[Address(RVA = "0xD18020", Offset = "0xD18020", VA = "0xD18020")]
		[DebuggerHidden]
		public <_playIdle>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6002BE6")]
		[Address(RVA = "0xD183B8", Offset = "0xD183B8", VA = "0xD183B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002BE7")]
		[Address(RVA = "0xD183BC", Offset = "0xD183BC", VA = "0xD183BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002BE9")]
		[Address(RVA = "0xD18488", Offset = "0xD18488", VA = "0xD18488", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve _curve;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _isPlaying;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform Target;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int CurIndex;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int CountPerRound;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float TotalTimeFactor;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float Offset;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float Angle;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float IdelSeconds;

	[Token(Token = "0x6001126")]
	[Address(RVA = "0xD17DEC", Offset = "0xD17DEC", VA = "0xD17DEC")]
	public void Test()
	{
	}

	[Token(Token = "0x6001127")]
	[Address(RVA = "0xD17E80", Offset = "0xD17E80", VA = "0xD17E80")]
	public void TestIdle()
	{
	}

	[Token(Token = "0x6001128")]
	[Address(RVA = "0xD17E08", Offset = "0xD17E08", VA = "0xD17E08")]
	public void PlayAnimation(int targetIndex, int Round, int countPerRound, float angel, LuaFunction callback)
	{
	}

	[Token(Token = "0x6001129")]
	[Address(RVA = "0xD17E90", Offset = "0xD17E90", VA = "0xD17E90")]
	public void PlayIdle(int countPerRound, float angle)
	{
	}

	[Token(Token = "0x600112A")]
	[Address(RVA = "0xD17EE8", Offset = "0xD17EE8", VA = "0xD17EE8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A5FF0", Offset = "0x9A5FF0")]
	private IEnumerator _play(int targetIndex, int Round, int countPerRound, LuaFunction callback)
	{
		return null;
	}

	[Token(Token = "0x600112B")]
	[Address(RVA = "0xD17F84", Offset = "0xD17F84", VA = "0xD17F84")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A6054", Offset = "0x9A6054")]
	private IEnumerator _playIdle()
	{
		return null;
	}

	[Token(Token = "0x600112C")]
	[Address(RVA = "0xD1804C", Offset = "0xD1804C", VA = "0xD1804C")]
	private void _setEulerAngles()
	{
	}

	[Token(Token = "0x600112D")]
	[Address(RVA = "0xD1818C", Offset = "0xD1818C", VA = "0xD1818C")]
	public void SetCurIndex(int curIndex)
	{
	}

	[Token(Token = "0x600112E")]
	[Address(RVA = "0xD18194", Offset = "0xD18194", VA = "0xD18194")]
	public int GetFixIndex()
	{
		return default(int);
	}

	[Token(Token = "0x600112F")]
	[Address(RVA = "0xD17EE0", Offset = "0xD17EE0", VA = "0xD17EE0")]
	public void StopAnim()
	{
	}

	[Token(Token = "0x6001130")]
	[Address(RVA = "0xD180D0", Offset = "0xD180D0", VA = "0xD180D0")]
	private void _resetTarget()
	{
	}

	[Token(Token = "0x6001131")]
	[Address(RVA = "0xD181A4", Offset = "0xD181A4", VA = "0xD181A4")]
	public WheelRotate()
	{
	}
}
[Token(Token = "0x20000FB")]
public class Art_LineRender : MonoBehaviour
{
	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] gos;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LineRenderer tr;

	[Token(Token = "0x6001132")]
	[Address(RVA = "0xEE8C58", Offset = "0xEE8C58", VA = "0xEE8C58")]
	private void Start()
	{
	}

	[Token(Token = "0x6001133")]
	[Address(RVA = "0xEE8DCC", Offset = "0xEE8DCC", VA = "0xEE8DCC")]
	public void Update()
	{
	}

	[Token(Token = "0x6001134")]
	[Address(RVA = "0xEE8E64", Offset = "0xEE8E64", VA = "0xEE8E64")]
	public Art_LineRender()
	{
	}
}
[Token(Token = "0x20000FC")]
public class InnerDetector : MonoBehaviour
{
	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal bool mIfInside;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	internal GameObject mReflection;

	[Token(Token = "0x6001135")]
	[Address(RVA = "0x11EC5D8", Offset = "0x11EC5D8", VA = "0x11EC5D8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001136")]
	[Address(RVA = "0x11EC644", Offset = "0x11EC644", VA = "0x11EC644")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001137")]
	[Address(RVA = "0x11EC6B0", Offset = "0x11EC6B0", VA = "0x11EC6B0")]
	public InnerDetector()
	{
	}
}
[Token(Token = "0x20000FD")]
public class InnerReflectionFloor : MonoBehaviour
{
	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x940E1C", Offset = "0x940E1C")]
	public List<Transform> TransList;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<InnerDetector> mObjList;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 mOriginPos;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 mMirrorPos;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 mMirrorNor;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 mVector3Buffer;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float mDistance;

	[Token(Token = "0x6001138")]
	[Address(RVA = "0x11EC6C0", Offset = "0x11EC6C0", VA = "0x11EC6C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6001139")]
	[Address(RVA = "0x11EC7AC", Offset = "0x11EC7AC", VA = "0x11EC7AC")]
	private void AddObjToList(Transform tr)
	{
	}

	[Token(Token = "0x600113A")]
	[Address(RVA = "0x11EC94C", Offset = "0x11EC94C", VA = "0x11EC94C")]
	private void Update()
	{
	}

	[Token(Token = "0x600113B")]
	[Address(RVA = "0x11EC950", Offset = "0x11EC950", VA = "0x11EC950")]
	private void ReflectioUpdate()
	{
	}

	[Token(Token = "0x600113C")]
	[Address(RVA = "0x11ECF20", Offset = "0x11ECF20", VA = "0x11ECF20")]
	public InnerReflectionFloor()
	{
	}
}
[Token(Token = "0x20000FE")]
public class VR_CameraEnvironmentSetting : MonoBehaviour
{
	[Token(Token = "0x600113D")]
	[Address(RVA = "0xD142F4", Offset = "0xD142F4", VA = "0xD142F4")]
	private void Start()
	{
	}

	[Token(Token = "0x600113E")]
	[Address(RVA = "0xD14378", Offset = "0xD14378", VA = "0xD14378")]
	private void Update()
	{
	}

	[Token(Token = "0x600113F")]
	[Address(RVA = "0xD1437C", Offset = "0xD1437C", VA = "0xD1437C")]
	public VR_CameraEnvironmentSetting()
	{
	}
}
[Token(Token = "0x20000FF")]
internal class VR_ControllerHandler : MonoBehaviour
{
	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator LeftHandModel;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Animator RightHandModel;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool lPrimary2DButton;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool lTriggerButton;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	private bool A;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	private bool B;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool X;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	private bool Y;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private LuaFunction primary2DAxisFun;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool NotifyToLua;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int mainHand;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int frameInteral;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool left_trigger_button;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	private bool right_trigger_button;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector2 left_primary2DAxis;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector2 left_secondary2DAxis;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool left_primary2DAxisClick;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool left_primary2DAxisTouch;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	private bool left_secondary2DAxisClick;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
	private bool left_secondary2DAxisTouch;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool left_gripButtonClick;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	private bool left_primaryButton;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
	private bool left_secondaryButton;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5F")]
	private bool left_menuButton;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector2 right_primary2DAxis;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector2 right_secondary2DAxis;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool right_primary2DAxisClick;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	private bool right_primary2DAxisTouch;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
	private bool right_secondary2DAxisClick;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x73")]
	private bool right_secondary2DAxisTouch;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool right_gripButtonClick;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
	private bool right_primaryButton;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x76")]
	private bool right_secondaryButton;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x77")]
	private bool right_menuButton;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Ray leftRay;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Ray rightRay;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private GameObject hand_l;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private GameObject hand_r;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private GameObject handController_l;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private GameObject handController_r;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Vector3 hit_position_l;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private Vector3 hit_position_r;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool hitbool_l;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
	private bool hitbool_r;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private HapticCapabilities capabilities;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private InputDevice device;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static VR_ControllerHandler instance;

	[Token(Token = "0x1700002E")]
	public static VR_ControllerHandler Instance
	{
		[Token(Token = "0x6001140")]
		[Address(RVA = "0xD13ED4", Offset = "0xD13ED4", VA = "0xD13ED4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001141")]
	[Address(RVA = "0xD14384", Offset = "0xD14384", VA = "0xD14384")]
	private void Start()
	{
	}

	[Token(Token = "0x6001142")]
	[Address(RVA = "0xD14570", Offset = "0xD14570", VA = "0xD14570")]
	private void Update()
	{
	}

	[Token(Token = "0x6001143")]
	[Address(RVA = "0xD14974", Offset = "0xD14974", VA = "0xD14974")]
	private void DisconnectedCall(InputDevice _id)
	{
	}

	[Token(Token = "0x6001144")]
	[Address(RVA = "0xD149B8", Offset = "0xD149B8", VA = "0xD149B8")]
	private void ConnectedCall(InputDevice _id)
	{
	}

	[Token(Token = "0x6001145")]
	[Address(RVA = "0xD14A0C", Offset = "0xD14A0C", VA = "0xD14A0C")]
	private void HandleRayForward()
	{
	}

	[Token(Token = "0x6001146")]
	[Address(RVA = "0xD14B24", Offset = "0xD14B24", VA = "0xD14B24")]
	private void HandleRayFunc(GameObject handController, out Vector3 hitPosition, Ray ray, out bool hitBool)
	{
	}

	[Token(Token = "0x6001147")]
	[Address(RVA = "0xD14EDC", Offset = "0xD14EDC", VA = "0xD14EDC")]
	private bool CalPlaneLineIntersectPoint(Vector3 planeNVector, Vector3 planePoint, Vector3 lineVector, Vector3 linePoint, out Vector3 result)
	{
		return default(bool);
	}

	[Token(Token = "0x6001148")]
	[Address(RVA = "0xD145F8", Offset = "0xD145F8", VA = "0xD145F8")]
	private void HandleTriggerButton()
	{
	}

	[Token(Token = "0x6001149")]
	[Address(RVA = "0xD14804", Offset = "0xD14804", VA = "0xD14804")]
	private void HandleGripButton()
	{
	}

	[Token(Token = "0x600114A")]
	[Address(RVA = "0xD145D4", Offset = "0xD145D4", VA = "0xD145D4")]
	private void HandleFourDirections()
	{
	}

	[Token(Token = "0x600114B")]
	[Address(RVA = "0xD15514", Offset = "0xD15514", VA = "0xD15514")]
	private void HandleFourDirectionsLeft()
	{
	}

	[Token(Token = "0x600114C")]
	[Address(RVA = "0xD156BC", Offset = "0xD156BC", VA = "0xD156BC")]
	private void HandleFourDirectionsRight()
	{
	}

	[Token(Token = "0x600114D")]
	[Address(RVA = "0xD159B4", Offset = "0xD159B4", VA = "0xD159B4")]
	public bool IsRightHandActive()
	{
		return default(bool);
	}

	[Token(Token = "0x600114E")]
	[Address(RVA = "0xD15864", Offset = "0xD15864", VA = "0xD15864")]
	public bool IsLeftHandActive()
	{
		return default(bool);
	}

	[Token(Token = "0x600114F")]
	[Address(RVA = "0xD1589C", Offset = "0xD1589C", VA = "0xD1589C")]
	private void CallLeftPrimary2DAxis()
	{
	}

	[Token(Token = "0x6001150")]
	[Address(RVA = "0xD159EC", Offset = "0xD159EC", VA = "0xD159EC")]
	private void CallRightPrimary2DAxis()
	{
	}

	[Token(Token = "0x6001151")]
	[Address(RVA = "0xD15928", Offset = "0xD15928", VA = "0xD15928")]
	private void CallLeftPrimary2DAxisClick()
	{
	}

	[Token(Token = "0x6001152")]
	[Address(RVA = "0xD15A78", Offset = "0xD15A78", VA = "0xD15A78")]
	private void CallRightPrimary2DAxisClick()
	{
	}

	[Token(Token = "0x6001153")]
	[Address(RVA = "0xD1540C", Offset = "0xD1540C", VA = "0xD1540C")]
	private void CallLeftGripButton()
	{
	}

	[Token(Token = "0x6001154")]
	[Address(RVA = "0xD15490", Offset = "0xD15490", VA = "0xD15490")]
	private void CallRightGripButton()
	{
	}

	[Token(Token = "0x6001155")]
	[Address(RVA = "0xD14FAC", Offset = "0xD14FAC", VA = "0xD14FAC")]
	private void CallLeftSecondaryButton()
	{
	}

	[Token(Token = "0x6001156")]
	[Address(RVA = "0xD15038", Offset = "0xD15038", VA = "0xD15038")]
	private void CallRightSecondaryButton()
	{
	}

	[Token(Token = "0x6001157")]
	[Address(RVA = "0xD150C4", Offset = "0xD150C4", VA = "0xD150C4")]
	private void CallLeftMenuButton()
	{
	}

	[Token(Token = "0x6001158")]
	[Address(RVA = "0xD15150", Offset = "0xD15150", VA = "0xD15150")]
	private void CallRightMenuButton()
	{
	}

	[Token(Token = "0x6001159")]
	[Address(RVA = "0xD151DC", Offset = "0xD151DC", VA = "0xD151DC")]
	private void CallLeftPrimaryButton()
	{
	}

	[Token(Token = "0x600115A")]
	[Address(RVA = "0xD15268", Offset = "0xD15268", VA = "0xD15268")]
	private void CallRightPrimaryButton()
	{
	}

	[Token(Token = "0x600115B")]
	[Address(RVA = "0xD152F4", Offset = "0xD152F4", VA = "0xD152F4")]
	private void CallLeftTriggerButton()
	{
	}

	[Token(Token = "0x600115C")]
	[Address(RVA = "0xD15380", Offset = "0xD15380", VA = "0xD15380")]
	private void CallRightTriggerButton()
	{
	}

	[Token(Token = "0x600115D")]
	[Address(RVA = "0xD15B04", Offset = "0xD15B04", VA = "0xD15B04")]
	public void SetPrimary2dAxisFunction(LuaFunction fun)
	{
	}

	[Token(Token = "0x600115E")]
	[Address(RVA = "0xD1407C", Offset = "0xD1407C", VA = "0xD1407C")]
	public bool GetTriggerButton()
	{
		return default(bool);
	}

	[Token(Token = "0x600115F")]
	[Address(RVA = "0xD1417C", Offset = "0xD1417C", VA = "0xD1417C")]
	public Vector3 GetHitPos(int hand)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001160")]
	[Address(RVA = "0xD14168", Offset = "0xD14168", VA = "0xD14168")]
	public bool GetCanHitPosEffective(int hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6001161")]
	[Address(RVA = "0xD15B0C", Offset = "0xD15B0C", VA = "0xD15B0C")]
	public void ShakeHand(int hand, float amplitude, float duration)
	{
	}

	[Token(Token = "0x6001162")]
	[Address(RVA = "0xD148D8", Offset = "0xD148D8", VA = "0xD148D8")]
	private void HandleHandModelView()
	{
	}

	[Token(Token = "0x6001163")]
	[Address(RVA = "0xD15BAC", Offset = "0xD15BAC", VA = "0xD15BAC")]
	private void HandleHandModelAnim()
	{
	}

	[Token(Token = "0x6001164")]
	[Address(RVA = "0xD15EA8", Offset = "0xD15EA8", VA = "0xD15EA8")]
	private void HandleHandModelChangeTexture()
	{
	}

	[Token(Token = "0x6001165")]
	[Address(RVA = "0xD160C4", Offset = "0xD160C4", VA = "0xD160C4")]
	private void SetPicoXrHandTexture(string name, GameObject hand)
	{
	}

	[Token(Token = "0x6001166")]
	[Address(RVA = "0xD16310", Offset = "0xD16310", VA = "0xD16310")]
	public void SetLineRendererActive(bool active)
	{
	}

	[Token(Token = "0x6001167")]
	[Address(RVA = "0xD164BC", Offset = "0xD164BC", VA = "0xD164BC")]
	public void SetHandControllerActive(bool active)
	{
	}

	[Token(Token = "0x6001168")]
	[Address(RVA = "0xD165A0", Offset = "0xD165A0", VA = "0xD165A0")]
	public VR_ControllerHandler()
	{
	}
}
[Token(Token = "0x2000100")]
internal class VR_FPS : MonoBehaviour
{
	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text text;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float timePassed;

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int m_FrameCount;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float m_FPS;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float fpsMeasuringDelta;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public DateTime lastTime;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string colorStr;

	[Token(Token = "0x600116A")]
	[Address(RVA = "0xD16644", Offset = "0xD16644", VA = "0xD16644")]
	private void Awake()
	{
	}

	[Token(Token = "0x600116B")]
	[Address(RVA = "0xD166B4", Offset = "0xD166B4", VA = "0xD166B4")]
	private void _updateFPS()
	{
	}

	[Token(Token = "0x600116C")]
	[Address(RVA = "0xD16B7C", Offset = "0xD16B7C", VA = "0xD16B7C")]
	private void Update()
	{
	}

	[Token(Token = "0x600116D")]
	[Address(RVA = "0xD16B04", Offset = "0xD16B04", VA = "0xD16B04")]
	protected long GetTotalAllocatedMemory()
	{
		return default(long);
	}

	[Token(Token = "0x600116E")]
	[Address(RVA = "0xD16B2C", Offset = "0xD16B2C", VA = "0xD16B2C")]
	protected long GetTotalReservedMemory()
	{
		return default(long);
	}

	[Token(Token = "0x600116F")]
	[Address(RVA = "0xD16B54", Offset = "0xD16B54", VA = "0xD16B54")]
	protected long GetTotalUnusedReservedMemory()
	{
		return default(long);
	}

	[Token(Token = "0x6001170")]
	[Address(RVA = "0xD16BFC", Offset = "0xD16BFC", VA = "0xD16BFC")]
	public VR_FPS()
	{
	}
}
[Token(Token = "0x2000101")]
public class VR_PicoXrHandModel : MonoBehaviour
{
	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D textureIdle;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture2D textureApp;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture2D textureHome;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture2D textureTouchpad;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture2D textureVolUp;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture2D textureVolDown;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture2D textureTrigger;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Texture2D textureA;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Texture2D textureB;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Texture2D textureX;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Texture2D textureY;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Texture2D textureGrip;

	[Token(Token = "0x6001171")]
	[Address(RVA = "0xD16178", Offset = "0xD16178", VA = "0xD16178")]
	public Texture2D GetPicoXrHandTexture(string name)
	{
		return null;
	}

	[Token(Token = "0x6001172")]
	[Address(RVA = "0xD16C10", Offset = "0xD16C10", VA = "0xD16C10")]
	public VR_PicoXrHandModel()
	{
	}
}
[Token(Token = "0x2000102")]
public class VR_StartVRSetting : MonoBehaviour
{
	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextEx ErrorText;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float CameraOffset;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Camera cam;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string[] strGroupOne;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 OriVector;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 OriUIVector;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 UIscaleVector;

	[Token(Token = "0x6001173")]
	[Address(RVA = "0xD16C18", Offset = "0xD16C18", VA = "0xD16C18")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001174")]
	[Address(RVA = "0xD16F8C", Offset = "0xD16F8C", VA = "0xD16F8C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001175")]
	[Address(RVA = "0xD17048", Offset = "0xD17048", VA = "0xD17048")]
	private void TestLogCallback(string condition, string stackTrace, LogType type)
	{
	}

	[Token(Token = "0x6001176")]
	[Address(RVA = "0xD17124", Offset = "0xD17124", VA = "0xD17124")]
	public VR_StartVRSetting()
	{
	}
}
[Token(Token = "0x2000103")]
public class VR_UI_Follow : MonoBehaviour
{
	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject cameraGo;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float distance;

	[Token(Token = "0x6001177")]
	[Address(RVA = "0xD17424", Offset = "0xD17424", VA = "0xD17424")]
	private void Start()
	{
	}

	[Token(Token = "0x6001178")]
	[Address(RVA = "0xD174E0", Offset = "0xD174E0", VA = "0xD174E0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6001179")]
	[Address(RVA = "0xD17568", Offset = "0xD17568", VA = "0xD17568")]
	private void flowTarget()
	{
	}

	[Token(Token = "0x600117A")]
	[Address(RVA = "0xD17774", Offset = "0xD17774", VA = "0xD17774")]
	public VR_UI_Follow()
	{
	}
}
[Token(Token = "0x2000104")]
[ExecuteInEditMode]
public class ParticleScaler : MonoBehaviour
{
	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float particleScale;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool alsoScaleGameobject;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float prevScale;

	[Token(Token = "0x600117B")]
	[Address(RVA = "0x15C8178", Offset = "0x15C8178", VA = "0x15C8178")]
	private void Start()
	{
	}

	[Token(Token = "0x600117C")]
	[Address(RVA = "0x15C8184", Offset = "0x15C8184", VA = "0x15C8184")]
	private void Update()
	{
	}

	[Token(Token = "0x600117D")]
	[Address(RVA = "0x15C8188", Offset = "0x15C8188", VA = "0x15C8188")]
	private void ScaleShurikenSystems(float scaleFactor)
	{
	}

	[Token(Token = "0x600117E")]
	[Address(RVA = "0x15C818C", Offset = "0x15C818C", VA = "0x15C818C")]
	private void ScaleLegacySystems(float scaleFactor)
	{
	}

	[Token(Token = "0x600117F")]
	[Address(RVA = "0x15C8190", Offset = "0x15C8190", VA = "0x15C8190")]
	private void ScaleTrailRenderers(float scaleFactor)
	{
	}

	[Token(Token = "0x6001180")]
	[Address(RVA = "0x15C827C", Offset = "0x15C827C", VA = "0x15C827C")]
	public ParticleScaler()
	{
	}
}
[Token(Token = "0x2000105")]
public class SfxDelay : MonoBehaviour
{
	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float delayTime;

	[Token(Token = "0x6001181")]
	[Address(RVA = "0xD30AFC", Offset = "0xD30AFC", VA = "0xD30AFC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001182")]
	[Address(RVA = "0xD30B8C", Offset = "0xD30B8C", VA = "0xD30B8C")]
	private void Active()
	{
	}

	[Token(Token = "0x6001183")]
	[Address(RVA = "0xD30BB4", Offset = "0xD30BB4", VA = "0xD30BB4")]
	public SfxDelay()
	{
	}
}
[Token(Token = "0x2000106")]
public class SfxDestory : MonoBehaviour
{
	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float destoryTime;

	[Token(Token = "0x6001184")]
	[Address(RVA = "0xD30BBC", Offset = "0xD30BBC", VA = "0xD30BBC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001185")]
	[Address(RVA = "0xD30C64", Offset = "0xD30C64", VA = "0xD30C64")]
	public SfxDestory()
	{
	}
}
[Token(Token = "0x2000107")]
public class SfxTrail : MonoBehaviour
{
	[Token(Token = "0x200034C")]
	public class Point
	{
		[Token(Token = "0x4000E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float timeCreated;

		[Token(Token = "0x4000E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 basePosition;

		[Token(Token = "0x4000E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 tipPosition;

		[Token(Token = "0x6002BEB")]
		[Address(RVA = "0xD321B0", Offset = "0xD321B0", VA = "0xD321B0")]
		public Point()
		{
		}
	}

	[Token(Token = "0x200034D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93FE80", Offset = "0x93FE80")]
	private sealed class <NewCatmullRom>d__27 : IEnumerable<Vector3>, IEnumerable, IEnumerator<Vector3>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Vector3 <>2__current;

		[Token(Token = "0x4000E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <>l__initialThreadId;

		[Token(Token = "0x4000E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3[] nodes;

		[Token(Token = "0x4000E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3[] <>3__nodes;

		[Token(Token = "0x4000E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool loop;

		[Token(Token = "0x4000E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool <>3__loop;

		[Token(Token = "0x4000E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int slices;

		[Token(Token = "0x4000E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int <>3__slices;

		[Token(Token = "0x4000E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int <last>5__2;

		[Token(Token = "0x4000E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int <current>5__3;

		[Token(Token = "0x4000E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int <previous>5__4;

		[Token(Token = "0x4000E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int <start>5__5;

		[Token(Token = "0x4000E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int <end>5__6;

		[Token(Token = "0x4000E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int <next>5__7;

		[Token(Token = "0x4000E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int <stepCount>5__8;

		[Token(Token = "0x4000E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int <step>5__9;

		[Token(Token = "0x170001F5")]
		private Vector3 System.Collections.Generic.IEnumerator<UnityEngine.Vector3>.Current
		{
			[Token(Token = "0x6002BEF")]
			[Address(RVA = "0xD328D0", Offset = "0xD328D0", VA = "0xD328D0", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170001F6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002BF1")]
			[Address(RVA = "0xD3293C", Offset = "0xD3293C", VA = "0xD3293C", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002BEC")]
		[Address(RVA = "0xD323A0", Offset = "0xD323A0", VA = "0xD323A0")]
		[DebuggerHidden]
		public <NewCatmullRom>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6002BED")]
		[Address(RVA = "0xD3267C", Offset = "0xD3267C", VA = "0xD3267C", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002BEE")]
		[Address(RVA = "0xD32680", Offset = "0xD32680", VA = "0xD32680", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002BF0")]
		[Address(RVA = "0xD328DC", Offset = "0xD328DC", VA = "0xD328DC", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x6002BF2")]
		[Address(RVA = "0xD329A8", Offset = "0xD329A8", VA = "0xD329A8", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<Vector3> System.Collections.Generic.IEnumerable<UnityEngine.Vector3>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6002BF3")]
		[Address(RVA = "0xD32A64", Offset = "0xD32A64", VA = "0xD32A64", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool emit;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float emitTime;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material material;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float lifeTime;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color[] colors;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float[] sizes;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float minVertexDistance;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float maxVertexDistance;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float maxAngle;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool autoDestruct;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int subdivisions;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform baseGO;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform tipGO;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float minVertexDistanceSqr;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float maxVertexDistanceSqr;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<Point> mPoints;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<Point> mSmoothPoints;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private GameObject mTrailGO;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Mesh mTrialMesh;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3 mLastPos;

	[Token(Token = "0x6001186")]
	[Address(RVA = "0xD30C6C", Offset = "0xD30C6C", VA = "0xD30C6C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001187")]
	[Address(RVA = "0xD30C70", Offset = "0xD30C70", VA = "0xD30C70")]
	private void AddTrailGo()
	{
	}

	[Token(Token = "0x6001188")]
	[Address(RVA = "0xD30F20", Offset = "0xD30F20", VA = "0xD30F20")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6001189")]
	[Address(RVA = "0xD30F24", Offset = "0xD30F24", VA = "0xD30F24")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600118A")]
	[Address(RVA = "0xD30F90", Offset = "0xD30F90", VA = "0xD30F90")]
	private void Update()
	{
	}

	[Token(Token = "0x600118B")]
	[Address(RVA = "0xD32254", Offset = "0xD32254", VA = "0xD32254")]
	private void RemoveOldPoints(List<Point> pointList)
	{
	}

	[Token(Token = "0x600118C")]
	[Address(RVA = "0xD321B8", Offset = "0xD321B8", VA = "0xD321B8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A60B8", Offset = "0x9A60B8")]
	public static IEnumerable<Vector3> NewCatmullRom(Vector3[] nodes, int slices, bool loop)
	{
		return null;
	}

	[Token(Token = "0x600118D")]
	[Address(RVA = "0xD323D8", Offset = "0xD323D8", VA = "0xD323D8")]
	private static Vector3 CatmullRom(Vector3 previous, Vector3 start, Vector3 end, Vector3 next, float elapsedTime, float duration)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600118E")]
	[Address(RVA = "0xD325C0", Offset = "0xD325C0", VA = "0xD325C0")]
	public SfxTrail()
	{
	}
}
[Serializable]
[Token(Token = "0x2000108")]
public class PreviewItem
{
	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject target;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float delayTime;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool isDone;

	[Token(Token = "0x600118F")]
	[Address(RVA = "0x10134F4", Offset = "0x10134F4", VA = "0x10134F4")]
	public PreviewItem()
	{
	}
}
[Token(Token = "0x2000109")]
public class ArtistPreview : MonoBehaviour
{
	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PreviewItem[] items;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float time;

	[Token(Token = "0x6001190")]
	[Address(RVA = "0xEE8E6C", Offset = "0xEE8E6C", VA = "0xEE8E6C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001191")]
	[Address(RVA = "0xEE8F74", Offset = "0xEE8F74", VA = "0xEE8F74")]
	private void Update()
	{
	}

	[Token(Token = "0x6001192")]
	[Address(RVA = "0xEE8E70", Offset = "0xEE8E70", VA = "0xEE8E70")]
	public void ResetList()
	{
	}

	[Token(Token = "0x6001193")]
	[Address(RVA = "0xEE91A0", Offset = "0xEE91A0", VA = "0xEE91A0")]
	public ArtistPreview()
	{
	}
}
[Token(Token = "0x200010A")]
public class ChangeMaterial : MonoBehaviour
{
	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Material> Materials;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float FrameIntervalTime;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshRenderer mRender;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public new string name;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private DateTime mCurrentTime;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int mCurrentIndex;

	[Token(Token = "0x6001194")]
	[Address(RVA = "0xEED404", Offset = "0xEED404", VA = "0xEED404")]
	public void Awake()
	{
	}

	[Token(Token = "0x6001195")]
	[Address(RVA = "0xEED45C", Offset = "0xEED45C", VA = "0xEED45C")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6001196")]
	[Address(RVA = "0xEED4CC", Offset = "0xEED4CC", VA = "0xEED4CC")]
	public void Update()
	{
	}

	[Token(Token = "0x6001197")]
	[Address(RVA = "0xEED5B0", Offset = "0xEED5B0", VA = "0xEED5B0")]
	private void SetMaterial(int index)
	{
	}

	[Token(Token = "0x6001198")]
	[Address(RVA = "0xEED638", Offset = "0xEED638", VA = "0xEED638")]
	public ChangeMaterial()
	{
	}
}
[Token(Token = "0x200010B")]
internal class ChangeMaterialQueue : MonoBehaviour
{
	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<string, ChangeMaterial> mDic;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<string> Names;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<float> Times;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private DateTime mCurrentTime;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int mCurrentIndex;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float LoopTime;

	[Token(Token = "0x6001199")]
	[Address(RVA = "0xEED648", Offset = "0xEED648", VA = "0xEED648")]
	public void Awake()
	{
	}

	[Token(Token = "0x600119A")]
	[Address(RVA = "0xEED740", Offset = "0xEED740", VA = "0xEED740")]
	public void Update()
	{
	}

	[Token(Token = "0x600119B")]
	[Address(RVA = "0xEED98C", Offset = "0xEED98C", VA = "0xEED98C")]
	public ChangeMaterialQueue()
	{
	}
}
[Token(Token = "0x200010C")]
public class UtilEditorSelectList : MonoBehaviour
{
	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEngine.Object[] selectList;

	[Token(Token = "0x600119C")]
	[Address(RVA = "0xD14228", Offset = "0xD14228", VA = "0xD14228")]
	public void SetSelectList(UnityEngine.Object[] temp)
	{
	}

	[Token(Token = "0x600119D")]
	[Address(RVA = "0xD14294", Offset = "0xD14294", VA = "0xD14294")]
	public UtilEditorSelectList()
	{
	}
}
[Token(Token = "0x200010D")]
public class CUI_CameraRotationOnButtonHeld : MonoBehaviour
{
	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float Sensitivity;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 oldMousePos;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool move;

	[Token(Token = "0x600119E")]
	[Address(RVA = "0xEEA7EC", Offset = "0xEEA7EC", VA = "0xEEA7EC")]
	private void Start()
	{
	}

	[Token(Token = "0x600119F")]
	[Address(RVA = "0xEEA818", Offset = "0xEEA818", VA = "0xEEA818")]
	public CUI_CameraRotationOnButtonHeld()
	{
	}
}
[Token(Token = "0x200010E")]
public class CUI_MoveAlong : MonoBehaviour
{
	[Token(Token = "0x60011A0")]
	[Address(RVA = "0xEEA830", Offset = "0xEEA830", VA = "0xEEA830")]
	private void Start()
	{
	}

	[Token(Token = "0x60011A1")]
	[Address(RVA = "0xEEA834", Offset = "0xEEA834", VA = "0xEEA834")]
	private void Update()
	{
	}

	[Token(Token = "0x60011A2")]
	[Address(RVA = "0xEEAA88", Offset = "0xEEAA88", VA = "0xEEAA88")]
	public CUI_MoveAlong()
	{
	}
}
[Token(Token = "0x200010F")]
public class CUI_MoveHeartbeat : MonoBehaviour
{
	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool wrapAroundParent;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform rectie;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform parentRectie;

	[Token(Token = "0x60011A3")]
	[Address(RVA = "0xEEAA90", Offset = "0xEEAA90", VA = "0xEEAA90")]
	private void Start()
	{
	}

	[Token(Token = "0x60011A4")]
	[Address(RVA = "0xEEAB48", Offset = "0xEEAB48", VA = "0xEEAB48")]
	private void Update()
	{
	}

	[Token(Token = "0x60011A5")]
	[Address(RVA = "0xEEAC94", Offset = "0xEEAC94", VA = "0xEEAC94")]
	public CUI_MoveHeartbeat()
	{
	}
}
[Token(Token = "0x2000110")]
public class CUI_ShowParentCoordinates : MonoBehaviour
{
	[Token(Token = "0x60011A6")]
	[Address(RVA = "0xEEACA4", Offset = "0xEEACA4", VA = "0xEEACA4")]
	private void Start()
	{
	}

	[Token(Token = "0x60011A7")]
	[Address(RVA = "0xEEAD70", Offset = "0xEEAD70", VA = "0xEEAD70")]
	private void Update()
	{
	}

	[Token(Token = "0x60011A8")]
	[Address(RVA = "0xEEAD74", Offset = "0xEEAD74", VA = "0xEEAD74")]
	public CUI_ShowParentCoordinates()
	{
	}
}
[Token(Token = "0x2000111")]
public class CUI_rotation_anim : MonoBehaviour
{
	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 Rotation;

	[Token(Token = "0x60011A9")]
	[Address(RVA = "0xEEAD7C", Offset = "0xEEAD7C", VA = "0xEEAD7C")]
	private void Start()
	{
	}

	[Token(Token = "0x60011AA")]
	[Address(RVA = "0xEEAD80", Offset = "0xEEAD80", VA = "0xEEAD80")]
	private void Update()
	{
	}

	[Token(Token = "0x60011AB")]
	[Address(RVA = "0xEEAF68", Offset = "0xEEAF68", VA = "0xEEAF68")]
	public CUI_rotation_anim()
	{
	}
}
[Token(Token = "0x2000112")]
public class CUI_touchpad : MonoBehaviour
{
	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform container;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform dot;

	[Token(Token = "0x60011AC")]
	[Address(RVA = "0xEEAF70", Offset = "0xEEAF70", VA = "0xEEAF70")]
	private void Awake()
	{
	}

	[Token(Token = "0x60011AD")]
	[Address(RVA = "0xEEAFE4", Offset = "0xEEAFE4", VA = "0xEEAFE4")]
	private void MoveDotOnTouchpadAxisChanged(object o, ViveInputArgs args)
	{
	}

	[Token(Token = "0x60011AE")]
	[Address(RVA = "0xEEB0C0", Offset = "0xEEB0C0", VA = "0xEEB0C0")]
	public CUI_touchpad()
	{
	}
}
[Token(Token = "0x2000113")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x93EAD0", Offset = "0x93EAD0")]
public class DynamicBone : MonoBehaviour
{
	[Token(Token = "0x200034E")]
	public enum FreezeAxis
	{
		[Token(Token = "0x4000E5B")]
		None,
		[Token(Token = "0x4000E5C")]
		X,
		[Token(Token = "0x4000E5D")]
		Y,
		[Token(Token = "0x4000E5E")]
		Z
	}

	[Token(Token = "0x200034F")]
	private class Particle
	{
		[Token(Token = "0x4000E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform m_Transform;

		[Token(Token = "0x4000E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int m_ParentIndex;

		[Token(Token = "0x4000E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m_Damping;

		[Token(Token = "0x4000E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_Elasticity;

		[Token(Token = "0x4000E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m_Stiffness;

		[Token(Token = "0x4000E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_Inert;

		[Token(Token = "0x4000E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m_Radius;

		[Token(Token = "0x4000E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_BoneLength;

		[Token(Token = "0x4000E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 m_Position;

		[Token(Token = "0x4000E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 m_PrevPosition;

		[Token(Token = "0x4000E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector3 m_EndOffset;

		[Token(Token = "0x4000E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Vector3 m_InitLocalPosition;

		[Token(Token = "0x4000E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Quaternion m_InitLocalRotation;

		[Token(Token = "0x6002BF4")]
		[Address(RVA = "0x11278DC", Offset = "0x11278DC", VA = "0x11278DC")]
		public Particle()
		{
		}
	}

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform m_Root;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_UpdateRate;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x940E74", Offset = "0x940E74")]
	public float m_Damping;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve m_DampingDistrib;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x940E8C", Offset = "0x940E8C")]
	public float m_Elasticity;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve m_ElasticityDistrib;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x940EA4", Offset = "0x940EA4")]
	public float m_Stiffness;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AnimationCurve m_StiffnessDistrib;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x940EBC", Offset = "0x940EBC")]
	public float m_Inert;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AnimationCurve m_InertDistrib;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float m_Radius;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AnimationCurve m_RadiusDistrib;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float m_EndLength;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public Vector3 m_EndOffset;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Vector3 m_Gravity;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public Vector3 m_Force;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public List<DynamicBoneCollider> m_Colliders;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public List<Transform> m_Exclusions;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public FreezeAxis m_FreezeAxis;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public bool m_DistantDisable;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Transform m_ReferenceObject;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float m_DistanceToObject;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Vector3 m_LocalGravity;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Vector3 m_ObjectMove;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private Vector3 m_ObjectPrevPosition;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float m_BoneTotalLength;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float m_ObjectScale;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float m_Time;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private float m_Weight;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool m_DistantDisabled;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private List<Particle> m_Particles;

	[Token(Token = "0x60011AF")]
	[Address(RVA = "0x1125160", Offset = "0x1125160", VA = "0x1125160")]
	private void Start()
	{
	}

	[Token(Token = "0x60011B0")]
	[Address(RVA = "0x11254E0", Offset = "0x11254E0", VA = "0x11254E0")]
	private void Update()
	{
	}

	[Token(Token = "0x60011B1")]
	[Address(RVA = "0x1125604", Offset = "0x1125604", VA = "0x1125604")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60011B2")]
	[Address(RVA = "0x1125664", Offset = "0x1125664", VA = "0x1125664")]
	private void CheckDistance()
	{
	}

	[Token(Token = "0x60011B3")]
	[Address(RVA = "0x1125C08", Offset = "0x1125C08", VA = "0x1125C08")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60011B4")]
	[Address(RVA = "0x1125C0C", Offset = "0x1125C0C", VA = "0x1125C0C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60011B5")]
	[Address(RVA = "0x1125C10", Offset = "0x1125C10", VA = "0x1125C10")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60011B6")]
	[Address(RVA = "0x1125D2C", Offset = "0x1125D2C", VA = "0x1125D2C")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60011B7")]
	[Address(RVA = "0x1125ED0", Offset = "0x1125ED0", VA = "0x1125ED0")]
	public void SetWeight(float w)
	{
	}

	[Token(Token = "0x60011B8")]
	[Address(RVA = "0x1125F2C", Offset = "0x1125F2C", VA = "0x1125F2C")]
	public float GetWeight()
	{
		return default(float);
	}

	[Token(Token = "0x60011B9")]
	[Address(RVA = "0x1125868", Offset = "0x1125868", VA = "0x1125868")]
	private void UpdateDynamicBones(float t)
	{
	}

	[Token(Token = "0x60011BA")]
	[Address(RVA = "0x1125164", Offset = "0x1125164", VA = "0x1125164")]
	private void SetupParticles()
	{
	}

	[Token(Token = "0x60011BB")]
	[Address(RVA = "0x11272D8", Offset = "0x11272D8", VA = "0x11272D8")]
	private void AppendParticles(Transform b, int parentIndex, float boneLength)
	{
	}

	[Token(Token = "0x60011BC")]
	[Address(RVA = "0x1125504", Offset = "0x1125504", VA = "0x1125504")]
	private void InitTransforms()
	{
	}

	[Token(Token = "0x60011BD")]
	[Address(RVA = "0x1125AAC", Offset = "0x1125AAC", VA = "0x1125AAC")]
	private void ResetParticlesPosition()
	{
	}

	[Token(Token = "0x60011BE")]
	[Address(RVA = "0x1125F34", Offset = "0x1125F34", VA = "0x1125F34")]
	private void UpdateParticles1()
	{
	}

	[Token(Token = "0x60011BF")]
	[Address(RVA = "0x1126244", Offset = "0x1126244", VA = "0x1126244")]
	private void UpdateParticles2()
	{
	}

	[Token(Token = "0x60011C0")]
	[Address(RVA = "0x11269C8", Offset = "0x11269C8", VA = "0x11269C8")]
	private void SkipUpdateParticles()
	{
	}

	[Token(Token = "0x60011C1")]
	[Address(RVA = "0x1127018", Offset = "0x1127018", VA = "0x1127018")]
	private void ApplyParticlesToTransforms()
	{
	}

	[Token(Token = "0x60011C2")]
	[Address(RVA = "0x1127C14", Offset = "0x1127C14", VA = "0x1127C14")]
	public DynamicBone()
	{
	}
}
[Token(Token = "0x2000114")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x93EB08", Offset = "0x93EB08")]
public class DynamicBoneCollider : MonoBehaviour
{
	[Token(Token = "0x2000350")]
	public enum Direction
	{
		[Token(Token = "0x4000E6D")]
		X,
		[Token(Token = "0x4000E6E")]
		Y,
		[Token(Token = "0x4000E6F")]
		Z
	}

	[Token(Token = "0x2000351")]
	public enum Bound
	{
		[Token(Token = "0x4000E71")]
		Outside,
		[Token(Token = "0x4000E72")]
		Inside
	}

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 m_Center;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float m_Radius;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float m_Height;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Direction m_Direction;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Bound m_Bound;

	[Token(Token = "0x60011C3")]
	[Address(RVA = "0x1127D34", Offset = "0x1127D34", VA = "0x1127D34")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60011C4")]
	[Address(RVA = "0x11279BC", Offset = "0x11279BC", VA = "0x11279BC")]
	public void Collide(ref Vector3 particlePosition, float particleRadius)
	{
	}

	[Token(Token = "0x60011C5")]
	[Address(RVA = "0x1127DCC", Offset = "0x1127DCC", VA = "0x1127DCC")]
	private static void OutsideSphere(ref Vector3 particlePosition, float particleRadius, Vector3 sphereCenter, float sphereRadius)
	{
	}

	[Token(Token = "0x60011C6")]
	[Address(RVA = "0x1127F60", Offset = "0x1127F60", VA = "0x1127F60")]
	private static void InsideSphere(ref Vector3 particlePosition, float particleRadius, Vector3 sphereCenter, float sphereRadius)
	{
	}

	[Token(Token = "0x60011C7")]
	[Address(RVA = "0x1128104", Offset = "0x1128104", VA = "0x1128104")]
	private static void OutsideCapsule(ref Vector3 particlePosition, float particleRadius, Vector3 capsuleP0, Vector3 capsuleP1, float capsuleRadius)
	{
	}

	[Token(Token = "0x60011C8")]
	[Address(RVA = "0x1128540", Offset = "0x1128540", VA = "0x1128540")]
	private static void InsideCapsule(ref Vector3 particlePosition, float particleRadius, Vector3 capsuleP0, Vector3 capsuleP1, float capsuleRadius)
	{
	}

	[Token(Token = "0x60011C9")]
	[Address(RVA = "0x1128950", Offset = "0x1128950", VA = "0x1128950")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60011CA")]
	[Address(RVA = "0x1128B38", Offset = "0x1128B38", VA = "0x1128B38")]
	public DynamicBoneCollider()
	{
	}
}
namespace gcloud_voice
{
	[Token(Token = "0x2000115")]
	public abstract class IGCloudVoice : IGCloudVoiceExtension
	{
		[Token(Token = "0x2000352")]
		public class GCloudVoice
		{
			[Token(Token = "0x4000E73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static IGCloudVoice instance;

			[Token(Token = "0x6002BF5")]
			[Address(RVA = "0x1C7CB50", Offset = "0x1C7CB50", VA = "0x1C7CB50")]
			public static IGCloudVoice GetEngine()
			{
				return null;
			}

			[Token(Token = "0x6002BF6")]
			[Address(RVA = "0x1C7CEF0", Offset = "0x1C7CEF0", VA = "0x1C7CEF0")]
			public GCloudVoice()
			{
			}
		}

		[Token(Token = "0x60011CB")]
		public abstract int SetAppInfo(string appID, string appKey, string openID);

		[Token(Token = "0x60011CC")]
		public abstract int Init();

		[Token(Token = "0x60011CD")]
		public abstract int SetMode(GCloudVoiceMode mode);

		[Token(Token = "0x60011CE")]
		public abstract int Poll();

		[Token(Token = "0x60011CF")]
		public abstract int Pause();

		[Token(Token = "0x60011D0")]
		public abstract int Resume();

		[Token(Token = "0x60011D1")]
		public abstract int JoinTeamRoom(string roomName, int msTimeout);

		[Token(Token = "0x60011D2")]
		public abstract int JoinRangeRoom(string roomName, int msTimeout);

		[Token(Token = "0x60011D3")]
		public abstract int JoinNationalRoom(string roomName, GCloudVoiceRole role, int msTimeout);

		[Token(Token = "0x60011D4")]
		public abstract int UpdateCoordinate(string roomName, long x, long y, long z, long r);

		[Token(Token = "0x60011D5")]
		public abstract int ChangeRole(GCloudVoiceRole role, string roomName = "");

		[Token(Token = "0x60011D6")]
		public abstract int OpenMic();

		[Token(Token = "0x60011D7")]
		public abstract int CloseMic();

		[Token(Token = "0x60011D8")]
		public abstract int OpenSpeaker();

		[Token(Token = "0x60011D9")]
		public abstract int CloseSpeaker();

		[Token(Token = "0x60011DA")]
		public abstract int QuitRoom(string roomName, int msTimeout);

		[Token(Token = "0x60011DB")]
		public abstract int ApplyMessageKey(int msTimeout);

		[Token(Token = "0x60011DC")]
		public abstract int SetMaxMessageLength(int msTime);

		[Token(Token = "0x60011DD")]
		public abstract int StartRecording(string filePath);

		[Token(Token = "0x60011DE")]
		public abstract int StopRecording();

		[Token(Token = "0x60011DF")]
		public abstract int UploadRecordedFile(string filePath, int msTimeout);

		[Token(Token = "0x60011E0")]
		public abstract int DownloadRecordedFile(string fileID, string downloadFilePath, int msTimeout);

		[Token(Token = "0x60011E1")]
		public abstract int PlayRecordedFile(string downloadFilePath);

		[Token(Token = "0x60011E2")]
		public abstract int StopPlayFile();

		[Token(Token = "0x60011E3")]
		public abstract int SpeechToText(string fileID, int language = 0, int msTimeout = 6000);

		[Token(Token = "0x60011E4")]
		public abstract int JoinTeamRoom(string roomName, string token, int timestamp, int msTimeout);

		[Token(Token = "0x60011E5")]
		public abstract int JoinNationalRoom(string roomName, string token, int timestamp, GCloudVoiceRole role, int msTimeout);

		[Token(Token = "0x60011E6")]
		public abstract int ApplyMessageKey(string token, int timestamp, int msTimeout);

		[Token(Token = "0x60011E7")]
		public abstract int SpeechToText(string fileID, string token, int timestamp, int language = 0, int msTimeout = 6000);

		[Token(Token = "0x60011E8")]
		[Address(RVA = "0x1C7CB40", Offset = "0x1C7CB40", VA = "0x1C7CB40")]
		protected IGCloudVoice()
		{
		}
	}
	[Token(Token = "0x2000116")]
	public class GCloudVoiceEngine : IGCloudVoice
	{
		[Token(Token = "0x2000353")]
		private enum NoticeMessageType
		{
			[Token(Token = "0x4000E75")]
			MSG_ON_JOINROOM_COMPLETE = 1,
			[Token(Token = "0x4000E76")]
			MSG_ON_QUITROOM_COMPLETE,
			[Token(Token = "0x4000E77")]
			MSG_ON_UPLOADFILE_COMPLETE,
			[Token(Token = "0x4000E78")]
			MSG_ON_DOWNFILE_COMPLETE,
			[Token(Token = "0x4000E79")]
			MSG_ON_MEMBER_VOICE,
			[Token(Token = "0x4000E7A")]
			MSG_ON_APPLY_AUKEY_COMPLETE,
			[Token(Token = "0x4000E7B")]
			MSG_ON_PLAYFILE_COMPLETE,
			[Token(Token = "0x4000E7C")]
			MSG_ON_SPEECH_TO_TEXT,
			[Token(Token = "0x4000E7D")]
			MSG_ON_ROOM_OFFLINE,
			[Token(Token = "0x4000E7E")]
			MSG_ON_STREAM_SPEECH_TO_TEXT,
			[Token(Token = "0x4000E7F")]
			MSG_ON_ROLE_CHANGED,
			[Token(Token = "0x4000E80")]
			MSG_ON_EVENT_NOTIFY,
			[Token(Token = "0x4000E81")]
			MSG_ON_MUTE_STATE,
			[Token(Token = "0x4000E82")]
			MSG_ON_REPORT_PLAYER,
			[Token(Token = "0x4000E83")]
			MSG_ON_CHECK_REPORTED,
			[Token(Token = "0x4000E84")]
			MSG_ON_UPLOAD_SAVEDATA_COMPLETE,
			[Token(Token = "0x4000E85")]
			MSG_ON_DOWNLOAD_SAVEDATA_COMPLETE,
			[Token(Token = "0x4000E86")]
			MSG_ON_SYNCHROMEMINFO_NOTIFY,
			[Token(Token = "0x4000E87")]
			MSG_ON_SPEECH_TRANSLATE,
			[Token(Token = "0x4000E88")]
			MSG_ON_RSTS,
			[Token(Token = "0x4000E89")]
			MSG_ON_QUERY_WX_MEMBERS,
			[Token(Token = "0x4000E8A")]
			MSG_ON_QUERY_USER_INFO,
			[Token(Token = "0x4000E8B")]
			MSG_ON_WX_MEMBER_VOICE,
			[Token(Token = "0x4000E8C")]
			MSG_ON_UPLOAD_USER_INFO,
			[Token(Token = "0x4000E8D")]
			MSG_ON_REPORT_KEY_WORDS,
			[Token(Token = "0x4000E8E")]
			MSG_ON_ENABLE_TRANSLATE,
			[Token(Token = "0x4000E8F")]
			MSG_ON_DEVICE_NOTIFY,
			[Token(Token = "0x4000E90")]
			MSG_ON_UPDATE_MIC_LEVEL
		}

		[Token(Token = "0x2000354")]
		public class NoticeMessage
		{
			[Token(Token = "0x4000E91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int what;

			[Token(Token = "0x4000E92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int intArg1;

			[Token(Token = "0x4000E93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int intArg2;

			[Token(Token = "0x4000E94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string strArg;

			[Token(Token = "0x4000E95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public byte[] custom;

			[Token(Token = "0x4000E96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int datalen;

			[Token(Token = "0x6002BF8")]
			[Address(RVA = "0x1C7CA5C", Offset = "0x1C7CA5C", VA = "0x1C7CA5C")]
			public NoticeMessage()
			{
			}

			[Token(Token = "0x6002BF9")]
			[Address(RVA = "0x1C7CAE0", Offset = "0x1C7CAE0", VA = "0x1C7CAE0")]
			public void clear()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000355")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93FE90", Offset = "0x93FE90")]
		private sealed class <>c
		{
			[Token(Token = "0x4000E97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000E98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Converter<SpeechLanguageType, int> <>9__275_0;

			[Token(Token = "0x6002BFB")]
			[Address(RVA = "0x1C7CA4C", Offset = "0x1C7CA4C", VA = "0x1C7CA4C")]
			public <>c()
			{
			}

			[Token(Token = "0x6002BFC")]
			[Address(RVA = "0x1C7CA54", Offset = "0x1C7CA54", VA = "0x1C7CA54")]
			internal int <RSTSStartRecording>b__275_0(SpeechLanguageType value)
			{
				return default(int);
			}
		}

		[Token(Token = "0x400034C")]
		public const string LibName = "GCloudVoice";

		[Token(Token = "0x4000366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool bInit;

		[Token(Token = "0x4000367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		private static bool bIsSetAppInfo;

		[Token(Token = "0x4000368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		private static bool bPrintLog;

		[Token(Token = "0x4000369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private int pollBufLen;

		[Token(Token = "0x400036A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private byte[] pollBuf;

		[Token(Token = "0x400036B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private NoticeMessage pollMsg;

		[Token(Token = "0x400036C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int[] memberVoice;

		[Token(Token = "0x400036D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private byte[] roomNameBuf;

		[Token(Token = "0x400036E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private int membersBufLen;

		[Token(Token = "0x400036F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private byte[] membersBuf;

		[Token(Token = "0x14000001")]
		public override event JoinRoomCompleteHandler OnJoinRoomComplete
		{
			[Token(Token = "0x60011E9")]
			[Address(RVA = "0xD18554", Offset = "0xD18554", VA = "0xD18554", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A611C", Offset = "0x9A611C")]
			add
			{
			}
			[Token(Token = "0x60011EA")]
			[Address(RVA = "0xD185F8", Offset = "0xD185F8", VA = "0xD185F8", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A612C", Offset = "0x9A612C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000002")]
		public override event MemberVoiceHandler OnMemberVoice
		{
			[Token(Token = "0x60011EB")]
			[Address(RVA = "0xD1869C", Offset = "0xD1869C", VA = "0xD1869C", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A613C", Offset = "0x9A613C")]
			add
			{
			}
			[Token(Token = "0x60011EC")]
			[Address(RVA = "0xD18740", Offset = "0xD18740", VA = "0xD18740", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A614C", Offset = "0x9A614C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000003")]
		public override event RoomMemberVoiceHandler OnRoomMemberVoice
		{
			[Token(Token = "0x60011ED")]
			[Address(RVA = "0xD187E4", Offset = "0xD187E4", VA = "0xD187E4", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A615C", Offset = "0x9A615C")]
			add
			{
			}
			[Token(Token = "0x60011EE")]
			[Address(RVA = "0xD18888", Offset = "0xD18888", VA = "0xD18888", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A616C", Offset = "0x9A616C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000004")]
		public override event ChangeRoleCompleteHandler OnRoleChangeComplete
		{
			[Token(Token = "0x60011EF")]
			[Address(RVA = "0xD1892C", Offset = "0xD1892C", VA = "0xD1892C", Slot = "10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A617C", Offset = "0x9A617C")]
			add
			{
			}
			[Token(Token = "0x60011F0")]
			[Address(RVA = "0xD189D0", Offset = "0xD189D0", VA = "0xD189D0", Slot = "11")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A618C", Offset = "0x9A618C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000005")]
		public override event StatusUpdateHandler OnStatusUpdate
		{
			[Token(Token = "0x60011F1")]
			[Address(RVA = "0xD18A74", Offset = "0xD18A74", VA = "0xD18A74", Slot = "12")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A619C", Offset = "0x9A619C")]
			add
			{
			}
			[Token(Token = "0x60011F2")]
			[Address(RVA = "0xD18B18", Offset = "0xD18B18", VA = "0xD18B18", Slot = "13")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A61AC", Offset = "0x9A61AC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000006")]
		public override event QuitRoomCompleteHandler OnQuitRoomComplete
		{
			[Token(Token = "0x60011F3")]
			[Address(RVA = "0xD18BBC", Offset = "0xD18BBC", VA = "0xD18BBC", Slot = "14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A61BC", Offset = "0x9A61BC")]
			add
			{
			}
			[Token(Token = "0x60011F4")]
			[Address(RVA = "0xD18C60", Offset = "0xD18C60", VA = "0xD18C60", Slot = "15")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A61CC", Offset = "0x9A61CC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000007")]
		public override event ApplyMessageKeyCompleteHandler OnApplyMessageKeyComplete
		{
			[Token(Token = "0x60011F5")]
			[Address(RVA = "0xD18D04", Offset = "0xD18D04", VA = "0xD18D04", Slot = "16")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A61DC", Offset = "0x9A61DC")]
			add
			{
			}
			[Token(Token = "0x60011F6")]
			[Address(RVA = "0xD18DA8", Offset = "0xD18DA8", VA = "0xD18DA8", Slot = "17")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A61EC", Offset = "0x9A61EC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000008")]
		public override event UploadReccordFileCompleteHandler OnUploadReccordFileComplete
		{
			[Token(Token = "0x60011F7")]
			[Address(RVA = "0xD18E4C", Offset = "0xD18E4C", VA = "0xD18E4C", Slot = "18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A61FC", Offset = "0x9A61FC")]
			add
			{
			}
			[Token(Token = "0x60011F8")]
			[Address(RVA = "0xD18EF0", Offset = "0xD18EF0", VA = "0xD18EF0", Slot = "19")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A620C", Offset = "0x9A620C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000009")]
		public override event DownloadRecordFileCompleteHandler OnDownloadRecordFileComplete
		{
			[Token(Token = "0x60011F9")]
			[Address(RVA = "0xD18F94", Offset = "0xD18F94", VA = "0xD18F94", Slot = "20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A621C", Offset = "0x9A621C")]
			add
			{
			}
			[Token(Token = "0x60011FA")]
			[Address(RVA = "0xD19038", Offset = "0xD19038", VA = "0xD19038", Slot = "21")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A622C", Offset = "0x9A622C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400000A")]
		public override event PlayRecordFilCompleteHandler OnPlayRecordFilComplete
		{
			[Token(Token = "0x60011FB")]
			[Address(RVA = "0xD190DC", Offset = "0xD190DC", VA = "0xD190DC", Slot = "22")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A623C", Offset = "0x9A623C")]
			add
			{
			}
			[Token(Token = "0x60011FC")]
			[Address(RVA = "0xD19180", Offset = "0xD19180", VA = "0xD19180", Slot = "23")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A624C", Offset = "0x9A624C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400000B")]
		public override event SpeechToTextHandler OnSpeechToText
		{
			[Token(Token = "0x60011FD")]
			[Address(RVA = "0xD19224", Offset = "0xD19224", VA = "0xD19224", Slot = "24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A625C", Offset = "0x9A625C")]
			add
			{
			}
			[Token(Token = "0x60011FE")]
			[Address(RVA = "0xD192C8", Offset = "0xD192C8", VA = "0xD192C8", Slot = "25")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A626C", Offset = "0x9A626C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400000C")]
		public override event StreamSpeechToTextHandler OnStreamSpeechToText
		{
			[Token(Token = "0x60011FF")]
			[Address(RVA = "0xD1936C", Offset = "0xD1936C", VA = "0xD1936C", Slot = "26")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A627C", Offset = "0x9A627C")]
			add
			{
			}
			[Token(Token = "0x6001200")]
			[Address(RVA = "0xD19410", Offset = "0xD19410", VA = "0xD19410", Slot = "27")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A628C", Offset = "0x9A628C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400000D")]
		public override event EventUpdateHandler OnEvent
		{
			[Token(Token = "0x6001201")]
			[Address(RVA = "0xD194B4", Offset = "0xD194B4", VA = "0xD194B4", Slot = "28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A629C", Offset = "0x9A629C")]
			add
			{
			}
			[Token(Token = "0x6001202")]
			[Address(RVA = "0xD19558", Offset = "0xD19558", VA = "0xD19558", Slot = "29")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A62AC", Offset = "0x9A62AC")]
			remove
			{
			}
		}

		[Token(Token = "0x1400000E")]
		public override event MuteSwitchResultHandler OnMuteSwitchState
		{
			[Token(Token = "0x6001203")]
			[Address(RVA = "0xD195FC", Offset = "0xD195FC", VA = "0xD195FC", Slot = "30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A62BC", Offset = "0x9A62BC")]
			add
			{
			}
			[Token(Token = "0x6001204")]
			[Address(RVA = "0xD196A0", Offset = "0xD196A0", VA = "0xD196A0", Slot = "31")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A62CC", Offset = "0x9A62CC")]
			remove
			{
			}
		}

		[Token(Token = "0x1400000F")]
		public override event ReportPlayerHandler OnReportPlayer
		{
			[Token(Token = "0x6001205")]
			[Address(RVA = "0xD19744", Offset = "0xD19744", VA = "0xD19744", Slot = "32")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A62DC", Offset = "0x9A62DC")]
			add
			{
			}
			[Token(Token = "0x6001206")]
			[Address(RVA = "0xD197E8", Offset = "0xD197E8", VA = "0xD197E8", Slot = "33")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A62EC", Offset = "0x9A62EC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000010")]
		public override event SaveRecFileIndexHandler OnSaveRecFileIndex
		{
			[Token(Token = "0x6001207")]
			[Address(RVA = "0xD1988C", Offset = "0xD1988C", VA = "0xD1988C", Slot = "34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A62FC", Offset = "0x9A62FC")]
			add
			{
			}
			[Token(Token = "0x6001208")]
			[Address(RVA = "0xD19930", Offset = "0xD19930", VA = "0xD19930", Slot = "35")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A630C", Offset = "0x9A630C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000011")]
		public override event RoomMemberChangedCompleteHandler OnRoomMemberInfo
		{
			[Token(Token = "0x6001209")]
			[Address(RVA = "0xD199D4", Offset = "0xD199D4", VA = "0xD199D4", Slot = "36")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A631C", Offset = "0x9A631C")]
			add
			{
			}
			[Token(Token = "0x600120A")]
			[Address(RVA = "0xD19A78", Offset = "0xD19A78", VA = "0xD19A78", Slot = "37")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A632C", Offset = "0x9A632C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000012")]
		public override event SpeechTranslateHandler OnSpeechTranslate
		{
			[Token(Token = "0x600120B")]
			[Address(RVA = "0xD19B1C", Offset = "0xD19B1C", VA = "0xD19B1C", Slot = "38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A633C", Offset = "0x9A633C")]
			add
			{
			}
			[Token(Token = "0x600120C")]
			[Address(RVA = "0xD19BC0", Offset = "0xD19BC0", VA = "0xD19BC0", Slot = "39")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A634C", Offset = "0x9A634C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000013")]
		public override event RSTSHandler OnRSTS
		{
			[Token(Token = "0x600120D")]
			[Address(RVA = "0xD19C64", Offset = "0xD19C64", VA = "0xD19C64", Slot = "40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A635C", Offset = "0x9A635C")]
			add
			{
			}
			[Token(Token = "0x600120E")]
			[Address(RVA = "0xD19D08", Offset = "0xD19D08", VA = "0xD19D08", Slot = "41")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A636C", Offset = "0x9A636C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000014")]
		public override event EnableTranslateHandler OnEnableTranslate
		{
			[Token(Token = "0x600120F")]
			[Address(RVA = "0xD19DAC", Offset = "0xD19DAC", VA = "0xD19DAC", Slot = "42")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A637C", Offset = "0x9A637C")]
			add
			{
			}
			[Token(Token = "0x6001210")]
			[Address(RVA = "0xD19E50", Offset = "0xD19E50", VA = "0xD19E50", Slot = "43")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A638C", Offset = "0x9A638C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000015")]
		public override event QueryUserInfoHandler OnQueryUserInfo
		{
			[Token(Token = "0x6001211")]
			[Address(RVA = "0xD19EF4", Offset = "0xD19EF4", VA = "0xD19EF4", Slot = "44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A639C", Offset = "0x9A639C")]
			add
			{
			}
			[Token(Token = "0x6001212")]
			[Address(RVA = "0xD19F98", Offset = "0xD19F98", VA = "0xD19F98", Slot = "45")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A63AC", Offset = "0x9A63AC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000016")]
		public override event WXMemberVoiceHandler OnWXMemberVoice
		{
			[Token(Token = "0x6001213")]
			[Address(RVA = "0xD1A03C", Offset = "0xD1A03C", VA = "0xD1A03C", Slot = "46")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A63BC", Offset = "0x9A63BC")]
			add
			{
			}
			[Token(Token = "0x6001214")]
			[Address(RVA = "0xD1A0E0", Offset = "0xD1A0E0", VA = "0xD1A0E0", Slot = "47")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A63CC", Offset = "0x9A63CC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000017")]
		public override event QueryWXMembersHandler OnQueryWXMembers
		{
			[Token(Token = "0x6001215")]
			[Address(RVA = "0xD1A184", Offset = "0xD1A184", VA = "0xD1A184", Slot = "48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A63DC", Offset = "0x9A63DC")]
			add
			{
			}
			[Token(Token = "0x6001216")]
			[Address(RVA = "0xD1A228", Offset = "0xD1A228", VA = "0xD1A228", Slot = "49")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A63EC", Offset = "0x9A63EC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000018")]
		public override event UpdateUserInfoHandler OnUpdateUserInfo
		{
			[Token(Token = "0x6001217")]
			[Address(RVA = "0xD1A2CC", Offset = "0xD1A2CC", VA = "0xD1A2CC", Slot = "50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A63FC", Offset = "0x9A63FC")]
			add
			{
			}
			[Token(Token = "0x6001218")]
			[Address(RVA = "0xD1A370", Offset = "0xD1A370", VA = "0xD1A370", Slot = "51")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A640C", Offset = "0x9A640C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000019")]
		public override event UpdateMicLevelHandler OnUpdateMicLevel
		{
			[Token(Token = "0x6001219")]
			[Address(RVA = "0xD1A414", Offset = "0xD1A414", VA = "0xD1A414", Slot = "52")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A641C", Offset = "0x9A641C")]
			add
			{
			}
			[Token(Token = "0x600121A")]
			[Address(RVA = "0xD1A4B8", Offset = "0xD1A4B8", VA = "0xD1A4B8", Slot = "53")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A642C", Offset = "0x9A642C")]
			remove
			{
			}
		}

		[PreserveSig]
		[Token(Token = "0x600121B")]
		[Address(RVA = "0xD1A55C", Offset = "0xD1A55C", VA = "0xD1A55C")]
		private static extern int GCloudVoice_CreateInstance();

		[PreserveSig]
		[Token(Token = "0x600121C")]
		[Address(RVA = "0xD1A5D0", Offset = "0xD1A5D0", VA = "0xD1A5D0")]
		private static extern int GCloudVoice_SetServerInfo(string URL);

		[PreserveSig]
		[Token(Token = "0x600121D")]
		[Address(RVA = "0xD1A668", Offset = "0xD1A668", VA = "0xD1A668")]
		private static extern int GCloudVoice_SetAppInfo(string appID, string appKey, string openID);

		[PreserveSig]
		[Token(Token = "0x600121E")]
		[Address(RVA = "0xD1A744", Offset = "0xD1A744", VA = "0xD1A744")]
		private static extern int GCloudVoice_Init();

		[PreserveSig]
		[Token(Token = "0x600121F")]
		[Address(RVA = "0xD1A7B8", Offset = "0xD1A7B8", VA = "0xD1A7B8")]
		private static extern int GCloudVoice_SetMode(int mode);

		[PreserveSig]
		[Token(Token = "0x6001220")]
		[Address(RVA = "0xD1A838", Offset = "0xD1A838", VA = "0xD1A838")]
		private static extern int GCloudVoice_Poll(byte[] buf, int length);

		[PreserveSig]
		[Token(Token = "0x6001221")]
		[Address(RVA = "0xD1A8D0", Offset = "0xD1A8D0", VA = "0xD1A8D0")]
		private static extern int GCloudVoice_Pause();

		[PreserveSig]
		[Token(Token = "0x6001222")]
		[Address(RVA = "0xD1A944", Offset = "0xD1A944", VA = "0xD1A944")]
		private static extern int GCloudVoice_Resume();

		[PreserveSig]
		[Token(Token = "0x6001223")]
		[Address(RVA = "0xD1A9B8", Offset = "0xD1A9B8", VA = "0xD1A9B8")]
		private static extern int GCloudVoice_JoinTeamRoom(string roomName, int msTimeout);

		[PreserveSig]
		[Token(Token = "0x6001224")]
		[Address(RVA = "0xD1AA60", Offset = "0xD1AA60", VA = "0xD1AA60")]
		private static extern int GCloudVoice_QueryRoomName(byte[] buf, int length, int index);

		[PreserveSig]
		[Token(Token = "0x6001225")]
		[Address(RVA = "0xD1AB00", Offset = "0xD1AB00", VA = "0xD1AB00")]
		private static extern int GCloudVoice_JoinRangeRoom(string roomName, int msTimeout);

		[PreserveSig]
		[Token(Token = "0x6001226")]
		[Address(RVA = "0xD1ABA8", Offset = "0xD1ABA8", VA = "0xD1ABA8")]
		private static extern int GCloudVoice_JoinNationalRoom(string roomName, int role, int msTimeout);

		[PreserveSig]
		[Token(Token = "0x6001227")]
		[Address(RVA = "0xD1AC58", Offset = "0xD1AC58", VA = "0xD1AC58")]
		private static extern int GCloudVoice_ChangeRole(int role, string roomName);

		[PreserveSig]
		[Token(Token = "0x6001228")]
		[Address(RVA = "0xD1AD04", Offset = "0xD1AD04", VA = "0xD1AD04")]
		private static extern int GCloudVoice_JoinFMRoom(string roomName, int msTimeout);

		[PreserveSig]
		[Token(Token = "0x6001229")]
		[Address(RVA = "0xD1ADAC", Offset = "0xD1ADAC", VA = "0xD1ADAC")]
		private static extern int GCloudVoice_QuitRoom(string roomName, int msTimeout);

		[PreserveSig]
		[Token(Token = "0x600122A")]
		[Address(RVA = "0xD1AE54", Offset = "0xD1AE54", VA = "0xD1AE54")]
		private static extern int GCloudVoice_OpenMic();

		[PreserveSig]
		[Token(Token = "0x600122B")]
		[Address(RVA = "0xD1AEC8", Offset = "0xD1AEC8", VA = "0xD1AEC8")]
		private static extern int GCloudVoice_CloseMic();

		[PreserveSig]
		[Token(Token = "0x600122C")]
		[Address(RVA = "0xD1AF3C", Offset = "0xD1AF3C", VA = "0xD1AF3C")]
		private static extern int GCloudVoice_OpenSpeaker();

		[PreserveSig]
		[Token(Token = "0x600122D")]
		[Address(RVA = "0xD1AFB0", Offset = "0xD1AFB0", VA = "0xD1AFB0")]
		private static extern int GCloudVoice_CloseSpeaker();

		[PreserveSig]
		[Token(Token = "0x600122E")]
		[Address(RVA = "0xD1B024", Offset = "0xD1B024", VA = "0xD1B024")]
		private static extern int GCloudVoice_EnableRoomMicrophone(string roomName, bool enable);

		[PreserveSig]
		[Token(Token = "0x600122F")]
		[Address(RVA = "0xD1B0CC", Offset = "0xD1B0CC", VA = "0xD1B0CC")]
		private static extern int GCloudVoice_EnableRoomSpeaker(string roomName, bool enable);

		[PreserveSig]
		[Token(Token = "0x6001230")]
		[Address(RVA = "0xD1B174", Offset = "0xD1B174", VA = "0xD1B174")]
		private static extern int GCloudVoice_EnableMultiRoom(bool enable);

		[PreserveSig]
		[Token(Token = "0x6001231")]
		[Address(RVA = "0xD1B1F4", Offset = "0xD1B1F4", VA = "0xD1B1F4")]
		private static extern int GCloudVoice_UpdateCoordinate(string roomName, long x, long y, long z, long r);

		[PreserveSig]
		[Token(Token = "0x6001232")]
		[Address(RVA = "0xD1B2BC", Offset = "0xD1B2BC", VA = "0xD1B2BC")]
		private static extern int GCloudVoice_ApplyMessageKey(int msTimeout);

		[PreserveSig]
		[Token(Token = "0x6001233")]
		[Address(RVA = "0xD1B33C", Offset = "0xD1B33C", VA = "0xD1B33C")]
		private static extern int GCloudVoice_SetMaxMessageLength(int msTimeout);

		[PreserveSig]
		[Token(Token = "0x6001234")]
		[Address(RVA = "0xD1B3BC", Offset = "0xD1B3BC", VA = "0xD1B3BC")]
		private static extern int GCloudVoice_StartRecording(string filePath, bool bOptimized);

		[PreserveSig]
		[Token(Token = "0x6001235")]
		[Address(RVA = "0xD1B464", Offset = "0xD1B464", VA = "0xD1B464")]
		private static extern int GCloudVoice_StopRecording();

		[PreserveSig]
		[Token(Token = "0x6001236")]
		[Address(RVA = "0xD1B4D8", Offset = "0xD1B4D8", VA = "0xD1B4D8")]
		private static extern int GCloudVoice_UploadRecordedFile(string filePath, int msTimeout, bool bPermanent);

		[PreserveSig]
		[Token(Token = "0x6001237")]
		[Address(RVA = "0xD1B588", Offset = "0xD1B588", VA = "0xD1B588")]
		private static extern int GCloudVoice_DownloadRecordedFile(string fileID, string downloadFilePath, int msTimeout, bool bPermanent);

		[PreserveSig]
		[Token(Token = "0x6001238")]
		[Address(RVA = "0xD1B660", Offset = "0xD1B660", VA = "0xD1B660")]
		private static extern int GCloudVoice_PlayRecordedFile(string downloadFilePath);

		[PreserveSig]
		[Token(Token = "0x6001239")]
		[Address(RVA = "0xD1B6F8", Offset = "0xD1B6F8", VA = "0xD1B6F8")]
		private static extern int GCloudVoice_StopPlayFile();

		[PreserveSig]
		[Token(Token = "0x600123A")]
		[Address(RVA = "0xD1B76C", Offset = "0xD1B76C", VA = "0xD1B76C")]
		private static extern int GCloudVoice_SpeechToText(string fileID, int language, int msTimeout);

		[PreserveSig]
		[Token(Token = "0x600123B")]
		[Address(RVA = "0xD1B81C", Offset = "0xD1B81C", VA = "0xD1B81C")]
		private static extern int GCloudVoice_ForbidMemberVoice(int member, bool bEnable, string roomName);

		[PreserveSig]
		[Token(Token = "0x600123C")]
		[Address(RVA = "0xD1B8D0", Offset = "0xD1B8D0", VA = "0xD1B8D0")]
		private static extern int GCloudVoice_EnableLog(bool enable);

		[PreserveSig]
		[Token(Token = "0x600123D")]
		[Address(RVA = "0xD1B950", Offset = "0xD1B950", VA = "0xD1B950")]
		private static extern int GCloudVoice_SetDataFree(bool enable);

		[PreserveSig]
		[Token(Token = "0x600123E")]
		[Address(RVA = "0xD1B9D0", Offset = "0xD1B9D0", VA = "0xD1B9D0")]
		private static extern int GCloudVoice_GetMicLevel(bool bFadeout);

		[PreserveSig]
		[Token(Token = "0x600123F")]
		[Address(RVA = "0xD1BA50", Offset = "0xD1BA50", VA = "0xD1BA50")]
		private static extern int GCloudVoice_GetSpeakerLevel();

		[PreserveSig]
		[Token(Token = "0x6001240")]
		[Address(RVA = "0xD1BAC4", Offset = "0xD1BAC4", VA = "0xD1BAC4")]
		private static extern int GCloudVoice_SetSpeakerVolume(int vol);

		[PreserveSig]
		[Token(Token = "0x6001241")]
		[Address(RVA = "0xD1BB44", Offset = "0xD1BB44", VA = "0xD1BB44")]
		private static extern int GCloudVoice_TestMic();

		[PreserveSig]
		[Token(Token = "0x6001242")]
		[Address(RVA = "0xD1BBB8", Offset = "0xD1BBB8", VA = "0xD1BBB8")]
		private static extern int GCloudVoice_GetFileParam(string filepath, int[] bytes, float[] seconds);

		[PreserveSig]
		[Token(Token = "0x6001243")]
		[Address(RVA = "0xD1BC74", Offset = "0xD1BC74", VA = "0xD1BC74")]
		private static extern int GCloudVoice_invoke(uint nCmd, uint nParam1, uint nParam2, uint[] pOutput);

		[PreserveSig]
		[Token(Token = "0x6001244")]
		[Address(RVA = "0xD1BD24", Offset = "0xD1BD24", VA = "0xD1BD24")]
		private static extern int GCloudVoice_JoinNationalRoom_Token(string roomName, int role, string token, int timestamp, int msTimeout);

		[PreserveSig]
		[Token(Token = "0x6001245")]
		[Address(RVA = "0xD1BE04", Offset = "0xD1BE04", VA = "0xD1BE04")]
		private static extern int GCloudVoice_JoinTeamRoom_Token(string roomName, string token, int timestamp, int msTimeout);

		[PreserveSig]
		[Token(Token = "0x6001246")]
		[Address(RVA = "0xD1BEDC", Offset = "0xD1BEDC", VA = "0xD1BEDC")]
		private static extern int GCloudVoice_ApplyMessageKey_Token(string token, int timestamp, int msTimeout);

		[PreserveSig]
		[Token(Token = "0x6001247")]
		[Address(RVA = "0xD1BF8C", Offset = "0xD1BF8C", VA = "0xD1BF8C")]
		private static extern int GCloudVoice_SpeechToText_Token(string fileID, string token, int timestamp, int msTimeout, int language);

		[PreserveSig]
		[Token(Token = "0x6001248")]
		[Address(RVA = "0xD1C06C", Offset = "0xD1C06C", VA = "0xD1C06C")]
		private static extern int GCloudVoice_EnableSpeakerOn(bool enable);

		[PreserveSig]
		[Token(Token = "0x6001249")]
		[Address(RVA = "0xD1C0EC", Offset = "0xD1C0EC", VA = "0xD1C0EC")]
		private static extern int GCloudVoice_SetMicVol(int vol);

		[PreserveSig]
		[Token(Token = "0x600124A")]
		[Address(RVA = "0xD1C16C", Offset = "0xD1C16C", VA = "0xD1C16C")]
		private static extern IntPtr GCloudVoice_GetInstance();

		[PreserveSig]
		[Token(Token = "0x600124B")]
		[Address(RVA = "0xD1C1E0", Offset = "0xD1C1E0", VA = "0xD1C1E0")]
		private static extern int GCloudVoice_SetVoiceEffects(int mode);

		[PreserveSig]
		[Token(Token = "0x600124C")]
		[Address(RVA = "0xD1C260", Offset = "0xD1C260", VA = "0xD1C260")]
		private static extern int GCloudVoice_IsSpeaking();

		[PreserveSig]
		[Token(Token = "0x600124D")]
		[Address(RVA = "0xD1C2D4", Offset = "0xD1C2D4", VA = "0xD1C2D4")]
		private static extern int GCloudVoice_EnableReverb(bool bEnable);

		[PreserveSig]
		[Token(Token = "0x600124E")]
		[Address(RVA = "0xD1C354", Offset = "0xD1C354", VA = "0xD1C354")]
		private static extern int GCloudVoice_SetReverbMode(int mode);

		[PreserveSig]
		[Token(Token = "0x600124F")]
		[Address(RVA = "0xD1C3D4", Offset = "0xD1C3D4", VA = "0xD1C3D4")]
		private static extern int GCloudVoice_GetVoiceIdentify();

		[PreserveSig]
		[Token(Token = "0x6001250")]
		[Address(RVA = "0xD1C448", Offset = "0xD1C448", VA = "0xD1C448")]
		private static extern int GCloudVoice_SetBGMPath(string path);

		[PreserveSig]
		[Token(Token = "0x6001251")]
		[Address(RVA = "0xD1C4E0", Offset = "0xD1C4E0", VA = "0xD1C4E0")]
		private static extern int GCloudVoice_StartBGMPlay();

		[PreserveSig]
		[Token(Token = "0x6001252")]
		[Address(RVA = "0xD1C554", Offset = "0xD1C554", VA = "0xD1C554")]
		private static extern int GCloudVoice_StopBGMPlay();

		[PreserveSig]
		[Token(Token = "0x6001253")]
		[Address(RVA = "0xD1C5C8", Offset = "0xD1C5C8", VA = "0xD1C5C8")]
		private static extern int GCloudVoice_PauseBGMPlay();

		[PreserveSig]
		[Token(Token = "0x6001254")]
		[Address(RVA = "0xD1C63C", Offset = "0xD1C63C", VA = "0xD1C63C")]
		private static extern int GCloudVoice_ResumeBGMPlay();

		[PreserveSig]
		[Token(Token = "0x6001255")]
		[Address(RVA = "0xD1C6B0", Offset = "0xD1C6B0", VA = "0xD1C6B0")]
		private static extern int GCloudVoice_GetBGMPlayState();

		[PreserveSig]
		[Token(Token = "0x6001256")]
		[Address(RVA = "0xD1C724", Offset = "0xD1C724", VA = "0xD1C724")]
		private static extern int GCloudVoice_SetBGMVol(int vol);

		[PreserveSig]
		[Token(Token = "0x6001257")]
		[Address(RVA = "0xD1C7A4", Offset = "0xD1C7A4", VA = "0xD1C7A4")]
		private static extern int GCloudVoice_EnableNativeBGMPlay(bool bEnable);

		[PreserveSig]
		[Token(Token = "0x6001258")]
		[Address(RVA = "0xD1C824", Offset = "0xD1C824", VA = "0xD1C824")]
		private static extern int GCloudVoice_SetBitRate(int bitrate);

		[PreserveSig]
		[Token(Token = "0x6001259")]
		[Address(RVA = "0xD1C8A4", Offset = "0xD1C8A4", VA = "0xD1C8A4")]
		private static extern int GCloudVoice_GetHwState();

		[PreserveSig]
		[Token(Token = "0x600125A")]
		[Address(RVA = "0xD1C918", Offset = "0xD1C918", VA = "0xD1C918")]
		private static extern int GCloudVoice_GetAudioDeviceConnectionState();

		[PreserveSig]
		[Token(Token = "0x600125B")]
		[Address(RVA = "0xD1C98C", Offset = "0xD1C98C", VA = "0xD1C98C")]
		private static extern int GCloudVoice_EnableBluetoothSCO(bool enable);

		[PreserveSig]
		[Token(Token = "0x600125C")]
		[Address(RVA = "0xD1CA0C", Offset = "0xD1CA0C", VA = "0xD1CA0C")]
		private static extern int GCloudVoice_CheckDeviceMuteState();

		[PreserveSig]
		[Token(Token = "0x600125D")]
		[Address(RVA = "0xD1CA80", Offset = "0xD1CA80", VA = "0xD1CA80")]
		private static extern int GCloudVoice_SetAudience(int[] audience, int count, string path);

		[PreserveSig]
		[Token(Token = "0x600125E")]
		[Address(RVA = "0xD1CB40", Offset = "0xD1CB40", VA = "0xD1CB40")]
		private static extern int GCloudVoice_GetMicState();

		[PreserveSig]
		[Token(Token = "0x600125F")]
		[Address(RVA = "0xD1CBB4", Offset = "0xD1CBB4", VA = "0xD1CBB4")]
		private static extern int GCloudVoice_CaptureMicrophoneData(bool bCapture);

		[PreserveSig]
		[Token(Token = "0x6001260")]
		[Address(RVA = "0xD1CC34", Offset = "0xD1CC34", VA = "0xD1CC34")]
		private static extern int GCloudVoice_GetSpeakerState();

		[PreserveSig]
		[Token(Token = "0x6001261")]
		[Address(RVA = "0xD1CCA8", Offset = "0xD1CCA8", VA = "0xD1CCA8")]
		private static extern int GCloudVoice_GetMuteResult();

		[PreserveSig]
		[Token(Token = "0x6001262")]
		[Address(RVA = "0xD1CD1C", Offset = "0xD1CD1C", VA = "0xD1CD1C")]
		private static extern int GCloudVoice_SetReportBufferTime(int nTimeSec);

		[PreserveSig]
		[Token(Token = "0x6001263")]
		[Address(RVA = "0xD1CD9C", Offset = "0xD1CD9C", VA = "0xD1CD9C")]
		private static extern int GCloudVoice_SetReportedPlayerInfo(string[] cszOpenID, int[] nMemberID, int nCount);

		[PreserveSig]
		[Token(Token = "0x6001264")]
		[Address(RVA = "0xD1CEE4", Offset = "0xD1CEE4", VA = "0xD1CEE4")]
		private static extern int GCloudVoice_ReportPlayer(string[] cszOpenID, int nCount, string strInfo);

		[PreserveSig]
		[Token(Token = "0x6001265")]
		[Address(RVA = "0xD1D038", Offset = "0xD1D038", VA = "0xD1D038")]
		private static extern int GCloudVoice_EnableCivilVoice(bool bEnable);

		[PreserveSig]
		[Token(Token = "0x6001266")]
		[Address(RVA = "0xD1D0B8", Offset = "0xD1D0B8", VA = "0xD1D0B8")]
		private static extern int GCloudVoice_StartSaveVoice();

		[PreserveSig]
		[Token(Token = "0x6001267")]
		[Address(RVA = "0xD1D12C", Offset = "0xD1D12C", VA = "0xD1D12C")]
		private static extern int GCloudVoice_StopSaveVoice();

		[PreserveSig]
		[Token(Token = "0x6001268")]
		[Address(RVA = "0xD1D1A0", Offset = "0xD1D1A0", VA = "0xD1D1A0")]
		private static extern int GCloudVoice_SetRecSaveTs(int ts);

		[PreserveSig]
		[Token(Token = "0x6001269")]
		[Address(RVA = "0xD1D220", Offset = "0xD1D220", VA = "0xD1D220")]
		private static extern int GCloudVoice_SetPlayFileIndex(string fileid, int fileindex);

		[PreserveSig]
		[Token(Token = "0x600126A")]
		[Address(RVA = "0xD1D2C8", Offset = "0xD1D2C8", VA = "0xD1D2C8")]
		private static extern int GCloudVoice_StartPlaySaveVoiceTs(int ts);

		[PreserveSig]
		[Token(Token = "0x600126B")]
		[Address(RVA = "0xD1D348", Offset = "0xD1D348", VA = "0xD1D348")]
		private static extern int GCloudVoice_StopPlaySaveVoice();

		[PreserveSig]
		[Token(Token = "0x600126C")]
		[Address(RVA = "0xD1D3BC", Offset = "0xD1D3BC", VA = "0xD1D3BC")]
		private static extern int GCloudVoice_DelAllSaveVoiceFile(string fileid, int fileindex);

		[PreserveSig]
		[Token(Token = "0x600126D")]
		[Address(RVA = "0xD1D464", Offset = "0xD1D464", VA = "0xD1D464")]
		private static extern int GCloudVoice_GetRoomMembers(string roomName, byte[] buf, int len);

		[PreserveSig]
		[Token(Token = "0x600126E")]
		[Address(RVA = "0xD1D51C", Offset = "0xD1D51C", VA = "0xD1D51C")]
		private static extern int GCloudVoice_SpeechTranslate(string fileID, int srcLang, int targetLang, int transType, int nTimeoutMS);

		[PreserveSig]
		[Token(Token = "0x600126F")]
		[Address(RVA = "0xD1D5E4", Offset = "0xD1D5E4", VA = "0xD1D5E4")]
		private static extern int GCloudVoice_RSTSStartRecording(int srcLang, int[] pTargetLangs, int nTargetLangCnt, int transType, int nTimeoutMS);

		[PreserveSig]
		[Token(Token = "0x6001270")]
		[Address(RVA = "0xD1D69C", Offset = "0xD1D69C", VA = "0xD1D69C")]
		private static extern int GCloudVoice_RSTSStopRecording();

		[PreserveSig]
		[Token(Token = "0x6001271")]
		[Address(RVA = "0xD1D710", Offset = "0xD1D710", VA = "0xD1D710")]
		private static extern int GCloudVoice_EnableWXMiniApp(string roomName, bool enable);

		[PreserveSig]
		[Token(Token = "0x6001272")]
		[Address(RVA = "0xD1D7B8", Offset = "0xD1D7B8", VA = "0xD1D7B8")]
		private static extern int GCloudVoice_QueryWXMembers(string roomName);

		[PreserveSig]
		[Token(Token = "0x6001273")]
		[Address(RVA = "0xD1D850", Offset = "0xD1D850", VA = "0xD1D850")]
		private static extern int GCloudVoice_QueryUserInfo(string roomName, int memberID, string openID);

		[PreserveSig]
		[Token(Token = "0x6001274")]
		[Address(RVA = "0xD1D918", Offset = "0xD1D918", VA = "0xD1D918")]
		private static extern int GCloudVoice_UpdateSelfInfo(string roomName, string info);

		[PreserveSig]
		[Token(Token = "0x6001275")]
		[Address(RVA = "0xD1D9D8", Offset = "0xD1D9D8", VA = "0xD1D9D8")]
		private static extern int GCloudVoice_SetCivilBinPath(string path);

		[PreserveSig]
		[Token(Token = "0x6001276")]
		[Address(RVA = "0xD1DA70", Offset = "0xD1DA70", VA = "0xD1DA70")]
		private static extern int GCloudVoice_SetPlayerVolume(string playerid, uint vol);

		[PreserveSig]
		[Token(Token = "0x6001277")]
		[Address(RVA = "0xD1DB18", Offset = "0xD1DB18", VA = "0xD1DB18")]
		private static extern int GCloudVoice_GetPlayerVolume(string playerid);

		[PreserveSig]
		[Token(Token = "0x6001278")]
		[Address(RVA = "0xD1DBB0", Offset = "0xD1DBB0", VA = "0xD1DBB0")]
		private static extern int GCloudVoice_EnableKeyWordsDetect(bool bEnable);

		[PreserveSig]
		[Token(Token = "0x6001279")]
		[Address(RVA = "0xD1DC30", Offset = "0xD1DC30", VA = "0xD1DC30")]
		private static extern int GCloudVoice_EnableTranslate(string roomName, bool enable, int myLang);

		[Token(Token = "0x600127A")]
		[Address(RVA = "0xD1DCE0", Offset = "0xD1DCE0", VA = "0xD1DCE0")]
		public GCloudVoiceEngine()
		{
		}

		[Token(Token = "0x600127B")]
		[Address(RVA = "0xD1DE04", Offset = "0xD1DE04", VA = "0xD1DE04")]
		public static void PrintLog(object logMsg)
		{
		}

		[Token(Token = "0x600127C")]
		[Address(RVA = "0xD1DEAC", Offset = "0xD1DEAC", VA = "0xD1DEAC", Slot = "125")]
		public override int SetAppInfo(string appID, string appKey, string openID)
		{
			return default(int);
		}

		[Token(Token = "0x600127D")]
		[Address(RVA = "0xD1DF60", Offset = "0xD1DF60", VA = "0xD1DF60", Slot = "89")]
		public override int SetServerInfo(string URL)
		{
			return default(int);
		}

		[Token(Token = "0x600127E")]
		[Address(RVA = "0xD1DFC4", Offset = "0xD1DFC4", VA = "0xD1DFC4", Slot = "126")]
		public override int Init()
		{
			return default(int);
		}

		[Token(Token = "0x600127F")]
		[Address(RVA = "0xD1E10C", Offset = "0xD1E10C", VA = "0xD1E10C", Slot = "127")]
		public override int SetMode(GCloudVoiceMode nMode)
		{
			return default(int);
		}

		[Token(Token = "0x6001280")]
		[Address(RVA = "0xD1E1B4", Offset = "0xD1E1B4", VA = "0xD1E1B4")]
		public NoticeMessage NoticeMessage_ParseFrom(byte[] buf, int buflen)
		{
			return null;
		}

		[Token(Token = "0x6001281")]
		[Address(RVA = "0xD1E3C0", Offset = "0xD1E3C0", VA = "0xD1E3C0", Slot = "128")]
		public override int Poll()
		{
			return default(int);
		}

		[Token(Token = "0x6001282")]
		[Address(RVA = "0xD1F360", Offset = "0xD1F360", VA = "0xD1F360", Slot = "129")]
		public override int Pause()
		{
			return default(int);
		}

		[Token(Token = "0x6001283")]
		[Address(RVA = "0xD1F440", Offset = "0xD1F440", VA = "0xD1F440", Slot = "130")]
		public override int Resume()
		{
			return default(int);
		}

		[Token(Token = "0x6001284")]
		[Address(RVA = "0xD1F520", Offset = "0xD1F520", VA = "0xD1F520", Slot = "131")]
		public override int JoinTeamRoom(string roomName, int msTimeout)
		{
			return default(int);
		}

		[Token(Token = "0x6001285")]
		[Address(RVA = "0xD1F618", Offset = "0xD1F618", VA = "0xD1F618", Slot = "132")]
		public override int JoinRangeRoom(string roomName, int msTimeout)
		{
			return default(int);
		}

		[Token(Token = "0x6001286")]
		[Address(RVA = "0xD1F710", Offset = "0xD1F710", VA = "0xD1F710", Slot = "150")]
		public override int JoinTeamRoom(string roomName, string token, int timestamp, int msTimeout)
		{
			return default(int);
		}

		[Token(Token = "0x6001287")]
		[Address(RVA = "0xD1F854", Offset = "0xD1F854", VA = "0xD1F854", Slot = "133")]
		public override int JoinNationalRoom(string roomName, GCloudVoiceRole role, int msTimeout)
		{
			return default(int);
		}

		[Token(Token = "0x6001288")]
		[Address(RVA = "0xD1F95C", Offset = "0xD1F95C", VA = "0xD1F95C", Slot = "135")]
		public override int ChangeRole(GCloudVoiceRole role, string roomName = "")
		{
			return default(int);
		}

		[Token(Token = "0x6001289")]
		[Address(RVA = "0xD1FA54", Offset = "0xD1FA54", VA = "0xD1FA54", Slot = "93")]
		public override int JoinFMRoom(string roomID, int msTimeout)
		{
			return default(int);
		}

		[Token(Token = "0x600128A")]
		[Address(RVA = "0xD1FAD8", Offset = "0xD1FAD8", VA = "0xD1FAD8", Slot = "151")]
		public override int JoinNationalRoom(string roomName, string token, int timestamp, GCloudVoiceRole role, int msTimeout)
		{
			return default(int);
		}

		[Token(Token = "0x600128B")]
		[Address(RVA = "0xD1FBF8", Offset = "0xD1FBF8", VA = "0xD1FBF8", Slot = "140")]
		public override int QuitRoom(string roomName, int msTimeout)
		{
			return default(int);
		}

		[Token(Token = "0x600128C")]
		[Address(RVA = "0xD1FCF0", Offset = "0xD1FCF0", VA = "0xD1FCF0", Slot = "136")]
		public override int OpenMic()
		{
			return default(int);
		}

		[Token(Token = "0x600128D")]
		[Address(RVA = "0xD1FDD0", Offset = "0xD1FDD0", VA = "0xD1FDD0", Slot = "137")]
		public override int CloseMic()
		{
			return default(int);
		}

		[Token(Token = "0x600128E")]
		[Address(RVA = "0xD1FEB0", Offset = "0xD1FEB0", VA = "0xD1FEB0", Slot = "138")]
		public override int OpenSpeaker()
		{
			return default(int);
		}

		[Token(Token = "0x600128F")]
		[Address(RVA = "0xD1FF90", Offset = "0xD1FF90", VA = "0xD1FF90", Slot = "139")]
		public override int CloseSpeaker()
		{
			return default(int);
		}

		[Token(Token = "0x6001290")]
		[Address(RVA = "0xD20070", Offset = "0xD20070", VA = "0xD20070", Slot = "55")]
		public override int EnableRoomMicrophone(string roomName, bool enable)
		{
			return default(int);
		}

		[Token(Token = "0x6001291")]
		[Address(RVA = "0xD20168", Offset = "0xD20168", VA = "0xD20168", Slot = "56")]
		public override int EnableRoomSpeaker(string roomName, bool enable)
		{
			return default(int);
		}

		[Token(Token = "0x6001292")]
		[Address(RVA = "0xD20260", Offset = "0xD20260", VA = "0xD20260", Slot = "54")]
		public override int EnableMultiRoom(bool enable)
		{
			return default(int);
		}

		[Token(Token = "0x6001293")]
		[Address(RVA = "0xD20350", Offset = "0xD20350", VA = "0xD20350", Slot = "134")]
		public override int UpdateCoordinate(string roomName, long x, long y, long z, long r)
		{
			return default(int);
		}

		[Token(Token = "0x6001294")]
		[Address(RVA = "0xD20470", Offset = "0xD20470", VA = "0xD20470", Slot = "141")]
		public override int ApplyMessageKey(int msTimeout)
		{
			return default(int);
		}

		[Token(Token = "0x6001295")]
		[Address(RVA = "0xD20560", Offset = "0xD20560", VA = "0xD20560", Slot = "152")]
		public override int ApplyMessageKey(string token, int timestamp, int msTimeout)
		{
			return default(int);
		}

		[Token(Token = "0x6001296")]
		[Address(RVA = "0xD20668", Offset = "0xD20668", VA = "0xD20668", Slot = "142")]
		public override int SetMaxMessageLength(int msTime)
		{
			return default(int);
		}

		[Token(Token = "0x6001297")]
		[Address(RVA = "0xD20758", Offset = "0xD20758", VA = "0xD20758", Slot = "143")]
		public override int StartRecording(string filePath)
		{
			return default(int);
		}

		[Token(Token = "0x6001298")]
		[Address(RVA = "0xD2084C", Offset = "0xD2084C", VA = "0xD2084C", Slot = "144")]
		public override int StopRecording()
		{
			return default(int);
		}

		[Token(Token = "0x6001299")]
		[Address(RVA = "0xD2092C", Offset = "0xD2092C", VA = "0xD2092C", Slot = "145")]
		public override int UploadRecordedFile(string filePath, int msTimeout)
		{
			return default(int);
		}

		[Token(Token = "0x600129A")]
		[Address(RVA = "0xD20A28", Offset = "0xD20A28", VA = "0xD20A28", Slot = "146")]
		public override int DownloadRecordedFile(string fileID, string downloadFilePath, int msTimeout)
		{
			return default(int);
		}

		[Token(Token = "0x600129B")]
		[Address(RVA = "0xD20B34", Offset = "0xD20B34", VA = "0xD20B34", Slot = "96")]
		public override int UploadRecordedFile(string filePath, int msTimeout, bool bPermanent)
		{
			return default(int);
		}

		[Token(Token = "0x600129C")]
		[Address(RVA = "0xD20C3C", Offset = "0xD20C3C", VA = "0xD20C3C", Slot = "97")]
		public override int DownloadRecordedFile(string fileID, string downloadFilePath, int msTimeout, bool bPermanent)
		{
			return default(int);
		}

		[Token(Token = "0x600129D")]
		[Address(RVA = "0xD20D4C", Offset = "0xD20D4C", VA = "0xD20D4C", Slot = "147")]
		public override int PlayRecordedFile(string downloadFilePath)
		{
			return default(int);
		}

		[Token(Token = "0x600129E")]
		[Address(RVA = "0xD20E3C", Offset = "0xD20E3C", VA = "0xD20E3C", Slot = "148")]
		public override int StopPlayFile()
		{
			return default(int);
		}

		[Token(Token = "0x600129F")]
		[Address(RVA = "0xD20F1C", Offset = "0xD20F1C", VA = "0xD20F1C", Slot = "149")]
		public override int SpeechToText(string fileID, int language = 0, int msTimeout = 6000)
		{
			return default(int);
		}

		[Token(Token = "0x60012A0")]
		[Address(RVA = "0xD21024", Offset = "0xD21024", VA = "0xD21024", Slot = "153")]
		public override int SpeechToText(string fileID, string token, int timestamp, int language = 0, int msTimeout = 6000)
		{
			return default(int);
		}

		[Token(Token = "0x60012A1")]
		[Address(RVA = "0xD21144", Offset = "0xD21144", VA = "0xD21144", Slot = "95")]
		public override int ForbidMemberVoice(int member, bool bEnable, string roomName = "")
		{
			return default(int);
		}

		[Token(Token = "0x60012A2")]
		[Address(RVA = "0xD2124C", Offset = "0xD2124C", VA = "0xD2124C", Slot = "92")]
		public override int EnableLog(bool enable)
		{
			return default(int);
		}

		[Token(Token = "0x60012A3")]
		[Address(RVA = "0xD2134C", Offset = "0xD2134C", VA = "0xD2134C", Slot = "91")]
		public override int SetDataFree(bool enable)
		{
			return default(int);
		}

		[Token(Token = "0x60012A4")]
		[Address(RVA = "0xD2143C", Offset = "0xD2143C", VA = "0xD2143C", Slot = "72")]
		public override int GetMicLevel()
		{
			return default(int);
		}

		[Token(Token = "0x60012A5")]
		[Address(RVA = "0xD21520", Offset = "0xD21520", VA = "0xD21520", Slot = "73")]
		public override int GetMicLevel(bool bFadeOut)
		{
			return default(int);
		}

		[Token(Token = "0x60012A6")]
		[Address(RVA = "0xD21610", Offset = "0xD21610", VA = "0xD21610", Slot = "74")]
		public override int GetSpeakerLevel()
		{
			return default(int);
		}

		[Token(Token = "0x60012A7")]
		[Address(RVA = "0xD216F0", Offset = "0xD216F0", VA = "0xD216F0", Slot = "71")]
		public override int SetSpeakerVolume(int vol)
		{
			return default(int);
		}

		[Token(Token = "0x60012A8")]
		[Address(RVA = "0xD217E0", Offset = "0xD217E0", VA = "0xD217E0", Slot = "78")]
		public override int TestMic()
		{
			return default(int);
		}

		[Token(Token = "0x60012A9")]
		[Address(RVA = "0xD218C0", Offset = "0xD218C0", VA = "0xD218C0", Slot = "98")]
		public override int GetFileParam(string filepath, int[] bytes, float[] seconds)
		{
			return default(int);
		}

		[Token(Token = "0x60012AA")]
		[Address(RVA = "0xD219C8", Offset = "0xD219C8", VA = "0xD219C8", Slot = "108")]
		public override int invoke(uint nCmd, uint nParam1, uint nParam2, uint[] pOutput)
		{
			return default(int);
		}

		[Token(Token = "0x60012AB")]
		[Address(RVA = "0xD21AD8", Offset = "0xD21AD8", VA = "0xD21AD8", Slot = "69")]
		public override int EnableSpeakerOn(bool bEnable)
		{
			return default(int);
		}

		[Token(Token = "0x60012AC")]
		[Address(RVA = "0xD21BC8", Offset = "0xD21BC8", VA = "0xD21BC8", Slot = "70")]
		public override int SetMicVolume(int vol)
		{
			return default(int);
		}

		[Token(Token = "0x60012AD")]
		[Address(RVA = "0xD21CB8", Offset = "0xD21CB8", VA = "0xD21CB8", Slot = "84")]
		public override int SetVoiceEffects(SoundEffects mode)
		{
			return default(int);
		}

		[Token(Token = "0x60012AE")]
		[Address(RVA = "0xD21DA8", Offset = "0xD21DA8", VA = "0xD21DA8", Slot = "79")]
		public override int IsSpeaking()
		{
			return default(int);
		}

		[Token(Token = "0x60012AF")]
		[Address(RVA = "0xD21E38", Offset = "0xD21E38", VA = "0xD21E38", Slot = "85")]
		public override int EnableReverb(bool bEnable)
		{
			return default(int);
		}

		[Token(Token = "0x60012B0")]
		[Address(RVA = "0xD21F28", Offset = "0xD21F28", VA = "0xD21F28", Slot = "107")]
		public override IntPtr GetExtensionPluginContext()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60012B1")]
		[Address(RVA = "0xD21F84", Offset = "0xD21F84", VA = "0xD21F84", Slot = "86")]
		public override int SetReverbMode(int mode)
		{
			return default(int);
		}

		[Token(Token = "0x60012B2")]
		[Address(RVA = "0xD22074", Offset = "0xD22074", VA = "0xD22074", Slot = "87")]
		public override int GetVoiceIdentify()
		{
			return default(int);
		}

		[Token(Token = "0x60012B3")]
		[Address(RVA = "0xD22154", Offset = "0xD22154", VA = "0xD22154", Slot = "57")]
		public override int SetBGMPath(string path)
		{
			return default(int);
		}

		[Token(Token = "0x60012B4")]
		[Address(RVA = "0xD22244", Offset = "0xD22244", VA = "0xD22244", Slot = "59")]
		public override int StartBGMPlay()
		{
			return default(int);
		}

		[Token(Token = "0x60012B5")]
		[Address(RVA = "0xD22324", Offset = "0xD22324", VA = "0xD22324", Slot = "64")]
		public override int StopBGMPlay()
		{
			return default(int);
		}

		[Token(Token = "0x60012B6")]
		[Address(RVA = "0xD22404", Offset = "0xD22404", VA = "0xD22404", Slot = "61")]
		public override int PauseBGMPlay()
		{
			return default(int);
		}

		[Token(Token = "0x60012B7")]
		[Address(RVA = "0xD224E4", Offset = "0xD224E4", VA = "0xD224E4", Slot = "62")]
		public override int ResumeBGMPlay()
		{
			return default(int);
		}

		[Token(Token = "0x60012B8")]
		[Address(RVA = "0xD225C4", Offset = "0xD225C4", VA = "0xD225C4", Slot = "60")]
		public override int SetBGMVol(int vol)
		{
			return default(int);
		}

		[Token(Token = "0x60012B9")]
		[Address(RVA = "0xD226B4", Offset = "0xD226B4", VA = "0xD226B4", Slot = "63")]
		public override int GetBGMPlayState()
		{
			return default(int);
		}

		[Token(Token = "0x60012BA")]
		[Address(RVA = "0xD22744", Offset = "0xD22744", VA = "0xD22744", Slot = "58")]
		public override int EnableNativeBGMPlay(bool bEnable)
		{
			return default(int);
		}

		[Token(Token = "0x60012BB")]
		[Address(RVA = "0xD22834", Offset = "0xD22834", VA = "0xD22834", Slot = "90")]
		public override int SetBitRate(int bitrate)
		{
			return default(int);
		}

		[Token(Token = "0x60012BC")]
		[Address(RVA = "0xD22924", Offset = "0xD22924", VA = "0xD22924", Slot = "88")]
		public override int GetHwState()
		{
			return default(int);
		}

		[Token(Token = "0x60012BD")]
		[Address(RVA = "0xD229B4", Offset = "0xD229B4", VA = "0xD229B4", Slot = "81")]
		public override int getAudioDeviceConnectionState()
		{
			return default(int);
		}

		[Token(Token = "0x60012BE")]
		[Address(RVA = "0xD22A94", Offset = "0xD22A94", VA = "0xD22A94", Slot = "80")]
		public override void EnableBluetoothSCO(bool enable)
		{
		}

		[Token(Token = "0x60012BF")]
		[Address(RVA = "0xD22B38", Offset = "0xD22B38", VA = "0xD22B38", Slot = "82")]
		public override int CheckDeviceMuteState()
		{
			return default(int);
		}

		[Token(Token = "0x60012C0")]
		[Address(RVA = "0xD22BD8", Offset = "0xD22BD8", VA = "0xD22BD8", Slot = "94")]
		public override int SetAudience(int[] audience, string roomName = "")
		{
			return default(int);
		}

		[Token(Token = "0x60012C1")]
		[Address(RVA = "0xD22C90", Offset = "0xD22C90", VA = "0xD22C90", Slot = "75")]
		public override int GetMicState()
		{
			return default(int);
		}

		[Token(Token = "0x60012C2")]
		[Address(RVA = "0xD22D20", Offset = "0xD22D20", VA = "0xD22D20", Slot = "76")]
		public override int CaptureMicrophoneData(bool bCapture)
		{
			return default(int);
		}

		[Token(Token = "0x60012C3")]
		[Address(RVA = "0xD22DB8", Offset = "0xD22DB8", VA = "0xD22DB8", Slot = "77")]
		public override int GetSpeakerState()
		{
			return default(int);
		}

		[Token(Token = "0x60012C4")]
		[Address(RVA = "0xD22E48", Offset = "0xD22E48", VA = "0xD22E48", Slot = "83")]
		public override int GetMuteResult()
		{
			return default(int);
		}

		[Token(Token = "0x60012C5")]
		[Address(RVA = "0xD22ED8", Offset = "0xD22ED8", VA = "0xD22ED8", Slot = "65")]
		public override int JoinTeamRoom_Token(string roomName, string token, int timestamp, int msTimeout)
		{
			return default(int);
		}

		[Token(Token = "0x60012C6")]
		[Address(RVA = "0xD2301C", Offset = "0xD2301C", VA = "0xD2301C", Slot = "66")]
		public override int JoinNationalRoom_Token(string roomName, string token, int timestamp, GCloudVoiceRole role, int msTimeout)
		{
			return default(int);
		}

		[Token(Token = "0x60012C7")]
		[Address(RVA = "0xD2313C", Offset = "0xD2313C", VA = "0xD2313C", Slot = "67")]
		public override int ApplyMessageKey_Token(string token, int timestamp, int msTimeout)
		{
			return default(int);
		}

		[Token(Token = "0x60012C8")]
		[Address(RVA = "0xD23244", Offset = "0xD23244", VA = "0xD23244", Slot = "68")]
		public override int SpeechToText_Token(string fileID, string token, int timestamp, int language = 0, int msTimeout = 6000)
		{
			return default(int);
		}

		[Token(Token = "0x60012C9")]
		[Address(RVA = "0xD23364", Offset = "0xD23364", VA = "0xD23364", Slot = "99")]
		public override int SetReportBufferTime(int nTimeSec)
		{
			return default(int);
		}

		[Token(Token = "0x60012CA")]
		[Address(RVA = "0xD233FC", Offset = "0xD233FC", VA = "0xD233FC", Slot = "100")]
		public override int SetReportedPlayerInfo(string[] cszOpenID, int[] nMemberID, int nCount)
		{
			return default(int);
		}

		[Token(Token = "0x60012CB")]
		[Address(RVA = "0xD234B0", Offset = "0xD234B0", VA = "0xD234B0", Slot = "101")]
		public override int ReportPlayer(string[] cszOpenID, int nCount, string strInfo)
		{
			return default(int);
		}

		[Token(Token = "0x60012CC")]
		[Address(RVA = "0xD23564", Offset = "0xD23564", VA = "0xD23564", Slot = "102")]
		public override int GetRoomMembers(string roomName, RoomMembers[] members, int len)
		{
			return default(int);
		}

		[Token(Token = "0x60012CD")]
		[Address(RVA = "0xD237B4", Offset = "0xD237B4", VA = "0xD237B4", Slot = "116")]
		public override int EnableCivilVoice(bool bEnable)
		{
			return default(int);
		}

		[Token(Token = "0x60012CE")]
		[Address(RVA = "0xD2384C", Offset = "0xD2384C", VA = "0xD2384C", Slot = "109")]
		public override int StartSaveVoice()
		{
			return default(int);
		}

		[Token(Token = "0x60012CF")]
		[Address(RVA = "0xD238DC", Offset = "0xD238DC", VA = "0xD238DC", Slot = "110")]
		public override int StopSaveVoice()
		{
			return default(int);
		}

		[Token(Token = "0x60012D0")]
		[Address(RVA = "0xD2396C", Offset = "0xD2396C", VA = "0xD2396C", Slot = "111")]
		public override int SetRecSaveTs(int ts)
		{
			return default(int);
		}

		[Token(Token = "0x60012D1")]
		[Address(RVA = "0xD23A04", Offset = "0xD23A04", VA = "0xD23A04", Slot = "112")]
		public override int SetPlayFileIndex(string fileid, int fileindex)
		{
			return default(int);
		}

		[Token(Token = "0x60012D2")]
		[Address(RVA = "0xD23AB0", Offset = "0xD23AB0", VA = "0xD23AB0", Slot = "113")]
		public override int StartPlaySaveVoiceTs(int ts)
		{
			return default(int);
		}

		[Token(Token = "0x60012D3")]
		[Address(RVA = "0xD23B48", Offset = "0xD23B48", VA = "0xD23B48", Slot = "114")]
		public override int StopPlaySaveVoice()
		{
			return default(int);
		}

		[Token(Token = "0x60012D4")]
		[Address(RVA = "0xD23BD8", Offset = "0xD23BD8", VA = "0xD23BD8", Slot = "115")]
		public override int DelAllSaveVoiceFile(string fileid, int fileindex)
		{
			return default(int);
		}

		[Token(Token = "0x60012D5")]
		[Address(RVA = "0xD23C84", Offset = "0xD23C84", VA = "0xD23C84", Slot = "103")]
		public override int SpeechTranslate(string fileID, SpeechLanguageType srcLang, SpeechLanguageType targetLang, SpeechTranslateType transType, int nTimeoutMS)
		{
			return default(int);
		}

		[Token(Token = "0x60012D6")]
		[Address(RVA = "0xD23D54", Offset = "0xD23D54", VA = "0xD23D54", Slot = "104")]
		public override int RSTSStartRecording(SpeechLanguageType srcLang, SpeechLanguageType[] pTargetLangs, int nTargetLangCnt, SpeechTranslateType transType, int nTimeoutMS)
		{
			return default(int);
		}

		[Token(Token = "0x60012D7")]
		[Address(RVA = "0xD23EF0", Offset = "0xD23EF0", VA = "0xD23EF0", Slot = "105")]
		public override int RSTSStopRecording()
		{
			return default(int);
		}

		[Token(Token = "0x60012D8")]
		[Address(RVA = "0xD23F80", Offset = "0xD23F80", VA = "0xD23F80", Slot = "106")]
		public override int EnableTranslate(string roomname, bool enable, SpeechLanguageType myLang)
		{
			return default(int);
		}

		[Token(Token = "0x60012D9")]
		[Address(RVA = "0xD24034", Offset = "0xD24034", VA = "0xD24034", Slot = "117")]
		public override int EnableWXMiniApp(string roomName, bool enable)
		{
			return default(int);
		}

		[Token(Token = "0x60012DA")]
		[Address(RVA = "0xD240E0", Offset = "0xD240E0", VA = "0xD240E0", Slot = "120")]
		public override int UpdateSelfInfo(string roomName, string info)
		{
			return default(int);
		}

		[Token(Token = "0x60012DB")]
		[Address(RVA = "0xD2418C", Offset = "0xD2418C", VA = "0xD2418C", Slot = "118")]
		public override int QueryWXMembers(string roomName)
		{
			return default(int);
		}

		[Token(Token = "0x60012DC")]
		[Address(RVA = "0xD24224", Offset = "0xD24224", VA = "0xD24224", Slot = "119")]
		public override int QueryUserInfo(string roomName, int memberID, string openID)
		{
			return default(int);
		}

		[Token(Token = "0x60012DD")]
		[Address(RVA = "0xD242D8", Offset = "0xD242D8", VA = "0xD242D8")]
		public string ToBase64String(string str)
		{
			return null;
		}

		[Token(Token = "0x60012DE")]
		[Address(RVA = "0xD24394", Offset = "0xD24394", VA = "0xD24394")]
		public string UnBase64String(string str)
		{
			return null;
		}

		[Token(Token = "0x60012DF")]
		[Address(RVA = "0xD1F138", Offset = "0xD1F138", VA = "0xD1F138")]
		public WXMemberInfo[] Parse2MemberInfos(string userInfo)
		{
			return null;
		}

		[Token(Token = "0x60012E0")]
		[Address(RVA = "0xD1EFE8", Offset = "0xD1EFE8", VA = "0xD1EFE8")]
		public WXMemberInfo Parse2MemberInfo(string userInfo)
		{
			return null;
		}

		[Token(Token = "0x60012E1")]
		[Address(RVA = "0xD2444C", Offset = "0xD2444C", VA = "0xD2444C", Slot = "121")]
		public override int SetCivilBinPath(string path)
		{
			return default(int);
		}

		[Token(Token = "0x60012E2")]
		[Address(RVA = "0xD2453C", Offset = "0xD2453C", VA = "0xD2453C", Slot = "122")]
		public override int SetPlayerVolume(string playerid, uint vol)
		{
			return default(int);
		}

		[Token(Token = "0x60012E3")]
		[Address(RVA = "0xD245E8", Offset = "0xD245E8", VA = "0xD245E8", Slot = "123")]
		public override int GetPlayerVolume(string playerid)
		{
			return default(int);
		}

		[Token(Token = "0x60012E4")]
		[Address(RVA = "0xD24680", Offset = "0xD24680", VA = "0xD24680", Slot = "124")]
		public override int EnableKeyWordsDetect(bool bEnable)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000117")]
	public enum GCloudVoiceMode
	{
		[Token(Token = "0x4000371")]
		Unknown = -1,
		[Token(Token = "0x4000372")]
		RealTime,
		[Token(Token = "0x4000373")]
		Messages,
		[Token(Token = "0x4000374")]
		Translation,
		[Token(Token = "0x4000375")]
		RSTT,
		[Token(Token = "0x4000376")]
		HIGHQUALITY,
		[Token(Token = "0x4000377")]
		RSTS
	}
	[Token(Token = "0x2000118")]
	public enum GCloudVoiceRole
	{
		[Token(Token = "0x4000379")]
		ANCHOR = 1,
		[Token(Token = "0x400037A")]
		AUDIENCE
	}
	[Token(Token = "0x2000119")]
	public enum GCloudLanguage
	{
		[Token(Token = "0x400037C")]
		Chinese,
		[Token(Token = "0x400037D")]
		Korean,
		[Token(Token = "0x400037E")]
		English,
		[Token(Token = "0x400037F")]
		Japanese
	}
	[Token(Token = "0x200011A")]
	public enum SoundEffects
	{
		[Token(Token = "0x4000381")]
		GVSE_REVB_CHURCH,
		[Token(Token = "0x4000382")]
		GVSE_REVB_THEATER,
		[Token(Token = "0x4000383")]
		GVSE_HELL,
		[Token(Token = "0x4000384")]
		GVSE_ROBOT_1,
		[Token(Token = "0x4000385")]
		GVSE_MALE_TO_FEMALE,
		[Token(Token = "0x4000386")]
		GVSE_FEMALE_TO_MALE,
		[Token(Token = "0x4000387")]
		GVSE_DRUNK,
		[Token(Token = "0x4000388")]
		GVSE_PAPI_JIANG,
		[Token(Token = "0x4000389")]
		GVSE_SQUIRREL,
		[Token(Token = "0x400038A")]
		GVSE_NO_EFFECT
	}
	[Token(Token = "0x200011B")]
	public enum SpeechLanguageType
	{
		[Token(Token = "0x400038C")]
		SPEECH_LANGUAGE_ZH,
		[Token(Token = "0x400038D")]
		SPEECH_LANGUAGE_EN,
		[Token(Token = "0x400038E")]
		SPEECH_LANGUAGE_JA,
		[Token(Token = "0x400038F")]
		SPEECH_LANGUAGE_KO,
		[Token(Token = "0x4000390")]
		SPEECH_LANGUAGE_DE,
		[Token(Token = "0x4000391")]
		SPEECH_LANGUAGE_FR,
		[Token(Token = "0x4000392")]
		SPEECH_LANGUAGE_ES,
		[Token(Token = "0x4000393")]
		SPEECH_LANGUAGE_IT,
		[Token(Token = "0x4000394")]
		SPEECH_LANGUAGE_TR,
		[Token(Token = "0x4000395")]
		SPEECH_LANGUAGE_RU,
		[Token(Token = "0x4000396")]
		SPEECH_LANGUAGE_PT,
		[Token(Token = "0x4000397")]
		SPEECH_LANGUAGE_VI,
		[Token(Token = "0x4000398")]
		SPEECH_LANGUAGE_ID,
		[Token(Token = "0x4000399")]
		SPEECH_LANGUAGE_MS,
		[Token(Token = "0x400039A")]
		SPEECH_LANGUAGE_TH
	}
	[Token(Token = "0x200011C")]
	public enum SpeechTranslateType
	{
		[Token(Token = "0x400039C")]
		SPEECH_TRANSLATE_STST,
		[Token(Token = "0x400039D")]
		SPEECH_TRANSLATE_STTT,
		[Token(Token = "0x400039E")]
		SPEECH_TRANSLATE_STTS
	}
	[Token(Token = "0x200011D")]
	public enum GCloudVoiceErr
	{
		[Token(Token = "0x40003A0")]
		GCLOUD_VOICE_SUCC = 0,
		[Token(Token = "0x40003A1")]
		GCLOUD_VOICE_PARAM_NULL = 4097,
		[Token(Token = "0x40003A2")]
		GCLOUD_VOICE_NEED_SETAPPINFO = 4098,
		[Token(Token = "0x40003A3")]
		GCLOUD_VOICE_INIT_ERR = 4099,
		[Token(Token = "0x40003A4")]
		GCLOUD_VOICE_RECORDING_ERR = 4100,
		[Token(Token = "0x40003A5")]
		GCLOUD_VOICE_POLL_BUFF_ERR = 4101,
		[Token(Token = "0x40003A6")]
		GCLOUD_VOICE_MODE_STATE_ERR = 4102,
		[Token(Token = "0x40003A7")]
		GCLOUD_VOICE_PARAM_INVALID = 4103,
		[Token(Token = "0x40003A8")]
		GCLOUD_VOICE_OPENFILE_ERR = 4104,
		[Token(Token = "0x40003A9")]
		GCLOUD_VOICE_NEED_INIT = 4105,
		[Token(Token = "0x40003AA")]
		GCLOUD_VOICE_ENGINE_ERR = 4106,
		[Token(Token = "0x40003AB")]
		GCLOUD_VOICE_POLL_MSG_PARSE_ERR = 4107,
		[Token(Token = "0x40003AC")]
		GCLOUD_VOICE_POLL_MSG_NO = 4108,
		[Token(Token = "0x40003AD")]
		GCLOUD_VOICE_MODE_ERR = 4109,
		[Token(Token = "0x40003AE")]
		GCLOUD_VOICE_REALTIME_STATE_ERR = 8193,
		[Token(Token = "0x40003AF")]
		GCLOUD_VOICE_JOIN_ERR = 8194,
		[Token(Token = "0x40003B0")]
		GCLOUD_VOICE_QUIT_ROOMNAME_ERR = 8195,
		[Token(Token = "0x40003B1")]
		GCLOUD_VOICE_OPENMIC_NOTANCHOR_ERR = 8196,
		[Token(Token = "0x40003B2")]
		GCLOUD_VOICE_CREATE_ROOM_ERR = 8197,
		[Token(Token = "0x40003B3")]
		GCLOUD_VOICE_NO_ROOM = 8198,
		[Token(Token = "0x40003B4")]
		GCLOUD_VOICE_QUIT_ROOM_ERR = 8199,
		[Token(Token = "0x40003B5")]
		GCLOUD_VOICE_ALREADY_IN_THE_ROOM = 8200,
		[Token(Token = "0x40003B6")]
		GCLOUD_VOICE_AUTHKEY_ERR = 12289,
		[Token(Token = "0x40003B7")]
		GCLOUD_VOICE_PATH_ACCESS_ERR = 12290,
		[Token(Token = "0x40003B8")]
		GCLOUD_VOICE_PERMISSION_MIC_ERR = 12291,
		[Token(Token = "0x40003B9")]
		GCLOUD_VOICE_NEED_AUTHKEY = 12292,
		[Token(Token = "0x40003BA")]
		GCLOUD_VOICE_UPLOAD_ERR = 12293,
		[Token(Token = "0x40003BB")]
		GCLOUD_VOICE_HTTP_BUSY = 12294,
		[Token(Token = "0x40003BC")]
		GCLOUD_VOICE_DOWNLOAD_ERR = 12295,
		[Token(Token = "0x40003BD")]
		GCLOUD_VOICE_SPEAKER_ERR = 12296,
		[Token(Token = "0x40003BE")]
		GCLOUD_VOICE_TVE_PLAYSOUND_ERR = 12297,
		[Token(Token = "0x40003BF")]
		GCLOUD_VOICE_AUTHING = 12298,
		[Token(Token = "0x40003C0")]
		GCLOUD_VOICE_LIMIT = 12299,
		[Token(Token = "0x40003C1")]
		GCLOUD_VOICE_INTERNAL_TVE_ERR = 20481,
		[Token(Token = "0x40003C2")]
		GCLOUD_VOICE_INTERNAL_VISIT_ERR = 20482,
		[Token(Token = "0x40003C3")]
		GCLOUD_VOICE_INTERNAL_USED = 20483,
		[Token(Token = "0x40003C4")]
		GCLOUD_VOICE_BADSERVER = 24577,
		[Token(Token = "0x40003C5")]
		GCLOUD_VOICE_STTING = 28673,
		[Token(Token = "0x40003C6")]
		GCLOUD_VOICE_CHANGE_ROLE = 32769,
		[Token(Token = "0x40003C7")]
		GCLOUD_VOICE_CHANGING_ROLE = 32770,
		[Token(Token = "0x40003C8")]
		GCLOUD_VOICE_NOT_IN_ROOM = 32771,
		[Token(Token = "0x40003C9")]
		GCLOUD_VOICE_COORDINATE = 36865,
		[Token(Token = "0x40003CA")]
		GCLOUD_VOICE_SMALL_ROOMNAME = 36866,
		[Token(Token = "0x40003CB")]
		GCLOUD_VOICE_COORDINATE_ROOMNAME_ERROR = 36867,
		[Token(Token = "0x40003CC")]
		GCLOUD_VOICE_SAVEDATA_DOWNLOADING = 40961,
		[Token(Token = "0x40003CD")]
		GCLOUD_VOICE_SAVEDATA_INDEXNOTFOUND = 40962,
		[Token(Token = "0x40003CE")]
		GCLOUD_VOICE_NOENABGLE_WXMINI = 45058
	}
	[Token(Token = "0x200011E")]
	public enum GCloudVoiceCompleteCode
	{
		[Token(Token = "0x40003D0")]
		GV_ON_NET_ERR = 4097,
		[Token(Token = "0x40003D1")]
		GV_ON_UNKNOWN = 4098,
		[Token(Token = "0x40003D2")]
		GV_ON_INTERNAL_ERR = 4099,
		[Token(Token = "0x40003D3")]
		GV_ON_BUSINESS_NOT_FOUND = 4100,
		[Token(Token = "0x40003D4")]
		GV_ON_JOINROOM_SUCC = 8193,
		[Token(Token = "0x40003D5")]
		GV_ON_JOINROOM_TIMEOUT = 8194,
		[Token(Token = "0x40003D6")]
		GV_ON_JOINROOM_SVR_ERR = 8195,
		[Token(Token = "0x40003D7")]
		GV_ON_JOINROOM_UNKNOWN = 8196,
		[Token(Token = "0x40003D8")]
		GV_ON_JOINROOM_RETRY_FAIL = 8197,
		[Token(Token = "0x40003D9")]
		GV_ON_QUITROOM_SUCC = 8198,
		[Token(Token = "0x40003DA")]
		GV_ON_ROOM_OFFLINE = 8199,
		[Token(Token = "0x40003DB")]
		GV_ON_ROLE_SUCC = 8200,
		[Token(Token = "0x40003DC")]
		GV_ON_ROLE_TIMEOUT = 8201,
		[Token(Token = "0x40003DD")]
		GV_ON_ROLE_MAX_AHCHOR = 8208,
		[Token(Token = "0x40003DE")]
		GV_ON_ROLE_NO_CHANGE = 8209,
		[Token(Token = "0x40003DF")]
		GV_ON_ROLE_SVR_ERROR = 8210,
		[Token(Token = "0x40003E0")]
		GV_ON_MESSAGE_KEY_APPLIED_SUCC = 12289,
		[Token(Token = "0x40003E1")]
		GV_ON_MESSAGE_KEY_APPLIED_TIMEOUT = 12290,
		[Token(Token = "0x40003E2")]
		GV_ON_MESSAGE_KEY_APPLIED_SVR_ERR = 12291,
		[Token(Token = "0x40003E3")]
		GV_ON_MESSAGE_KEY_APPLIED_UNKNOWN = 12292,
		[Token(Token = "0x40003E4")]
		GV_ON_UPLOAD_RECORD_DONE = 12293,
		[Token(Token = "0x40003E5")]
		GV_ON_UPLOAD_RECORD_ERROR = 12294,
		[Token(Token = "0x40003E6")]
		GV_ON_DOWNLOAD_RECORD_DONE = 12295,
		[Token(Token = "0x40003E7")]
		GV_ON_DOWNLOAD_RECORD_ERROR = 12296,
		[Token(Token = "0x40003E8")]
		GV_ON_PLAYFILE_DONE = 12297,
		[Token(Token = "0x40003E9")]
		GV_ON_STT_SUCC = 16385,
		[Token(Token = "0x40003EA")]
		GV_ON_STT_TIMEOUT = 16386,
		[Token(Token = "0x40003EB")]
		GV_ON_STT_APIERR = 16387,
		[Token(Token = "0x40003EC")]
		GV_ON_RSTT_SUCC = 20481,
		[Token(Token = "0x40003ED")]
		GV_ON_RSTT_TIMEOUT = 20482,
		[Token(Token = "0x40003EE")]
		GV_ON_RSTT_APIERR = 20483,
		[Token(Token = "0x40003EF")]
		GV_ON_RSTT_RETRY = 20484,
		[Token(Token = "0x40003F0")]
		GV_ON_REPORT_SUCC = 24577,
		[Token(Token = "0x40003F1")]
		GV_ON_DATA_ERROR = 24578,
		[Token(Token = "0x40003F2")]
		GV_ON_PUNISHED = 24579,
		[Token(Token = "0x40003F3")]
		GV_ON_NOT_PUNISHED = 24580,
		[Token(Token = "0x40003F4")]
		GV_ON_KEY_DELECTED = 24581,
		[Token(Token = "0x40003F5")]
		GV_ON_SAVEDATA_SUCC = 28673,
		[Token(Token = "0x40003F6")]
		GV_ON_ROOM_MEMBER_INROOM = 32769,
		[Token(Token = "0x40003F7")]
		GV_ON_ROOM_MEMBER_OUTROOM = 32770,
		[Token(Token = "0x40003F8")]
		GV_ON_UPLOAD_REPORT_INFO_ERROR = 36865,
		[Token(Token = "0x40003F9")]
		GV_ON_UPLOAD_REPORT_INFO_TIMEOUT = 36866,
		[Token(Token = "0x40003FA")]
		GV_ON_ST_SUCC = 40961,
		[Token(Token = "0x40003FB")]
		GV_ON_ST_HTTP_ERROR = 40962,
		[Token(Token = "0x40003FC")]
		GV_ON_ST_SERVER_ERROR = 40963,
		[Token(Token = "0x40003FD")]
		GV_ON_ST_INVALID_JSON = 40964,
		[Token(Token = "0x40003FE")]
		GV_ON_WX_UPLOAD_SUCC = 45057,
		[Token(Token = "0x40003FF")]
		GV_ON_WX_UPLOAD_ERR = 45058,
		[Token(Token = "0x4000400")]
		GV_ON_WX_ROOM_SUCC = 45059,
		[Token(Token = "0x4000401")]
		GV_ON_WX_ROOM_ERR = 45060,
		[Token(Token = "0x4000402")]
		GV_ON_WX_USER_SUCC = 45061,
		[Token(Token = "0x4000403")]
		GV_ON_WX_USER_ERR = 45062,
		[Token(Token = "0x4000404")]
		GV_ON_TRANSLATE_SUCC = 49153,
		[Token(Token = "0x4000405")]
		GV_ON_TRANSLATE_SERVER_ERR = 49154
	}
	[Token(Token = "0x200011F")]
	public enum GCloudVoiceEvent
	{
		[Token(Token = "0x4000407")]
		EVENT_NO_DEVICE_CONNECTED = 0,
		[Token(Token = "0x4000408")]
		EVENT_HEADSET_DISCONNECTED = 10,
		[Token(Token = "0x4000409")]
		EVENT_HEADSET_CONNECTED = 11,
		[Token(Token = "0x400040A")]
		EVENT_BLUETOOTH_HEADSET_DISCONNECTED = 20,
		[Token(Token = "0x400040B")]
		EVENT_BLUETOOTH_HEADSET_CONNECTED = 21,
		[Token(Token = "0x400040C")]
		EVENT_MIC_STATE_OPEN_SUCC = 30,
		[Token(Token = "0x400040D")]
		EVENT_MIC_STATE_OPEN_ERR = 31,
		[Token(Token = "0x400040E")]
		EVENT_MIC_STATE_NO_OPEN = 32,
		[Token(Token = "0x400040F")]
		EVENT_MIC_STATE_OCCUPANCY = 33,
		[Token(Token = "0x4000410")]
		EVENT_SPEAKER_STATE_OPEN_SUCC = 40,
		[Token(Token = "0x4000411")]
		EVENT_SPEAKER_STATE_OPEN_ERR = 41,
		[Token(Token = "0x4000412")]
		EVENT_SPEAKER_STATE_NO_OPEN = 42,
		[Token(Token = "0x4000413")]
		EVENT_AUDIO_INTERRUPT_BEGIN = 50,
		[Token(Token = "0x4000414")]
		EVENT_AUDIO_INTERRUPT_END = 51,
		[Token(Token = "0x4000415")]
		EVENT_AUDIO_RECORDER_EXCEPTION = 52,
		[Token(Token = "0x4000416")]
		EVENT_AUDIO_RENDER_EXCEPTION = 53,
		[Token(Token = "0x4000417")]
		EVENT_PHONE_CALL_PICK_UP = 54,
		[Token(Token = "0x4000418")]
		EVENT_PHONE_CALL_HANG_UP = 55
	}
	[Token(Token = "0x2000120")]
	public enum GCloudVoiceDeviceState
	{
		[Token(Token = "0x400041A")]
		AUDIO_DEVICE_UNCONNECTED,
		[Token(Token = "0x400041B")]
		AUDIO_DEVICE_WIREDHEADSET_CONNECTED,
		[Token(Token = "0x400041C")]
		AUDIO_DEVICE_BULETOOTH_CONNECTED
	}
	[Token(Token = "0x2000121")]
	public struct RoomMembers
	{
		[Token(Token = "0x400041D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int memberid;

		[Token(Token = "0x400041E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string openid;
	}
	[Token(Token = "0x2000122")]
	public abstract class IGCloudVoiceExtension : IGCloudVoiceNotify
	{
		[Token(Token = "0x60012E6")]
		public abstract int EnableMultiRoom(bool enable);

		[Token(Token = "0x60012E7")]
		public abstract int EnableRoomMicrophone(string roomName, bool enable);

		[Token(Token = "0x60012E8")]
		public abstract int EnableRoomSpeaker(string roomName, bool enable);

		[Token(Token = "0x60012E9")]
		public abstract int SetBGMPath(string path);

		[Token(Token = "0x60012EA")]
		public abstract int EnableNativeBGMPlay(bool bEnable);

		[Token(Token = "0x60012EB")]
		public abstract int StartBGMPlay();

		[Token(Token = "0x60012EC")]
		public abstract int SetBGMVol(int vol);

		[Token(Token = "0x60012ED")]
		public abstract int PauseBGMPlay();

		[Token(Token = "0x60012EE")]
		public abstract int ResumeBGMPlay();

		[Token(Token = "0x60012EF")]
		public abstract int GetBGMPlayState();

		[Token(Token = "0x60012F0")]
		public abstract int StopBGMPlay();

		[Token(Token = "0x60012F1")]
		public abstract int JoinTeamRoom_Token(string roomName, string token, int timestamp, int msTimeout);

		[Token(Token = "0x60012F2")]
		public abstract int JoinNationalRoom_Token(string roomName, string token, int timestamp, GCloudVoiceRole role, int msTimeout);

		[Token(Token = "0x60012F3")]
		public abstract int ApplyMessageKey_Token(string token, int timestamp, int msTimeout);

		[Token(Token = "0x60012F4")]
		public abstract int SpeechToText_Token(string fileID, string token, int timestamp, int language = 0, int msTimeout = 6000);

		[Token(Token = "0x60012F5")]
		public abstract int EnableSpeakerOn(bool bEnable);

		[Token(Token = "0x60012F6")]
		public abstract int SetMicVolume(int vol);

		[Token(Token = "0x60012F7")]
		public abstract int SetSpeakerVolume(int vol);

		[Token(Token = "0x60012F8")]
		public abstract int GetMicLevel();

		[Token(Token = "0x60012F9")]
		public abstract int GetMicLevel(bool bFadeOut);

		[Token(Token = "0x60012FA")]
		public abstract int GetSpeakerLevel();

		[Token(Token = "0x60012FB")]
		public abstract int GetMicState();

		[Token(Token = "0x60012FC")]
		public abstract int CaptureMicrophoneData(bool bCapture);

		[Token(Token = "0x60012FD")]
		public abstract int GetSpeakerState();

		[Token(Token = "0x60012FE")]
		public abstract int TestMic();

		[Token(Token = "0x60012FF")]
		public abstract int IsSpeaking();

		[Token(Token = "0x6001300")]
		public abstract void EnableBluetoothSCO(bool enable);

		[Token(Token = "0x6001301")]
		public abstract int getAudioDeviceConnectionState();

		[Token(Token = "0x6001302")]
		public abstract int CheckDeviceMuteState();

		[Token(Token = "0x6001303")]
		public abstract int GetMuteResult();

		[Token(Token = "0x6001304")]
		public abstract int SetVoiceEffects(SoundEffects mode);

		[Token(Token = "0x6001305")]
		public abstract int EnableReverb(bool bEnable);

		[Token(Token = "0x6001306")]
		public abstract int SetReverbMode(int mode);

		[Token(Token = "0x6001307")]
		public abstract int GetVoiceIdentify();

		[Token(Token = "0x6001308")]
		public abstract int GetHwState();

		[Token(Token = "0x6001309")]
		public abstract int SetServerInfo(string URL);

		[Token(Token = "0x600130A")]
		public abstract int SetBitRate(int bitrate);

		[Token(Token = "0x600130B")]
		public abstract int SetDataFree(bool enable);

		[Token(Token = "0x600130C")]
		public abstract int EnableLog(bool enable);

		[Token(Token = "0x600130D")]
		public abstract int JoinFMRoom(string roomID, int msTimeout);

		[Token(Token = "0x600130E")]
		public abstract int SetAudience(int[] audience, string roomName = "");

		[Token(Token = "0x600130F")]
		public abstract int ForbidMemberVoice(int member, bool bEnable, string roomName = "");

		[Token(Token = "0x6001310")]
		public abstract int UploadRecordedFile(string filePath, int msTimeout, bool bPermanent);

		[Token(Token = "0x6001311")]
		public abstract int DownloadRecordedFile(string fileID, string downloadFilePath, int msTimeout, bool bPermanent);

		[Token(Token = "0x6001312")]
		public abstract int GetFileParam(string filepath, int[] bytes, float[] seconds);

		[Token(Token = "0x6001313")]
		public abstract int SetReportBufferTime(int nTimeSec);

		[Token(Token = "0x6001314")]
		public abstract int SetReportedPlayerInfo(string[] cszOpenID, int[] nMemberID, int nCount);

		[Token(Token = "0x6001315")]
		public abstract int ReportPlayer(string[] cszOpenID, int nCount, string strInfo);

		[Token(Token = "0x6001316")]
		public abstract int GetRoomMembers(string roomName, RoomMembers[] members, int len);

		[Token(Token = "0x6001317")]
		public abstract int SpeechTranslate(string fileID, SpeechLanguageType srcLang, SpeechLanguageType targetLang, SpeechTranslateType transType, int nTimeoutMS = 10000);

		[Token(Token = "0x6001318")]
		public abstract int RSTSStartRecording(SpeechLanguageType srcLang, SpeechLanguageType[] pTargetLangs, int nTargetLangCnt, SpeechTranslateType transType, int nTimeoutMS = 5000);

		[Token(Token = "0x6001319")]
		public abstract int RSTSStopRecording();

		[Token(Token = "0x600131A")]
		public abstract int EnableTranslate(string roomName, bool enable, SpeechLanguageType myLang);

		[Token(Token = "0x600131B")]
		public abstract IntPtr GetExtensionPluginContext();

		[Token(Token = "0x600131C")]
		public abstract int invoke(uint nCmd, uint nParam1, uint nParam2, uint[] pOutput);

		[Token(Token = "0x600131D")]
		public abstract int StartSaveVoice();

		[Token(Token = "0x600131E")]
		public abstract int StopSaveVoice();

		[Token(Token = "0x600131F")]
		public abstract int SetRecSaveTs(int ts);

		[Token(Token = "0x6001320")]
		public abstract int SetPlayFileIndex(string fileid, int fileindex);

		[Token(Token = "0x6001321")]
		public abstract int StartPlaySaveVoiceTs(int ts);

		[Token(Token = "0x6001322")]
		public abstract int StopPlaySaveVoice();

		[Token(Token = "0x6001323")]
		public abstract int DelAllSaveVoiceFile(string fileid, int fileindex);

		[Token(Token = "0x6001324")]
		public abstract int EnableCivilVoice(bool bEnable);

		[Token(Token = "0x6001325")]
		public abstract int EnableWXMiniApp(string roomName, bool enable);

		[Token(Token = "0x6001326")]
		public abstract int QueryWXMembers(string roomName);

		[Token(Token = "0x6001327")]
		public abstract int QueryUserInfo(string roomName, int memberID, string openID);

		[Token(Token = "0x6001328")]
		public abstract int UpdateSelfInfo(string roomName, string info);

		[Token(Token = "0x6001329")]
		public abstract int SetCivilBinPath(string path);

		[Token(Token = "0x600132A")]
		public abstract int SetPlayerVolume(string playerid, uint vol);

		[Token(Token = "0x600132B")]
		public abstract int GetPlayerVolume(string playerid);

		[Token(Token = "0x600132C")]
		public abstract int EnableKeyWordsDetect(bool bEnable);

		[Token(Token = "0x600132D")]
		[Address(RVA = "0x1C7CB48", Offset = "0x1C7CB48", VA = "0x1C7CB48")]
		protected IGCloudVoiceExtension()
		{
		}
	}
	[Token(Token = "0x2000123")]
	public abstract class IGCloudVoiceNotify
	{
		[Token(Token = "0x2000356")]
		public class WXMemberInfo
		{
			[Token(Token = "0x4000E99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int memberID;

			[Token(Token = "0x4000E9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string openID;

			[Token(Token = "0x4000E9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string info;

			[Token(Token = "0x6002BFD")]
			[Address(RVA = "0x1C82538", Offset = "0x1C82538", VA = "0x1C82538")]
			public WXMemberInfo()
			{
			}
		}

		[Token(Token = "0x2000357")]
		public delegate void JoinRoomCompleteHandler(GCloudVoiceCompleteCode code, string roomName, int memberID);

		[Token(Token = "0x2000358")]
		public delegate void MemberVoiceHandler(int[] members, int count);

		[Token(Token = "0x2000359")]
		public delegate void RoomMemberVoiceHandler(string roomName, int member, int status);

		[Token(Token = "0x200035A")]
		public delegate void ChangeRoleCompleteHandler(GCloudVoiceCompleteCode code, string roomName, int memberID, int role);

		[Token(Token = "0x200035B")]
		public delegate void StatusUpdateHandler(GCloudVoiceCompleteCode code, string roomName, int memberID);

		[Token(Token = "0x200035C")]
		public delegate void QuitRoomCompleteHandler(GCloudVoiceCompleteCode code, string roomName, int memberID);

		[Token(Token = "0x200035D")]
		public delegate void RoomMemberChangedCompleteHandler(GCloudVoiceCompleteCode code, string roomName, int memid, string openID);

		[Token(Token = "0x200035E")]
		public delegate void ApplyMessageKeyCompleteHandler(GCloudVoiceCompleteCode code);

		[Token(Token = "0x200035F")]
		public delegate void UploadReccordFileCompleteHandler(GCloudVoiceCompleteCode code, string filepath, string fileid);

		[Token(Token = "0x2000360")]
		public delegate void DownloadRecordFileCompleteHandler(GCloudVoiceCompleteCode code, string filepath, string fileid);

		[Token(Token = "0x2000361")]
		public delegate void PlayRecordFilCompleteHandler(GCloudVoiceCompleteCode code, string filepath);

		[Token(Token = "0x2000362")]
		public delegate void SpeechToTextHandler(GCloudVoiceCompleteCode code, string fileID, string result);

		[Token(Token = "0x2000363")]
		public delegate void StreamSpeechToTextHandler(GCloudVoiceCompleteCode code, int error, string result, string voicePath);

		[Token(Token = "0x2000364")]
		public delegate void EventUpdateHandler(GCloudVoiceEvent code, string info);

		[Token(Token = "0x2000365")]
		public delegate void MuteSwitchResultHandler(int result);

		[Token(Token = "0x2000366")]
		public delegate void ReportPlayerHandler(GCloudVoiceCompleteCode nCode, string strInfo);

		[Token(Token = "0x2000367")]
		public delegate void SaveRecFileIndexHandler(GCloudVoiceCompleteCode code, string fileid, int fileindex);

		[Token(Token = "0x2000368")]
		public delegate void SpeechTranslateHandler(GCloudVoiceCompleteCode nCode, string srcText, string targetText, string targetFileID, int srcFileDuration);

		[Token(Token = "0x2000369")]
		public delegate void QueryUserInfoHandler(GCloudVoiceCompleteCode code, string roomName, WXMemberInfo member);

		[Token(Token = "0x200036A")]
		public delegate void WXMemberVoiceHandler(string roomName, int[] members, int count);

		[Token(Token = "0x200036B")]
		public delegate void QueryWXMembersHandler(GCloudVoiceCompleteCode code, string roomName, WXMemberInfo[] members);

		[Token(Token = "0x200036C")]
		public delegate void UpdateUserInfoHandler(GCloudVoiceCompleteCode code, string roomName, int memberID);

		[Token(Token = "0x200036D")]
		public delegate void UpdateMicLevelHandler(int level);

		[Token(Token = "0x200036E")]
		public delegate void RSTSHandler(GCloudVoiceCompleteCode nCode, SpeechLanguageType srcLang, SpeechLanguageType targetLang, string srcText, string targetText, string targetFileID, int srcFileDuration);

		[Token(Token = "0x200036F")]
		public delegate void EnableTranslateHandler(GCloudVoiceCompleteCode code, string roomName, bool enable);

		[Token(Token = "0x1400001A")]
		[method: Token(Token = "0x600132E")]
		[method: AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A643C", Offset = "0x9A643C")]
		public abstract event JoinRoomCompleteHandler OnJoinRoomComplete;

		[Token(Token = "0x1400001B")]
		[method: Token(Token = "0x6001330")]
		[method: AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A645C", Offset = "0x9A645C")]
		public abstract event MemberVoiceHandler OnMemberVoice;

		[Token(Token = "0x1400001C")]
		[method: Token(Token = "0x6001332")]
		[method: AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A647C", Offset = "0x9A647C")]
		public abstract event RoomMemberVoiceHandler OnRoomMemberVoice;

		[Token(Token = "0x1400001D")]
		[method: Token(Token = "0x6001334")]
		[method: AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A649C", Offset = "0x9A649C")]
		public abstract event ChangeRoleCompleteHandler OnRoleChangeComplete;

		[Token(Token = "0x1400001E")]
		[method: Token(Token = "0x6001336")]
		[method: AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A64BC", Offset = "0x9A64BC")]
		public abstract event StatusUpdateHandler OnStatusUpdate;

		[Token(Token = "0x1400001F")]
		[method: Token(Token = "0x6001338")]
		[method: AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A64DC", Offset = "0x9A64DC")]
		public abstract event QuitRoomCompleteHandler OnQuitRoomComplete;

		[Token(Token = "0x14000020")]
		[method: Token(Token = "0x600133A")]
		[method: AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A64FC", Offset = "0x9A64FC")]
		public abstract event ApplyMessageKeyCompleteHandler OnApplyMessageKeyComplete;

		[Token(Token = "0x14000021")]
		[method: Token(Token = "0x600133C")]
		[method: AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A651C", Offset = "0x9A651C")]
		public abstract event UploadReccordFileCompleteHandler OnUploadReccordFileComplete;

		[Token(Token = "0x14000022")]
		[method: Token(Token = "0x600133E")]
		[method: AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A653C", Offset = "0x9A653C")]
		public abstract event DownloadRecordFileCompleteHandler OnDownloadRecordFileComplete;

		[Token(Token = "0x14000023")]
		[method: Token(Token = "0x6001340")]
		[method: AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A655C", Offset = "0x9A655C")]
		public abstract event PlayRecordFilCompleteHandler OnPlayRecordFilComplete;

		[Token(Token = "0x14000024")]
		[method: Token(Token = "0x6001342")]
		[method: AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A657C", Offset = "0x9A657C")]
		public abstract event SpeechToTextHandler OnSpeechToText;

		[Token(Token = "0x14000025")]
		[method: Token(Token = "0x6001344")]
		[method: AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A659C", Offset = "0x9A659C")]
		public abstract event StreamSpeechToTextHandler OnStreamSpeechToText;

		[Token(Token = "0x14000026")]
		[method: Token(Token = "0x6001346")]
		[method: AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A65BC", Offset = "0x9A65BC")]
		public abstract event EventUpdateHandler OnEvent;

		[Token(Token = "0x14000027")]
		[method: Token(Token = "0x6001348")]
		[method: AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A65DC", Offset = "0x9A65DC")]
		public abstract event MuteSwitchResultHandler OnMuteSwitchState;

		[Token(Token = "0x14000028")]
		[method: Token(Token = "0x600134A")]
		[method: AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A65FC", Offset = "0x9A65FC")]
		public abstract event ReportPlayerHandler OnReportPlayer;

		[Token(Token = "0x14000029")]
		[method: Token(Token = "0x600134C")]
		[method: AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A661C", Offset = "0x9A661C")]
		public abstract event SaveRecFileIndexHandler OnSaveRecFileIndex;

		[Token(Token = "0x1400002A")]
		[method: Token(Token = "0x600134E")]
		[method: AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A663C", Offset = "0x9A663C")]
		public abstract event RoomMemberChangedCompleteHandler OnRoomMemberInfo;

		[Token(Token = "0x1400002B")]
		[method: Token(Token = "0x6001350")]
		[method: AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A665C", Offset = "0x9A665C")]
		public abstract event SpeechTranslateHandler OnSpeechTranslate;

		[Token(Token = "0x1400002C")]
		[method: Token(Token = "0x6001352")]
		[method: AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A667C", Offset = "0x9A667C")]
		public abstract event RSTSHandler OnRSTS;

		[Token(Token = "0x1400002D")]
		[method: Token(Token = "0x6001354")]
		[method: AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A669C", Offset = "0x9A669C")]
		public abstract event EnableTranslateHandler OnEnableTranslate;

		[Token(Token = "0x1400002E")]
		[method: Token(Token = "0x6001356")]
		[method: AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A66BC", Offset = "0x9A66BC")]
		public abstract event QueryUserInfoHandler OnQueryUserInfo;

		[Token(Token = "0x1400002F")]
		[method: Token(Token = "0x6001358")]
		[method: AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A66DC", Offset = "0x9A66DC")]
		public abstract event WXMemberVoiceHandler OnWXMemberVoice;

		[Token(Token = "0x14000030")]
		[method: Token(Token = "0x600135A")]
		[method: AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A66FC", Offset = "0x9A66FC")]
		public abstract event QueryWXMembersHandler OnQueryWXMembers;

		[Token(Token = "0x14000031")]
		[method: Token(Token = "0x600135C")]
		[method: AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A671C", Offset = "0x9A671C")]
		public abstract event UpdateUserInfoHandler OnUpdateUserInfo;

		[Token(Token = "0x14000032")]
		[method: Token(Token = "0x600135E")]
		[method: AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A673C", Offset = "0x9A673C")]
		public abstract event UpdateMicLevelHandler OnUpdateMicLevel;

		[Token(Token = "0x6001360")]
		[Address(RVA = "0x1C7CEFC", Offset = "0x1C7CEFC", VA = "0x1C7CEFC")]
		protected IGCloudVoiceNotify()
		{
		}
	}
}
namespace CurvedUI
{
	[Token(Token = "0x2000124")]
	public class CUI_AnimateCurvedFillOnStart : MonoBehaviour
	{
		[Token(Token = "0x6001361")]
		[Address(RVA = "0xEF012C", Offset = "0xEF012C", VA = "0xEF012C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001362")]
		[Address(RVA = "0xEF031C", Offset = "0xEF031C", VA = "0xEF031C")]
		public CUI_AnimateCurvedFillOnStart()
		{
		}
	}
	[Token(Token = "0x2000125")]
	public class CUI_CameraController : MonoBehaviour
	{
		[Token(Token = "0x400041F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static CUI_CameraController instance;

		[Token(Token = "0x4000420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform CameraObject;

		[Token(Token = "0x4000421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float rotationMargin;

		[Token(Token = "0x6001363")]
		[Address(RVA = "0xEF0324", Offset = "0xEF0324", VA = "0xEF0324")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001364")]
		[Address(RVA = "0xEF0378", Offset = "0xEF0378", VA = "0xEF0378")]
		public CUI_CameraController()
		{
		}
	}
	[Token(Token = "0x2000126")]
	public class CUI_ChangeValueOnHold : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler, IPointerEnterHandler, IPointerExitHandler
	{
		[Token(Token = "0x4000422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool pressed;

		[Token(Token = "0x4000423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image bg;

		[Token(Token = "0x4000424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Color SelectedColor;

		[Token(Token = "0x4000425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Color NormalColor;

		[Token(Token = "0x4000426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private CanvasGroup IntroCG;

		[Token(Token = "0x4000427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private CanvasGroup MenuCG;

		[Token(Token = "0x6001365")]
		[Address(RVA = "0xEF0388", Offset = "0xEF0388", VA = "0xEF0388")]
		private void Update()
		{
		}

		[Token(Token = "0x6001366")]
		[Address(RVA = "0xEF0404", Offset = "0xEF0404", VA = "0xEF0404")]
		private void ChangeVal()
		{
		}

		[Token(Token = "0x6001367")]
		[Address(RVA = "0xEF0568", Offset = "0xEF0568", VA = "0xEF0568", Slot = "4")]
		public void OnPointerDown(PointerEventData data)
		{
		}

		[Token(Token = "0x6001368")]
		[Address(RVA = "0xEF0574", Offset = "0xEF0574", VA = "0xEF0574", Slot = "5")]
		public void OnPointerUp(PointerEventData data)
		{
		}

		[Token(Token = "0x6001369")]
		[Address(RVA = "0xEF057C", Offset = "0xEF057C", VA = "0xEF057C", Slot = "6")]
		public void OnPointerEnter(PointerEventData data)
		{
		}

		[Token(Token = "0x600136A")]
		[Address(RVA = "0xEF0604", Offset = "0xEF0604", VA = "0xEF0604", Slot = "7")]
		public void OnPointerExit(PointerEventData data)
		{
		}

		[Token(Token = "0x600136B")]
		[Address(RVA = "0xEF068C", Offset = "0xEF068C", VA = "0xEF068C")]
		public CUI_ChangeValueOnHold()
		{
		}
	}
	[Token(Token = "0x2000127")]
	public class CUI_GunController : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000370")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93FEA0", Offset = "0x93FEA0")]
		private sealed class <>c
		{
			[Token(Token = "0x4000E9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000E9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<GameObject> <>9__2_0;

			[Token(Token = "0x6002C63")]
			[Address(RVA = "0xEF0C80", Offset = "0xEF0C80", VA = "0xEF0C80")]
			public <>c()
			{
			}

			[Token(Token = "0x6002C64")]
			[Address(RVA = "0xEF0C88", Offset = "0xEF0C88", VA = "0xEF0C88")]
			internal bool <Update>b__2_0(GameObject x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CurvedUISettings ControlledCanvas;

		[Token(Token = "0x4000429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform LaserBeamTransform;

		[Token(Token = "0x600136C")]
		[Address(RVA = "0xEF0694", Offset = "0xEF0694", VA = "0xEF0694")]
		private void Update()
		{
		}

		[Token(Token = "0x600136D")]
		[Address(RVA = "0xEF0C14", Offset = "0xEF0C14", VA = "0xEF0C14")]
		public CUI_GunController()
		{
		}
	}
	[Token(Token = "0x2000128")]
	public class CUI_GunMovement : MonoBehaviour
	{
		[Token(Token = "0x400042A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CurvedUISettings mySettings;

		[Token(Token = "0x400042B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform pivot;

		[Token(Token = "0x400042C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float sensitivity;

		[Token(Token = "0x400042D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 lastMouse;

		[Token(Token = "0x600136E")]
		[Address(RVA = "0xEF0D50", Offset = "0xEF0D50", VA = "0xEF0D50")]
		private void Start()
		{
		}

		[Token(Token = "0x600136F")]
		[Address(RVA = "0xEF0D7C", Offset = "0xEF0D7C", VA = "0xEF0D7C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001370")]
		[Address(RVA = "0xEF0F6C", Offset = "0xEF0F6C", VA = "0xEF0F6C")]
		public CUI_GunMovement()
		{
		}
	}
	[Token(Token = "0x2000129")]
	public class CUI_OrientOnCurvedSpace : MonoBehaviour
	{
		[Token(Token = "0x400042E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CurvedUISettings mySettings;

		[Token(Token = "0x6001371")]
		[Address(RVA = "0xEF0F80", Offset = "0xEF0F80", VA = "0xEF0F80")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001372")]
		[Address(RVA = "0xEF0FD8", Offset = "0xEF0FD8", VA = "0xEF0FD8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001373")]
		[Address(RVA = "0xEF15B8", Offset = "0xEF15B8", VA = "0xEF15B8")]
		public CUI_OrientOnCurvedSpace()
		{
		}
	}
	[Token(Token = "0x200012A")]
	public class CUI_PerlinNoisePosition : MonoBehaviour
	{
		[Token(Token = "0x400042F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float samplingSpeed;

		[Token(Token = "0x4000430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector2 Range;

		[Token(Token = "0x4000431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RectTransform rectie;

		[Token(Token = "0x6001374")]
		[Address(RVA = "0xEF15C0", Offset = "0xEF15C0", VA = "0xEF15C0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001375")]
		[Address(RVA = "0xEF1634", Offset = "0xEF1634", VA = "0xEF1634")]
		private void Update()
		{
		}

		[Token(Token = "0x6001376")]
		[Address(RVA = "0xEF178C", Offset = "0xEF178C", VA = "0xEF178C")]
		public CUI_PerlinNoisePosition()
		{
		}
	}
	[Token(Token = "0x200012B")]
	public class CUI_PerlinNoiseRotation : MonoBehaviour
	{
		[Token(Token = "0x4000432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float samplingSpeed;

		[Token(Token = "0x4000433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float maxrotation;

		[Token(Token = "0x4000434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RectTransform rectie;

		[Token(Token = "0x6001377")]
		[Address(RVA = "0xEF179C", Offset = "0xEF179C", VA = "0xEF179C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001378")]
		[Address(RVA = "0xEF1810", Offset = "0xEF1810", VA = "0xEF1810")]
		private void Update()
		{
		}

		[Token(Token = "0x6001379")]
		[Address(RVA = "0xEF1904", Offset = "0xEF1904", VA = "0xEF1904")]
		public CUI_PerlinNoiseRotation()
		{
		}
	}
	[Token(Token = "0x200012C")]
	public class CUI_RaycastToCanvas : MonoBehaviour
	{
		[Token(Token = "0x4000435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CurvedUISettings mySettings;

		[Token(Token = "0x600137A")]
		[Address(RVA = "0xEF1918", Offset = "0xEF1918", VA = "0xEF1918")]
		private void Start()
		{
		}

		[Token(Token = "0x600137B")]
		[Address(RVA = "0xEF1970", Offset = "0xEF1970", VA = "0xEF1970")]
		private void Update()
		{
		}

		[Token(Token = "0x600137C")]
		[Address(RVA = "0xEF1C24", Offset = "0xEF1C24", VA = "0xEF1C24")]
		public CUI_RaycastToCanvas()
		{
		}
	}
	[Token(Token = "0x200012D")]
	public class CUI_RiseChildrenOverTime : MonoBehaviour
	{
		[Token(Token = "0x4000436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float current;

		[Token(Token = "0x4000437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float Speed;

		[Token(Token = "0x4000438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float RiseBy;

		[Token(Token = "0x600137D")]
		[Address(RVA = "0xEF1C2C", Offset = "0xEF1C2C", VA = "0xEF1C2C")]
		private void Start()
		{
		}

		[Token(Token = "0x600137E")]
		[Address(RVA = "0xEF1C30", Offset = "0xEF1C30", VA = "0xEF1C30")]
		private void Update()
		{
		}

		[Token(Token = "0x600137F")]
		[Address(RVA = "0xEF1E28", Offset = "0xEF1E28", VA = "0xEF1E28")]
		public CUI_RiseChildrenOverTime()
		{
		}
	}
	[Token(Token = "0x200012E")]
	public class CUI_TMPChecker : MonoBehaviour
	{
		[Token(Token = "0x4000439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject testMsg;

		[Token(Token = "0x400043A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject enabledMsg;

		[Token(Token = "0x400043B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject disabledMsg;

		[Token(Token = "0x6001380")]
		[Address(RVA = "0xEF1E3C", Offset = "0xEF1E3C", VA = "0xEF1E3C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001381")]
		[Address(RVA = "0xEF1EB8", Offset = "0xEF1EB8", VA = "0xEF1EB8")]
		public CUI_TMPChecker()
		{
		}
	}
	[Token(Token = "0x200012F")]
	public class CUI_ViveButtonState : MonoBehaviour
	{
		[Token(Token = "0x2000371")]
		private enum ViveButton
		{
			[Token(Token = "0x4000E9F")]
			Trigger,
			[Token(Token = "0x4000EA0")]
			TouchpadTouch,
			[Token(Token = "0x4000EA1")]
			TouchpadPress,
			[Token(Token = "0x4000EA2")]
			Grip,
			[Token(Token = "0x4000EA3")]
			Menu
		}

		[Token(Token = "0x400043C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Color ActiveColor;

		[Token(Token = "0x400043D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Color InActiveColor;

		[Token(Token = "0x400043E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ViveButton ShowStateFor;

		[Token(Token = "0x6001382")]
		[Address(RVA = "0xEF1EC0", Offset = "0xEF1EC0", VA = "0xEF1EC0")]
		public CUI_ViveButtonState()
		{
		}
	}
	[Token(Token = "0x2000130")]
	public class CUI_ViveHapticPulse : MonoBehaviour
	{
		[Token(Token = "0x400043F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float PulseStrength;

		[Token(Token = "0x6001383")]
		[Address(RVA = "0xEF1F04", Offset = "0xEF1F04", VA = "0xEF1F04")]
		public void SetPulseStrength(float newStr)
		{
		}

		[Token(Token = "0x6001384")]
		[Address(RVA = "0xEF1F88", Offset = "0xEF1F88", VA = "0xEF1F88")]
		public void TriggerPulse()
		{
		}

		[Token(Token = "0x6001385")]
		[Address(RVA = "0xEF1F8C", Offset = "0xEF1F8C", VA = "0xEF1F8C")]
		public CUI_ViveHapticPulse()
		{
		}
	}
	[Token(Token = "0x2000131")]
	public class CUI_ViveLaserBeam : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000372")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93FEB0", Offset = "0x93FEB0")]
		private sealed class <>c
		{
			[Token(Token = "0x4000EA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000EA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<GameObject> <>9__2_0;

			[Token(Token = "0x6002C66")]
			[Address(RVA = "0xEF23EC", Offset = "0xEF23EC", VA = "0xEF23EC")]
			public <>c()
			{
			}

			[Token(Token = "0x6002C67")]
			[Address(RVA = "0xEF23F4", Offset = "0xEF23F4", VA = "0xEF23F4")]
			internal bool <Update>b__2_0(GameObject x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform LaserBeamTransform;

		[Token(Token = "0x4000441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform LaserBeamDot;

		[Token(Token = "0x6001386")]
		[Address(RVA = "0xEF1F94", Offset = "0xEF1F94", VA = "0xEF1F94")]
		protected void Update()
		{
		}

		[Token(Token = "0x6001387")]
		[Address(RVA = "0xEF2380", Offset = "0xEF2380", VA = "0xEF2380")]
		public CUI_ViveLaserBeam()
		{
		}
	}
	[Token(Token = "0x2000132")]
	public class CUI_WorldSpaceCursorFollow : MonoBehaviour
	{
		[Token(Token = "0x4000442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CurvedUISettings mySettings;

		[Token(Token = "0x6001388")]
		[Address(RVA = "0xEF24BC", Offset = "0xEF24BC", VA = "0xEF24BC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001389")]
		[Address(RVA = "0xEF25E8", Offset = "0xEF25E8", VA = "0xEF25E8")]
		private void Update()
		{
		}

		[Token(Token = "0x600138A")]
		[Address(RVA = "0xEF268C", Offset = "0xEF268C", VA = "0xEF268C")]
		public CUI_WorldSpaceCursorFollow()
		{
		}
	}
	[Token(Token = "0x2000133")]
	public class CUI_WorldSpaceMouseMultipleCanvases : MonoBehaviour
	{
		[Token(Token = "0x4000443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<CurvedUISettings> ControlledCanvases;

		[Token(Token = "0x4000444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform WorldSpaceMouse;

		[Token(Token = "0x4000445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private CurvedUISettings MouseCanvas;

		[Token(Token = "0x600138B")]
		[Address(RVA = "0xEF2694", Offset = "0xEF2694", VA = "0xEF2694")]
		private void Start()
		{
		}

		[Token(Token = "0x600138C")]
		[Address(RVA = "0xEF2698", Offset = "0xEF2698", VA = "0xEF2698")]
		private void Update()
		{
		}

		[Token(Token = "0x600138D")]
		[Address(RVA = "0xEF2AAC", Offset = "0xEF2AAC", VA = "0xEF2AAC")]
		public CUI_WorldSpaceMouseMultipleCanvases()
		{
		}
	}
	[Token(Token = "0x2000134")]
	public class CUI_ZChangeOnHover : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4000446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float restZ;

		[Token(Token = "0x4000447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float OnHoverZ;

		[Token(Token = "0x4000448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool Zoomed;

		[Token(Token = "0x600138E")]
		[Address(RVA = "0xEF2AB4", Offset = "0xEF2AB4", VA = "0xEF2AB4")]
		private void Update()
		{
		}

		[Token(Token = "0x600138F")]
		[Address(RVA = "0xEF2C90", Offset = "0xEF2C90", VA = "0xEF2C90", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001390")]
		[Address(RVA = "0xEF2C9C", Offset = "0xEF2C9C", VA = "0xEF2C9C", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001391")]
		[Address(RVA = "0xEF2CA4", Offset = "0xEF2CA4", VA = "0xEF2CA4")]
		public CUI_ZChangeOnHover()
		{
		}
	}
	[Token(Token = "0x2000135")]
	public class CUI_draggable : MonoBehaviour, IBeginDragHandler, IEventSystemHandler, IEndDragHandler, IDragHandler
	{
		[Token(Token = "0x4000449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector2 savedVector;

		[Token(Token = "0x6001392")]
		[Address(RVA = "0xEF2CB4", Offset = "0xEF2CB4", VA = "0xEF2CB4", Slot = "4")]
		public void OnBeginDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x6001393")]
		[Address(RVA = "0xEF2FC8", Offset = "0xEF2FC8", VA = "0xEF2FC8", Slot = "6")]
		public void OnDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x6001394")]
		[Address(RVA = "0xEF30A0", Offset = "0xEF30A0", VA = "0xEF30A0", Slot = "5")]
		public void OnEndDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x6001395")]
		[Address(RVA = "0xEF2DFC", Offset = "0xEF2DFC", VA = "0xEF2DFC")]
		private void RaycastPosition(out Vector2 newPos)
		{
		}

		[Token(Token = "0x6001396")]
		[Address(RVA = "0xEF310C", Offset = "0xEF310C", VA = "0xEF310C")]
		public CUI_draggable()
		{
		}
	}
	[Token(Token = "0x2000136")]
	public class CUI_guntarget : MonoBehaviour
	{
		[Token(Token = "0x2000373")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93FEC0", Offset = "0x93FEC0")]
		private sealed class <ShotRoutine>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000EA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000EA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000EA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CUI_guntarget <>4__this;

			[Token(Token = "0x170001F7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C6B")]
				[Address(RVA = "0xEF348C", Offset = "0xEF348C", VA = "0xEF348C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001F8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C6D")]
				[Address(RVA = "0xEF34F4", Offset = "0xEF34F4", VA = "0xEF34F4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C68")]
			[Address(RVA = "0xEF3254", Offset = "0xEF3254", VA = "0xEF3254")]
			[DebuggerHidden]
			public <ShotRoutine>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6002C69")]
			[Address(RVA = "0xEF3388", Offset = "0xEF3388", VA = "0xEF3388", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C6A")]
			[Address(RVA = "0xEF338C", Offset = "0xEF338C", VA = "0xEF338C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C6C")]
			[Address(RVA = "0xEF3494", Offset = "0xEF3494", VA = "0xEF3494", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400044A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject Model;

		[Token(Token = "0x400044B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ParticleSystem emitter;

		[Token(Token = "0x400044C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private CanvasGroup cgroup;

		[Token(Token = "0x400044D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private CUI_PerlinNoisePosition perlinPos;

		[Token(Token = "0x400044E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Text scoreLabel;

		[Token(Token = "0x400044F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int score;

		[Token(Token = "0x4000450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool dead;

		[Token(Token = "0x6001397")]
		[Address(RVA = "0xEF3114", Offset = "0xEF3114", VA = "0xEF3114")]
		public void OnShot()
		{
		}

		[Token(Token = "0x6001398")]
		[Address(RVA = "0xEF31E4", Offset = "0xEF31E4", VA = "0xEF31E4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A675C", Offset = "0x9A675C")]
		private IEnumerator ShotRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001399")]
		[Address(RVA = "0xEF3280", Offset = "0xEF3280", VA = "0xEF3280")]
		private void Respawn()
		{
		}

		[Token(Token = "0x600139A")]
		[Address(RVA = "0xEF3380", Offset = "0xEF3380", VA = "0xEF3380")]
		public CUI_guntarget()
		{
		}
	}
	[Token(Token = "0x2000137")]
	public class CUI_inventory_paralax : MonoBehaviour
	{
		[Token(Token = "0x4000451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform front;

		[Token(Token = "0x4000452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform back;

		[Token(Token = "0x4000453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 initFG;

		[Token(Token = "0x4000454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 initBG;

		[Token(Token = "0x4000455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float change;

		[Token(Token = "0x600139B")]
		[Address(RVA = "0xEF34FC", Offset = "0xEF34FC", VA = "0xEF34FC")]
		private void Start()
		{
		}

		[Token(Token = "0x600139C")]
		[Address(RVA = "0xEF354C", Offset = "0xEF354C", VA = "0xEF354C")]
		private void Update()
		{
		}

		[Token(Token = "0x600139D")]
		[Address(RVA = "0xEF3788", Offset = "0xEF3788", VA = "0xEF3788")]
		public CUI_inventory_paralax()
		{
		}
	}
	[Token(Token = "0x2000138")]
	public class CurvedUIInputFieldCaret : MonoBehaviour, ISelectHandler, IEventSystemHandler, IDeselectHandler
	{
		[Token(Token = "0x2000374")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93FED0", Offset = "0x93FED0")]
		private sealed class <CaretBlinker>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000EA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000EAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000EAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CurvedUIInputFieldCaret <>4__this;

			[Token(Token = "0x170001F9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C71")]
				[Address(RVA = "0xEF4A00", Offset = "0xEF4A00", VA = "0xEF4A00", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001FA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C73")]
				[Address(RVA = "0xEF4A68", Offset = "0xEF4A68", VA = "0xEF4A68", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C6E")]
			[Address(RVA = "0xEF45CC", Offset = "0xEF45CC", VA = "0xEF45CC")]
			[DebuggerHidden]
			public <CaretBlinker>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6002C6F")]
			[Address(RVA = "0xEF48E4", Offset = "0xEF48E4", VA = "0xEF48E4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C70")]
			[Address(RVA = "0xEF48E8", Offset = "0xEF48E8", VA = "0xEF48E8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C72")]
			[Address(RVA = "0xEF4A08", Offset = "0xEF4A08", VA = "0xEF4A08", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private InputField myField;

		[Token(Token = "0x4000457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RectTransform myCaret;

		[Token(Token = "0x4000458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color origCaretColor;

		[Token(Token = "0x4000459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color origSelectionColor;

		[Token(Token = "0x400045A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool selected;

		[Token(Token = "0x400045B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool selectingText;

		[Token(Token = "0x1700002F")]
		public Color CaretColor
		{
			[Token(Token = "0x60013A6")]
			[Address(RVA = "0xEF4874", Offset = "0xEF4874", VA = "0xEF4874")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60013A7")]
			[Address(RVA = "0xEF4880", Offset = "0xEF4880", VA = "0xEF4880")]
			set
			{
			}
		}

		[Token(Token = "0x17000030")]
		public Color SelectionColor
		{
			[Token(Token = "0x60013A8")]
			[Address(RVA = "0xEF488C", Offset = "0xEF488C", VA = "0xEF488C")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60013A9")]
			[Address(RVA = "0xEF4898", Offset = "0xEF4898", VA = "0xEF4898")]
			set
			{
			}
		}

		[Token(Token = "0x17000031")]
		public float CaretBlinkRate
		{
			[Token(Token = "0x60013AA")]
			[Address(RVA = "0xEF48A4", Offset = "0xEF48A4", VA = "0xEF48A4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60013AB")]
			[Address(RVA = "0xEF48C0", Offset = "0xEF48C0", VA = "0xEF48C0")]
			set
			{
			}
		}

		[Token(Token = "0x600139E")]
		[Address(RVA = "0xEF3D0C", Offset = "0xEF3D0C", VA = "0xEF3D0C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600139F")]
		[Address(RVA = "0xEF3D64", Offset = "0xEF3D64", VA = "0xEF3D64")]
		private void Update()
		{
		}

		[Token(Token = "0x60013A0")]
		[Address(RVA = "0xEF414C", Offset = "0xEF414C", VA = "0xEF414C", Slot = "4")]
		public void OnSelect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x60013A1")]
		[Address(RVA = "0xEF4594", Offset = "0xEF4594", VA = "0xEF4594", Slot = "5")]
		public void OnDeselect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x60013A2")]
		[Address(RVA = "0xEF4524", Offset = "0xEF4524", VA = "0xEF4524")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A67C0", Offset = "0x9A67C0")]
		private IEnumerator CaretBlinker()
		{
			return null;
		}

		[Token(Token = "0x60013A3")]
		[Address(RVA = "0xEF420C", Offset = "0xEF420C", VA = "0xEF420C")]
		private void CreateCaret()
		{
		}

		[Token(Token = "0x60013A4")]
		[Address(RVA = "0xEF3D74", Offset = "0xEF3D74", VA = "0xEF3D74")]
		private void UpdateCaret()
		{
		}

		[Token(Token = "0x60013A5")]
		[Address(RVA = "0xEF45F8", Offset = "0xEF45F8", VA = "0xEF45F8")]
		private Vector2 GetLocalPositionInText(int charNo)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60013AC")]
		[Address(RVA = "0xEF48DC", Offset = "0xEF48DC", VA = "0xEF48DC")]
		public CurvedUIInputFieldCaret()
		{
		}
	}
	[Token(Token = "0x2000139")]
	public class CurvedUIPointerEventData : PointerEventData
	{
		[Token(Token = "0x2000375")]
		public enum ControllerType
		{
			[Token(Token = "0x4000EAD")]
			NONE = -1,
			[Token(Token = "0x4000EAE")]
			VIVE
		}

		[Token(Token = "0x400045C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public GameObject Controller;

		[Token(Token = "0x400045D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public Vector2 TouchPadAxis;

		[Token(Token = "0x60013AD")]
		[Address(RVA = "0xEF4A70", Offset = "0xEF4A70", VA = "0xEF4A70")]
		public CurvedUIPointerEventData(EventSystem eventSystem)
		{
		}
	}
	[Token(Token = "0x200013A")]
	public class CurvedUIRaycaster : GraphicRaycaster
	{
		[Token(Token = "0x400045E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool showDebug;

		[Token(Token = "0x400045F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Canvas myCanvas;

		[Token(Token = "0x4000460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private CurvedUISettings mySettings;

		[Token(Token = "0x4000461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 cyllinderMidPoint;

		[Token(Token = "0x4000462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<GameObject> lastHovered;

		[Token(Token = "0x4000463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector2 lastCanvasPos;

		[Token(Token = "0x60013AE")]
		[Address(RVA = "0xEF4AF8", Offset = "0xEF4AF8", VA = "0xEF4AF8", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60013AF")]
		[Address(RVA = "0xEF4E1C", Offset = "0xEF4E1C", VA = "0xEF4E1C", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60013B0")]
		[Address(RVA = "0xEF5230", Offset = "0xEF5230", VA = "0xEF5230", Slot = "17")]
		public override void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
		{
		}

		[Token(Token = "0x60013B1")]
		[Address(RVA = "0xEF5C94", Offset = "0xEF5C94", VA = "0xEF5C94", Slot = "22")]
		public virtual bool RaycastToCyllinderCanvas(Ray ray3D, out Vector2 o_canvasPos, bool OutputInCanvasSpace = false, int myLayerMask = -1)
		{
			return default(bool);
		}

		[Token(Token = "0x60013B2")]
		[Address(RVA = "0xEF63D8", Offset = "0xEF63D8", VA = "0xEF63D8", Slot = "23")]
		public virtual bool RaycastToCyllinderVerticalCanvas(Ray ray3D, out Vector2 o_canvasPos, bool OutputInCanvasSpace = false, int myLayerMask = -1)
		{
			return default(bool);
		}

		[Token(Token = "0x60013B3")]
		[Address(RVA = "0xEF69D8", Offset = "0xEF69D8", VA = "0xEF69D8", Slot = "24")]
		public virtual bool RaycastToRingCanvas(Ray ray3D, out Vector2 o_canvasPos, bool OutputInCanvasSpace = false, int myLayerMask = -1)
		{
			return default(bool);
		}

		[Token(Token = "0x60013B4")]
		[Address(RVA = "0xEF6E70", Offset = "0xEF6E70", VA = "0xEF6E70", Slot = "25")]
		public virtual bool RaycastToSphereCanvas(Ray ray3D, out Vector2 o_canvasPos, bool OutputInCanvasSpace = false, int myLayerMask = -1)
		{
			return default(bool);
		}

		[Token(Token = "0x60013B5")]
		[Address(RVA = "0xEF4E20", Offset = "0xEF4E20", VA = "0xEF4E20")]
		protected Collider CreateCollider()
		{
			return null;
		}

		[Token(Token = "0x60013B6")]
		[Address(RVA = "0xEF787C", Offset = "0xEF787C", VA = "0xEF787C")]
		private Mesh CreateCyllinderColliderMesh(bool vertical = false)
		{
			return null;
		}

		[Token(Token = "0x60013B7")]
		[Address(RVA = "0xEF8200", Offset = "0xEF8200", VA = "0xEF8200")]
		private Mesh CreateSphereColliderMesh()
		{
			return null;
		}

		[Token(Token = "0x60013B8")]
		[Address(RVA = "0xEF6294", Offset = "0xEF6294", VA = "0xEF6294")]
		private float AngleSigned(Vector3 v1, Vector3 v2, Vector3 n)
		{
			return default(float);
		}

		[Token(Token = "0x60013B9")]
		[Address(RVA = "0xEF5BC4", Offset = "0xEF5BC4", VA = "0xEF5BC4")]
		private bool ShouldStartDrag(Vector2 pressPos, Vector2 currentPos, float threshold, bool useDragThreshold)
		{
			return default(bool);
		}

		[Token(Token = "0x60013BA")]
		[Address(RVA = "0xEF8E38", Offset = "0xEF8E38", VA = "0xEF8E38")]
		public void RebuildCollider()
		{
		}

		[Token(Token = "0x60013BB")]
		[Address(RVA = "0xEF0AF8", Offset = "0xEF0AF8", VA = "0xEF0AF8")]
		public List<GameObject> GetObjectsUnderPointer()
		{
			return null;
		}

		[Token(Token = "0x60013BC")]
		[Address(RVA = "0xEF8AD4", Offset = "0xEF8AD4", VA = "0xEF8AD4")]
		private void ModifyQuad(List<Vector3> verts, int vertexIndex, Vector2 requiredSize)
		{
		}

		[Token(Token = "0x60013BD")]
		[Address(RVA = "0xEF8EA4", Offset = "0xEF8EA4", VA = "0xEF8EA4")]
		private Vector3 TesselateQuad(List<Vector3> quad, float x, float y)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60013BE")]
		[Address(RVA = "0xEF9098", Offset = "0xEF9098", VA = "0xEF9098")]
		public CurvedUIRaycaster()
		{
		}
	}
	[Token(Token = "0x200013B")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x93EB40", Offset = "0x93EB40")]
	public class CurvedUISettings : MonoBehaviour
	{
		[Token(Token = "0x2000376")]
		public enum CurvedUIShape
		{
			[Token(Token = "0x4000EB0")]
			CYLINDER,
			[Token(Token = "0x4000EB1")]
			RING,
			[Token(Token = "0x4000EB2")]
			SPHERE,
			[Token(Token = "0x4000EB3")]
			CYLINDER_VERTICAL
		}

		[Token(Token = "0x2000377")]
		public enum CurvedUIController
		{
			[Token(Token = "0x4000EB5")]
			MOUSE,
			[Token(Token = "0x4000EB6")]
			GAZE,
			[Token(Token = "0x4000EB7")]
			WORLD_MOUSE,
			[Token(Token = "0x4000EB8")]
			CUSTOM_RAY,
			[Token(Token = "0x4000EB9")]
			VIVE
		}

		[Token(Token = "0x4000464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CurvedUIShape shape;

		[Token(Token = "0x4000465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private CurvedUIController controller;

		[Token(Token = "0x4000466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float quality;

		[Token(Token = "0x4000467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private bool interactable;

		[Token(Token = "0x4000468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		[SerializeField]
		private bool blocksRaycasts;

		[Token(Token = "0x4000469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		[SerializeField]
		private bool raycastMyLayerOnly;

		[Token(Token = "0x400046A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int angle;

		[Token(Token = "0x400046B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private bool preserveAspect;

		[Token(Token = "0x400046C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int vertAngle;

		[Token(Token = "0x400046D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float ringFill;

		[Token(Token = "0x400046E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private int ringExternalDiamater;

		[Token(Token = "0x400046F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private bool ringFlipVertical;

		[Token(Token = "0x4000470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int baseCircleSegments;

		[Token(Token = "0x4000471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector2 savedRectSize;

		[Token(Token = "0x4000472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float savedRadius;

		[Token(Token = "0x4000473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Canvas myCanvas;

		[Token(Token = "0x4000474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Ray customControllerRay;

		[Token(Token = "0x4000475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 lastMouseOnScreenPos;

		[Token(Token = "0x4000476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Vector2 worldSpaceMouseInCanvasSpace;

		[Token(Token = "0x4000477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector2 lastWorldSpaceMouseOnCanvas;

		[Token(Token = "0x4000478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector2 worldSpaceMouseOnCanvasDelta;

		[Token(Token = "0x4000479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float worldSpaceMouseSensitivity;

		[Token(Token = "0x17000032")]
		public Ray CustomControllerRay
		{
			[Token(Token = "0x60013CA")]
			[Address(RVA = "0xEFA18C", Offset = "0xEFA18C", VA = "0xEFA18C")]
			get
			{
				return default(Ray);
			}
			[Token(Token = "0x60013CB")]
			[Address(RVA = "0xEF0A50", Offset = "0xEF0A50", VA = "0xEF0A50")]
			set
			{
			}
		}

		[Token(Token = "0x17000033")]
		public Vector2 WorldSpaceMouseInCanvasSpace
		{
			[Token(Token = "0x60013CC")]
			[Address(RVA = "0xEFA1A0", Offset = "0xEFA1A0", VA = "0xEFA1A0")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x60013CD")]
			[Address(RVA = "0xEF25DC", Offset = "0xEF25DC", VA = "0xEF25DC")]
			set
			{
			}
		}

		[Token(Token = "0x17000034")]
		public Vector2 WorldSpaceMouseInCanvasSpaceDelta
		{
			[Token(Token = "0x60013CE")]
			[Address(RVA = "0xEFA1A8", Offset = "0xEFA1A8", VA = "0xEFA1A8")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x17000035")]
		public float WorldSpaceMouseSensitivity
		{
			[Token(Token = "0x60013CF")]
			[Address(RVA = "0xEFA234", Offset = "0xEFA234", VA = "0xEFA234")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60013D0")]
			[Address(RVA = "0xEFA23C", Offset = "0xEFA23C", VA = "0xEFA23C")]
			set
			{
			}
		}

		[Token(Token = "0x17000036")]
		public int BaseCircleSegments
		{
			[Token(Token = "0x60013D7")]
			[Address(RVA = "0xEFA374", Offset = "0xEFA374", VA = "0xEFA374")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000037")]
		public int Angle
		{
			[Token(Token = "0x60013D8")]
			[Address(RVA = "0xEFA37C", Offset = "0xEFA37C", VA = "0xEFA37C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60013D9")]
			[Address(RVA = "0xEFA384", Offset = "0xEFA384", VA = "0xEFA384")]
			set
			{
			}
		}

		[Token(Token = "0x17000038")]
		public float Quality
		{
			[Token(Token = "0x60013DA")]
			[Address(RVA = "0xEFA398", Offset = "0xEFA398", VA = "0xEFA398")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60013DB")]
			[Address(RVA = "0xEFA3A0", Offset = "0xEFA3A0", VA = "0xEFA3A0")]
			set
			{
			}
		}

		[Token(Token = "0x17000039")]
		public CurvedUIShape Shape
		{
			[Token(Token = "0x60013DC")]
			[Address(RVA = "0xEFA3BC", Offset = "0xEFA3BC", VA = "0xEFA3BC")]
			get
			{
				return default(CurvedUIShape);
			}
			[Token(Token = "0x60013DD")]
			[Address(RVA = "0xEFA3C4", Offset = "0xEFA3C4", VA = "0xEFA3C4")]
			set
			{
			}
		}

		[Token(Token = "0x1700003A")]
		public int VerticalAngle
		{
			[Token(Token = "0x60013DE")]
			[Address(RVA = "0xEFA3E4", Offset = "0xEFA3E4", VA = "0xEFA3E4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60013DF")]
			[Address(RVA = "0xEFA3EC", Offset = "0xEFA3EC", VA = "0xEFA3EC")]
			set
			{
			}
		}

		[Token(Token = "0x1700003B")]
		public float RingFill
		{
			[Token(Token = "0x60013E0")]
			[Address(RVA = "0xEFA40C", Offset = "0xEFA40C", VA = "0xEFA40C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60013E1")]
			[Address(RVA = "0xEF0300", Offset = "0xEF0300", VA = "0xEF0300")]
			set
			{
			}
		}

		[Token(Token = "0x1700003C")]
		public float SavedRadius
		{
			[Token(Token = "0x60013E2")]
			[Address(RVA = "0xEF9B08", Offset = "0xEF9B08", VA = "0xEF9B08")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700003D")]
		public int RingExternalDiameter
		{
			[Token(Token = "0x60013E3")]
			[Address(RVA = "0xEFA414", Offset = "0xEFA414", VA = "0xEFA414")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60013E4")]
			[Address(RVA = "0xEFA41C", Offset = "0xEFA41C", VA = "0xEFA41C")]
			set
			{
			}
		}

		[Token(Token = "0x1700003E")]
		public bool RingFlipVertical
		{
			[Token(Token = "0x60013E5")]
			[Address(RVA = "0xEFA43C", Offset = "0xEFA43C", VA = "0xEFA43C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013E6")]
			[Address(RVA = "0xEFA444", Offset = "0xEFA444", VA = "0xEFA444")]
			set
			{
			}
		}

		[Token(Token = "0x1700003F")]
		public bool PreserveAspect
		{
			[Token(Token = "0x60013E7")]
			[Address(RVA = "0xEFA470", Offset = "0xEFA470", VA = "0xEFA470")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013E8")]
			[Address(RVA = "0xEFA478", Offset = "0xEFA478", VA = "0xEFA478")]
			set
			{
			}
		}

		[Token(Token = "0x17000040")]
		public bool Interactable
		{
			[Token(Token = "0x60013E9")]
			[Address(RVA = "0xEFA4A4", Offset = "0xEFA4A4", VA = "0xEFA4A4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013EA")]
			[Address(RVA = "0xEFA4AC", Offset = "0xEFA4AC", VA = "0xEFA4AC")]
			set
			{
			}
		}

		[Token(Token = "0x17000041")]
		public bool BlocksRaycasts
		{
			[Token(Token = "0x60013EB")]
			[Address(RVA = "0xEFA4CC", Offset = "0xEFA4CC", VA = "0xEFA4CC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013EC")]
			[Address(RVA = "0xEFA4D4", Offset = "0xEFA4D4", VA = "0xEFA4D4")]
			set
			{
			}
		}

		[Token(Token = "0x17000042")]
		public CurvedUIController Controller
		{
			[Token(Token = "0x60013ED")]
			[Address(RVA = "0xEFA5BC", Offset = "0xEFA5BC", VA = "0xEFA5BC")]
			get
			{
				return default(CurvedUIController);
			}
			[Token(Token = "0x60013EE")]
			[Address(RVA = "0xEFA5C4", Offset = "0xEFA5C4", VA = "0xEFA5C4")]
			set
			{
			}
		}

		[Token(Token = "0x17000043")]
		public bool RaycastMyLayerOnly
		{
			[Token(Token = "0x60013EF")]
			[Address(RVA = "0xEFA5E4", Offset = "0xEFA5E4", VA = "0xEFA5E4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013F0")]
			[Address(RVA = "0xEFA5EC", Offset = "0xEFA5EC", VA = "0xEFA5EC")]
			set
			{
			}
		}

		[Token(Token = "0x60013BF")]
		[Address(RVA = "0xEF912C", Offset = "0xEF912C", VA = "0xEF912C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013C0")]
		[Address(RVA = "0xEF91C0", Offset = "0xEF91C0", VA = "0xEF91C0")]
		private void Start()
		{
		}

		[Token(Token = "0x60013C1")]
		[Address(RVA = "0xEF9340", Offset = "0xEF9340", VA = "0xEF9340")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60013C2")]
		[Address(RVA = "0xEF93F0", Offset = "0xEF93F0", VA = "0xEF93F0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60013C3")]
		[Address(RVA = "0xEF94A0", Offset = "0xEF94A0", VA = "0xEF94A0")]
		private void Update()
		{
		}

		[Token(Token = "0x60013C4")]
		[Address(RVA = "0xEF97EC", Offset = "0xEF97EC", VA = "0xEF97EC")]
		private void SetUIAngle(int newAngle)
		{
		}

		[Token(Token = "0x60013C5")]
		[Address(RVA = "0xEF99D8", Offset = "0xEF99D8", VA = "0xEF99D8")]
		private Vector3 CanvasToCyllinder(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60013C6")]
		[Address(RVA = "0xEF9B38", Offset = "0xEF9B38", VA = "0xEF9B38")]
		private Vector3 CanvasToCyllinderVertical(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60013C7")]
		[Address(RVA = "0xEF9C68", Offset = "0xEF9C68", VA = "0xEF9C68")]
		private Vector3 CanvasToRing(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60013C8")]
		[Address(RVA = "0xEF9DA0", Offset = "0xEF9DA0", VA = "0xEF9DA0")]
		private Vector3 CanvasToSphere(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60013C9")]
		[Address(RVA = "0xEF9F88", Offset = "0xEF9F88", VA = "0xEF9F88")]
		public void AddEffectToChildren()
		{
		}

		[Token(Token = "0x60013D1")]
		[Address(RVA = "0xEFA244", Offset = "0xEFA244", VA = "0xEFA244")]
		public Vector3 VertexPositionToCurvedCanvas(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60013D2")]
		[Address(RVA = "0xEF1118", Offset = "0xEF1118", VA = "0xEF1118")]
		public Vector3 CanvasToCurvedCanvas(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60013D3")]
		[Address(RVA = "0xEF1238", Offset = "0xEF1238", VA = "0xEF1238")]
		public Vector3 CanvasToCurvedCanvasNormal(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60013D4")]
		[Address(RVA = "0xEF1A70", Offset = "0xEF1A70", VA = "0xEF1A70")]
		public bool RaycastToCanvasSpace(Ray ray, out Vector2 o_positionOnCanvas)
		{
			return default(bool);
		}

		[Token(Token = "0x60013D5")]
		[Address(RVA = "0xEF4C68", Offset = "0xEF4C68", VA = "0xEF4C68")]
		public float GetCyllinderRadiusInCanvasSpace()
		{
			return default(float);
		}

		[Token(Token = "0x60013D6")]
		[Address(RVA = "0xEF87BC", Offset = "0xEF87BC", VA = "0xEF87BC")]
		public Vector2 GetTesslationSize(bool UnmodifiedByQuality = false)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60013F1")]
		[Address(RVA = "0xEFA5F8", Offset = "0xEFA5F8", VA = "0xEFA5F8")]
		public void SetAllChildrenDirty(bool recalculateCurveOnly = false)
		{
		}

		[Token(Token = "0x60013F2")]
		[Address(RVA = "0xEFA6C0", Offset = "0xEFA6C0", VA = "0xEFA6C0")]
		public CurvedUISettings()
		{
		}
	}
	[Token(Token = "0x200013C")]
	public class CurvedUIVertexEffect : BaseMeshEffect
	{
		[Token(Token = "0x400047A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private VertexHelper SavedVertexHelper;

		[Token(Token = "0x400047B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<UIVertex> SavedVerteees;

		[Token(Token = "0x400047C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x941314", Offset = "0x941314")]
		public bool DoNotTesselate;

		[Token(Token = "0x400047D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool tesselationRequired;

		[Token(Token = "0x400047E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		private bool curvingRequired;

		[Token(Token = "0x400047F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float angle;

		[Token(Token = "0x4000480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool TransformMisaligned;

		[Token(Token = "0x4000481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Canvas myCanvas;

		[Token(Token = "0x4000482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private CurvedUISettings mySettings;

		[Token(Token = "0x4000483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Matrix4x4 CanvasToWorld;

		[Token(Token = "0x4000484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Matrix4x4 CanvasToLocal;

		[Token(Token = "0x4000485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Matrix4x4 MyToWorld;

		[Token(Token = "0x4000486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Matrix4x4 MyToLocal;

		[Token(Token = "0x4000487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		[HideInInspector]
		private Vector3 savedPos;

		[Token(Token = "0x4000488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		[SerializeField]
		[HideInInspector]
		private Vector3 savedUp;

		[Token(Token = "0x4000489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		[HideInInspector]
		private Vector2 savedRectSize;

		[Token(Token = "0x400048A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[SerializeField]
		[HideInInspector]
		private Color savedColor;

		[Token(Token = "0x400048B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[SerializeField]
		[HideInInspector]
		private Vector2 savedTextUV0;

		[Token(Token = "0x400048C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[SerializeField]
		[HideInInspector]
		private float savedFill;

		[Token(Token = "0x400048D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private List<UIVertex> tesselatedVerts;

		[Token(Token = "0x400048E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private Graphic myGraphic;

		[Token(Token = "0x400048F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private Image myImage;

		[Token(Token = "0x4000490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private Text myText;

		[Token(Token = "0x17000044")]
		public bool TesselationRequired
		{
			[Token(Token = "0x6001402")]
			[Address(RVA = "0xEFCDB4", Offset = "0xEFCDB4", VA = "0xEFCDB4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001403")]
			[Address(RVA = "0xEFCDBC", Offset = "0xEFCDBC", VA = "0xEFCDBC")]
			set
			{
			}
		}

		[Token(Token = "0x17000045")]
		public bool CurvingRequired
		{
			[Token(Token = "0x6001404")]
			[Address(RVA = "0xEFCDC8", Offset = "0xEFCDC8", VA = "0xEFCDC8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001405")]
			[Address(RVA = "0xEFCDD0", Offset = "0xEFCDD0", VA = "0xEFCDD0")]
			set
			{
			}
		}

		[Token(Token = "0x60013F3")]
		[Address(RVA = "0xEFA7AC", Offset = "0xEFA7AC", VA = "0xEFA7AC", Slot = "20")]
		public override void ModifyMesh(VertexHelper vh)
		{
		}

		[Token(Token = "0x60013F4")]
		[Address(RVA = "0xEFB374", Offset = "0xEFB374", VA = "0xEFB374", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60013F5")]
		[Address(RVA = "0xEFB544", Offset = "0xEFB544", VA = "0xEFB544", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x60013F6")]
		[Address(RVA = "0xEFB6C4", Offset = "0xEFB6C4", VA = "0xEFB6C4")]
		private void TesselationRequiredCallback()
		{
		}

		[Token(Token = "0x60013F7")]
		[Address(RVA = "0xEFB6D0", Offset = "0xEFB6D0", VA = "0xEFB6D0")]
		private void FontTextureRebuiltCallback(Font fontie)
		{
		}

		[Token(Token = "0x60013F8")]
		[Address(RVA = "0xEFB774", Offset = "0xEFB774", VA = "0xEFB774")]
		private void Update()
		{
		}

		[Token(Token = "0x60013F9")]
		[Address(RVA = "0xEFACC0", Offset = "0xEFACC0", VA = "0xEFACC0")]
		private void CheckTextFontMaterial()
		{
		}

		[Token(Token = "0x60013FA")]
		[Address(RVA = "0xEFABAC", Offset = "0xEFABAC", VA = "0xEFABAC")]
		private void FindParentSettings()
		{
		}

		[Token(Token = "0x60013FB")]
		[Address(RVA = "0xEFAF64", Offset = "0xEFAF64", VA = "0xEFAF64")]
		private void ModifyVerts(List<UIVertex> verts)
		{
		}

		[Token(Token = "0x60013FC")]
		[Address(RVA = "0xEFBE3C", Offset = "0xEFBE3C", VA = "0xEFBE3C")]
		private UIVertex CurveVertex(UIVertex input, float cylinder_angle, float radius, Vector2 canvasSize)
		{
			return default(UIVertex);
		}

		[Token(Token = "0x60013FD")]
		[Address(RVA = "0xEFBC98", Offset = "0xEFBC98", VA = "0xEFBC98")]
		private void TesselateGeometry(List<UIVertex> verts)
		{
		}

		[Token(Token = "0x60013FE")]
		[Address(RVA = "0xEFC474", Offset = "0xEFC474", VA = "0xEFC474")]
		private void ModifyQuad(List<UIVertex> verts, int vertexIndex, Vector2 requiredSize)
		{
		}

		[Token(Token = "0x60013FF")]
		[Address(RVA = "0xEFC200", Offset = "0xEFC200", VA = "0xEFC200")]
		private void TrisToQuads(List<UIVertex> verts)
		{
		}

		[Token(Token = "0x6001400")]
		[Address(RVA = "0xEFCAB4", Offset = "0xEFCAB4", VA = "0xEFCAB4")]
		private UIVertex TesselateQuad(UIVertex[] quad, float x, float y)
		{
			return default(UIVertex);
		}

		[Token(Token = "0x6001401")]
		[Address(RVA = "0xEFA6B4", Offset = "0xEFA6B4", VA = "0xEFA6B4")]
		public void SetDirty()
		{
		}

		[Token(Token = "0x6001406")]
		[Address(RVA = "0xEFCDDC", Offset = "0xEFCDDC", VA = "0xEFCDDC")]
		public CurvedUIVertexEffect()
		{
		}
	}
	[Token(Token = "0x200013D")]
	public static class CalculationMethods
	{
		[Token(Token = "0x6001407")]
		[Address(RVA = "0xEF3798", Offset = "0xEF3798", VA = "0xEF3798")]
		public static bool AlmostEqual(this Vector3 a, Vector3 b, double accuracy = 0.01)
		{
			return default(bool);
		}

		[Token(Token = "0x6001408")]
		[Address(RVA = "0xEF1770", Offset = "0xEF1770", VA = "0xEF1770")]
		public static float Remap(this float value, float from1, float to1, float from2, float to2)
		{
			return default(float);
		}

		[Token(Token = "0x6001409")]
		[Address(RVA = "0xEF3864", Offset = "0xEF3864", VA = "0xEF3864")]
		public static float Remap(this int value, float from1, float to1, float from2, float to2)
		{
			return default(float);
		}

		[Token(Token = "0x600140A")]
		[Address(RVA = "0xEF3884", Offset = "0xEF3884", VA = "0xEF3884")]
		public static double Remap(this double value, double from1, double to1, double from2, double to2)
		{
			return default(double);
		}

		[Token(Token = "0x600140B")]
		[Address(RVA = "0xEF38A0", Offset = "0xEF38A0", VA = "0xEF38A0")]
		public static float Clamp(this float value, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x600140C")]
		[Address(RVA = "0xEF3928", Offset = "0xEF3928", VA = "0xEF3928")]
		public static float Clamp(this int value, int min, int max)
		{
			return default(float);
		}

		[Token(Token = "0x600140D")]
		[Address(RVA = "0xEF39B0", Offset = "0xEF39B0", VA = "0xEF39B0")]
		public static int ToInt(this float value)
		{
			return default(int);
		}

		[Token(Token = "0x600140E")]
		[Address(RVA = "0xEF3A20", Offset = "0xEF3A20", VA = "0xEF3A20")]
		public static int FloorToInt(this float value)
		{
			return default(int);
		}

		[Token(Token = "0x600140F")]
		[Address(RVA = "0xEF3A90", Offset = "0xEF3A90", VA = "0xEF3A90")]
		public static int CeilToInt(this float value)
		{
			return default(int);
		}

		[Token(Token = "0x6001410")]
		[Address(RVA = "0xEF0BA4", Offset = "0xEF0BA4", VA = "0xEF0BA4")]
		public static Vector3 ModifyX(this Vector3 trans, float newVal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001411")]
		[Address(RVA = "0xEF0BDC", Offset = "0xEF0BDC", VA = "0xEF0BDC")]
		public static Vector3 ModifyY(this Vector3 trans, float newVal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001412")]
		[Address(RVA = "0xEF0B6C", Offset = "0xEF0B6C", VA = "0xEF0B6C")]
		public static Vector3 ModifyZ(this Vector3 trans, float newVal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001413")]
		[Address(RVA = "0xEF3B00", Offset = "0xEF3B00", VA = "0xEF3B00")]
		public static Vector2 ModifyVectorX(this Vector2 trans, float newVal)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001414")]
		[Address(RVA = "0xEF3BA0", Offset = "0xEF3BA0", VA = "0xEF3BA0")]
		public static Vector2 ModifyVectorY(this Vector2 trans, float newVal)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001415")]
		[Address(RVA = "0xEF3C40", Offset = "0xEF3C40", VA = "0xEF3C40")]
		public static void ResetTransform(this Transform trans)
		{
		}
	}
	[Token(Token = "0x200013E")]
	public class CurvedUIViveController : MonoBehaviour
	{
		[Token(Token = "0x6001416")]
		[Address(RVA = "0x11190A4", Offset = "0x11190A4", VA = "0x11190A4")]
		public CurvedUIViveController()
		{
		}
	}
	[Token(Token = "0x200013F")]
	public struct ViveInputArgs
	{
		[Token(Token = "0x4000491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint controllerIndex;

		[Token(Token = "0x4000492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float buttonPressure;

		[Token(Token = "0x4000493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 touchpadAxis;
	}
	[Token(Token = "0x2000140")]
	public delegate void ViveInputEvent(object sender, ViveInputArgs e);
	[Token(Token = "0x2000141")]
	public class CurvedUIViveInputModule : BaseInputModule
	{
		[Token(Token = "0x600141B")]
		[Address(RVA = "0x11190AC", Offset = "0x11190AC", VA = "0x11190AC", Slot = "17")]
		public override void Process()
		{
		}

		[Token(Token = "0x600141C")]
		[Address(RVA = "0x11190B0", Offset = "0x11190B0", VA = "0x11190B0")]
		public CurvedUIViveInputModule()
		{
		}
	}
	[Token(Token = "0x2000142")]
	[ExecuteInEditMode]
	public class CurvedUITMP : MonoBehaviour
	{
		[Token(Token = "0x600141D")]
		[Address(RVA = "0xEFA7A4", Offset = "0xEFA7A4", VA = "0xEFA7A4")]
		public CurvedUITMP()
		{
		}
	}
}
namespace RenderHeads.Media.AVProVideo
{
	[Token(Token = "0x2000143")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x93EBC4", Offset = "0x93EBC4")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x93EBC4", Offset = "0x93EBC4")]
	public class ApplyToMaterial : MonoBehaviour
	{
		[Token(Token = "0x4000494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector2 _offset;

		[Token(Token = "0x4000495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector2 _scale;

		[Token(Token = "0x4000496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material _material;

		[Token(Token = "0x4000497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string _texturePropertyName;

		[Token(Token = "0x4000498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public MediaPlayer _media;

		[Token(Token = "0x4000499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Texture2D _defaultTexture;

		[Token(Token = "0x400049A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Texture _originalTexture;

		[Token(Token = "0x400049B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector2 _originalScale;

		[Token(Token = "0x400049C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector2 _originalOffset;

		[Token(Token = "0x400049D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _propStereo;

		[Token(Token = "0x400049E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int _propAlphaPack;

		[Token(Token = "0x400049F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int _propApplyGamma;

		[Token(Token = "0x40004A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static int _propLayout;

		[Token(Token = "0x40004A1")]
		private const string PropChromaTexName = "_ChromaTex";

		[Token(Token = "0x40004A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static int _propChromaTex;

		[Token(Token = "0x40004A3")]
		private const string PropUseYpCbCrName = "_UseYpCbCr";

		[Token(Token = "0x40004A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static int _propUseYpCbCr;

		[Token(Token = "0x600141E")]
		[Address(RVA = "0x101931C", Offset = "0x101931C", VA = "0x101931C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600141F")]
		[Address(RVA = "0x1019474", Offset = "0x1019474", VA = "0x1019474")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001420")]
		[Address(RVA = "0x1019830", Offset = "0x1019830", VA = "0x1019830")]
		private void ApplyMapping(Texture texture, bool requiresYFlip, int plane = 0)
		{
		}

		[Token(Token = "0x6001421")]
		[Address(RVA = "0x101A110", Offset = "0x101A110", VA = "0x101A110")]
		private void Start()
		{
		}

		[Token(Token = "0x6001422")]
		[Address(RVA = "0x101A250", Offset = "0x101A250", VA = "0x101A250")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001423")]
		[Address(RVA = "0x101A274", Offset = "0x101A274", VA = "0x101A274")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001424")]
		[Address(RVA = "0x101A134", Offset = "0x101A134", VA = "0x101A134")]
		private void SaveProperties()
		{
		}

		[Token(Token = "0x6001425")]
		[Address(RVA = "0x101A278", Offset = "0x101A278", VA = "0x101A278")]
		private void RestoreProperties()
		{
		}

		[Token(Token = "0x6001426")]
		[Address(RVA = "0x101A39C", Offset = "0x101A39C", VA = "0x101A39C")]
		public ApplyToMaterial()
		{
		}
	}
	[Token(Token = "0x2000144")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x93EC28", Offset = "0x93EC28")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x93EC28", Offset = "0x93EC28")]
	public class ApplyToMesh : MonoBehaviour
	{
		[Token(Token = "0x40004A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x94149C", Offset = "0x94149C")]
		[SerializeField]
		private MediaPlayer _media;

		[Token(Token = "0x40004A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9414E8", Offset = "0x9414E8")]
		[SerializeField]
		private Texture2D _defaultTexture;

		[Token(Token = "0x40004A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x941534", Offset = "0x941534")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x941534", Offset = "0x941534")]
		[SerializeField]
		private Renderer _mesh;

		[Token(Token = "0x40004A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private string _texturePropertyName;

		[Token(Token = "0x40004A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Vector2 _offset;

		[Token(Token = "0x40004AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Vector2 _scale;

		[Token(Token = "0x40004AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _isDirty;

		[Token(Token = "0x40004AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Texture _lastTextureApplied;

		[Token(Token = "0x40004AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int _propTexture;

		[Token(Token = "0x40004AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _propStereo;

		[Token(Token = "0x40004AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int _propAlphaPack;

		[Token(Token = "0x40004B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int _propApplyGamma;

		[Token(Token = "0x40004B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static int _propLayout;

		[Token(Token = "0x40004B2")]
		private const string PropChromaTexName = "_ChromaTex";

		[Token(Token = "0x40004B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static int _propChromaTex;

		[Token(Token = "0x40004B4")]
		private const string PropUseYpCbCrName = "_UseYpCbCr";

		[Token(Token = "0x40004B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static int _propUseYpCbCr;

		[Token(Token = "0x17000046")]
		public MediaPlayer Player
		{
			[Token(Token = "0x6001427")]
			[Address(RVA = "0x101A434", Offset = "0x101A434", VA = "0x101A434")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001428")]
			[Address(RVA = "0x101A43C", Offset = "0x101A43C", VA = "0x101A43C")]
			set
			{
			}
		}

		[Token(Token = "0x17000047")]
		public Texture2D DefaultTexture
		{
			[Token(Token = "0x6001429")]
			[Address(RVA = "0x101A4CC", Offset = "0x101A4CC", VA = "0x101A4CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600142A")]
			[Address(RVA = "0x101A4D4", Offset = "0x101A4D4", VA = "0x101A4D4")]
			set
			{
			}
		}

		[Token(Token = "0x17000048")]
		public Renderer MeshRenderer
		{
			[Token(Token = "0x600142B")]
			[Address(RVA = "0x101A564", Offset = "0x101A564", VA = "0x101A564")]
			get
			{
				return null;
			}
			[Token(Token = "0x600142C")]
			[Address(RVA = "0x101A56C", Offset = "0x101A56C", VA = "0x101A56C")]
			set
			{
			}
		}

		[Token(Token = "0x17000049")]
		public string TexturePropertyName
		{
			[Token(Token = "0x600142D")]
			[Address(RVA = "0x101A5FC", Offset = "0x101A5FC", VA = "0x101A5FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600142E")]
			[Address(RVA = "0x101A604", Offset = "0x101A604", VA = "0x101A604")]
			set
			{
			}
		}

		[Token(Token = "0x1700004A")]
		public Vector2 Offset
		{
			[Token(Token = "0x600142F")]
			[Address(RVA = "0x101A650", Offset = "0x101A650", VA = "0x101A650")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6001430")]
			[Address(RVA = "0x101A658", Offset = "0x101A658", VA = "0x101A658")]
			set
			{
			}
		}

		[Token(Token = "0x1700004B")]
		public Vector2 Scale
		{
			[Token(Token = "0x6001431")]
			[Address(RVA = "0x101A6FC", Offset = "0x101A6FC", VA = "0x101A6FC")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6001432")]
			[Address(RVA = "0x101A704", Offset = "0x101A704", VA = "0x101A704")]
			set
			{
			}
		}

		[Token(Token = "0x6001433")]
		[Address(RVA = "0x101A7A8", Offset = "0x101A7A8", VA = "0x101A7A8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001434")]
		[Address(RVA = "0x101A900", Offset = "0x101A900", VA = "0x101A900")]
		public void ForceUpdate()
		{
		}

		[Token(Token = "0x6001435")]
		[Address(RVA = "0x101A90C", Offset = "0x101A90C", VA = "0x101A90C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001436")]
		[Address(RVA = "0x101ADE4", Offset = "0x101ADE4", VA = "0x101ADE4")]
		private void ApplyMapping(Texture texture, bool requiresYFlip, int plane = 0)
		{
		}

		[Token(Token = "0x6001437")]
		[Address(RVA = "0x101B278", Offset = "0x101B278", VA = "0x101B278")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001438")]
		[Address(RVA = "0x101B3D0", Offset = "0x101B3D0", VA = "0x101B3D0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001439")]
		[Address(RVA = "0x101B3E0", Offset = "0x101B3E0", VA = "0x101B3E0")]
		public ApplyToMesh()
		{
		}
	}
	[Token(Token = "0x2000145")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x93EC8C", Offset = "0x93EC8C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x93EC8C", Offset = "0x93EC8C")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x93EC8C", Offset = "0x93EC8C")]
	public class AudioOutput : MonoBehaviour
	{
		[Token(Token = "0x2000378")]
		public enum AudioOutputMode
		{
			[Token(Token = "0x4000EBB")]
			Single,
			[Token(Token = "0x4000EBC")]
			Multiple
		}

		[Token(Token = "0x40004B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioOutputMode _audioOutputMode;

		[Token(Token = "0x40004B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MediaPlayer _mediaPlayer;

		[Token(Token = "0x40004B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AudioSource _audioSource;

		[Token(Token = "0x40004B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public int _channelMask;

		[Token(Token = "0x600143A")]
		[Address(RVA = "0x101B470", Offset = "0x101B470", VA = "0x101B470")]
		private void Awake()
		{
		}

		[Token(Token = "0x600143B")]
		[Address(RVA = "0x101B4C8", Offset = "0x101B4C8", VA = "0x101B4C8")]
		private void Start()
		{
		}

		[Token(Token = "0x600143C")]
		[Address(RVA = "0x101B674", Offset = "0x101B674", VA = "0x101B674")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600143D")]
		[Address(RVA = "0x101B67C", Offset = "0x101B67C", VA = "0x101B67C")]
		private void Update()
		{
		}

		[Token(Token = "0x600143E")]
		[Address(RVA = "0x101B4D0", Offset = "0x101B4D0", VA = "0x101B4D0")]
		public void ChangeMediaPlayer(MediaPlayer newPlayer)
		{
		}

		[Token(Token = "0x600143F")]
		[Address(RVA = "0x101B9B4", Offset = "0x101B9B4", VA = "0x101B9B4")]
		private void OnMediaPlayerEvent(MediaPlayer mp, MediaPlayerEvent.EventType et, ErrorCode errorCode)
		{
		}

		[Token(Token = "0x6001440")]
		[Address(RVA = "0x101B788", Offset = "0x101B788", VA = "0x101B788")]
		private static void ApplyAudioSettings(MediaPlayer player, AudioSource audioSource)
		{
		}

		[Token(Token = "0x6001441")]
		[Address(RVA = "0x101BA1C", Offset = "0x101BA1C", VA = "0x101BA1C")]
		public AudioOutput()
		{
		}
	}
	[Token(Token = "0x2000146")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x93ED3C", Offset = "0x93ED3C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x93ED3C", Offset = "0x93ED3C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x93ED3C", Offset = "0x93ED3C")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x93ED3C", Offset = "0x93ED3C")]
	public class CubemapCube : MonoBehaviour
	{
		[Token(Token = "0x2000379")]
		public enum Layout
		{
			[Token(Token = "0x4000EBE")]
			FacebookTransform32,
			[Token(Token = "0x4000EBF")]
			Facebook360Capture
		}

		[Token(Token = "0x40004BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Mesh _mesh;

		[Token(Token = "0x40004BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected MeshRenderer _renderer;

		[Token(Token = "0x40004BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected Material _material;

		[Token(Token = "0x40004BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MediaPlayer _mediaPlayer;

		[Token(Token = "0x40004BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float expansion_coeff;

		[Token(Token = "0x40004BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private Layout _layout;

		[Token(Token = "0x40004C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Texture _texture;

		[Token(Token = "0x40004C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _verticalFlip;

		[Token(Token = "0x40004C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int _textureWidth;

		[Token(Token = "0x40004C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _textureHeight;

		[Token(Token = "0x40004C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _propApplyGamma;

		[Token(Token = "0x40004C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int _propUseYpCbCr;

		[Token(Token = "0x40004C6")]
		private const string PropChromaTexName = "_ChromaTex";

		[Token(Token = "0x40004C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int _propChromaTex;

		[Token(Token = "0x1700004C")]
		public MediaPlayer Player
		{
			[Token(Token = "0x6001443")]
			[Address(RVA = "0x101CA1C", Offset = "0x101CA1C", VA = "0x101CA1C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001442")]
			[Address(RVA = "0x101CA14", Offset = "0x101CA14", VA = "0x101CA14")]
			set
			{
			}
		}

		[Token(Token = "0x6001444")]
		[Address(RVA = "0x101CA24", Offset = "0x101CA24", VA = "0x101CA24")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001445")]
		[Address(RVA = "0x101CAF8", Offset = "0x101CAF8", VA = "0x101CAF8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001446")]
		[Address(RVA = "0x101DC40", Offset = "0x101DC40", VA = "0x101DC40")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001447")]
		[Address(RVA = "0x101DD94", Offset = "0x101DD94", VA = "0x101DD94")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001448")]
		[Address(RVA = "0x101CC78", Offset = "0x101CC78", VA = "0x101CC78")]
		private void BuildMesh()
		{
		}

		[Token(Token = "0x6001449")]
		[Address(RVA = "0x101E428", Offset = "0x101E428", VA = "0x101E428")]
		private void UpdateMeshUV(int textureWidth, int textureHeight, bool flipY)
		{
		}

		[Token(Token = "0x600144A")]
		[Address(RVA = "0x101EE88", Offset = "0x101EE88", VA = "0x101EE88")]
		public CubemapCube()
		{
		}
	}
	[Token(Token = "0x2000147")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x93EE14", Offset = "0x93EE14")]
	public class DebugOverlay : MonoBehaviour
	{
		[Token(Token = "0x40004C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MediaPlayer _mediaPlayer;

		[Token(Token = "0x40004C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int _guiDepth;

		[Token(Token = "0x40004CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float _displaySize;

		[Token(Token = "0x40004CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int _debugOverlayCount;

		[Token(Token = "0x40004CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private bool _displayControls;

		[Token(Token = "0x40004CD")]
		private const int s_GuiStartWidth = 10;

		[Token(Token = "0x40004CE")]
		private const int s_GuiWidth = 180;

		[Token(Token = "0x40004CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int m_GuiPositionX;

		[Token(Token = "0x1700004D")]
		public bool DisplayControls
		{
			[Token(Token = "0x600144B")]
			[Address(RVA = "0x101EE9C", Offset = "0x101EE9C", VA = "0x101EE9C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600144C")]
			[Address(RVA = "0x101EEA4", Offset = "0x101EEA4", VA = "0x101EEA4")]
			set
			{
			}
		}

		[Token(Token = "0x1700004E")]
		public MediaPlayer CurrentMediaPlayer
		{
			[Token(Token = "0x600144D")]
			[Address(RVA = "0x101EEB0", Offset = "0x101EEB0", VA = "0x101EEB0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600144E")]
			[Address(RVA = "0x101EEB8", Offset = "0x101EEB8", VA = "0x101EEB8")]
			set
			{
			}
		}

		[Token(Token = "0x600144F")]
		[Address(RVA = "0x101EF40", Offset = "0x101EF40", VA = "0x101EF40")]
		private void SetGuiPositionFromVideoIndex(int index)
		{
		}

		[Token(Token = "0x6001450")]
		[Address(RVA = "0x101EFE0", Offset = "0x101EFE0", VA = "0x101EFE0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001451")]
		[Address(RVA = "0x101EFE8", Offset = "0x101EFE8", VA = "0x101EFE8")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001452")]
		[Address(RVA = "0x1020750", Offset = "0x1020750", VA = "0x1020750")]
		public DebugOverlay()
		{
		}
	}
	[Token(Token = "0x2000148")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x93EE50", Offset = "0x93EE50")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x93EE50", Offset = "0x93EE50")]
	[ExecuteInEditMode]
	public class DisplayBackground : MonoBehaviour
	{
		[Token(Token = "0x40004D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IMediaProducer _source;

		[Token(Token = "0x40004D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Texture2D _texture;

		[Token(Token = "0x40004D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material _material;

		[Token(Token = "0x6001453")]
		[Address(RVA = "0x1029424", Offset = "0x1029424", VA = "0x1029424")]
		private void OnRenderObject()
		{
		}

		[Token(Token = "0x6001454")]
		[Address(RVA = "0x10295D8", Offset = "0x10295D8", VA = "0x10295D8")]
		public DisplayBackground()
		{
		}
	}
	[Token(Token = "0x2000149")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x93EEC4", Offset = "0x93EEC4")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x93EEC4", Offset = "0x93EEC4")]
	[ExecuteInEditMode]
	public class DisplayIMGUI : MonoBehaviour
	{
		[Token(Token = "0x40004D3")]
		private const string PropChromaTexName = "_ChromaTex";

		[Token(Token = "0x40004D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MediaPlayer _mediaPlayer;

		[Token(Token = "0x40004D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool _displayInEditor;

		[Token(Token = "0x40004D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public ScaleMode _scaleMode;

		[Token(Token = "0x40004D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color _color;

		[Token(Token = "0x40004D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool _alphaBlend;

		[Token(Token = "0x40004D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[SerializeField]
		private bool _useDepth;

		[Token(Token = "0x40004DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int _depth;

		[Token(Token = "0x40004DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool _fullScreen;

		[Token(Token = "0x40004DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x941674", Offset = "0x941674")]
		public float _x;

		[Token(Token = "0x40004DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x94168C", Offset = "0x94168C")]
		public float _y;

		[Token(Token = "0x40004DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9416A4", Offset = "0x9416A4")]
		public float _width;

		[Token(Token = "0x40004DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9416BC", Offset = "0x9416BC")]
		public float _height;

		[Token(Token = "0x40004E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _propAlphaPack;

		[Token(Token = "0x40004E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int _propVertScale;

		[Token(Token = "0x40004E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int _propApplyGamma;

		[Token(Token = "0x40004E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static int _propChromaTex;

		[Token(Token = "0x40004E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Shader _shaderAlphaPacking;

		[Token(Token = "0x40004E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Material _material;

		[Token(Token = "0x6001455")]
		[Address(RVA = "0x10295E0", Offset = "0x10295E0", VA = "0x10295E0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001456")]
		[Address(RVA = "0x10296B4", Offset = "0x10296B4", VA = "0x10296B4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001457")]
		[Address(RVA = "0x10297F0", Offset = "0x10297F0", VA = "0x10297F0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001458")]
		[Address(RVA = "0x102989C", Offset = "0x102989C", VA = "0x102989C")]
		private Shader GetRequiredShader()
		{
			return null;
		}

		[Token(Token = "0x6001459")]
		[Address(RVA = "0x1029AEC", Offset = "0x1029AEC", VA = "0x1029AEC")]
		private void Update()
		{
		}

		[Token(Token = "0x600145A")]
		[Address(RVA = "0x1029DC8", Offset = "0x1029DC8", VA = "0x1029DC8")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x600145B")]
		[Address(RVA = "0x102A528", Offset = "0x102A528", VA = "0x102A528")]
		public Rect GetRect()
		{
			return default(Rect);
		}

		[Token(Token = "0x600145C")]
		[Address(RVA = "0x102A98C", Offset = "0x102A98C", VA = "0x102A98C")]
		public DisplayIMGUI()
		{
		}
	}
	[Token(Token = "0x200014A")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x93EF38", Offset = "0x93EF38")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x93EF38", Offset = "0x93EF38")]
	public class DisplayUGUI : MaskableGraphic
	{
		[Token(Token = "0x40004E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		public MediaPlayer _mediaPlayer;

		[Token(Token = "0x40004E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		public Rect m_UVRect;

		[Token(Token = "0x40004E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		public bool _setNativeSize;

		[Token(Token = "0x40004E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		public ScaleMode _scaleMode;

		[Token(Token = "0x40004EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		public bool _noDefaultDisplay;

		[Token(Token = "0x40004EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		[SerializeField]
		public bool _displayInEditor;

		[Token(Token = "0x40004EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		public Texture _defaultTexture;

		[Token(Token = "0x40004ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int _lastWidth;

		[Token(Token = "0x40004EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private int _lastHeight;

		[Token(Token = "0x40004EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private bool _flipY;

		[Token(Token = "0x40004F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Texture _lastTexture;

		[Token(Token = "0x40004F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Shader _shaderStereoPacking;

		[Token(Token = "0x40004F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Shader _shaderAlphaPacking;

		[Token(Token = "0x40004F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Shader _shaderAndroidOES;

		[Token(Token = "0x40004F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static int _propAlphaPack;

		[Token(Token = "0x40004F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static int _propVertScale;

		[Token(Token = "0x40004F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static int _propStereo;

		[Token(Token = "0x40004F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private static int _propApplyGamma;

		[Token(Token = "0x40004F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static int _propUseYpCbCr;

		[Token(Token = "0x40004F9")]
		private const string PropChromaTexName = "_ChromaTex";

		[Token(Token = "0x40004FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private static int _propChromaTex;

		[Token(Token = "0x40004FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private bool _userMaterial;

		[Token(Token = "0x40004FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Material _material;

		[Token(Token = "0x40004FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private List<UIVertex> _vertices;

		[Token(Token = "0x40004FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static List<int> QuadIndices;

		[Token(Token = "0x1700004F")]
		public override Texture mainTexture
		{
			[Token(Token = "0x6001461")]
			[Address(RVA = "0x102B2B8", Offset = "0x102B2B8", VA = "0x102B2B8", Slot = "35")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000050")]
		public MediaPlayer CurrentMediaPlayer
		{
			[Token(Token = "0x6001465")]
			[Address(RVA = "0x102BF80", Offset = "0x102BF80", VA = "0x102BF80")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001466")]
			[Address(RVA = "0x1027608", Offset = "0x1027608", VA = "0x1027608")]
			set
			{
			}
		}

		[Token(Token = "0x17000051")]
		public Rect uvRect
		{
			[Token(Token = "0x6001467")]
			[Address(RVA = "0x102BF88", Offset = "0x102BF88", VA = "0x102BF88")]
			get
			{
				return default(Rect);
			}
			[Token(Token = "0x6001468")]
			[Address(RVA = "0x102BF94", Offset = "0x102BF94", VA = "0x102BF94")]
			set
			{
			}
		}

		[Token(Token = "0x600145D")]
		[Address(RVA = "0x102A9DC", Offset = "0x102A9DC", VA = "0x102A9DC", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600145E")]
		[Address(RVA = "0x102AE3C", Offset = "0x102AE3C", VA = "0x102AE3C", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600145F")]
		[Address(RVA = "0x102AEC0", Offset = "0x102AEC0", VA = "0x102AEC0", Slot = "8")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001460")]
		[Address(RVA = "0x102AF8C", Offset = "0x102AF8C", VA = "0x102AF8C")]
		private Shader GetRequiredShader()
		{
			return null;
		}

		[Token(Token = "0x6001462")]
		[Address(RVA = "0x102B464", Offset = "0x102B464", VA = "0x102B464")]
		public bool HasValidTexture()
		{
			return default(bool);
		}

		[Token(Token = "0x6001463")]
		[Address(RVA = "0x102B5CC", Offset = "0x102B5CC", VA = "0x102B5CC")]
		private void UpdateInternalMaterial()
		{
		}

		[Token(Token = "0x6001464")]
		[Address(RVA = "0x102B7BC", Offset = "0x102B7BC", VA = "0x102B7BC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001469")]
		[Address(RVA = "0x102C024", Offset = "0x102C024", VA = "0x102C024", Slot = "45")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x9A6914", Offset = "0x9A6914")]
		public override void SetNativeSize()
		{
		}

		[Token(Token = "0x600146A")]
		[Address(RVA = "0x102C268", Offset = "0x102C268", VA = "0x102C268", Slot = "44")]
		protected override void OnPopulateMesh(VertexHelper vh)
		{
		}

		[Token(Token = "0x600146B")]
		[Address(RVA = "0x102C92C", Offset = "0x102C92C", VA = "0x102C92C", Slot = "42")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9A694C", Offset = "0x9A694C")]
		protected override void OnFillVBO(List<UIVertex> vbo)
		{
		}

		[Token(Token = "0x600146C")]
		[Address(RVA = "0x102C310", Offset = "0x102C310", VA = "0x102C310")]
		private void _OnFillVBO(List<UIVertex> vbo)
		{
		}

		[Token(Token = "0x600146D")]
		[Address(RVA = "0x102C930", Offset = "0x102C930", VA = "0x102C930")]
		private Vector4 GetDrawingDimensions(ScaleMode scaleMode, ref Rect uvRect)
		{
			return default(Vector4);
		}

		[Token(Token = "0x600146E")]
		[Address(RVA = "0x102CEA0", Offset = "0x102CEA0", VA = "0x102CEA0")]
		public DisplayUGUI()
		{
		}
	}
	[Token(Token = "0x200014B")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x93EFAC", Offset = "0x93EFAC")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x93EFAC", Offset = "0x93EFAC")]
	public class MediaPlayer : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200037A")]
		public class Setup
		{
			[Token(Token = "0x4000EC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool persistent;

			[Token(Token = "0x6002C74")]
			[Address(RVA = "0xD2CED0", Offset = "0xD2CED0", VA = "0xD2CED0")]
			public Setup()
			{
			}
		}

		[Token(Token = "0x200037B")]
		public enum FileLocation
		{
			[Token(Token = "0x4000EC2")]
			AbsolutePathOrURL,
			[Token(Token = "0x4000EC3")]
			RelativeToProjectFolder,
			[Token(Token = "0x4000EC4")]
			RelativeToStreamingAssetsFolder,
			[Token(Token = "0x4000EC5")]
			RelativeToDataFolder,
			[Token(Token = "0x4000EC6")]
			RelativeToPeristentDataFolder
		}

		[Serializable]
		[Token(Token = "0x200037C")]
		public class PlatformOptions
		{
			[Token(Token = "0x4000EC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool overridePath;

			[Token(Token = "0x4000EC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public FileLocation pathLocation;

			[Token(Token = "0x4000EC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string path;

			[Token(Token = "0x6002C75")]
			[Address(RVA = "0xD2CE88", Offset = "0xD2CE88", VA = "0xD2CE88", Slot = "4")]
			public virtual bool IsModified()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C76")]
			[Address(RVA = "0xD2CC74", Offset = "0xD2CC74", VA = "0xD2CC74")]
			public PlatformOptions()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200037D")]
		public class OptionsWindows : PlatformOptions
		{
			[Token(Token = "0x4000ECA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Windows.VideoApi videoApi;

			[Token(Token = "0x4000ECB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public bool useHardwareDecoding;

			[Token(Token = "0x4000ECC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
			public bool useUnityAudio;

			[Token(Token = "0x4000ECD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
			public bool forceAudioResample;

			[Token(Token = "0x4000ECE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
			public bool useTextureMips;

			[Token(Token = "0x4000ECF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool hintAlphaChannel;

			[Token(Token = "0x4000ED0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
			public bool useLowLatency;

			[Token(Token = "0x4000ED1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string forceAudioOutputDeviceName;

			[Token(Token = "0x4000ED2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public List<string> preferredFilters;

			[Token(Token = "0x4000ED3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public bool enableAudio360;

			[Token(Token = "0x4000ED4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public Audio360ChannelMode audio360ChannelMode;

			[Token(Token = "0x6002C77")]
			[Address(RVA = "0xD2CD48", Offset = "0xD2CD48", VA = "0xD2CD48", Slot = "4")]
			public override bool IsModified()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C78")]
			[Address(RVA = "0xD2BA3C", Offset = "0xD2BA3C", VA = "0xD2BA3C")]
			public OptionsWindows()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200037E")]
		public class OptionsMacOSX : PlatformOptions
		{
			[Token(Token = "0x4000ED5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[Multiline]
			public string httpHeaderJson;

			[Token(Token = "0x6002C79")]
			[Address(RVA = "0xD2CCCC", Offset = "0xD2CCCC", VA = "0xD2CCCC", Slot = "4")]
			public override bool IsModified()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C7A")]
			[Address(RVA = "0xD2BAD8", Offset = "0xD2BAD8", VA = "0xD2BAD8")]
			public OptionsMacOSX()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200037F")]
		public class OptionsIOS : PlatformOptions
		{
			[Token(Token = "0x4000ED6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool useYpCbCr420Textures;

			[Token(Token = "0x4000ED7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[Multiline]
			public string httpHeaderJson;

			[Token(Token = "0x6002C7B")]
			[Address(RVA = "0xD2CC84", Offset = "0xD2CC84", VA = "0xD2CC84", Slot = "4")]
			public override bool IsModified()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C7C")]
			[Address(RVA = "0xD2BAE8", Offset = "0xD2BAE8", VA = "0xD2BAE8")]
			public OptionsIOS()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000380")]
		public class OptionsTVOS : PlatformOptions
		{
			[Token(Token = "0x4000ED8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool useYpCbCr420Textures;

			[Token(Token = "0x4000ED9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[Multiline]
			public string httpHeaderJson;

			[Token(Token = "0x6002C7D")]
			[Address(RVA = "0xD2CD00", Offset = "0xD2CD00", VA = "0xD2CD00", Slot = "4")]
			public override bool IsModified()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C7E")]
			[Address(RVA = "0xD2BB00", Offset = "0xD2BB00", VA = "0xD2BB00")]
			public OptionsTVOS()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000381")]
		public class OptionsAndroid : PlatformOptions
		{
			[Token(Token = "0x4000EDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Android.VideoApi videoApi;

			[Token(Token = "0x4000EDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public bool useFastOesPath;

			[Token(Token = "0x4000EDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
			public bool showPosterFrame;

			[Token(Token = "0x4000EDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
			public bool enableAudio360;

			[Token(Token = "0x4000EDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Audio360ChannelMode audio360ChannelMode;

			[Token(Token = "0x4000EDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public bool preferSoftwareDecoder;

			[Token(Token = "0x4000EE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[Multiline]
			public string httpHeaderJson;

			[Token(Token = "0x4000EE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x942EF4", Offset = "0x942EF4")]
			public int fileOffset;

			[Token(Token = "0x6002C7F")]
			[Address(RVA = "0xD2CBF8", Offset = "0xD2CBF8", VA = "0xD2CBF8", Slot = "4")]
			public override bool IsModified()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C80")]
			[Address(RVA = "0xD2BB18", Offset = "0xD2BB18", VA = "0xD2BB18")]
			public OptionsAndroid()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000382")]
		public class OptionsWindowsPhone : PlatformOptions
		{
			[Token(Token = "0x4000EE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool useHardwareDecoding;

			[Token(Token = "0x4000EE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
			public bool useUnityAudio;

			[Token(Token = "0x4000EE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
			public bool forceAudioResample;

			[Token(Token = "0x4000EE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
			public bool useTextureMips;

			[Token(Token = "0x4000EE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public bool useLowLatency;

			[Token(Token = "0x6002C81")]
			[Address(RVA = "0xD2CE08", Offset = "0xD2CE08", VA = "0xD2CE08", Slot = "4")]
			public override bool IsModified()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C82")]
			[Address(RVA = "0xD2BB30", Offset = "0xD2BB30", VA = "0xD2BB30")]
			public OptionsWindowsPhone()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000383")]
		public class OptionsWindowsUWP : PlatformOptions
		{
			[Token(Token = "0x4000EE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool useHardwareDecoding;

			[Token(Token = "0x4000EE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
			public bool useUnityAudio;

			[Token(Token = "0x4000EE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
			public bool forceAudioResample;

			[Token(Token = "0x4000EEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
			public bool useTextureMips;

			[Token(Token = "0x4000EEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public bool useLowLatency;

			[Token(Token = "0x6002C83")]
			[Address(RVA = "0xD2CE48", Offset = "0xD2CE48", VA = "0xD2CE48", Slot = "4")]
			public override bool IsModified()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C84")]
			[Address(RVA = "0xD2BB4C", Offset = "0xD2BB4C", VA = "0xD2BB4C")]
			public OptionsWindowsUWP()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000384")]
		public class OptionsWebGL : PlatformOptions
		{
			[Token(Token = "0x6002C85")]
			[Address(RVA = "0xD2BB68", Offset = "0xD2BB68", VA = "0xD2BB68")]
			public OptionsWebGL()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000385")]
		public class OptionsPS4 : PlatformOptions
		{
			[Token(Token = "0x6002C86")]
			[Address(RVA = "0xD2BB78", Offset = "0xD2BB78", VA = "0xD2BB78")]
			public OptionsPS4()
			{
			}
		}

		[Token(Token = "0x2000386")]
		public delegate void ProcessExtractedFrame(Texture2D extractedFrame);

		[Token(Token = "0x2000387")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93FEE0", Offset = "0x93FEE0")]
		private sealed class <LoadSubtitlesCoroutine>d__153 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000EEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000EED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000EEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string url;

			[Token(Token = "0x4000EEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MediaPlayer <>4__this;

			[Token(Token = "0x4000EF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public FileLocation fileLocation;

			[Token(Token = "0x4000EF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string filePath;

			[Token(Token = "0x4000EF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private WWW <www>5__2;

			[Token(Token = "0x170001FB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C8E")]
				[Address(RVA = "0xD2CB88", Offset = "0xD2CB88", VA = "0xD2CB88", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001FC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C90")]
				[Address(RVA = "0xD2CBF0", Offset = "0xD2CBF0", VA = "0xD2CBF0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C8B")]
			[Address(RVA = "0xD26CF4", Offset = "0xD26CF4", VA = "0xD26CF4")]
			[DebuggerHidden]
			public <LoadSubtitlesCoroutine>d__153(int <>1__state)
			{
			}

			[Token(Token = "0x6002C8C")]
			[Address(RVA = "0xD2C92C", Offset = "0xD2C92C", VA = "0xD2C92C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C8D")]
			[Address(RVA = "0xD2C930", Offset = "0xD2C930", VA = "0xD2C930", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C8F")]
			[Address(RVA = "0xD2CB90", Offset = "0xD2CB90", VA = "0xD2CB90", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000388")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93FEF0", Offset = "0x93FEF0")]
		private sealed class <FinalRenderCapture>d__174 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000EF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000EF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000EF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MediaPlayer <>4__this;

			[Token(Token = "0x4000EF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private YieldInstruction <wait>5__2;

			[Token(Token = "0x170001FD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C94")]
				[Address(RVA = "0xD2C8BC", Offset = "0xD2C8BC", VA = "0xD2C8BC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001FE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C96")]
				[Address(RVA = "0xD2C924", Offset = "0xD2C924", VA = "0xD2C924", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C91")]
			[Address(RVA = "0xD29C04", Offset = "0xD29C04", VA = "0xD29C04")]
			[DebuggerHidden]
			public <FinalRenderCapture>d__174(int <>1__state)
			{
			}

			[Token(Token = "0x6002C92")]
			[Address(RVA = "0xD2C780", Offset = "0xD2C780", VA = "0xD2C780", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C93")]
			[Address(RVA = "0xD2C784", Offset = "0xD2C784", VA = "0xD2C784", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C95")]
			[Address(RVA = "0xD2C8C4", Offset = "0xD2C8C4", VA = "0xD2C8C4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000389")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93FF00", Offset = "0x93FF00")]
		private sealed class <ExtractFrameCoroutine>d__193 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000EF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000EF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000EF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Texture2D target;

			[Token(Token = "0x4000EFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MediaPlayer <>4__this;

			[Token(Token = "0x4000EFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeSeconds;

			[Token(Token = "0x4000EFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public bool accurateSeek;

			[Token(Token = "0x4000EFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public ProcessExtractedFrame callback;

			[Token(Token = "0x4000EFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Texture2D <result>5__2;

			[Token(Token = "0x4000EFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <currFc>5__3;

			[Token(Token = "0x4000F00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private int <iterations>5__4;

			[Token(Token = "0x4000F01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private int <maxIterations>5__5;

			[Token(Token = "0x170001FF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C9A")]
				[Address(RVA = "0xD2C710", Offset = "0xD2C710", VA = "0xD2C710", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000200")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C9C")]
				[Address(RVA = "0xD2C778", Offset = "0xD2C778", VA = "0xD2C778", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C97")]
			[Address(RVA = "0xD2B1A4", Offset = "0xD2B1A4", VA = "0xD2B1A4")]
			[DebuggerHidden]
			public <ExtractFrameCoroutine>d__193(int <>1__state)
			{
			}

			[Token(Token = "0x6002C98")]
			[Address(RVA = "0xD2BB8C", Offset = "0xD2BB8C", VA = "0xD2BB8C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C99")]
			[Address(RVA = "0xD2BB90", Offset = "0xD2BB90", VA = "0xD2BB90", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C9B")]
			[Address(RVA = "0xD2C718", Offset = "0xD2C718", VA = "0xD2C718", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40004FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FileLocation m_VideoLocation;

		[Token(Token = "0x4000500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string m_VideoPath;

		[Token(Token = "0x4000501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool m_AutoOpen;

		[Token(Token = "0x4000502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool m_AutoStart;

		[Token(Token = "0x4000503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool m_Loop;

		[Token(Token = "0x4000504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x941744", Offset = "0x941744")]
		public float m_Volume;

		[Token(Token = "0x4000505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x94175C", Offset = "0x94175C")]
		private float m_Balance;

		[Token(Token = "0x4000506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool m_Muted;

		[Token(Token = "0x4000507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x94179C", Offset = "0x94179C")]
		public float m_PlaybackRate;

		[Token(Token = "0x4000508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool m_Resample;

		[Token(Token = "0x4000509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Resampler.ResampleMode m_ResampleMode;

		[Token(Token = "0x400050A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9417DC", Offset = "0x9417DC")]
		public int m_ResampleBufferSize;

		[Token(Token = "0x400050B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Resampler m_Resampler;

		[Token(Token = "0x400050C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private bool m_Persistent;

		[Token(Token = "0x400050D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private VideoMapping m_videoMapping;

		[Token(Token = "0x400050E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public StereoPacking m_StereoPacking;

		[Token(Token = "0x400050F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public AlphaPacking m_AlphaPacking;

		[Token(Token = "0x4000510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool m_DisplayDebugStereoColorTint;

		[Token(Token = "0x4000511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public FilterMode m_FilterMode;

		[Token(Token = "0x4000512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public TextureWrapMode m_WrapMode;

		[Token(Token = "0x4000513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x941814", Offset = "0x941814")]
		public int m_AnisoLevel;

		[Token(Token = "0x4000514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private bool m_LoadSubtitles;

		[Token(Token = "0x4000515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private FileLocation m_SubtitleLocation;

		[Token(Token = "0x4000516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private FileLocation m_queueSubtitleLocation;

		[Token(Token = "0x4000517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private string m_SubtitlePath;

		[Token(Token = "0x4000518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private string m_queueSubtitlePath;

		[Token(Token = "0x4000519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine m_loadSubtitlesRoutine;

		[Token(Token = "0x400051A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Transform m_AudioHeadTransform;

		[Token(Token = "0x400051B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private bool m_AudioFocusEnabled;

		[Token(Token = "0x400051C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Transform m_AudioFocusTransform;

		[Token(Token = "0x400051D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x94188C", Offset = "0x94188C")]
		private float m_AudioFocusWidthDegrees;

		[Token(Token = "0x400051E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9418D4", Offset = "0x9418D4")]
		private float m_AudioFocusOffLevelDB;

		[Token(Token = "0x400051F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private MediaPlayerEvent m_events;

		[Token(Token = "0x4000520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private FileFormat m_forceFileFormat;

		[Token(Token = "0x4000521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private IMediaControl m_Control;

		[Token(Token = "0x4000522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private IMediaProducer m_Texture;

		[Token(Token = "0x4000523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private IMediaInfo m_Info;

		[Token(Token = "0x4000524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private IMediaPlayer m_Player;

		[Token(Token = "0x4000525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private IMediaSubtitles m_Subtitles;

		[Token(Token = "0x4000526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private IDisposable m_Dispose;

		[Token(Token = "0x4000527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private bool m_VideoOpened;

		[Token(Token = "0x4000528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF9")]
		private bool m_AutoStartTriggered;

		[Token(Token = "0x4000529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFA")]
		private bool m_WasPlayingOnPause;

		[Token(Token = "0x400052A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Coroutine _renderingCoroutine;

		[Token(Token = "0x400052B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool s_GlobalStartup;

		[Token(Token = "0x400052C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private bool m_EventFired_ReadyToPlay;

		[Token(Token = "0x400052D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x109")]
		private bool m_EventFired_Started;

		[Token(Token = "0x400052E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10A")]
		private bool m_EventFired_FirstFrameReady;

		[Token(Token = "0x400052F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10B")]
		private bool m_EventFired_FinishedPlaying;

		[Token(Token = "0x4000530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private bool m_EventFired_MetaDataReady;

		[Token(Token = "0x4000531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10D")]
		private bool m_EventState_PlaybackStalled;

		[Token(Token = "0x4000532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10E")]
		private bool m_EventState_PlaybackBuffering;

		[Token(Token = "0x4000533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10F")]
		private bool m_EventState_PlaybackSeeking;

		[Token(Token = "0x4000534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private int m_EventState_PreviousWidth;

		[Token(Token = "0x4000535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private int m_EventState_PreviousHeight;

		[Token(Token = "0x4000536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private int m_previousSubtitleIndex;

		[Token(Token = "0x4000537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Camera m_DummyCamera;

		[Token(Token = "0x4000538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private bool m_FinishedFrameOpenCheck;

		[Token(Token = "0x4000539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private uint m_sourceSampleRate;

		[Token(Token = "0x400053A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[SerializeField]
		private uint m_sourceChannels;

		[Token(Token = "0x400053B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private bool m_manuallySetAudioSourceProperties;

		[Token(Token = "0x400053C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private OptionsWindows _optionsWindows;

		[Token(Token = "0x400053D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private OptionsMacOSX _optionsMacOSX;

		[Token(Token = "0x400053E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private OptionsIOS _optionsIOS;

		[Token(Token = "0x400053F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private OptionsTVOS _optionsTVOS;

		[Token(Token = "0x4000540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private OptionsAndroid _optionsAndroid;

		[Token(Token = "0x4000541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		private OptionsWindowsPhone _optionsWindowsPhone;

		[Token(Token = "0x4000542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		private OptionsWindowsUWP _optionsWindowsUWP;

		[Token(Token = "0x4000543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		private OptionsWebGL _optionsWebGL;

		[Token(Token = "0x4000544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[SerializeField]
		private OptionsPS4 _optionsPS4;

		[Token(Token = "0x17000052")]
		public Resampler FrameResampler
		{
			[Token(Token = "0x6001470")]
			[Address(RVA = "0xD2580C", Offset = "0xD2580C", VA = "0xD2580C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000053")]
		public bool Persistent
		{
			[Token(Token = "0x6001471")]
			[Address(RVA = "0xD25814", Offset = "0xD25814", VA = "0xD25814")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001472")]
			[Address(RVA = "0xD2581C", Offset = "0xD2581C", VA = "0xD2581C")]
			set
			{
			}
		}

		[Token(Token = "0x17000054")]
		public VideoMapping VideoLayoutMapping
		{
			[Token(Token = "0x6001473")]
			[Address(RVA = "0xD25828", Offset = "0xD25828", VA = "0xD25828")]
			get
			{
				return default(VideoMapping);
			}
			[Token(Token = "0x6001474")]
			[Address(RVA = "0xD25830", Offset = "0xD25830", VA = "0xD25830")]
			set
			{
			}
		}

		[Token(Token = "0x17000055")]
		public IMediaInfo Info
		{
			[Token(Token = "0x6001475")]
			[Address(RVA = "0xD25838", Offset = "0xD25838", VA = "0xD25838")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000056")]
		public IMediaControl Control
		{
			[Token(Token = "0x6001476")]
			[Address(RVA = "0xD25840", Offset = "0xD25840", VA = "0xD25840")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000057")]
		public IMediaPlayer Player
		{
			[Token(Token = "0x6001477")]
			[Address(RVA = "0xD25848", Offset = "0xD25848", VA = "0xD25848")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000058")]
		public virtual IMediaProducer TextureProducer
		{
			[Token(Token = "0x6001478")]
			[Address(RVA = "0xD25850", Offset = "0xD25850", VA = "0xD25850", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000059")]
		public virtual IMediaSubtitles Subtitles
		{
			[Token(Token = "0x6001479")]
			[Address(RVA = "0xD25858", Offset = "0xD25858", VA = "0xD25858", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005A")]
		public MediaPlayerEvent Events
		{
			[Token(Token = "0x600147A")]
			[Address(RVA = "0xD25860", Offset = "0xD25860", VA = "0xD25860")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005B")]
		public bool VideoOpened
		{
			[Token(Token = "0x600147B")]
			[Address(RVA = "0xD25918", Offset = "0xD25918", VA = "0xD25918")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700005C")]
		public Transform AudioHeadTransform
		{
			[Token(Token = "0x600147D")]
			[Address(RVA = "0xD25928", Offset = "0xD25928", VA = "0xD25928")]
			get
			{
				return null;
			}
			[Token(Token = "0x600147C")]
			[Address(RVA = "0xD25920", Offset = "0xD25920", VA = "0xD25920")]
			set
			{
			}
		}

		[Token(Token = "0x1700005D")]
		public bool AudioFocusEnabled
		{
			[Token(Token = "0x600147E")]
			[Address(RVA = "0xD25930", Offset = "0xD25930", VA = "0xD25930")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600147F")]
			[Address(RVA = "0xD25938", Offset = "0xD25938", VA = "0xD25938")]
			set
			{
			}
		}

		[Token(Token = "0x1700005E")]
		public float AudioFocusOffLevelDB
		{
			[Token(Token = "0x6001480")]
			[Address(RVA = "0xD25944", Offset = "0xD25944", VA = "0xD25944")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001481")]
			[Address(RVA = "0xD2594C", Offset = "0xD2594C", VA = "0xD2594C")]
			set
			{
			}
		}

		[Token(Token = "0x1700005F")]
		public float AudioFocusWidthDegrees
		{
			[Token(Token = "0x6001482")]
			[Address(RVA = "0xD25954", Offset = "0xD25954", VA = "0xD25954")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001483")]
			[Address(RVA = "0xD2595C", Offset = "0xD2595C", VA = "0xD2595C")]
			set
			{
			}
		}

		[Token(Token = "0x17000060")]
		public Transform AudioFocusTransform
		{
			[Token(Token = "0x6001484")]
			[Address(RVA = "0xD25964", Offset = "0xD25964", VA = "0xD25964")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001485")]
			[Address(RVA = "0xD2596C", Offset = "0xD2596C", VA = "0xD2596C")]
			set
			{
			}
		}

		[Token(Token = "0x17000061")]
		public OptionsWindows PlatformOptionsWindows
		{
			[Token(Token = "0x6001486")]
			[Address(RVA = "0xD25974", Offset = "0xD25974", VA = "0xD25974")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000062")]
		public OptionsMacOSX PlatformOptionsMacOSX
		{
			[Token(Token = "0x6001487")]
			[Address(RVA = "0xD2597C", Offset = "0xD2597C", VA = "0xD2597C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000063")]
		public OptionsIOS PlatformOptionsIOS
		{
			[Token(Token = "0x6001488")]
			[Address(RVA = "0xD25984", Offset = "0xD25984", VA = "0xD25984")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000064")]
		public OptionsTVOS PlatformOptionsTVOS
		{
			[Token(Token = "0x6001489")]
			[Address(RVA = "0xD2598C", Offset = "0xD2598C", VA = "0xD2598C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000065")]
		public OptionsAndroid PlatformOptionsAndroid
		{
			[Token(Token = "0x600148A")]
			[Address(RVA = "0xD25994", Offset = "0xD25994", VA = "0xD25994")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000066")]
		public OptionsWindowsPhone PlatformOptionsWindowsPhone
		{
			[Token(Token = "0x600148B")]
			[Address(RVA = "0xD2599C", Offset = "0xD2599C", VA = "0xD2599C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000067")]
		public OptionsWindowsUWP PlatformOptionsWindowsUWP
		{
			[Token(Token = "0x600148C")]
			[Address(RVA = "0xD259A4", Offset = "0xD259A4", VA = "0xD259A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000068")]
		public OptionsWebGL PlatformOptionsWebGL
		{
			[Token(Token = "0x600148D")]
			[Address(RVA = "0xD259AC", Offset = "0xD259AC", VA = "0xD259AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000069")]
		public OptionsPS4 PlatformOptionsPS4
		{
			[Token(Token = "0x600148E")]
			[Address(RVA = "0xD259B4", Offset = "0xD259B4", VA = "0xD259B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006A")]
		public bool SubtitlesEnabled
		{
			[Token(Token = "0x6001497")]
			[Address(RVA = "0xD26B8C", Offset = "0xD26B8C", VA = "0xD26B8C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700006B")]
		public string SubtitlePath
		{
			[Token(Token = "0x6001498")]
			[Address(RVA = "0xD26B94", Offset = "0xD26B94", VA = "0xD26B94")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006C")]
		public FileLocation SubtitleLocation
		{
			[Token(Token = "0x6001499")]
			[Address(RVA = "0xD26B9C", Offset = "0xD26B9C", VA = "0xD26B9C")]
			get
			{
				return default(FileLocation);
			}
		}

		[Token(Token = "0x600148F")]
		[Address(RVA = "0xD259BC", Offset = "0xD259BC", VA = "0xD259BC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001490")]
		[Address(RVA = "0xD25A4C", Offset = "0xD25A4C", VA = "0xD25A4C")]
		protected void Initialise()
		{
		}

		[Token(Token = "0x6001491")]
		[Address(RVA = "0xD25CF0", Offset = "0xD25CF0", VA = "0xD25CF0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001492")]
		[Address(RVA = "0xD264E4", Offset = "0xD264E4", VA = "0xD264E4")]
		public bool OpenVideoFromFile(FileLocation location, string path, bool autoPlay = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001493")]
		[Address(RVA = "0xD26524", Offset = "0xD26524", VA = "0xD26524")]
		public bool OpenVideoFromBuffer(byte[] buffer, bool autoPlay = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001494")]
		[Address(RVA = "0xD26780", Offset = "0xD26780", VA = "0xD26780")]
		public bool StartOpenChunkedVideoFromBuffer(ulong length, bool autoPlay = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001495")]
		[Address(RVA = "0xD269D4", Offset = "0xD269D4", VA = "0xD269D4")]
		public bool AddChunkToVideoBuffer(byte[] chunk, ulong offset, ulong chunkSize)
		{
			return default(bool);
		}

		[Token(Token = "0x6001496")]
		[Address(RVA = "0xD26AC8", Offset = "0xD26AC8", VA = "0xD26AC8")]
		public bool EndOpenChunkedVideoFromBuffer()
		{
			return default(bool);
		}

		[Token(Token = "0x600149A")]
		[Address(RVA = "0xD2611C", Offset = "0xD2611C", VA = "0xD2611C")]
		public bool EnableSubtitles(FileLocation fileLocation, string filePath)
		{
			return default(bool);
		}

		[Token(Token = "0x600149B")]
		[Address(RVA = "0xD26C60", Offset = "0xD26C60", VA = "0xD26C60")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A6984", Offset = "0x9A6984")]
		private IEnumerator LoadSubtitlesCoroutine(string url, FileLocation fileLocation, string filePath)
		{
			return null;
		}

		[Token(Token = "0x600149C")]
		[Address(RVA = "0xD26D20", Offset = "0xD26D20", VA = "0xD26D20")]
		public void DisableSubtitles()
		{
		}

		[Token(Token = "0x600149D")]
		[Address(RVA = "0xD265A8", Offset = "0xD265A8", VA = "0xD265A8")]
		private bool OpenVideoFromBufferInternal(byte[] buffer)
		{
			return default(bool);
		}

		[Token(Token = "0x600149E")]
		[Address(RVA = "0xD26804", Offset = "0xD26804", VA = "0xD26804")]
		private bool StartOpenVideoFromBufferInternal(ulong length)
		{
			return default(bool);
		}

		[Token(Token = "0x600149F")]
		[Address(RVA = "0xD269D8", Offset = "0xD269D8", VA = "0xD269D8")]
		private bool AddChunkToBufferInternal(byte[] chunk, ulong offset, ulong chunkSize)
		{
			return default(bool);
		}

		[Token(Token = "0x60014A0")]
		[Address(RVA = "0xD26ACC", Offset = "0xD26ACC", VA = "0xD26ACC")]
		private bool EndOpenVideoFromBufferInternal()
		{
			return default(bool);
		}

		[Token(Token = "0x60014A1")]
		[Address(RVA = "0xD25D74", Offset = "0xD25D74", VA = "0xD25D74")]
		private bool OpenVideoFromFile()
		{
			return default(bool);
		}

		[Token(Token = "0x60014A2")]
		[Address(RVA = "0xD26F70", Offset = "0xD26F70", VA = "0xD26F70")]
		private void SetPlaybackOptions()
		{
		}

		[Token(Token = "0x60014A3")]
		[Address(RVA = "0xD26E2C", Offset = "0xD26E2C", VA = "0xD26E2C")]
		public void CloseVideo()
		{
		}

		[Token(Token = "0x60014A4")]
		[Address(RVA = "0xD27364", Offset = "0xD27364", VA = "0xD27364")]
		public void Play()
		{
		}

		[Token(Token = "0x60014A5")]
		[Address(RVA = "0xD274A8", Offset = "0xD274A8", VA = "0xD274A8")]
		public void Pause()
		{
		}

		[Token(Token = "0x60014A6")]
		[Address(RVA = "0xD275E4", Offset = "0xD275E4", VA = "0xD275E4")]
		public void Stop()
		{
		}

		[Token(Token = "0x60014A7")]
		[Address(RVA = "0xD276A0", Offset = "0xD276A0", VA = "0xD276A0")]
		public void Rewind(bool pause)
		{
		}

		[Token(Token = "0x60014A8")]
		[Address(RVA = "0xD27784", Offset = "0xD27784", VA = "0xD27784")]
		private void Update()
		{
		}

		[Token(Token = "0x60014A9")]
		[Address(RVA = "0xD28564", Offset = "0xD28564", VA = "0xD28564")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60014AA")]
		[Address(RVA = "0xD2973C", Offset = "0xD2973C", VA = "0xD2973C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60014AB")]
		[Address(RVA = "0xD2980C", Offset = "0xD2980C", VA = "0xD2980C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60014AC")]
		[Address(RVA = "0xD298EC", Offset = "0xD298EC", VA = "0xD298EC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60014AD")]
		[Address(RVA = "0xD29A80", Offset = "0xD29A80", VA = "0xD29A80")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x60014AE")]
		[Address(RVA = "0xD264A4", Offset = "0xD264A4", VA = "0xD264A4")]
		private void StartRenderCoroutine()
		{
		}

		[Token(Token = "0x60014AF")]
		[Address(RVA = "0xD27334", Offset = "0xD27334", VA = "0xD27334")]
		private void StopRenderCoroutine()
		{
		}

		[Token(Token = "0x60014B0")]
		[Address(RVA = "0xD29B94", Offset = "0xD29B94", VA = "0xD29B94")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A69E8", Offset = "0x9A69E8")]
		private IEnumerator FinalRenderCapture()
		{
			return null;
		}

		[Token(Token = "0x60014B1")]
		[Address(RVA = "0xD26BA4", Offset = "0xD26BA4", VA = "0xD26BA4")]
		public static Platform GetPlatform()
		{
			return default(Platform);
		}

		[Token(Token = "0x60014B2")]
		[Address(RVA = "0xD29C30", Offset = "0xD29C30", VA = "0xD29C30")]
		public PlatformOptions GetCurrentPlatformOptions()
		{
			return null;
		}

		[Token(Token = "0x60014B3")]
		[Address(RVA = "0xD29C38", Offset = "0xD29C38", VA = "0xD29C38")]
		public static string GetPath(FileLocation location)
		{
			return null;
		}

		[Token(Token = "0x60014B4")]
		[Address(RVA = "0xD29D50", Offset = "0xD29D50", VA = "0xD29D50")]
		public static string GetFilePath(string path, FileLocation location)
		{
			return null;
		}

		[Token(Token = "0x60014B5")]
		[Address(RVA = "0xD272B4", Offset = "0xD272B4", VA = "0xD272B4")]
		private long GetPlatformFileOffset()
		{
			return default(long);
		}

		[Token(Token = "0x60014B6")]
		[Address(RVA = "0xD272D0", Offset = "0xD272D0", VA = "0xD272D0")]
		private string GetPlatformHttpHeaderJson()
		{
			return null;
		}

		[Token(Token = "0x60014B7")]
		[Address(RVA = "0xD26BAC", Offset = "0xD26BAC", VA = "0xD26BAC")]
		private string GetPlatformFilePath(Platform platform, ref string filePath, ref FileLocation fileLocation)
		{
			return null;
		}

		[Token(Token = "0x60014B8")]
		[Address(RVA = "0xD29E44", Offset = "0xD29E44", VA = "0xD29E44", Slot = "6")]
		public virtual BaseMediaPlayer CreatePlatformMediaPlayer()
		{
			return null;
		}

		[Token(Token = "0x60014B9")]
		[Address(RVA = "0xD2A0D4", Offset = "0xD2A0D4", VA = "0xD2A0D4")]
		private bool ForceWaitForNewFrame(int lastFrameCount, float timeoutMs)
		{
			return default(bool);
		}

		[Token(Token = "0x60014BA")]
		[Address(RVA = "0xD27B78", Offset = "0xD27B78", VA = "0xD27B78")]
		private void UpdateAudioFocus()
		{
		}

		[Token(Token = "0x60014BB")]
		[Address(RVA = "0xD279CC", Offset = "0xD279CC", VA = "0xD279CC")]
		private void UpdateAudioHeadTransform()
		{
		}

		[Token(Token = "0x60014BC")]
		[Address(RVA = "0xD27DC8", Offset = "0xD27DC8", VA = "0xD27DC8")]
		private void UpdateErrors()
		{
		}

		[Token(Token = "0x60014BD")]
		[Address(RVA = "0xD27F18", Offset = "0xD27F18", VA = "0xD27F18")]
		private void UpdateEvents()
		{
		}

		[Token(Token = "0x60014BE")]
		[Address(RVA = "0xD2A344", Offset = "0xD2A344", VA = "0xD2A344")]
		private bool FireEventIfPossible(MediaPlayerEvent.EventType eventType, bool hasFired)
		{
			return default(bool);
		}

		[Token(Token = "0x60014BF")]
		[Address(RVA = "0xD2A3D8", Offset = "0xD2A3D8", VA = "0xD2A3D8")]
		private bool CanFireEvent(MediaPlayerEvent.EventType et, bool hasFired)
		{
			return default(bool);
		}

		[Token(Token = "0x60014C0")]
		[Address(RVA = "0xD2AC18", Offset = "0xD2AC18", VA = "0xD2AC18")]
		private void OnApplicationFocus(bool focusStatus)
		{
		}

		[Token(Token = "0x60014C1")]
		[Address(RVA = "0xD2AD0C", Offset = "0xD2AD0C", VA = "0xD2AD0C")]
		private void OnApplicationPause(bool pauseStatus)
		{
		}

		[Token(Token = "0x60014C2")]
		[Address(RVA = "0xD2AE88", Offset = "0xD2AE88", VA = "0xD2AE88")]
		private static Camera GetDummyCamera()
		{
			return null;
		}

		[Token(Token = "0x60014C3")]
		[Address(RVA = "0xD2B0FC", Offset = "0xD2B0FC", VA = "0xD2B0FC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A6A4C", Offset = "0x9A6A4C")]
		private IEnumerator ExtractFrameCoroutine(Texture2D target, ProcessExtractedFrame callback, float timeSeconds = -1f, bool accurateSeek = true, int timeoutMs = 1000)
		{
			return null;
		}

		[Token(Token = "0x60014C4")]
		[Address(RVA = "0xD2B1D0", Offset = "0xD2B1D0", VA = "0xD2B1D0")]
		public void ExtractFrameAsync(Texture2D target, ProcessExtractedFrame callback, float timeSeconds = -1f, bool accurateSeek = true, int timeoutMs = 1000)
		{
		}

		[Token(Token = "0x60014C5")]
		[Address(RVA = "0xD2B200", Offset = "0xD2B200", VA = "0xD2B200")]
		public Texture2D ExtractFrame(Texture2D target, float timeSeconds = -1f, bool accurateSeek = true, int timeoutMs = 1000)
		{
			return null;
		}

		[Token(Token = "0x60014C6")]
		[Address(RVA = "0xD2B3F0", Offset = "0xD2B3F0", VA = "0xD2B3F0")]
		private Texture ExtractFrame(float timeSeconds = -1f, bool accurateSeek = true, int timeoutMs = 1000)
		{
			return null;
		}

		[Token(Token = "0x60014C7")]
		[Address(RVA = "0xD2B850", Offset = "0xD2B850", VA = "0xD2B850")]
		public MediaPlayer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200014C")]
	public class StreamParserEvent : UnityEvent<StreamParser, StreamParserEvent.EventType>
	{
		[Token(Token = "0x200038A")]
		public enum EventType
		{
			[Token(Token = "0x4000F03")]
			Success,
			[Token(Token = "0x4000F04")]
			Failed
		}

		[Token(Token = "0x60014C9")]
		[Address(RVA = "0xD2EF18", Offset = "0xD2EF18", VA = "0xD2EF18")]
		public StreamParserEvent()
		{
		}
	}
	[Token(Token = "0x200014D")]
	public class StreamParser : MonoBehaviour
	{
		[Token(Token = "0x200038B")]
		public enum StreamType
		{
			[Token(Token = "0x4000F06")]
			HLS
		}

		[Token(Token = "0x4000545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string _url;

		[Token(Token = "0x4000546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StreamType _streamType;

		[Token(Token = "0x4000547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool _autoLoad;

		[Token(Token = "0x4000548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Stream _parser;

		[Token(Token = "0x4000549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _loaded;

		[Token(Token = "0x400054A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<Stream> _substreams;

		[Token(Token = "0x400054B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Stream.Chunk> _chunks;

		[Token(Token = "0x400054C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private StreamParserEvent _events;

		[Token(Token = "0x1700006D")]
		public StreamParserEvent Events
		{
			[Token(Token = "0x60014CA")]
			[Address(RVA = "0xD2EEB0", Offset = "0xD2EEB0", VA = "0xD2EEB0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006E")]
		public bool Loaded
		{
			[Token(Token = "0x60014CC")]
			[Address(RVA = "0xD2F1DC", Offset = "0xD2F1DC", VA = "0xD2F1DC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700006F")]
		public Stream Root
		{
			[Token(Token = "0x60014CD")]
			[Address(RVA = "0xD2F1E4", Offset = "0xD2F1E4", VA = "0xD2F1E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000070")]
		public List<Stream> SubStreams
		{
			[Token(Token = "0x60014CE")]
			[Address(RVA = "0xD2F1FC", Offset = "0xD2F1FC", VA = "0xD2F1FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000071")]
		public List<Stream.Chunk> Chunks
		{
			[Token(Token = "0x60014CF")]
			[Address(RVA = "0xD2F214", Offset = "0xD2F214", VA = "0xD2F214")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014CB")]
		[Address(RVA = "0xD2EF68", Offset = "0xD2EF68", VA = "0xD2EF68")]
		private void LoadFile()
		{
		}

		[Token(Token = "0x60014D0")]
		[Address(RVA = "0xD2F22C", Offset = "0xD2F22C", VA = "0xD2F22C")]
		public void ParseStream()
		{
		}

		[Token(Token = "0x60014D1")]
		[Address(RVA = "0xD2F2C8", Offset = "0xD2F2C8", VA = "0xD2F2C8")]
		private void Start()
		{
		}

		[Token(Token = "0x60014D2")]
		[Address(RVA = "0xD2F2D8", Offset = "0xD2F2D8", VA = "0xD2F2D8")]
		public StreamParser()
		{
		}
	}
	[Token(Token = "0x200014E")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x93F010", Offset = "0x93F010")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x93F010", Offset = "0x93F010")]
	public class SubtitlesUGUI : MonoBehaviour
	{
		[Token(Token = "0x400054D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MediaPlayer _mediaPlayer;

		[Token(Token = "0x400054E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text _text;

		[Token(Token = "0x60014D3")]
		[Address(RVA = "0xD2F348", Offset = "0xD2F348", VA = "0xD2F348")]
		private void Start()
		{
		}

		[Token(Token = "0x60014D4")]
		[Address(RVA = "0xD2F4EC", Offset = "0xD2F4EC", VA = "0xD2F4EC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60014D5")]
		[Address(RVA = "0xD2F350", Offset = "0xD2F350", VA = "0xD2F350")]
		public void ChangeMediaPlayer(MediaPlayer newPlayer)
		{
		}

		[Token(Token = "0x60014D6")]
		[Address(RVA = "0xD2F4F4", Offset = "0xD2F4F4", VA = "0xD2F4F4")]
		private void OnMediaPlayerEvent(MediaPlayer mp, MediaPlayerEvent.EventType et, ErrorCode errorCode)
		{
		}

		[Token(Token = "0x60014D7")]
		[Address(RVA = "0xD2F698", Offset = "0xD2F698", VA = "0xD2F698")]
		public SubtitlesUGUI()
		{
		}
	}
	[Token(Token = "0x200014F")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x93F074", Offset = "0x93F074")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x93F074", Offset = "0x93F074")]
	public class UpdateStereoMaterial : MonoBehaviour
	{
		[Token(Token = "0x400054F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x941A14", Offset = "0x941A14")]
		public Camera _camera;

		[Token(Token = "0x4000550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x941A4C", Offset = "0x941A4C")]
		public MeshRenderer _renderer;

		[Token(Token = "0x4000551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Graphic _uGuiComponent;

		[Token(Token = "0x4000552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material _material;

		[Token(Token = "0x4000553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private StereoEye _forceEyeMode;

		[Token(Token = "0x4000554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _cameraPositionId;

		[Token(Token = "0x4000555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int _viewMatrixId;

		[Token(Token = "0x4000556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private StereoEye _setForceEyeMode;

		[Token(Token = "0x17000072")]
		public StereoEye ForceEyeMode
		{
			[Token(Token = "0x60014D8")]
			[Address(RVA = "0xD2F6A0", Offset = "0xD2F6A0", VA = "0xD2F6A0")]
			get
			{
				return default(StereoEye);
			}
			[Token(Token = "0x60014D9")]
			[Address(RVA = "0xD2F6A8", Offset = "0xD2F6A8", VA = "0xD2F6A8")]
			set
			{
			}
		}

		[Token(Token = "0x60014DA")]
		[Address(RVA = "0xD2F6B0", Offset = "0xD2F6B0", VA = "0xD2F6B0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014DB")]
		[Address(RVA = "0xD2F7CC", Offset = "0xD2F7CC", VA = "0xD2F7CC")]
		private void SetupMaterial(Material m, Camera camera)
		{
		}

		[Token(Token = "0x60014DC")]
		[Address(RVA = "0xD2F950", Offset = "0xD2F950", VA = "0xD2F950")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60014DD")]
		[Address(RVA = "0xD2FB84", Offset = "0xD2FB84", VA = "0xD2FB84")]
		public UpdateStereoMaterial()
		{
		}
	}
	[Token(Token = "0x2000150")]
	public class AndroidMediaPlayer : BaseMediaPlayer
	{
		[Token(Token = "0x200038C")]
		private struct Native
		{
			[Token(Token = "0x20004B8")]
			public enum AVPPluginEvent
			{
				[Token(Token = "0x40012E4")]
				Nop,
				[Token(Token = "0x40012E5")]
				PlayerSetup,
				[Token(Token = "0x40012E6")]
				PlayerUpdate,
				[Token(Token = "0x40012E7")]
				PlayerDestroy,
				[Token(Token = "0x40012E8")]
				ExtractFrame
			}

			[PreserveSig]
			[Token(Token = "0x6002C9D")]
			[Address(RVA = "0x10149BC", Offset = "0x10149BC", VA = "0x10149BC")]
			public static extern IntPtr GetRenderEventFunc();

			[PreserveSig]
			[Token(Token = "0x6002C9E")]
			[Address(RVA = "0x1018AF0", Offset = "0x1018AF0", VA = "0x1018AF0")]
			public static extern int _GetWidth(int iPlayerIndex);

			[PreserveSig]
			[Token(Token = "0x6002C9F")]
			[Address(RVA = "0x1018B70", Offset = "0x1018B70", VA = "0x1018B70")]
			public static extern int _GetHeight(int iPlayerIndex);

			[PreserveSig]
			[Token(Token = "0x6002CA0")]
			[Address(RVA = "0x1018BEC", Offset = "0x1018BEC", VA = "0x1018BEC")]
			public static extern int _GetTextureHandle(int iPlayerIndex);

			[PreserveSig]
			[Token(Token = "0x6002CA1")]
			[Address(RVA = "0x101907C", Offset = "0x101907C", VA = "0x101907C")]
			public static extern long _GetDuration(int iPlayerIndex);

			[PreserveSig]
			[Token(Token = "0x6002CA2")]
			[Address(RVA = "0x1018FFC", Offset = "0x1018FFC", VA = "0x1018FFC")]
			public static extern int _GetLastErrorCode(int iPlayerIndex);

			[PreserveSig]
			[Token(Token = "0x6002CA3")]
			[Address(RVA = "0x101775C", Offset = "0x101775C", VA = "0x101775C")]
			public static extern int _GetFrameCount(int iPlayerIndex);

			[PreserveSig]
			[Token(Token = "0x6002CA4")]
			[Address(RVA = "0x1017158", Offset = "0x1017158", VA = "0x1017158")]
			public static extern float _GetVideoDisplayRate(int iPlayerIndex);

			[PreserveSig]
			[Token(Token = "0x6002CA5")]
			[Address(RVA = "0x1015BE8", Offset = "0x1015BE8", VA = "0x1015BE8")]
			public static extern bool _CanPlay(int iPlayerIndex);
		}

		[Token(Token = "0x4000557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static AndroidJavaObject s_ActivityContext;

		[Token(Token = "0x4000558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		protected static AndroidJavaObject s_Interface;

		[Token(Token = "0x4000559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected static bool s_bInitialised;

		[Token(Token = "0x400055A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static string s_Version;

		[Token(Token = "0x400055B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static IntPtr _nativeFunction_RenderEvent;

		[Token(Token = "0x400055C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected AndroidJavaObject m_Video;

		[Token(Token = "0x400055D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Texture2D m_Texture;

		[Token(Token = "0x400055E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_TextureHandle;

		[Token(Token = "0x400055F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool m_UseFastOesPath;

		[Token(Token = "0x4000560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float m_DurationMs;

		[Token(Token = "0x4000561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_Width;

		[Token(Token = "0x4000562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int m_Height;

		[Token(Token = "0x4000563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		protected int m_iPlayerIndex;

		[Token(Token = "0x4000564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Android.VideoApi m_API;

		[Token(Token = "0x4000565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_HeadRotationEnabled;

		[Token(Token = "0x4000566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		private bool m_FocusEnabled;

		[Token(Token = "0x4000567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int _textureQuality;

		[Token(Token = "0x60014DE")]
		[Address(RVA = "0x10145E8", Offset = "0x10145E8", VA = "0x10145E8")]
		public static bool InitialisePlatform()
		{
			return default(bool);
		}

		[Token(Token = "0x60014DF")]
		[Address(RVA = "0x1014A30", Offset = "0x1014A30", VA = "0x1014A30")]
		private static void IssuePluginEvent(Native.AVPPluginEvent type, int param)
		{
		}

		[Token(Token = "0x60014E0")]
		[Address(RVA = "0x1014AD0", Offset = "0x1014AD0", VA = "0x1014AD0")]
		public AndroidMediaPlayer(bool useFastOesPath, bool showPosterFrame, Android.VideoApi api, bool enable360Audio, Audio360ChannelMode channelMode, bool preferSoftware)
		{
		}

		[Token(Token = "0x60014E1")]
		[Address(RVA = "0x1015010", Offset = "0x1015010", VA = "0x1015010")]
		public void SetOptions(bool useFastOesPath, bool showPosterFrame)
		{
		}

		[Token(Token = "0x60014E2")]
		[Address(RVA = "0x1015150", Offset = "0x1015150", VA = "0x1015150", Slot = "159")]
		public override long GetEstimatedTotalBandwidthUsed()
		{
			return default(long);
		}

		[Token(Token = "0x60014E3")]
		[Address(RVA = "0x1015290", Offset = "0x1015290", VA = "0x1015290", Slot = "90")]
		public override string GetVersion()
		{
			return null;
		}

		[Token(Token = "0x60014E4")]
		[Address(RVA = "0x10152F8", Offset = "0x10152F8", VA = "0x10152F8", Slot = "91")]
		public override bool OpenVideoFromFile(string path, long offset, string httpHeaderJson, uint sourceSamplerate = 0u, uint sourceChannels = 0u, int forceFileFormat = 0)
		{
			return default(bool);
		}

		[Token(Token = "0x60014E5")]
		[Address(RVA = "0x10154A4", Offset = "0x10154A4", VA = "0x10154A4", Slot = "110")]
		public override TimeRange[] GetSeekableTimeRanges()
		{
			return null;
		}

		[Token(Token = "0x60014E6")]
		[Address(RVA = "0x1015604", Offset = "0x1015604", VA = "0x1015604", Slot = "96")]
		public override void CloseVideo()
		{
		}

		[Token(Token = "0x60014E7")]
		[Address(RVA = "0x101576C", Offset = "0x101576C", VA = "0x101576C", Slot = "97")]
		public override void SetLooping(bool bLooping)
		{
		}

		[Token(Token = "0x60014E8")]
		[Address(RVA = "0x1015858", Offset = "0x1015858", VA = "0x1015858", Slot = "98")]
		public override bool IsLooping()
		{
			return default(bool);
		}

		[Token(Token = "0x60014E9")]
		[Address(RVA = "0x1015964", Offset = "0x1015964", VA = "0x1015964", Slot = "119")]
		public override bool HasVideo()
		{
			return default(bool);
		}

		[Token(Token = "0x60014EA")]
		[Address(RVA = "0x1015A70", Offset = "0x1015A70", VA = "0x1015A70", Slot = "118")]
		public override bool HasAudio()
		{
			return default(bool);
		}

		[Token(Token = "0x60014EB")]
		[Address(RVA = "0x1015B7C", Offset = "0x1015B7C", VA = "0x1015B7C", Slot = "99")]
		public override bool HasMetaData()
		{
			return default(bool);
		}

		[Token(Token = "0x60014EC")]
		[Address(RVA = "0x1015BE0", Offset = "0x1015BE0", VA = "0x1015BE0", Slot = "100")]
		public override bool CanPlay()
		{
			return default(bool);
		}

		[Token(Token = "0x60014ED")]
		[Address(RVA = "0x1015C70", Offset = "0x1015C70", VA = "0x1015C70", Slot = "101")]
		public override void Play()
		{
		}

		[Token(Token = "0x60014EE")]
		[Address(RVA = "0x1015D70", Offset = "0x1015D70", VA = "0x1015D70", Slot = "102")]
		public override void Pause()
		{
		}

		[Token(Token = "0x60014EF")]
		[Address(RVA = "0x1015E70", Offset = "0x1015E70", VA = "0x1015E70", Slot = "103")]
		public override void Stop()
		{
		}

		[Token(Token = "0x60014F0")]
		[Address(RVA = "0x1015F70", Offset = "0x1015F70", VA = "0x1015F70", Slot = "104")]
		public override void Rewind()
		{
		}

		[Token(Token = "0x60014F1")]
		[Address(RVA = "0x1015F84", Offset = "0x1015F84", VA = "0x1015F84", Slot = "105")]
		public override void Seek(float timeMs)
		{
		}

		[Token(Token = "0x60014F2")]
		[Address(RVA = "0x10160B0", Offset = "0x10160B0", VA = "0x10160B0", Slot = "106")]
		public override void SeekFast(float timeMs)
		{
		}

		[Token(Token = "0x60014F3")]
		[Address(RVA = "0x10161DC", Offset = "0x10161DC", VA = "0x10161DC", Slot = "108")]
		public override float GetCurrentTimeMs()
		{
			return default(float);
		}

		[Token(Token = "0x60014F4")]
		[Address(RVA = "0x10162E4", Offset = "0x10162E4", VA = "0x10162E4", Slot = "112")]
		public override void SetPlaybackRate(float rate)
		{
		}

		[Token(Token = "0x60014F5")]
		[Address(RVA = "0x10163DC", Offset = "0x10163DC", VA = "0x10163DC", Slot = "111")]
		public override float GetPlaybackRate()
		{
			return default(float);
		}

		[Token(Token = "0x60014F6")]
		[Address(RVA = "0x10164E8", Offset = "0x10164E8", VA = "0x10164E8", Slot = "145")]
		public override void SetAudioHeadRotation(Quaternion q)
		{
		}

		[Token(Token = "0x60014F7")]
		[Address(RVA = "0x101673C", Offset = "0x101673C", VA = "0x101673C", Slot = "146")]
		public override void ResetAudioHeadRotation()
		{
		}

		[Token(Token = "0x60014F8")]
		[Address(RVA = "0x1016834", Offset = "0x1016834", VA = "0x1016834", Slot = "148")]
		public override void SetAudioFocusEnabled(bool enabled)
		{
		}

		[Token(Token = "0x60014F9")]
		[Address(RVA = "0x1016940", Offset = "0x1016940", VA = "0x1016940", Slot = "149")]
		public override void SetAudioFocusProperties(float offFocusLevel, float widthDegrees)
		{
		}

		[Token(Token = "0x60014FA")]
		[Address(RVA = "0x1016A80", Offset = "0x1016A80", VA = "0x1016A80", Slot = "150")]
		public override void SetAudioFocusRotation(Quaternion q)
		{
		}

		[Token(Token = "0x60014FB")]
		[Address(RVA = "0x1016C48", Offset = "0x1016C48", VA = "0x1016C48", Slot = "151")]
		public override void ResetAudioFocus()
		{
		}

		[Token(Token = "0x60014FC")]
		[Address(RVA = "0x1016F1C", Offset = "0x1016F1C", VA = "0x1016F1C", Slot = "113")]
		public override float GetDurationMs()
		{
			return default(float);
		}

		[Token(Token = "0x60014FD")]
		[Address(RVA = "0x1016F24", Offset = "0x1016F24", VA = "0x1016F24", Slot = "114")]
		public override int GetVideoWidth()
		{
			return default(int);
		}

		[Token(Token = "0x60014FE")]
		[Address(RVA = "0x1016F2C", Offset = "0x1016F2C", VA = "0x1016F2C", Slot = "115")]
		public override int GetVideoHeight()
		{
			return default(int);
		}

		[Token(Token = "0x60014FF")]
		[Address(RVA = "0x1016F34", Offset = "0x1016F34", VA = "0x1016F34", Slot = "158")]
		public override float GetVideoFrameRate()
		{
			return default(float);
		}

		[Token(Token = "0x6001500")]
		[Address(RVA = "0x1017040", Offset = "0x1017040", VA = "0x1017040", Slot = "160")]
		public override float GetBufferingProgress()
		{
			return default(float);
		}

		[Token(Token = "0x6001501")]
		[Address(RVA = "0x1017150", Offset = "0x1017150", VA = "0x1017150", Slot = "117")]
		public override float GetVideoDisplayRate()
		{
			return default(float);
		}

		[Token(Token = "0x6001502")]
		[Address(RVA = "0x10171D8", Offset = "0x10171D8", VA = "0x10171D8", Slot = "120")]
		public override bool IsSeeking()
		{
			return default(bool);
		}

		[Token(Token = "0x6001503")]
		[Address(RVA = "0x10172E4", Offset = "0x10172E4", VA = "0x10172E4", Slot = "121")]
		public override bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6001504")]
		[Address(RVA = "0x10173F0", Offset = "0x10173F0", VA = "0x10173F0", Slot = "122")]
		public override bool IsPaused()
		{
			return default(bool);
		}

		[Token(Token = "0x6001505")]
		[Address(RVA = "0x10174FC", Offset = "0x10174FC", VA = "0x10174FC", Slot = "123")]
		public override bool IsFinished()
		{
			return default(bool);
		}

		[Token(Token = "0x6001506")]
		[Address(RVA = "0x1017608", Offset = "0x1017608", VA = "0x1017608", Slot = "124")]
		public override bool IsBuffering()
		{
			return default(bool);
		}

		[Token(Token = "0x6001507")]
		[Address(RVA = "0x1017714", Offset = "0x1017714", VA = "0x1017714", Slot = "127")]
		public override Texture GetTexture(int index)
		{
			return null;
		}

		[Token(Token = "0x6001508")]
		[Address(RVA = "0x1017754", Offset = "0x1017754", VA = "0x1017754", Slot = "128")]
		public override int GetTextureFrameCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001509")]
		[Address(RVA = "0x10177DC", Offset = "0x10177DC", VA = "0x10177DC", Slot = "130")]
		public override bool RequiresVerticalFlip()
		{
			return default(bool);
		}

		[Token(Token = "0x600150A")]
		[Address(RVA = "0x10177E4", Offset = "0x10177E4", VA = "0x10177E4", Slot = "132")]
		public override void MuteAudio(bool bMuted)
		{
		}

		[Token(Token = "0x600150B")]
		[Address(RVA = "0x10178D0", Offset = "0x10178D0", VA = "0x10178D0", Slot = "133")]
		public override bool IsMuted()
		{
			return default(bool);
		}

		[Token(Token = "0x600150C")]
		[Address(RVA = "0x10179DC", Offset = "0x10179DC", VA = "0x10179DC", Slot = "134")]
		public override void SetVolume(float volume)
		{
		}

		[Token(Token = "0x600150D")]
		[Address(RVA = "0x1017AD4", Offset = "0x1017AD4", VA = "0x1017AD4", Slot = "136")]
		public override float GetVolume()
		{
			return default(float);
		}

		[Token(Token = "0x600150E")]
		[Address(RVA = "0x1017BE0", Offset = "0x1017BE0", VA = "0x1017BE0", Slot = "135")]
		public override void SetBalance(float balance)
		{
		}

		[Token(Token = "0x600150F")]
		[Address(RVA = "0x1017CD8", Offset = "0x1017CD8", VA = "0x1017CD8", Slot = "137")]
		public override float GetBalance()
		{
			return default(float);
		}

		[Token(Token = "0x6001510")]
		[Address(RVA = "0x1017DE4", Offset = "0x1017DE4", VA = "0x1017DE4", Slot = "138")]
		public override int GetAudioTrackCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001511")]
		[Address(RVA = "0x1017EF0", Offset = "0x1017EF0", VA = "0x1017EF0", Slot = "140")]
		public override int GetCurrentAudioTrack()
		{
			return default(int);
		}

		[Token(Token = "0x6001512")]
		[Address(RVA = "0x1017FFC", Offset = "0x1017FFC", VA = "0x1017FFC", Slot = "141")]
		public override void SetAudioTrack(int index)
		{
		}

		[Token(Token = "0x6001513")]
		[Address(RVA = "0x10180E4", Offset = "0x10180E4", VA = "0x10180E4", Slot = "142")]
		public override string GetCurrentAudioTrackId()
		{
			return null;
		}

		[Token(Token = "0x6001514")]
		[Address(RVA = "0x101811C", Offset = "0x101811C", VA = "0x101811C", Slot = "143")]
		public override int GetCurrentAudioTrackBitrate()
		{
			return default(int);
		}

		[Token(Token = "0x6001515")]
		[Address(RVA = "0x1018124", Offset = "0x1018124", VA = "0x1018124", Slot = "152")]
		public override int GetVideoTrackCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001516")]
		[Address(RVA = "0x1018158", Offset = "0x1018158", VA = "0x1018158", Slot = "154")]
		public override int GetCurrentVideoTrack()
		{
			return default(int);
		}

		[Token(Token = "0x6001517")]
		[Address(RVA = "0x1018160", Offset = "0x1018160", VA = "0x1018160", Slot = "155")]
		public override void SetVideoTrack(int index)
		{
		}

		[Token(Token = "0x6001518")]
		[Address(RVA = "0x1018164", Offset = "0x1018164", VA = "0x1018164", Slot = "156")]
		public override string GetCurrentVideoTrackId()
		{
			return null;
		}

		[Token(Token = "0x6001519")]
		[Address(RVA = "0x10181AC", Offset = "0x10181AC", VA = "0x10181AC", Slot = "157")]
		public override int GetCurrentVideoTrackBitrate()
		{
			return default(int);
		}

		[Token(Token = "0x600151A")]
		[Address(RVA = "0x10181B4", Offset = "0x10181B4", VA = "0x10181B4", Slot = "125")]
		public override bool WaitForNextFrame(Camera dummyCamera, int previousFrameCount)
		{
			return default(bool);
		}

		[Token(Token = "0x600151B")]
		[Address(RVA = "0x10183D8", Offset = "0x10183D8", VA = "0x10183D8", Slot = "129")]
		public override long GetTextureTimeStamp()
		{
			return default(long);
		}

		[Token(Token = "0x600151C")]
		[Address(RVA = "0x10184E4", Offset = "0x10184E4", VA = "0x10184E4", Slot = "162")]
		public override void Render()
		{
		}

		[Token(Token = "0x600151D")]
		[Address(RVA = "0x1018C6C", Offset = "0x1018C6C", VA = "0x1018C6C", Slot = "168")]
		protected override void ApplyTextureProperties(Texture texture)
		{
		}

		[Token(Token = "0x600151E")]
		[Address(RVA = "0x1018D40", Offset = "0x1018D40", VA = "0x1018D40", Slot = "174")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x600151F")]
		[Address(RVA = "0x1018E38", Offset = "0x1018E38", VA = "0x1018E38", Slot = "109")]
		public override double GetCurrentDateTimeSecondsSince1970()
		{
			return default(double);
		}

		[Token(Token = "0x6001520")]
		[Address(RVA = "0x1018F44", Offset = "0x1018F44", VA = "0x1018F44", Slot = "161")]
		public override void Update()
		{
		}

		[Token(Token = "0x6001521")]
		[Address(RVA = "0x10190FC", Offset = "0x10190FC", VA = "0x10190FC", Slot = "165")]
		public override bool PlayerSupportsLinearColorSpace()
		{
			return default(bool);
		}

		[Token(Token = "0x6001522")]
		[Address(RVA = "0x1019104", Offset = "0x1019104", VA = "0x1019104", Slot = "163")]
		public override void Dispose()
		{
		}
	}
	[Token(Token = "0x2000151")]
	public class AudioOutputManager
	{
		[Token(Token = "0x4000568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AudioOutputManager _instance;

		[Token(Token = "0x4000569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<MediaPlayer, HashSet<AudioOutput>> _accessTrackers;

		[Token(Token = "0x400056A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<MediaPlayer, float[]> _pcmData;

		[Token(Token = "0x17000073")]
		public static AudioOutputManager Instance
		{
			[Token(Token = "0x6001524")]
			[Address(RVA = "0x101BA34", Offset = "0x101BA34", VA = "0x101BA34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001525")]
		[Address(RVA = "0x101BAF4", Offset = "0x101BAF4", VA = "0x101BAF4")]
		private AudioOutputManager()
		{
		}

		[Token(Token = "0x6001526")]
		[Address(RVA = "0x101BB90", Offset = "0x101BB90", VA = "0x101BB90")]
		public void RequestAudio(AudioOutput _outputComponent, MediaPlayer mediaPlayer, float[] data, int channelMask, int totalChannels, AudioOutput.AudioOutputMode audioOutputMode)
		{
		}

		[Token(Token = "0x6001527")]
		[Address(RVA = "0x101C15C", Offset = "0x101C15C", VA = "0x101C15C")]
		private void GrabAudio(MediaPlayer player, float[] data, int channels)
		{
		}
	}
	[Token(Token = "0x2000152")]
	public abstract class BaseMediaPlayer : IMediaPlayer, IMediaControl, IMediaInfo, IMediaProducer, IMediaSubtitles, IDisposable
	{
		[Token(Token = "0x400056B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected string _playerDescription;

		[Token(Token = "0x400056C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ErrorCode _lastError;

		[Token(Token = "0x400056D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		protected FilterMode _defaultTextureFilterMode;

		[Token(Token = "0x400056E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected TextureWrapMode _defaultTextureWrapMode;

		[Token(Token = "0x400056F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		protected int _defaultTextureAnisoLevel;

		[Token(Token = "0x4000570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected TimeRange[] _seekableTimeRanges;

		[Token(Token = "0x4000571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected List<Subtitle> _subtitles;

		[Token(Token = "0x4000572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Subtitle _currentSubtitle;

		[Token(Token = "0x6001529")]
		public abstract string GetVersion();

		[Token(Token = "0x600152A")]
		public abstract bool OpenVideoFromFile(string path, long offset, string httpHeaderJson, uint sourceSamplerate = 0u, uint sourceChannels = 0u, int forceFileFormat = 0);

		[Token(Token = "0x600152B")]
		[Address(RVA = "0x101C23C", Offset = "0x101C23C", VA = "0x101C23C", Slot = "92")]
		public virtual bool OpenVideoFromBuffer(byte[] buffer)
		{
			return default(bool);
		}

		[Token(Token = "0x600152C")]
		[Address(RVA = "0x101C244", Offset = "0x101C244", VA = "0x101C244", Slot = "93")]
		public virtual bool StartOpenVideoFromBuffer(ulong length)
		{
			return default(bool);
		}

		[Token(Token = "0x600152D")]
		[Address(RVA = "0x101C24C", Offset = "0x101C24C", VA = "0x101C24C", Slot = "94")]
		public virtual bool AddChunkToVideoBuffer(byte[] chunk, ulong offset, ulong length)
		{
			return default(bool);
		}

		[Token(Token = "0x600152E")]
		[Address(RVA = "0x101C254", Offset = "0x101C254", VA = "0x101C254", Slot = "95")]
		public virtual bool EndOpenVideoFromBuffer()
		{
			return default(bool);
		}

		[Token(Token = "0x600152F")]
		public abstract void CloseVideo();

		[Token(Token = "0x6001530")]
		public abstract void SetLooping(bool bLooping);

		[Token(Token = "0x6001531")]
		public abstract bool IsLooping();

		[Token(Token = "0x6001532")]
		public abstract bool HasMetaData();

		[Token(Token = "0x6001533")]
		public abstract bool CanPlay();

		[Token(Token = "0x6001534")]
		public abstract void Play();

		[Token(Token = "0x6001535")]
		public abstract void Pause();

		[Token(Token = "0x6001536")]
		public abstract void Stop();

		[Token(Token = "0x6001537")]
		public abstract void Rewind();

		[Token(Token = "0x6001538")]
		public abstract void Seek(float timeMs);

		[Token(Token = "0x6001539")]
		public abstract void SeekFast(float timeMs);

		[Token(Token = "0x600153A")]
		[Address(RVA = "0x101C25C", Offset = "0x101C25C", VA = "0x101C25C", Slot = "107")]
		public virtual void SeekWithTolerance(float timeMs, float beforeMs, float afterMs)
		{
		}

		[Token(Token = "0x600153B")]
		public abstract float GetCurrentTimeMs();

		[Token(Token = "0x600153C")]
		[Address(RVA = "0x101C26C", Offset = "0x101C26C", VA = "0x101C26C", Slot = "109")]
		public virtual double GetCurrentDateTimeSecondsSince1970()
		{
			return default(double);
		}

		[Token(Token = "0x600153D")]
		[Address(RVA = "0x101C274", Offset = "0x101C274", VA = "0x101C274", Slot = "110")]
		public virtual TimeRange[] GetSeekableTimeRanges()
		{
			return null;
		}

		[Token(Token = "0x600153E")]
		public abstract float GetPlaybackRate();

		[Token(Token = "0x600153F")]
		public abstract void SetPlaybackRate(float rate);

		[Token(Token = "0x6001540")]
		public abstract float GetDurationMs();

		[Token(Token = "0x6001541")]
		public abstract int GetVideoWidth();

		[Token(Token = "0x6001542")]
		public abstract int GetVideoHeight();

		[Token(Token = "0x6001543")]
		[Address(RVA = "0x101C27C", Offset = "0x101C27C", VA = "0x101C27C", Slot = "116")]
		public virtual Rect GetCropRect()
		{
			return default(Rect);
		}

		[Token(Token = "0x6001544")]
		public abstract float GetVideoDisplayRate();

		[Token(Token = "0x6001545")]
		public abstract bool HasAudio();

		[Token(Token = "0x6001546")]
		public abstract bool HasVideo();

		[Token(Token = "0x6001547")]
		public abstract bool IsSeeking();

		[Token(Token = "0x6001548")]
		public abstract bool IsPlaying();

		[Token(Token = "0x6001549")]
		public abstract bool IsPaused();

		[Token(Token = "0x600154A")]
		public abstract bool IsFinished();

		[Token(Token = "0x600154B")]
		public abstract bool IsBuffering();

		[Token(Token = "0x600154C")]
		[Address(RVA = "0x101C2BC", Offset = "0x101C2BC", VA = "0x101C2BC", Slot = "125")]
		public virtual bool WaitForNextFrame(Camera dummyCamera, int previousFrameCount)
		{
			return default(bool);
		}

		[Token(Token = "0x600154D")]
		[Address(RVA = "0x101C2C4", Offset = "0x101C2C4", VA = "0x101C2C4", Slot = "126")]
		public virtual int GetTextureCount()
		{
			return default(int);
		}

		[Token(Token = "0x600154E")]
		public abstract Texture GetTexture(int index = 0);

		[Token(Token = "0x600154F")]
		public abstract int GetTextureFrameCount();

		[Token(Token = "0x6001550")]
		[Address(RVA = "0x101C2CC", Offset = "0x101C2CC", VA = "0x101C2CC", Slot = "129")]
		public virtual long GetTextureTimeStamp()
		{
			return default(long);
		}

		[Token(Token = "0x6001551")]
		public abstract bool RequiresVerticalFlip();

		[Token(Token = "0x6001552")]
		[Address(RVA = "0x101C2D4", Offset = "0x101C2D4", VA = "0x101C2D4", Slot = "131")]
		public virtual float[] GetTextureTransform()
		{
			return null;
		}

		[Token(Token = "0x6001553")]
		public abstract void MuteAudio(bool bMuted);

		[Token(Token = "0x6001554")]
		public abstract bool IsMuted();

		[Token(Token = "0x6001555")]
		public abstract void SetVolume(float volume);

		[Token(Token = "0x6001556")]
		[Address(RVA = "0x101C354", Offset = "0x101C354", VA = "0x101C354", Slot = "135")]
		public virtual void SetBalance(float balance)
		{
		}

		[Token(Token = "0x6001557")]
		public abstract float GetVolume();

		[Token(Token = "0x6001558")]
		[Address(RVA = "0x101C358", Offset = "0x101C358", VA = "0x101C358", Slot = "137")]
		public virtual float GetBalance()
		{
			return default(float);
		}

		[Token(Token = "0x6001559")]
		public abstract int GetAudioTrackCount();

		[Token(Token = "0x600155A")]
		[Address(RVA = "0x101C360", Offset = "0x101C360", VA = "0x101C360", Slot = "139")]
		public virtual string GetAudioTrackId(int index)
		{
			return null;
		}

		[Token(Token = "0x600155B")]
		public abstract int GetCurrentAudioTrack();

		[Token(Token = "0x600155C")]
		public abstract void SetAudioTrack(int index);

		[Token(Token = "0x600155D")]
		public abstract string GetCurrentAudioTrackId();

		[Token(Token = "0x600155E")]
		public abstract int GetCurrentAudioTrackBitrate();

		[Token(Token = "0x600155F")]
		[Address(RVA = "0x101C388", Offset = "0x101C388", VA = "0x101C388", Slot = "144")]
		public virtual int GetNumAudioChannels()
		{
			return default(int);
		}

		[Token(Token = "0x6001560")]
		[Address(RVA = "0x101C390", Offset = "0x101C390", VA = "0x101C390", Slot = "145")]
		public virtual void SetAudioHeadRotation(Quaternion q)
		{
		}

		[Token(Token = "0x6001561")]
		[Address(RVA = "0x101C394", Offset = "0x101C394", VA = "0x101C394", Slot = "146")]
		public virtual void ResetAudioHeadRotation()
		{
		}

		[Token(Token = "0x6001562")]
		[Address(RVA = "0x101C398", Offset = "0x101C398", VA = "0x101C398", Slot = "147")]
		public virtual void SetAudioChannelMode(Audio360ChannelMode channelMode)
		{
		}

		[Token(Token = "0x6001563")]
		[Address(RVA = "0x101C39C", Offset = "0x101C39C", VA = "0x101C39C", Slot = "148")]
		public virtual void SetAudioFocusEnabled(bool enabled)
		{
		}

		[Token(Token = "0x6001564")]
		[Address(RVA = "0x101C3A0", Offset = "0x101C3A0", VA = "0x101C3A0", Slot = "149")]
		public virtual void SetAudioFocusProperties(float offFocusLevel, float widthDegrees)
		{
		}

		[Token(Token = "0x6001565")]
		[Address(RVA = "0x101C3A4", Offset = "0x101C3A4", VA = "0x101C3A4", Slot = "150")]
		public virtual void SetAudioFocusRotation(Quaternion q)
		{
		}

		[Token(Token = "0x6001566")]
		[Address(RVA = "0x101C3A8", Offset = "0x101C3A8", VA = "0x101C3A8", Slot = "151")]
		public virtual void ResetAudioFocus()
		{
		}

		[Token(Token = "0x6001567")]
		public abstract int GetVideoTrackCount();

		[Token(Token = "0x6001568")]
		[Address(RVA = "0x101C3AC", Offset = "0x101C3AC", VA = "0x101C3AC", Slot = "153")]
		public virtual string GetVideoTrackId(int index)
		{
			return null;
		}

		[Token(Token = "0x6001569")]
		public abstract int GetCurrentVideoTrack();

		[Token(Token = "0x600156A")]
		public abstract void SetVideoTrack(int index);

		[Token(Token = "0x600156B")]
		public abstract string GetCurrentVideoTrackId();

		[Token(Token = "0x600156C")]
		public abstract int GetCurrentVideoTrackBitrate();

		[Token(Token = "0x600156D")]
		public abstract float GetVideoFrameRate();

		[Token(Token = "0x600156E")]
		[Address(RVA = "0x101C3D4", Offset = "0x101C3D4", VA = "0x101C3D4", Slot = "159")]
		public virtual long GetEstimatedTotalBandwidthUsed()
		{
			return default(long);
		}

		[Token(Token = "0x600156F")]
		public abstract float GetBufferingProgress();

		[Token(Token = "0x6001570")]
		public abstract void Update();

		[Token(Token = "0x6001571")]
		public abstract void Render();

		[Token(Token = "0x6001572")]
		public abstract void Dispose();

		[Token(Token = "0x6001573")]
		[Address(RVA = "0x101C3DC", Offset = "0x101C3DC", VA = "0x101C3DC", Slot = "47")]
		public ErrorCode GetLastError()
		{
			return default(ErrorCode);
		}

		[Token(Token = "0x6001574")]
		[Address(RVA = "0x101C3E4", Offset = "0x101C3E4", VA = "0x101C3E4", Slot = "164")]
		public virtual long GetLastExtendedErrorCode()
		{
			return default(long);
		}

		[Token(Token = "0x6001575")]
		[Address(RVA = "0x101C3EC", Offset = "0x101C3EC", VA = "0x101C3EC", Slot = "76")]
		public string GetPlayerDescription()
		{
			return null;
		}

		[Token(Token = "0x6001576")]
		[Address(RVA = "0x101C3F4", Offset = "0x101C3F4", VA = "0x101C3F4", Slot = "165")]
		public virtual bool PlayerSupportsLinearColorSpace()
		{
			return default(bool);
		}

		[Token(Token = "0x6001577")]
		[Address(RVA = "0x101C3FC", Offset = "0x101C3FC", VA = "0x101C3FC", Slot = "166")]
		public virtual int GetBufferedTimeRangeCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001578")]
		[Address(RVA = "0x101C404", Offset = "0x101C404", VA = "0x101C404", Slot = "167")]
		public virtual bool GetBufferedTimeRange(int index, ref float startTimeMs, ref float endTimeMs)
		{
			return default(bool);
		}

		[Token(Token = "0x6001579")]
		[Address(RVA = "0x101C40C", Offset = "0x101C40C", VA = "0x101C40C", Slot = "49")]
		public void SetTextureProperties(FilterMode filterMode = FilterMode.Bilinear, TextureWrapMode wrapMode = TextureWrapMode.Clamp, int anisoLevel = 0)
		{
		}

		[Token(Token = "0x600157A")]
		[Address(RVA = "0x1018C7C", Offset = "0x1018C7C", VA = "0x1018C7C", Slot = "168")]
		protected virtual void ApplyTextureProperties(Texture texture)
		{
		}

		[Token(Token = "0x600157B")]
		[Address(RVA = "0x101C49C", Offset = "0x101C49C", VA = "0x101C49C", Slot = "169")]
		public virtual void GrabAudio(float[] buffer, int floatCount, int channelCount)
		{
		}

		[Token(Token = "0x600157C")]
		[Address(RVA = "0x101C4A0", Offset = "0x101C4A0", VA = "0x101C4A0", Slot = "170")]
		public virtual bool IsPlaybackStalled()
		{
			return default(bool);
		}

		[Token(Token = "0x600157D")]
		[Address(RVA = "0x101C4A8", Offset = "0x101C4A8", VA = "0x101C4A8", Slot = "86")]
		public bool LoadSubtitlesSRT(string data)
		{
			return default(bool);
		}

		[Token(Token = "0x600157E")]
		[Address(RVA = "0x101C850", Offset = "0x101C850", VA = "0x101C850", Slot = "171")]
		public virtual void UpdateSubtitles()
		{
		}

		[Token(Token = "0x600157F")]
		[Address(RVA = "0x101C998", Offset = "0x101C998", VA = "0x101C998", Slot = "172")]
		public virtual int GetSubtitleIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6001580")]
		[Address(RVA = "0x101C9B0", Offset = "0x101C9B0", VA = "0x101C9B0", Slot = "173")]
		public virtual string GetSubtitleText()
		{
			return null;
		}

		[Token(Token = "0x6001581")]
		[Address(RVA = "0x1018E34", Offset = "0x1018E34", VA = "0x1018E34", Slot = "174")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001582")]
		[Address(RVA = "0x1014E88", Offset = "0x1014E88", VA = "0x1014E88")]
		protected BaseMediaPlayer()
		{
		}
	}
	[Token(Token = "0x2000153")]
	public class HLSStream : Stream
	{
		[Token(Token = "0x4000573")]
		private const string BANDWITH_NAME = "BANDWIDTH=";

		[Token(Token = "0x4000574")]
		private const string RESOLUTION_NAME = "RESOLUTION=";

		[Token(Token = "0x4000575")]
		private const string CHUNK_TAG = "#EXTINF";

		[Token(Token = "0x4000576")]
		private const string STREAM_TAG = "#EXT-X-STREAM-INF";

		[Token(Token = "0x4000577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<Stream> _streams;

		[Token(Token = "0x4000578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<Chunk> _chunks;

		[Token(Token = "0x4000579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string _streamURL;

		[Token(Token = "0x400057A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int _width;

		[Token(Token = "0x400057B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int _height;

		[Token(Token = "0x400057C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int _bandwidth;

		[Token(Token = "0x17000074")]
		public override int Width
		{
			[Token(Token = "0x6001583")]
			[Address(RVA = "0x102D004", Offset = "0x102D004", VA = "0x102D004", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000075")]
		public override int Height
		{
			[Token(Token = "0x6001584")]
			[Address(RVA = "0x102D00C", Offset = "0x102D00C", VA = "0x102D00C", Slot = "5")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000076")]
		public override int Bandwidth
		{
			[Token(Token = "0x6001585")]
			[Address(RVA = "0x102D014", Offset = "0x102D014", VA = "0x102D014", Slot = "6")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000077")]
		public override string URL
		{
			[Token(Token = "0x6001586")]
			[Address(RVA = "0x102D01C", Offset = "0x102D01C", VA = "0x102D01C", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001587")]
		[Address(RVA = "0x102D024", Offset = "0x102D024", VA = "0x102D024", Slot = "8")]
		public override List<Chunk> GetAllChunks()
		{
			return null;
		}

		[Token(Token = "0x6001588")]
		[Address(RVA = "0x102D124", Offset = "0x102D124", VA = "0x102D124", Slot = "9")]
		public override List<Chunk> GetChunks()
		{
			return null;
		}

		[Token(Token = "0x6001589")]
		[Address(RVA = "0x102D12C", Offset = "0x102D12C", VA = "0x102D12C", Slot = "10")]
		public override List<Stream> GetAllStreams()
		{
			return null;
		}

		[Token(Token = "0x600158A")]
		[Address(RVA = "0x102D22C", Offset = "0x102D22C", VA = "0x102D22C", Slot = "11")]
		public override List<Stream> GetStreams()
		{
			return null;
		}

		[Token(Token = "0x600158B")]
		[Address(RVA = "0x102D234", Offset = "0x102D234", VA = "0x102D234")]
		private bool ExtractStreamInfo(string line, ref int width, ref int height, ref int bandwidth)
		{
			return default(bool);
		}

		[Token(Token = "0x600158C")]
		[Address(RVA = "0x102D444", Offset = "0x102D444", VA = "0x102D444")]
		private static bool IsChunk(string line)
		{
			return default(bool);
		}

		[Token(Token = "0x600158D")]
		[Address(RVA = "0x102D4A0", Offset = "0x102D4A0", VA = "0x102D4A0")]
		private void ParseFile(string[] text, string path)
		{
		}

		[Token(Token = "0x600158E")]
		[Address(RVA = "0x102D8FC", Offset = "0x102D8FC", VA = "0x102D8FC")]
		public HLSStream(string filename, int width = 0, int height = 0, int bandwidth = 0)
		{
		}

		[Token(Token = "0x600158F")]
		[Address(RVA = "0x102DC60", Offset = "0x102DC60", VA = "0x102DC60")]
		private bool MyRemoteCertificateValidationCallback(object sender, X509Certificate certificate, X509Chain chain, SslPolicyErrors sslPolicyErrors)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x2000154")]
	public class MediaPlayerEvent : UnityEvent<MediaPlayer, MediaPlayerEvent.EventType, ErrorCode>
	{
		[Token(Token = "0x200038D")]
		public enum EventType
		{
			[Token(Token = "0x4000F08")]
			MetaDataReady,
			[Token(Token = "0x4000F09")]
			ReadyToPlay,
			[Token(Token = "0x4000F0A")]
			Started,
			[Token(Token = "0x4000F0B")]
			FirstFrameReady,
			[Token(Token = "0x4000F0C")]
			FinishedPlaying,
			[Token(Token = "0x4000F0D")]
			Closing,
			[Token(Token = "0x4000F0E")]
			Error,
			[Token(Token = "0x4000F0F")]
			SubtitleChange,
			[Token(Token = "0x4000F10")]
			Stalled,
			[Token(Token = "0x4000F11")]
			Unstalled,
			[Token(Token = "0x4000F12")]
			ResolutionChanged,
			[Token(Token = "0x4000F13")]
			StartedSeeking,
			[Token(Token = "0x4000F14")]
			FinishedSeeking,
			[Token(Token = "0x4000F15")]
			StartedBuffering,
			[Token(Token = "0x4000F16")]
			FinishedBuffering
		}

		[Token(Token = "0x6001590")]
		[Address(RVA = "0xD258C8", Offset = "0xD258C8", VA = "0xD258C8")]
		public MediaPlayerEvent()
		{
		}
	}
	[Token(Token = "0x2000155")]
	public interface IMediaPlayer
	{
		[Token(Token = "0x6001591")]
		void OnEnable();

		[Token(Token = "0x6001592")]
		void Update();

		[Token(Token = "0x6001593")]
		void Render();
	}
	[Token(Token = "0x2000156")]
	public interface IMediaSubtitles
	{
		[Token(Token = "0x6001594")]
		bool LoadSubtitlesSRT(string data);

		[Token(Token = "0x6001595")]
		int GetSubtitleIndex();

		[Token(Token = "0x6001596")]
		string GetSubtitleText();
	}
	[Token(Token = "0x2000157")]
	public interface IMediaControl
	{
		[Token(Token = "0x6001597")]
		bool OpenVideoFromFile(string path, long offset, string httpHeaderJson, uint sourceSamplerate = 0u, uint sourceChannels = 0u, int forceFileFormat = 0);

		[Token(Token = "0x6001598")]
		bool OpenVideoFromBuffer(byte[] buffer);

		[Token(Token = "0x6001599")]
		bool StartOpenVideoFromBuffer(ulong length);

		[Token(Token = "0x600159A")]
		bool AddChunkToVideoBuffer(byte[] chunk, ulong offset, ulong length);

		[Token(Token = "0x600159B")]
		bool EndOpenVideoFromBuffer();

		[Token(Token = "0x600159C")]
		void CloseVideo();

		[Token(Token = "0x600159D")]
		void SetLooping(bool bLooping);

		[Token(Token = "0x600159E")]
		bool IsLooping();

		[Token(Token = "0x600159F")]
		bool HasMetaData();

		[Token(Token = "0x60015A0")]
		bool CanPlay();

		[Token(Token = "0x60015A1")]
		bool IsPlaying();

		[Token(Token = "0x60015A2")]
		bool IsSeeking();

		[Token(Token = "0x60015A3")]
		bool IsPaused();

		[Token(Token = "0x60015A4")]
		bool IsFinished();

		[Token(Token = "0x60015A5")]
		bool IsBuffering();

		[Token(Token = "0x60015A6")]
		void Play();

		[Token(Token = "0x60015A7")]
		void Pause();

		[Token(Token = "0x60015A8")]
		void Stop();

		[Token(Token = "0x60015A9")]
		void Rewind();

		[Token(Token = "0x60015AA")]
		void Seek(float timeMs);

		[Token(Token = "0x60015AB")]
		void SeekFast(float timeMs);

		[Token(Token = "0x60015AC")]
		void SeekWithTolerance(float timeMs, float beforeMs, float afterMs);

		[Token(Token = "0x60015AD")]
		float GetCurrentTimeMs();

		[Token(Token = "0x60015AE")]
		double GetCurrentDateTimeSecondsSince1970();

		[Token(Token = "0x60015AF")]
		TimeRange[] GetSeekableTimeRanges();

		[Token(Token = "0x60015B0")]
		float GetPlaybackRate();

		[Token(Token = "0x60015B1")]
		void SetPlaybackRate(float rate);

		[Token(Token = "0x60015B2")]
		void MuteAudio(bool bMute);

		[Token(Token = "0x60015B3")]
		bool IsMuted();

		[Token(Token = "0x60015B4")]
		void SetVolume(float volume);

		[Token(Token = "0x60015B5")]
		void SetBalance(float balance);

		[Token(Token = "0x60015B6")]
		float GetVolume();

		[Token(Token = "0x60015B7")]
		float GetBalance();

		[Token(Token = "0x60015B8")]
		int GetCurrentAudioTrack();

		[Token(Token = "0x60015B9")]
		void SetAudioTrack(int index);

		[Token(Token = "0x60015BA")]
		int GetCurrentVideoTrack();

		[Token(Token = "0x60015BB")]
		void SetVideoTrack(int index);

		[Token(Token = "0x60015BC")]
		float GetBufferingProgress();

		[Token(Token = "0x60015BD")]
		int GetBufferedTimeRangeCount();

		[Token(Token = "0x60015BE")]
		bool GetBufferedTimeRange(int index, ref float startTimeMs, ref float endTimeMs);

		[Token(Token = "0x60015BF")]
		ErrorCode GetLastError();

		[Token(Token = "0x60015C0")]
		long GetLastExtendedErrorCode();

		[Token(Token = "0x60015C1")]
		void SetTextureProperties(FilterMode filterMode = FilterMode.Bilinear, TextureWrapMode wrapMode = TextureWrapMode.Clamp, int anisoLevel = 1);

		[Token(Token = "0x60015C2")]
		void GrabAudio(float[] buffer, int floatCount, int channelCount);

		[Token(Token = "0x60015C3")]
		int GetNumAudioChannels();

		[Token(Token = "0x60015C4")]
		void SetAudioHeadRotation(Quaternion q);

		[Token(Token = "0x60015C5")]
		void ResetAudioHeadRotation();

		[Token(Token = "0x60015C6")]
		void SetAudioChannelMode(Audio360ChannelMode channelMode);

		[Token(Token = "0x60015C7")]
		void SetAudioFocusEnabled(bool enabled);

		[Token(Token = "0x60015C8")]
		void SetAudioFocusProperties(float offFocusLevel, float widthDegrees);

		[Token(Token = "0x60015C9")]
		void SetAudioFocusRotation(Quaternion q);

		[Token(Token = "0x60015CA")]
		void ResetAudioFocus();

		[Token(Token = "0x60015CB")]
		bool WaitForNextFrame(Camera dummyCamera, int previousFrameCount);
	}
	[Token(Token = "0x2000158")]
	public interface IMediaInfo
	{
		[Token(Token = "0x60015CC")]
		float GetDurationMs();

		[Token(Token = "0x60015CD")]
		int GetVideoWidth();

		[Token(Token = "0x60015CE")]
		int GetVideoHeight();

		[Token(Token = "0x60015CF")]
		Rect GetCropRect();

		[Token(Token = "0x60015D0")]
		float GetVideoFrameRate();

		[Token(Token = "0x60015D1")]
		float GetVideoDisplayRate();

		[Token(Token = "0x60015D2")]
		bool HasVideo();

		[Token(Token = "0x60015D3")]
		bool HasAudio();

		[Token(Token = "0x60015D4")]
		int GetAudioTrackCount();

		[Token(Token = "0x60015D5")]
		string GetAudioTrackId(int index);

		[Token(Token = "0x60015D6")]
		string GetCurrentAudioTrackId();

		[Token(Token = "0x60015D7")]
		int GetCurrentAudioTrackBitrate();

		[Token(Token = "0x60015D8")]
		int GetVideoTrackCount();

		[Token(Token = "0x60015D9")]
		string GetVideoTrackId(int index);

		[Token(Token = "0x60015DA")]
		string GetCurrentVideoTrackId();

		[Token(Token = "0x60015DB")]
		int GetCurrentVideoTrackBitrate();

		[Token(Token = "0x60015DC")]
		string GetPlayerDescription();

		[Token(Token = "0x60015DD")]
		bool PlayerSupportsLinearColorSpace();

		[Token(Token = "0x60015DE")]
		bool IsPlaybackStalled();

		[Token(Token = "0x60015DF")]
		float[] GetTextureTransform();

		[Token(Token = "0x60015E0")]
		long GetEstimatedTotalBandwidthUsed();
	}
	[Token(Token = "0x2000159")]
	public interface IMediaProducer
	{
		[Token(Token = "0x60015E1")]
		int GetTextureCount();

		[Token(Token = "0x60015E2")]
		Texture GetTexture(int index = 0);

		[Token(Token = "0x60015E3")]
		int GetTextureFrameCount();

		[Token(Token = "0x60015E4")]
		long GetTextureTimeStamp();

		[Token(Token = "0x60015E5")]
		bool RequiresVerticalFlip();
	}
	[Token(Token = "0x200015A")]
	public enum Platform
	{
		[Token(Token = "0x400057E")]
		Windows = 0,
		[Token(Token = "0x400057F")]
		MacOSX = 1,
		[Token(Token = "0x4000580")]
		iOS = 2,
		[Token(Token = "0x4000581")]
		tvOS = 3,
		[Token(Token = "0x4000582")]
		Android = 4,
		[Token(Token = "0x4000583")]
		WindowsPhone = 5,
		[Token(Token = "0x4000584")]
		WindowsUWP = 6,
		[Token(Token = "0x4000585")]
		WebGL = 7,
		[Token(Token = "0x4000586")]
		PS4 = 8,
		[Token(Token = "0x4000587")]
		Count = 9,
		[Token(Token = "0x4000588")]
		Unknown = 100
	}
	[Token(Token = "0x200015B")]
	public enum StereoPacking
	{
		[Token(Token = "0x400058A")]
		None,
		[Token(Token = "0x400058B")]
		TopBottom,
		[Token(Token = "0x400058C")]
		LeftRight,
		[Token(Token = "0x400058D")]
		CustomUV
	}
	[Token(Token = "0x200015C")]
	public enum StereoEye
	{
		[Token(Token = "0x400058F")]
		Both,
		[Token(Token = "0x4000590")]
		Left,
		[Token(Token = "0x4000591")]
		Right
	}
	[Token(Token = "0x200015D")]
	public enum AlphaPacking
	{
		[Token(Token = "0x4000593")]
		None,
		[Token(Token = "0x4000594")]
		TopBottom,
		[Token(Token = "0x4000595")]
		LeftRight
	}
	[Token(Token = "0x200015E")]
	public enum ErrorCode
	{
		[Token(Token = "0x4000597")]
		None = 0,
		[Token(Token = "0x4000598")]
		LoadFailed = 100,
		[Token(Token = "0x4000599")]
		DecodeFailed = 200
	}
	[Token(Token = "0x200015F")]
	public enum Orientation
	{
		[Token(Token = "0x400059B")]
		Landscape,
		[Token(Token = "0x400059C")]
		LandscapeFlipped,
		[Token(Token = "0x400059D")]
		Portrait,
		[Token(Token = "0x400059E")]
		PortraitFlipped
	}
	[Token(Token = "0x2000160")]
	public enum VideoMapping
	{
		[Token(Token = "0x40005A0")]
		Unknown,
		[Token(Token = "0x40005A1")]
		Normal,
		[Token(Token = "0x40005A2")]
		EquiRectangular360,
		[Token(Token = "0x40005A3")]
		EquiRectangular180,
		[Token(Token = "0x40005A4")]
		CubeMap3x2
	}
	[Token(Token = "0x2000161")]
	public enum FileFormat
	{
		[Token(Token = "0x40005A6")]
		Unknown,
		[Token(Token = "0x40005A7")]
		HLS,
		[Token(Token = "0x40005A8")]
		DASH,
		[Token(Token = "0x40005A9")]
		SmoothStreaming
	}
	[Token(Token = "0x2000162")]
	public static class Windows
	{
		[Token(Token = "0x200038E")]
		public enum VideoApi
		{
			[Token(Token = "0x4000F18")]
			MediaFoundation,
			[Token(Token = "0x4000F19")]
			DirectShow
		}

		[Token(Token = "0x40005AA")]
		public const string AudioDeviceOutputName_Vive = "HTC VIVE USB Audio";

		[Token(Token = "0x40005AB")]
		public const string AudioDeviceOutputName_Rift = "Rift Audio";
	}
	[Token(Token = "0x2000163")]
	public static class Android
	{
		[Token(Token = "0x200038F")]
		public enum VideoApi
		{
			[Token(Token = "0x4000F1B")]
			MediaPlayer = 1,
			[Token(Token = "0x4000F1C")]
			ExoPlayer
		}
	}
	[Token(Token = "0x2000164")]
	public enum Audio360ChannelMode
	{
		[Token(Token = "0x40005AD")]
		TBE_8_2,
		[Token(Token = "0x40005AE")]
		TBE_8,
		[Token(Token = "0x40005AF")]
		TBE_6_2,
		[Token(Token = "0x40005B0")]
		TBE_6,
		[Token(Token = "0x40005B1")]
		TBE_4_2,
		[Token(Token = "0x40005B2")]
		TBE_4,
		[Token(Token = "0x40005B3")]
		TBE_8_PAIR0,
		[Token(Token = "0x40005B4")]
		TBE_8_PAIR1,
		[Token(Token = "0x40005B5")]
		TBE_8_PAIR2,
		[Token(Token = "0x40005B6")]
		TBE_8_PAIR3,
		[Token(Token = "0x40005B7")]
		TBE_CHANNEL0,
		[Token(Token = "0x40005B8")]
		TBE_CHANNEL1,
		[Token(Token = "0x40005B9")]
		TBE_CHANNEL2,
		[Token(Token = "0x40005BA")]
		TBE_CHANNEL3,
		[Token(Token = "0x40005BB")]
		TBE_CHANNEL4,
		[Token(Token = "0x40005BC")]
		TBE_CHANNEL5,
		[Token(Token = "0x40005BD")]
		TBE_CHANNEL6,
		[Token(Token = "0x40005BE")]
		TBE_CHANNEL7,
		[Token(Token = "0x40005BF")]
		HEADLOCKED_STEREO,
		[Token(Token = "0x40005C0")]
		HEADLOCKED_CHANNEL0,
		[Token(Token = "0x40005C1")]
		HEADLOCKED_CHANNEL1,
		[Token(Token = "0x40005C2")]
		AMBIX_4,
		[Token(Token = "0x40005C3")]
		AMBIX_9,
		[Token(Token = "0x40005C4")]
		AMBIX_9_2,
		[Token(Token = "0x40005C5")]
		INVALID
	}
	[Token(Token = "0x2000165")]
	public struct TimeRange
	{
		[Token(Token = "0x40005C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float startTime;

		[Token(Token = "0x40005C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float duration;
	}
	[Token(Token = "0x2000166")]
	public class Subtitle
	{
		[Token(Token = "0x40005C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int index;

		[Token(Token = "0x40005C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string text;

		[Token(Token = "0x40005CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int timeStartMs;

		[Token(Token = "0x40005CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int timeEndMs;

		[Token(Token = "0x60015E6")]
		[Address(RVA = "0xD2F2E8", Offset = "0xD2F2E8", VA = "0xD2F2E8")]
		public bool IsBefore(float time)
		{
			return default(bool);
		}

		[Token(Token = "0x60015E7")]
		[Address(RVA = "0xD2F314", Offset = "0xD2F314", VA = "0xD2F314")]
		public bool IsTime(float time)
		{
			return default(bool);
		}

		[Token(Token = "0x60015E8")]
		[Address(RVA = "0xD2F340", Offset = "0xD2F340", VA = "0xD2F340")]
		public Subtitle()
		{
		}
	}
	[Token(Token = "0x2000167")]
	public static class Helper
	{
		[Token(Token = "0x40005CC")]
		public const string ScriptVersion = "1.8.7";

		[Token(Token = "0x60015E9")]
		[Address(RVA = "0x102DE2C", Offset = "0x102DE2C", VA = "0x102DE2C")]
		public static string GetName(Platform platform)
		{
			return null;
		}

		[Token(Token = "0x60015EA")]
		[Address(RVA = "0x102DEB0", Offset = "0x102DEB0", VA = "0x102DEB0")]
		public static string GetErrorMessage(ErrorCode code)
		{
			return null;
		}

		[Token(Token = "0x60015EB")]
		[Address(RVA = "0x102DF58", Offset = "0x102DF58", VA = "0x102DF58")]
		public static string[] GetPlatformNames()
		{
			return null;
		}

		[Token(Token = "0x60015EC")]
		[Address(RVA = "0x1014F10", Offset = "0x1014F10", VA = "0x1014F10")]
		public static void LogInfo(string message, [Optional] UnityEngine.Object context)
		{
		}

		[Token(Token = "0x60015ED")]
		[Address(RVA = "0x102E1A0", Offset = "0x102E1A0", VA = "0x102E1A0")]
		public static string GetTimeString(float totalSeconds, bool showMilliseconds = false)
		{
			return null;
		}

		[Token(Token = "0x60015EE")]
		[Address(RVA = "0x102E578", Offset = "0x102E578", VA = "0x102E578")]
		public static Orientation GetOrientation(float[] t)
		{
			return default(Orientation);
		}

		[Token(Token = "0x60015EF")]
		[Address(RVA = "0x102E6C8", Offset = "0x102E6C8", VA = "0x102E6C8")]
		public static Matrix4x4 GetMatrixForOrientation(Orientation ori)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x60015F0")]
		[Address(RVA = "0x102EA20", Offset = "0x102EA20", VA = "0x102EA20")]
		public static void SetupStereoEyeModeMaterial(Material material, StereoEye mode)
		{
		}

		[Token(Token = "0x60015F1")]
		[Address(RVA = "0x1019DD0", Offset = "0x1019DD0", VA = "0x1019DD0")]
		public static void SetupLayoutMaterial(Material material, VideoMapping mapping)
		{
		}

		[Token(Token = "0x60015F2")]
		[Address(RVA = "0x1019E78", Offset = "0x1019E78", VA = "0x1019E78")]
		public static void SetupStereoMaterial(Material material, StereoPacking packing, bool displayDebugTinting)
		{
		}

		[Token(Token = "0x60015F3")]
		[Address(RVA = "0x1019F9C", Offset = "0x1019F9C", VA = "0x1019F9C")]
		public static void SetupAlphaPackedMaterial(Material material, AlphaPacking packing)
		{
		}

		[Token(Token = "0x60015F4")]
		[Address(RVA = "0x101A06C", Offset = "0x101A06C", VA = "0x101A06C")]
		public static void SetupGammaMaterial(Material material, bool playerSupportsLinear)
		{
		}

		[Token(Token = "0x60015F5")]
		[Address(RVA = "0x102EB5C", Offset = "0x102EB5C", VA = "0x102EB5C")]
		public static int ConvertTimeSecondsToFrame(float seconds, float frameRate)
		{
			return default(int);
		}

		[Token(Token = "0x60015F6")]
		[Address(RVA = "0x102EBD0", Offset = "0x102EBD0", VA = "0x102EBD0")]
		public static float ConvertFrameToTimeSeconds(int frame, float frameRate)
		{
			return default(float);
		}

		[Token(Token = "0x60015F7")]
		[Address(RVA = "0x102EBF0", Offset = "0x102EBF0", VA = "0x102EBF0")]
		public static DateTime ConvertSecondsSince1970ToDateTime(double secondsSince1970)
		{
			return default(DateTime);
		}

		[Token(Token = "0x60015F8")]
		[Address(RVA = "0x102A614", Offset = "0x102A614", VA = "0x102A614")]
		public static void DrawTexture(Rect screenRect, Texture texture, ScaleMode scaleMode, AlphaPacking alphaPacking, Material material)
		{
		}

		[Token(Token = "0x60015F9")]
		[Address(RVA = "0x102ECA8", Offset = "0x102ECA8", VA = "0x102ECA8")]
		public static Texture2D GetReadableTexture(Texture inputTexture, bool requiresVerticalFlip, Orientation ori, Texture2D targetTexture)
		{
			return null;
		}

		[Token(Token = "0x60015FA")]
		[Address(RVA = "0x102EFBC", Offset = "0x102EFBC", VA = "0x102EFBC")]
		private static int ParseTimeToMs(string text)
		{
			return default(int);
		}

		[Token(Token = "0x60015FB")]
		[Address(RVA = "0x101C4F8", Offset = "0x101C4F8", VA = "0x101C4F8")]
		public static List<Subtitle> LoadSubtitlesSRT(string data)
		{
			return null;
		}
	}
	[Token(Token = "0x2000168")]
	public sealed class NullMediaPlayer : BaseMediaPlayer
	{
		[Token(Token = "0x40005CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _isPlaying;

		[Token(Token = "0x40005CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool _isPaused;

		[Token(Token = "0x40005CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float _currentTime;

		[Token(Token = "0x40005D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float _volume;

		[Token(Token = "0x40005D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float _playbackRate;

		[Token(Token = "0x40005D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _bLoop;

		[Token(Token = "0x40005D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int _Width;

		[Token(Token = "0x40005D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int _height;

		[Token(Token = "0x40005D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Texture2D _texture;

		[Token(Token = "0x40005D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Texture2D _texture_AVPro;

		[Token(Token = "0x40005D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Texture2D _texture_AVPro1;

		[Token(Token = "0x40005D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _fakeFlipTime;

		[Token(Token = "0x40005D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int _frameCount;

		[Token(Token = "0x40005DA")]
		private const float FrameRate = 10f;

		[Token(Token = "0x60015FC")]
		[Address(RVA = "0xD2CED8", Offset = "0xD2CED8", VA = "0xD2CED8", Slot = "90")]
		public override string GetVersion()
		{
			return null;
		}

		[Token(Token = "0x60015FD")]
		[Address(RVA = "0xD2CF20", Offset = "0xD2CF20", VA = "0xD2CF20", Slot = "91")]
		public override bool OpenVideoFromFile(string path, long offset, string httpHeaderJson, uint sourceSamplerate = 0u, uint sourceChannels = 0u, int forceFileFormat = 0)
		{
			return default(bool);
		}

		[Token(Token = "0x60015FE")]
		[Address(RVA = "0xD2D040", Offset = "0xD2D040", VA = "0xD2D040", Slot = "96")]
		public override void CloseVideo()
		{
		}

		[Token(Token = "0x60015FF")]
		[Address(RVA = "0xD2D074", Offset = "0xD2D074", VA = "0xD2D074", Slot = "97")]
		public override void SetLooping(bool bLooping)
		{
		}

		[Token(Token = "0x6001600")]
		[Address(RVA = "0xD2D080", Offset = "0xD2D080", VA = "0xD2D080", Slot = "98")]
		public override bool IsLooping()
		{
			return default(bool);
		}

		[Token(Token = "0x6001601")]
		[Address(RVA = "0xD2D088", Offset = "0xD2D088", VA = "0xD2D088", Slot = "99")]
		public override bool HasMetaData()
		{
			return default(bool);
		}

		[Token(Token = "0x6001602")]
		[Address(RVA = "0xD2D090", Offset = "0xD2D090", VA = "0xD2D090", Slot = "100")]
		public override bool CanPlay()
		{
			return default(bool);
		}

		[Token(Token = "0x6001603")]
		[Address(RVA = "0xD2D098", Offset = "0xD2D098", VA = "0xD2D098", Slot = "118")]
		public override bool HasAudio()
		{
			return default(bool);
		}

		[Token(Token = "0x6001604")]
		[Address(RVA = "0xD2D0A0", Offset = "0xD2D0A0", VA = "0xD2D0A0", Slot = "119")]
		public override bool HasVideo()
		{
			return default(bool);
		}

		[Token(Token = "0x6001605")]
		[Address(RVA = "0xD2D0A8", Offset = "0xD2D0A8", VA = "0xD2D0A8", Slot = "101")]
		public override void Play()
		{
		}

		[Token(Token = "0x6001606")]
		[Address(RVA = "0xD2D0B8", Offset = "0xD2D0B8", VA = "0xD2D0B8", Slot = "102")]
		public override void Pause()
		{
		}

		[Token(Token = "0x6001607")]
		[Address(RVA = "0xD2D0C4", Offset = "0xD2D0C4", VA = "0xD2D0C4", Slot = "103")]
		public override void Stop()
		{
		}

		[Token(Token = "0x6001608")]
		[Address(RVA = "0xD2D0CC", Offset = "0xD2D0CC", VA = "0xD2D0CC", Slot = "120")]
		public override bool IsSeeking()
		{
			return default(bool);
		}

		[Token(Token = "0x6001609")]
		[Address(RVA = "0xD2D0D4", Offset = "0xD2D0D4", VA = "0xD2D0D4", Slot = "121")]
		public override bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x600160A")]
		[Address(RVA = "0xD2D0DC", Offset = "0xD2D0DC", VA = "0xD2D0DC", Slot = "122")]
		public override bool IsPaused()
		{
			return default(bool);
		}

		[Token(Token = "0x600160B")]
		[Address(RVA = "0xD2D0E4", Offset = "0xD2D0E4", VA = "0xD2D0E4", Slot = "123")]
		public override bool IsFinished()
		{
			return default(bool);
		}

		[Token(Token = "0x600160C")]
		[Address(RVA = "0xD2D128", Offset = "0xD2D128", VA = "0xD2D128", Slot = "124")]
		public override bool IsBuffering()
		{
			return default(bool);
		}

		[Token(Token = "0x600160D")]
		[Address(RVA = "0xD2D130", Offset = "0xD2D130", VA = "0xD2D130", Slot = "113")]
		public override float GetDurationMs()
		{
			return default(float);
		}

		[Token(Token = "0x600160E")]
		[Address(RVA = "0xD2D13C", Offset = "0xD2D13C", VA = "0xD2D13C", Slot = "114")]
		public override int GetVideoWidth()
		{
			return default(int);
		}

		[Token(Token = "0x600160F")]
		[Address(RVA = "0xD2D144", Offset = "0xD2D144", VA = "0xD2D144", Slot = "115")]
		public override int GetVideoHeight()
		{
			return default(int);
		}

		[Token(Token = "0x6001610")]
		[Address(RVA = "0xD2D14C", Offset = "0xD2D14C", VA = "0xD2D14C", Slot = "117")]
		public override float GetVideoDisplayRate()
		{
			return default(float);
		}

		[Token(Token = "0x6001611")]
		[Address(RVA = "0xD2D154", Offset = "0xD2D154", VA = "0xD2D154", Slot = "127")]
		public override Texture GetTexture(int index)
		{
			return null;
		}

		[Token(Token = "0x6001612")]
		[Address(RVA = "0xD2D15C", Offset = "0xD2D15C", VA = "0xD2D15C", Slot = "128")]
		public override int GetTextureFrameCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001613")]
		[Address(RVA = "0xD2D164", Offset = "0xD2D164", VA = "0xD2D164", Slot = "130")]
		public override bool RequiresVerticalFlip()
		{
			return default(bool);
		}

		[Token(Token = "0x6001614")]
		[Address(RVA = "0xD2D16C", Offset = "0xD2D16C", VA = "0xD2D16C", Slot = "104")]
		public override void Rewind()
		{
		}

		[Token(Token = "0x6001615")]
		[Address(RVA = "0xD2D180", Offset = "0xD2D180", VA = "0xD2D180", Slot = "105")]
		public override void Seek(float timeMs)
		{
		}

		[Token(Token = "0x6001616")]
		[Address(RVA = "0xD2D188", Offset = "0xD2D188", VA = "0xD2D188", Slot = "106")]
		public override void SeekFast(float timeMs)
		{
		}

		[Token(Token = "0x6001617")]
		[Address(RVA = "0xD2D190", Offset = "0xD2D190", VA = "0xD2D190", Slot = "107")]
		public override void SeekWithTolerance(float timeMs, float beforeMs, float afterMs)
		{
		}

		[Token(Token = "0x6001618")]
		[Address(RVA = "0xD2D198", Offset = "0xD2D198", VA = "0xD2D198", Slot = "108")]
		public override float GetCurrentTimeMs()
		{
			return default(float);
		}

		[Token(Token = "0x6001619")]
		[Address(RVA = "0xD2D1A0", Offset = "0xD2D1A0", VA = "0xD2D1A0", Slot = "112")]
		public override void SetPlaybackRate(float rate)
		{
		}

		[Token(Token = "0x600161A")]
		[Address(RVA = "0xD2D1A8", Offset = "0xD2D1A8", VA = "0xD2D1A8", Slot = "111")]
		public override float GetPlaybackRate()
		{
			return default(float);
		}

		[Token(Token = "0x600161B")]
		[Address(RVA = "0xD2D1B0", Offset = "0xD2D1B0", VA = "0xD2D1B0", Slot = "160")]
		public override float GetBufferingProgress()
		{
			return default(float);
		}

		[Token(Token = "0x600161C")]
		[Address(RVA = "0xD2D1B8", Offset = "0xD2D1B8", VA = "0xD2D1B8", Slot = "132")]
		public override void MuteAudio(bool bMuted)
		{
		}

		[Token(Token = "0x600161D")]
		[Address(RVA = "0xD2D1BC", Offset = "0xD2D1BC", VA = "0xD2D1BC", Slot = "133")]
		public override bool IsMuted()
		{
			return default(bool);
		}

		[Token(Token = "0x600161E")]
		[Address(RVA = "0xD2D1C4", Offset = "0xD2D1C4", VA = "0xD2D1C4", Slot = "134")]
		public override void SetVolume(float volume)
		{
		}

		[Token(Token = "0x600161F")]
		[Address(RVA = "0xD2D1CC", Offset = "0xD2D1CC", VA = "0xD2D1CC", Slot = "136")]
		public override float GetVolume()
		{
			return default(float);
		}

		[Token(Token = "0x6001620")]
		[Address(RVA = "0xD2D1D4", Offset = "0xD2D1D4", VA = "0xD2D1D4", Slot = "138")]
		public override int GetAudioTrackCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001621")]
		[Address(RVA = "0xD2D1DC", Offset = "0xD2D1DC", VA = "0xD2D1DC", Slot = "140")]
		public override int GetCurrentAudioTrack()
		{
			return default(int);
		}

		[Token(Token = "0x6001622")]
		[Address(RVA = "0xD2D1E4", Offset = "0xD2D1E4", VA = "0xD2D1E4", Slot = "141")]
		public override void SetAudioTrack(int index)
		{
		}

		[Token(Token = "0x6001623")]
		[Address(RVA = "0xD2D1E8", Offset = "0xD2D1E8", VA = "0xD2D1E8", Slot = "152")]
		public override int GetVideoTrackCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001624")]
		[Address(RVA = "0xD2D1F0", Offset = "0xD2D1F0", VA = "0xD2D1F0", Slot = "154")]
		public override int GetCurrentVideoTrack()
		{
			return default(int);
		}

		[Token(Token = "0x6001625")]
		[Address(RVA = "0xD2D1F8", Offset = "0xD2D1F8", VA = "0xD2D1F8", Slot = "142")]
		public override string GetCurrentAudioTrackId()
		{
			return null;
		}

		[Token(Token = "0x6001626")]
		[Address(RVA = "0xD2D240", Offset = "0xD2D240", VA = "0xD2D240", Slot = "143")]
		public override int GetCurrentAudioTrackBitrate()
		{
			return default(int);
		}

		[Token(Token = "0x6001627")]
		[Address(RVA = "0xD2D248", Offset = "0xD2D248", VA = "0xD2D248", Slot = "155")]
		public override void SetVideoTrack(int index)
		{
		}

		[Token(Token = "0x6001628")]
		[Address(RVA = "0xD2D24C", Offset = "0xD2D24C", VA = "0xD2D24C", Slot = "156")]
		public override string GetCurrentVideoTrackId()
		{
			return null;
		}

		[Token(Token = "0x6001629")]
		[Address(RVA = "0xD2D294", Offset = "0xD2D294", VA = "0xD2D294", Slot = "157")]
		public override int GetCurrentVideoTrackBitrate()
		{
			return default(int);
		}

		[Token(Token = "0x600162A")]
		[Address(RVA = "0xD2D29C", Offset = "0xD2D29C", VA = "0xD2D29C", Slot = "158")]
		public override float GetVideoFrameRate()
		{
			return default(float);
		}

		[Token(Token = "0x600162B")]
		[Address(RVA = "0xD2D2A4", Offset = "0xD2D2A4", VA = "0xD2D2A4", Slot = "161")]
		public override void Update()
		{
		}

		[Token(Token = "0x600162C")]
		[Address(RVA = "0xD2D408", Offset = "0xD2D408", VA = "0xD2D408", Slot = "162")]
		public override void Render()
		{
		}

		[Token(Token = "0x600162D")]
		[Address(RVA = "0xD2D40C", Offset = "0xD2D40C", VA = "0xD2D40C", Slot = "163")]
		public override void Dispose()
		{
		}

		[Token(Token = "0x600162E")]
		[Address(RVA = "0xD2A0BC", Offset = "0xD2A0BC", VA = "0xD2A0BC")]
		public NullMediaPlayer()
		{
		}
	}
	[Token(Token = "0x2000169")]
	public class Resampler
	{
		[Token(Token = "0x2000390")]
		private class TimestampedRenderTexture
		{
			[Token(Token = "0x4000F1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RenderTexture texture;

			[Token(Token = "0x4000F1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public long timestamp;

			[Token(Token = "0x4000F1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool used;

			[Token(Token = "0x6002CA6")]
			[Address(RVA = "0xD2DE78", Offset = "0xD2DE78", VA = "0xD2DE78")]
			public TimestampedRenderTexture()
			{
			}
		}

		[Token(Token = "0x2000391")]
		public enum ResampleMode
		{
			[Token(Token = "0x4000F21")]
			POINT,
			[Token(Token = "0x4000F22")]
			LINEAR
		}

		[Token(Token = "0x40005DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<TimestampedRenderTexture[]> _buffer;

		[Token(Token = "0x40005DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private MediaPlayer _mediaPlayer;

		[Token(Token = "0x40005DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RenderTexture[] _outputTexture;

		[Token(Token = "0x40005DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int _start;

		[Token(Token = "0x40005DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int _end;

		[Token(Token = "0x40005E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int _bufferSize;

		[Token(Token = "0x40005E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private long _baseTimestamp;

		[Token(Token = "0x40005E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float _elapsedTimeSinceBase;

		[Token(Token = "0x40005E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _blendMat;

		[Token(Token = "0x40005E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ResampleMode _resampleMode;

		[Token(Token = "0x40005E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string _name;

		[Token(Token = "0x40005E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private long _lastTimeStamp;

		[Token(Token = "0x40005E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int _droppedFrames;

		[Token(Token = "0x40005E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private long _lastDisplayedTimestamp;

		[Token(Token = "0x40005E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int _frameDisplayedTimer;

		[Token(Token = "0x40005EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private long _currentDisplayedTimestamp;

		[Token(Token = "0x40005EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x941A94", Offset = "0x941A94")]
		private float <LastT>k__BackingField;

		[Token(Token = "0x40005EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x941AA4", Offset = "0x941AA4")]
		private long <TextureTimeStamp>k__BackingField;

		[Token(Token = "0x40005ED")]
		private const string ShaderPropT = "_t";

		[Token(Token = "0x40005EE")]
		private const string ShaderPropAftertex = "_AfterTex";

		[Token(Token = "0x40005EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int _propAfterTex;

		[Token(Token = "0x40005F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private int _propT;

		[Token(Token = "0x17000078")]
		public int DroppedFrames
		{
			[Token(Token = "0x600162F")]
			[Address(RVA = "0xD2D410", Offset = "0xD2D410", VA = "0xD2D410")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000079")]
		public int FrameDisplayedTimer
		{
			[Token(Token = "0x6001630")]
			[Address(RVA = "0xD2D418", Offset = "0xD2D418", VA = "0xD2D418")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700007A")]
		public long BaseTimestamp
		{
			[Token(Token = "0x6001631")]
			[Address(RVA = "0xD2D420", Offset = "0xD2D420", VA = "0xD2D420")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x6001632")]
			[Address(RVA = "0xD2D428", Offset = "0xD2D428", VA = "0xD2D428")]
			set
			{
			}
		}

		[Token(Token = "0x1700007B")]
		public float ElapsedTimeSinceBase
		{
			[Token(Token = "0x6001633")]
			[Address(RVA = "0xD2D430", Offset = "0xD2D430", VA = "0xD2D430")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001634")]
			[Address(RVA = "0xD2D438", Offset = "0xD2D438", VA = "0xD2D438")]
			set
			{
			}
		}

		[Token(Token = "0x1700007C")]
		public float LastT
		{
			[Token(Token = "0x6001635")]
			[Address(RVA = "0xD2D440", Offset = "0xD2D440", VA = "0xD2D440")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A6AB0", Offset = "0x9A6AB0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001636")]
			[Address(RVA = "0xD2D448", Offset = "0xD2D448", VA = "0xD2D448")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A6AC0", Offset = "0x9A6AC0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700007D")]
		public long TextureTimeStamp
		{
			[Token(Token = "0x6001637")]
			[Address(RVA = "0xD2D450", Offset = "0xD2D450", VA = "0xD2D450")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A6AD0", Offset = "0x9A6AD0")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x6001638")]
			[Address(RVA = "0xD2D458", Offset = "0xD2D458", VA = "0xD2D458")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A6AE0", Offset = "0x9A6AE0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700007E")]
		public Texture[] OutputTexture
		{
			[Token(Token = "0x600163B")]
			[Address(RVA = "0xD2D568", Offset = "0xD2D568", VA = "0xD2D568")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001639")]
		[Address(RVA = "0xD2D460", Offset = "0xD2D460", VA = "0xD2D460")]
		public void OnVideoEvent(MediaPlayer mp, MediaPlayerEvent.EventType et, ErrorCode errorCode)
		{
		}

		[Token(Token = "0x600163A")]
		[Address(RVA = "0xD28658", Offset = "0xD28658", VA = "0xD28658")]
		public Resampler(MediaPlayer player, string name, int bufferSize = 2, ResampleMode resampleMode = ResampleMode.LINEAR)
		{
		}

		[Token(Token = "0x600163C")]
		[Address(RVA = "0xD27324", Offset = "0xD27324", VA = "0xD27324")]
		public void Reset()
		{
		}

		[Token(Token = "0x600163D")]
		[Address(RVA = "0xD299C4", Offset = "0xD299C4", VA = "0xD299C4")]
		public void Release()
		{
		}

		[Token(Token = "0x600163E")]
		[Address(RVA = "0xD2D720", Offset = "0xD2D720", VA = "0xD2D720")]
		private void ReleaseRenderTextures()
		{
		}

		[Token(Token = "0x600163F")]
		[Address(RVA = "0xD2D970", Offset = "0xD2D970", VA = "0xD2D970")]
		private void ConstructRenderTextures()
		{
		}

		[Token(Token = "0x6001640")]
		[Address(RVA = "0xD2DE80", Offset = "0xD2DE80", VA = "0xD2DE80")]
		private bool CheckRenderTexturesValid()
		{
			return default(bool);
		}

		[Token(Token = "0x6001641")]
		[Address(RVA = "0xD2E27C", Offset = "0xD2E27C", VA = "0xD2E27C")]
		private int FindBeforeFrameIndex(int frameIdx)
		{
			return default(int);
		}

		[Token(Token = "0x6001642")]
		[Address(RVA = "0xD2E460", Offset = "0xD2E460", VA = "0xD2E460")]
		private int findClosestFrame(int frameIdx)
		{
			return default(int);
		}

		[Token(Token = "0x6001643")]
		[Address(RVA = "0xD2E630", Offset = "0xD2E630", VA = "0xD2E630")]
		private void PointUpdate()
		{
		}

		[Token(Token = "0x6001644")]
		[Address(RVA = "0xD2E7D0", Offset = "0xD2E7D0", VA = "0xD2E7D0")]
		private void SampleFrame(int frameIdx, int bufferIdx)
		{
		}

		[Token(Token = "0x6001645")]
		[Address(RVA = "0xD2E99C", Offset = "0xD2E99C", VA = "0xD2E99C")]
		private void SampleFrames(int bufferIdx, int frameIdx1, int frameIdx2, float t)
		{
		}

		[Token(Token = "0x6001646")]
		[Address(RVA = "0xD2ECA0", Offset = "0xD2ECA0", VA = "0xD2ECA0")]
		private void LinearUpdate()
		{
		}

		[Token(Token = "0x6001647")]
		[Address(RVA = "0xD2D570", Offset = "0xD2D570", VA = "0xD2D570")]
		private void InvalidateBuffer()
		{
		}

		[Token(Token = "0x6001648")]
		[Address(RVA = "0xD2895C", Offset = "0xD2895C", VA = "0xD2895C")]
		public void Update()
		{
		}

		[Token(Token = "0x6001649")]
		[Address(RVA = "0xD2970C", Offset = "0xD2970C", VA = "0xD2970C")]
		public void UpdateTimestamp()
		{
		}
	}
	[Token(Token = "0x200016A")]
	public abstract class Stream
	{
		[Token(Token = "0x2000392")]
		public struct Chunk
		{
			[Token(Token = "0x4000F23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string name;
		}

		[Token(Token = "0x1700007F")]
		public abstract int Width
		{
			[Token(Token = "0x600164A")]
			get;
		}

		[Token(Token = "0x17000080")]
		public abstract int Height
		{
			[Token(Token = "0x600164B")]
			get;
		}

		[Token(Token = "0x17000081")]
		public abstract int Bandwidth
		{
			[Token(Token = "0x600164C")]
			get;
		}

		[Token(Token = "0x17000082")]
		public abstract string URL
		{
			[Token(Token = "0x600164D")]
			get;
		}

		[Token(Token = "0x600164E")]
		public abstract List<Chunk> GetAllChunks();

		[Token(Token = "0x600164F")]
		public abstract List<Chunk> GetChunks();

		[Token(Token = "0x6001650")]
		public abstract List<Stream> GetAllStreams();

		[Token(Token = "0x6001651")]
		public abstract List<Stream> GetStreams();

		[Token(Token = "0x6001652")]
		[Address(RVA = "0xD2EEA8", Offset = "0xD2EEA8", VA = "0xD2EEA8")]
		protected Stream()
		{
		}
	}
}
namespace RenderHeads.Media.AVProVideo.Demos
{
	[Token(Token = "0x200016B")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x93F0D8", Offset = "0x93F0D8")]
	public class AutoRotate : MonoBehaviour
	{
		[Token(Token = "0x40005F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float x;

		[Token(Token = "0x40005F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float y;

		[Token(Token = "0x40005F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float z;

		[Token(Token = "0x40005F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float _timer;

		[Token(Token = "0x6001653")]
		[Address(RVA = "0x1020778", Offset = "0x1020778", VA = "0x1020778")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001654")]
		[Address(RVA = "0x1020800", Offset = "0x1020800", VA = "0x1020800")]
		private void Update()
		{
		}

		[Token(Token = "0x6001655")]
		[Address(RVA = "0x102077C", Offset = "0x102077C", VA = "0x102077C")]
		private void Randomise()
		{
		}

		[Token(Token = "0x6001656")]
		[Address(RVA = "0x10208C8", Offset = "0x10208C8", VA = "0x10208C8")]
		public AutoRotate()
		{
		}
	}
	[Token(Token = "0x200016C")]
	public class ChangeVideoExample : MonoBehaviour
	{
		[Token(Token = "0x40005F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MediaPlayer _mediaPlayer;

		[Token(Token = "0x6001657")]
		[Address(RVA = "0x1020BEC", Offset = "0x1020BEC", VA = "0x1020BEC")]
		public void LoadVideo(string filePath)
		{
		}

		[Token(Token = "0x6001658")]
		[Address(RVA = "0x1020C14", Offset = "0x1020C14", VA = "0x1020C14")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001659")]
		[Address(RVA = "0x1020DD0", Offset = "0x1020DD0", VA = "0x1020DD0")]
		public ChangeVideoExample()
		{
		}
	}
	[Token(Token = "0x200016D")]
	public class DemoInfo : MonoBehaviour
	{
		[Token(Token = "0x40005F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string _title;

		[Token(Token = "0x40005F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Multiline]
		public string _description;

		[Token(Token = "0x40005F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MediaPlayer _media;

		[Token(Token = "0x600165A")]
		[Address(RVA = "0x1020DD8", Offset = "0x1020DD8", VA = "0x1020DD8")]
		public DemoInfo()
		{
		}
	}
	[Token(Token = "0x200016E")]
	public class FrameExtract : MonoBehaviour
	{
		[Token(Token = "0x40005F9")]
		private const int NumFrames = 8;

		[Token(Token = "0x40005FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MediaPlayer _mediaPlayer;

		[Token(Token = "0x40005FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool _accurateSeek;

		[Token(Token = "0x40005FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int _timeoutMs;

		[Token(Token = "0x40005FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GUISkin _skin;

		[Token(Token = "0x40005FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool _asyncExtract;

		[Token(Token = "0x40005FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _timeStepSeconds;

		[Token(Token = "0x4000600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int _frameIndex;

		[Token(Token = "0x4000601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Texture2D _texture;

		[Token(Token = "0x4000602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private RenderTexture _displaySheet;

		[Token(Token = "0x600165B")]
		[Address(RVA = "0x1020DE0", Offset = "0x1020DE0", VA = "0x1020DE0")]
		private void Start()
		{
		}

		[Token(Token = "0x600165C")]
		[Address(RVA = "0x1020F38", Offset = "0x1020F38", VA = "0x1020F38")]
		public void OnMediaPlayerEvent(MediaPlayer mp, MediaPlayerEvent.EventType et, ErrorCode errorCode)
		{
		}

		[Token(Token = "0x600165D")]
		[Address(RVA = "0x1020F94", Offset = "0x1020F94", VA = "0x1020F94")]
		private void OnNewMediaReady()
		{
		}

		[Token(Token = "0x600165E")]
		[Address(RVA = "0x10211F0", Offset = "0x10211F0", VA = "0x10211F0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600165F")]
		[Address(RVA = "0x10212DC", Offset = "0x10212DC", VA = "0x10212DC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001660")]
		[Address(RVA = "0x1021470", Offset = "0x1021470", VA = "0x1021470")]
		private void ProcessExtractedFrame(Texture2D texture)
		{
		}

		[Token(Token = "0x6001661")]
		[Address(RVA = "0x1021374", Offset = "0x1021374", VA = "0x1021374")]
		private void ExtractNextFrame()
		{
		}

		[Token(Token = "0x6001662")]
		[Address(RVA = "0x102168C", Offset = "0x102168C", VA = "0x102168C")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001663")]
		[Address(RVA = "0x1021AC8", Offset = "0x1021AC8", VA = "0x1021AC8")]
		public FrameExtract()
		{
		}
	}
	[Token(Token = "0x200016F")]
	public class Mapping3D : MonoBehaviour
	{
		[Token(Token = "0x4000603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _cubePrefab;

		[Token(Token = "0x4000604")]
		private const int MaxCubes = 48;

		[Token(Token = "0x4000605")]
		private const float SpawnTime = 0.25f;

		[Token(Token = "0x4000606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float _timer;

		[Token(Token = "0x4000607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<GameObject> _cubes;

		[Token(Token = "0x6001664")]
		[Address(RVA = "0x1021E38", Offset = "0x1021E38", VA = "0x1021E38")]
		private void Update()
		{
		}

		[Token(Token = "0x6001665")]
		[Address(RVA = "0x1021ED8", Offset = "0x1021ED8", VA = "0x1021ED8")]
		private void SpawnCube()
		{
		}

		[Token(Token = "0x6001666")]
		[Address(RVA = "0x10220E0", Offset = "0x10220E0", VA = "0x10220E0")]
		private void RemoveCube()
		{
		}

		[Token(Token = "0x6001667")]
		[Address(RVA = "0x102218C", Offset = "0x102218C", VA = "0x102218C")]
		public Mapping3D()
		{
		}
	}
	[Token(Token = "0x2000170")]
	public class SampleApp_Multiple : MonoBehaviour
	{
		[Token(Token = "0x4000608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string m_videoPath;

		[Token(Token = "0x4000609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_NumVideosAdded;

		[Token(Token = "0x400060A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<DisplayUGUI> m_aAddedVideos;

		[Token(Token = "0x6001668")]
		[Address(RVA = "0x1022D68", Offset = "0x1022D68", VA = "0x1022D68")]
		private void Update()
		{
		}

		[Token(Token = "0x6001669")]
		[Address(RVA = "0x1022FF0", Offset = "0x1022FF0", VA = "0x1022FF0")]
		private void UpdateVideosLayout()
		{
		}

		[Token(Token = "0x600166A")]
		[Address(RVA = "0x1023270", Offset = "0x1023270", VA = "0x1023270")]
		public void AddVideoClicked()
		{
		}

		[Token(Token = "0x600166B")]
		[Address(RVA = "0x1023528", Offset = "0x1023528", VA = "0x1023528")]
		public void RemoveVideoClicked()
		{
		}

		[Token(Token = "0x600166C")]
		[Address(RVA = "0x10236B4", Offset = "0x10236B4", VA = "0x10236B4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600166D")]
		[Address(RVA = "0x1023808", Offset = "0x1023808", VA = "0x1023808")]
		public SampleApp_Multiple()
		{
		}
	}
	[Token(Token = "0x2000171")]
	public class ChangeAudioTrack : MonoBehaviour
	{
		[Token(Token = "0x400060B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MediaPlayer _mediaPlayer;

		[Token(Token = "0x400060C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int _trackIndex;

		[Token(Token = "0x400060D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool _isQueued;

		[Token(Token = "0x600166E")]
		[Address(RVA = "0x10208D0", Offset = "0x10208D0", VA = "0x10208D0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600166F")]
		[Address(RVA = "0x10208DC", Offset = "0x10208DC", VA = "0x10208DC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001670")]
		[Address(RVA = "0x1020918", Offset = "0x1020918", VA = "0x1020918")]
		private bool IsVideoLoaded()
		{
			return default(bool);
		}

		[Token(Token = "0x6001671")]
		[Address(RVA = "0x1020A24", Offset = "0x1020A24", VA = "0x1020A24")]
		private static bool DoChangeAudioTrack(MediaPlayer mp, int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001672")]
		[Address(RVA = "0x1020BE4", Offset = "0x1020BE4", VA = "0x1020BE4")]
		public ChangeAudioTrack()
		{
		}
	}
	[Token(Token = "0x2000172")]
	public class LoadFromBuffer : MonoBehaviour
	{
		[Token(Token = "0x400060E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MediaPlayer _mp;

		[Token(Token = "0x400060F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string _filename;

		[Token(Token = "0x6001673")]
		[Address(RVA = "0x1021AE0", Offset = "0x1021AE0", VA = "0x1021AE0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001674")]
		[Address(RVA = "0x1021BA8", Offset = "0x1021BA8", VA = "0x1021BA8")]
		public LoadFromBuffer()
		{
		}
	}
	[Token(Token = "0x2000173")]
	public class LoadFromBufferInChunks : MonoBehaviour
	{
		[Token(Token = "0x4000610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MediaPlayer _mp;

		[Token(Token = "0x4000611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string _filename;

		[Token(Token = "0x6001675")]
		[Address(RVA = "0x1021C08", Offset = "0x1021C08", VA = "0x1021C08")]
		private void Start()
		{
		}

		[Token(Token = "0x6001676")]
		[Address(RVA = "0x1021DD8", Offset = "0x1021DD8", VA = "0x1021DD8")]
		public LoadFromBufferInChunks()
		{
		}
	}
	[Token(Token = "0x2000174")]
	public class NativeMediaOpen : MonoBehaviour
	{
		[Token(Token = "0x4000612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MediaPlayer _player;

		[Token(Token = "0x6001677")]
		[Address(RVA = "0x1022208", Offset = "0x1022208", VA = "0x1022208")]
		private void Start()
		{
		}

		[Token(Token = "0x6001678")]
		[Address(RVA = "0x102220C", Offset = "0x102220C", VA = "0x102220C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001679")]
		[Address(RVA = "0x1022210", Offset = "0x1022210", VA = "0x1022210")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x600167A")]
		[Address(RVA = "0x10224A4", Offset = "0x10224A4", VA = "0x10224A4")]
		public NativeMediaOpen()
		{
		}
	}
	[Token(Token = "0x2000175")]
	public class PlaybackSync : MonoBehaviour
	{
		[Token(Token = "0x2000393")]
		private enum State
		{
			[Token(Token = "0x4000F25")]
			Loading,
			[Token(Token = "0x4000F26")]
			Playing,
			[Token(Token = "0x4000F27")]
			Finished
		}

		[Token(Token = "0x4000613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MediaPlayer _masterPlayer;

		[Token(Token = "0x4000614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MediaPlayer[] _slavePlayers;

		[Token(Token = "0x4000615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float _toleranceMs;

		[Token(Token = "0x4000616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool _matchVideo;

		[Token(Token = "0x4000617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool _muteSlaves;

		[Token(Token = "0x4000618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private State _state;

		[Token(Token = "0x600167B")]
		[Address(RVA = "0x10224AC", Offset = "0x10224AC", VA = "0x10224AC")]
		private void Start()
		{
		}

		[Token(Token = "0x600167C")]
		[Address(RVA = "0x1022560", Offset = "0x1022560", VA = "0x1022560")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600167D")]
		[Address(RVA = "0x10229D4", Offset = "0x10229D4", VA = "0x10229D4")]
		private bool IsAllVideosLoaded()
		{
			return default(bool);
		}

		[Token(Token = "0x600167E")]
		[Address(RVA = "0x1022B50", Offset = "0x1022B50", VA = "0x1022B50")]
		private static bool IsVideoLoaded(MediaPlayer player)
		{
			return default(bool);
		}

		[Token(Token = "0x600167F")]
		[Address(RVA = "0x1022A54", Offset = "0x1022A54", VA = "0x1022A54")]
		private static bool IsPlaybackFinished(MediaPlayer player)
		{
			return default(bool);
		}

		[Token(Token = "0x6001680")]
		[Address(RVA = "0x1022D50", Offset = "0x1022D50", VA = "0x1022D50")]
		public PlaybackSync()
		{
		}
	}
	[Token(Token = "0x2000176")]
	public class StartEndPoint : MonoBehaviour
	{
		[Token(Token = "0x4000619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MediaPlayer _mediaPlayer;

		[Token(Token = "0x400061A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float _startPointSeconds;

		[Token(Token = "0x400061B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float _endPointSeconds;

		[Token(Token = "0x400061C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool _loop;

		[Token(Token = "0x400061D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x941B44", Offset = "0x941B44")]
		public float _startLoopSeconds;

		[Token(Token = "0x400061E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _isStartQueued;

		[Token(Token = "0x6001681")]
		[Address(RVA = "0x1026E90", Offset = "0x1026E90", VA = "0x1026E90")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001682")]
		[Address(RVA = "0x1026E9C", Offset = "0x1026E9C", VA = "0x1026E9C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001683")]
		[Address(RVA = "0x1026F08", Offset = "0x1026F08", VA = "0x1026F08")]
		private static bool IsVideoLoaded(MediaPlayer mp)
		{
			return default(bool);
		}

		[Token(Token = "0x6001684")]
		[Address(RVA = "0x1027004", Offset = "0x1027004", VA = "0x1027004")]
		private static void DoStart(MediaPlayer mp, float positionSeconds)
		{
		}

		[Token(Token = "0x6001685")]
		[Address(RVA = "0x10270E4", Offset = "0x10270E4", VA = "0x10270E4")]
		private static void DoCheckEnd(MediaPlayer mp, float positionSeconds)
		{
		}

		[Token(Token = "0x6001686")]
		[Address(RVA = "0x1027254", Offset = "0x1027254", VA = "0x1027254")]
		private static void DoCheckLoop(MediaPlayer mp, float positionSeconds, float positionLoop)
		{
		}

		[Token(Token = "0x6001687")]
		[Address(RVA = "0x1027430", Offset = "0x1027430", VA = "0x1027430")]
		public StartEndPoint()
		{
		}
	}
	[Token(Token = "0x2000177")]
	public class VideoTrigger : MonoBehaviour
	{
		[Token(Token = "0x400061F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MediaPlayer _mediaPlayer;

		[Token(Token = "0x4000620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _fadeTimeMs;

		[Token(Token = "0x4000621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float _fade;

		[Token(Token = "0x4000622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float _fadeDirection;

		[Token(Token = "0x6001688")]
		[Address(RVA = "0x1029150", Offset = "0x1029150", VA = "0x1029150")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001689")]
		[Address(RVA = "0x10291E4", Offset = "0x10291E4", VA = "0x10291E4")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x600168A")]
		[Address(RVA = "0x1029264", Offset = "0x1029264", VA = "0x1029264")]
		private void Update()
		{
		}

		[Token(Token = "0x600168B")]
		[Address(RVA = "0x1029414", Offset = "0x1029414", VA = "0x1029414")]
		public VideoTrigger()
		{
		}
	}
	[Token(Token = "0x2000178")]
	public class SimpleController : MonoBehaviour
	{
		[Token(Token = "0x2000394")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93FF10", Offset = "0x93FF10")]
		private sealed class <LoadVideoWithFading>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SimpleController <>4__this;

			[Token(Token = "0x4000F2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <fade>5__2;

			[Token(Token = "0x17000201")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002CAA")]
				[Address(RVA = "0x10268F8", Offset = "0x10268F8", VA = "0x10268F8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000202")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002CAC")]
				[Address(RVA = "0x1026960", Offset = "0x1026960", VA = "0x1026960", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002CA7")]
			[Address(RVA = "0x1024308", Offset = "0x1024308", VA = "0x1024308")]
			[DebuggerHidden]
			public <LoadVideoWithFading>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x6002CA8")]
			[Address(RVA = "0x1026408", Offset = "0x1026408", VA = "0x1026408", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002CA9")]
			[Address(RVA = "0x102640C", Offset = "0x102640C", VA = "0x102640C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002CAB")]
			[Address(RVA = "0x1026900", Offset = "0x1026900", VA = "0x1026900", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string _folder;

		[Token(Token = "0x4000624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] _filenames;

		[Token(Token = "0x4000625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string[] _streams;

		[Token(Token = "0x4000626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MediaPlayer _mediaPlayer;

		[Token(Token = "0x4000627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public DisplayIMGUI _display;

		[Token(Token = "0x4000628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GUISkin _guiSkin;

		[Token(Token = "0x4000629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int _width;

		[Token(Token = "0x400062A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int _height;

		[Token(Token = "0x400062B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float _durationSeconds;

		[Token(Token = "0x400062C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool _useFading;

		[Token(Token = "0x400062D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Queue<string> _eventLog;

		[Token(Token = "0x400062E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _eventTimer;

		[Token(Token = "0x400062F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private MediaPlayer.FileLocation _nextVideoLocation;

		[Token(Token = "0x4000630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private string _nextVideoPath;

		[Token(Token = "0x600168C")]
		[Address(RVA = "0x1023888", Offset = "0x1023888", VA = "0x1023888")]
		private void Start()
		{
		}

		[Token(Token = "0x600168D")]
		[Address(RVA = "0x1023938", Offset = "0x1023938", VA = "0x1023938")]
		public void OnMediaPlayerEvent(MediaPlayer mp, MediaPlayerEvent.EventType et, ErrorCode errorCode)
		{
		}

		[Token(Token = "0x600168E")]
		[Address(RVA = "0x1023B68", Offset = "0x1023B68", VA = "0x1023B68")]
		private void AddEvent(MediaPlayerEvent.EventType et)
		{
		}

		[Token(Token = "0x600168F")]
		[Address(RVA = "0x102396C", Offset = "0x102396C", VA = "0x102396C")]
		private void GatherProperties()
		{
		}

		[Token(Token = "0x6001690")]
		[Address(RVA = "0x1023CC8", Offset = "0x1023CC8", VA = "0x1023CC8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001691")]
		[Address(RVA = "0x1023E94", Offset = "0x1023E94", VA = "0x1023E94")]
		private void LoadVideo(string filePath, bool url = false)
		{
		}

		[Token(Token = "0x6001692")]
		[Address(RVA = "0x1023F84", Offset = "0x1023F84", VA = "0x1023F84")]
		private static bool VideoIsReady(MediaPlayer mp)
		{
			return default(bool);
		}

		[Token(Token = "0x6001693")]
		[Address(RVA = "0x10240A8", Offset = "0x10240A8", VA = "0x10240A8")]
		private static bool AudioIsReady(MediaPlayer mp)
		{
			return default(bool);
		}

		[Token(Token = "0x6001694")]
		[Address(RVA = "0x1024298", Offset = "0x1024298", VA = "0x1024298")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A6AF0", Offset = "0x9A6AF0")]
		private IEnumerator LoadVideoWithFading()
		{
			return null;
		}

		[Token(Token = "0x6001695")]
		[Address(RVA = "0x1024334", Offset = "0x1024334", VA = "0x1024334")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001696")]
		[Address(RVA = "0x1026298", Offset = "0x1026298", VA = "0x1026298")]
		public SimpleController()
		{
		}
	}
	[Token(Token = "0x2000179")]
	public class SphereDemo : MonoBehaviour
	{
		[Token(Token = "0x4000631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float _spinX;

		[Token(Token = "0x4000632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float _spinY;

		[Token(Token = "0x6001697")]
		[Address(RVA = "0x1026968", Offset = "0x1026968", VA = "0x1026968")]
		private void Start()
		{
		}

		[Token(Token = "0x6001698")]
		[Address(RVA = "0x1026A5C", Offset = "0x1026A5C", VA = "0x1026A5C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001699")]
		[Address(RVA = "0x1026A98", Offset = "0x1026A98", VA = "0x1026A98")]
		private void Update()
		{
		}

		[Token(Token = "0x600169A")]
		[Address(RVA = "0x1026E88", Offset = "0x1026E88", VA = "0x1026E88")]
		public SphereDemo()
		{
		}
	}
	[Token(Token = "0x200017A")]
	public class VCR : MonoBehaviour
	{
		[Token(Token = "0x4000633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MediaPlayer _mediaPlayer;

		[Token(Token = "0x4000634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MediaPlayer _mediaPlayerB;

		[Token(Token = "0x4000635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DisplayUGUI _mediaDisplay;

		[Token(Token = "0x4000636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RectTransform _bufferedSliderRect;

		[Token(Token = "0x4000637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Slider _videoSeekSlider;

		[Token(Token = "0x4000638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float _setVideoSeekSliderValue;

		[Token(Token = "0x4000639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool _wasPlayingOnScrub;

		[Token(Token = "0x400063A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Slider _audioVolumeSlider;

		[Token(Token = "0x400063B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float _setAudioVolumeSliderValue;

		[Token(Token = "0x400063C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Toggle _AutoStartToggle;

		[Token(Token = "0x400063D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Toggle _MuteToggle;

		[Token(Token = "0x400063E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public MediaPlayer.FileLocation _location;

		[Token(Token = "0x400063F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public string _folder;

		[Token(Token = "0x4000640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public string[] _videoFiles;

		[Token(Token = "0x4000641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _VideoIndex;

		[Token(Token = "0x4000642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Image _bufferedSliderImage;

		[Token(Token = "0x4000643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private MediaPlayer _loadingPlayer;

		[Token(Token = "0x17000083")]
		public MediaPlayer PlayingPlayer
		{
			[Token(Token = "0x600169B")]
			[Address(RVA = "0x1027438", Offset = "0x1027438", VA = "0x1027438")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000084")]
		public MediaPlayer LoadingPlayer
		{
			[Token(Token = "0x600169C")]
			[Address(RVA = "0x10274CC", Offset = "0x10274CC", VA = "0x10274CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600169D")]
		[Address(RVA = "0x10274D4", Offset = "0x10274D4", VA = "0x10274D4")]
		private void SwapPlayers()
		{
		}

		[Token(Token = "0x600169E")]
		[Address(RVA = "0x10276B0", Offset = "0x10276B0", VA = "0x10276B0")]
		public void OnOpenVideoFile()
		{
		}

		[Token(Token = "0x600169F")]
		[Address(RVA = "0x1027834", Offset = "0x1027834", VA = "0x1027834")]
		public void OnAutoStartChange()
		{
		}

		[Token(Token = "0x60016A0")]
		[Address(RVA = "0x10279F0", Offset = "0x10279F0", VA = "0x10279F0")]
		public void OnMuteChange()
		{
		}

		[Token(Token = "0x60016A1")]
		[Address(RVA = "0x1027BD8", Offset = "0x1027BD8", VA = "0x1027BD8")]
		public void OnPlayButton()
		{
		}

		[Token(Token = "0x60016A2")]
		[Address(RVA = "0x1027CE4", Offset = "0x1027CE4", VA = "0x1027CE4")]
		public void OnPauseButton()
		{
		}

		[Token(Token = "0x60016A3")]
		[Address(RVA = "0x1027DF0", Offset = "0x1027DF0", VA = "0x1027DF0")]
		public void OnVideoSeekSlider()
		{
		}

		[Token(Token = "0x60016A4")]
		[Address(RVA = "0x1028008", Offset = "0x1028008", VA = "0x1028008")]
		public void OnVideoSliderDown()
		{
		}

		[Token(Token = "0x60016A5")]
		[Address(RVA = "0x10281AC", Offset = "0x10281AC", VA = "0x10281AC")]
		public void OnVideoSliderUp()
		{
		}

		[Token(Token = "0x60016A6")]
		[Address(RVA = "0x10282BC", Offset = "0x10282BC", VA = "0x10282BC")]
		public void OnAudioVolumeSlider()
		{
		}

		[Token(Token = "0x60016A7")]
		[Address(RVA = "0x102856C", Offset = "0x102856C", VA = "0x102856C")]
		public void OnRewindButton()
		{
		}

		[Token(Token = "0x60016A8")]
		[Address(RVA = "0x1028678", Offset = "0x1028678", VA = "0x1028678")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016A9")]
		[Address(RVA = "0x1028684", Offset = "0x1028684", VA = "0x1028684")]
		private void Start()
		{
		}

		[Token(Token = "0x60016AA")]
		[Address(RVA = "0x1028928", Offset = "0x1028928", VA = "0x1028928")]
		private void Update()
		{
		}

		[Token(Token = "0x60016AB")]
		[Address(RVA = "0x1028F5C", Offset = "0x1028F5C", VA = "0x1028F5C")]
		public void OnVideoEvent(MediaPlayer mp, MediaPlayerEvent.EventType et, ErrorCode errorCode)
		{
		}

		[Token(Token = "0x60016AC")]
		[Address(RVA = "0x1029048", Offset = "0x1029048", VA = "0x1029048")]
		public VCR()
		{
		}
	}
}
namespace SystemTools
{
	[Token(Token = "0x200017B")]
	public class xxtea
	{
		[Token(Token = "0x60016AD")]
		[Address(RVA = "0x1A7904C", Offset = "0x1A7904C", VA = "0x1A7904C")]
		public static byte[] Encrypt(byte[] Data, byte[] Key)
		{
			return null;
		}

		[Token(Token = "0x60016AE")]
		[Address(RVA = "0x1A794A4", Offset = "0x1A794A4", VA = "0x1A794A4")]
		public static byte[] Decrypt(byte[] Data, byte[] Key)
		{
			return null;
		}

		[Token(Token = "0x60016AF")]
		[Address(RVA = "0x1A791C8", Offset = "0x1A791C8", VA = "0x1A791C8")]
		private static uint[] Encrypt(uint[] v, uint[] k)
		{
			return null;
		}

		[Token(Token = "0x60016B0")]
		[Address(RVA = "0x1A79504", Offset = "0x1A79504", VA = "0x1A79504")]
		private static uint[] Decrypt(uint[] v, uint[] k)
		{
			return null;
		}

		[Token(Token = "0x60016B1")]
		[Address(RVA = "0x1A790AC", Offset = "0x1A790AC", VA = "0x1A790AC")]
		private static uint[] ToUInt32Array(byte[] Data, bool IncludeLength)
		{
			return null;
		}

		[Token(Token = "0x60016B2")]
		[Address(RVA = "0x1A793B0", Offset = "0x1A793B0", VA = "0x1A793B0")]
		private static byte[] ToByteArray(uint[] Data, bool IncludeLength)
		{
			return null;
		}

		[Token(Token = "0x60016B3")]
		[Address(RVA = "0x1A79728", Offset = "0x1A79728", VA = "0x1A79728")]
		public static string Encrypt(string Target)
		{
			return null;
		}

		[Token(Token = "0x60016B4")]
		[Address(RVA = "0x1A79780", Offset = "0x1A79780", VA = "0x1A79780")]
		public static string Encrypt(string Target, string Key)
		{
			return null;
		}

		[Token(Token = "0x60016B5")]
		[Address(RVA = "0x1A79870", Offset = "0x1A79870", VA = "0x1A79870")]
		public static string Decrypt(string Target)
		{
			return null;
		}

		[Token(Token = "0x60016B6")]
		[Address(RVA = "0x1A798C8", Offset = "0x1A798C8", VA = "0x1A798C8")]
		public static string Decrypt(string Target, string Key)
		{
			return null;
		}

		[Token(Token = "0x60016B7")]
		[Address(RVA = "0x1A799B0", Offset = "0x1A799B0", VA = "0x1A799B0")]
		public xxtea()
		{
		}
	}
}
namespace EnhancedUI
{
	[Token(Token = "0x200017C")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x93F13C", Offset = "0x93F13C")]
	public class SmallList__HAIBAO__SWORD__<T>
	{
		[Token(Token = "0x4000644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T[] data;

		[Token(Token = "0x4000645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int Count;

		[Token(Token = "0x17000085")]
		public T Item
		{
			[Token(Token = "0x60016B8")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x60016B9")]
			set
			{
			}
		}

		[Token(Token = "0x60016BA")]
		private void ResizeArray()
		{
		}

		[Token(Token = "0x60016BB")]
		public void Clear()
		{
		}

		[Token(Token = "0x60016BC")]
		public T First()
		{
			return (T)null;
		}

		[Token(Token = "0x60016BD")]
		public T Last()
		{
			return (T)null;
		}

		[Token(Token = "0x60016BE")]
		public void Add(T item)
		{
		}

		[Token(Token = "0x60016BF")]
		public void AddStart(T item)
		{
		}

		[Token(Token = "0x60016C0")]
		public void Insert(T item, int index)
		{
		}

		[Token(Token = "0x60016C1")]
		public T RemoveStart()
		{
			return (T)null;
		}

		[Token(Token = "0x60016C2")]
		public T RemoveAt(int index)
		{
			return (T)null;
		}

		[Token(Token = "0x60016C3")]
		public T Remove(T item)
		{
			return (T)null;
		}

		[Token(Token = "0x60016C4")]
		public T RemoveEnd()
		{
			return (T)null;
		}

		[Token(Token = "0x60016C5")]
		public bool Contains(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x60016C6")]
		public SmallList__HAIBAO__SWORD__()
		{
		}
	}
}
namespace EnhancedUI.EnhancedScroller
{
	[Token(Token = "0x200017D")]
	public delegate void CellViewVisibilityChangedDelegate(EnhancedScrollerCellView cellView);
	[Token(Token = "0x200017E")]
	public delegate void CellViewWillRecycleDelegate(EnhancedScrollerCellView cellView);
	[Token(Token = "0x200017F")]
	public delegate void ScrollerScrolledDelegate(EnhancedScroller scroller, Vector2 val, float scrollPosition);
	[Token(Token = "0x2000180")]
	public delegate void ScrollerSnappedDelegate(EnhancedScroller scroller, int cellIndex, int dataIndex, EnhancedScrollerCellView cellView);
	[Token(Token = "0x2000181")]
	public delegate void ScrollerScrollingChangedDelegate(EnhancedScroller scroller, bool scrolling);
	[Token(Token = "0x2000182")]
	public delegate void ScrollerTweeningChangedDelegate(EnhancedScroller scroller, bool tweening);
	[Token(Token = "0x2000183")]
	public delegate void CellViewInstantiated(EnhancedScroller scroller, EnhancedScrollerCellView cellView);
	[Token(Token = "0x2000184")]
	public delegate void CellViewReused(EnhancedScroller scroller, EnhancedScrollerCellView cellView);
	[Token(Token = "0x2000185")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x93F174", Offset = "0x93F174")]
	public class EnhancedScroller : MonoBehaviour
	{
		[Token(Token = "0x2000395")]
		public enum ScrollDirectionEnum
		{
			[Token(Token = "0x4000F2D")]
			Vertical,
			[Token(Token = "0x4000F2E")]
			Horizontal
		}

		[Token(Token = "0x2000396")]
		public enum CellViewPositionEnum
		{
			[Token(Token = "0x4000F30")]
			Before,
			[Token(Token = "0x4000F31")]
			After
		}

		[Token(Token = "0x2000397")]
		public enum ScrollbarVisibilityEnum
		{
			[Token(Token = "0x4000F33")]
			OnlyIfNeeded,
			[Token(Token = "0x4000F34")]
			Always,
			[Token(Token = "0x4000F35")]
			Never
		}

		[Token(Token = "0x2000398")]
		public enum LoopJumpDirectionEnum
		{
			[Token(Token = "0x4000F37")]
			Closest,
			[Token(Token = "0x4000F38")]
			Up,
			[Token(Token = "0x4000F39")]
			Down
		}

		[Token(Token = "0x2000399")]
		private enum ListPositionEnum
		{
			[Token(Token = "0x4000F3B")]
			First,
			[Token(Token = "0x4000F3C")]
			Last
		}

		[Token(Token = "0x200039A")]
		public enum TweenType
		{
			[Token(Token = "0x4000F3E")]
			immediate,
			[Token(Token = "0x4000F3F")]
			linear,
			[Token(Token = "0x4000F40")]
			spring,
			[Token(Token = "0x4000F41")]
			easeInQuad,
			[Token(Token = "0x4000F42")]
			easeOutQuad,
			[Token(Token = "0x4000F43")]
			easeInOutQuad,
			[Token(Token = "0x4000F44")]
			easeInCubic,
			[Token(Token = "0x4000F45")]
			easeOutCubic,
			[Token(Token = "0x4000F46")]
			easeInOutCubic,
			[Token(Token = "0x4000F47")]
			easeInQuart,
			[Token(Token = "0x4000F48")]
			easeOutQuart,
			[Token(Token = "0x4000F49")]
			easeInOutQuart,
			[Token(Token = "0x4000F4A")]
			easeInQuint,
			[Token(Token = "0x4000F4B")]
			easeOutQuint,
			[Token(Token = "0x4000F4C")]
			easeInOutQuint,
			[Token(Token = "0x4000F4D")]
			easeInSine,
			[Token(Token = "0x4000F4E")]
			easeOutSine,
			[Token(Token = "0x4000F4F")]
			easeInOutSine,
			[Token(Token = "0x4000F50")]
			easeInExpo,
			[Token(Token = "0x4000F51")]
			easeOutExpo,
			[Token(Token = "0x4000F52")]
			easeInOutExpo,
			[Token(Token = "0x4000F53")]
			easeInCirc,
			[Token(Token = "0x4000F54")]
			easeOutCirc,
			[Token(Token = "0x4000F55")]
			easeInOutCirc,
			[Token(Token = "0x4000F56")]
			easeInBounce,
			[Token(Token = "0x4000F57")]
			easeOutBounce,
			[Token(Token = "0x4000F58")]
			easeInOutBounce,
			[Token(Token = "0x4000F59")]
			easeInBack,
			[Token(Token = "0x4000F5A")]
			easeOutBack,
			[Token(Token = "0x4000F5B")]
			easeInOutBack,
			[Token(Token = "0x4000F5C")]
			easeInElastic,
			[Token(Token = "0x4000F5D")]
			easeOutElastic,
			[Token(Token = "0x4000F5E")]
			easeInOutElastic
		}

		[Token(Token = "0x200039B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93FF20", Offset = "0x93FF20")]
		private sealed class <TweenPosition>d__146 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TweenType tweenType;

			[Token(Token = "0x4000F62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float time;

			[Token(Token = "0x4000F63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public EnhancedScroller <>4__this;

			[Token(Token = "0x4000F64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float end;

			[Token(Token = "0x4000F65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float start;

			[Token(Token = "0x4000F66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Action tweenComplete;

			[Token(Token = "0x4000F67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <newPosition>5__2;

			[Token(Token = "0x17000203")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002CB0")]
				[Address(RVA = "0x11D6C78", Offset = "0x11D6C78", VA = "0x11D6C78", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000204")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002CB2")]
				[Address(RVA = "0x11D6CE0", Offset = "0x11D6CE0", VA = "0x11D6CE0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002CAD")]
			[Address(RVA = "0x11D6394", Offset = "0x11D6394", VA = "0x11D6394")]
			[DebuggerHidden]
			public <TweenPosition>d__146(int <>1__state)
			{
			}

			[Token(Token = "0x6002CAE")]
			[Address(RVA = "0x11D63C0", Offset = "0x11D63C0", VA = "0x11D63C0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002CAF")]
			[Address(RVA = "0x11D63C4", Offset = "0x11D63C4", VA = "0x11D63C4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002CB1")]
			[Address(RVA = "0x11D6C80", Offset = "0x11D6C80", VA = "0x11D6C80", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EnhancedScrollerControllerLua__HAIBAO__SWORD__ Controller;

		[Token(Token = "0x4000647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float PrefabCellSize;

		[Token(Token = "0x4000648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public ScrollDirectionEnum scrollDirection;

		[Token(Token = "0x4000649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float spacing;

		[Token(Token = "0x400064A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RectOffset padding;

		[Token(Token = "0x400064B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool loop;

		[Token(Token = "0x400064C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private ScrollbarVisibilityEnum scrollbarVisibility;

		[Token(Token = "0x400064D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool snapping;

		[Token(Token = "0x400064E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float snapVelocityThreshold;

		[Token(Token = "0x400064F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float snapWatchOffset;

		[Token(Token = "0x4000650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float snapJumpToOffset;

		[Token(Token = "0x4000651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float snapCellCenterOffset;

		[Token(Token = "0x4000652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool snapUseCellSpacing;

		[Token(Token = "0x4000653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public TweenType snapTweenType;

		[Token(Token = "0x4000654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float snapTweenTime;

		[Token(Token = "0x4000655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public CellViewVisibilityChangedDelegate cellViewVisibilityChanged;

		[Token(Token = "0x4000656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public CellViewWillRecycleDelegate cellViewWillRecycle;

		[Token(Token = "0x4000657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public ScrollerScrolledDelegate scrollerScrolled;

		[Token(Token = "0x4000658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public ScrollerSnappedDelegate scrollerSnapped;

		[Token(Token = "0x4000659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public ScrollerScrollingChangedDelegate scrollerScrollingChanged;

		[Token(Token = "0x400065A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public ScrollerTweeningChangedDelegate scrollerTweeningChanged;

		[Token(Token = "0x400065B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public CellViewInstantiated cellViewInstantiated;

		[Token(Token = "0x400065C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public CellViewReused cellViewReused;

		[Token(Token = "0x400065D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x941BBC", Offset = "0x941BBC")]
		private bool <IsScrolling>k__BackingField;

		[Token(Token = "0x400065E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x941BCC", Offset = "0x941BCC")]
		private bool <IsTweening>k__BackingField;

		[Token(Token = "0x400065F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
		private bool _initialized;

		[Token(Token = "0x4000660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA3")]
		private bool _updateSpacing;

		[Token(Token = "0x4000661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private ScrollRectEx _scrollRect;

		[Token(Token = "0x4000662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private RectTransform _scrollRectTransform;

		[Token(Token = "0x4000663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Scrollbar _scrollbar;

		[Token(Token = "0x4000664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private RectTransform _container;

		[Token(Token = "0x4000665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private HorizontalOrVerticalLayoutGroup _layoutGroup;

		[Token(Token = "0x4000666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private IEnhancedScrollerDelegate__HAIBAO__SWORD__ _delegate;

		[Token(Token = "0x4000667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool _reloadData;

		[Token(Token = "0x4000668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
		private bool _refreshActive;

		[Token(Token = "0x4000669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private SmallList__HAIBAO__SWORD__<EnhancedScrollerCellView> _recycledCellViews;

		[Token(Token = "0x400066A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private LayoutElement _firstPadder;

		[Token(Token = "0x400066B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private LayoutElement _lastPadder;

		[Token(Token = "0x400066C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private RectTransform _recycledCellViewContainer;

		[Token(Token = "0x400066D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private SmallList__HAIBAO__SWORD__<float> _cellViewSizeArray;

		[Token(Token = "0x400066E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private SmallList__HAIBAO__SWORD__<float> _cellViewOffsetArray;

		[Token(Token = "0x400066F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private float _scrollPosition;

		[Token(Token = "0x4000670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private SmallList__HAIBAO__SWORD__<EnhancedScrollerCellView> _activeCellViews;

		[Token(Token = "0x4000671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private int _activeCellViewsStartIndex;

		[Token(Token = "0x4000672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private int _activeCellViewsEndIndex;

		[Token(Token = "0x4000673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private int _loopFirstCellIndex;

		[Token(Token = "0x4000674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private int _loopLastCellIndex;

		[Token(Token = "0x4000675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private float _loopFirstScrollPosition;

		[Token(Token = "0x4000676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		private float _loopLastScrollPosition;

		[Token(Token = "0x4000677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private float _loopFirstJumpTrigger;

		[Token(Token = "0x4000678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private float _loopLastJumpTrigger;

		[Token(Token = "0x4000679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private float _lastScrollRectSize;

		[Token(Token = "0x400067A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private bool _lastLoop;

		[Token(Token = "0x400067B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private int _snapCellViewIndex;

		[Token(Token = "0x400067C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		private int _snapDataIndex;

		[Token(Token = "0x400067D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private bool _snapJumping;

		[Token(Token = "0x400067E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x151")]
		private bool _snapInertia;

		[Token(Token = "0x400067F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		private ScrollbarVisibilityEnum _lastScrollbarVisibility;

		[Token(Token = "0x4000680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private float _tweenTimeLeft;

		[Token(Token = "0x17000086")]
		public IEnhancedScrollerDelegate__HAIBAO__SWORD__ Delegate
		{
			[Token(Token = "0x60016E7")]
			[Address(RVA = "0x1129DBC", Offset = "0x1129DBC", VA = "0x1129DBC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016E8")]
			[Address(RVA = "0x1129DC4", Offset = "0x1129DC4", VA = "0x1129DC4")]
			set
			{
			}
		}

		[Token(Token = "0x17000087")]
		public float ScrollPosition
		{
			[Token(Token = "0x60016E9")]
			[Address(RVA = "0x1129DD4", Offset = "0x1129DD4", VA = "0x1129DD4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60016EA")]
			[Address(RVA = "0x1129DDC", Offset = "0x1129DDC", VA = "0x1129DDC")]
			set
			{
			}
		}

		[Token(Token = "0x17000088")]
		public float ScrollSize
		{
			[Token(Token = "0x60016EB")]
			[Address(RVA = "0x112A03C", Offset = "0x112A03C", VA = "0x112A03C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000089")]
		public float NormalizedScrollPosition
		{
			[Token(Token = "0x60016EC")]
			[Address(RVA = "0x112A14C", Offset = "0x112A14C", VA = "0x112A14C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700008A")]
		public bool Loop
		{
			[Token(Token = "0x60016ED")]
			[Address(RVA = "0x112A17C", Offset = "0x112A17C", VA = "0x112A17C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60016EE")]
			[Address(RVA = "0x112A184", Offset = "0x112A184", VA = "0x112A184")]
			set
			{
			}
		}

		[Token(Token = "0x1700008B")]
		public ScrollbarVisibilityEnum ScrollbarVisibility
		{
			[Token(Token = "0x60016EF")]
			[Address(RVA = "0x112A644", Offset = "0x112A644", VA = "0x112A644")]
			get
			{
				return default(ScrollbarVisibilityEnum);
			}
			[Token(Token = "0x60016F0")]
			[Address(RVA = "0x112A514", Offset = "0x112A514", VA = "0x112A514")]
			set
			{
			}
		}

		[Token(Token = "0x1700008C")]
		public Vector2 Velocity
		{
			[Token(Token = "0x60016F1")]
			[Address(RVA = "0x112A6AC", Offset = "0x112A6AC", VA = "0x112A6AC")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x60016F2")]
			[Address(RVA = "0x112A6D0", Offset = "0x112A6D0", VA = "0x112A6D0")]
			set
			{
			}
		}

		[Token(Token = "0x1700008D")]
		public float LinearVelocity
		{
			[Token(Token = "0x60016F3")]
			[Address(RVA = "0x112A6F4", Offset = "0x112A6F4", VA = "0x112A6F4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60016F4")]
			[Address(RVA = "0x112A738", Offset = "0x112A738", VA = "0x112A738")]
			set
			{
			}
		}

		[Token(Token = "0x1700008E")]
		public bool IsScrolling
		{
			[Token(Token = "0x60016F5")]
			[Address(RVA = "0x112A7AC", Offset = "0x112A7AC", VA = "0x112A7AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A6B54", Offset = "0x9A6B54")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60016F6")]
			[Address(RVA = "0x112A7B4", Offset = "0x112A7B4", VA = "0x112A7B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A6B64", Offset = "0x9A6B64")]
			private set
			{
			}
		}

		[Token(Token = "0x1700008F")]
		public bool IsTweening
		{
			[Token(Token = "0x60016F7")]
			[Address(RVA = "0x112A7C0", Offset = "0x112A7C0", VA = "0x112A7C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A6B74", Offset = "0x9A6B74")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60016F8")]
			[Address(RVA = "0x112A7C8", Offset = "0x112A7C8", VA = "0x112A7C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A6B84", Offset = "0x9A6B84")]
			private set
			{
			}
		}

		[Token(Token = "0x17000090")]
		public int StartCellViewIndex
		{
			[Token(Token = "0x60016F9")]
			[Address(RVA = "0x112A7D4", Offset = "0x112A7D4", VA = "0x112A7D4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000091")]
		public int EndCellViewIndex
		{
			[Token(Token = "0x60016FA")]
			[Address(RVA = "0x112A7DC", Offset = "0x112A7DC", VA = "0x112A7DC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000092")]
		public int StartDataIndex
		{
			[Token(Token = "0x60016FB")]
			[Address(RVA = "0x112A7E4", Offset = "0x112A7E4", VA = "0x112A7E4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000093")]
		public int EndDataIndex
		{
			[Token(Token = "0x60016FC")]
			[Address(RVA = "0x112A8CC", Offset = "0x112A8CC", VA = "0x112A8CC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000094")]
		public int NumberOfCells
		{
			[Token(Token = "0x60016FD")]
			[Address(RVA = "0x112A80C", Offset = "0x112A80C", VA = "0x112A80C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000095")]
		public ScrollRectEx ScrollRect
		{
			[Token(Token = "0x60016FE")]
			[Address(RVA = "0x112A8F4", Offset = "0x112A8F4", VA = "0x112A8F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000096")]
		public float ScrollRectSize
		{
			[Token(Token = "0x60016FF")]
			[Address(RVA = "0x112A64C", Offset = "0x112A64C", VA = "0x112A64C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001700")]
		[Address(RVA = "0x112A8FC", Offset = "0x112A8FC", VA = "0x112A8FC")]
		public EnhancedScrollerCellView GetCellView(string resPath)
		{
			return null;
		}

		[Token(Token = "0x6001701")]
		[Address(RVA = "0x112AB64", Offset = "0x112AB64", VA = "0x112AB64")]
		private GameObject _loadGO(string resPath)
		{
			return null;
		}

		[Token(Token = "0x6001702")]
		[Address(RVA = "0x112AC04", Offset = "0x112AC04", VA = "0x112AC04")]
		private void _unloadGO(GameObject go)
		{
		}

		[Token(Token = "0x6001703")]
		[Address(RVA = "0x112AC84", Offset = "0x112AC84", VA = "0x112AC84")]
		public void ReloadData(float scrollPositionFactor = 0f)
		{
		}

		[Token(Token = "0x6001704")]
		[Address(RVA = "0x112AEDC", Offset = "0x112AEDC", VA = "0x112AEDC")]
		public void RefreshActiveCellViews()
		{
		}

		[Token(Token = "0x6001705")]
		[Address(RVA = "0x112AF70", Offset = "0x112AF70", VA = "0x112AF70")]
		public void ClearAll()
		{
		}

		[Token(Token = "0x6001706")]
		[Address(RVA = "0x112AF94", Offset = "0x112AF94", VA = "0x112AF94")]
		public void ClearActive()
		{
		}

		[Token(Token = "0x6001707")]
		[Address(RVA = "0x112B06C", Offset = "0x112B06C", VA = "0x112B06C")]
		public void ClearRecycled()
		{
		}

		[Token(Token = "0x6001708")]
		[Address(RVA = "0x112B144", Offset = "0x112B144", VA = "0x112B144")]
		public void ToggleLoop()
		{
		}

		[Token(Token = "0x6001709")]
		[Address(RVA = "0x112B154", Offset = "0x112B154", VA = "0x112B154")]
		public void JumpToDataIndex(int dataIndex, float scrollerOffset = 0f, float cellOffset = 0f, bool useSpacing = true, TweenType tweenType = TweenType.immediate, float tweenTime = 0f, [Optional] Action jumpComplete, LoopJumpDirectionEnum loopJumpDirection = LoopJumpDirectionEnum.Closest)
		{
		}

		[Token(Token = "0x600170A")]
		[Address(RVA = "0x112B6AC", Offset = "0x112B6AC", VA = "0x112B6AC")]
		public void Snap()
		{
		}

		[Token(Token = "0x600170B")]
		[Address(RVA = "0x1129EF8", Offset = "0x1129EF8", VA = "0x1129EF8")]
		public float GetScrollPositionForCellViewIndex(int cellViewIndex, CellViewPositionEnum insertPosition)
		{
			return default(float);
		}

		[Token(Token = "0x600170C")]
		[Address(RVA = "0x112B510", Offset = "0x112B510", VA = "0x112B510")]
		public float GetScrollPositionForDataIndex(int dataIndex, CellViewPositionEnum insertPosition)
		{
			return default(float);
		}

		[Token(Token = "0x600170D")]
		[Address(RVA = "0x112B858", Offset = "0x112B858", VA = "0x112B858")]
		public int GetCellViewIndexAtPosition(float position)
		{
			return default(int);
		}

		[Token(Token = "0x600170E")]
		[Address(RVA = "0x112B970", Offset = "0x112B970", VA = "0x112B970")]
		public EnhancedScrollerCellView GetCellViewAtDataIndex(int dataIndex)
		{
			return null;
		}

		[Token(Token = "0x600170F")]
		[Address(RVA = "0x112BA28", Offset = "0x112BA28", VA = "0x112BA28")]
		public void UpdateCellPosWithDistanceToCenter(float min, float max, LuaFunction call)
		{
		}

		[Token(Token = "0x6001710")]
		[Address(RVA = "0x112A1FC", Offset = "0x112A1FC", VA = "0x112A1FC")]
		private void _Resize(bool keepPosition)
		{
		}

		[Token(Token = "0x6001711")]
		[Address(RVA = "0x112C1F4", Offset = "0x112C1F4", VA = "0x112C1F4")]
		private void _UpdateSpacing(float spacing)
		{
		}

		[Token(Token = "0x6001712")]
		[Address(RVA = "0x112BC9C", Offset = "0x112BC9C", VA = "0x112BC9C")]
		private float _AddCellViewSizes()
		{
			return default(float);
		}

		[Token(Token = "0x6001713")]
		[Address(RVA = "0x112BE14", Offset = "0x112BE14", VA = "0x112BE14")]
		private void _DuplicateCellViewSizes(int numberOfTimes, int cellCount)
		{
		}

		[Token(Token = "0x6001714")]
		[Address(RVA = "0x112BEF4", Offset = "0x112BEF4", VA = "0x112BEF4")]
		private void _CalculateCellViewOffsets()
		{
		}

		[Token(Token = "0x6001715")]
		[Address(RVA = "0x112AA9C", Offset = "0x112AA9C", VA = "0x112AA9C")]
		private EnhancedScrollerCellView _GetRecycledCellView(string resPath)
		{
			return null;
		}

		[Token(Token = "0x6001716")]
		[Address(RVA = "0x112BFBC", Offset = "0x112BFBC", VA = "0x112BFBC")]
		private void _ResetVisibleCellViews()
		{
		}

		[Token(Token = "0x6001717")]
		[Address(RVA = "0x112AE58", Offset = "0x112AE58", VA = "0x112AE58")]
		private void _RecycleAllCells()
		{
		}

		[Token(Token = "0x6001718")]
		[Address(RVA = "0x112C2F8", Offset = "0x112C2F8", VA = "0x112C2F8")]
		private void _RecycleCell(EnhancedScrollerCellView cellView)
		{
		}

		[Token(Token = "0x6001719")]
		[Address(RVA = "0x112C3D4", Offset = "0x112C3D4", VA = "0x112C3D4")]
		private void _AddCellView(int cellIndex, ListPositionEnum listPosition)
		{
		}

		[Token(Token = "0x600171A")]
		[Address(RVA = "0x112C6F8", Offset = "0x112C6F8", VA = "0x112C6F8")]
		private void _SetPadders()
		{
		}

		[Token(Token = "0x600171B")]
		[Address(RVA = "0x112C944", Offset = "0x112C944", VA = "0x112C944")]
		private void _RefreshActive()
		{
		}

		[Token(Token = "0x600171C")]
		[Address(RVA = "0x112C250", Offset = "0x112C250", VA = "0x112C250")]
		private void _CalculateCurrentActiveCellRange(out int startIndex, out int endIndex)
		{
		}

		[Token(Token = "0x600171D")]
		[Address(RVA = "0x112B87C", Offset = "0x112B87C", VA = "0x112B87C")]
		private int _GetCellIndexAtPosition(float position, int startIndex, int endIndex)
		{
			return default(int);
		}

		[Token(Token = "0x600171E")]
		[Address(RVA = "0x112CAC4", Offset = "0x112CAC4", VA = "0x112CAC4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600171F")]
		[Address(RVA = "0x112D318", Offset = "0x112D318", VA = "0x112D318")]
		private void Update()
		{
		}

		[Token(Token = "0x6001720")]
		[Address(RVA = "0x112D468", Offset = "0x112D468", VA = "0x112D468")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001721")]
		[Address(RVA = "0x112D4A0", Offset = "0x112D4A0", VA = "0x112D4A0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001722")]
		[Address(RVA = "0x112D590", Offset = "0x112D590", VA = "0x112D590")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001723")]
		[Address(RVA = "0x112D680", Offset = "0x112D680", VA = "0x112D680")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001724")]
		[Address(RVA = "0x112D694", Offset = "0x112D694", VA = "0x112D694")]
		private void _ScrollRect_OnValueChanged(Vector2 val)
		{
		}

		[Token(Token = "0x6001725")]
		[Address(RVA = "0x112D828", Offset = "0x112D828", VA = "0x112D828")]
		private void _onEndDrag(Vector2 val)
		{
		}

		[Token(Token = "0x6001726")]
		[Address(RVA = "0x112D8B8", Offset = "0x112D8B8", VA = "0x112D8B8")]
		private void SnapJumpComplete()
		{
		}

		[Token(Token = "0x6001727")]
		[Address(RVA = "0x112B600", Offset = "0x112B600", VA = "0x112B600")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A6B94", Offset = "0x9A6B94")]
		private IEnumerator TweenPosition(TweenType tweenType, float time, float start, float end, Action tweenComplete)
		{
			return null;
		}

		[Token(Token = "0x6001728")]
		[Address(RVA = "0x112D9BC", Offset = "0x112D9BC", VA = "0x112D9BC")]
		private float linear(float start, float end, float val)
		{
			return default(float);
		}

		[Token(Token = "0x6001729")]
		[Address(RVA = "0x112DA44", Offset = "0x112DA44", VA = "0x112DA44")]
		private static float spring(float start, float end, float val)
		{
			return default(float);
		}

		[Token(Token = "0x600172A")]
		[Address(RVA = "0x112DB48", Offset = "0x112DB48", VA = "0x112DB48")]
		private static float easeInQuad(float start, float end, float val)
		{
			return default(float);
		}

		[Token(Token = "0x600172B")]
		[Address(RVA = "0x112DB5C", Offset = "0x112DB5C", VA = "0x112DB5C")]
		private static float easeOutQuad(float start, float end, float val)
		{
			return default(float);
		}

		[Token(Token = "0x600172C")]
		[Address(RVA = "0x112DB78", Offset = "0x112DB78", VA = "0x112DB78")]
		private static float easeInOutQuad(float start, float end, float val)
		{
			return default(float);
		}

		[Token(Token = "0x600172D")]
		[Address(RVA = "0x112DBCC", Offset = "0x112DBCC", VA = "0x112DBCC")]
		private static float easeInCubic(float start, float end, float val)
		{
			return default(float);
		}

		[Token(Token = "0x600172E")]
		[Address(RVA = "0x112DBE4", Offset = "0x112DBE4", VA = "0x112DBE4")]
		private static float easeOutCubic(float start, float end, float val)
		{
			return default(float);
		}

		[Token(Token = "0x600172F")]
		[Address(RVA = "0x112DC0C", Offset = "0x112DC0C", VA = "0x112DC0C")]
		private static float easeInOutCubic(float start, float end, float val)
		{
			return default(float);
		}

		[Token(Token = "0x6001730")]
		[Address(RVA = "0x112DC64", Offset = "0x112DC64", VA = "0x112DC64")]
		private static float easeInQuart(float start, float end, float val)
		{
			return default(float);
		}

		[Token(Token = "0x6001731")]
		[Address(RVA = "0x112DC80", Offset = "0x112DC80", VA = "0x112DC80")]
		private static float easeOutQuart(float start, float end, float val)
		{
			return default(float);
		}

		[Token(Token = "0x6001732")]
		[Address(RVA = "0x112DCA8", Offset = "0x112DCA8", VA = "0x112DCA8")]
		private static float easeInOutQuart(float start, float end, float val)
		{
			return default(float);
		}

		[Token(Token = "0x6001733")]
		[Address(RVA = "0x112DD04", Offset = "0x112DD04", VA = "0x112DD04")]
		private static float easeInQuint(float start, float end, float val)
		{
			return default(float);
		}

		[Token(Token = "0x6001734")]
		[Address(RVA = "0x112DD24", Offset = "0x112DD24", VA = "0x112DD24")]
		private static float easeOutQuint(float start, float end, float val)
		{
			return default(float);
		}

		[Token(Token = "0x6001735")]
		[Address(RVA = "0x112DD54", Offset = "0x112DD54", VA = "0x112DD54")]
		private static float easeInOutQuint(float start, float end, float val)
		{
			return default(float);
		}

		[Token(Token = "0x6001736")]
		[Address(RVA = "0x112DDBC", Offset = "0x112DDBC", VA = "0x112DDBC")]
		private static float easeInSine(float start, float end, float val)
		{
			return default(float);
		}

		[Token(Token = "0x6001737")]
		[Address(RVA = "0x112DE54", Offset = "0x112DE54", VA = "0x112DE54")]
		private static float easeOutSine(float start, float end, float val)
		{
			return default(float);
		}

		[Token(Token = "0x6001738")]
		[Address(RVA = "0x112DEE8", Offset = "0x112DEE8", VA = "0x112DEE8")]
		private static float easeInOutSine(float start, float end, float val)
		{
			return default(float);
		}

		[Token(Token = "0x6001739")]
		[Address(RVA = "0x112DF8C", Offset = "0x112DF8C", VA = "0x112DF8C")]
		private static float easeInExpo(float start, float end, float val)
		{
			return default(float);
		}

		[Token(Token = "0x600173A")]
		[Address(RVA = "0x112E024", Offset = "0x112E024", VA = "0x112E024")]
		private static float easeOutExpo(float start, float end, float val)
		{
			return default(float);
		}

		[Token(Token = "0x600173B")]
		[Address(RVA = "0x112E0BC", Offset = "0x112E0BC", VA = "0x112E0BC")]
		private static float easeInOutExpo(float start, float end, float val)
		{
			return default(float);
		}

		[Token(Token = "0x600173C")]
		[Address(RVA = "0x112E1AC", Offset = "0x112E1AC", VA = "0x112E1AC")]
		private static float easeInCirc(float start, float end, float val)
		{
			return default(float);
		}

		[Token(Token = "0x600173D")]
		[Address(RVA = "0x112E258", Offset = "0x112E258", VA = "0x112E258")]
		private static float easeOutCirc(float start, float end, float val)
		{
			return default(float);
		}

		[Token(Token = "0x600173E")]
		[Address(RVA = "0x112E304", Offset = "0x112E304", VA = "0x112E304")]
		private static float easeInOutCirc(float start, float end, float val)
		{
			return default(float);
		}

		[Token(Token = "0x600173F")]
		[Address(RVA = "0x112E3FC", Offset = "0x112E3FC", VA = "0x112E3FC")]
		private static float easeInBounce(float start, float end, float val)
		{
			return default(float);
		}

		[Token(Token = "0x6001740")]
		[Address(RVA = "0x112E438", Offset = "0x112E438", VA = "0x112E438")]
		private static float easeOutBounce(float start, float end, float val)
		{
			return default(float);
		}

		[Token(Token = "0x6001741")]
		[Address(RVA = "0x112E504", Offset = "0x112E504", VA = "0x112E504")]
		private static float easeInOutBounce(float start, float end, float val)
		{
			return default(float);
		}

		[Token(Token = "0x6001742")]
		[Address(RVA = "0x112E588", Offset = "0x112E588", VA = "0x112E588")]
		private static float easeInBack(float start, float end, float val)
		{
			return default(float);
		}

		[Token(Token = "0x6001743")]
		[Address(RVA = "0x112E5B8", Offset = "0x112E5B8", VA = "0x112E5B8")]
		private static float easeOutBack(float start, float end, float val)
		{
			return default(float);
		}

		[Token(Token = "0x6001744")]
		[Address(RVA = "0x112E5F8", Offset = "0x112E5F8", VA = "0x112E5F8")]
		private static float easeInOutBack(float start, float end, float val)
		{
			return default(float);
		}

		[Token(Token = "0x6001745")]
		[Address(RVA = "0x112E67C", Offset = "0x112E67C", VA = "0x112E67C")]
		private static float easeInElastic(float start, float end, float val)
		{
			return default(float);
		}

		[Token(Token = "0x6001746")]
		[Address(RVA = "0x112E764", Offset = "0x112E764", VA = "0x112E764")]
		private static float easeOutElastic(float start, float end, float val)
		{
			return default(float);
		}

		[Token(Token = "0x6001747")]
		[Address(RVA = "0x112E848", Offset = "0x112E848", VA = "0x112E848")]
		private static float easeInOutElastic(float start, float end, float val)
		{
			return default(float);
		}

		[Token(Token = "0x6001748")]
		[Address(RVA = "0x112E9AC", Offset = "0x112E9AC", VA = "0x112E9AC")]
		public EnhancedScroller()
		{
		}
	}
	[Token(Token = "0x2000186")]
	public class EnhancedScrollerCellView : MonoBehaviour
	{
		[Token(Token = "0x4000681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string resPath;

		[NonSerialized]
		[Token(Token = "0x4000682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int cellIndex;

		[NonSerialized]
		[Token(Token = "0x4000683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int dataIndex;

		[NonSerialized]
		[Token(Token = "0x4000684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool active;

		[Token(Token = "0x6001749")]
		[Address(RVA = "0x11D6CE8", Offset = "0x11D6CE8", VA = "0x11D6CE8", Slot = "4")]
		public virtual void RefreshCellView()
		{
		}

		[Token(Token = "0x600174A")]
		[Address(RVA = "0x11D6CEC", Offset = "0x11D6CEC", VA = "0x11D6CEC")]
		public EnhancedScrollerCellView()
		{
		}
	}
	[Token(Token = "0x2000187")]
	public interface IEnhancedScrollerDelegate__HAIBAO__SWORD__
	{
		[Token(Token = "0x600174B")]
		int GetNumberOfCells(EnhancedScroller scroller);

		[Token(Token = "0x600174C")]
		float GetCellViewSize(EnhancedScroller scroller, int dataIndex);

		[Token(Token = "0x600174D")]
		EnhancedScrollerCellView GetCellView(EnhancedScroller scroller, int dataIndex, int cellIndex);
	}
}
namespace TrueSync
{
	[Serializable]
	[Token(Token = "0x2000188")]
	public struct FP : IEquatable<FP>, IComparable<FP>
	{
		[Token(Token = "0x4000685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public long _serializedValue;

		[Token(Token = "0x4000686")]
		public const long MAX_VALUE = long.MaxValue;

		[Token(Token = "0x4000687")]
		public const long MIN_VALUE = long.MinValue;

		[Token(Token = "0x4000688")]
		public const int NUM_BITS = 64;

		[Token(Token = "0x4000689")]
		public const int FRACTIONAL_PLACES = 32;

		[Token(Token = "0x400068A")]
		public const long ONE = 4294967296L;

		[Token(Token = "0x400068B")]
		public const long TEN = 42949672960L;

		[Token(Token = "0x400068C")]
		public const long HALF = 2147483648L;

		[Token(Token = "0x400068D")]
		public const long PI_TIMES_2 = 26986075409L;

		[Token(Token = "0x400068E")]
		public const long PI = 13493037704L;

		[Token(Token = "0x400068F")]
		public const long PI_OVER_2 = 6746518852L;

		[Token(Token = "0x4000690")]
		public const long LN2 = 2977044471L;

		[Token(Token = "0x4000691")]
		public const long LOG2MAX = 133143986176L;

		[Token(Token = "0x4000692")]
		public const long LOG2MIN = -137438953472L;

		[Token(Token = "0x4000693")]
		public const int LUT_SIZE = 205887;

		[Token(Token = "0x4000694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly decimal Precision;

		[Token(Token = "0x4000695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly FP MaxValue;

		[Token(Token = "0x4000696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly FP MinValue;

		[Token(Token = "0x4000697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly FP One;

		[Token(Token = "0x4000698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static readonly FP Ten;

		[Token(Token = "0x4000699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static readonly FP Half;

		[Token(Token = "0x400069A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static readonly FP Zero;

		[Token(Token = "0x400069B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static readonly FP PositiveInfinity;

		[Token(Token = "0x400069C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static readonly FP NegativeInfinity;

		[Token(Token = "0x400069D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static readonly FP NaN;

		[Token(Token = "0x400069E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public static readonly FP EN1;

		[Token(Token = "0x400069F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public static readonly FP EN2;

		[Token(Token = "0x40006A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public static readonly FP EN3;

		[Token(Token = "0x40006A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public static readonly FP EN4;

		[Token(Token = "0x40006A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public static readonly FP EN5;

		[Token(Token = "0x40006A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public static readonly FP EN6;

		[Token(Token = "0x40006A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public static readonly FP EN7;

		[Token(Token = "0x40006A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public static readonly FP EN8;

		[Token(Token = "0x40006A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public static readonly FP Epsilon;

		[Token(Token = "0x40006A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public static readonly FP Pi;

		[Token(Token = "0x40006A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public static readonly FP PiOver2;

		[Token(Token = "0x40006A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public static readonly FP PiTimes2;

		[Token(Token = "0x40006AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public static readonly FP PiInv;

		[Token(Token = "0x40006AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public static readonly FP PiOver2Inv;

		[Token(Token = "0x40006AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public static readonly FP Deg2Rad;

		[Token(Token = "0x40006AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public static readonly FP Rad2Deg;

		[Token(Token = "0x40006AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public static readonly FP LutInterval;

		[Token(Token = "0x40006AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public static readonly FP Log2Max;

		[Token(Token = "0x40006B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public static readonly FP Log2Min;

		[Token(Token = "0x40006B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public static readonly FP Ln2;

		[Token(Token = "0x40006B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public static readonly long[] AcosLut;

		[Token(Token = "0x40006B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public static readonly long[] SinLut;

		[Token(Token = "0x40006B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public static readonly long[] TanLut;

		[Token(Token = "0x17000097")]
		public long RawValue
		{
			[Token(Token = "0x6001792")]
			[Address(RVA = "0xBB4FC4", Offset = "0xBB4FC4", VA = "0xBB4FC4")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x600174E")]
		[Address(RVA = "0xBB253C", Offset = "0xBB253C", VA = "0xBB253C")]
		public static int Sign(FP value)
		{
			return default(int);
		}

		[Token(Token = "0x600174F")]
		[Address(RVA = "0xBB2554", Offset = "0xBB2554", VA = "0xBB2554")]
		public static FP Abs(FP value)
		{
			return default(FP);
		}

		[Token(Token = "0x6001750")]
		[Address(RVA = "0xBB25D8", Offset = "0xBB25D8", VA = "0xBB25D8")]
		public static FP FastAbs(FP value)
		{
			return default(FP);
		}

		[Token(Token = "0x6001751")]
		[Address(RVA = "0xBB25E4", Offset = "0xBB25E4", VA = "0xBB25E4")]
		public static FP Floor(FP value)
		{
			return default(FP);
		}

		[Token(Token = "0x6001752")]
		[Address(RVA = "0xBB25EC", Offset = "0xBB25EC", VA = "0xBB25EC")]
		public static FP Ceiling(FP value)
		{
			return default(FP);
		}

		[Token(Token = "0x6001753")]
		[Address(RVA = "0xBB2670", Offset = "0xBB2670", VA = "0xBB2670")]
		public static FP Round(FP value)
		{
			return default(FP);
		}

		[Token(Token = "0x6001754")]
		[Address(RVA = "0xBB2668", Offset = "0xBB2668", VA = "0xBB2668")]
		public static FP operator +(FP x, FP y)
		{
			return default(FP);
		}

		[Token(Token = "0x6001755")]
		[Address(RVA = "0xBB2724", Offset = "0xBB2724", VA = "0xBB2724")]
		public static FP OverflowAdd(FP x, FP y)
		{
			return default(FP);
		}

		[Token(Token = "0x6001756")]
		[Address(RVA = "0xBB2754", Offset = "0xBB2754", VA = "0xBB2754")]
		public static FP FastAdd(FP x, FP y)
		{
			return default(FP);
		}

		[Token(Token = "0x6001757")]
		[Address(RVA = "0xBB275C", Offset = "0xBB275C", VA = "0xBB275C")]
		public static FP operator -(FP x, FP y)
		{
			return default(FP);
		}

		[Token(Token = "0x6001758")]
		[Address(RVA = "0xBB2764", Offset = "0xBB2764", VA = "0xBB2764")]
		public static FP OverflowSub(FP x, FP y)
		{
			return default(FP);
		}

		[Token(Token = "0x6001759")]
		[Address(RVA = "0xBB2790", Offset = "0xBB2790", VA = "0xBB2790")]
		public static FP FastSub(FP x, FP y)
		{
			return default(FP);
		}

		[Token(Token = "0x600175A")]
		[Address(RVA = "0xBB2798", Offset = "0xBB2798", VA = "0xBB2798")]
		private static long AddOverflowHelper(long x, long y, ref bool overflow)
		{
			return default(long);
		}

		[Token(Token = "0x600175B")]
		[Address(RVA = "0xBB27BC", Offset = "0xBB27BC", VA = "0xBB27BC")]
		public static FP operator *(FP x, FP y)
		{
			return default(FP);
		}

		[Token(Token = "0x600175C")]
		[Address(RVA = "0xBB27E0", Offset = "0xBB27E0", VA = "0xBB27E0")]
		public static FP OverflowMul(FP x, FP y)
		{
			return default(FP);
		}

		[Token(Token = "0x600175D")]
		[Address(RVA = "0xBB297C", Offset = "0xBB297C", VA = "0xBB297C")]
		public static FP FastMul(FP x, FP y)
		{
			return default(FP);
		}

		[Token(Token = "0x600175E")]
		[Address(RVA = "0xBB29A0", Offset = "0xBB29A0", VA = "0xBB29A0")]
		public static int CountLeadingZeroes(ulong x)
		{
			return default(int);
		}

		[Token(Token = "0x600175F")]
		[Address(RVA = "0xBB29E8", Offset = "0xBB29E8", VA = "0xBB29E8")]
		public static FP operator /(FP x, FP y)
		{
			return default(FP);
		}

		[Token(Token = "0x6001760")]
		[Address(RVA = "0xBB2BCC", Offset = "0xBB2BCC", VA = "0xBB2BCC")]
		public static FP operator %(FP x, FP y)
		{
			return default(FP);
		}

		[Token(Token = "0x6001761")]
		[Address(RVA = "0xBB2BF4", Offset = "0xBB2BF4", VA = "0xBB2BF4")]
		public static FP FastMod(FP x, FP y)
		{
			return default(FP);
		}

		[Token(Token = "0x6001762")]
		[Address(RVA = "0xBB2C00", Offset = "0xBB2C00", VA = "0xBB2C00")]
		public static FP operator -(FP x)
		{
			return default(FP);
		}

		[Token(Token = "0x6001763")]
		[Address(RVA = "0xBB2C80", Offset = "0xBB2C80", VA = "0xBB2C80")]
		public static bool operator ==(FP x, FP y)
		{
			return default(bool);
		}

		[Token(Token = "0x6001764")]
		[Address(RVA = "0xBB2C8C", Offset = "0xBB2C8C", VA = "0xBB2C8C")]
		public static bool operator !=(FP x, FP y)
		{
			return default(bool);
		}

		[Token(Token = "0x6001765")]
		[Address(RVA = "0xBB2C98", Offset = "0xBB2C98", VA = "0xBB2C98")]
		public static bool operator >(FP x, FP y)
		{
			return default(bool);
		}

		[Token(Token = "0x6001766")]
		[Address(RVA = "0xBB2CA4", Offset = "0xBB2CA4", VA = "0xBB2CA4")]
		public static bool operator <(FP x, FP y)
		{
			return default(bool);
		}

		[Token(Token = "0x6001767")]
		[Address(RVA = "0xBB2CB0", Offset = "0xBB2CB0", VA = "0xBB2CB0")]
		public static bool operator >=(FP x, FP y)
		{
			return default(bool);
		}

		[Token(Token = "0x6001768")]
		[Address(RVA = "0xBB2CBC", Offset = "0xBB2CBC", VA = "0xBB2CBC")]
		public static bool operator <=(FP x, FP y)
		{
			return default(bool);
		}

		[Token(Token = "0x6001769")]
		[Address(RVA = "0xBB2CC8", Offset = "0xBB2CC8", VA = "0xBB2CC8")]
		public static FP Sqrt(FP x)
		{
			return default(FP);
		}

		[Token(Token = "0x600176A")]
		[Address(RVA = "0xBB2DF0", Offset = "0xBB2DF0", VA = "0xBB2DF0")]
		public static FP Sin(FP x)
		{
			return default(FP);
		}

		[Token(Token = "0x600176B")]
		[Address(RVA = "0xBB314C", Offset = "0xBB314C", VA = "0xBB314C")]
		public static FP FastSin(FP x)
		{
			return default(FP);
		}

		[Token(Token = "0x600176C")]
		[Address(RVA = "0xBB3090", Offset = "0xBB3090", VA = "0xBB3090")]
		public static long ClampSinValue(long angle, out bool flipHorizontal, out bool flipVertical)
		{
			return default(long);
		}

		[Token(Token = "0x600176D")]
		[Address(RVA = "0xBB32F8", Offset = "0xBB32F8", VA = "0xBB32F8")]
		public static FP Cos(FP x)
		{
			return default(FP);
		}

		[Token(Token = "0x600176E")]
		[Address(RVA = "0xBB3380", Offset = "0xBB3380", VA = "0xBB3380")]
		public static FP FastCos(FP x)
		{
			return default(FP);
		}

		[Token(Token = "0x600176F")]
		[Address(RVA = "0xBB3408", Offset = "0xBB3408", VA = "0xBB3408")]
		public static FP Tan(FP x)
		{
			return default(FP);
		}

		[Token(Token = "0x6001770")]
		[Address(RVA = "0xBB3574", Offset = "0xBB3574", VA = "0xBB3574")]
		public static FP Atan(FP z)
		{
			return default(FP);
		}

		[Token(Token = "0x6001771")]
		[Address(RVA = "0xBB3848", Offset = "0xBB3848", VA = "0xBB3848")]
		public static FP Atan2(FP y, FP x)
		{
			return default(FP);
		}

		[Token(Token = "0x6001772")]
		[Address(RVA = "0xBB3B60", Offset = "0xBB3B60", VA = "0xBB3B60")]
		public static FP Asin(FP value)
		{
			return default(FP);
		}

		[Token(Token = "0x6001773")]
		[Address(RVA = "0xBB3BD8", Offset = "0xBB3BD8", VA = "0xBB3BD8")]
		public static FP Acos(FP x)
		{
			return default(FP);
		}

		[Token(Token = "0x6001774")]
		[Address(RVA = "0xBB2BC4", Offset = "0xBB2BC4", VA = "0xBB2BC4")]
		public static implicit operator FP(long value)
		{
			return default(FP);
		}

		[Token(Token = "0x6001775")]
		[Address(RVA = "0xBB313C", Offset = "0xBB313C", VA = "0xBB313C")]
		public static explicit operator long(FP value)
		{
			return default(long);
		}

		[Token(Token = "0x6001776")]
		[Address(RVA = "0xBB3D70", Offset = "0xBB3D70", VA = "0xBB3D70")]
		public static implicit operator FP(float value)
		{
			return default(FP);
		}

		[Token(Token = "0x6001777")]
		[Address(RVA = "0xBB3D9C", Offset = "0xBB3D9C", VA = "0xBB3D9C")]
		public static explicit operator float(FP value)
		{
			return default(float);
		}

		[Token(Token = "0x6001778")]
		[Address(RVA = "0xBB3DB0", Offset = "0xBB3DB0", VA = "0xBB3DB0")]
		public static implicit operator FP(double value)
		{
			return default(FP);
		}

		[Token(Token = "0x6001779")]
		[Address(RVA = "0xBB3DD8", Offset = "0xBB3DD8", VA = "0xBB3DD8")]
		public static explicit operator double(FP value)
		{
			return default(double);
		}

		[Token(Token = "0x600177A")]
		[Address(RVA = "0xBB3DEC", Offset = "0xBB3DEC", VA = "0xBB3DEC")]
		public static explicit operator FP(decimal value)
		{
			return default(FP);
		}

		[Token(Token = "0x600177B")]
		[Address(RVA = "0xBB3144", Offset = "0xBB3144", VA = "0xBB3144")]
		public static implicit operator FP(int value)
		{
			return default(FP);
		}

		[Token(Token = "0x600177C")]
		[Address(RVA = "0xBB3E90", Offset = "0xBB3E90", VA = "0xBB3E90")]
		public static explicit operator decimal(FP value)
		{
			return default(decimal);
		}

		[Token(Token = "0x600177D")]
		[Address(RVA = "0xBB3F34", Offset = "0xBB3F34", VA = "0xBB3F34")]
		public float AsFloat()
		{
			return default(float);
		}

		[Token(Token = "0x600177E")]
		[Address(RVA = "0xBB3FA8", Offset = "0xBB3FA8", VA = "0xBB3FA8")]
		public int AsInt()
		{
			return default(int);
		}

		[Token(Token = "0x600177F")]
		[Address(RVA = "0xBB4010", Offset = "0xBB4010", VA = "0xBB4010")]
		public long AsLong()
		{
			return default(long);
		}

		[Token(Token = "0x6001780")]
		[Address(RVA = "0xBB4078", Offset = "0xBB4078", VA = "0xBB4078")]
		public double AsDouble()
		{
			return default(double);
		}

		[Token(Token = "0x6001781")]
		[Address(RVA = "0xBB40EC", Offset = "0xBB40EC", VA = "0xBB40EC")]
		public decimal AsDecimal()
		{
			return default(decimal);
		}

		[Token(Token = "0x6001782")]
		[Address(RVA = "0xBB4154", Offset = "0xBB4154", VA = "0xBB4154")]
		public static float ToFloat(FP value)
		{
			return default(float);
		}

		[Token(Token = "0x6001783")]
		[Address(RVA = "0xBB41C4", Offset = "0xBB41C4", VA = "0xBB41C4")]
		public static int ToInt(FP value)
		{
			return default(int);
		}

		[Token(Token = "0x6001784")]
		[Address(RVA = "0xBB4228", Offset = "0xBB4228", VA = "0xBB4228")]
		public static FP FromFloat(float value)
		{
			return default(FP);
		}

		[Token(Token = "0x6001785")]
		[Address(RVA = "0xBB42B8", Offset = "0xBB42B8", VA = "0xBB42B8")]
		public static bool IsInfinity(FP value)
		{
			return default(bool);
		}

		[Token(Token = "0x6001786")]
		[Address(RVA = "0xBB435C", Offset = "0xBB435C", VA = "0xBB435C")]
		public static bool IsNaN(FP value)
		{
			return default(bool);
		}

		[Token(Token = "0x6001787")]
		[Address(RVA = "0xBB43D0", Offset = "0xBB43D0", VA = "0xBB43D0", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001788")]
		[Address(RVA = "0xBB4458", Offset = "0xBB4458", VA = "0xBB4458", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001789")]
		[Address(RVA = "0xBB4460", Offset = "0xBB4460", VA = "0xBB4460", Slot = "4")]
		public bool Equals(FP other)
		{
			return default(bool);
		}

		[Token(Token = "0x600178A")]
		[Address(RVA = "0xBB4470", Offset = "0xBB4470", VA = "0xBB4470", Slot = "5")]
		public int CompareTo(FP other)
		{
			return default(int);
		}

		[Token(Token = "0x600178B")]
		[Address(RVA = "0xBB4478", Offset = "0xBB4478", VA = "0xBB4478", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600178C")]
		[Address(RVA = "0xBB4508", Offset = "0xBB4508", VA = "0xBB4508")]
		public string ToString(IFormatProvider provider)
		{
			return null;
		}

		[Token(Token = "0x600178D")]
		[Address(RVA = "0xBB45A0", Offset = "0xBB45A0", VA = "0xBB45A0")]
		public string ToString(string format)
		{
			return null;
		}

		[Token(Token = "0x600178E")]
		[Address(RVA = "0xBB4638", Offset = "0xBB4638", VA = "0xBB4638")]
		public static FP FromRaw(long rawValue)
		{
			return default(FP);
		}

		[Token(Token = "0x600178F")]
		[Address(RVA = "0xBB463C", Offset = "0xBB463C", VA = "0xBB463C")]
		internal static void GenerateAcosLut()
		{
		}

		[Token(Token = "0x6001790")]
		[Address(RVA = "0xBB48F0", Offset = "0xBB48F0", VA = "0xBB48F0")]
		internal static void GenerateSinLut()
		{
		}

		[Token(Token = "0x6001791")]
		[Address(RVA = "0xBB4BBC", Offset = "0xBB4BBC", VA = "0xBB4BBC")]
		internal static void GenerateTanLut()
		{
		}

		[Token(Token = "0x6001793")]
		[Address(RVA = "0xBB4FCC", Offset = "0xBB4FCC", VA = "0xBB4FCC")]
		private FP(long rawValue)
		{
		}

		[Token(Token = "0x6001794")]
		[Address(RVA = "0xBB4FD4", Offset = "0xBB4FD4", VA = "0xBB4FD4")]
		public FP(int value)
		{
		}
	}
	[Token(Token = "0x2000189")]
	public sealed class TSMath
	{
		[Token(Token = "0x40006B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static FP Pi;

		[Token(Token = "0x40006B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static FP PiOver2;

		[Token(Token = "0x40006B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static FP Epsilon;

		[Token(Token = "0x40006B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static FP Deg2Rad;

		[Token(Token = "0x40006B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static FP Rad2Deg;

		[Token(Token = "0x40006BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static FP Infinity;

		[Token(Token = "0x6001796")]
		[Address(RVA = "0x1B543D0", Offset = "0x1B543D0", VA = "0x1B543D0")]
		public static FP Sqrt(FP number)
		{
			return default(FP);
		}

		[Token(Token = "0x6001797")]
		[Address(RVA = "0x1B54438", Offset = "0x1B54438", VA = "0x1B54438")]
		public static FP Max(FP val1, FP val2)
		{
			return default(FP);
		}

		[Token(Token = "0x6001798")]
		[Address(RVA = "0x1B544BC", Offset = "0x1B544BC", VA = "0x1B544BC")]
		public static FP Min(FP val1, FP val2)
		{
			return default(FP);
		}

		[Token(Token = "0x6001799")]
		[Address(RVA = "0x1B54540", Offset = "0x1B54540", VA = "0x1B54540")]
		public static FP Max(FP val1, FP val2, FP val3)
		{
			return default(FP);
		}

		[Token(Token = "0x600179A")]
		[Address(RVA = "0x1B545FC", Offset = "0x1B545FC", VA = "0x1B545FC")]
		public static FP Clamp(FP value, FP min, FP max)
		{
			return default(FP);
		}

		[Token(Token = "0x600179B")]
		[Address(RVA = "0x1B546B4", Offset = "0x1B546B4", VA = "0x1B546B4")]
		public static FP Clamp01(FP value)
		{
			return default(FP);
		}

		[Token(Token = "0x600179C")]
		[Address(RVA = "0x1B547B8", Offset = "0x1B547B8", VA = "0x1B547B8")]
		public static void Absolute(ref TSMatrix matrix, out TSMatrix result)
		{
		}

		[Token(Token = "0x600179D")]
		[Address(RVA = "0x1B548B8", Offset = "0x1B548B8", VA = "0x1B548B8")]
		public static FP Sin(FP value)
		{
			return default(FP);
		}

		[Token(Token = "0x600179E")]
		[Address(RVA = "0x1B54920", Offset = "0x1B54920", VA = "0x1B54920")]
		public static FP Cos(FP value)
		{
			return default(FP);
		}

		[Token(Token = "0x600179F")]
		[Address(RVA = "0x1B54988", Offset = "0x1B54988", VA = "0x1B54988")]
		public static FP Tan(FP value)
		{
			return default(FP);
		}

		[Token(Token = "0x60017A0")]
		[Address(RVA = "0x1B549F0", Offset = "0x1B549F0", VA = "0x1B549F0")]
		public static FP Asin(FP value)
		{
			return default(FP);
		}

		[Token(Token = "0x60017A1")]
		[Address(RVA = "0x1B54A58", Offset = "0x1B54A58", VA = "0x1B54A58")]
		public static FP Acos(FP value)
		{
			return default(FP);
		}

		[Token(Token = "0x60017A2")]
		[Address(RVA = "0x1B54AC0", Offset = "0x1B54AC0", VA = "0x1B54AC0")]
		public static FP Atan(FP value)
		{
			return default(FP);
		}

		[Token(Token = "0x60017A3")]
		[Address(RVA = "0x1B54B28", Offset = "0x1B54B28", VA = "0x1B54B28")]
		public static FP Atan2(FP y, FP x)
		{
			return default(FP);
		}

		[Token(Token = "0x60017A4")]
		[Address(RVA = "0x1B54BA0", Offset = "0x1B54BA0", VA = "0x1B54BA0")]
		public static FP Floor(FP value)
		{
			return default(FP);
		}

		[Token(Token = "0x60017A5")]
		[Address(RVA = "0x1B54C08", Offset = "0x1B54C08", VA = "0x1B54C08")]
		public static FP Ceiling(FP value)
		{
			return default(FP);
		}

		[Token(Token = "0x60017A6")]
		[Address(RVA = "0x1B54C0C", Offset = "0x1B54C0C", VA = "0x1B54C0C")]
		public static FP Round(FP value)
		{
			return default(FP);
		}

		[Token(Token = "0x60017A7")]
		[Address(RVA = "0x1B54C74", Offset = "0x1B54C74", VA = "0x1B54C74")]
		public static int Sign(FP value)
		{
			return default(int);
		}

		[Token(Token = "0x60017A8")]
		[Address(RVA = "0x1B54CDC", Offset = "0x1B54CDC", VA = "0x1B54CDC")]
		public static FP Abs(FP value)
		{
			return default(FP);
		}

		[Token(Token = "0x60017A9")]
		[Address(RVA = "0x1B54D44", Offset = "0x1B54D44", VA = "0x1B54D44")]
		public static FP Barycentric(FP value1, FP value2, FP value3, FP amount1, FP amount2)
		{
			return default(FP);
		}

		[Token(Token = "0x60017AA")]
		[Address(RVA = "0x1B54E1C", Offset = "0x1B54E1C", VA = "0x1B54E1C")]
		public static FP CatmullRom(FP value1, FP value2, FP value3, FP value4, FP amount)
		{
			return default(FP);
		}

		[Token(Token = "0x60017AB")]
		[Address(RVA = "0x1B5505C", Offset = "0x1B5505C", VA = "0x1B5505C")]
		public static FP Distance(FP value1, FP value2)
		{
			return default(FP);
		}

		[Token(Token = "0x60017AC")]
		[Address(RVA = "0x1B550DC", Offset = "0x1B550DC", VA = "0x1B550DC")]
		public static FP Hermite(FP value1, FP tangent1, FP value2, FP tangent2, FP amount)
		{
			return default(FP);
		}

		[Token(Token = "0x60017AD")]
		[Address(RVA = "0x1B55358", Offset = "0x1B55358", VA = "0x1B55358")]
		public static FP Lerp(FP value1, FP value2, FP amount)
		{
			return default(FP);
		}

		[Token(Token = "0x60017AE")]
		[Address(RVA = "0x1B55424", Offset = "0x1B55424", VA = "0x1B55424")]
		public static FP InverseLerp(FP value1, FP value2, FP amount)
		{
			return default(FP);
		}

		[Token(Token = "0x60017AF")]
		[Address(RVA = "0x1B55554", Offset = "0x1B55554", VA = "0x1B55554")]
		public static FP SmoothStep(FP value1, FP value2, FP amount)
		{
			return default(FP);
		}

		[Token(Token = "0x60017B0")]
		[Address(RVA = "0x1B55654", Offset = "0x1B55654", VA = "0x1B55654")]
		internal static FP Pow2(FP x)
		{
			return default(FP);
		}

		[Token(Token = "0x60017B1")]
		[Address(RVA = "0x1B55A54", Offset = "0x1B55A54", VA = "0x1B55A54")]
		internal static FP Log2(FP x)
		{
			return default(FP);
		}

		[Token(Token = "0x60017B2")]
		[Address(RVA = "0x1B55C2C", Offset = "0x1B55C2C", VA = "0x1B55C2C")]
		public static FP Ln(FP x)
		{
			return default(FP);
		}

		[Token(Token = "0x60017B3")]
		[Address(RVA = "0x1B55CD0", Offset = "0x1B55CD0", VA = "0x1B55CD0")]
		public static FP Pow(FP b, FP exp)
		{
			return default(FP);
		}

		[Token(Token = "0x60017B4")]
		[Address(RVA = "0x1B55E38", Offset = "0x1B55E38", VA = "0x1B55E38")]
		public static FP MoveTowards(FP current, FP target, FP maxDelta)
		{
			return default(FP);
		}

		[Token(Token = "0x60017B5")]
		[Address(RVA = "0x1B55F88", Offset = "0x1B55F88", VA = "0x1B55F88")]
		public static FP Repeat(FP t, FP length)
		{
			return default(FP);
		}

		[Token(Token = "0x60017B6")]
		[Address(RVA = "0x1B5604C", Offset = "0x1B5604C", VA = "0x1B5604C")]
		public static FP DeltaAngle(FP current, FP target)
		{
			return default(FP);
		}

		[Token(Token = "0x60017B7")]
		[Address(RVA = "0x1B5618C", Offset = "0x1B5618C", VA = "0x1B5618C")]
		public static FP MoveTowardsAngle(FP current, FP target, float maxDelta)
		{
			return default(FP);
		}

		[Token(Token = "0x60017B8")]
		[Address(RVA = "0x1B56264", Offset = "0x1B56264", VA = "0x1B56264")]
		public static FP SmoothDamp(FP current, FP target, ref FP currentVelocity, FP smoothTime, FP maxSpeed)
		{
			return default(FP);
		}

		[Token(Token = "0x60017B9")]
		[Address(RVA = "0x1B56658", Offset = "0x1B56658", VA = "0x1B56658")]
		public static FP SmoothDamp(FP current, FP target, ref FP currentVelocity, FP smoothTime)
		{
			return default(FP);
		}

		[Token(Token = "0x60017BA")]
		[Address(RVA = "0x1B5632C", Offset = "0x1B5632C", VA = "0x1B5632C")]
		public static FP SmoothDamp(FP current, FP target, ref FP currentVelocity, FP smoothTime, FP maxSpeed, FP deltaTime)
		{
			return default(FP);
		}

		[Token(Token = "0x60017BB")]
		[Address(RVA = "0x1B5672C", Offset = "0x1B5672C", VA = "0x1B5672C")]
		public TSMath()
		{
		}
	}
	[Token(Token = "0x200018A")]
	public struct TSMatrix
	{
		[Token(Token = "0x40006BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FP M11;

		[Token(Token = "0x40006BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public FP M12;

		[Token(Token = "0x40006BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FP M13;

		[Token(Token = "0x40006BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FP M21;

		[Token(Token = "0x40006BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FP M22;

		[Token(Token = "0x40006C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public FP M23;

		[Token(Token = "0x40006C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public FP M31;

		[Token(Token = "0x40006C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FP M32;

		[Token(Token = "0x40006C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public FP M33;

		[Token(Token = "0x40006C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static TSMatrix InternalIdentity;

		[Token(Token = "0x40006C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static readonly TSMatrix Identity;

		[Token(Token = "0x40006C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public static readonly TSMatrix Zero;

		[Token(Token = "0x17000098")]
		public TSVector eulerAngles
		{
			[Token(Token = "0x60017BE")]
			[Address(RVA = "0x1B568EC", Offset = "0x1B568EC", VA = "0x1B568EC")]
			get
			{
				return default(TSVector);
			}
		}

		[Token(Token = "0x60017BD")]
		[Address(RVA = "0x1B56808", Offset = "0x1B56808", VA = "0x1B56808")]
		static TSMatrix()
		{
		}

		[Token(Token = "0x60017BF")]
		[Address(RVA = "0x1B56B40", Offset = "0x1B56B40", VA = "0x1B56B40")]
		public static TSMatrix CreateFromYawPitchRoll(FP yaw, FP pitch, FP roll)
		{
			return default(TSMatrix);
		}

		[Token(Token = "0x60017C0")]
		[Address(RVA = "0x1B57224", Offset = "0x1B57224", VA = "0x1B57224")]
		public static TSMatrix CreateRotationX(FP radians)
		{
			return default(TSMatrix);
		}

		[Token(Token = "0x60017C1")]
		[Address(RVA = "0x1B572E4", Offset = "0x1B572E4", VA = "0x1B572E4")]
		public static void CreateRotationX(FP radians, out TSMatrix result)
		{
		}

		[Token(Token = "0x60017C2")]
		[Address(RVA = "0x1B573C0", Offset = "0x1B573C0", VA = "0x1B573C0")]
		public static TSMatrix CreateRotationY(FP radians)
		{
			return default(TSMatrix);
		}

		[Token(Token = "0x60017C3")]
		[Address(RVA = "0x1B5748C", Offset = "0x1B5748C", VA = "0x1B5748C")]
		public static void CreateRotationY(FP radians, out TSMatrix result)
		{
		}

		[Token(Token = "0x60017C4")]
		[Address(RVA = "0x1B5756C", Offset = "0x1B5756C", VA = "0x1B5756C")]
		public static TSMatrix CreateRotationZ(FP radians)
		{
			return default(TSMatrix);
		}

		[Token(Token = "0x60017C5")]
		[Address(RVA = "0x1B57638", Offset = "0x1B57638", VA = "0x1B57638")]
		public static void CreateRotationZ(FP radians, out TSMatrix result)
		{
		}

		[Token(Token = "0x60017C6")]
		[Address(RVA = "0x1B57714", Offset = "0x1B57714", VA = "0x1B57714")]
		public TSMatrix(FP m11, FP m12, FP m13, FP m21, FP m22, FP m23, FP m31, FP m32, FP m33)
		{
		}

		[Token(Token = "0x60017C7")]
		[Address(RVA = "0x1B57730", Offset = "0x1B57730", VA = "0x1B57730")]
		public static TSMatrix Multiply(TSMatrix matrix1, TSMatrix matrix2)
		{
			return default(TSMatrix);
		}

		[Token(Token = "0x60017C8")]
		[Address(RVA = "0x1B577D8", Offset = "0x1B577D8", VA = "0x1B577D8")]
		public static void Multiply(ref TSMatrix matrix1, ref TSMatrix matrix2, out TSMatrix result)
		{
		}

		[Token(Token = "0x60017C9")]
		[Address(RVA = "0x1B57C2C", Offset = "0x1B57C2C", VA = "0x1B57C2C")]
		public static TSMatrix Add(TSMatrix matrix1, TSMatrix matrix2)
		{
			return default(TSMatrix);
		}

		[Token(Token = "0x60017CA")]
		[Address(RVA = "0x1B57CD4", Offset = "0x1B57CD4", VA = "0x1B57CD4")]
		public static void Add(ref TSMatrix matrix1, ref TSMatrix matrix2, out TSMatrix result)
		{
		}

		[Token(Token = "0x60017CB")]
		[Address(RVA = "0x1B57E08", Offset = "0x1B57E08", VA = "0x1B57E08")]
		public static TSMatrix Inverse(TSMatrix matrix)
		{
			return default(TSMatrix);
		}

		[Token(Token = "0x60017CC")]
		[Address(RVA = "0x1B585B8", Offset = "0x1B585B8", VA = "0x1B585B8")]
		public FP Determinant()
		{
			return default(FP);
		}

		[Token(Token = "0x60017CD")]
		[Address(RVA = "0x1B58740", Offset = "0x1B58740", VA = "0x1B58740")]
		public static void Invert(ref TSMatrix matrix, out TSMatrix result)
		{
		}

		[Token(Token = "0x60017CE")]
		[Address(RVA = "0x1B57EA8", Offset = "0x1B57EA8", VA = "0x1B57EA8")]
		public static void Inverse(ref TSMatrix matrix, out TSMatrix result)
		{
		}

		[Token(Token = "0x60017CF")]
		[Address(RVA = "0x1B58AB0", Offset = "0x1B58AB0", VA = "0x1B58AB0")]
		public static TSMatrix Multiply(TSMatrix matrix1, FP scaleFactor)
		{
			return default(TSMatrix);
		}

		[Token(Token = "0x60017D0")]
		[Address(RVA = "0x1B58B58", Offset = "0x1B58B58", VA = "0x1B58B58")]
		public static void Multiply(ref TSMatrix matrix1, FP scaleFactor, out TSMatrix result)
		{
		}

		[Token(Token = "0x60017D1")]
		[Address(RVA = "0x1B58C80", Offset = "0x1B58C80", VA = "0x1B58C80")]
		public static TSMatrix CreateFromLookAt(TSVector position, TSVector target)
		{
			return default(TSMatrix);
		}

		[Token(Token = "0x60017D2")]
		[Address(RVA = "0x1B58FD0", Offset = "0x1B58FD0", VA = "0x1B58FD0")]
		public static TSMatrix LookAt(TSVector forward, TSVector upwards)
		{
			return default(TSMatrix);
		}

		[Token(Token = "0x60017D3")]
		[Address(RVA = "0x1B58E78", Offset = "0x1B58E78", VA = "0x1B58E78")]
		public static void LookAt(TSVector forward, TSVector upwards, out TSMatrix result)
		{
		}

		[Token(Token = "0x60017D4")]
		[Address(RVA = "0x1B5928C", Offset = "0x1B5928C", VA = "0x1B5928C")]
		public static TSMatrix CreateFromQuaternion(TSQuaternion quaternion)
		{
			return default(TSMatrix);
		}

		[Token(Token = "0x60017D5")]
		[Address(RVA = "0x1B56E98", Offset = "0x1B56E98", VA = "0x1B56E98")]
		public static void CreateFromQuaternion(ref TSQuaternion quaternion, out TSMatrix result)
		{
		}

		[Token(Token = "0x60017D6")]
		[Address(RVA = "0x1B5932C", Offset = "0x1B5932C", VA = "0x1B5932C")]
		public static TSMatrix Transpose(TSMatrix matrix)
		{
			return default(TSMatrix);
		}

		[Token(Token = "0x60017D7")]
		[Address(RVA = "0x1B593C0", Offset = "0x1B593C0", VA = "0x1B593C0")]
		public static void Transpose(ref TSMatrix matrix, out TSMatrix result)
		{
		}

		[Token(Token = "0x60017D8")]
		[Address(RVA = "0x1B5940C", Offset = "0x1B5940C", VA = "0x1B5940C")]
		public static TSMatrix operator *(TSMatrix value1, TSMatrix value2)
		{
			return default(TSMatrix);
		}

		[Token(Token = "0x60017D9")]
		[Address(RVA = "0x1B594B4", Offset = "0x1B594B4", VA = "0x1B594B4")]
		public FP Trace()
		{
			return default(FP);
		}

		[Token(Token = "0x60017DA")]
		[Address(RVA = "0x1B5953C", Offset = "0x1B5953C", VA = "0x1B5953C")]
		public static TSMatrix operator +(TSMatrix value1, TSMatrix value2)
		{
			return default(TSMatrix);
		}

		[Token(Token = "0x60017DB")]
		[Address(RVA = "0x1B595E4", Offset = "0x1B595E4", VA = "0x1B595E4")]
		public static TSMatrix operator -(TSMatrix value1, TSMatrix value2)
		{
			return default(TSMatrix);
		}

		[Token(Token = "0x60017DC")]
		[Address(RVA = "0x1B596D8", Offset = "0x1B596D8", VA = "0x1B596D8")]
		public static bool operator ==(TSMatrix value1, TSMatrix value2)
		{
			return default(bool);
		}

		[Token(Token = "0x60017DD")]
		[Address(RVA = "0x1B59918", Offset = "0x1B59918", VA = "0x1B59918")]
		public static bool operator !=(TSMatrix value1, TSMatrix value2)
		{
			return default(bool);
		}

		[Token(Token = "0x60017DE")]
		[Address(RVA = "0x1B59B58", Offset = "0x1B59B58", VA = "0x1B59B58", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60017DF")]
		[Address(RVA = "0x1B59DD8", Offset = "0x1B59DD8", VA = "0x1B59DD8", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60017E0")]
		[Address(RVA = "0x1B59EBC", Offset = "0x1B59EBC", VA = "0x1B59EBC")]
		public static void CreateFromAxisAngle(ref TSVector axis, FP angle, out TSMatrix result)
		{
		}

		[Token(Token = "0x60017E1")]
		[Address(RVA = "0x1B5A264", Offset = "0x1B5A264", VA = "0x1B5A264")]
		public static TSMatrix AngleAxis(FP angle, TSVector axis)
		{
			return default(TSMatrix);
		}

		[Token(Token = "0x60017E2")]
		[Address(RVA = "0x1B5A30C", Offset = "0x1B5A30C", VA = "0x1B5A30C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200018B")]
	public struct TSMatrix4x4
	{
		[Token(Token = "0x40006C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FP M11;

		[Token(Token = "0x40006C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public FP M12;

		[Token(Token = "0x40006C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FP M13;

		[Token(Token = "0x40006CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FP M14;

		[Token(Token = "0x40006CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FP M21;

		[Token(Token = "0x40006CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public FP M22;

		[Token(Token = "0x40006CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public FP M23;

		[Token(Token = "0x40006CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FP M24;

		[Token(Token = "0x40006CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public FP M31;

		[Token(Token = "0x40006D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public FP M32;

		[Token(Token = "0x40006D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public FP M33;

		[Token(Token = "0x40006D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public FP M34;

		[Token(Token = "0x40006D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public FP M41;

		[Token(Token = "0x40006D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public FP M42;

		[Token(Token = "0x40006D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public FP M43;

		[Token(Token = "0x40006D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public FP M44;

		[Token(Token = "0x40006D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static TSMatrix4x4 InternalIdentity;

		[Token(Token = "0x40006D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public static readonly TSMatrix4x4 Identity;

		[Token(Token = "0x40006D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public static readonly TSMatrix4x4 Zero;

		[Token(Token = "0x17000099")]
		public FP determinant
		{
			[Token(Token = "0x60017EA")]
			[Address(RVA = "0x1B5C2D8", Offset = "0x1B5C2D8", VA = "0x1B5C2D8")]
			get
			{
				return default(FP);
			}
		}

		[Token(Token = "0x60017E3")]
		[Address(RVA = "0x1B5A5F0", Offset = "0x1B5A5F0", VA = "0x1B5A5F0")]
		static TSMatrix4x4()
		{
		}

		[Token(Token = "0x60017E4")]
		[Address(RVA = "0x1B5A6E4", Offset = "0x1B5A6E4", VA = "0x1B5A6E4")]
		public TSMatrix4x4(FP m11, FP m12, FP m13, FP m14, FP m21, FP m22, FP m23, FP m24, FP m31, FP m32, FP m33, FP m34, FP m41, FP m42, FP m43, FP m44)
		{
		}

		[Token(Token = "0x60017E5")]
		[Address(RVA = "0x1B5A718", Offset = "0x1B5A718", VA = "0x1B5A718")]
		public static TSMatrix4x4 Multiply(TSMatrix4x4 matrix1, TSMatrix4x4 matrix2)
		{
			return default(TSMatrix4x4);
		}

		[Token(Token = "0x60017E6")]
		[Address(RVA = "0x1B5A7C0", Offset = "0x1B5A7C0", VA = "0x1B5A7C0")]
		public static void Multiply(ref TSMatrix4x4 matrix1, ref TSMatrix4x4 matrix2, out TSMatrix4x4 result)
		{
		}

		[Token(Token = "0x60017E7")]
		[Address(RVA = "0x1B5B100", Offset = "0x1B5B100", VA = "0x1B5B100")]
		public static TSMatrix4x4 Add(TSMatrix4x4 matrix1, TSMatrix4x4 matrix2)
		{
			return default(TSMatrix4x4);
		}

		[Token(Token = "0x60017E8")]
		[Address(RVA = "0x1B5B1A8", Offset = "0x1B5B1A8", VA = "0x1B5B1A8")]
		public static void Add(ref TSMatrix4x4 matrix1, ref TSMatrix4x4 matrix2, out TSMatrix4x4 result)
		{
		}

		[Token(Token = "0x60017E9")]
		[Address(RVA = "0x1B5B368", Offset = "0x1B5B368", VA = "0x1B5B368")]
		public static TSMatrix4x4 Inverse(TSMatrix4x4 matrix)
		{
			return default(TSMatrix4x4);
		}

		[Token(Token = "0x60017EB")]
		[Address(RVA = "0x1B5B408", Offset = "0x1B5B408", VA = "0x1B5B408")]
		public static void Inverse(ref TSMatrix4x4 matrix, out TSMatrix4x4 result)
		{
		}

		[Token(Token = "0x60017EC")]
		[Address(RVA = "0x1B5C6F8", Offset = "0x1B5C6F8", VA = "0x1B5C6F8")]
		public static TSMatrix4x4 Multiply(TSMatrix4x4 matrix1, FP scaleFactor)
		{
			return default(TSMatrix4x4);
		}

		[Token(Token = "0x60017ED")]
		[Address(RVA = "0x1B5C7A0", Offset = "0x1B5C7A0", VA = "0x1B5C7A0")]
		public static void Multiply(ref TSMatrix4x4 matrix1, FP scaleFactor, out TSMatrix4x4 result)
		{
		}

		[Token(Token = "0x60017EE")]
		[Address(RVA = "0x1B5C954", Offset = "0x1B5C954", VA = "0x1B5C954")]
		public static TSMatrix4x4 Rotate(TSQuaternion quaternion)
		{
			return default(TSMatrix4x4);
		}

		[Token(Token = "0x60017EF")]
		[Address(RVA = "0x1B5C9F4", Offset = "0x1B5C9F4", VA = "0x1B5C9F4")]
		public static void Rotate(ref TSQuaternion quaternion, out TSMatrix4x4 result)
		{
		}

		[Token(Token = "0x60017F0")]
		[Address(RVA = "0x1B5CD40", Offset = "0x1B5CD40", VA = "0x1B5CD40")]
		public static TSMatrix4x4 Transpose(TSMatrix4x4 matrix)
		{
			return default(TSMatrix4x4);
		}

		[Token(Token = "0x60017F1")]
		[Address(RVA = "0x1B5CDEC", Offset = "0x1B5CDEC", VA = "0x1B5CDEC")]
		public static void Transpose(ref TSMatrix4x4 matrix, out TSMatrix4x4 result)
		{
		}

		[Token(Token = "0x60017F2")]
		[Address(RVA = "0x1B5CE70", Offset = "0x1B5CE70", VA = "0x1B5CE70")]
		public static TSMatrix4x4 operator *(TSMatrix4x4 value1, TSMatrix4x4 value2)
		{
			return default(TSMatrix4x4);
		}

		[Token(Token = "0x60017F3")]
		[Address(RVA = "0x1B5CF18", Offset = "0x1B5CF18", VA = "0x1B5CF18")]
		public FP Trace()
		{
			return default(FP);
		}

		[Token(Token = "0x60017F4")]
		[Address(RVA = "0x1B5CFAC", Offset = "0x1B5CFAC", VA = "0x1B5CFAC")]
		public static TSMatrix4x4 operator +(TSMatrix4x4 value1, TSMatrix4x4 value2)
		{
			return default(TSMatrix4x4);
		}

		[Token(Token = "0x60017F5")]
		[Address(RVA = "0x1B5D054", Offset = "0x1B5D054", VA = "0x1B5D054")]
		public static TSMatrix4x4 operator -(TSMatrix4x4 value)
		{
			return default(TSMatrix4x4);
		}

		[Token(Token = "0x60017F6")]
		[Address(RVA = "0x1B5D260", Offset = "0x1B5D260", VA = "0x1B5D260")]
		public static TSMatrix4x4 operator -(TSMatrix4x4 value1, TSMatrix4x4 value2)
		{
			return default(TSMatrix4x4);
		}

		[Token(Token = "0x60017F7")]
		[Address(RVA = "0x1B5D354", Offset = "0x1B5D354", VA = "0x1B5D354")]
		public static bool operator ==(TSMatrix4x4 value1, TSMatrix4x4 value2)
		{
			return default(bool);
		}

		[Token(Token = "0x60017F8")]
		[Address(RVA = "0x1B5D700", Offset = "0x1B5D700", VA = "0x1B5D700")]
		public static bool operator !=(TSMatrix4x4 value1, TSMatrix4x4 value2)
		{
			return default(bool);
		}

		[Token(Token = "0x60017F9")]
		[Address(RVA = "0x1B5DAAC", Offset = "0x1B5DAAC", VA = "0x1B5DAAC", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60017FA")]
		[Address(RVA = "0x1B5DF20", Offset = "0x1B5DF20", VA = "0x1B5DF20", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60017FB")]
		[Address(RVA = "0x1B5E0AC", Offset = "0x1B5E0AC", VA = "0x1B5E0AC")]
		public static TSMatrix4x4 Translate(FP xPosition, FP yPosition, FP zPosition)
		{
			return default(TSMatrix4x4);
		}

		[Token(Token = "0x60017FC")]
		[Address(RVA = "0x1B5E158", Offset = "0x1B5E158", VA = "0x1B5E158")]
		public static TSMatrix4x4 Translate(TSVector translation)
		{
			return default(TSMatrix4x4);
		}

		[Token(Token = "0x60017FD")]
		[Address(RVA = "0x1B5E1DC", Offset = "0x1B5E1DC", VA = "0x1B5E1DC")]
		public static TSMatrix4x4 Scale(FP xScale, FP yScale, FP zScale)
		{
			return default(TSMatrix4x4);
		}

		[Token(Token = "0x60017FE")]
		[Address(RVA = "0x1B5E288", Offset = "0x1B5E288", VA = "0x1B5E288")]
		public static TSMatrix4x4 Scale(FP xScale, FP yScale, FP zScale, TSVector centerPoint)
		{
			return default(TSMatrix4x4);
		}

		[Token(Token = "0x60017FF")]
		[Address(RVA = "0x1B5E3D4", Offset = "0x1B5E3D4", VA = "0x1B5E3D4")]
		public static TSMatrix4x4 Scale(TSVector scales)
		{
			return default(TSMatrix4x4);
		}

		[Token(Token = "0x6001800")]
		[Address(RVA = "0x1B5E458", Offset = "0x1B5E458", VA = "0x1B5E458")]
		public static TSMatrix4x4 Scale(TSVector scales, TSVector centerPoint)
		{
			return default(TSMatrix4x4);
		}

		[Token(Token = "0x6001801")]
		[Address(RVA = "0x1B5E518", Offset = "0x1B5E518", VA = "0x1B5E518")]
		public static TSMatrix4x4 Scale(FP scale)
		{
			return default(TSMatrix4x4);
		}

		[Token(Token = "0x6001802")]
		[Address(RVA = "0x1B5E594", Offset = "0x1B5E594", VA = "0x1B5E594")]
		public static TSMatrix4x4 Scale(FP scale, TSVector centerPoint)
		{
			return default(TSMatrix4x4);
		}

		[Token(Token = "0x6001803")]
		[Address(RVA = "0x1B5E644", Offset = "0x1B5E644", VA = "0x1B5E644")]
		public static TSMatrix4x4 RotateX(FP radians)
		{
			return default(TSMatrix4x4);
		}

		[Token(Token = "0x6001804")]
		[Address(RVA = "0x1B5E740", Offset = "0x1B5E740", VA = "0x1B5E740")]
		public static TSMatrix4x4 RotateX(FP radians, TSVector centerPoint)
		{
			return default(TSMatrix4x4);
		}

		[Token(Token = "0x6001805")]
		[Address(RVA = "0x1B5E8FC", Offset = "0x1B5E8FC", VA = "0x1B5E8FC")]
		public static TSMatrix4x4 RotateY(FP radians)
		{
			return default(TSMatrix4x4);
		}

		[Token(Token = "0x6001806")]
		[Address(RVA = "0x1B5E9F4", Offset = "0x1B5E9F4", VA = "0x1B5E9F4")]
		public static TSMatrix4x4 RotateY(FP radians, TSVector centerPoint)
		{
			return default(TSMatrix4x4);
		}

		[Token(Token = "0x6001807")]
		[Address(RVA = "0x1B5EBAC", Offset = "0x1B5EBAC", VA = "0x1B5EBAC")]
		public static TSMatrix4x4 RotateZ(FP radians)
		{
			return default(TSMatrix4x4);
		}

		[Token(Token = "0x6001808")]
		[Address(RVA = "0x1B5ECA4", Offset = "0x1B5ECA4", VA = "0x1B5ECA4")]
		public static TSMatrix4x4 RotateZ(FP radians, TSVector centerPoint)
		{
			return default(TSMatrix4x4);
		}

		[Token(Token = "0x6001809")]
		[Address(RVA = "0x1B5EE48", Offset = "0x1B5EE48", VA = "0x1B5EE48")]
		public static void AxisAngle(ref TSVector axis, FP angle, out TSMatrix4x4 result)
		{
		}

		[Token(Token = "0x600180A")]
		[Address(RVA = "0x1B5F26C", Offset = "0x1B5F26C", VA = "0x1B5F26C")]
		public static TSMatrix4x4 AngleAxis(FP angle, TSVector axis)
		{
			return default(TSMatrix4x4);
		}

		[Token(Token = "0x600180B")]
		[Address(RVA = "0x1B5F314", Offset = "0x1B5F314", VA = "0x1B5F314", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600180C")]
		[Address(RVA = "0x1B5F7B8", Offset = "0x1B5F7B8", VA = "0x1B5F7B8")]
		public static void TRS(TSVector translation, TSQuaternion rotation, TSVector scale, out TSMatrix4x4 matrix)
		{
		}

		[Token(Token = "0x600180D")]
		[Address(RVA = "0x1B5F8E8", Offset = "0x1B5F8E8", VA = "0x1B5F8E8")]
		public static TSMatrix4x4 TRS(TSVector translation, TSQuaternion rotation, TSVector scale)
		{
			return default(TSMatrix4x4);
		}
	}
	[Serializable]
	[Token(Token = "0x200018C")]
	public struct TSQuaternion
	{
		[Token(Token = "0x40006DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FP x;

		[Token(Token = "0x40006DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public FP y;

		[Token(Token = "0x40006DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FP z;

		[Token(Token = "0x40006DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FP w;

		[Token(Token = "0x40006DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly TSQuaternion identity;

		[Token(Token = "0x1700009A")]
		public TSVector eulerAngles
		{
			[Token(Token = "0x6001812")]
			[Address(RVA = "0x1B5FD24", Offset = "0x1B5FD24", VA = "0x1B5FD24")]
			get
			{
				return default(TSVector);
			}
		}

		[Token(Token = "0x600180E")]
		[Address(RVA = "0x1B5F9F0", Offset = "0x1B5F9F0", VA = "0x1B5F9F0")]
		static TSQuaternion()
		{
		}

		[Token(Token = "0x600180F")]
		[Address(RVA = "0x1B5FAA8", Offset = "0x1B5FAA8", VA = "0x1B5FAA8")]
		public TSQuaternion(FP x, FP y, FP z, FP w)
		{
		}

		[Token(Token = "0x6001810")]
		[Address(RVA = "0x1B5FAB4", Offset = "0x1B5FAB4", VA = "0x1B5FAB4")]
		public void Set(FP new_x, FP new_y, FP new_z, FP new_w)
		{
		}

		[Token(Token = "0x6001811")]
		[Address(RVA = "0x1B5FAC0", Offset = "0x1B5FAC0", VA = "0x1B5FAC0")]
		public void SetFromToRotation(TSVector fromDirection, TSVector toDirection)
		{
		}

		[Token(Token = "0x6001813")]
		[Address(RVA = "0x1B6013C", Offset = "0x1B6013C", VA = "0x1B6013C")]
		public static FP Angle(TSQuaternion a, TSQuaternion b)
		{
			return default(FP);
		}

		[Token(Token = "0x6001814")]
		[Address(RVA = "0x1B604AC", Offset = "0x1B604AC", VA = "0x1B604AC")]
		public static TSQuaternion Add(TSQuaternion quaternion1, TSQuaternion quaternion2)
		{
			return default(TSQuaternion);
		}

		[Token(Token = "0x6001815")]
		[Address(RVA = "0x1B60614", Offset = "0x1B60614", VA = "0x1B60614")]
		public static TSQuaternion LookRotation(TSVector forward)
		{
			return default(TSQuaternion);
		}

		[Token(Token = "0x6001816")]
		[Address(RVA = "0x1B607D8", Offset = "0x1B607D8", VA = "0x1B607D8")]
		public static TSQuaternion LookRotation(TSVector forward, TSVector upwards)
		{
			return default(TSQuaternion);
		}

		[Token(Token = "0x6001817")]
		[Address(RVA = "0x1B608E8", Offset = "0x1B608E8", VA = "0x1B608E8")]
		public static TSQuaternion Slerp(TSQuaternion from, TSQuaternion to, FP t)
		{
			return default(TSQuaternion);
		}

		[Token(Token = "0x6001818")]
		[Address(RVA = "0x1B60DFC", Offset = "0x1B60DFC", VA = "0x1B60DFC")]
		public static TSQuaternion RotateTowards(TSQuaternion from, TSQuaternion to, FP maxDegreesDelta)
		{
			return default(TSQuaternion);
		}

		[Token(Token = "0x6001819")]
		[Address(RVA = "0x1B61114", Offset = "0x1B61114", VA = "0x1B61114")]
		public static TSQuaternion Euler(FP x, FP y, FP z)
		{
			return default(TSQuaternion);
		}

		[Token(Token = "0x600181A")]
		[Address(RVA = "0x1B61234", Offset = "0x1B61234", VA = "0x1B61234")]
		public static TSQuaternion Euler(TSVector eulerAngles)
		{
			return default(TSQuaternion);
		}

		[Token(Token = "0x600181B")]
		[Address(RVA = "0x1B612B8", Offset = "0x1B612B8", VA = "0x1B612B8")]
		public static TSQuaternion AngleAxis(FP angle, TSVector axis)
		{
			return default(TSQuaternion);
		}

		[Token(Token = "0x600181C")]
		[Address(RVA = "0x1B56C30", Offset = "0x1B56C30", VA = "0x1B56C30")]
		public static void CreateFromYawPitchRoll(FP yaw, FP pitch, FP roll, out TSQuaternion result)
		{
		}

		[Token(Token = "0x600181D")]
		[Address(RVA = "0x1B60544", Offset = "0x1B60544", VA = "0x1B60544")]
		public static void Add(ref TSQuaternion quaternion1, ref TSQuaternion quaternion2, out TSQuaternion result)
		{
		}

		[Token(Token = "0x600181E")]
		[Address(RVA = "0x1B61448", Offset = "0x1B61448", VA = "0x1B61448")]
		public static TSQuaternion Conjugate(TSQuaternion value)
		{
			return default(TSQuaternion);
		}

		[Token(Token = "0x600181F")]
		[Address(RVA = "0x1B60BD4", Offset = "0x1B60BD4", VA = "0x1B60BD4")]
		public static FP Dot(TSQuaternion a, TSQuaternion b)
		{
			return default(FP);
		}

		[Token(Token = "0x6001820")]
		[Address(RVA = "0x1B602B4", Offset = "0x1B602B4", VA = "0x1B602B4")]
		public static TSQuaternion Inverse(TSQuaternion rotation)
		{
			return default(TSQuaternion);
		}

		[Token(Token = "0x6001821")]
		[Address(RVA = "0x1B5FB90", Offset = "0x1B5FB90", VA = "0x1B5FB90")]
		public static TSQuaternion FromToRotation(TSVector fromVector, TSVector toVector)
		{
			return default(TSQuaternion);
		}

		[Token(Token = "0x6001822")]
		[Address(RVA = "0x1B617A0", Offset = "0x1B617A0", VA = "0x1B617A0")]
		public static TSQuaternion Lerp(TSQuaternion a, TSQuaternion b, FP t)
		{
			return default(TSQuaternion);
		}

		[Token(Token = "0x6001823")]
		[Address(RVA = "0x1B618C0", Offset = "0x1B618C0", VA = "0x1B618C0")]
		public static TSQuaternion LerpUnclamped(TSQuaternion a, TSQuaternion b, FP t)
		{
			return default(TSQuaternion);
		}

		[Token(Token = "0x6001824")]
		[Address(RVA = "0x1B619E4", Offset = "0x1B619E4", VA = "0x1B619E4")]
		public static TSQuaternion Subtract(TSQuaternion quaternion1, TSQuaternion quaternion2)
		{
			return default(TSQuaternion);
		}

		[Token(Token = "0x6001825")]
		[Address(RVA = "0x1B61A7C", Offset = "0x1B61A7C", VA = "0x1B61A7C")]
		public static void Subtract(ref TSQuaternion quaternion1, ref TSQuaternion quaternion2, out TSQuaternion result)
		{
		}

		[Token(Token = "0x6001826")]
		[Address(RVA = "0x1B61B4C", Offset = "0x1B61B4C", VA = "0x1B61B4C")]
		public static TSQuaternion Multiply(TSQuaternion quaternion1, TSQuaternion quaternion2)
		{
			return default(TSQuaternion);
		}

		[Token(Token = "0x6001827")]
		[Address(RVA = "0x1B61BE4", Offset = "0x1B61BE4", VA = "0x1B61BE4")]
		public static void Multiply(ref TSQuaternion quaternion1, ref TSQuaternion quaternion2, out TSQuaternion result)
		{
		}

		[Token(Token = "0x6001828")]
		[Address(RVA = "0x1B60CCC", Offset = "0x1B60CCC", VA = "0x1B60CCC")]
		public static TSQuaternion Multiply(TSQuaternion quaternion1, FP scaleFactor)
		{
			return default(TSQuaternion);
		}

		[Token(Token = "0x6001829")]
		[Address(RVA = "0x1B61E74", Offset = "0x1B61E74", VA = "0x1B61E74")]
		public static void Multiply(ref TSQuaternion quaternion1, FP scaleFactor, out TSQuaternion result)
		{
		}

		[Token(Token = "0x600182A")]
		[Address(RVA = "0x1B61624", Offset = "0x1B61624", VA = "0x1B61624")]
		public void Normalize()
		{
		}

		[Token(Token = "0x600182B")]
		[Address(RVA = "0x1B60748", Offset = "0x1B60748", VA = "0x1B60748")]
		public static TSQuaternion CreateFromMatrix(TSMatrix matrix)
		{
			return default(TSQuaternion);
		}

		[Token(Token = "0x600182C")]
		[Address(RVA = "0x1B61F38", Offset = "0x1B61F38", VA = "0x1B61F38")]
		public static void CreateFromMatrix(ref TSMatrix matrix, out TSQuaternion result)
		{
		}

		[Token(Token = "0x600182D")]
		[Address(RVA = "0x1B60414", Offset = "0x1B60414", VA = "0x1B60414")]
		public static TSQuaternion operator *(TSQuaternion value1, TSQuaternion value2)
		{
			return default(TSQuaternion);
		}

		[Token(Token = "0x600182E")]
		[Address(RVA = "0x1B60D64", Offset = "0x1B60D64", VA = "0x1B60D64")]
		public static TSQuaternion operator +(TSQuaternion value1, TSQuaternion value2)
		{
			return default(TSQuaternion);
		}

		[Token(Token = "0x600182F")]
		[Address(RVA = "0x1B62414", Offset = "0x1B62414", VA = "0x1B62414")]
		public static TSQuaternion operator -(TSQuaternion value1, TSQuaternion value2)
		{
			return default(TSQuaternion);
		}

		[Token(Token = "0x6001830")]
		[Address(RVA = "0x1B624AC", Offset = "0x1B624AC", VA = "0x1B624AC")]
		public static TSVector operator *(TSQuaternion quat, TSVector vec)
		{
			return default(TSVector);
		}

		[Token(Token = "0x6001831")]
		[Address(RVA = "0x1B62880", Offset = "0x1B62880", VA = "0x1B62880", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200018D")]
	public class TSRandom
	{
		[Token(Token = "0x40006DF")]
		private const int N = 624;

		[Token(Token = "0x40006E0")]
		private const int M = 397;

		[Token(Token = "0x40006E1")]
		private const uint MATRIX_A = 2567483615u;

		[Token(Token = "0x40006E2")]
		private const uint UPPER_MASK = 2147483648u;

		[Token(Token = "0x40006E3")]
		private const uint LOWER_MASK = 2147483647u;

		[Token(Token = "0x40006E4")]
		private const int MAX_RAND_INT = int.MaxValue;

		[Token(Token = "0x40006E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private uint[] mag01;

		[Token(Token = "0x40006E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private uint[] mt;

		[Token(Token = "0x40006E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int mti;

		[Token(Token = "0x40006E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static TSRandom instance;

		[Token(Token = "0x1700009B")]
		public static int MaxRandomInt
		{
			[Token(Token = "0x6001837")]
			[Address(RVA = "0x1B6305C", Offset = "0x1B6305C", VA = "0x1B6305C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700009C")]
		public static FP value
		{
			[Token(Token = "0x600183F")]
			[Address(RVA = "0x1B633FC", Offset = "0x1B633FC", VA = "0x1B633FC")]
			get
			{
				return default(FP);
			}
		}

		[Token(Token = "0x1700009D")]
		public static TSVector insideUnitSphere
		{
			[Token(Token = "0x6001840")]
			[Address(RVA = "0x1B63454", Offset = "0x1B63454", VA = "0x1B63454")]
			get
			{
				return default(TSVector);
			}
		}

		[Token(Token = "0x6001832")]
		[Address(RVA = "0x1B62A44", Offset = "0x1B62A44", VA = "0x1B62A44")]
		internal static void Init()
		{
		}

		[Token(Token = "0x6001833")]
		[Address(RVA = "0x1B62A9C", Offset = "0x1B62A9C", VA = "0x1B62A9C")]
		public static TSRandom New(int seed)
		{
			return null;
		}

		[Token(Token = "0x6001834")]
		[Address(RVA = "0x1B62BB8", Offset = "0x1B62BB8", VA = "0x1B62BB8")]
		private TSRandom()
		{
		}

		[Token(Token = "0x6001835")]
		[Address(RVA = "0x1B62AFC", Offset = "0x1B62AFC", VA = "0x1B62AFC")]
		private TSRandom(int seed)
		{
		}

		[Token(Token = "0x6001836")]
		[Address(RVA = "0x1B62D54", Offset = "0x1B62D54", VA = "0x1B62D54")]
		private TSRandom(int[] init)
		{
		}

		[Token(Token = "0x6001838")]
		[Address(RVA = "0x1B63064", Offset = "0x1B63064", VA = "0x1B63064")]
		public int Next()
		{
			return default(int);
		}

		[Token(Token = "0x6001839")]
		[Address(RVA = "0x1B63094", Offset = "0x1B63094", VA = "0x1B63094")]
		public static int CallNext()
		{
			return default(int);
		}

		[Token(Token = "0x600183A")]
		[Address(RVA = "0x1B630F4", Offset = "0x1B630F4", VA = "0x1B630F4")]
		public int Next(int minValue, int maxValue)
		{
			return default(int);
		}

		[Token(Token = "0x600183B")]
		[Address(RVA = "0x1B63130", Offset = "0x1B63130", VA = "0x1B63130")]
		public FP Next(float minValue, float maxValue)
		{
			return default(FP);
		}

		[Token(Token = "0x600183C")]
		[Address(RVA = "0x1B63300", Offset = "0x1B63300", VA = "0x1B63300")]
		public static int Range(int minValue, int maxValue)
		{
			return default(int);
		}

		[Token(Token = "0x600183D")]
		[Address(RVA = "0x1B6338C", Offset = "0x1B6338C", VA = "0x1B6338C")]
		public static FP Range(float minValue, float maxValue)
		{
			return default(FP);
		}

		[Token(Token = "0x600183E")]
		[Address(RVA = "0x1B63268", Offset = "0x1B63268", VA = "0x1B63268")]
		public FP NextFP()
		{
			return default(FP);
		}

		[Token(Token = "0x6001841")]
		[Address(RVA = "0x1B634A0", Offset = "0x1B634A0", VA = "0x1B634A0")]
		private float NextFloat()
		{
			return default(float);
		}

		[Token(Token = "0x6001842")]
		[Address(RVA = "0x1B634EC", Offset = "0x1B634EC", VA = "0x1B634EC")]
		private float NextFloat(bool includeOne)
		{
			return default(float);
		}

		[Token(Token = "0x6001843")]
		[Address(RVA = "0x1B63554", Offset = "0x1B63554", VA = "0x1B63554")]
		private float NextFloatPositive()
		{
			return default(float);
		}

		[Token(Token = "0x6001844")]
		[Address(RVA = "0x1B635B0", Offset = "0x1B635B0", VA = "0x1B635B0")]
		private double NextDouble()
		{
			return default(double);
		}

		[Token(Token = "0x6001845")]
		[Address(RVA = "0x1B635D4", Offset = "0x1B635D4", VA = "0x1B635D4")]
		private double NextDouble(bool includeOne)
		{
			return default(double);
		}

		[Token(Token = "0x6001846")]
		[Address(RVA = "0x1B63614", Offset = "0x1B63614", VA = "0x1B63614")]
		private double NextDoublePositive()
		{
			return default(double);
		}

		[Token(Token = "0x6001847")]
		[Address(RVA = "0x1B63640", Offset = "0x1B63640", VA = "0x1B63640")]
		private double Next53BitRes()
		{
			return default(double);
		}

		[Token(Token = "0x6001848")]
		[Address(RVA = "0x1B6369C", Offset = "0x1B6369C", VA = "0x1B6369C")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001849")]
		[Address(RVA = "0x1B6372C", Offset = "0x1B6372C", VA = "0x1B6372C")]
		public void Initialize(int seed)
		{
		}

		[Token(Token = "0x600184A")]
		[Address(RVA = "0x1B63730", Offset = "0x1B63730", VA = "0x1B63730")]
		public void Initialize(int[] init)
		{
		}

		[Token(Token = "0x600184B")]
		[Address(RVA = "0x1B62CB0", Offset = "0x1B62CB0", VA = "0x1B62CB0")]
		private void init_genrand(uint s)
		{
		}

		[Token(Token = "0x600184C")]
		[Address(RVA = "0x1B62E78", Offset = "0x1B62E78", VA = "0x1B62E78")]
		private void init_by_array(uint[] init_key, uint key_length)
		{
		}

		[Token(Token = "0x600184D")]
		[Address(RVA = "0x1B63804", Offset = "0x1B63804", VA = "0x1B63804")]
		private uint genrand_int32()
		{
			return default(uint);
		}

		[Token(Token = "0x600184E")]
		[Address(RVA = "0x1B6307C", Offset = "0x1B6307C", VA = "0x1B6307C")]
		private int genrand_int31()
		{
			return default(int);
		}

		[Token(Token = "0x600184F")]
		[Address(RVA = "0x1B63A10", Offset = "0x1B63A10", VA = "0x1B63A10")]
		private FP genrand_FP()
		{
			return default(FP);
		}

		[Token(Token = "0x6001850")]
		[Address(RVA = "0x1B63530", Offset = "0x1B63530", VA = "0x1B63530")]
		private double genrand_real1()
		{
			return default(double);
		}

		[Token(Token = "0x6001851")]
		[Address(RVA = "0x1B634C8", Offset = "0x1B634C8", VA = "0x1B634C8")]
		private double genrand_real2()
		{
			return default(double);
		}

		[Token(Token = "0x6001852")]
		[Address(RVA = "0x1B63584", Offset = "0x1B63584", VA = "0x1B63584")]
		private double genrand_real3()
		{
			return default(double);
		}

		[Token(Token = "0x6001853")]
		[Address(RVA = "0x1B63644", Offset = "0x1B63644", VA = "0x1B63644")]
		private double genrand_res53()
		{
			return default(double);
		}
	}
	[Serializable]
	[Token(Token = "0x200018E")]
	public struct TSVector
	{
		[Token(Token = "0x40006E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static FP ZeroEpsilonSq;

		[Token(Token = "0x40006EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal static TSVector InternalZero;

		[Token(Token = "0x40006EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal static TSVector Arbitrary;

		[Token(Token = "0x40006EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FP x;

		[Token(Token = "0x40006ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public FP y;

		[Token(Token = "0x40006EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FP z;

		[Token(Token = "0x40006EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static readonly TSVector zero;

		[Token(Token = "0x40006F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static readonly TSVector left;

		[Token(Token = "0x40006F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public static readonly TSVector right;

		[Token(Token = "0x40006F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public static readonly TSVector up;

		[Token(Token = "0x40006F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public static readonly TSVector down;

		[Token(Token = "0x40006F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public static readonly TSVector back;

		[Token(Token = "0x40006F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public static readonly TSVector forward;

		[Token(Token = "0x40006F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public static readonly TSVector one;

		[Token(Token = "0x40006F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public static readonly TSVector MinValue;

		[Token(Token = "0x40006F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public static readonly TSVector MaxValue;

		[Token(Token = "0x1700009E")]
		public FP sqrMagnitude
		{
			[Token(Token = "0x6001856")]
			[Address(RVA = "0x1B6156C", Offset = "0x1B6156C", VA = "0x1B6156C")]
			get
			{
				return default(FP);
			}
		}

		[Token(Token = "0x1700009F")]
		public FP magnitude
		{
			[Token(Token = "0x6001857")]
			[Address(RVA = "0x1B63EF0", Offset = "0x1B63EF0", VA = "0x1B63EF0")]
			get
			{
				return default(FP);
			}
		}

		[Token(Token = "0x170000A0")]
		public TSVector normalized
		{
			[Token(Token = "0x6001859")]
			[Address(RVA = "0x1B640F8", Offset = "0x1B640F8", VA = "0x1B640F8")]
			get
			{
				return default(TSVector);
			}
		}

		[Token(Token = "0x6001854")]
		[Address(RVA = "0x1B63AC4", Offset = "0x1B63AC4", VA = "0x1B63AC4")]
		static TSVector()
		{
		}

		[Token(Token = "0x6001855")]
		[Address(RVA = "0x1B63E44", Offset = "0x1B63E44", VA = "0x1B63E44")]
		public static TSVector Abs(TSVector other)
		{
			return default(TSVector);
		}

		[Token(Token = "0x6001858")]
		[Address(RVA = "0x1B63FB0", Offset = "0x1B63FB0", VA = "0x1B63FB0")]
		public static TSVector ClampMagnitude(TSVector vector, FP maxLength)
		{
			return default(TSVector);
		}

		[Token(Token = "0x600185A")]
		[Address(RVA = "0x1B63D8C", Offset = "0x1B63D8C", VA = "0x1B63D8C")]
		public TSVector(int x, int y, int z)
		{
		}

		[Token(Token = "0x600185B")]
		[Address(RVA = "0x1B63494", Offset = "0x1B63494", VA = "0x1B63494")]
		public TSVector(FP x, FP y, FP z)
		{
		}

		[Token(Token = "0x600185C")]
		[Address(RVA = "0x1B64144", Offset = "0x1B64144", VA = "0x1B64144")]
		public void Scale(TSVector other)
		{
		}

		[Token(Token = "0x600185D")]
		[Address(RVA = "0x1B641F4", Offset = "0x1B641F4", VA = "0x1B641F4")]
		public void Set(FP x, FP y, FP z)
		{
		}

		[Token(Token = "0x600185E")]
		[Address(RVA = "0x1B63E38", Offset = "0x1B63E38", VA = "0x1B63E38")]
		public TSVector(FP xyz)
		{
		}

		[Token(Token = "0x600185F")]
		[Address(RVA = "0x1B64200", Offset = "0x1B64200", VA = "0x1B64200")]
		public static TSVector Lerp(TSVector from, TSVector to, FP percent)
		{
			return default(TSVector);
		}

		[Token(Token = "0x6001860")]
		[Address(RVA = "0x1B643C0", Offset = "0x1B643C0", VA = "0x1B643C0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001861")]
		[Address(RVA = "0x1B64498", Offset = "0x1B64498", VA = "0x1B64498", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001862")]
		[Address(RVA = "0x1B645C4", Offset = "0x1B645C4", VA = "0x1B645C4")]
		public static TSVector Scale(TSVector vecA, TSVector vecB)
		{
			return default(TSVector);
		}

		[Token(Token = "0x6001863")]
		[Address(RVA = "0x1B6468C", Offset = "0x1B6468C", VA = "0x1B6468C")]
		public static bool operator ==(TSVector value1, TSVector value2)
		{
			return default(bool);
		}

		[Token(Token = "0x6001864")]
		[Address(RVA = "0x1B64794", Offset = "0x1B64794", VA = "0x1B64794")]
		public static bool operator !=(TSVector value1, TSVector value2)
		{
			return default(bool);
		}

		[Token(Token = "0x6001865")]
		[Address(RVA = "0x1B6489C", Offset = "0x1B6489C", VA = "0x1B6489C")]
		public static TSVector Min(TSVector value1, TSVector value2)
		{
			return default(TSVector);
		}

		[Token(Token = "0x6001866")]
		[Address(RVA = "0x1B6493C", Offset = "0x1B6493C", VA = "0x1B6493C")]
		public static void Min(ref TSVector value1, ref TSVector value2, out TSVector result)
		{
		}

		[Token(Token = "0x6001867")]
		[Address(RVA = "0x1B64A5C", Offset = "0x1B64A5C", VA = "0x1B64A5C")]
		public static TSVector Max(TSVector value1, TSVector value2)
		{
			return default(TSVector);
		}

		[Token(Token = "0x6001868")]
		[Address(RVA = "0x1B64C1C", Offset = "0x1B64C1C", VA = "0x1B64C1C")]
		public static FP Distance(TSVector v1, TSVector v2)
		{
			return default(FP);
		}

		[Token(Token = "0x6001869")]
		[Address(RVA = "0x1B64AFC", Offset = "0x1B64AFC", VA = "0x1B64AFC")]
		public static void Max(ref TSVector value1, ref TSVector value2, out TSVector result)
		{
		}

		[Token(Token = "0x600186A")]
		[Address(RVA = "0x1B64D6C", Offset = "0x1B64D6C", VA = "0x1B64D6C")]
		public void MakeZero()
		{
		}

		[Token(Token = "0x600186B")]
		[Address(RVA = "0x1B64DF8", Offset = "0x1B64DF8", VA = "0x1B64DF8")]
		public bool IsZero()
		{
			return default(bool);
		}

		[Token(Token = "0x600186C")]
		[Address(RVA = "0x1B64E7C", Offset = "0x1B64E7C", VA = "0x1B64E7C")]
		public bool IsNearlyZero()
		{
			return default(bool);
		}

		[Token(Token = "0x600186D")]
		[Address(RVA = "0x1B64F24", Offset = "0x1B64F24", VA = "0x1B64F24")]
		public static TSVector Transform(TSVector position, TSMatrix matrix)
		{
			return default(TSVector);
		}

		[Token(Token = "0x600186E")]
		[Address(RVA = "0x1B64FC4", Offset = "0x1B64FC4", VA = "0x1B64FC4")]
		public static void Transform(ref TSVector position, ref TSMatrix matrix, out TSVector result)
		{
		}

		[Token(Token = "0x600186F")]
		[Address(RVA = "0x1B6517C", Offset = "0x1B6517C", VA = "0x1B6517C")]
		public static void TransposedTransform(ref TSVector position, ref TSMatrix matrix, out TSVector result)
		{
		}

		[Token(Token = "0x6001870")]
		[Address(RVA = "0x1B614F8", Offset = "0x1B614F8", VA = "0x1B614F8")]
		public static FP Dot(TSVector vector1, TSVector vector2)
		{
			return default(FP);
		}

		[Token(Token = "0x6001871")]
		[Address(RVA = "0x1B65334", Offset = "0x1B65334", VA = "0x1B65334")]
		public static FP Dot(ref TSVector vector1, ref TSVector vector2)
		{
			return default(FP);
		}

		[Token(Token = "0x6001872")]
		[Address(RVA = "0x1B65404", Offset = "0x1B65404", VA = "0x1B65404")]
		public static TSVector Project(TSVector vector, TSVector onNormal)
		{
			return default(TSVector);
		}

		[Token(Token = "0x6001873")]
		[Address(RVA = "0x1B656BC", Offset = "0x1B656BC", VA = "0x1B656BC")]
		public static TSVector ProjectOnPlane(TSVector vector, TSVector planeNormal)
		{
			return default(TSVector);
		}

		[Token(Token = "0x6001874")]
		[Address(RVA = "0x1B657C0", Offset = "0x1B657C0", VA = "0x1B657C0")]
		public static FP Angle(TSVector from, TSVector to)
		{
			return default(FP);
		}

		[Token(Token = "0x6001875")]
		[Address(RVA = "0x1B65944", Offset = "0x1B65944", VA = "0x1B65944")]
		public static FP SignedAngle(TSVector from, TSVector to, TSVector axis)
		{
			return default(FP);
		}

		[Token(Token = "0x6001876")]
		[Address(RVA = "0x1B65B7C", Offset = "0x1B65B7C", VA = "0x1B65B7C")]
		public static TSVector Add(TSVector value1, TSVector value2)
		{
			return default(TSVector);
		}

		[Token(Token = "0x6001877")]
		[Address(RVA = "0x1B65C1C", Offset = "0x1B65C1C", VA = "0x1B65C1C")]
		public static void Add(ref TSVector value1, ref TSVector value2, out TSVector result)
		{
		}

		[Token(Token = "0x6001878")]
		[Address(RVA = "0x1B65CE4", Offset = "0x1B65CE4", VA = "0x1B65CE4")]
		public static TSVector Divide(TSVector value1, FP scaleFactor)
		{
			return default(TSVector);
		}

		[Token(Token = "0x6001879")]
		[Address(RVA = "0x1B65D84", Offset = "0x1B65D84", VA = "0x1B65D84")]
		public static void Divide(ref TSVector value1, FP scaleFactor, out TSVector result)
		{
		}

		[Token(Token = "0x600187A")]
		[Address(RVA = "0x1B65E34", Offset = "0x1B65E34", VA = "0x1B65E34")]
		public static TSVector Subtract(TSVector value1, TSVector value2)
		{
			return default(TSVector);
		}

		[Token(Token = "0x600187B")]
		[Address(RVA = "0x1B65ED4", Offset = "0x1B65ED4", VA = "0x1B65ED4")]
		public static void Subtract(ref TSVector value1, ref TSVector value2, out TSVector result)
		{
		}

		[Token(Token = "0x600187C")]
		[Address(RVA = "0x1B591EC", Offset = "0x1B591EC", VA = "0x1B591EC")]
		public static TSVector Cross(TSVector vector1, TSVector vector2)
		{
			return default(TSVector);
		}

		[Token(Token = "0x600187D")]
		[Address(RVA = "0x1B65F9C", Offset = "0x1B65F9C", VA = "0x1B65F9C")]
		public static void Cross(ref TSVector vector1, ref TSVector vector2, out TSVector result)
		{
		}

		[Token(Token = "0x600187E")]
		[Address(RVA = "0x1B660DC", Offset = "0x1B660DC", VA = "0x1B660DC", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x600187F")]
		[Address(RVA = "0x1B66130", Offset = "0x1B66130", VA = "0x1B66130")]
		public void Negate()
		{
		}

		[Token(Token = "0x6001880")]
		[Address(RVA = "0x1B661CC", Offset = "0x1B661CC", VA = "0x1B661CC")]
		public static TSVector Negate(TSVector value)
		{
			return default(TSVector);
		}

		[Token(Token = "0x6001881")]
		[Address(RVA = "0x1B66260", Offset = "0x1B66260", VA = "0x1B66260")]
		public static void Negate(ref TSVector value, out TSVector result)
		{
		}

		[Token(Token = "0x6001882")]
		[Address(RVA = "0x1B64064", Offset = "0x1B64064", VA = "0x1B64064")]
		public static TSVector Normalize(TSVector value)
		{
			return default(TSVector);
		}

		[Token(Token = "0x6001883")]
		[Address(RVA = "0x1B590B8", Offset = "0x1B590B8", VA = "0x1B590B8")]
		public void Normalize()
		{
		}

		[Token(Token = "0x6001884")]
		[Address(RVA = "0x1B6630C", Offset = "0x1B6630C", VA = "0x1B6630C")]
		public static void Normalize(ref TSVector value, out TSVector result)
		{
		}

		[Token(Token = "0x6001885")]
		[Address(RVA = "0x1B6643C", Offset = "0x1B6643C", VA = "0x1B6643C")]
		public static void Swap(ref TSVector vector1, ref TSVector vector2)
		{
		}

		[Token(Token = "0x6001886")]
		[Address(RVA = "0x1B66470", Offset = "0x1B66470", VA = "0x1B66470")]
		public static TSVector Multiply(TSVector value1, FP scaleFactor)
		{
			return default(TSVector);
		}

		[Token(Token = "0x6001887")]
		[Address(RVA = "0x1B66510", Offset = "0x1B66510", VA = "0x1B66510")]
		public static void Multiply(ref TSVector value1, FP scaleFactor, out TSVector result)
		{
		}

		[Token(Token = "0x6001888")]
		[Address(RVA = "0x1B665C0", Offset = "0x1B665C0", VA = "0x1B665C0")]
		public static TSVector operator %(TSVector value1, TSVector value2)
		{
			return default(TSVector);
		}

		[Token(Token = "0x6001889")]
		[Address(RVA = "0x1B66660", Offset = "0x1B66660", VA = "0x1B66660")]
		public static FP operator *(TSVector value1, TSVector value2)
		{
			return default(FP);
		}

		[Token(Token = "0x600188A")]
		[Address(RVA = "0x1B56AA0", Offset = "0x1B56AA0", VA = "0x1B56AA0")]
		public static TSVector operator *(TSVector value1, FP value2)
		{
			return default(TSVector);
		}

		[Token(Token = "0x600188B")]
		[Address(RVA = "0x1B666D4", Offset = "0x1B666D4", VA = "0x1B666D4")]
		public static TSVector operator *(FP value1, TSVector value2)
		{
			return default(TSVector);
		}

		[Token(Token = "0x600188C")]
		[Address(RVA = "0x1B58DD8", Offset = "0x1B58DD8", VA = "0x1B58DD8")]
		public static TSVector operator -(TSVector value1, TSVector value2)
		{
			return default(TSVector);
		}

		[Token(Token = "0x600188D")]
		[Address(RVA = "0x1B64320", Offset = "0x1B64320", VA = "0x1B64320")]
		public static TSVector operator +(TSVector value1, TSVector value2)
		{
			return default(TSVector);
		}

		[Token(Token = "0x600188E")]
		[Address(RVA = "0x1B6561C", Offset = "0x1B6561C", VA = "0x1B6561C")]
		public static TSVector operator /(TSVector value1, FP value2)
		{
			return default(TSVector);
		}

		[Token(Token = "0x600188F")]
		[Address(RVA = "0x1B66774", Offset = "0x1B66774", VA = "0x1B66774")]
		public TSVector2 ToTSVector2()
		{
			return default(TSVector2);
		}

		[Token(Token = "0x6001890")]
		[Address(RVA = "0x1B66788", Offset = "0x1B66788", VA = "0x1B66788")]
		public TSVector4 ToTSVector4()
		{
			return default(TSVector4);
		}
	}
	[Serializable]
	[Token(Token = "0x200018F")]
	public struct TSVector2 : IEquatable<TSVector2>
	{
		[Token(Token = "0x40006F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static TSVector2 zeroVector;

		[Token(Token = "0x40006FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static TSVector2 oneVector;

		[Token(Token = "0x40006FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static TSVector2 rightVector;

		[Token(Token = "0x40006FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static TSVector2 leftVector;

		[Token(Token = "0x40006FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static TSVector2 upVector;

		[Token(Token = "0x40006FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static TSVector2 downVector;

		[Token(Token = "0x40006FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FP x;

		[Token(Token = "0x4000700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public FP y;

		[Token(Token = "0x170000A1")]
		public static TSVector2 zero
		{
			[Token(Token = "0x6001891")]
			[Address(RVA = "0x1B6682C", Offset = "0x1B6682C", VA = "0x1B6682C")]
			get
			{
				return default(TSVector2);
			}
		}

		[Token(Token = "0x170000A2")]
		public static TSVector2 one
		{
			[Token(Token = "0x6001892")]
			[Address(RVA = "0x1B66894", Offset = "0x1B66894", VA = "0x1B66894")]
			get
			{
				return default(TSVector2);
			}
		}

		[Token(Token = "0x170000A3")]
		public static TSVector2 right
		{
			[Token(Token = "0x6001893")]
			[Address(RVA = "0x1B668FC", Offset = "0x1B668FC", VA = "0x1B668FC")]
			get
			{
				return default(TSVector2);
			}
		}

		[Token(Token = "0x170000A4")]
		public static TSVector2 left
		{
			[Token(Token = "0x6001894")]
			[Address(RVA = "0x1B66964", Offset = "0x1B66964", VA = "0x1B66964")]
			get
			{
				return default(TSVector2);
			}
		}

		[Token(Token = "0x170000A5")]
		public static TSVector2 up
		{
			[Token(Token = "0x6001895")]
			[Address(RVA = "0x1B669CC", Offset = "0x1B669CC", VA = "0x1B669CC")]
			get
			{
				return default(TSVector2);
			}
		}

		[Token(Token = "0x170000A6")]
		public static TSVector2 down
		{
			[Token(Token = "0x6001896")]
			[Address(RVA = "0x1B66A34", Offset = "0x1B66A34", VA = "0x1B66A34")]
			get
			{
				return default(TSVector2);
			}
		}

		[Token(Token = "0x170000A7")]
		public FP magnitude
		{
			[Token(Token = "0x60018B3")]
			[Address(RVA = "0x1B67DD8", Offset = "0x1B67DD8", VA = "0x1B67DD8")]
			get
			{
				return default(FP);
			}
		}

		[Token(Token = "0x170000A8")]
		public TSVector2 normalized
		{
			[Token(Token = "0x60018C7")]
			[Address(RVA = "0x1B68BE4", Offset = "0x1B68BE4", VA = "0x1B68BE4")]
			get
			{
				return default(TSVector2);
			}
		}

		[Token(Token = "0x6001897")]
		[Address(RVA = "0x1B66780", Offset = "0x1B66780", VA = "0x1B66780")]
		public TSVector2(FP x, FP y)
		{
		}

		[Token(Token = "0x6001898")]
		[Address(RVA = "0x1B66A9C", Offset = "0x1B66A9C", VA = "0x1B66A9C")]
		public TSVector2(FP value)
		{
		}

		[Token(Token = "0x6001899")]
		[Address(RVA = "0x1B66AA4", Offset = "0x1B66AA4", VA = "0x1B66AA4")]
		public void Set(FP x, FP y)
		{
		}

		[Token(Token = "0x600189A")]
		[Address(RVA = "0x1B66AAC", Offset = "0x1B66AAC", VA = "0x1B66AAC")]
		public static void Reflect(ref TSVector2 vector, ref TSVector2 normal, out TSVector2 result)
		{
		}

		[Token(Token = "0x600189B")]
		[Address(RVA = "0x1B66CA0", Offset = "0x1B66CA0", VA = "0x1B66CA0")]
		public static TSVector2 Reflect(TSVector2 vector, TSVector2 normal)
		{
			return default(TSVector2);
		}

		[Token(Token = "0x600189C")]
		[Address(RVA = "0x1B66D24", Offset = "0x1B66D24", VA = "0x1B66D24")]
		public static TSVector2 Add(TSVector2 value1, TSVector2 value2)
		{
			return default(TSVector2);
		}

		[Token(Token = "0x600189D")]
		[Address(RVA = "0x1B66DCC", Offset = "0x1B66DCC", VA = "0x1B66DCC")]
		public static void Add(ref TSVector2 value1, ref TSVector2 value2, out TSVector2 result)
		{
		}

		[Token(Token = "0x600189E")]
		[Address(RVA = "0x1B66E74", Offset = "0x1B66E74", VA = "0x1B66E74")]
		public static TSVector2 Barycentric(TSVector2 value1, TSVector2 value2, TSVector2 value3, FP amount1, FP amount2)
		{
			return default(TSVector2);
		}

		[Token(Token = "0x600189F")]
		[Address(RVA = "0x1B66F4C", Offset = "0x1B66F4C", VA = "0x1B66F4C")]
		public static void Barycentric(ref TSVector2 value1, ref TSVector2 value2, ref TSVector2 value3, FP amount1, FP amount2, out TSVector2 result)
		{
		}

		[Token(Token = "0x60018A0")]
		[Address(RVA = "0x1B67028", Offset = "0x1B67028", VA = "0x1B67028")]
		public static TSVector2 CatmullRom(TSVector2 value1, TSVector2 value2, TSVector2 value3, TSVector2 value4, FP amount)
		{
			return default(TSVector2);
		}

		[Token(Token = "0x60018A1")]
		[Address(RVA = "0x1B67104", Offset = "0x1B67104", VA = "0x1B67104")]
		public static void CatmullRom(ref TSVector2 value1, ref TSVector2 value2, ref TSVector2 value3, ref TSVector2 value4, FP amount, out TSVector2 result)
		{
		}

		[Token(Token = "0x60018A2")]
		[Address(RVA = "0x1B671E4", Offset = "0x1B671E4", VA = "0x1B671E4")]
		public static TSVector2 Clamp(TSVector2 value1, TSVector2 min, TSVector2 max)
		{
			return default(TSVector2);
		}

		[Token(Token = "0x60018A3")]
		[Address(RVA = "0x1B6729C", Offset = "0x1B6729C", VA = "0x1B6729C")]
		public static void Clamp(ref TSVector2 value1, ref TSVector2 min, ref TSVector2 max, out TSVector2 result)
		{
		}

		[Token(Token = "0x60018A4")]
		[Address(RVA = "0x1B67358", Offset = "0x1B67358", VA = "0x1B67358")]
		public static FP Distance(TSVector2 value1, TSVector2 value2)
		{
			return default(FP);
		}

		[Token(Token = "0x60018A5")]
		[Address(RVA = "0x1B67514", Offset = "0x1B67514", VA = "0x1B67514")]
		public static void Distance(ref TSVector2 value1, ref TSVector2 value2, out FP result)
		{
		}

		[Token(Token = "0x60018A6")]
		[Address(RVA = "0x1B675C8", Offset = "0x1B675C8", VA = "0x1B675C8")]
		public static FP DistanceSquared(TSVector2 value1, TSVector2 value2)
		{
			return default(FP);
		}

		[Token(Token = "0x60018A7")]
		[Address(RVA = "0x1B67408", Offset = "0x1B67408", VA = "0x1B67408")]
		public static void DistanceSquared(ref TSVector2 value1, ref TSVector2 value2, out FP result)
		{
		}

		[Token(Token = "0x60018A8")]
		[Address(RVA = "0x1B6764C", Offset = "0x1B6764C", VA = "0x1B6764C")]
		public static TSVector2 Divide(TSVector2 value1, TSVector2 value2)
		{
			return default(TSVector2);
		}

		[Token(Token = "0x60018A9")]
		[Address(RVA = "0x1B676F4", Offset = "0x1B676F4", VA = "0x1B676F4")]
		public static void Divide(ref TSVector2 value1, ref TSVector2 value2, out TSVector2 result)
		{
		}

		[Token(Token = "0x60018AA")]
		[Address(RVA = "0x1B6779C", Offset = "0x1B6779C", VA = "0x1B6779C")]
		public static TSVector2 Divide(TSVector2 value1, FP divider)
		{
			return default(TSVector2);
		}

		[Token(Token = "0x60018AB")]
		[Address(RVA = "0x1B67854", Offset = "0x1B67854", VA = "0x1B67854")]
		public static void Divide(ref TSVector2 value1, FP divider, out TSVector2 result)
		{
		}

		[Token(Token = "0x60018AC")]
		[Address(RVA = "0x1B66BF4", Offset = "0x1B66BF4", VA = "0x1B66BF4")]
		public static FP Dot(TSVector2 value1, TSVector2 value2)
		{
			return default(FP);
		}

		[Token(Token = "0x60018AD")]
		[Address(RVA = "0x1B6790C", Offset = "0x1B6790C", VA = "0x1B6790C")]
		public static void Dot(ref TSVector2 value1, ref TSVector2 value2, out FP result)
		{
		}

		[Token(Token = "0x60018AE")]
		[Address(RVA = "0x1B679C8", Offset = "0x1B679C8", VA = "0x1B679C8", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60018AF")]
		[Address(RVA = "0x1B67B60", Offset = "0x1B67B60", VA = "0x1B67B60", Slot = "4")]
		public bool Equals(TSVector2 other)
		{
			return default(bool);
		}

		[Token(Token = "0x60018B0")]
		[Address(RVA = "0x1B67BE4", Offset = "0x1B67BE4", VA = "0x1B67BE4", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60018B1")]
		[Address(RVA = "0x1B67C60", Offset = "0x1B67C60", VA = "0x1B67C60")]
		public static TSVector2 Hermite(TSVector2 value1, TSVector2 tangent1, TSVector2 value2, TSVector2 tangent2, FP amount)
		{
			return default(TSVector2);
		}

		[Token(Token = "0x60018B2")]
		[Address(RVA = "0x1B67CFC", Offset = "0x1B67CFC", VA = "0x1B67CFC")]
		public static void Hermite(ref TSVector2 value1, ref TSVector2 tangent1, ref TSVector2 value2, ref TSVector2 tangent2, FP amount, out TSVector2 result)
		{
		}

		[Token(Token = "0x60018B4")]
		[Address(RVA = "0x1B67E88", Offset = "0x1B67E88", VA = "0x1B67E88")]
		public static TSVector2 ClampMagnitude(TSVector2 vector, FP maxLength)
		{
			return default(TSVector2);
		}

		[Token(Token = "0x60018B5")]
		[Address(RVA = "0x1B6801C", Offset = "0x1B6801C", VA = "0x1B6801C")]
		public FP LengthSquared()
		{
			return default(FP);
		}

		[Token(Token = "0x60018B6")]
		[Address(RVA = "0x1B680A0", Offset = "0x1B680A0", VA = "0x1B680A0")]
		public static TSVector2 Lerp(TSVector2 value1, TSVector2 value2, FP amount)
		{
			return default(TSVector2);
		}

		[Token(Token = "0x60018B7")]
		[Address(RVA = "0x1B681AC", Offset = "0x1B681AC", VA = "0x1B681AC")]
		public static TSVector2 LerpUnclamped(TSVector2 value1, TSVector2 value2, FP amount)
		{
			return default(TSVector2);
		}

		[Token(Token = "0x60018B8")]
		[Address(RVA = "0x1B68258", Offset = "0x1B68258", VA = "0x1B68258")]
		public static void LerpUnclamped(ref TSVector2 value1, ref TSVector2 value2, FP amount, out TSVector2 result)
		{
		}

		[Token(Token = "0x60018B9")]
		[Address(RVA = "0x1B68308", Offset = "0x1B68308", VA = "0x1B68308")]
		public static TSVector2 Max(TSVector2 value1, TSVector2 value2)
		{
			return default(TSVector2);
		}

		[Token(Token = "0x60018BA")]
		[Address(RVA = "0x1B683A8", Offset = "0x1B683A8", VA = "0x1B683A8")]
		public static void Max(ref TSVector2 value1, ref TSVector2 value2, out TSVector2 result)
		{
		}

		[Token(Token = "0x60018BB")]
		[Address(RVA = "0x1B68448", Offset = "0x1B68448", VA = "0x1B68448")]
		public static TSVector2 Min(TSVector2 value1, TSVector2 value2)
		{
			return default(TSVector2);
		}

		[Token(Token = "0x60018BC")]
		[Address(RVA = "0x1B684E8", Offset = "0x1B684E8", VA = "0x1B684E8")]
		public static void Min(ref TSVector2 value1, ref TSVector2 value2, out TSVector2 result)
		{
		}

		[Token(Token = "0x60018BD")]
		[Address(RVA = "0x1B68588", Offset = "0x1B68588", VA = "0x1B68588")]
		public void Scale(TSVector2 other)
		{
		}

		[Token(Token = "0x60018BE")]
		[Address(RVA = "0x1B68628", Offset = "0x1B68628", VA = "0x1B68628")]
		public static TSVector2 Scale(TSVector2 value1, TSVector2 value2)
		{
			return default(TSVector2);
		}

		[Token(Token = "0x60018BF")]
		[Address(RVA = "0x1B686D0", Offset = "0x1B686D0", VA = "0x1B686D0")]
		public static TSVector2 Multiply(TSVector2 value1, TSVector2 value2)
		{
			return default(TSVector2);
		}

		[Token(Token = "0x60018C0")]
		[Address(RVA = "0x1B68778", Offset = "0x1B68778", VA = "0x1B68778")]
		public static TSVector2 Multiply(TSVector2 value1, FP scaleFactor)
		{
			return default(TSVector2);
		}

		[Token(Token = "0x60018C1")]
		[Address(RVA = "0x1B68814", Offset = "0x1B68814", VA = "0x1B68814")]
		public static void Multiply(ref TSVector2 value1, FP scaleFactor, out TSVector2 result)
		{
		}

		[Token(Token = "0x60018C2")]
		[Address(RVA = "0x1B688B0", Offset = "0x1B688B0", VA = "0x1B688B0")]
		public static void Multiply(ref TSVector2 value1, ref TSVector2 value2, out TSVector2 result)
		{
		}

		[Token(Token = "0x60018C3")]
		[Address(RVA = "0x1B68958", Offset = "0x1B68958", VA = "0x1B68958")]
		public static TSVector2 Negate(TSVector2 value)
		{
			return default(TSVector2);
		}

		[Token(Token = "0x60018C4")]
		[Address(RVA = "0x1B689E8", Offset = "0x1B689E8", VA = "0x1B689E8")]
		public static void Negate(ref TSVector2 value, out TSVector2 result)
		{
		}

		[Token(Token = "0x60018C5")]
		[Address(RVA = "0x1B68A78", Offset = "0x1B68A78", VA = "0x1B68A78")]
		public void Normalize()
		{
		}

		[Token(Token = "0x60018C6")]
		[Address(RVA = "0x1B67F08", Offset = "0x1B67F08", VA = "0x1B67F08")]
		public static TSVector2 Normalize(TSVector2 value)
		{
			return default(TSVector2);
		}

		[Token(Token = "0x60018C8")]
		[Address(RVA = "0x1B68AE0", Offset = "0x1B68AE0", VA = "0x1B68AE0")]
		public static void Normalize(ref TSVector2 value, out TSVector2 result)
		{
		}

		[Token(Token = "0x60018C9")]
		[Address(RVA = "0x1B68C60", Offset = "0x1B68C60", VA = "0x1B68C60")]
		public static TSVector2 SmoothStep(TSVector2 value1, TSVector2 value2, FP amount)
		{
			return default(TSVector2);
		}

		[Token(Token = "0x60018CA")]
		[Address(RVA = "0x1B68D0C", Offset = "0x1B68D0C", VA = "0x1B68D0C")]
		public static void SmoothStep(ref TSVector2 value1, ref TSVector2 value2, FP amount, out TSVector2 result)
		{
		}

		[Token(Token = "0x60018CB")]
		[Address(RVA = "0x1B68DBC", Offset = "0x1B68DBC", VA = "0x1B68DBC")]
		public static TSVector2 Subtract(TSVector2 value1, TSVector2 value2)
		{
			return default(TSVector2);
		}

		[Token(Token = "0x60018CC")]
		[Address(RVA = "0x1B68E64", Offset = "0x1B68E64", VA = "0x1B68E64")]
		public static void Subtract(ref TSVector2 value1, ref TSVector2 value2, out TSVector2 result)
		{
		}

		[Token(Token = "0x60018CD")]
		[Address(RVA = "0x1B68F0C", Offset = "0x1B68F0C", VA = "0x1B68F0C")]
		public static FP Angle(TSVector2 a, TSVector2 b)
		{
			return default(FP);
		}

		[Token(Token = "0x60018CE")]
		[Address(RVA = "0x1B69084", Offset = "0x1B69084", VA = "0x1B69084")]
		public TSVector ToTSVector()
		{
			return default(TSVector);
		}

		[Token(Token = "0x60018CF")]
		[Address(RVA = "0x1B69108", Offset = "0x1B69108", VA = "0x1B69108", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60018D0")]
		[Address(RVA = "0x1B691B4", Offset = "0x1B691B4", VA = "0x1B691B4")]
		public static TSVector2 operator -(TSVector2 value)
		{
			return default(TSVector2);
		}

		[Token(Token = "0x60018D1")]
		[Address(RVA = "0x1B67A94", Offset = "0x1B67A94", VA = "0x1B67A94")]
		public static bool operator ==(TSVector2 value1, TSVector2 value2)
		{
			return default(bool);
		}

		[Token(Token = "0x60018D2")]
		[Address(RVA = "0x1B69244", Offset = "0x1B69244", VA = "0x1B69244")]
		public static bool operator !=(TSVector2 value1, TSVector2 value2)
		{
			return default(bool);
		}

		[Token(Token = "0x60018D3")]
		[Address(RVA = "0x1B69310", Offset = "0x1B69310", VA = "0x1B69310")]
		public static TSVector2 operator +(TSVector2 value1, TSVector2 value2)
		{
			return default(TSVector2);
		}

		[Token(Token = "0x60018D4")]
		[Address(RVA = "0x1B693B8", Offset = "0x1B693B8", VA = "0x1B693B8")]
		public static TSVector2 operator -(TSVector2 value1, TSVector2 value2)
		{
			return default(TSVector2);
		}

		[Token(Token = "0x60018D5")]
		[Address(RVA = "0x1B68FF8", Offset = "0x1B68FF8", VA = "0x1B68FF8")]
		public static FP operator *(TSVector2 value1, TSVector2 value2)
		{
			return default(FP);
		}

		[Token(Token = "0x60018D6")]
		[Address(RVA = "0x1B67F80", Offset = "0x1B67F80", VA = "0x1B67F80")]
		public static TSVector2 operator *(TSVector2 value, FP scaleFactor)
		{
			return default(TSVector2);
		}

		[Token(Token = "0x60018D7")]
		[Address(RVA = "0x1B69460", Offset = "0x1B69460", VA = "0x1B69460")]
		public static TSVector2 operator *(FP scaleFactor, TSVector2 value)
		{
			return default(TSVector2);
		}

		[Token(Token = "0x60018D8")]
		[Address(RVA = "0x1B694FC", Offset = "0x1B694FC", VA = "0x1B694FC")]
		public static TSVector2 operator /(TSVector2 value1, TSVector2 value2)
		{
			return default(TSVector2);
		}

		[Token(Token = "0x60018D9")]
		[Address(RVA = "0x1B695A4", Offset = "0x1B695A4", VA = "0x1B695A4")]
		public static TSVector2 operator /(TSVector2 value1, FP divider)
		{
			return default(TSVector2);
		}
	}
	[Serializable]
	[Token(Token = "0x2000190")]
	public struct TSVector4
	{
		[Token(Token = "0x4000701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static FP ZeroEpsilonSq;

		[Token(Token = "0x4000702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal static TSVector4 InternalZero;

		[Token(Token = "0x4000703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FP x;

		[Token(Token = "0x4000704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public FP y;

		[Token(Token = "0x4000705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FP z;

		[Token(Token = "0x4000706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FP w;

		[Token(Token = "0x4000707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static readonly TSVector4 zero;

		[Token(Token = "0x4000708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static readonly TSVector4 one;

		[Token(Token = "0x4000709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public static readonly TSVector4 MinValue;

		[Token(Token = "0x400070A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public static readonly TSVector4 MaxValue;

		[Token(Token = "0x170000A9")]
		public FP sqrMagnitude
		{
			[Token(Token = "0x60018DD")]
			[Address(RVA = "0x11A914C", Offset = "0x11A914C", VA = "0x11A914C")]
			get
			{
				return default(FP);
			}
		}

		[Token(Token = "0x170000AA")]
		public FP magnitude
		{
			[Token(Token = "0x60018DE")]
			[Address(RVA = "0x11A9228", Offset = "0x11A9228", VA = "0x11A9228")]
			get
			{
				return default(FP);
			}
		}

		[Token(Token = "0x170000AB")]
		public TSVector4 normalized
		{
			[Token(Token = "0x60018E0")]
			[Address(RVA = "0x11A946C", Offset = "0x11A946C", VA = "0x11A946C")]
			get
			{
				return default(TSVector4);
			}
		}

		[Token(Token = "0x60018DB")]
		[Address(RVA = "0x11A8E60", Offset = "0x11A8E60", VA = "0x11A8E60")]
		static TSVector4()
		{
		}

		[Token(Token = "0x60018DC")]
		[Address(RVA = "0x11A9080", Offset = "0x11A9080", VA = "0x11A9080")]
		public static TSVector4 Abs(TSVector4 other)
		{
			return default(TSVector4);
		}

		[Token(Token = "0x60018DF")]
		[Address(RVA = "0x11A92A0", Offset = "0x11A92A0", VA = "0x11A92A0")]
		public static TSVector4 ClampMagnitude(TSVector4 vector, FP maxLength)
		{
			return default(TSVector4);
		}

		[Token(Token = "0x60018E1")]
		[Address(RVA = "0x11A8FB4", Offset = "0x11A8FB4", VA = "0x11A8FB4")]
		public TSVector4(int x, int y, int z, int w)
		{
		}

		[Token(Token = "0x60018E2")]
		[Address(RVA = "0x11A9140", Offset = "0x11A9140", VA = "0x11A9140")]
		public TSVector4(FP x, FP y, FP z, FP w)
		{
		}

		[Token(Token = "0x60018E3")]
		[Address(RVA = "0x11A9618", Offset = "0x11A9618", VA = "0x11A9618")]
		public void Scale(TSVector4 other)
		{
		}

		[Token(Token = "0x60018E4")]
		[Address(RVA = "0x11A96DC", Offset = "0x11A96DC", VA = "0x11A96DC")]
		public void Set(FP x, FP y, FP z, FP w)
		{
		}

		[Token(Token = "0x60018E5")]
		[Address(RVA = "0x11A9074", Offset = "0x11A9074", VA = "0x11A9074")]
		public TSVector4(FP xyzw)
		{
		}

		[Token(Token = "0x60018E6")]
		[Address(RVA = "0x11A96E8", Offset = "0x11A96E8", VA = "0x11A96E8")]
		public static TSVector4 Lerp(TSVector4 from, TSVector4 to, FP percent)
		{
			return default(TSVector4);
		}

		[Token(Token = "0x60018E7")]
		[Address(RVA = "0x11A98FC", Offset = "0x11A98FC", VA = "0x11A98FC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60018E8")]
		[Address(RVA = "0x11A9AC0", Offset = "0x11A9AC0", VA = "0x11A9AC0", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60018E9")]
		[Address(RVA = "0x11A9C28", Offset = "0x11A9C28", VA = "0x11A9C28")]
		public static TSVector4 Scale(TSVector4 vecA, TSVector4 vecB)
		{
			return default(TSVector4);
		}

		[Token(Token = "0x60018EA")]
		[Address(RVA = "0x11A9D08", Offset = "0x11A9D08", VA = "0x11A9D08")]
		public static bool operator ==(TSVector4 value1, TSVector4 value2)
		{
			return default(bool);
		}

		[Token(Token = "0x60018EB")]
		[Address(RVA = "0x11A9E44", Offset = "0x11A9E44", VA = "0x11A9E44")]
		public static bool operator !=(TSVector4 value1, TSVector4 value2)
		{
			return default(bool);
		}

		[Token(Token = "0x60018EC")]
		[Address(RVA = "0x11A9F80", Offset = "0x11A9F80", VA = "0x11A9F80")]
		public static TSVector4 Min(TSVector4 value1, TSVector4 value2)
		{
			return default(TSVector4);
		}

		[Token(Token = "0x60018ED")]
		[Address(RVA = "0x11AA018", Offset = "0x11AA018", VA = "0x11AA018")]
		public static void Min(ref TSVector4 value1, ref TSVector4 value2, out TSVector4 result)
		{
		}

		[Token(Token = "0x60018EE")]
		[Address(RVA = "0x11AA178", Offset = "0x11AA178", VA = "0x11AA178")]
		public static TSVector4 Max(TSVector4 value1, TSVector4 value2)
		{
			return default(TSVector4);
		}

		[Token(Token = "0x60018EF")]
		[Address(RVA = "0x11AA370", Offset = "0x11AA370", VA = "0x11AA370")]
		public static FP Distance(TSVector4 v1, TSVector4 v2)
		{
			return default(FP);
		}

		[Token(Token = "0x60018F0")]
		[Address(RVA = "0x11AA210", Offset = "0x11AA210", VA = "0x11AA210")]
		public static void Max(ref TSVector4 value1, ref TSVector4 value2, out TSVector4 result)
		{
		}

		[Token(Token = "0x60018F1")]
		[Address(RVA = "0x11AA510", Offset = "0x11AA510", VA = "0x11AA510")]
		public void MakeZero()
		{
		}

		[Token(Token = "0x60018F2")]
		[Address(RVA = "0x11AA5A8", Offset = "0x11AA5A8", VA = "0x11AA5A8")]
		public bool IsZero()
		{
			return default(bool);
		}

		[Token(Token = "0x60018F3")]
		[Address(RVA = "0x11AA62C", Offset = "0x11AA62C", VA = "0x11AA62C")]
		public bool IsNearlyZero()
		{
			return default(bool);
		}

		[Token(Token = "0x60018F4")]
		[Address(RVA = "0x11AA6D4", Offset = "0x11AA6D4", VA = "0x11AA6D4")]
		public static TSVector4 Transform(TSVector4 position, TSMatrix4x4 matrix)
		{
			return default(TSVector4);
		}

		[Token(Token = "0x60018F5")]
		[Address(RVA = "0x11AAA1C", Offset = "0x11AAA1C", VA = "0x11AAA1C")]
		public static TSVector4 Transform(TSVector position, TSMatrix4x4 matrix)
		{
			return default(TSVector4);
		}

		[Token(Token = "0x60018F6")]
		[Address(RVA = "0x11AAAB4", Offset = "0x11AAAB4", VA = "0x11AAAB4")]
		public static void Transform(ref TSVector vector, ref TSMatrix4x4 matrix, out TSVector4 result)
		{
		}

		[Token(Token = "0x60018F7")]
		[Address(RVA = "0x11AA76C", Offset = "0x11AA76C", VA = "0x11AA76C")]
		public static void Transform(ref TSVector4 vector, ref TSMatrix4x4 matrix, out TSVector4 result)
		{
		}

		[Token(Token = "0x60018F8")]
		[Address(RVA = "0x11AACF4", Offset = "0x11AACF4", VA = "0x11AACF4")]
		public static FP Dot(TSVector4 vector1, TSVector4 vector2)
		{
			return default(FP);
		}

		[Token(Token = "0x60018F9")]
		[Address(RVA = "0x11AAD68", Offset = "0x11AAD68", VA = "0x11AAD68")]
		public static FP Dot(ref TSVector4 vector1, ref TSVector4 vector2)
		{
			return default(FP);
		}

		[Token(Token = "0x60018FA")]
		[Address(RVA = "0x11AAE60", Offset = "0x11AAE60", VA = "0x11AAE60")]
		public static TSVector4 Add(TSVector4 value1, TSVector4 value2)
		{
			return default(TSVector4);
		}

		[Token(Token = "0x60018FB")]
		[Address(RVA = "0x11AAEF8", Offset = "0x11AAEF8", VA = "0x11AAEF8")]
		public static void Add(ref TSVector4 value1, ref TSVector4 value2, out TSVector4 result)
		{
		}

		[Token(Token = "0x60018FC")]
		[Address(RVA = "0x11AAFC8", Offset = "0x11AAFC8", VA = "0x11AAFC8")]
		public static TSVector4 Divide(TSVector4 value1, FP scaleFactor)
		{
			return default(TSVector4);
		}

		[Token(Token = "0x60018FD")]
		[Address(RVA = "0x11AB060", Offset = "0x11AB060", VA = "0x11AB060")]
		public static void Divide(ref TSVector4 value1, FP scaleFactor, out TSVector4 result)
		{
		}

		[Token(Token = "0x60018FE")]
		[Address(RVA = "0x11AB124", Offset = "0x11AB124", VA = "0x11AB124")]
		public static TSVector4 Subtract(TSVector4 value1, TSVector4 value2)
		{
			return default(TSVector4);
		}

		[Token(Token = "0x60018FF")]
		[Address(RVA = "0x11AB1BC", Offset = "0x11AB1BC", VA = "0x11AB1BC")]
		public static void Subtract(ref TSVector4 value1, ref TSVector4 value2, out TSVector4 result)
		{
		}

		[Token(Token = "0x6001900")]
		[Address(RVA = "0x11AB28C", Offset = "0x11AB28C", VA = "0x11AB28C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001901")]
		[Address(RVA = "0x11AB2F4", Offset = "0x11AB2F4", VA = "0x11AB2F4")]
		public void Negate()
		{
		}

		[Token(Token = "0x6001902")]
		[Address(RVA = "0x11AB3A4", Offset = "0x11AB3A4", VA = "0x11AB3A4")]
		public static TSVector4 Negate(TSVector4 value)
		{
			return default(TSVector4);
		}

		[Token(Token = "0x6001903")]
		[Address(RVA = "0x11AB434", Offset = "0x11AB434", VA = "0x11AB434")]
		public static void Negate(ref TSVector4 value, out TSVector4 result)
		{
		}

		[Token(Token = "0x6001904")]
		[Address(RVA = "0x11A9344", Offset = "0x11A9344", VA = "0x11A9344")]
		public static TSVector4 Normalize(TSVector4 value)
		{
			return default(TSVector4);
		}

		[Token(Token = "0x6001905")]
		[Address(RVA = "0x11A94A8", Offset = "0x11A94A8", VA = "0x11A94A8")]
		public void Normalize()
		{
		}

		[Token(Token = "0x6001906")]
		[Address(RVA = "0x11AB4E4", Offset = "0x11AB4E4", VA = "0x11AB4E4")]
		public static void Normalize(ref TSVector4 value, out TSVector4 result)
		{
		}

		[Token(Token = "0x6001907")]
		[Address(RVA = "0x11AB64C", Offset = "0x11AB64C", VA = "0x11AB64C")]
		public static void Swap(ref TSVector4 vector1, ref TSVector4 vector2)
		{
		}

		[Token(Token = "0x6001908")]
		[Address(RVA = "0x11AB690", Offset = "0x11AB690", VA = "0x11AB690")]
		public static TSVector4 Multiply(TSVector4 value1, FP scaleFactor)
		{
			return default(TSVector4);
		}

		[Token(Token = "0x6001909")]
		[Address(RVA = "0x11AB728", Offset = "0x11AB728", VA = "0x11AB728")]
		public static void Multiply(ref TSVector4 value1, FP scaleFactor, out TSVector4 result)
		{
		}

		[Token(Token = "0x600190A")]
		[Address(RVA = "0x11AB7EC", Offset = "0x11AB7EC", VA = "0x11AB7EC")]
		public static FP operator *(TSVector4 value1, TSVector4 value2)
		{
			return default(FP);
		}

		[Token(Token = "0x600190B")]
		[Address(RVA = "0x11A93D4", Offset = "0x11A93D4", VA = "0x11A93D4")]
		public static TSVector4 operator *(TSVector4 value1, FP value2)
		{
			return default(TSVector4);
		}

		[Token(Token = "0x600190C")]
		[Address(RVA = "0x11AB860", Offset = "0x11AB860", VA = "0x11AB860")]
		public static TSVector4 operator *(FP value1, TSVector4 value2)
		{
			return default(TSVector4);
		}

		[Token(Token = "0x600190D")]
		[Address(RVA = "0x11A97CC", Offset = "0x11A97CC", VA = "0x11A97CC")]
		public static TSVector4 operator -(TSVector4 value1, TSVector4 value2)
		{
			return default(TSVector4);
		}

		[Token(Token = "0x600190E")]
		[Address(RVA = "0x11A9864", Offset = "0x11A9864", VA = "0x11A9864")]
		public static TSVector4 operator +(TSVector4 value1, TSVector4 value2)
		{
			return default(TSVector4);
		}

		[Token(Token = "0x600190F")]
		[Address(RVA = "0x11AB8F8", Offset = "0x11AB8F8", VA = "0x11AB8F8")]
		public static TSVector4 operator /(TSVector4 value1, FP value2)
		{
			return default(TSVector4);
		}

		[Token(Token = "0x6001910")]
		[Address(RVA = "0x11AB990", Offset = "0x11AB990", VA = "0x11AB990")]
		public TSVector2 ToTSVector2()
		{
			return default(TSVector2);
		}

		[Token(Token = "0x6001911")]
		[Address(RVA = "0x11AB9C0", Offset = "0x11AB9C0", VA = "0x11AB9C0")]
		public TSVector ToTSVector()
		{
			return default(TSVector);
		}
	}
}
namespace GFramework
{
	[Token(Token = "0x2000191")]
	public class SimpleRoundedImage : Image
	{
		[Token(Token = "0x400070B")]
		private const int MaxTriangleNum = 20;

		[Token(Token = "0x400070C")]
		private const int MinTriangleNum = 1;

		[Token(Token = "0x400070D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public float Radius;

		[Token(Token = "0x400070E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x941BEC", Offset = "0x941BEC")]
		public int TriangleNum;

		[Token(Token = "0x6001912")]
		[Address(RVA = "0x11D9630", Offset = "0x11D9630", VA = "0x11D9630", Slot = "44")]
		protected override void OnPopulateMesh(VertexHelper vh)
		{
		}

		[Token(Token = "0x6001913")]
		[Address(RVA = "0x11DA2AC", Offset = "0x11DA2AC", VA = "0x11DA2AC")]
		private Vector4 GetDrawingDimensions(bool shouldPreserveAspect)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6001914")]
		[Address(RVA = "0x11DA740", Offset = "0x11DA740", VA = "0x11DA740")]
		public SimpleRoundedImage()
		{
		}
	}
}
namespace libx
{
	[Token(Token = "0x2000192")]
	public class Download : DownloadHandlerScript, IDisposable, ICloneable
	{
		[Token(Token = "0x400070F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x941C04", Offset = "0x941C04")]
		private int <id>k__BackingField;

		[Token(Token = "0x4000710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x941C14", Offset = "0x941C14")]
		private string <error>k__BackingField;

		[Token(Token = "0x4000711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x941C24", Offset = "0x941C24")]
		private long <len>k__BackingField;

		[Token(Token = "0x4000712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x941C34", Offset = "0x941C34")]
		private string <hash>k__BackingField;

		[Token(Token = "0x4000713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x941C44", Offset = "0x941C44")]
		private string <url>k__BackingField;

		[Token(Token = "0x4000714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x941C54", Offset = "0x941C54")]
		private long <position>k__BackingField;

		[Token(Token = "0x4000715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string savePath;

		[Token(Token = "0x4000716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x941C64", Offset = "0x941C64")]
		private Action<string, string, string> <completed>k__BackingField;

		[Token(Token = "0x4000717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private UnityWebRequest _request;

		[Token(Token = "0x4000718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private FileStream _stream;

		[Token(Token = "0x4000719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool _running;

		[Token(Token = "0x400071A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		private bool _finished;

		[Token(Token = "0x170000AC")]
		public int id
		{
			[Token(Token = "0x6001916")]
			[Address(RVA = "0x1C82AAC", Offset = "0x1C82AAC", VA = "0x1C82AAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A6BF8", Offset = "0x9A6BF8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001917")]
			[Address(RVA = "0x1C82AB4", Offset = "0x1C82AB4", VA = "0x1C82AB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A6C08", Offset = "0x9A6C08")]
			set
			{
			}
		}

		[Token(Token = "0x170000AD")]
		public string error
		{
			[Token(Token = "0x6001918")]
			[Address(RVA = "0x1C82ABC", Offset = "0x1C82ABC", VA = "0x1C82ABC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A6C18", Offset = "0x9A6C18")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001919")]
			[Address(RVA = "0x1C82AC4", Offset = "0x1C82AC4", VA = "0x1C82AC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A6C28", Offset = "0x9A6C28")]
			private set
			{
			}
		}

		[Token(Token = "0x170000AE")]
		public long len
		{
			[Token(Token = "0x600191A")]
			[Address(RVA = "0x1C82ACC", Offset = "0x1C82ACC", VA = "0x1C82ACC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A6C38", Offset = "0x9A6C38")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x600191B")]
			[Address(RVA = "0x1C82AD4", Offset = "0x1C82AD4", VA = "0x1C82AD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A6C48", Offset = "0x9A6C48")]
			set
			{
			}
		}

		[Token(Token = "0x170000AF")]
		public string hash
		{
			[Token(Token = "0x600191C")]
			[Address(RVA = "0x1C82ADC", Offset = "0x1C82ADC", VA = "0x1C82ADC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A6C58", Offset = "0x9A6C58")]
			get
			{
				return null;
			}
			[Token(Token = "0x600191D")]
			[Address(RVA = "0x1C82AE4", Offset = "0x1C82AE4", VA = "0x1C82AE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A6C68", Offset = "0x9A6C68")]
			set
			{
			}
		}

		[Token(Token = "0x170000B0")]
		public string url
		{
			[Token(Token = "0x600191E")]
			[Address(RVA = "0x1C82AEC", Offset = "0x1C82AEC", VA = "0x1C82AEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A6C78", Offset = "0x9A6C78")]
			get
			{
				return null;
			}
			[Token(Token = "0x600191F")]
			[Address(RVA = "0x1C82AF4", Offset = "0x1C82AF4", VA = "0x1C82AF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A6C88", Offset = "0x9A6C88")]
			set
			{
			}
		}

		[Token(Token = "0x170000B1")]
		public long position
		{
			[Token(Token = "0x6001920")]
			[Address(RVA = "0x1C82AFC", Offset = "0x1C82AFC", VA = "0x1C82AFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A6C98", Offset = "0x9A6C98")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x6001921")]
			[Address(RVA = "0x1C82B04", Offset = "0x1C82B04", VA = "0x1C82B04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A6CA8", Offset = "0x9A6CA8")]
			private set
			{
			}
		}

		[Token(Token = "0x170000B2")]
		public string tempPath
		{
			[Token(Token = "0x6001922")]
			[Address(RVA = "0x1C82B0C", Offset = "0x1C82B0C", VA = "0x1C82B0C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B3")]
		public Action<string, string, string> completed
		{
			[Token(Token = "0x6001923")]
			[Address(RVA = "0x1C82BA4", Offset = "0x1C82BA4", VA = "0x1C82BA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A6CB8", Offset = "0x9A6CB8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001924")]
			[Address(RVA = "0x1C82BAC", Offset = "0x1C82BAC", VA = "0x1C82BAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A6CC8", Offset = "0x9A6CC8")]
			set
			{
			}
		}

		[Token(Token = "0x170000B4")]
		public bool finished
		{
			[Token(Token = "0x6001931")]
			[Address(RVA = "0x1C831B4", Offset = "0x1C831B4", VA = "0x1C831B4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001932")]
			[Address(RVA = "0x1C831BC", Offset = "0x1C831BC", VA = "0x1C831BC")]
			private set
			{
			}
		}

		[Token(Token = "0x6001915")]
		[Address(RVA = "0x1C82A0C", Offset = "0x1C82A0C", VA = "0x1C82A0C", Slot = "12")]
		public object Clone()
		{
			return null;
		}

		[Token(Token = "0x6001925")]
		[Address(RVA = "0x1C82BB4", Offset = "0x1C82BB4", VA = "0x1C82BB4", Slot = "11")]
		protected override float GetProgress()
		{
			return default(float);
		}

		[Token(Token = "0x6001926")]
		[Address(RVA = "0x1C82BCC", Offset = "0x1C82BCC", VA = "0x1C82BCC", Slot = "5")]
		protected override byte[] GetData()
		{
			return null;
		}

		[Token(Token = "0x6001927")]
		[Address(RVA = "0x1C82BD4", Offset = "0x1C82BD4", VA = "0x1C82BD4", Slot = "9")]
		protected override void ReceiveContentLength(int contentLength)
		{
		}

		[Token(Token = "0x6001928")]
		[Address(RVA = "0x1C82BD8", Offset = "0x1C82BD8", VA = "0x1C82BD8", Slot = "7")]
		protected override bool ReceiveData(byte[] buffer, int dataLength)
		{
			return default(bool);
		}

		[Token(Token = "0x6001929")]
		[Address(RVA = "0x1C82CC4", Offset = "0x1C82CC4", VA = "0x1C82CC4", Slot = "10")]
		protected override void CompleteContent()
		{
		}

		[Token(Token = "0x600192A")]
		[Address(RVA = "0x1C82CE8", Offset = "0x1C82CE8", VA = "0x1C82CE8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600192B")]
		[Address(RVA = "0x1C82D74", Offset = "0x1C82D74", VA = "0x1C82D74")]
		public void Start()
		{
		}

		[Token(Token = "0x600192C")]
		[Address(RVA = "0x1C82F0C", Offset = "0x1C82F0C", VA = "0x1C82F0C")]
		public void Update()
		{
		}

		[Token(Token = "0x600192D")]
		[Address(RVA = "0x1C82FC8", Offset = "0x1C82FC8", VA = "0x1C82FC8", Slot = "4")]
		public new void Dispose()
		{
		}

		[Token(Token = "0x600192E")]
		[Address(RVA = "0x1C82C8C", Offset = "0x1C82C8C", VA = "0x1C82C8C")]
		public void Complete(bool stop = false)
		{
		}

		[Token(Token = "0x600192F")]
		[Address(RVA = "0x1C8304C", Offset = "0x1C8304C", VA = "0x1C8304C")]
		private void CheckError()
		{
		}

		[Token(Token = "0x6001930")]
		[Address(RVA = "0x1C83190", Offset = "0x1C83190", VA = "0x1C83190")]
		public void Retry()
		{
		}

		[Token(Token = "0x6001933")]
		[Address(RVA = "0x1C82AA4", Offset = "0x1C82AA4", VA = "0x1C82AA4")]
		public Download()
		{
		}
	}
	[Token(Token = "0x2000193")]
	public class Downloader : MonoBehaviour
	{
		[Token(Token = "0x400071B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Queue<Download> mDownloadQueue;

		[Token(Token = "0x400071C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Download> downloading;

		[Token(Token = "0x400071D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int autoId;

		[Token(Token = "0x6001934")]
		[Address(RVA = "0x1C831C8", Offset = "0x1C831C8", VA = "0x1C831C8")]
		private int GetId()
		{
			return default(int);
		}

		[Token(Token = "0x6001935")]
		[Address(RVA = "0x1C831DC", Offset = "0x1C831DC", VA = "0x1C831DC")]
		public void AddDownload(string url, string localPath, string md5, long len, Action<string, string, string> finish)
		{
		}

		[Token(Token = "0x6001936")]
		[Address(RVA = "0x1C832A4", Offset = "0x1C832A4", VA = "0x1C832A4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001937")]
		[Address(RVA = "0x1C83434", Offset = "0x1C83434", VA = "0x1C83434")]
		public Downloader()
		{
		}
	}
}
namespace UnityStandardAssets.ImageEffects
{
	[Token(Token = "0x2000194")]
	public class WaterWaveEffect : ImageEffectBase
	{
		[Token(Token = "0x400071E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float distanceFactor;

		[Token(Token = "0x400071F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float timeFactor;

		[Token(Token = "0x4000720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float totalFactor;

		[Token(Token = "0x4000721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float waveWidth;

		[Token(Token = "0x4000722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float waveSpeed;

		[Token(Token = "0x4000723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float waveStartTime;

		[Token(Token = "0x4000724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector4 startPos;

		[Token(Token = "0x6001938")]
		[Address(RVA = "0xD13C24", Offset = "0xD13C24", VA = "0xD13C24")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001939")]
		[Address(RVA = "0xD13DD4", Offset = "0xD13DD4", VA = "0xD13DD4")]
		private void Update()
		{
		}

		[Token(Token = "0x600193A")]
		[Address(RVA = "0xD1409C", Offset = "0xD1409C", VA = "0xD1409C")]
		private void Handle(Vector2 pos)
		{
		}

		[Token(Token = "0x600193B")]
		[Address(RVA = "0xD141B4", Offset = "0xD141B4", VA = "0xD141B4")]
		public WaterWaveEffect()
		{
		}
	}
}
namespace AnimationOrTween
{
	[Serializable]
	[Token(Token = "0x2000195")]
	public class ChildLayoutConfig
	{
		[Token(Token = "0x4000725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Pos;

		[Token(Token = "0x4000726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 Rot;

		[Token(Token = "0x600193C")]
		[Address(RVA = "0xEE87BC", Offset = "0xEE87BC", VA = "0xEE87BC")]
		public ChildLayoutConfig()
		{
		}
	}
	[Token(Token = "0x2000196")]
	[ExecuteInEditMode]
	public class CustomUILayout : MonoBehaviour
	{
		[Token(Token = "0x4000727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ChildLayoutConfig[] ChildConfigs;

		[Token(Token = "0x600193D")]
		[Address(RVA = "0xEE87C4", Offset = "0xEE87C4", VA = "0xEE87C4")]
		private void Update()
		{
		}

		[Token(Token = "0x600193E")]
		[Address(RVA = "0xEE87C8", Offset = "0xEE87C8", VA = "0xEE87C8")]
		public void UpdateLayout()
		{
		}

		[Token(Token = "0x600193F")]
		[Address(RVA = "0xEE8A20", Offset = "0xEE8A20", VA = "0xEE8A20")]
		public CustomUILayout()
		{
		}
	}
	[Token(Token = "0x2000197")]
	public enum Direction
	{
		[Token(Token = "0x4000729")]
		Reverse = -1,
		[Token(Token = "0x400072A")]
		Toggle,
		[Token(Token = "0x400072B")]
		Forward,
		[Token(Token = "0x400072C")]
		Backward
	}
}
namespace Sword
{
	[Token(Token = "0x2000198")]
	public class ShakeCamera : MonoBehaviour
	{
		[Token(Token = "0x400072D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float shakeLevel;

		[Token(Token = "0x400072E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float setShakeTime;

		[Token(Token = "0x400072F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float shakeFps;

		[Token(Token = "0x4000730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool isshakeCamera;

		[Token(Token = "0x4000731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float fps;

		[Token(Token = "0x4000732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float shakeTime;

		[Token(Token = "0x4000733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float frameTime;

		[Token(Token = "0x4000734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float shakeDelta;

		[Token(Token = "0x4000735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Camera selfCamera;

		[Token(Token = "0x6001940")]
		[Address(RVA = "0xCAB73C", Offset = "0xCAB73C", VA = "0xCAB73C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001941")]
		[Address(RVA = "0xCAB7C0", Offset = "0xCAB7C0", VA = "0xCAB7C0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001942")]
		[Address(RVA = "0xCAB828", Offset = "0xCAB828", VA = "0xCAB828")]
		private void Update()
		{
		}

		[Token(Token = "0x6001943")]
		[Address(RVA = "0xCAB964", Offset = "0xCAB964", VA = "0xCAB964")]
		public void SetShakeParams(float shakeLevelPara, float shakeTimePara, float shakeFpsPara)
		{
		}

		[Token(Token = "0x6001944")]
		[Address(RVA = "0xCAB9A0", Offset = "0xCAB9A0", VA = "0xCAB9A0")]
		public ShakeCamera()
		{
		}
	}
	[Token(Token = "0x2000199")]
	public class ConstCtrl__HAIBAO__SWORD__
	{
		[Token(Token = "0x4000736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int OnApplicationPause;

		[Token(Token = "0x4000737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static int ViewFinished;

		[Token(Token = "0x4000738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static int ShareSuccess;

		[Token(Token = "0x4000739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static int GuideTouch;

		[Token(Token = "0x400073A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static int GuideDragBegin;

		[Token(Token = "0x400073B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static int GuideDrag;

		[Token(Token = "0x400073C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static int GiodeDragEnd;

		[Token(Token = "0x400073D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public static int GuideDown;

		[Token(Token = "0x400073E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static int GuideUp;

		[Token(Token = "0x400073F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public static int GuideTouchBg;

		[Token(Token = "0x4000740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static int GuideEventOver;

		[Token(Token = "0x4000741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public static int GuideSetFocus;

		[Token(Token = "0x4000742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static int OnCheckInsideItem;

		[Token(Token = "0x4000743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public static int LoadLuaFinish;

		[Token(Token = "0x4000744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static int OnJavaToUnity;

		[Token(Token = "0x6001945")]
		[Address(RVA = "0xC10C10", Offset = "0xC10C10", VA = "0xC10C10")]
		public ConstCtrl__HAIBAO__SWORD__()
		{
		}
	}
	[Token(Token = "0x200019A")]
	public delegate void GoCallBack(GameObject go, Resource res);
	[Token(Token = "0x200019B")]
	public delegate bool OnCheckDirty();
	[Token(Token = "0x200019C")]
	public enum NotifyType__HAIBAO__SWORD__
	{
		[Token(Token = "0x4000746")]
		None,
		[Token(Token = "0x4000747")]
		Ctrl,
		[Token(Token = "0x4000748")]
		View,
		[Token(Token = "0x4000749")]
		Touch,
		[Token(Token = "0x400074A")]
		Net
	}
	[Token(Token = "0x200019D")]
	public enum eModelShaderType__HAIBAO__SWORD__
	{
		[Token(Token = "0x400074C")]
		PVE = 0,
		[Token(Token = "0x400074D")]
		PVP = 1,
		[Token(Token = "0x400074E")]
		VIEWSHOW = 2,
		[Token(Token = "0x400074F")]
		NULL = 99
	}
	[Token(Token = "0x200019E")]
	public enum CANVAS_TAG__HAIBAO__SWORD__
	{
		[Token(Token = "0x4000751")]
		ROOT_MAIN = 0,
		[Token(Token = "0x4000752")]
		ROOT_ABOVE_MAIN = 1,
		[Token(Token = "0x4000753")]
		ROOT_POPUP = 3,
		[Token(Token = "0x4000754")]
		ROOT_NOTIFY = 5,
		[Token(Token = "0x4000755")]
		ROOT_TOP = 6,
		[Token(Token = "0x4000756")]
		ROOT_GUIDE = 7,
		[Token(Token = "0x4000757")]
		ROOT_ABSOLUTE_TOP = 8,
		[Token(Token = "0x4000758")]
		ROOT_LOADING = 9,
		[Token(Token = "0x4000759")]
		ROOT_TWEEN = 10
	}
	[Token(Token = "0x200019F")]
	public enum EAudioType__HAIBAO__SWORD__
	{
		[Token(Token = "0x400075B")]
		Null,
		[Token(Token = "0x400075C")]
		Add,
		[Token(Token = "0x400075D")]
		IsReplace,
		[Token(Token = "0x400075E")]
		Cycle
	}
	[Token(Token = "0x20001A0")]
	public enum EVrInPutDataType__HAIBAO__SWORD__
	{
		[Token(Token = "0x4000760")]
		Null,
		[Token(Token = "0x4000761")]
		primary2DAxis,
		[Token(Token = "0x4000762")]
		gripButton,
		[Token(Token = "0x4000763")]
		primary2DAxisClick,
		[Token(Token = "0x4000764")]
		secondryButton,
		[Token(Token = "0x4000765")]
		menuButton,
		[Token(Token = "0x4000766")]
		primaryButton,
		[Token(Token = "0x4000767")]
		triggerButton
	}
	[Token(Token = "0x20001A1")]
	public enum GamePlatform
	{
		[Token(Token = "0x4000769")]
		Windows,
		[Token(Token = "0x400076A")]
		Android,
		[Token(Token = "0x400076B")]
		iOS,
		[Token(Token = "0x400076C")]
		webgl
	}
	[Token(Token = "0x20001A2")]
	public class ConstCache__HAIBAO__SWORD__
	{
		[Token(Token = "0x400076D")]
		public const string IsZip = "IsZip";

		[Token(Token = "0x600194F")]
		[Address(RVA = "0xC10C08", Offset = "0xC10C08", VA = "0xC10C08")]
		public ConstCache__HAIBAO__SWORD__()
		{
		}
	}
	[Token(Token = "0x20001A3")]
	public class ConstString__HAIBAO__SWORD__
	{
		[Token(Token = "0x400076E")]
		public const string PoolNodeName = "Node";

		[Token(Token = "0x400076F")]
		public const string PoolResourceQueueItemName = "ResourceQueueItem";

		[Token(Token = "0x4000770")]
		public const string PoolTimeInfoName = "TimeInfo";

		[Token(Token = "0x4000771")]
		public const string PoolFrameInfoName = "FrameInfo";

		[Token(Token = "0x4000772")]
		public const string PoolResourceName = "Resource";

		[Token(Token = "0x4000773")]
		public const string PoolBattleTipItem = "BattleTipItem";

		[Token(Token = "0x4000774")]
		public const string PoolAttributeEffect = "PoolAttributeEffect";

		[Token(Token = "0x4000775")]
		public const string PoolComCurve = "PoolComCurve";

		[Token(Token = "0x4000776")]
		public const string PoolAssetRes = "AssetRes";

		[Token(Token = "0x4000777")]
		public const string PoolAssetAB = "AssetAB";

		[Token(Token = "0x4000778")]
		public const string PoolAssetResEditor = "AssetResEditor";

		[Token(Token = "0x4000779")]
		public const string PoolBundle = "PoolBundle";

		[Token(Token = "0x400077A")]
		public const string PoolResourceCallback = "PoolResourceCallback";

		[Token(Token = "0x400077B")]
		public const string PoolDownloadTexture = "PoolDownloadTexture";

		[Token(Token = "0x400077C")]
		public const string GuideDragData = "GuideDragData";

		[Token(Token = "0x400077D")]
		public const string ModelResData = "ModelResData";

		[Token(Token = "0x400077E")]
		public const string GameName = "消消乐";

		[Token(Token = "0x6001950")]
		[Address(RVA = "0xC10EB8", Offset = "0xC10EB8", VA = "0xC10EB8")]
		public ConstString__HAIBAO__SWORD__()
		{
		}
	}
	[Token(Token = "0x20001A4")]
	public class ConstView__HAIBAO__SWORD__
	{
		[Token(Token = "0x400077F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int PLAY_TOUCH_EFFECT;

		[Token(Token = "0x4000780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static int SECOND_FINGER_UP;

		[Token(Token = "0x6001951")]
		[Address(RVA = "0xC10EC0", Offset = "0xC10EC0", VA = "0xC10EC0")]
		public ConstView__HAIBAO__SWORD__()
		{
		}
	}
	[Token(Token = "0x20001A5")]
	public class GameMgr__HAIBAO__SWORD__
	{
		[Token(Token = "0x4000781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static IResourceLoader Loader;

		[Token(Token = "0x6001953")]
		[Address(RVA = "0xC9F8BC", Offset = "0xC9F8BC", VA = "0xC9F8BC")]
		public GameMgr__HAIBAO__SWORD__()
		{
		}
	}
	[Token(Token = "0x20001A6")]
	public class AnimationActive : AnimationBase
	{
		[Token(Token = "0x4000782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject Target;

		[Token(Token = "0x4000783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool TargetActive;

		[Token(Token = "0x6001955")]
		[Address(RVA = "0xD36CD8", Offset = "0xD36CD8", VA = "0xD36CD8", Slot = "5")]
		protected override void OnVisible()
		{
		}

		[Token(Token = "0x6001956")]
		[Address(RVA = "0xD36D48", Offset = "0xD36D48", VA = "0xD36D48")]
		private void SetTargetActive()
		{
		}

		[Token(Token = "0x6001957")]
		[Address(RVA = "0xD36D6C", Offset = "0xD36D6C", VA = "0xD36D6C", Slot = "6")]
		protected override void OnInVisible()
		{
		}

		[Token(Token = "0x6001958")]
		[Address(RVA = "0xD36D70", Offset = "0xD36D70", VA = "0xD36D70")]
		public AnimationActive()
		{
		}
	}
	[Token(Token = "0x20001A7")]
	public abstract class AnimationBase : MonoBehaviour
	{
		[Token(Token = "0x4000784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Sequence seq;

		[Token(Token = "0x4000785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action<GameObject> Callback;

		[Token(Token = "0x4000786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LuaFunction Function;

		[Token(Token = "0x4000787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float Time;

		[Token(Token = "0x4000788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float StartTime;

		[Token(Token = "0x6001959")]
		[Address(RVA = "0xD36D90", Offset = "0xD36D90", VA = "0xD36D90", Slot = "4")]
		public virtual float GetTime()
		{
			return default(float);
		}

		[Token(Token = "0x600195A")]
		[Address(RVA = "0xD36D98", Offset = "0xD36D98", VA = "0xD36D98")]
		public float GetMaxTime()
		{
			return default(float);
		}

		[Token(Token = "0x600195B")]
		[Address(RVA = "0xD36DC8", Offset = "0xD36DC8", VA = "0xD36DC8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600195C")]
		[Address(RVA = "0xD36DD4", Offset = "0xD36DD4", VA = "0xD36DD4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600195D")]
		[Address(RVA = "0xD36E18", Offset = "0xD36E18", VA = "0xD36E18")]
		public void SetCallback(Action<GameObject> callback)
		{
		}

		[Token(Token = "0x600195E")]
		[Address(RVA = "0xD36E20", Offset = "0xD36E20", VA = "0xD36E20")]
		public void SetLunCallback(LuaFunction fun)
		{
		}

		[Token(Token = "0x600195F")]
		[Address(RVA = "0xD36E28", Offset = "0xD36E28", VA = "0xD36E28")]
		protected void Call()
		{
		}

		[Token(Token = "0x6001960")]
		protected abstract void OnVisible();

		[Token(Token = "0x6001961")]
		protected abstract void OnInVisible();

		[Token(Token = "0x6001962")]
		[Address(RVA = "0xD36EE0", Offset = "0xD36EE0", VA = "0xD36EE0")]
		public static void SetAnimationCallback(GameObject go, LuaFunction callback, Action<GameObject> csCallback)
		{
		}

		[Token(Token = "0x6001963")]
		[Address(RVA = "0xD36D80", Offset = "0xD36D80", VA = "0xD36D80")]
		protected AnimationBase()
		{
		}
	}
	[Token(Token = "0x20001A8")]
	public class AnimationImageAlpha : AnimationBase
	{
		[Token(Token = "0x4000789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float StarAlpha;

		[Token(Token = "0x400078A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float TargetAlpha;

		[Token(Token = "0x400078B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Image targetImage;

		[Token(Token = "0x400078C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int number;

		[Token(Token = "0x6001964")]
		[Address(RVA = "0xD37028", Offset = "0xD37028", VA = "0xD37028", Slot = "5")]
		protected override void OnVisible()
		{
		}

		[Token(Token = "0x6001965")]
		[Address(RVA = "0xD3702C", Offset = "0xD3702C", VA = "0xD3702C")]
		public void CallStarTween(float time)
		{
		}

		[Token(Token = "0x6001966")]
		[Address(RVA = "0xD37154", Offset = "0xD37154", VA = "0xD37154")]
		private void StarTween()
		{
		}

		[Token(Token = "0x6001967")]
		[Address(RVA = "0xD372A4", Offset = "0xD372A4", VA = "0xD372A4")]
		private void UpdateTween(int num)
		{
		}

		[Token(Token = "0x6001968")]
		[Address(RVA = "0xD37394", Offset = "0xD37394", VA = "0xD37394", Slot = "6")]
		protected override void OnInVisible()
		{
		}

		[Token(Token = "0x6001969")]
		[Address(RVA = "0xD37398", Offset = "0xD37398", VA = "0xD37398")]
		public AnimationImageAlpha()
		{
		}

		[Token(Token = "0x600196A")]
		[Address(RVA = "0xD373A8", Offset = "0xD373A8", VA = "0xD373A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A6CD8", Offset = "0x9A6CD8")]
		private int <StarTween>b__6_0()
		{
			return default(int);
		}

		[Token(Token = "0x600196B")]
		[Address(RVA = "0xD373B0", Offset = "0xD373B0", VA = "0xD373B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A6CE8", Offset = "0x9A6CE8")]
		private void <StarTween>b__6_1(int x)
		{
		}

		[Token(Token = "0x600196C")]
		[Address(RVA = "0xD373B8", Offset = "0xD373B8", VA = "0xD373B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A6CF8", Offset = "0x9A6CF8")]
		private void <StarTween>b__6_2()
		{
		}
	}
	[Token(Token = "0x20001A9")]
	public class AnimationRadomRotation : AnimationBase
	{
		[Token(Token = "0x400078D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 min;

		[Token(Token = "0x400078E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 max;

		[Token(Token = "0x600196D")]
		[Address(RVA = "0xD373C0", Offset = "0xD373C0", VA = "0xD373C0", Slot = "5")]
		protected override void OnVisible()
		{
		}

		[Token(Token = "0x600196E")]
		[Address(RVA = "0xD37514", Offset = "0xD37514", VA = "0xD37514", Slot = "6")]
		protected override void OnInVisible()
		{
		}

		[Token(Token = "0x600196F")]
		[Address(RVA = "0xD37518", Offset = "0xD37518", VA = "0xD37518")]
		public AnimationRadomRotation()
		{
		}
	}
	[Token(Token = "0x20001AA")]
	public class AnimationScale : AnimationBase
	{
		[Token(Token = "0x400078F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 CurrentScale;

		[Token(Token = "0x4000790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 TargetScale;

		[Token(Token = "0x6001970")]
		[Address(RVA = "0xD37528", Offset = "0xD37528", VA = "0xD37528", Slot = "5")]
		protected override void OnVisible()
		{
		}

		[Token(Token = "0x6001971")]
		[Address(RVA = "0xD3768C", Offset = "0xD3768C", VA = "0xD3768C", Slot = "6")]
		protected override void OnInVisible()
		{
		}

		[Token(Token = "0x6001972")]
		[Address(RVA = "0xD37690", Offset = "0xD37690", VA = "0xD37690")]
		public AnimationScale()
		{
		}

		[Token(Token = "0x6001973")]
		[Address(RVA = "0xD376A0", Offset = "0xD376A0", VA = "0xD376A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A6D08", Offset = "0x9A6D08")]
		private void <OnVisible>b__2_0()
		{
		}
	}
	[Token(Token = "0x20001AB")]
	public class AnimationSlider : AnimationBase
	{
		[Token(Token = "0x4000791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int i_Number;

		[Token(Token = "0x4000792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int i_MaxNumber;

		[Token(Token = "0x4000793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float f_FullTime;

		[Token(Token = "0x4000794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float f_CurCostTime;

		[Token(Token = "0x4000795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Slider sld_Exp;

		[Token(Token = "0x4000796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int i_RunCount;

		[Token(Token = "0x4000797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float f_CurRatio;

		[Token(Token = "0x4000798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float f_EndRatio;

		[Token(Token = "0x4000799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool b_NeedDelay;

		[Token(Token = "0x400079A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Tweener tweener;

		[Token(Token = "0x400079B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private LuaFunction callback;

		[Token(Token = "0x6001974")]
		[Address(RVA = "0xD376A4", Offset = "0xD376A4", VA = "0xD376A4", Slot = "5")]
		protected override void OnVisible()
		{
		}

		[Token(Token = "0x6001975")]
		[Address(RVA = "0xD377E8", Offset = "0xD377E8", VA = "0xD377E8", Slot = "6")]
		protected override void OnInVisible()
		{
		}

		[Token(Token = "0x6001976")]
		[Address(RVA = "0xD37800", Offset = "0xD37800", VA = "0xD37800")]
		public void CallAnimSliderStar(int _RunCount, float _CurRatio, float _EndRatio, LuaFunction _callback)
		{
		}

		[Token(Token = "0x6001977")]
		[Address(RVA = "0xD376A8", Offset = "0xD376A8", VA = "0xD376A8")]
		private void Init()
		{
		}

		[Token(Token = "0x6001978")]
		[Address(RVA = "0xD37810", Offset = "0xD37810", VA = "0xD37810")]
		private void StarTween()
		{
		}

		[Token(Token = "0x6001979")]
		[Address(RVA = "0xD37A4C", Offset = "0xD37A4C", VA = "0xD37A4C")]
		private void CompleteTween()
		{
		}

		[Token(Token = "0x600197A")]
		[Address(RVA = "0xD37B48", Offset = "0xD37B48", VA = "0xD37B48")]
		public AnimationSlider()
		{
		}

		[Token(Token = "0x600197B")]
		[Address(RVA = "0xD37B60", Offset = "0xD37B60", VA = "0xD37B60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A6D18", Offset = "0x9A6D18")]
		private float <StarTween>b__15_0()
		{
			return default(float);
		}

		[Token(Token = "0x600197C")]
		[Address(RVA = "0xD37B84", Offset = "0xD37B84", VA = "0xD37B84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A6D28", Offset = "0x9A6D28")]
		private void <StarTween>b__15_1(float x)
		{
		}

		[Token(Token = "0x600197D")]
		[Address(RVA = "0xD37BA8", Offset = "0xD37BA8", VA = "0xD37BA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A6D38", Offset = "0x9A6D38")]
		private float <StarTween>b__15_2()
		{
			return default(float);
		}

		[Token(Token = "0x600197E")]
		[Address(RVA = "0xD37BCC", Offset = "0xD37BCC", VA = "0xD37BCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A6D48", Offset = "0x9A6D48")]
		private void <StarTween>b__15_3(float x)
		{
		}

		[Token(Token = "0x600197F")]
		[Address(RVA = "0xD37BF0", Offset = "0xD37BF0", VA = "0xD37BF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A6D58", Offset = "0x9A6D58")]
		private void <StarTween>b__15_4()
		{
		}
	}
	[Token(Token = "0x20001AC")]
	public class AnimationUIMove : AnimationBase
	{
		[Token(Token = "0x400079C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 TargetVec;

		[Token(Token = "0x400079D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject Target;

		[Token(Token = "0x400079E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Speed;

		[Token(Token = "0x6001980")]
		[Address(RVA = "0xD37BF4", Offset = "0xD37BF4", VA = "0xD37BF4", Slot = "4")]
		public override float GetTime()
		{
			return default(float);
		}

		[Token(Token = "0x6001981")]
		[Address(RVA = "0xD37C84", Offset = "0xD37C84", VA = "0xD37C84", Slot = "5")]
		protected override void OnVisible()
		{
		}

		[Token(Token = "0x6001982")]
		[Address(RVA = "0xD37E3C", Offset = "0xD37E3C", VA = "0xD37E3C", Slot = "6")]
		protected override void OnInVisible()
		{
		}

		[Token(Token = "0x6001983")]
		[Address(RVA = "0xD37E40", Offset = "0xD37E40", VA = "0xD37E40")]
		public AnimationUIMove()
		{
		}

		[Token(Token = "0x6001984")]
		[Address(RVA = "0xD37E58", Offset = "0xD37E58", VA = "0xD37E58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A6D68", Offset = "0x9A6D68")]
		private void <OnVisible>b__4_0()
		{
		}
	}
	[Token(Token = "0x20001AD")]
	public class EasyAnimation : MonoBehaviour
	{
		[Token(Token = "0x400079F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject _go;

		[Token(Token = "0x40007A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Animation _anim;

		[Token(Token = "0x6001985")]
		[Address(RVA = "0xC119C8", Offset = "0xC119C8", VA = "0xC119C8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001986")]
		[Address(RVA = "0xC11A28", Offset = "0xC11A28", VA = "0xC11A28")]
		public void PlayAnim(int go, string name)
		{
		}

		[Token(Token = "0x6001987")]
		[Address(RVA = "0xC11A48", Offset = "0xC11A48", VA = "0xC11A48")]
		public EasyAnimation()
		{
		}
	}
	[Token(Token = "0x20001AE")]
	public class AnimationCurveCom : MonoBehaviour
	{
		[Token(Token = "0x40007A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationCurve Curve;

		[Token(Token = "0x6001988")]
		[Address(RVA = "0xD37020", Offset = "0xD37020", VA = "0xD37020")]
		public AnimationCurveCom()
		{
		}
	}
	[Token(Token = "0x20001AF")]
	public class CircleLoop : SBehaviour
	{
		[Token(Token = "0x200039C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93FF30", Offset = "0x93FF30")]
		private sealed class <>c__DisplayClass62_0
		{
			[Token(Token = "0x4000F68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Tweener tweener;

			[Token(Token = "0x4000F69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public CircleLoop <>4__this;

			[Token(Token = "0x6002CB3")]
			[Address(RVA = "0xC0C1A8", Offset = "0xC0C1A8", VA = "0xC0C1A8")]
			public <>c__DisplayClass62_0()
			{
			}

			[Token(Token = "0x6002CB4")]
			[Address(RVA = "0xC0C1B0", Offset = "0xC0C1B0", VA = "0xC0C1B0")]
			internal void <FixCircleRota>b__0()
			{
			}
		}

		[Token(Token = "0x40007A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float AccelerationRate;

		[Token(Token = "0x40007A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float LerpRate;

		[Token(Token = "0x40007A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float DragDeltaRate;

		[Token(Token = "0x40007A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float DragDeltaAngleRate;

		[Token(Token = "0x40007A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject ItemBase;

		[Token(Token = "0x40007A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject[] Items;

		[Token(Token = "0x40007A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject Select;

		[Token(Token = "0x40007A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject OldSelect;

		[Token(Token = "0x40007AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject drag;

		[Token(Token = "0x40007AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public RectTransform circle;

		[Token(Token = "0x40007AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool HideNotNear;

		[Token(Token = "0x40007AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public int ItemNum;

		[Token(Token = "0x40007AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public int CheckNearNum;

		[Token(Token = "0x40007AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float R;

		[Token(Token = "0x40007B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public int SelectNum;

		[Token(Token = "0x40007B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float DragX;

		[Token(Token = "0x40007B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float DragY;

		[Token(Token = "0x40007B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float AutoMoveTime;

		[Token(Token = "0x40007B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool _isDragging;

		[Token(Token = "0x40007B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		private bool _isNeedCallOnComplete;

		[Token(Token = "0x40007B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Vector2 OriPos;

		[Token(Token = "0x40007B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Vector3 CircleEuler;

		[Token(Token = "0x40007B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3 DragBeginEuler;

		[Token(Token = "0x40007B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public Vector3 targetEuler;

		[Token(Token = "0x40007BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float JudgeDis;

		[Token(Token = "0x40007BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float CurAccelerationRate;

		[Token(Token = "0x40007BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Transform Pivot;

		[Token(Token = "0x40007BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public bool isInit;

		[Token(Token = "0x40007BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public LuaFunction onChangeSelect;

		[Token(Token = "0x40007BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public LuaFunction onResetItemIndex;

		[Token(Token = "0x40007C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public LuaFunction onNearSelect;

		[Token(Token = "0x40007C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public LuaFunction onTweenCompelete;

		[Token(Token = "0x40007C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private ComCacheDict__HAIBAO__SWORD__<Transform> _dictCacheTs;

		[Token(Token = "0x40007C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private ComCacheDict__HAIBAO__SWORD__<CircleLoopItemBase> _dictCacheItem;

		[Token(Token = "0x40007C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private bool _isStopAtNextFrame;

		[Token(Token = "0x170000B5")]
		public float SingleAngle
		{
			[Token(Token = "0x6001989")]
			[Address(RVA = "0xD3C38C", Offset = "0xD3C38C", VA = "0xD3C38C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000B6")]
		[ExportToLuaAttrbute]
		public LuaFunction OnResetItemIndex
		{
			[Token(Token = "0x600198B")]
			[Address(RVA = "0xD3C3AC", Offset = "0xD3C3AC", VA = "0xD3C3AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600198A")]
			[Address(RVA = "0xD3C3A4", Offset = "0xD3C3A4", VA = "0xD3C3A4")]
			set
			{
			}
		}

		[Token(Token = "0x170000B7")]
		[ExportToLuaAttrbute]
		public LuaFunction OnTweenCompelete
		{
			[Token(Token = "0x600198D")]
			[Address(RVA = "0xD3C3BC", Offset = "0xD3C3BC", VA = "0xD3C3BC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600198C")]
			[Address(RVA = "0xD3C3B4", Offset = "0xD3C3B4", VA = "0xD3C3B4")]
			set
			{
			}
		}

		[Token(Token = "0x170000B8")]
		[ExportToLuaAttrbute]
		public LuaFunction OnChangeSelect
		{
			[Token(Token = "0x600198F")]
			[Address(RVA = "0xD3C3CC", Offset = "0xD3C3CC", VA = "0xD3C3CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600198E")]
			[Address(RVA = "0xD3C3C4", Offset = "0xD3C3C4", VA = "0xD3C3C4")]
			set
			{
			}
		}

		[Token(Token = "0x170000B9")]
		[ExportToLuaAttrbute]
		public LuaFunction OnNearSelect
		{
			[Token(Token = "0x6001991")]
			[Address(RVA = "0xD3C3DC", Offset = "0xD3C3DC", VA = "0xD3C3DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001990")]
			[Address(RVA = "0xD3C3D4", Offset = "0xD3C3D4", VA = "0xD3C3D4")]
			set
			{
			}
		}

		[Token(Token = "0x6001992")]
		[Address(RVA = "0xD3C3E4", Offset = "0xD3C3E4", VA = "0xD3C3E4")]
		[ExportToLuaAttrbute]
		public void Init()
		{
		}

		[Token(Token = "0x6001993")]
		[Address(RVA = "0xD3C784", Offset = "0xD3C784", VA = "0xD3C784")]
		private void fix()
		{
		}

		[Token(Token = "0x6001994")]
		[Address(RVA = "0xD3C88C", Offset = "0xD3C88C", VA = "0xD3C88C")]
		private void BindDrag()
		{
		}

		[Token(Token = "0x6001995")]
		[Address(RVA = "0xD3D360", Offset = "0xD3D360", VA = "0xD3D360")]
		public void OnPointerDown(PointerEventData data)
		{
		}

		[Token(Token = "0x6001996")]
		[Address(RVA = "0xD3D36C", Offset = "0xD3D36C", VA = "0xD3D36C")]
		private void _stop()
		{
		}

		[Token(Token = "0x6001997")]
		[Address(RVA = "0xD3D3E0", Offset = "0xD3D3E0", VA = "0xD3D3E0")]
		public void OnDragCircleBegin(PointerEventData data)
		{
		}

		[Token(Token = "0x6001998")]
		[Address(RVA = "0xD3D448", Offset = "0xD3D448", VA = "0xD3D448")]
		public void OnDragCircle(PointerEventData data)
		{
		}

		[Token(Token = "0x6001999")]
		[Address(RVA = "0xD3D3B8", Offset = "0xD3D3B8", VA = "0xD3D3B8")]
		private void _setEuler(Vector3 euler)
		{
		}

		[Token(Token = "0x600199A")]
		[Address(RVA = "0xD3D4D8", Offset = "0xD3D4D8", VA = "0xD3D4D8")]
		private void Update()
		{
		}

		[Token(Token = "0x600199B")]
		[Address(RVA = "0xD3D6A8", Offset = "0xD3D6A8", VA = "0xD3D6A8")]
		public void OnDragCircleEnd(PointerEventData data)
		{
		}

		[Token(Token = "0x600199C")]
		[Address(RVA = "0xD3D7A4", Offset = "0xD3D7A4", VA = "0xD3D7A4")]
		private float _fixEulerZ(float z)
		{
			return default(float);
		}

		[Token(Token = "0x600199D")]
		[Address(RVA = "0xD3D84C", Offset = "0xD3D84C", VA = "0xD3D84C")]
		public void MoveToIndex(int index)
		{
		}

		[Token(Token = "0x600199E")]
		[Address(RVA = "0xD3CBAC", Offset = "0xD3CBAC", VA = "0xD3CBAC")]
		private void FixSelectIndex()
		{
		}

		[Token(Token = "0x600199F")]
		[Address(RVA = "0xD3DE80", Offset = "0xD3DE80", VA = "0xD3DE80")]
		private void FixCircleRota()
		{
		}

		[Token(Token = "0x60019A0")]
		[Address(RVA = "0xD3D9AC", Offset = "0xD3D9AC", VA = "0xD3D9AC")]
		private void FixItemRota()
		{
		}

		[Token(Token = "0x60019A1")]
		[Address(RVA = "0xD3DAA8", Offset = "0xD3DAA8", VA = "0xD3DAA8")]
		private void CheackNearItem()
		{
		}

		[Token(Token = "0x60019A2")]
		[Address(RVA = "0xD3DE84", Offset = "0xD3DE84", VA = "0xD3DE84")]
		public GameObject GetSelect()
		{
			return null;
		}

		[Token(Token = "0x60019A3")]
		[Address(RVA = "0xD3DE8C", Offset = "0xD3DE8C", VA = "0xD3DE8C")]
		public GameObject GetOldSelect()
		{
			return null;
		}

		[Token(Token = "0x60019A4")]
		[Address(RVA = "0xD3D944", Offset = "0xD3D944", VA = "0xD3D944")]
		[ExportToLuaAttrbute]
		public int GetIndex()
		{
			return default(int);
		}

		[Token(Token = "0x60019A5")]
		[Address(RVA = "0xD3DE94", Offset = "0xD3DE94", VA = "0xD3DE94")]
		[ExportToLuaAttrbute]
		public void SelecIndex(int index)
		{
		}

		[Token(Token = "0x60019A6")]
		[Address(RVA = "0xD3E134", Offset = "0xD3E134", VA = "0xD3E134")]
		private void OnApplicationFocus(bool focus)
		{
		}

		[Token(Token = "0x60019A7")]
		[Address(RVA = "0xD3E1A4", Offset = "0xD3E1A4", VA = "0xD3E1A4", Slot = "5")]
		protected override void InitMono()
		{
		}

		[Token(Token = "0x60019A8")]
		[Address(RVA = "0xD3E1A8", Offset = "0xD3E1A8", VA = "0xD3E1A8", Slot = "6")]
		public override void DestroyMono()
		{
		}

		[Token(Token = "0x60019A9")]
		[Address(RVA = "0xD3E218", Offset = "0xD3E218", VA = "0xD3E218")]
		public CircleLoop()
		{
		}

		[Token(Token = "0x60019AA")]
		[Address(RVA = "0xD3E2F4", Offset = "0xD3E2F4", VA = "0xD3E2F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A6DA8", Offset = "0x9A6DA8")]
		private void <BindDrag>b__51_0(BaseEventData data)
		{
		}

		[Token(Token = "0x60019AB")]
		[Address(RVA = "0xD3E388", Offset = "0xD3E388", VA = "0xD3E388")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A6DB8", Offset = "0x9A6DB8")]
		private void <BindDrag>b__51_1(BaseEventData data)
		{
		}

		[Token(Token = "0x60019AC")]
		[Address(RVA = "0xD3E41C", Offset = "0xD3E41C", VA = "0xD3E41C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A6DC8", Offset = "0x9A6DC8")]
		private void <BindDrag>b__51_2(BaseEventData data)
		{
		}

		[Token(Token = "0x60019AD")]
		[Address(RVA = "0xD3E4B0", Offset = "0xD3E4B0", VA = "0xD3E4B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A6DD8", Offset = "0x9A6DD8")]
		private void <BindDrag>b__51_3(BaseEventData data)
		{
		}
	}
	[Token(Token = "0x20001B0")]
	public class CircleLoopItemBase : SBehaviour
	{
		[Token(Token = "0x40007C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int SelectIndex;

		[Token(Token = "0x40007C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int GoIndex;

		[Token(Token = "0x40007C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public CircleLoop parent;

		[Token(Token = "0x60019AE")]
		[Address(RVA = "0xC0C240", Offset = "0xC0C240", VA = "0xC0C240")]
		public void OnClick(PointerEventData data)
		{
		}

		[Token(Token = "0x60019AF")]
		[Address(RVA = "0xC0C284", Offset = "0xC0C284", VA = "0xC0C284")]
		public void InitDrag()
		{
		}

		[Token(Token = "0x60019B0")]
		[Address(RVA = "0xC0C5DC", Offset = "0xC0C5DC", VA = "0xC0C5DC", Slot = "5")]
		protected override void InitMono()
		{
		}

		[Token(Token = "0x60019B1")]
		[Address(RVA = "0xC0C5E0", Offset = "0xC0C5E0", VA = "0xC0C5E0", Slot = "6")]
		public override void DestroyMono()
		{
		}

		[Token(Token = "0x60019B2")]
		[Address(RVA = "0xC0C5E4", Offset = "0xC0C5E4", VA = "0xC0C5E4")]
		public CircleLoopItemBase()
		{
		}

		[Token(Token = "0x60019B3")]
		[Address(RVA = "0xC0C5EC", Offset = "0xC0C5EC", VA = "0xC0C5EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A6DE8", Offset = "0x9A6DE8")]
		private void <InitDrag>b__4_0(BaseEventData data)
		{
		}

		[Token(Token = "0x60019B4")]
		[Address(RVA = "0xC0C68C", Offset = "0xC0C68C", VA = "0xC0C68C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A6DF8", Offset = "0x9A6DF8")]
		private void <InitDrag>b__4_1(BaseEventData data)
		{
		}

		[Token(Token = "0x60019B5")]
		[Address(RVA = "0xC0C72C", Offset = "0xC0C72C", VA = "0xC0C72C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A6E08", Offset = "0x9A6E08")]
		private void <InitDrag>b__4_2(BaseEventData data)
		{
		}

		[Token(Token = "0x60019B6")]
		[Address(RVA = "0xC0C7CC", Offset = "0xC0C7CC", VA = "0xC0C7CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A6E18", Offset = "0x9A6E18")]
		private void <InitDrag>b__4_3(BaseEventData data)
		{
		}

		[Token(Token = "0x60019B7")]
		[Address(RVA = "0xC0C860", Offset = "0xC0C860", VA = "0xC0C860")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A6E28", Offset = "0x9A6E28")]
		private void <InitDrag>b__4_4(BaseEventData data)
		{
		}
	}
	[Token(Token = "0x20001B1")]
	public class ComTimer__HAIBAO__SWORD__
	{
		[Token(Token = "0x40007C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<int> _listIDTime;

		[Token(Token = "0x40007C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<int> _listIDFrame;

		[Token(Token = "0x60019B8")]
		[Address(RVA = "0xC0CA20", Offset = "0xC0CA20", VA = "0xC0CA20")]
		public int AddTime(float time, TimeHandler handler, object data)
		{
			return default(int);
		}

		[Token(Token = "0x60019B9")]
		[Address(RVA = "0xC0CAD0", Offset = "0xC0CAD0", VA = "0xC0CAD0")]
		public int AddFrame(int frame, TimeHandler handler, object data)
		{
			return default(int);
		}

		[Token(Token = "0x60019BA")]
		[Address(RVA = "0xC0CB80", Offset = "0xC0CB80", VA = "0xC0CB80")]
		public void RemoveTime(int id)
		{
		}

		[Token(Token = "0x60019BB")]
		[Address(RVA = "0xC0CC08", Offset = "0xC0CC08", VA = "0xC0CC08")]
		public void RemoveFrame(int id)
		{
		}

		[Token(Token = "0x60019BC")]
		[Address(RVA = "0xC0CC90", Offset = "0xC0CC90", VA = "0xC0CC90")]
		public int EveryFrame(int frame, TimeHandler handler)
		{
			return default(int);
		}

		[Token(Token = "0x60019BD")]
		[Address(RVA = "0xC0CD30", Offset = "0xC0CD30", VA = "0xC0CD30")]
		public int EveryTime(float time, TimeHandler handler)
		{
			return default(int);
		}

		[Token(Token = "0x60019BE")]
		[Address(RVA = "0xC0CDD8", Offset = "0xC0CDD8", VA = "0xC0CDD8")]
		private void ClearTime()
		{
		}

		[Token(Token = "0x60019BF")]
		[Address(RVA = "0xC0CF30", Offset = "0xC0CF30", VA = "0xC0CF30")]
		private void ClearFrame()
		{
		}

		[Token(Token = "0x60019C0")]
		[Address(RVA = "0xC0D088", Offset = "0xC0D088", VA = "0xC0D088")]
		public void Clear()
		{
		}

		[Token(Token = "0x60019C1")]
		[Address(RVA = "0xC0D0AC", Offset = "0xC0D0AC", VA = "0xC0D0AC")]
		public ComTimer__HAIBAO__SWORD__()
		{
		}
	}
	[Token(Token = "0x20001B2")]
	[DisallowMultipleComponent]
	public class DragUI : SBehaviour, IPointerDownHandler, IEventSystemHandler, IDragHandler
	{
		[Token(Token = "0x40007CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector2 originalLocalPointerPosition;

		[Token(Token = "0x40007CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 originalPanelLocalPosition;

		[Token(Token = "0x40007CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public RectTransform panelRectTransform;

		[Token(Token = "0x40007CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public RectTransform AreaRectTransform;

		[Token(Token = "0x60019C2")]
		[Address(RVA = "0xC113B0", Offset = "0xC113B0", VA = "0xC113B0", Slot = "5")]
		protected override void InitMono()
		{
		}

		[Token(Token = "0x60019C3")]
		[Address(RVA = "0xC114E0", Offset = "0xC114E0", VA = "0xC114E0", Slot = "6")]
		public override void DestroyMono()
		{
		}

		[Token(Token = "0x60019C4")]
		[Address(RVA = "0xC114E4", Offset = "0xC114E4", VA = "0xC114E4", Slot = "7")]
		public void OnPointerDown(PointerEventData data)
		{
		}

		[Token(Token = "0x60019C5")]
		[Address(RVA = "0xC115AC", Offset = "0xC115AC", VA = "0xC115AC", Slot = "8")]
		public void OnDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x60019C6")]
		[Address(RVA = "0xC117A0", Offset = "0xC117A0", VA = "0xC117A0")]
		private void ClampToWindow()
		{
		}

		[Token(Token = "0x60019C7")]
		[Address(RVA = "0xC119C0", Offset = "0xC119C0", VA = "0xC119C0")]
		public DragUI()
		{
		}
	}
	[Token(Token = "0x20001B3")]
	public abstract class ResouceBase__HAIBAO__SWORD__<T> where T : new()
	{
		[Token(Token = "0x40007CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static T _instance;

		[Token(Token = "0x40007CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly object _lock;

		[Token(Token = "0x40007D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<Resource> resource;

		[Token(Token = "0x40007D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool resLoaded;

		[Token(Token = "0x40007D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Action LoadedCallBack;

		[Token(Token = "0x170000BA")]
		public static T Instance
		{
			[Token(Token = "0x60019C9")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x170000BB")]
		public bool IsLoaded
		{
			[Token(Token = "0x60019D3")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60019C8")]
		protected ResouceBase__HAIBAO__SWORD__()
		{
		}

		[Token(Token = "0x60019CA")]
		public virtual void Init()
		{
		}

		[Token(Token = "0x60019CB")]
		public virtual void Clear()
		{
		}

		[Token(Token = "0x60019CC")]
		public void InitRes()
		{
		}

		[Token(Token = "0x60019CD")]
		public void ReleaseRes()
		{
		}

		[Token(Token = "0x60019CE")]
		public virtual void OnResLoaded()
		{
		}

		[Token(Token = "0x60019CF")]
		public virtual List<string> GetResourcePath()
		{
			return null;
		}

		[Token(Token = "0x60019D0")]
		public Resource GetResouce(string path)
		{
			return null;
		}

		[Token(Token = "0x60019D1")]
		public Resource GetResouce(int index)
		{
			return null;
		}

		[Token(Token = "0x60019D2")]
		public GameObject GetPrefab(int index)
		{
			return null;
		}

		[Token(Token = "0x60019D5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A6E38", Offset = "0x9A6E38")]
		private void <InitRes>b__10_0(List<Resource> res, object o)
		{
		}
	}
	[Token(Token = "0x20001B4")]
	public enum ResourceRefState__HAIBAO__SWORD__
	{
		[Token(Token = "0x40007D4")]
		Load,
		[Token(Token = "0x40007D5")]
		Remove,
		[Token(Token = "0x40007D6")]
		Delete
	}
	[Token(Token = "0x20001B5")]
	public enum ResourceRefType__HAIBAO__SWORD__
	{
		[Token(Token = "0x40007D8")]
		Loader,
		[Token(Token = "0x40007D9")]
		Other,
		[Token(Token = "0x40007DA")]
		LookScrollRect,
		[Token(Token = "0x40007DB")]
		Effect,
		[Token(Token = "0x40007DC")]
		RoleBody,
		[Token(Token = "0x40007DD")]
		RoleOther,
		[Token(Token = "0x40007DE")]
		PVPOther,
		[Token(Token = "0x40007DF")]
		UI,
		[Token(Token = "0x40007E0")]
		Lua,
		[Token(Token = "0x40007E1")]
		Scene
	}
	[Token(Token = "0x20001B6")]
	public class ResourceRef : SBehaviour, IPoolableObject
	{
		[Token(Token = "0x40007E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public ResourceRefState__HAIBAO__SWORD__ State;

		[Token(Token = "0x40007E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Resource mRes;

		[Token(Token = "0x40007E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ResourceRefType__HAIBAO__SWORD__ ResourceRefType;

		[Token(Token = "0x40007E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Animator[] mAnimators;

		[Token(Token = "0x60019D6")]
		[Address(RVA = "0xCAA88C", Offset = "0xCAA88C", VA = "0xCAA88C")]
		public void SetRes(Resource res)
		{
		}

		[Token(Token = "0x60019D7")]
		[Address(RVA = "0xCAAA2C", Offset = "0xCAAA2C", VA = "0xCAAA2C")]
		public Resource GetRes()
		{
			return null;
		}

		[Token(Token = "0x60019D8")]
		[Address(RVA = "0xCAAA34", Offset = "0xCAAA34", VA = "0xCAAA34", Slot = "5")]
		protected override void InitMono()
		{
		}

		[Token(Token = "0x60019D9")]
		[Address(RVA = "0xCAAA90", Offset = "0xCAAA90", VA = "0xCAAA90", Slot = "6")]
		public override void DestroyMono()
		{
		}

		[Token(Token = "0x60019DA")]
		[Address(RVA = "0xCAAACC", Offset = "0xCAAACC", VA = "0xCAAACC", Slot = "1")]
		~ResourceRef()
		{
		}

		[Token(Token = "0x60019DB")]
		[Address(RVA = "0xCAA9F0", Offset = "0xCAA9F0", VA = "0xCAA9F0")]
		public void RemoveResource()
		{
		}

		[Token(Token = "0x60019DC")]
		[Address(RVA = "0xCAAB94", Offset = "0xCAAB94", VA = "0xCAAB94", Slot = "7")]
		public void InitPoolable(object datas)
		{
		}

		[Token(Token = "0x60019DD")]
		[Address(RVA = "0xCAAB9C", Offset = "0xCAAB9C", VA = "0xCAAB9C", Slot = "8")]
		public void ResetPoolable(object datas)
		{
		}

		[Token(Token = "0x60019DE")]
		[Address(RVA = "0xCAAC18", Offset = "0xCAAC18", VA = "0xCAAC18", Slot = "9")]
		public void Remove()
		{
		}

		[Token(Token = "0x60019DF")]
		[Address(RVA = "0xCAAC98", Offset = "0xCAAC98", VA = "0xCAAC98", Slot = "10")]
		public void Delete()
		{
		}

		[Token(Token = "0x60019E0")]
		[Address(RVA = "0xCAACB4", Offset = "0xCAACB4", VA = "0xCAACB4", Slot = "11")]
		public string GetPoolType()
		{
			return null;
		}

		[Token(Token = "0x60019E1")]
		[Address(RVA = "0xCAACD0", Offset = "0xCAACD0", VA = "0xCAACD0")]
		public ResourceRef()
		{
		}
	}
	[Token(Token = "0x20001B7")]
	public class MyTeener
	{
		[Token(Token = "0x200039D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93FF40", Offset = "0x93FF40")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x4000F6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LuaFunction func;

			[Token(Token = "0x6002CB5")]
			[Address(RVA = "0xCA7780", Offset = "0xCA7780", VA = "0xCA7780")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x6002CB6")]
			[Address(RVA = "0xCA77E8", Offset = "0xCA77E8", VA = "0xCA77E8")]
			internal void <OnComplete>b__0()
			{
			}
		}

		[Token(Token = "0x40007E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Tweener t;

		[Token(Token = "0x40007E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<LuaFunction> mfuns;

		[Token(Token = "0x60019E2")]
		[Address(RVA = "0xCA7410", Offset = "0xCA7410", VA = "0xCA7410")]
		public MyTeener(Tweener t)
		{
		}

		[Token(Token = "0x60019E3")]
		[Address(RVA = "0xCA743C", Offset = "0xCA743C", VA = "0xCA743C", Slot = "1")]
		~MyTeener()
		{
		}

		[Token(Token = "0x60019E4")]
		[Address(RVA = "0xCA755C", Offset = "0xCA755C", VA = "0xCA755C")]
		[NoToLua]
		public void AddFun(LuaFunction fun)
		{
		}

		[Token(Token = "0x60019E5")]
		[Address(RVA = "0xCA74A4", Offset = "0xCA74A4", VA = "0xCA74A4")]
		private void Clear()
		{
		}

		[Token(Token = "0x60019E6")]
		[Address(RVA = "0xCA7618", Offset = "0xCA7618", VA = "0xCA7618")]
		public void Kill()
		{
		}

		[Token(Token = "0x60019E7")]
		[Address(RVA = "0xCA7628", Offset = "0xCA7628", VA = "0xCA7628")]
		public void Pause()
		{
		}

		[Token(Token = "0x60019E8")]
		[Address(RVA = "0xCA7678", Offset = "0xCA7678", VA = "0xCA7678")]
		public void Play()
		{
		}

		[Token(Token = "0x60019E9")]
		[Address(RVA = "0xCA76C8", Offset = "0xCA76C8", VA = "0xCA76C8")]
		public void OnComplete(LuaFunction func)
		{
		}

		[Token(Token = "0x60019EA")]
		[Address(RVA = "0xCA7788", Offset = "0xCA7788", VA = "0xCA7788")]
		public void SetEase(AnimationCurve curve)
		{
		}
	}
	[Token(Token = "0x20001B8")]
	public class MySequence
	{
		[Token(Token = "0x200039E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93FF50", Offset = "0x93FF50")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x4000F6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LuaFunction func;

			[Token(Token = "0x6002CB7")]
			[Address(RVA = "0xCA7220", Offset = "0xCA7220", VA = "0xCA7220")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x6002CB8")]
			[Address(RVA = "0xCA73D8", Offset = "0xCA73D8", VA = "0xCA73D8")]
			internal void <OnComplete>b__0()
			{
			}
		}

		[Token(Token = "0x200039F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93FF60", Offset = "0x93FF60")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x4000F6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LuaFunction func;

			[Token(Token = "0x6002CB9")]
			[Address(RVA = "0xCA72E4", Offset = "0xCA72E4", VA = "0xCA72E4")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x6002CBA")]
			[Address(RVA = "0xCA73F4", Offset = "0xCA73F4", VA = "0xCA73F4")]
			internal void <AppendCallback>b__0()
			{
			}
		}

		[Token(Token = "0x40007E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Sequence seq;

		[Token(Token = "0x40007E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<LuaFunction> mfuns;

		[Token(Token = "0x60019EB")]
		[Address(RVA = "0xCA6EEC", Offset = "0xCA6EEC", VA = "0xCA6EEC")]
		public MySequence()
		{
		}

		[Token(Token = "0x60019EC")]
		[Address(RVA = "0xCA6F60", Offset = "0xCA6F60", VA = "0xCA6F60", Slot = "1")]
		~MySequence()
		{
		}

		[Token(Token = "0x60019ED")]
		[Address(RVA = "0xCA7080", Offset = "0xCA7080", VA = "0xCA7080")]
		private void AddFun(LuaFunction fun)
		{
		}

		[Token(Token = "0x60019EE")]
		[Address(RVA = "0xCA6FC8", Offset = "0xCA6FC8", VA = "0xCA6FC8")]
		private void Clear()
		{
		}

		[Token(Token = "0x60019EF")]
		[Address(RVA = "0xCA713C", Offset = "0xCA713C", VA = "0xCA713C")]
		public void Append(MyTeener myTeener)
		{
		}

		[Token(Token = "0x60019F0")]
		[Address(RVA = "0xCA715C", Offset = "0xCA715C", VA = "0xCA715C")]
		public void OnComplete(LuaFunction func)
		{
		}

		[Token(Token = "0x60019F1")]
		[Address(RVA = "0xCA7228", Offset = "0xCA7228", VA = "0xCA7228")]
		public void AppendCallback(LuaFunction func)
		{
		}

		[Token(Token = "0x60019F2")]
		[Address(RVA = "0xCA72EC", Offset = "0xCA72EC", VA = "0xCA72EC")]
		public void AppendInterval(float time)
		{
		}

		[Token(Token = "0x60019F3")]
		[Address(RVA = "0xCA72F8", Offset = "0xCA72F8", VA = "0xCA72F8")]
		public void Join(MyTeener myTeener)
		{
		}

		[Token(Token = "0x60019F4")]
		[Address(RVA = "0xCA7318", Offset = "0xCA7318", VA = "0xCA7318")]
		public void Pause()
		{
		}

		[Token(Token = "0x60019F5")]
		[Address(RVA = "0xCA7368", Offset = "0xCA7368", VA = "0xCA7368")]
		public void Kill()
		{
		}

		[Token(Token = "0x60019F6")]
		[Address(RVA = "0xCA7378", Offset = "0xCA7378", VA = "0xCA7378")]
		public void Play()
		{
		}

		[Token(Token = "0x60019F7")]
		[Address(RVA = "0xCA73C8", Offset = "0xCA73C8", VA = "0xCA73C8")]
		public void Restart()
		{
		}
	}
	[Token(Token = "0x20001B9")]
	public class TweenUtil
	{
		[Token(Token = "0x20003A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93FF70", Offset = "0x93FF70")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4000F6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Graphic gra;

			[Token(Token = "0x6002CBB")]
			[Address(RVA = "0xC2487C", Offset = "0xC2487C", VA = "0xC2487C")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x6002CBC")]
			[Address(RVA = "0xC24884", Offset = "0xC24884", VA = "0xC24884")]
			internal Vector4 <PlayColor>b__0()
			{
				return default(Vector4);
			}

			[Token(Token = "0x6002CBD")]
			[Address(RVA = "0xC248B4", Offset = "0xC248B4", VA = "0xC248B4")]
			internal void <PlayColor>b__1(Vector4 x)
			{
			}
		}

		[Token(Token = "0x20003A1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93FF80", Offset = "0x93FF80")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x4000F6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform trans;

			[Token(Token = "0x6002CBE")]
			[Address(RVA = "0xC248F0", Offset = "0xC248F0", VA = "0xC248F0")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x6002CBF")]
			[Address(RVA = "0xC248F8", Offset = "0xC248F8", VA = "0xC248F8")]
			internal Vector3 <PlayScale>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002CC0")]
			[Address(RVA = "0xC24914", Offset = "0xC24914", VA = "0xC24914")]
			internal void <PlayScale>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x20003A2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93FF90", Offset = "0x93FF90")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4000F6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform trans;

			[Token(Token = "0x6002CC1")]
			[Address(RVA = "0xC24930", Offset = "0xC24930", VA = "0xC24930")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x6002CC2")]
			[Address(RVA = "0xC24938", Offset = "0xC24938", VA = "0xC24938")]
			internal Vector3 <PlayRoate>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002CC3")]
			[Address(RVA = "0xC24954", Offset = "0xC24954", VA = "0xC24954")]
			internal void <PlayRoate>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x20003A3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93FFA0", Offset = "0x93FFA0")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x4000F70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform trans;

			[Token(Token = "0x4000F71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LuaFunction callBack;

			[Token(Token = "0x6002CC4")]
			[Address(RVA = "0xC242E0", Offset = "0xC242E0", VA = "0xC242E0")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x6002CC5")]
			[Address(RVA = "0xC242E8", Offset = "0xC242E8", VA = "0xC242E8")]
			internal Vector3 <PlayScaleWithCall>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002CC6")]
			[Address(RVA = "0xC24304", Offset = "0xC24304", VA = "0xC24304")]
			internal void <PlayScaleWithCall>b__1(Vector3 x)
			{
			}

			[Token(Token = "0x6002CC7")]
			[Address(RVA = "0xC24320", Offset = "0xC24320", VA = "0xC24320")]
			internal void <PlayScaleWithCall>b__2()
			{
			}
		}

		[Token(Token = "0x20003A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93FFB0", Offset = "0x93FFB0")]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x4000F72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Text text;

			[Token(Token = "0x6002CC8")]
			[Address(RVA = "0xC2433C", Offset = "0xC2433C", VA = "0xC2433C")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x6002CC9")]
			[Address(RVA = "0xC24344", Offset = "0xC24344", VA = "0xC24344")]
			internal int <TweenValue>b__0()
			{
				return default(int);
			}

			[Token(Token = "0x6002CCA")]
			[Address(RVA = "0xC243B4", Offset = "0xC243B4", VA = "0xC243B4")]
			internal void <TweenValue>b__1(int value)
			{
			}
		}

		[Token(Token = "0x20003A5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93FFC0", Offset = "0x93FFC0")]
		private sealed class <>c__DisplayClass12_0
		{
			[Token(Token = "0x4000F73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int startValue;

			[Token(Token = "0x4000F74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Text text;

			[Token(Token = "0x4000F75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string fmt;

			[Token(Token = "0x6002CCB")]
			[Address(RVA = "0xC24400", Offset = "0xC24400", VA = "0xC24400")]
			public <>c__DisplayClass12_0()
			{
			}

			[Token(Token = "0x6002CCC")]
			[Address(RVA = "0xC24408", Offset = "0xC24408", VA = "0xC24408")]
			internal int <TweenValueWithFormat>b__0()
			{
				return default(int);
			}

			[Token(Token = "0x6002CCD")]
			[Address(RVA = "0xC24410", Offset = "0xC24410", VA = "0xC24410")]
			internal void <TweenValueWithFormat>b__1(int value)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20003A6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93FFD0", Offset = "0x93FFD0")]
		private sealed class <>c
		{
			[Token(Token = "0x4000F76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000F77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static DOGetter<int> <>9__13_0;

			[Token(Token = "0x4000F78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static DOSetter<int> <>9__13_1;

			[Token(Token = "0x6002CCF")]
			[Address(RVA = "0xC242CC", Offset = "0xC242CC", VA = "0xC242CC")]
			public <>c()
			{
			}

			[Token(Token = "0x6002CD0")]
			[Address(RVA = "0xC242D4", Offset = "0xC242D4", VA = "0xC242D4")]
			internal int <TweenTimeValue>b__13_0()
			{
				return default(int);
			}

			[Token(Token = "0x6002CD1")]
			[Address(RVA = "0xC242DC", Offset = "0xC242DC", VA = "0xC242DC")]
			internal void <TweenTimeValue>b__13_1(int value)
			{
			}
		}

		[Token(Token = "0x20003A7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93FFE0", Offset = "0x93FFE0")]
		private sealed class <>c__DisplayClass14_0
		{
			[Token(Token = "0x4000F79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform trans;

			[Token(Token = "0x4000F7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Text text;

			[Token(Token = "0x4000F7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Color originColor;

			[Token(Token = "0x6002CD2")]
			[Address(RVA = "0xC244A8", Offset = "0xC244A8", VA = "0xC244A8")]
			public <>c__DisplayClass14_0()
			{
			}

			[Token(Token = "0x6002CD3")]
			[Address(RVA = "0xC244B0", Offset = "0xC244B0", VA = "0xC244B0")]
			internal Vector3 <TweenText>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002CD4")]
			[Address(RVA = "0xC244CC", Offset = "0xC244CC", VA = "0xC244CC")]
			internal void <TweenText>b__1(Vector3 x)
			{
			}

			[Token(Token = "0x6002CD5")]
			[Address(RVA = "0xC244E8", Offset = "0xC244E8", VA = "0xC244E8")]
			internal Vector3 <TweenText>b__2()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002CD6")]
			[Address(RVA = "0xC24504", Offset = "0xC24504", VA = "0xC24504")]
			internal void <TweenText>b__3(Vector3 x)
			{
			}

			[Token(Token = "0x6002CD7")]
			[Address(RVA = "0xC24520", Offset = "0xC24520", VA = "0xC24520")]
			internal void <TweenText>b__4()
			{
			}
		}

		[Token(Token = "0x20003A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93FFF0", Offset = "0x93FFF0")]
		private sealed class <>c__DisplayClass15_0
		{
			[Token(Token = "0x4000F7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Text text;

			[Token(Token = "0x4000F7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Color originColor;

			[Token(Token = "0x6002CD8")]
			[Address(RVA = "0xC24550", Offset = "0xC24550", VA = "0xC24550")]
			public <>c__DisplayClass15_0()
			{
			}

			[Token(Token = "0x6002CD9")]
			[Address(RVA = "0xC24558", Offset = "0xC24558", VA = "0xC24558")]
			internal int <TweenTextFont>b__0()
			{
				return default(int);
			}

			[Token(Token = "0x6002CDA")]
			[Address(RVA = "0xC24574", Offset = "0xC24574", VA = "0xC24574")]
			internal void <TweenTextFont>b__1(int value)
			{
			}

			[Token(Token = "0x6002CDB")]
			[Address(RVA = "0xC24590", Offset = "0xC24590", VA = "0xC24590")]
			internal void <TweenTextFont>b__2()
			{
			}
		}

		[Token(Token = "0x20003A9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940000", Offset = "0x940000")]
		private sealed class <>c__DisplayClass16_0
		{
			[Token(Token = "0x4000F7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Slider slider;

			[Token(Token = "0x6002CDC")]
			[Address(RVA = "0xC245C0", Offset = "0xC245C0", VA = "0xC245C0")]
			public <>c__DisplayClass16_0()
			{
			}

			[Token(Token = "0x6002CDD")]
			[Address(RVA = "0xC245C8", Offset = "0xC245C8", VA = "0xC245C8")]
			internal float <TweenSlider>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x6002CDE")]
			[Address(RVA = "0xC245EC", Offset = "0xC245EC", VA = "0xC245EC")]
			internal void <TweenSlider>b__1(float value)
			{
			}
		}

		[Token(Token = "0x20003AA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940010", Offset = "0x940010")]
		private sealed class <>c__DisplayClass17_0
		{
			[Token(Token = "0x4000F7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform trans;

			[Token(Token = "0x6002CDF")]
			[Address(RVA = "0xC24610", Offset = "0xC24610", VA = "0xC24610")]
			public <>c__DisplayClass17_0()
			{
			}

			[Token(Token = "0x6002CE0")]
			[Address(RVA = "0xC24618", Offset = "0xC24618", VA = "0xC24618")]
			internal Vector3 <TweenChildScale>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002CE1")]
			[Address(RVA = "0xC24634", Offset = "0xC24634", VA = "0xC24634")]
			internal void <TweenChildScale>b__1(Vector3 x)
			{
			}

			[Token(Token = "0x6002CE2")]
			[Address(RVA = "0xC24650", Offset = "0xC24650", VA = "0xC24650")]
			internal void <TweenChildScale>b__2()
			{
			}
		}

		[Token(Token = "0x20003AB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940020", Offset = "0x940020")]
		private sealed class <>c__DisplayClass19_0
		{
			[Token(Token = "0x4000F80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LuaFunction callBack;

			[Token(Token = "0x6002CE3")]
			[Address(RVA = "0xC246CC", Offset = "0xC246CC", VA = "0xC246CC")]
			public <>c__DisplayClass19_0()
			{
			}

			[Token(Token = "0x6002CE4")]
			[Address(RVA = "0xC246D4", Offset = "0xC246D4", VA = "0xC246D4")]
			internal void <PlayMoveToWithCall>b__0()
			{
			}
		}

		[Token(Token = "0x20003AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940030", Offset = "0x940030")]
		private sealed class <>c__DisplayClass20_0
		{
			[Token(Token = "0x4000F81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LuaFunction callBack;

			[Token(Token = "0x6002CE5")]
			[Address(RVA = "0xC246F0", Offset = "0xC246F0", VA = "0xC246F0")]
			public <>c__DisplayClass20_0()
			{
			}

			[Token(Token = "0x6002CE6")]
			[Address(RVA = "0xC246F8", Offset = "0xC246F8", VA = "0xC246F8")]
			internal void <PlayWorldMoveToWithCall>b__0()
			{
			}
		}

		[Token(Token = "0x20003AD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940040", Offset = "0x940040")]
		private sealed class <>c__DisplayClass21_0
		{
			[Token(Token = "0x4000F82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LuaFunction callBack;

			[Token(Token = "0x6002CE7")]
			[Address(RVA = "0xC24714", Offset = "0xC24714", VA = "0xC24714")]
			public <>c__DisplayClass21_0()
			{
			}

			[Token(Token = "0x6002CE8")]
			[Address(RVA = "0xC2471C", Offset = "0xC2471C", VA = "0xC2471C")]
			internal void <PlayBezierPath>b__0()
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x20003AE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940050", Offset = "0x940050")]
		private struct <>c__DisplayClass25_0
		{
			[Token(Token = "0x4000F83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float height;
		}

		[Token(Token = "0x20003AF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940060", Offset = "0x940060")]
		private sealed class <>c__DisplayClass27_0
		{
			[Token(Token = "0x4000F84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LuaFunction callBack;

			[Token(Token = "0x6002CE9")]
			[Address(RVA = "0xC24738", Offset = "0xC24738", VA = "0xC24738")]
			public <>c__DisplayClass27_0()
			{
			}

			[Token(Token = "0x6002CEA")]
			[Address(RVA = "0xC24740", Offset = "0xC24740", VA = "0xC24740")]
			internal void <DOLocalMoveXWithCurve>b__0()
			{
			}
		}

		[Token(Token = "0x20003B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940070", Offset = "0x940070")]
		private sealed class <>c__DisplayClass28_0
		{
			[Token(Token = "0x4000F85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LuaFunction callBack;

			[Token(Token = "0x6002CEB")]
			[Address(RVA = "0xC2475C", Offset = "0xC2475C", VA = "0xC2475C")]
			public <>c__DisplayClass28_0()
			{
			}

			[Token(Token = "0x6002CEC")]
			[Address(RVA = "0xC24764", Offset = "0xC24764", VA = "0xC24764")]
			internal void <DOLocalMoveYWithCurve>b__0()
			{
			}
		}

		[Token(Token = "0x20003B1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940080", Offset = "0x940080")]
		private sealed class <>c__DisplayClass29_0
		{
			[Token(Token = "0x4000F86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LuaFunction callBack;

			[Token(Token = "0x6002CED")]
			[Address(RVA = "0xC24780", Offset = "0xC24780", VA = "0xC24780")]
			public <>c__DisplayClass29_0()
			{
			}

			[Token(Token = "0x6002CEE")]
			[Address(RVA = "0xC24788", Offset = "0xC24788", VA = "0xC24788")]
			internal void <DoLoacalScaleWithCurve>b__0()
			{
			}
		}

		[Token(Token = "0x20003B2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940090", Offset = "0x940090")]
		private sealed class <>c__DisplayClass30_0
		{
			[Token(Token = "0x4000F87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LuaFunction callBack;

			[Token(Token = "0x6002CEF")]
			[Address(RVA = "0xC247A4", Offset = "0xC247A4", VA = "0xC247A4")]
			public <>c__DisplayClass30_0()
			{
			}

			[Token(Token = "0x6002CF0")]
			[Address(RVA = "0xC247AC", Offset = "0xC247AC", VA = "0xC247AC")]
			internal void <DoLoacalScaleVector3WithCurve>b__0()
			{
			}
		}

		[Token(Token = "0x20003B3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9400A0", Offset = "0x9400A0")]
		private sealed class <>c__DisplayClass31_0
		{
			[Token(Token = "0x4000F88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LuaFunction callBack;

			[Token(Token = "0x6002CF1")]
			[Address(RVA = "0xC247C8", Offset = "0xC247C8", VA = "0xC247C8")]
			public <>c__DisplayClass31_0()
			{
			}

			[Token(Token = "0x6002CF2")]
			[Address(RVA = "0xC247D0", Offset = "0xC247D0", VA = "0xC247D0")]
			internal void <DOMoveXWithCurve>b__0()
			{
			}
		}

		[Token(Token = "0x20003B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9400B0", Offset = "0x9400B0")]
		private sealed class <>c__DisplayClass32_0
		{
			[Token(Token = "0x4000F89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LuaFunction callBack;

			[Token(Token = "0x6002CF3")]
			[Address(RVA = "0xC247EC", Offset = "0xC247EC", VA = "0xC247EC")]
			public <>c__DisplayClass32_0()
			{
			}

			[Token(Token = "0x6002CF4")]
			[Address(RVA = "0xC247F4", Offset = "0xC247F4", VA = "0xC247F4")]
			internal void <DOMoveYWithCurve>b__0()
			{
			}
		}

		[Token(Token = "0x20003B5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9400C0", Offset = "0x9400C0")]
		private sealed class <>c__DisplayClass33_0
		{
			[Token(Token = "0x4000F8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LuaFunction callBack;

			[Token(Token = "0x6002CF5")]
			[Address(RVA = "0xC24810", Offset = "0xC24810", VA = "0xC24810")]
			public <>c__DisplayClass33_0()
			{
			}

			[Token(Token = "0x6002CF6")]
			[Address(RVA = "0xC24818", Offset = "0xC24818", VA = "0xC24818")]
			internal void <DOMoveZWithCurve>b__0()
			{
			}
		}

		[Token(Token = "0x20003B6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9400D0", Offset = "0x9400D0")]
		private sealed class <>c__DisplayClass34_0
		{
			[Token(Token = "0x4000F8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LuaFunction callBack;

			[Token(Token = "0x6002CF7")]
			[Address(RVA = "0xC24834", Offset = "0xC24834", VA = "0xC24834")]
			public <>c__DisplayClass34_0()
			{
			}

			[Token(Token = "0x6002CF8")]
			[Address(RVA = "0xC2483C", Offset = "0xC2483C", VA = "0xC2483C")]
			internal void <DOLocalRotateVector3WithCurve>b__0()
			{
			}
		}

		[Token(Token = "0x20003B7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9400E0", Offset = "0x9400E0")]
		private sealed class <>c__DisplayClass37_0
		{
			[Token(Token = "0x4000F8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LuaFunction callBack;

			[Token(Token = "0x6002CF9")]
			[Address(RVA = "0xC24858", Offset = "0xC24858", VA = "0xC24858")]
			public <>c__DisplayClass37_0()
			{
			}

			[Token(Token = "0x6002CFA")]
			[Address(RVA = "0xC24860", Offset = "0xC24860", VA = "0xC24860")]
			internal void <PlayXxlTargetCollectTween>b__0()
			{
			}
		}

		[Token(Token = "0x60019F8")]
		[Address(RVA = "0xCAE654", Offset = "0xCAE654", VA = "0xCAE654")]
		public static MyTeener PlayMove(GameObject go, Vector3[] pos, float duration)
		{
			return null;
		}

		[Token(Token = "0x60019F9")]
		[Address(RVA = "0xCAE71C", Offset = "0xCAE71C", VA = "0xCAE71C")]
		public static MyTeener PlayAlpha(GameObject go, Color endValue, string shaderColor, float duration)
		{
			return null;
		}

		[Token(Token = "0x60019FA")]
		[Address(RVA = "0xCAE808", Offset = "0xCAE808", VA = "0xCAE808")]
		public static MyTeener PlayLocalRotateLoop(GameObject go, Vector3 endValue, float duration, int loop)
		{
			return null;
		}

		[Token(Token = "0x60019FB")]
		[Address(RVA = "0xCAE904", Offset = "0xCAE904", VA = "0xCAE904")]
		public static MyTeener PlayMoveTo(GameObject go, Vector3 pos, float duration)
		{
			return null;
		}

		[Token(Token = "0x60019FC")]
		[Address(RVA = "0xCAE9C0", Offset = "0xCAE9C0", VA = "0xCAE9C0")]
		public static MyTeener PlayColor(Graphic gra, Vector3 endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60019FD")]
		[Address(RVA = "0xCAEB74", Offset = "0xCAEB74", VA = "0xCAEB74")]
		public static MyTeener PlayScale(GameObject go, Vector3 endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60019FE")]
		[Address(RVA = "0xCAECE8", Offset = "0xCAECE8", VA = "0xCAECE8")]
		public static MyTeener PlayRoate(GameObject go, Vector3 endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60019FF")]
		[Address(RVA = "0xCAEE5C", Offset = "0xCAEE5C", VA = "0xCAEE5C")]
		public static MyTeener PlayLocalRotate(GameObject go, Vector3 endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001A00")]
		[Address(RVA = "0xCAEF18", Offset = "0xCAEF18", VA = "0xCAEF18")]
		public static MyTeener PlayWorldMoveTo(GameObject go, Vector3 pos, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001A01")]
		[Address(RVA = "0xCAEFD4", Offset = "0xCAEFD4", VA = "0xCAEFD4")]
		public static void DOBlendableLocalMoveBy(GameObject go, Vector3 endValue, float duration)
		{
		}

		[Token(Token = "0x6001A02")]
		[Address(RVA = "0xCAF02C", Offset = "0xCAF02C", VA = "0xCAF02C")]
		public static void PlayScaleWithCall(GameObject go, Vector3 endValue, float duration, LuaFunction callBack)
		{
		}

		[Token(Token = "0x6001A03")]
		[Address(RVA = "0xCAF1F0", Offset = "0xCAF1F0", VA = "0xCAF1F0")]
		public static MyTeener TweenValue(Text text, int endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001A04")]
		[Address(RVA = "0xCAF33C", Offset = "0xCAF33C", VA = "0xCAF33C")]
		public static Tweener TweenValueWithFormat(Text text, int startValue, int endValue, string fmt, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001A05")]
		[Address(RVA = "0xCAF46C", Offset = "0xCAF46C", VA = "0xCAF46C")]
		public static MyTeener TweenTimeValue(Text text, int startValue, int endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001A06")]
		[Address(RVA = "0xCAF67C", Offset = "0xCAF67C", VA = "0xCAF67C")]
		public static void TweenText(Text text, string str, float zoomScale, float scaleTime)
		{
		}

		[Token(Token = "0x6001A07")]
		[Address(RVA = "0xCAF968", Offset = "0xCAF968", VA = "0xCAF968")]
		public static void TweenTextFont(Text text, string str, int targetFontSize, float scaleTime)
		{
		}

		[Token(Token = "0x6001A08")]
		[Address(RVA = "0xCAFBBC", Offset = "0xCAFBBC", VA = "0xCAFBBC")]
		public static Sequence TweenSlider(Slider slider, float targetValue, float totalTime)
		{
			return null;
		}

		[Token(Token = "0x6001A09")]
		[Address(RVA = "0xCAFD00", Offset = "0xCAFD00", VA = "0xCAFD00")]
		public static void TweenChildScale(GameObject go, int childIndex, float scale, float duration)
		{
		}

		[Token(Token = "0x6001A0A")]
		[Address(RVA = "0xCAFF6C", Offset = "0xCAFF6C", VA = "0xCAFF6C")]
		public static void TweenCanvasAlpha(GameObject go, float fromApha, float toAlpha, float duration)
		{
		}

		[Token(Token = "0x6001A0B")]
		[Address(RVA = "0xCAFF84", Offset = "0xCAFF84", VA = "0xCAFF84")]
		public static MyTeener PlayMoveToWithCall(GameObject go, Vector3 newPos, float duration, LuaFunction callBack)
		{
			return null;
		}

		[Token(Token = "0x6001A0C")]
		[Address(RVA = "0xCB00DC", Offset = "0xCB00DC", VA = "0xCB00DC")]
		public static MyTeener PlayWorldMoveToWithCall(GameObject go, Vector3 newPos, float duration, LuaFunction callBack)
		{
			return null;
		}

		[Token(Token = "0x6001A0D")]
		[Address(RVA = "0xCB0234", Offset = "0xCB0234", VA = "0xCB0234")]
		public static void PlayBezierPath(GameObject go, Vector3 endPos, Vector3 centerPos, float duration, LuaFunction callBack)
		{
		}

		[Token(Token = "0x6001A0E")]
		[Address(RVA = "0xCB03A4", Offset = "0xCB03A4", VA = "0xCB03A4")]
		private static Vector3[] Bezier2Path(Vector3 startPos, Vector3 controlPos, Vector3 endPos)
		{
			return null;
		}

		[Token(Token = "0x6001A0F")]
		[Address(RVA = "0xCB04C0", Offset = "0xCB04C0", VA = "0xCB04C0")]
		private static Vector3 Bezier2(Vector3 startPos, Vector3 controlPos, Vector3 endPos, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A10")]
		[Address(RVA = "0xCB061C", Offset = "0xCB061C", VA = "0xCB061C")]
		private static Vector3 Bezier3(Vector3 startPos, Vector3 controlPos1, Vector3 controlPos2, Vector3 endPos, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A11")]
		[Address(RVA = "0xCB07E4", Offset = "0xCB07E4", VA = "0xCB07E4")]
		public static Vector3 Parabola(Vector3 start, Vector3 end, float height, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A12")]
		[Address(RVA = "0xCB0940", Offset = "0xCB0940", VA = "0xCB0940")]
		public static AnimationCurve GetCurveFromLuaTable(LuaTable table)
		{
			return null;
		}

		[Token(Token = "0x6001A13")]
		[Address(RVA = "0xCB0B20", Offset = "0xCB0B20", VA = "0xCB0B20")]
		public static MyTeener DOLocalMoveXWithCurve(GameObject go, float posX, float duration, AnimationCurve curve, LuaFunction callBack)
		{
			return null;
		}

		[Token(Token = "0x6001A14")]
		[Address(RVA = "0xCB0C64", Offset = "0xCB0C64", VA = "0xCB0C64")]
		public static MyTeener DOLocalMoveYWithCurve(GameObject go, float posY, float duration, AnimationCurve curve, LuaFunction callBack)
		{
			return null;
		}

		[Token(Token = "0x6001A15")]
		[Address(RVA = "0xCB0DA8", Offset = "0xCB0DA8", VA = "0xCB0DA8")]
		public static MyTeener DoLoacalScaleWithCurve(GameObject go, float endValue, float duration, AnimationCurve curve, LuaFunction callBack)
		{
			return null;
		}

		[Token(Token = "0x6001A16")]
		[Address(RVA = "0xCB0EE8", Offset = "0xCB0EE8", VA = "0xCB0EE8")]
		public static MyTeener DoLoacalScaleVector3WithCurve(GameObject go, Vector3 endVector, float duration, AnimationCurve curve, LuaFunction callBack)
		{
			return null;
		}

		[Token(Token = "0x6001A17")]
		[Address(RVA = "0xCB1040", Offset = "0xCB1040", VA = "0xCB1040")]
		public static MyTeener DOMoveXWithCurve(GameObject go, float posX, float duration, AnimationCurve curve, LuaFunction callBack)
		{
			return null;
		}

		[Token(Token = "0x6001A18")]
		[Address(RVA = "0xCB1184", Offset = "0xCB1184", VA = "0xCB1184")]
		public static MyTeener DOMoveYWithCurve(GameObject go, float posY, float duration, AnimationCurve curve, LuaFunction callBack)
		{
			return null;
		}

		[Token(Token = "0x6001A19")]
		[Address(RVA = "0xCB12C8", Offset = "0xCB12C8", VA = "0xCB12C8")]
		public static MyTeener DOMoveZWithCurve(GameObject go, float posZ, float duration, AnimationCurve curve, LuaFunction callBack)
		{
			return null;
		}

		[Token(Token = "0x6001A1A")]
		[Address(RVA = "0xCB140C", Offset = "0xCB140C", VA = "0xCB140C")]
		public static MyTeener DOLocalRotateVector3WithCurve(GameObject go, Vector3 endVector, float duration, AnimationCurve curve, LuaFunction callBack)
		{
			return null;
		}

		[Token(Token = "0x6001A1B")]
		[Address(RVA = "0xCB1568", Offset = "0xCB1568", VA = "0xCB1568")]
		public static void KillMyTween(MyTeener tweener)
		{
		}

		[Token(Token = "0x6001A1C")]
		[Address(RVA = "0xCB1588", Offset = "0xCB1588", VA = "0xCB1588")]
		public static void ChangeMyTweenTimeScale(MyTeener tweener, float scaleValue)
		{
		}

		[Token(Token = "0x6001A1D")]
		[Address(RVA = "0xCB15AC", Offset = "0xCB15AC", VA = "0xCB15AC")]
		public static void PlayXxlTargetCollectTween(GameObject go, Vector3 endPos, float duration, AnimationCurve curve, LuaTable VectorTable, LuaFunction callBack)
		{
		}

		[Token(Token = "0x6001A1E")]
		[Address(RVA = "0xCB190C", Offset = "0xCB190C", VA = "0xCB190C")]
		public TweenUtil()
		{
		}

		[Token(Token = "0x6001A1F")]
		[Address(RVA = "0xCB0924", Offset = "0xCB0924", VA = "0xCB0924")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A6E58", Offset = "0x9A6E58")]
		internal static float <Parabola>g__Func|25_0(float x, ref <>c__DisplayClass25_0 P_1)
		{
			return default(float);
		}
	}
	[Token(Token = "0x20001BA")]
	public class UGUIFullScreen : MonoBehaviour
	{
		[Token(Token = "0x40007EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector2 ZeroAndZero;

		[Token(Token = "0x40007EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Vector2 ZeroAndOne;

		[Token(Token = "0x40007EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Vector2 OneAndZero;

		[Token(Token = "0x40007ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Vector2 OneAndOne;

		[Token(Token = "0x40007EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool IsFullScreen;

		[Token(Token = "0x40007EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static float Width;

		[Token(Token = "0x40007F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RectTransform mRect;

		[Token(Token = "0x6001A20")]
		[Address(RVA = "0xC251F0", Offset = "0xC251F0", VA = "0xC251F0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A21")]
		[Address(RVA = "0xC25258", Offset = "0xC25258", VA = "0xC25258")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001A22")]
		[Address(RVA = "0xC25724", Offset = "0xC25724", VA = "0xC25724")]
		public UGUIFullScreen()
		{
		}
	}
	[Token(Token = "0x20001BB")]
	public class UnityRenderSettings : SingletonMonoBehaviour<UnityRenderSettings>
	{
		[Token(Token = "0x40007F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AmbientMode Model;

		[Token(Token = "0x40007F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Color ambientSkyColor;

		[Token(Token = "0x40007F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Color ambientEquatorColor;

		[Token(Token = "0x40007F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Color ambientGroundColor;

		[Token(Token = "0x6001A24")]
		[Address(RVA = "0xC26710", Offset = "0xC26710", VA = "0xC26710")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001A25")]
		[Address(RVA = "0xC26764", Offset = "0xC26764", VA = "0xC26764")]
		public void Set()
		{
		}

		[Token(Token = "0x6001A26")]
		[Address(RVA = "0xC267C0", Offset = "0xC267C0", VA = "0xC267C0")]
		private void SetData()
		{
		}

		[Token(Token = "0x6001A27")]
		[Address(RVA = "0xC26814", Offset = "0xC26814", VA = "0xC26814")]
		public UnityRenderSettings()
		{
		}
	}
	[Token(Token = "0x20001BC")]
	public abstract class Controller : Logic, IController__HAIBAO__SWORD__
	{
		[Token(Token = "0x6001A28")]
		[Address(RVA = "0xC10F60", Offset = "0xC10F60", VA = "0xC10F60", Slot = "7")]
		public void RegisterCommand(int key, NotifyHandler hanlder)
		{
		}

		[Token(Token = "0x6001A29")]
		[Address(RVA = "0xC11004", Offset = "0xC11004", VA = "0xC11004", Slot = "8")]
		public void UnRegisterCommand(int key, NotifyHandler hanlder)
		{
		}

		[Token(Token = "0x6001A2A")]
		public void RegisterCommand<T>(int key, NotifyHandler<T> handler)
		{
		}

		[Token(Token = "0x6001A2B")]
		public void UnRegisterCommand<T>(int key, NotifyHandler<T> handler)
		{
		}

		[Token(Token = "0x6001A2C")]
		[Address(RVA = "0xC11040", Offset = "0xC11040", VA = "0xC11040")]
		public void RegisterView(int key, NotifyHandler hanlder)
		{
		}

		[Token(Token = "0x6001A2D")]
		[Address(RVA = "0xC1107C", Offset = "0xC1107C", VA = "0xC1107C")]
		public void UnRegisterView(int key, NotifyHandler hanlder)
		{
		}

		[Token(Token = "0x6001A2E")]
		public void RegisterView<T>(int key, NotifyHandler<T> handler)
		{
		}

		[Token(Token = "0x6001A2F")]
		public void UnRegisterView<T>(int key, NotifyHandler<T> handler)
		{
		}

		[Token(Token = "0x6001A30")]
		[Address(RVA = "0xC110B8", Offset = "0xC110B8", VA = "0xC110B8", Slot = "9")]
		public void View(int key)
		{
		}

		[Token(Token = "0x6001A31")]
		public void View<T>(int key, T parems)
		{
		}

		[Token(Token = "0x6001A32")]
		[Address(RVA = "0xC110E8", Offset = "0xC110E8", VA = "0xC110E8")]
		public void Command(int key)
		{
		}

		[Token(Token = "0x6001A33")]
		public void Command<T>(int key, T parems)
		{
		}

		[Token(Token = "0x6001A34")]
		public abstract void Init();

		[Token(Token = "0x6001A35")]
		[Address(RVA = "0xC11118", Offset = "0xC11118", VA = "0xC11118")]
		protected Controller()
		{
		}
	}
	[Token(Token = "0x20001BD")]
	public class Logic
	{
		[Token(Token = "0x6001A36")]
		[Address(RVA = "0xCA4E44", Offset = "0xCA4E44", VA = "0xCA4E44", Slot = "4")]
		public void RunAction(int key)
		{
		}

		[Token(Token = "0x6001A37")]
		public void RunAction<T>(int key, T data)
		{
		}

		[Token(Token = "0x6001A38")]
		[Address(RVA = "0xCA4E7C", Offset = "0xCA4E7C", VA = "0xCA4E7C")]
		public Logic()
		{
		}
	}
	[Token(Token = "0x20001BE")]
	public abstract class LogicController<T> : Controller where T : new()
	{
		[Token(Token = "0x40007F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly object _lock;

		[Token(Token = "0x40007F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static T _instance;

		[Token(Token = "0x170000BC")]
		public static T Instance
		{
			[Token(Token = "0x6001A39")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x6001A3A")]
		public abstract void Clear();

		[Token(Token = "0x6001A3B")]
		protected LogicController()
		{
		}
	}
	[Token(Token = "0x20001BF")]
	public abstract class UIController__HAIBAO__SWORD__ : Controller
	{
		[Token(Token = "0x40007F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected IMediator__HAIBAO__SWORD__ mView;

		[Token(Token = "0x6001A3D")]
		[Address(RVA = "0xC2582C", Offset = "0xC2582C", VA = "0xC2582C")]
		public void SetMediator(IMediator__HAIBAO__SWORD__ view)
		{
		}

		[Token(Token = "0x6001A3E")]
		[Address(RVA = "0xC25834", Offset = "0xC25834", VA = "0xC25834", Slot = "14")]
		public virtual void OnEnter(params object[] param)
		{
		}

		[Token(Token = "0x6001A3F")]
		[Address(RVA = "0xC25A28", Offset = "0xC25A28", VA = "0xC25A28", Slot = "15")]
		public virtual void OnExit(params object[] param)
		{
		}

		[Token(Token = "0x6001A40")]
		[Address(RVA = "0xC25AEC", Offset = "0xC25AEC", VA = "0xC25AEC")]
		protected UIController__HAIBAO__SWORD__()
		{
		}
	}
	[Token(Token = "0x20001C0")]
	public class Facade__HAIBAO__SWORD__
	{
		[Token(Token = "0x40007F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static LuaFunction NetFunction;

		[Token(Token = "0x6001A41")]
		[Address(RVA = "0xC1217C", Offset = "0xC1217C", VA = "0xC1217C")]
		public static void Command(int key)
		{
		}

		[Token(Token = "0x6001A42")]
		public static void View<T>(int key, T data)
		{
		}

		[Token(Token = "0x6001A43")]
		[Address(RVA = "0xC121B4", Offset = "0xC121B4", VA = "0xC121B4")]
		public static void AddLuaListener(int index, int key, LuaFunction fun)
		{
		}

		[Token(Token = "0x6001A44")]
		[Address(RVA = "0xC121E8", Offset = "0xC121E8", VA = "0xC121E8")]
		public static void RemoveLuaListener(int index, int key, LuaFunction fun)
		{
		}

		[Token(Token = "0x6001A45")]
		[Address(RVA = "0xC1221C", Offset = "0xC1221C", VA = "0xC1221C")]
		public static void Dispatch(int index, int key, params object[] datas)
		{
		}

		[Token(Token = "0x6001A46")]
		[Address(RVA = "0xC12364", Offset = "0xC12364", VA = "0xC12364")]
		public static void SetNetFunction(LuaFunction fun)
		{
		}

		[Token(Token = "0x6001A47")]
		[Address(RVA = "0xC0D4C8", Offset = "0xC0D4C8", VA = "0xC0D4C8")]
		public static void DispatchNet(object data)
		{
		}

		[Token(Token = "0x6001A48")]
		[Address(RVA = "0xC10F9C", Offset = "0xC10F9C", VA = "0xC10F9C")]
		[NoToLua]
		public static CompNotifyLuaAndCS__HAIBAO__SWORD__ GetNotifyByIndex(int index)
		{
			return null;
		}

		[Token(Token = "0x6001A49")]
		[Address(RVA = "0xC123B8", Offset = "0xC123B8", VA = "0xC123B8")]
		public static void DispatchLuaView(int key)
		{
		}

		[Token(Token = "0x6001A4A")]
		[Address(RVA = "0xC12470", Offset = "0xC12470", VA = "0xC12470")]
		public static void DispatchLuaView(int key, object o)
		{
		}

		[Token(Token = "0x6001A4B")]
		[Address(RVA = "0xC12530", Offset = "0xC12530", VA = "0xC12530")]
		public static void DispatchLuaCtrl(int key, object o)
		{
		}

		[Token(Token = "0x6001A4C")]
		[Address(RVA = "0xC125F0", Offset = "0xC125F0", VA = "0xC125F0")]
		public static void DispatchLuaCtrl(int key, object o, object o1)
		{
		}

		[Token(Token = "0x6001A4D")]
		[Address(RVA = "0xC126C0", Offset = "0xC126C0", VA = "0xC126C0")]
		public Facade__HAIBAO__SWORD__()
		{
		}
	}
	[Token(Token = "0x20001C1")]
	internal interface IController__HAIBAO__SWORD__
	{
		[Token(Token = "0x6001A4E")]
		void Init();

		[Token(Token = "0x6001A4F")]
		void RegisterCommand(int key, NotifyHandler hanlder);

		[Token(Token = "0x6001A50")]
		void UnRegisterCommand(int key, NotifyHandler hanlder);

		[Token(Token = "0x6001A51")]
		void View(int key);

		[Token(Token = "0x6001A52")]
		void View<T>(int key, T parems);

		[Token(Token = "0x6001A53")]
		void RunAction(int key);

		[Token(Token = "0x6001A54")]
		void RunAction<T>(int key, T parems);
	}
	[Token(Token = "0x20001C2")]
	internal interface IFacade__HAIBAO__SWORD__
	{
		[Token(Token = "0x6001A55")]
		void OpenModule();

		[Token(Token = "0x6001A56")]
		void CloseModule();
	}
	[Token(Token = "0x20001C3")]
	public interface IMediator__HAIBAO__SWORD__
	{
		[Token(Token = "0x6001A57")]
		void Open(params object[] param);

		[Token(Token = "0x6001A58")]
		void Close(params object[] param);

		[Token(Token = "0x6001A59")]
		void OnEnter(params object[] param);

		[Token(Token = "0x6001A5A")]
		void OnExit(params object[] param);

		[Token(Token = "0x6001A5B")]
		void OnReOpen(params object[] param);

		[Token(Token = "0x6001A5C")]
		void Clear();

		[Token(Token = "0x6001A5D")]
		void View(int key);

		[Token(Token = "0x6001A5E")]
		void View<T>(int key, T parems);

		[Token(Token = "0x6001A5F")]
		void RunAction(int key);

		[Token(Token = "0x6001A60")]
		void RunAction<T>(int key, T parems);

		[Token(Token = "0x6001A61")]
		bool IsOpen();

		[Token(Token = "0x6001A62")]
		void SetMediatorState(eMediatorState state);

		[Token(Token = "0x6001A63")]
		void SetIsNotify(bool isNotify);
	}
	[Token(Token = "0x20001C4")]
	public interface IModel__HAIBAO__SWORD__
	{
		[Token(Token = "0x6001A64")]
		void Clear();
	}
	[Token(Token = "0x20001C5")]
	public interface IProxy__HAIBAO__SWORD__
	{
		[Token(Token = "0x6001A65")]
		void Clear();
	}
	[Token(Token = "0x20001C6")]
	public interface IServices__HAIBAO__SWORD__
	{
		[Token(Token = "0x6001A66")]
		void Init();

		[Token(Token = "0x6001A67")]
		void RegisterEvent(int key, NotifyHandler handler);

		[Token(Token = "0x6001A68")]
		void UnRegisterEvent(int key, NotifyHandler handler);

		[Token(Token = "0x6001A69")]
		void RunAction(int key);

		[Token(Token = "0x6001A6A")]
		void RunAction<T>(int key, T data);
	}
	[Token(Token = "0x20001C7")]
	public abstract class Mediator__HAIBAO__SWORD__ : IMediator__HAIBAO__SWORD__
	{
		[Token(Token = "0x40007F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private eMediatorState mMediatorState;

		[Token(Token = "0x6001A6B")]
		[Address(RVA = "0xCA698C", Offset = "0xCA698C", VA = "0xCA698C", Slot = "10")]
		public void View(int key)
		{
		}

		[Token(Token = "0x6001A6C")]
		public void View<T>(int key, T data)
		{
		}

		[Token(Token = "0x6001A6D")]
		[Address(RVA = "0xCA69C4", Offset = "0xCA69C4", VA = "0xCA69C4", Slot = "12")]
		public void RunAction(int key)
		{
		}

		[Token(Token = "0x6001A6E")]
		public void RunAction<T>(int key, T data)
		{
		}

		[Token(Token = "0x6001A6F")]
		public abstract void OnEnter(params object[] param);

		[Token(Token = "0x6001A70")]
		public abstract void OnExit(params object[] param);

		[Token(Token = "0x6001A71")]
		public abstract void SetIsNotify(bool isNotify);

		[Token(Token = "0x6001A72")]
		public abstract void Open(params object[] param);

		[Token(Token = "0x6001A73")]
		public abstract void Close(params object[] param);

		[Token(Token = "0x6001A74")]
		public abstract void Clear();

		[Token(Token = "0x6001A75")]
		[Address(RVA = "0xCA69FC", Offset = "0xCA69FC", VA = "0xCA69FC", Slot = "23")]
		public virtual void OnReOpen(params object[] param)
		{
		}

		[Token(Token = "0x6001A76")]
		[Address(RVA = "0xCA6A00", Offset = "0xCA6A00", VA = "0xCA6A00", Slot = "14")]
		public bool IsOpen()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A77")]
		[Address(RVA = "0xCA6A10", Offset = "0xCA6A10", VA = "0xCA6A10", Slot = "15")]
		public void SetMediatorState(eMediatorState state)
		{
		}

		[Token(Token = "0x6001A78")]
		public abstract void AddDependRes(string path);

		[Token(Token = "0x6001A79")]
		public abstract bool IsFinishInit();

		[Token(Token = "0x6001A7A")]
		[Address(RVA = "0xCA6A2C", Offset = "0xCA6A2C", VA = "0xCA6A2C")]
		protected Mediator__HAIBAO__SWORD__()
		{
		}
	}
	[Token(Token = "0x20001C8")]
	public class ProxyData__HAIBAO__SWORD__
	{
		[Token(Token = "0x40007FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Dictionary<string, IProxy__HAIBAO__SWORD__> mDictionary;

		[Token(Token = "0x6001A7B")]
		[Address(RVA = "0xCA999C", Offset = "0xCA999C", VA = "0xCA999C")]
		public ProxyData__HAIBAO__SWORD__()
		{
		}
	}
	[Token(Token = "0x20001C9")]
	public abstract class Proxy<T> : IProxy__HAIBAO__SWORD__ where T : IProxy__HAIBAO__SWORD__, new()
	{
		[Token(Token = "0x40007FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly object _lock;

		[Token(Token = "0x40007FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static T _instance;

		[Token(Token = "0x170000BD")]
		public static T Instance
		{
			[Token(Token = "0x6001A7D")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x6001A7E")]
		public abstract void Clear();

		[Token(Token = "0x6001A7F")]
		protected Proxy()
		{
		}
	}
	[Token(Token = "0x20001CA")]
	public class AudioItem__HAIBAO__SWORD__ : IPoolableObject
	{
		[Token(Token = "0x40007FD")]
		public const string PoolName = "AudioItem";

		[Token(Token = "0x40007FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Id;

		[Token(Token = "0x40007FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int ConfigId;

		[Token(Token = "0x4000800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Resource Res;

		[Token(Token = "0x4000801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip Clip;

		[Token(Token = "0x4000802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioSource Source;

		[Token(Token = "0x4000803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string Path;

		[Token(Token = "0x4000804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool IsBg;

		[Token(Token = "0x4000805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float bgVolume;

		[Token(Token = "0x4000806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float TimeStart;

		[Token(Token = "0x4000807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float Duration;

		[Token(Token = "0x4000808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float cycleDelay;

		[Token(Token = "0x4000809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public EAudioType__HAIBAO__SWORD__ type;

		[Token(Token = "0x400080A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public IAudioPlayCallBack__HAIBAO__SWORD__ Callback;

		[Token(Token = "0x6001A81")]
		[Address(RVA = "0xD380A8", Offset = "0xD380A8", VA = "0xD380A8", Slot = "4")]
		public void InitPoolable(object data)
		{
		}

		[Token(Token = "0x6001A82")]
		[Address(RVA = "0xD380AC", Offset = "0xD380AC", VA = "0xD380AC", Slot = "5")]
		public void ResetPoolable(object data)
		{
		}

		[Token(Token = "0x6001A83")]
		[Address(RVA = "0xD380B0", Offset = "0xD380B0", VA = "0xD380B0", Slot = "6")]
		public void Remove()
		{
		}

		[Token(Token = "0x6001A84")]
		[Address(RVA = "0xD3811C", Offset = "0xD3811C", VA = "0xD3811C", Slot = "7")]
		public void Delete()
		{
		}

		[Token(Token = "0x6001A85")]
		[Address(RVA = "0xD38120", Offset = "0xD38120", VA = "0xD38120", Slot = "8")]
		public string GetPoolType()
		{
			return null;
		}

		[Token(Token = "0x6001A86")]
		[Address(RVA = "0xD38168", Offset = "0xD38168", VA = "0xD38168")]
		public AudioItem__HAIBAO__SWORD__()
		{
		}
	}
	[Token(Token = "0x20001CB")]
	public class AudioMgr : SingletonMonoBehaviour<AudioMgr>
	{
		[Token(Token = "0x20003B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9400F0", Offset = "0x9400F0")]
		private sealed class <>c__DisplayClass40_0
		{
			[Token(Token = "0x4000F8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AudioMgr <>4__this;

			[Token(Token = "0x4000F8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool isCheckClose;

			[Token(Token = "0x4000F8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string path;

			[Token(Token = "0x4000F90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int autoID;

			[Token(Token = "0x4000F91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float bgVol;

			[Token(Token = "0x4000F92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool isloop;

			[Token(Token = "0x4000F93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float paramValue;

			[Token(Token = "0x4000F94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public EAudioType__HAIBAO__SWORD__ type;

			[Token(Token = "0x6002CFB")]
			[Address(RVA = "0xD38E1C", Offset = "0xD38E1C", VA = "0xD38E1C")]
			public <>c__DisplayClass40_0()
			{
			}

			[Token(Token = "0x6002CFC")]
			[Address(RVA = "0xD39DD8", Offset = "0xD39DD8", VA = "0xD39DD8")]
			internal void <PlaySound>b__0(Resource res, object data)
			{
			}
		}

		[Token(Token = "0x20003B9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940100", Offset = "0x940100")]
		private sealed class <>c__DisplayClass42_0
		{
			[Token(Token = "0x4000F95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AudioMgr <>4__this;

			[Token(Token = "0x4000F96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string path;

			[Token(Token = "0x4000F97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int configId;

			[Token(Token = "0x4000F98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float bgVolume;

			[Token(Token = "0x6002CFD")]
			[Address(RVA = "0xD38FCC", Offset = "0xD38FCC", VA = "0xD38FCC")]
			public <>c__DisplayClass42_0()
			{
			}

			[Token(Token = "0x6002CFE")]
			[Address(RVA = "0xD3A124", Offset = "0xD3A124", VA = "0xD3A124")]
			internal void <PlayBg>b__0(Resource res, object data)
			{
			}
		}

		[Token(Token = "0x400080B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int mAutoId;

		[Token(Token = "0x400080C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Dictionary<int, AudioItem__HAIBAO__SWORD__> mSounds;

		[Token(Token = "0x400080D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Dictionary<int, IAudioPlayCallBack__HAIBAO__SWORD__> _dicCallback;

		[Token(Token = "0x400080E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<AudioItem__HAIBAO__SWORD__> deletelist;

		[Token(Token = "0x400080F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int mCurrentBgId;

		[Token(Token = "0x4000810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int mSecondBgAutoId;

		[Token(Token = "0x4000811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AudioItem__HAIBAO__SWORD__ Bg;

		[Token(Token = "0x4000812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float BgFadeOutStartTime;

		[Token(Token = "0x4000813")]
		private const float BG_FADE_DURATION = 2f;

		[Token(Token = "0x4000814")]
		private const float PLAY_TIME_OFFSET = 1f;

		[Token(Token = "0x4000815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float FadeInSeconds;

		[Token(Token = "0x4000816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float FadeInSecondsTemp;

		[Token(Token = "0x4000817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private string mCurrentBgName;

		[Token(Token = "0x4000818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float mCurrentBgVolume;

		[Token(Token = "0x4000819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Dictionary<string, bool> mLoadingDic;

		[Token(Token = "0x400081A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Dictionary<int, bool> _dicDestroyID;

		[Token(Token = "0x400081B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Dictionary<int, bool> _dicFadeID;

		[Token(Token = "0x400081C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Dictionary<string, bool> isClosedId;

		[Token(Token = "0x400081D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private List<AudioItem__HAIBAO__SWORD__> _listFadeOut;

		[Token(Token = "0x400081E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private string mCurBgPath;

		[Token(Token = "0x400081F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public bool IsCloseBg;

		[Token(Token = "0x4000820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
		public bool IsCloseSound;

		[Token(Token = "0x4000821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private float BgVolume;

		[Token(Token = "0x4000822")]
		private const float _audioFadeOutValuePerFrame = 1f / 90f;

		[Token(Token = "0x4000823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private TimeHandler mHandleAudioCallback;

		[Token(Token = "0x4000824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private TimeHandler mHandleAudioCycleCallback;

		[Token(Token = "0x170000BE")]
		private int AutoId
		{
			[Token(Token = "0x6001A87")]
			[Address(RVA = "0xD381E8", Offset = "0xD381E8", VA = "0xD381E8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001A88")]
		[Address(RVA = "0xD381FC", Offset = "0xD381FC", VA = "0xD381FC", Slot = "5")]
		protected override void InitMono()
		{
		}

		[Token(Token = "0x6001A89")]
		[Address(RVA = "0xD38308", Offset = "0xD38308", VA = "0xD38308")]
		private void OnFrameLogic(object obj)
		{
		}

		[Token(Token = "0x6001A8A")]
		[Address(RVA = "0xD386A4", Offset = "0xD386A4", VA = "0xD386A4")]
		[ExportToLuaAttrbute]
		public int playSecondBg(string name, int type, float bgVolume, float paramValue)
		{
			return default(int);
		}

		[Token(Token = "0x6001A8B")]
		[Address(RVA = "0xD3846C", Offset = "0xD3846C", VA = "0xD3846C")]
		[ExportToLuaAttrbute]
		public void BgFadeRecoverLogic()
		{
		}

		[Token(Token = "0x6001A8C")]
		[Address(RVA = "0xD38754", Offset = "0xD38754", VA = "0xD38754")]
		[ExportToLuaAttrbute]
		public void SetFadeInSeconds(float Fadeseconds)
		{
		}

		[Token(Token = "0x6001A8D")]
		[Address(RVA = "0xD3875C", Offset = "0xD3875C", VA = "0xD3875C")]
		private string GetPath(string name)
		{
			return null;
		}

		[Token(Token = "0x6001A8E")]
		[Address(RVA = "0xD387B0", Offset = "0xD387B0", VA = "0xD387B0")]
		[ExportToLuaAttrbute]
		public int PlayAudio(string name, int type, float bgVolume, float paramValue)
		{
			return default(int);
		}

		[Token(Token = "0x6001A8F")]
		[Address(RVA = "0xD386F4", Offset = "0xD386F4", VA = "0xD386F4")]
		private int _playAudio(string name, int type, float bgVolume, float paramValue, bool isCheck, bool isloop)
		{
			return default(int);
		}

		[Token(Token = "0x6001A90")]
		[Address(RVA = "0xD38A24", Offset = "0xD38A24", VA = "0xD38A24")]
		[ExportToLuaAttrbute]
		public int PlayAudioWithCallback(string name, int type, float bgVolume, float paramValue, LuaFunction callback, bool isCheck)
		{
			return default(int);
		}

		[Token(Token = "0x6001A91")]
		[Address(RVA = "0xD38BA0", Offset = "0xD38BA0", VA = "0xD38BA0")]
		public int PlayAudioWithCallback(string name, int type, float bgVolume, float paramValue, Action<object> callback, bool isCheck)
		{
			return default(int);
		}

		[Token(Token = "0x6001A92")]
		[Address(RVA = "0xD38AD0", Offset = "0xD38AD0", VA = "0xD38AD0")]
		private int PlayAudioWithInterface(string name, int type, float bgVolume, float paramValue, IAudioPlayCallBack__HAIBAO__SWORD__ callback, bool isCheck)
		{
			return default(int);
		}

		[Token(Token = "0x6001A93")]
		[Address(RVA = "0xD38C4C", Offset = "0xD38C4C", VA = "0xD38C4C")]
		[ExportToLuaAttrbute]
		public void PlayBgById(int id, string name, float bgVolume)
		{
		}

		[Token(Token = "0x6001A94")]
		[Address(RVA = "0xD38800", Offset = "0xD38800", VA = "0xD38800")]
		[NoToLua]
		public int PlaySound(string path, EAudioType__HAIBAO__SWORD__ type, float bgVol, float paramValue, bool isCheckClose, bool isloop)
		{
			return default(int);
		}

		[Token(Token = "0x6001A95")]
		[Address(RVA = "0xD38E24", Offset = "0xD38E24", VA = "0xD38E24")]
		private void cycleAudioCall(object data)
		{
		}

		[Token(Token = "0x6001A96")]
		[Address(RVA = "0xD38C9C", Offset = "0xD38C9C", VA = "0xD38C9C")]
		private void PlayBg(string path, int configId, float bgVolume)
		{
		}

		[Token(Token = "0x6001A97")]
		[Address(RVA = "0xD38FD4", Offset = "0xD38FD4", VA = "0xD38FD4")]
		private void ChangeBg(AudioItem__HAIBAO__SWORD__ item)
		{
		}

		[Token(Token = "0x6001A98")]
		[Address(RVA = "0xD390AC", Offset = "0xD390AC", VA = "0xD390AC")]
		[ExportToLuaAttrbute]
		public void CloseBgAudio()
		{
		}

		[Token(Token = "0x6001A99")]
		[Address(RVA = "0xD391C4", Offset = "0xD391C4", VA = "0xD391C4")]
		[NoToLua]
		private void OnAudioCallback(object data)
		{
		}

		[Token(Token = "0x6001A9A")]
		[Address(RVA = "0xD39428", Offset = "0xD39428", VA = "0xD39428")]
		private AudioItem__HAIBAO__SWORD__ CreateItem(Resource res, string path, int autoid, float bgVol)
		{
			return null;
		}

		[Token(Token = "0x6001A9B")]
		[Address(RVA = "0xD39324", Offset = "0xD39324", VA = "0xD39324")]
		private void DestoryItem(int itemId)
		{
		}

		[Token(Token = "0x6001A9C")]
		[Address(RVA = "0xD38578", Offset = "0xD38578", VA = "0xD38578")]
		private void DestoryItem(AudioItem__HAIBAO__SWORD__ item)
		{
		}

		[Token(Token = "0x6001A9D")]
		[Address(RVA = "0xD39704", Offset = "0xD39704", VA = "0xD39704")]
		[ExportToLuaAttrbute]
		public void CloseSound()
		{
		}

		[Token(Token = "0x6001A9E")]
		[Address(RVA = "0xD39710", Offset = "0xD39710", VA = "0xD39710")]
		[ExportToLuaAttrbute]
		public void OpenSound()
		{
		}

		[Token(Token = "0x6001A9F")]
		[Address(RVA = "0xD39718", Offset = "0xD39718", VA = "0xD39718")]
		[ExportToLuaAttrbute]
		public void CloseBg()
		{
		}

		[Token(Token = "0x6001AA0")]
		[Address(RVA = "0xD39748", Offset = "0xD39748", VA = "0xD39748")]
		[ExportToLuaAttrbute]
		public void OpenBg()
		{
		}

		[Token(Token = "0x6001AA1")]
		[Address(RVA = "0xD39854", Offset = "0xD39854", VA = "0xD39854")]
		[ExportToLuaAttrbute]
		public void CloseByAutoID(int id)
		{
		}

		[Token(Token = "0x6001AA2")]
		[Address(RVA = "0xD39858", Offset = "0xD39858", VA = "0xD39858")]
		[ExportToLuaAttrbute]
		public void FadeByAutoID(int id)
		{
		}

		[Token(Token = "0x6001AA3")]
		[Address(RVA = "0xD3915C", Offset = "0xD3915C", VA = "0xD3915C")]
		private void _doClipFade(AudioItem__HAIBAO__SWORD__ item)
		{
		}

		[Token(Token = "0x6001AA4")]
		[Address(RVA = "0xD39918", Offset = "0xD39918", VA = "0xD39918")]
		[ExportToLuaAttrbute]
		public void SetBgVolume(float volume)
		{
		}

		[Token(Token = "0x6001AA5")]
		[Address(RVA = "0xD39980", Offset = "0xD39980", VA = "0xD39980")]
		[ExportToLuaAttrbute]
		public void FadeBgVolume()
		{
		}

		[Token(Token = "0x6001AA6")]
		[Address(RVA = "0xD39990", Offset = "0xD39990", VA = "0xD39990")]
		[ExportToLuaAttrbute]
		public float GetSoundPlayTime(int autoId)
		{
			return default(float);
		}

		[Token(Token = "0x6001AA7")]
		[Address(RVA = "0xD39A4C", Offset = "0xD39A4C", VA = "0xD39A4C")]
		[ExportToLuaAttrbute]
		public void CloseSoundByType(int type)
		{
		}

		[Token(Token = "0x6001AA8")]
		[Address(RVA = "0xD39C38", Offset = "0xD39C38", VA = "0xD39C38")]
		public AudioMgr()
		{
		}
	}
	[Token(Token = "0x20001CC")]
	public class EventMgr__HAIBAO__SWORD__ : QSingleton<EventMgr__HAIBAO__SWORD__>
	{
		[Token(Token = "0x4000825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private GameObject mEvent;

		[Token(Token = "0x4000826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private EventSystem _current;

		[Token(Token = "0x4000827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StandaloneInputModule Module;

		[Token(Token = "0x4000828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int Count;

		[Token(Token = "0x170000BF")]
		private GameObject GOEventSystem
		{
			[Token(Token = "0x6001AA9")]
			[Address(RVA = "0xC11E00", Offset = "0xC11E00", VA = "0xC11E00")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C0")]
		public EventSystem Current
		{
			[Token(Token = "0x6001AAA")]
			[Address(RVA = "0xC11E98", Offset = "0xC11E98", VA = "0xC11E98")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001AAB")]
		[Address(RVA = "0xC11F38", Offset = "0xC11F38", VA = "0xC11F38")]
		public EventMgr__HAIBAO__SWORD__()
		{
		}

		[Token(Token = "0x6001AAC")]
		[Address(RVA = "0xC11FA8", Offset = "0xC11FA8", VA = "0xC11FA8")]
		public void SetEnable(bool enable)
		{
		}

		[Token(Token = "0x6001AAD")]
		[Address(RVA = "0xC120C8", Offset = "0xC120C8", VA = "0xC120C8")]
		public void Init()
		{
		}
	}
	[Token(Token = "0x20001CD")]
	public interface IAudioPlayCallBack__HAIBAO__SWORD__
	{
		[Token(Token = "0x6001AAE")]
		void DoCallBack();
	}
	[Token(Token = "0x20001CE")]
	public class AudioLuaFunctionCallBack__HAIBAO__SWORD__ : IAudioPlayCallBack__HAIBAO__SWORD__
	{
		[Token(Token = "0x4000829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private LuaFunction mFunction;

		[Token(Token = "0x6001AAF")]
		[Address(RVA = "0xD38170", Offset = "0xD38170", VA = "0xD38170")]
		public AudioLuaFunctionCallBack__HAIBAO__SWORD__(LuaFunction f)
		{
		}

		[Token(Token = "0x6001AB0")]
		[Address(RVA = "0xD3819C", Offset = "0xD3819C", VA = "0xD3819C", Slot = "4")]
		public void DoCallBack()
		{
		}
	}
	[Token(Token = "0x20001CF")]
	public class AudioCallBack__HAIBAO__SWORD__ : IAudioPlayCallBack__HAIBAO__SWORD__
	{
		[Token(Token = "0x400082A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Action<object> mCallBack;

		[Token(Token = "0x6001AB1")]
		[Address(RVA = "0xD37FFC", Offset = "0xD37FFC", VA = "0xD37FFC")]
		public AudioCallBack__HAIBAO__SWORD__(Action<object> f)
		{
		}

		[Token(Token = "0x6001AB2")]
		[Address(RVA = "0xD38028", Offset = "0xD38028", VA = "0xD38028", Slot = "4")]
		public void DoCallBack()
		{
		}
	}
	[Token(Token = "0x20001D0")]
	public interface ISCompView__HAIBAO__SWORD__
	{
		[Token(Token = "0x6001AB3")]
		void Clear();

		[Token(Token = "0x6001AB4")]
		GameObject GetView();
	}
	[Token(Token = "0x20001D1")]
	public class LuaMgr__HAIBAO__SWORD__ : QSingleton<LuaMgr__HAIBAO__SWORD__>
	{
		[Token(Token = "0x20003BA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940110", Offset = "0x940110")]
		private sealed class <Init>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LuaMgr__HAIBAO__SWORD__ <>4__this;

			[Token(Token = "0x4000F9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MonoBehaviour root;

			[Token(Token = "0x17000205")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002D02")]
				[Address(RVA = "0xCA66D8", Offset = "0xCA66D8", VA = "0xCA66D8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000206")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002D04")]
				[Address(RVA = "0xCA6740", Offset = "0xCA6740", VA = "0xCA6740", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002CFF")]
			[Address(RVA = "0xCA53B8", Offset = "0xCA53B8", VA = "0xCA53B8")]
			[DebuggerHidden]
			public <Init>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6002D00")]
			[Address(RVA = "0xCA6674", Offset = "0xCA6674", VA = "0xCA6674", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002D01")]
			[Address(RVA = "0xCA6678", Offset = "0xCA6678", VA = "0xCA6678", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002D03")]
			[Address(RVA = "0xCA66E0", Offset = "0xCA66E0", VA = "0xCA66E0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003BB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940120", Offset = "0x940120")]
		private sealed class <LoadBind>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LuaMgr__HAIBAO__SWORD__ <>4__this;

			[Token(Token = "0x4000FA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MonoBehaviour root;

			[Token(Token = "0x17000207")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002D08")]
				[Address(RVA = "0xCA6804", Offset = "0xCA6804", VA = "0xCA6804", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000208")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002D0A")]
				[Address(RVA = "0xCA686C", Offset = "0xCA686C", VA = "0xCA686C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002D05")]
			[Address(RVA = "0xCA5460", Offset = "0xCA5460", VA = "0xCA5460")]
			[DebuggerHidden]
			public <LoadBind>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6002D06")]
			[Address(RVA = "0xCA6748", Offset = "0xCA6748", VA = "0xCA6748", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002D07")]
			[Address(RVA = "0xCA674C", Offset = "0xCA674C", VA = "0xCA674C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002D09")]
			[Address(RVA = "0xCA680C", Offset = "0xCA680C", VA = "0xCA680C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400082B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private LuaState luaState;

		[Token(Token = "0x400082C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private MonoBehaviour mRoot;

		[Token(Token = "0x400082D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool IsLoaded;

		[Token(Token = "0x6001AB5")]
		[Address(RVA = "0xCA529C", Offset = "0xCA529C", VA = "0xCA529C")]
		public LuaMgr__HAIBAO__SWORD__()
		{
		}

		[Token(Token = "0x6001AB6")]
		[Address(RVA = "0xCA5330", Offset = "0xCA5330", VA = "0xCA5330")]
		public LuaState GetState()
		{
			return null;
		}

		[Token(Token = "0x6001AB7")]
		[Address(RVA = "0xCA5338", Offset = "0xCA5338", VA = "0xCA5338")]
		public void Init()
		{
		}

		[Token(Token = "0x6001AB8")]
		[Address(RVA = "0xCA533C", Offset = "0xCA533C", VA = "0xCA533C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A6FA8", Offset = "0x9A6FA8")]
		public IEnumerator Init(MonoBehaviour root)
		{
			return null;
		}

		[Token(Token = "0x6001AB9")]
		[Address(RVA = "0xCA53E4", Offset = "0xCA53E4", VA = "0xCA53E4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A700C", Offset = "0x9A700C")]
		public IEnumerator LoadBind(MonoBehaviour root)
		{
			return null;
		}

		[Token(Token = "0x6001ABA")]
		[Address(RVA = "0xCA548C", Offset = "0xCA548C", VA = "0xCA548C", Slot = "6")]
		protected virtual void Bind()
		{
		}

		[Token(Token = "0x6001ABB")]
		[Address(RVA = "0xCA5524", Offset = "0xCA5524", VA = "0xCA5524", Slot = "7")]
		protected virtual void OpenLibs()
		{
		}

		[Token(Token = "0x6001ABC")]
		[Address(RVA = "0xCA5628", Offset = "0xCA5628", VA = "0xCA5628")]
		private void InitStart()
		{
		}

		[Token(Token = "0x6001ABD")]
		[Address(RVA = "0xCA5644", Offset = "0xCA5644", VA = "0xCA5644")]
		public LuaTable GetTable(string file)
		{
			return null;
		}

		[Token(Token = "0x6001ABE")]
		[Address(RVA = "0xCA5664", Offset = "0xCA5664", VA = "0xCA5664")]
		public void CallFunctionParem(string funcName, params object[] objs)
		{
		}

		[Token(Token = "0x6001ABF")]
		[Address(RVA = "0xCA5F90", Offset = "0xCA5F90", VA = "0xCA5F90")]
		public LuaFunction GetFunction(string funcName)
		{
			return null;
		}

		[Token(Token = "0x6001AC0")]
		[Address(RVA = "0xCA5854", Offset = "0xCA5854", VA = "0xCA5854")]
		public void CallFunctionObj(string funcName)
		{
		}

		[Token(Token = "0x6001AC1")]
		[Address(RVA = "0xCA58B0", Offset = "0xCA58B0", VA = "0xCA58B0")]
		public void CallFunctionObj(string funcName, object obj)
		{
		}

		[Token(Token = "0x6001AC2")]
		[Address(RVA = "0xCA5958", Offset = "0xCA5958", VA = "0xCA5958")]
		public void CallFunctionObj(string funcName, object obj1, object obj2)
		{
		}

		[Token(Token = "0x6001AC3")]
		[Address(RVA = "0xCA5A14", Offset = "0xCA5A14", VA = "0xCA5A14")]
		public void CallFunctionObj(string funcName, object obj1, object obj2, object obj3)
		{
		}

		[Token(Token = "0x6001AC4")]
		[Address(RVA = "0xCA5AD8", Offset = "0xCA5AD8", VA = "0xCA5AD8")]
		public void CallFunctionObj(string funcName, object obj1, object obj2, object obj3, object obj4)
		{
		}

		[Token(Token = "0x6001AC5")]
		[Address(RVA = "0xCA5BB0", Offset = "0xCA5BB0", VA = "0xCA5BB0")]
		public void CallFunctionObj(string funcName, object obj1, object obj2, object obj3, object obj4, object obj5)
		{
		}

		[Token(Token = "0x6001AC6")]
		[Address(RVA = "0xCA5C90", Offset = "0xCA5C90", VA = "0xCA5C90")]
		public void CallFunctionObj(string funcName, object obj1, object obj2, object obj3, object obj4, object obj5, object obj6)
		{
		}

		[Token(Token = "0x6001AC7")]
		[Address(RVA = "0xCA5D84", Offset = "0xCA5D84", VA = "0xCA5D84")]
		public void CallFunctionObj(string funcName, object obj1, object obj2, object obj3, object obj4, object obj5, object obj6, object obj7)
		{
		}

		[Token(Token = "0x6001AC8")]
		[Address(RVA = "0xCA5E84", Offset = "0xCA5E84", VA = "0xCA5E84")]
		public void CallFunctionObj(string funcName, object obj1, object obj2, object obj3, object obj4, object obj5, object obj6, object obj7, object obj8)
		{
		}

		[Token(Token = "0x6001AC9")]
		[Address(RVA = "0xCA5FB0", Offset = "0xCA5FB0", VA = "0xCA5FB0")]
		public void RequireFile(string file)
		{
		}

		[Token(Token = "0x6001ACA")]
		[Address(RVA = "0xCA603C", Offset = "0xCA603C", VA = "0xCA603C")]
		public bool IsHasFunction(string fun, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x6001ACB")]
		[Address(RVA = "0xCA606C", Offset = "0xCA606C", VA = "0xCA606C")]
		public void LuaGC()
		{
		}

		[Token(Token = "0x6001ACC")]
		[Address(RVA = "0xCA6108", Offset = "0xCA6108", VA = "0xCA6108")]
		public LuaState GetLuaState()
		{
			return null;
		}

		[Token(Token = "0x6001ACD")]
		[Address(RVA = "0xCA6110", Offset = "0xCA6110", VA = "0xCA6110")]
		public static void CallLuaFunction(LuaTable luaModule, string funcName, params object[] args)
		{
		}

		[Token(Token = "0x6001ACE")]
		[Address(RVA = "0xCA63D8", Offset = "0xCA63D8", VA = "0xCA63D8")]
		public void Update(float ts)
		{
		}

		[Token(Token = "0x6001ACF")]
		[Address(RVA = "0xCA63DC", Offset = "0xCA63DC", VA = "0xCA63DC")]
		public void Shutdown()
		{
		}

		[Token(Token = "0x6001AD0")]
		[Address(RVA = "0xCA6584", Offset = "0xCA6584", VA = "0xCA6584")]
		public void AddRequire(string path)
		{
		}

		[Token(Token = "0x6001AD1")]
		[Address(RVA = "0xCA6634", Offset = "0xCA6634", VA = "0xCA6634")]
		private void Load(object o)
		{
		}
	}
	[Token(Token = "0x20001D2")]
	public class UtilResource__HAIBAO__SWORD__
	{
		[Token(Token = "0x6001AD2")]
		[Address(RVA = "0xC275B8", Offset = "0xC275B8", VA = "0xC275B8")]
		public static UnityEngine.Object LoadEditorRes(string path)
		{
			return null;
		}

		[Token(Token = "0x6001AD3")]
		[Address(RVA = "0xC275C0", Offset = "0xC275C0", VA = "0xC275C0")]
		public static UnityEngine.Object[] GetSprites(string path)
		{
			return null;
		}

		[Token(Token = "0x6001AD4")]
		[Address(RVA = "0xC27630", Offset = "0xC27630", VA = "0xC27630")]
		public UtilResource__HAIBAO__SWORD__()
		{
		}
	}
	[Token(Token = "0x20001D3")]
	public class SceneRoot__HAIBAO__SWORD__ : QSingleton<SceneRoot__HAIBAO__SWORD__>
	{
		[Token(Token = "0x20003BC")]
		public enum RootTag
		{
			[Token(Token = "0x4000FA2")]
			Entity,
			[Token(Token = "0x4000FA3")]
			Event,
			[Token(Token = "0x4000FA4")]
			Flag,
			[Token(Token = "0x4000FA5")]
			Map,
			[Token(Token = "0x4000FA6")]
			Audio,
			[Token(Token = "0x4000FA7")]
			Pandant,
			[Token(Token = "0x4000FA8")]
			Pool,
			[Token(Token = "0x4000FA9")]
			Effect,
			[Token(Token = "0x4000FAA")]
			Destory,
			[Token(Token = "0x4000FAB")]
			Shadow,
			[Token(Token = "0x4000FAC")]
			UIPool
		}

		[Token(Token = "0x400082E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private GameObject Root;

		[Token(Token = "0x400082F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<int, GameObject> _tag2go;

		[Token(Token = "0x6001AD5")]
		[Address(RVA = "0xCAACE0", Offset = "0xCAACE0", VA = "0xCAACE0")]
		public SceneRoot__HAIBAO__SWORD__()
		{
		}

		[Token(Token = "0x6001AD6")]
		[Address(RVA = "0xCAADF4", Offset = "0xCAADF4", VA = "0xCAADF4")]
		public GameObject GetRoot(RootTag tag)
		{
			return null;
		}

		[Token(Token = "0x6001AD7")]
		[Address(RVA = "0xCAB000", Offset = "0xCAB000", VA = "0xCAB000")]
		public void Remove(RootTag tag)
		{
		}

		[Token(Token = "0x6001AD8")]
		[Address(RVA = "0xCAB0BC", Offset = "0xCAB0BC", VA = "0xCAB0BC")]
		public GameObject AddTo(RootTag tag, GameObject child)
		{
			return null;
		}

		[Token(Token = "0x6001AD9")]
		public T AddComp<T>(RootTag tag) where T : MonoBehaviour
		{
			return null;
		}

		[Token(Token = "0x6001ADA")]
		public T AddComp<T>() where T : Component
		{
			return null;
		}

		[Token(Token = "0x6001ADB")]
		[Address(RVA = "0xCAB130", Offset = "0xCAB130", VA = "0xCAB130")]
		public Component AddComp(Type type)
		{
			return null;
		}

		[Token(Token = "0x6001ADC")]
		[Address(RVA = "0xCAAE94", Offset = "0xCAAE94", VA = "0xCAAE94")]
		private GameObject InitRoot(RootTag tag)
		{
			return null;
		}
	}
	[Token(Token = "0x20001D4")]
	internal class MaterialMgr__HAIBAO__SWORD__
	{
		[Token(Token = "0x6001ADD")]
		[Address(RVA = "0xC9CC40", Offset = "0xC9CC40", VA = "0xC9CC40")]
		public static Material CreateMat(Material m)
		{
			return null;
		}

		[Token(Token = "0x6001ADE")]
		[Address(RVA = "0xCA6920", Offset = "0xCA6920", VA = "0xCA6920")]
		public static Material CreateMat(Shader s)
		{
			return null;
		}

		[Token(Token = "0x6001ADF")]
		[Address(RVA = "0xCA6984", Offset = "0xCA6984", VA = "0xCA6984")]
		public MaterialMgr__HAIBAO__SWORD__()
		{
		}
	}
	[Token(Token = "0x20001D5")]
	public class MsgPacket : IMessage
	{
		[Token(Token = "0x4000830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[ExportToLuaAttrbute]
		public int type;

		[Token(Token = "0x4000831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public uint len;

		[Token(Token = "0x4000832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[ExportToLuaAttrbute]
		public ushort code1;

		[Token(Token = "0x4000833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public ushort code2;

		[Token(Token = "0x4000834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ushort code3;

		[Token(Token = "0x4000835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public uint code4;

		[Token(Token = "0x4000836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ulong code5;

		[Token(Token = "0x4000837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ulong pid;

		[Token(Token = "0x4000838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public uint connectId;

		[Token(Token = "0x4000839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[ExportToLuaAttrbute]
		public string typeName;

		[Token(Token = "0x400083A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public byte[] message;

		[Token(Token = "0x400083B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int HeadSize;

		[Token(Token = "0x6001AE0")]
		[Address(RVA = "0xCA6E54", Offset = "0xCA6E54", VA = "0xCA6E54")]
		public int CalcMessageLength(int typeNameLen)
		{
			return default(int);
		}

		[Token(Token = "0x6001AE1")]
		[Address(RVA = "0xCA6E68", Offset = "0xCA6E68", VA = "0xCA6E68")]
		protected void CalcLength()
		{
		}

		[Token(Token = "0x6001AE2")]
		[Address(RVA = "0xCA6EA4", Offset = "0xCA6EA4", VA = "0xCA6EA4", Slot = "4")]
		public uint Count()
		{
			return default(uint);
		}

		[Token(Token = "0x6001AE3")]
		[Address(RVA = "0xCA6EAC", Offset = "0xCA6EAC", VA = "0xCA6EAC")]
		[ExportToLuaAttrbute]
		public LuaByteBuffer GetMessage()
		{
			return default(LuaByteBuffer);
		}

		[Token(Token = "0x6001AE4")]
		[Address(RVA = "0xCA6EDC", Offset = "0xCA6EDC", VA = "0xCA6EDC")]
		public MsgPacket()
		{
		}
	}
	[Token(Token = "0x20001D6")]
	public class MessageDispatcher__HAIBAO__SWORD__ : IMessageDispatcher
	{
		[Token(Token = "0x6001AE5")]
		[Address(RVA = "0xCA6A3C", Offset = "0xCA6A3C", VA = "0xCA6A3C", Slot = "4")]
		public void Dispatch(Session session, IMessage message)
		{
		}

		[Token(Token = "0x6001AE6")]
		[Address(RVA = "0xCA6A9C", Offset = "0xCA6A9C", VA = "0xCA6A9C")]
		public MessageDispatcher__HAIBAO__SWORD__()
		{
		}
	}
	[Token(Token = "0x20001D7")]
	public class MessageParser__HAIBAO__SWORD__ : IMessageParser
	{
		[Token(Token = "0x6001AE7")]
		[Address(RVA = "0xCA6AA4", Offset = "0xCA6AA4", VA = "0xCA6AA4")]
		private SendMessage__HAIBAO__SWORD__ GetMessage(string typeName)
		{
			return null;
		}

		[Token(Token = "0x6001AE8")]
		[Address(RVA = "0xCA6C6C", Offset = "0xCA6C6C", VA = "0xCA6C6C", Slot = "5")]
		public byte[] SerializeTo(object obj)
		{
			return null;
		}

		[Token(Token = "0x6001AE9")]
		[Address(RVA = "0xC9FDFC", Offset = "0xC9FDFC", VA = "0xC9FDFC")]
		public MsgPacket GetMessage(ulong pid, uint connectId, string typeName, byte[] message)
		{
			return null;
		}

		[Token(Token = "0x6001AEA")]
		[Address(RVA = "0xC9FE44", Offset = "0xC9FE44", VA = "0xC9FE44")]
		public MsgPacket GetMessage(ulong pid, uint connectId, string typeName, byte[] message, ushort code1, ushort code2, ushort code3)
		{
			return null;
		}

		[Token(Token = "0x6001AEB")]
		[Address(RVA = "0xCA6CCC", Offset = "0xCA6CCC", VA = "0xCA6CCC", Slot = "4")]
		public void SerializeTo(object obj, BufferQueue sendBuffer)
		{
		}

		[Token(Token = "0x6001AEC")]
		[Address(RVA = "0xCA6E4C", Offset = "0xCA6E4C", VA = "0xCA6E4C")]
		public MessageParser__HAIBAO__SWORD__()
		{
		}
	}
	[Token(Token = "0x20001D8")]
	public static class NetReconnection__HAIBAO__SWORD__
	{
		[Token(Token = "0x400083C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int autoId;

		[Token(Token = "0x400083D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Dictionary<ushort, SendMessage__HAIBAO__SWORD__> mIdToMessage;

		[Token(Token = "0x400083E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Queue<SendMessage__HAIBAO__SWORD__> mCache;

		[Token(Token = "0x6001AED")]
		[Address(RVA = "0xCA7F50", Offset = "0xCA7F50", VA = "0xCA7F50")]
		public static int GetAutoId()
		{
			return default(int);
		}

		[Token(Token = "0x6001AEE")]
		[Address(RVA = "0xC9FCF8", Offset = "0xC9FCF8", VA = "0xC9FCF8")]
		public static bool IsNeedReconnectPacket(string type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AEF")]
		[Address(RVA = "0xCA6B08", Offset = "0xCA6B08", VA = "0xCA6B08")]
		public static SendMessage__HAIBAO__SWORD__ GetMessage(string typeName)
		{
			return null;
		}

		[Token(Token = "0x6001AF0")]
		[Address(RVA = "0xCA8004", Offset = "0xCA8004", VA = "0xCA8004")]
		public static void Clear()
		{
		}

		[Token(Token = "0x6001AF1")]
		[Address(RVA = "0xC9FD78", Offset = "0xC9FD78", VA = "0xC9FD78")]
		public static void AddCache(SendMessage__HAIBAO__SWORD__ packet)
		{
		}

		[Token(Token = "0x6001AF2")]
		[Address(RVA = "0xCA8174", Offset = "0xCA8174", VA = "0xCA8174")]
		public static void Handle(ushort code3, string typeName)
		{
		}

		[Token(Token = "0x6001AF3")]
		[Address(RVA = "0xCA8294", Offset = "0xCA8294", VA = "0xCA8294")]
		public static void ReConnect()
		{
		}
	}
	[Token(Token = "0x20001D9")]
	public class PacketParser__HAIBAO__SWORD__ : IPacketParser
	{
		[Token(Token = "0x20003BD")]
		private enum PacketType
		{
			[Token(Token = "0x4000FAE")]
			PacketHeader,
			[Token(Token = "0x4000FAF")]
			PacketBody
		}

		[Token(Token = "0x400083F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PacketType mPacketType;

		[Token(Token = "0x4000840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Packet mPacket;

		[Token(Token = "0x4000841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private MsgPacket mMessage;

		[Token(Token = "0x4000842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private uint size;

		[Token(Token = "0x4000843")]
		private const int PacketHeaderSize = 4;

		[Token(Token = "0x4000844")]
		private const int PacketTypeSize = 2;

		[Token(Token = "0x6001AF5")]
		[Address(RVA = "0xCA87E4", Offset = "0xCA87E4", VA = "0xCA87E4", Slot = "4")]
		public override bool Parse(BufferQueue buffer, IChannel channel)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AF6")]
		[Address(RVA = "0xCA88E8", Offset = "0xCA88E8", VA = "0xCA88E8")]
		public void Deserialize(BufferQueue buffer)
		{
		}

		[Token(Token = "0x6001AF7")]
		[Address(RVA = "0xCA8E08", Offset = "0xCA8E08", VA = "0xCA8E08")]
		private int GetInt32(BufferQueue buffer)
		{
			return default(int);
		}

		[Token(Token = "0x6001AF8")]
		[Address(RVA = "0xCA8E6C", Offset = "0xCA8E6C", VA = "0xCA8E6C")]
		private short GetShort(BufferQueue buffer)
		{
			return default(short);
		}

		[Token(Token = "0x6001AF9")]
		[Address(RVA = "0xCA8D2C", Offset = "0xCA8D2C", VA = "0xCA8D2C")]
		private uint GetUInt32(BufferQueue buffer)
		{
			return default(uint);
		}

		[Token(Token = "0x6001AFA")]
		[Address(RVA = "0xCA8C64", Offset = "0xCA8C64", VA = "0xCA8C64")]
		private ulong GetULong(BufferQueue buffer)
		{
			return default(ulong);
		}

		[Token(Token = "0x6001AFB")]
		[Address(RVA = "0xCA8CC8", Offset = "0xCA8CC8", VA = "0xCA8CC8")]
		private ushort GetUShort(BufferQueue buffer)
		{
			return default(ushort);
		}

		[Token(Token = "0x6001AFC")]
		[Address(RVA = "0xCA8D90", Offset = "0xCA8D90", VA = "0xCA8D90")]
		private string GetString(BufferQueue buffer, int len)
		{
			return null;
		}

		[Token(Token = "0x6001AFD")]
		[Address(RVA = "0xC9FF84", Offset = "0xC9FF84", VA = "0xC9FF84")]
		public void AddNetState(int type)
		{
		}

		[Token(Token = "0x6001AFE")]
		[Address(RVA = "0xCA8C48", Offset = "0xCA8C48", VA = "0xCA8C48")]
		private void Handle(IMessage message, IChannel channel)
		{
		}

		[Token(Token = "0x6001AFF")]
		[Address(RVA = "0xCA8ED0", Offset = "0xCA8ED0", VA = "0xCA8ED0")]
		public PacketParser__HAIBAO__SWORD__()
		{
		}
	}
	[Token(Token = "0x20001DA")]
	internal class ReciveMessage__HAIBAO__SWORD__ : MsgPacket
	{
		[Token(Token = "0x6001B00")]
		[Address(RVA = "0xCA9AE0", Offset = "0xCA9AE0", VA = "0xCA9AE0")]
		public ReciveMessage__HAIBAO__SWORD__()
		{
		}
	}
	[Token(Token = "0x20001DB")]
	public class SendMessage__HAIBAO__SWORD__ : MsgPacket
	{
		[Token(Token = "0x6001B01")]
		[Address(RVA = "0xCA6D64", Offset = "0xCA6D64", VA = "0xCA6D64")]
		public void SerializeTo(BufferQueue sendBuffer)
		{
		}

		[Token(Token = "0x6001B02")]
		[Address(RVA = "0xCA7FF4", Offset = "0xCA7FF4", VA = "0xCA7FF4")]
		public SendMessage__HAIBAO__SWORD__()
		{
		}
	}
	[Token(Token = "0x20001DC")]
	public class GameSession__HAIBAO__SWORD__ : SessionThread
	{
		[Token(Token = "0x6001B03")]
		[Address(RVA = "0xC9F938", Offset = "0xC9F938", VA = "0xC9F938")]
		public GameSession__HAIBAO__SWORD__(IPEndPoint ip, IMessageParser mp, IPacketParser pp, IMessageDispatcher messageDispatcher)
		{
		}

		[Token(Token = "0x6001B04")]
		[Address(RVA = "0xC9F940", Offset = "0xC9F940", VA = "0xC9F940")]
		public GameSession__HAIBAO__SWORD__(IChannel c, IMessageParser mp, IPacketParser pp, IMessageDispatcher messageDispatcher)
		{
		}

		[Token(Token = "0x6001B05")]
		[Address(RVA = "0xC9F948", Offset = "0xC9F948", VA = "0xC9F948")]
		public GameSession__HAIBAO__SWORD__(IPEndPoint ip, long id, IMessageParser mp, IPacketParser pp, IMessageDispatcher messageDispatcher)
		{
		}

		[Token(Token = "0x6001B06")]
		[Address(RVA = "0xC9F950", Offset = "0xC9F950", VA = "0xC9F950")]
		public void Send(ulong pid, uint connectId, string typeName, byte[] message)
		{
		}

		[Token(Token = "0x6001B07")]
		[Address(RVA = "0xC9FBE4", Offset = "0xC9FBE4", VA = "0xC9FBE4")]
		public void Send(ulong pid, uint connectId, string typeName, byte[] message, ushort code1, ushort code2, ushort code3)
		{
		}

		[Token(Token = "0x6001B08")]
		[Address(RVA = "0xC9FA34", Offset = "0xC9FA34", VA = "0xC9FA34")]
		private void SendMessage(MsgPacket temp, string typeName, byte[] message)
		{
		}

		[Token(Token = "0x6001B09")]
		[Address(RVA = "0xC9F978", Offset = "0xC9F978", VA = "0xC9F978")]
		public MsgPacket GetMessage(ulong pid, uint connectId, string typeName, byte[] message)
		{
			return null;
		}

		[Token(Token = "0x6001B0A")]
		[Address(RVA = "0xC9FC14", Offset = "0xC9FC14", VA = "0xC9FC14")]
		public MsgPacket GetMessage(ulong pid, uint connectId, string typeName, byte[] message, ushort code1, ushort code2, ushort code3)
		{
			return null;
		}

		[Token(Token = "0x6001B0B")]
		[Address(RVA = "0xC9FEAC", Offset = "0xC9FEAC", VA = "0xC9FEAC", Slot = "4")]
		public override void HandleState(eNetState state, IChannel channel)
		{
		}
	}
	[Token(Token = "0x20001DD")]
	[ObjectSystem]
	public class CompMonoGC__HAIBAO__SWORD__ : SComponent, IAwakeComponent
	{
		[Token(Token = "0x4000845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Queue<GameObject> mList;

		[Token(Token = "0x4000846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int timer;

		[Token(Token = "0x6001B0C")]
		[Address(RVA = "0xC0D13C", Offset = "0xC0D13C", VA = "0xC0D13C", Slot = "6")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001B0D")]
		[Address(RVA = "0xC0D1E8", Offset = "0xC0D1E8", VA = "0xC0D1E8")]
		private void Frame(object o)
		{
		}

		[Token(Token = "0x6001B0E")]
		[Address(RVA = "0xC0D260", Offset = "0xC0D260", VA = "0xC0D260")]
		public void Destory(GameObject go)
		{
		}

		[Token(Token = "0x6001B0F")]
		[Address(RVA = "0xC0D30C", Offset = "0xC0D30C", VA = "0xC0D30C", Slot = "5")]
		protected override void OnDispose()
		{
		}

		[Token(Token = "0x6001B10")]
		[Address(RVA = "0xC0D394", Offset = "0xC0D394", VA = "0xC0D394")]
		public CompMonoGC__HAIBAO__SWORD__()
		{
		}
	}
	[Token(Token = "0x20001DE")]
	public class CompNotifyLuaAndCS__HAIBAO__SWORD__ : CompNotify
	{
		[Token(Token = "0x4000847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<int, List<LuaFunction>> mDictionary;

		[Token(Token = "0x6001B11")]
		[Address(RVA = "0xC0DB34", Offset = "0xC0DB34", VA = "0xC0DB34")]
		public void AddLuaListener(int key, LuaFunction handler)
		{
		}

		[Token(Token = "0x6001B12")]
		[Address(RVA = "0xC0DC28", Offset = "0xC0DC28", VA = "0xC0DC28")]
		public void RemoveLuaListener(int key, LuaFunction handler)
		{
		}

		[Token(Token = "0x6001B13")]
		[Address(RVA = "0xC0DCAC", Offset = "0xC0DCAC", VA = "0xC0DCAC")]
		public void DispatchLua(int key, params object[] datas)
		{
		}

		[Token(Token = "0x6001B14")]
		[Address(RVA = "0xC0DDA0", Offset = "0xC0DDA0", VA = "0xC0DDA0")]
		public bool ContainsKeyLua(int key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B15")]
		[Address(RVA = "0xC0DE08", Offset = "0xC0DE08", VA = "0xC0DE08")]
		public void DispatchCSAndLua(int key)
		{
		}

		[Token(Token = "0x6001B16")]
		public void DispatchCSAndLua<T>(int key, T data)
		{
		}

		[Token(Token = "0x6001B17")]
		[Address(RVA = "0xC0DAC4", Offset = "0xC0DAC4", VA = "0xC0DAC4")]
		public CompNotifyLuaAndCS__HAIBAO__SWORD__()
		{
		}
	}
	[Token(Token = "0x20001DF")]
	public class CompNotifyCtrl__HAIBAO__SWORD__ : CompNotifyLuaAndCS__HAIBAO__SWORD__
	{
		[Token(Token = "0x6001B18")]
		[Address(RVA = "0xC0DAC0", Offset = "0xC0DAC0", VA = "0xC0DAC0")]
		public CompNotifyCtrl__HAIBAO__SWORD__()
		{
		}
	}
	[Token(Token = "0x20001E0")]
	public class CompNotifyView__HAIBAO__SWORD__ : CompNotifyLuaAndCS__HAIBAO__SWORD__
	{
		[Token(Token = "0x6001B19")]
		[Address(RVA = "0xC0DF20", Offset = "0xC0DF20", VA = "0xC0DF20")]
		public CompNotifyView__HAIBAO__SWORD__()
		{
		}
	}
	[Token(Token = "0x20001E1")]
	public class CompNotifyTouch__HAIBAO__SWORD__ : CompNotifyLuaAndCS__HAIBAO__SWORD__
	{
		[Token(Token = "0x6001B1A")]
		[Address(RVA = "0xC0DF1C", Offset = "0xC0DF1C", VA = "0xC0DF1C")]
		public CompNotifyTouch__HAIBAO__SWORD__()
		{
		}
	}
	[Token(Token = "0x20001E2")]
	public static class NetProfiler__HAIBAO__SWORD__
	{
		[Token(Token = "0x20003BE")]
		public class NetInfo
		{
			[Token(Token = "0x4000FB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string TypeName;

			[Token(Token = "0x4000FB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public uint Length;

			[Token(Token = "0x4000FB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int SendCount;

			[Token(Token = "0x4000FB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int RecvCount;

			[Token(Token = "0x6002D0B")]
			[Address(RVA = "0xCA7ED4", Offset = "0xCA7ED4", VA = "0xCA7ED4")]
			public static NetInfo Get(string typeName, uint length)
			{
				return null;
			}

			[Token(Token = "0x6002D0C")]
			[Address(RVA = "0xCA7D34", Offset = "0xCA7D34", VA = "0xCA7D34")]
			public NetInfo()
			{
			}
		}

		[Token(Token = "0x4000848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int SendLimit;

		[Token(Token = "0x4000849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int RecvLimit;

		[Token(Token = "0x400084A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<string, NetInfo> _data;

		[Token(Token = "0x6001B1B")]
		[Address(RVA = "0xCA78AC", Offset = "0xCA78AC", VA = "0xCA78AC")]
		public static void OnRecv(MsgPacket mp)
		{
		}

		[Token(Token = "0x6001B1C")]
		[Address(RVA = "0xCA7C70", Offset = "0xCA7C70", VA = "0xCA7C70")]
		public static void OnSend(string typeName, uint length)
		{
		}

		[Token(Token = "0x6001B1D")]
		[Address(RVA = "0xCA7B28", Offset = "0xCA7B28", VA = "0xCA7B28")]
		private static void _add(string typeName, uint length, bool isSend)
		{
		}

		[Token(Token = "0x6001B1E")]
		[Address(RVA = "0xCA7D3C", Offset = "0xCA7D3C", VA = "0xCA7D3C")]
		internal static void Clear()
		{
		}

		[Token(Token = "0x6001B1F")]
		[Address(RVA = "0xCA7DB8", Offset = "0xCA7DB8", VA = "0xCA7DB8")]
		public static List<NetInfo> GetData()
		{
			return null;
		}
	}
	[Token(Token = "0x20001E3")]
	public struct NetItem__HAIBAO__SWORD__
	{
		[Token(Token = "0x400084B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string TypeName;

		[Token(Token = "0x400084C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public byte[] Message;

		[Token(Token = "0x400084D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public DateTime Time;

		[Token(Token = "0x6001B21")]
		[Address(RVA = "0xCA7828", Offset = "0xCA7828", VA = "0xCA7828")]
		public NetItem__HAIBAO__SWORD__(string typeName, byte[] message)
		{
		}
	}
	[Token(Token = "0x20001E4")]
	[ObjectSystem]
	public class CompNetwork__HAIBAO__SWORD__ : SComponent
	{
		[Token(Token = "0x400084E")]
		public const int OnRecvCountLimit = 4000;

		[Token(Token = "0x400084F")]
		private const int ReSendTime = 8;

		[Token(Token = "0x4000850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ulong pid;

		[Token(Token = "0x4000851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private uint connectId;

		[Token(Token = "0x4000852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string ip;

		[Token(Token = "0x4000853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int port;

		[Token(Token = "0x4000854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameSession__HAIBAO__SWORD__ mSession;

		[Token(Token = "0x4000855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Action<MsgPacket> HandlePacket;

		[Token(Token = "0x6001B22")]
		[Address(RVA = "0xC0D404", Offset = "0xC0D404", VA = "0xC0D404")]
		public CompNetwork__HAIBAO__SWORD__()
		{
		}

		[Token(Token = "0x6001B23")]
		[Address(RVA = "0xC0D40C", Offset = "0xC0D40C", VA = "0xC0D40C")]
		private void MainHandler(object o)
		{
		}

		[Token(Token = "0x6001B24")]
		[Address(RVA = "0xC0D534", Offset = "0xC0D534", VA = "0xC0D534")]
		public void Handle(IMessage packet)
		{
		}

		[Token(Token = "0x6001B25")]
		[Address(RVA = "0xC0D5E4", Offset = "0xC0D5E4", VA = "0xC0D5E4")]
		public void Connect(string ip, int port)
		{
		}

		[Token(Token = "0x6001B26")]
		[Address(RVA = "0xC0D768", Offset = "0xC0D768", VA = "0xC0D768")]
		private void Connect()
		{
		}

		[Token(Token = "0x6001B27")]
		[Address(RVA = "0xC0D9D0", Offset = "0xC0D9D0", VA = "0xC0D9D0")]
		private void Send(ulong pid, uint connectId, string typeName, byte[] message)
		{
		}

		[Token(Token = "0x6001B28")]
		[Address(RVA = "0xC0D9EC", Offset = "0xC0D9EC", VA = "0xC0D9EC")]
		public void Send(string typeName, byte[] message)
		{
		}

		[Token(Token = "0x6001B29")]
		[Address(RVA = "0xC0DA1C", Offset = "0xC0DA1C", VA = "0xC0DA1C")]
		public void Send(IMessage message)
		{
		}

		[Token(Token = "0x6001B2A")]
		[Address(RVA = "0xC0DA38", Offset = "0xC0DA38", VA = "0xC0DA38")]
		public void Send(ulong pid, uint connectId, string typeName, byte[] message, ushort code1, ushort code2, ushort code3)
		{
		}

		[Token(Token = "0x6001B2B")]
		[Address(RVA = "0xC0DA58", Offset = "0xC0DA58", VA = "0xC0DA58")]
		public bool IsConnect()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B2C")]
		[Address(RVA = "0xC0DA6C", Offset = "0xC0DA6C", VA = "0xC0DA6C")]
		public void Close()
		{
		}

		[Token(Token = "0x6001B2D")]
		[Address(RVA = "0xC0DA80", Offset = "0xC0DA80", VA = "0xC0DA80", Slot = "5")]
		protected override void OnDispose()
		{
		}

		[Token(Token = "0x6001B2E")]
		[Address(RVA = "0xC0DA94", Offset = "0xC0DA94", VA = "0xC0DA94")]
		public eNetState GetNetState()
		{
			return default(eNetState);
		}

		[Token(Token = "0x6001B2F")]
		[Address(RVA = "0xC0DAAC", Offset = "0xC0DAAC", VA = "0xC0DAAC")]
		public void OnUpdate()
		{
		}
	}
	[Token(Token = "0x20001E5")]
	internal class TaskLoadUnityManifest__HAIBAO__SWORD__ : TaskBase
	{
		[Token(Token = "0x4000856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool mIsFinish;

		[Token(Token = "0x6001B30")]
		[Address(RVA = "0xCADD0C", Offset = "0xCADD0C", VA = "0xCADD0C", Slot = "7")]
		protected override bool IsWait()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B31")]
		[Address(RVA = "0xCADD1C", Offset = "0xCADD1C", VA = "0xCADD1C", Slot = "6")]
		protected override void OnEnd()
		{
		}

		[Token(Token = "0x6001B32")]
		[Address(RVA = "0xCADD20", Offset = "0xCADD20", VA = "0xCADD20", Slot = "5")]
		protected override void OnStart()
		{
		}

		[Token(Token = "0x6001B33")]
		[Address(RVA = "0xCADDE0", Offset = "0xCADDE0", VA = "0xCADDE0")]
		public TaskLoadUnityManifest__HAIBAO__SWORD__()
		{
		}

		[Token(Token = "0x6001B34")]
		[Address(RVA = "0xCADDE8", Offset = "0xCADDE8", VA = "0xCADDE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7080", Offset = "0x9A7080")]
		private void <OnStart>b__3_0(Resource res, object data)
		{
		}
	}
	[Token(Token = "0x20001E6")]
	public class Calculation : MonoBehaviour
	{
		[Token(Token = "0x4000857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int ObjectPoolCount;

		[Token(Token = "0x4000858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int MaxObjectPoolCount;

		[Token(Token = "0x6001B35")]
		[Address(RVA = "0xD3BEF4", Offset = "0xD3BEF4", VA = "0xD3BEF4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B36")]
		[Address(RVA = "0xD3BF94", Offset = "0xD3BF94", VA = "0xD3BF94")]
		public Calculation()
		{
		}
	}
	[Token(Token = "0x20001E7")]
	public enum TaskState__HAIBAO__SWORD__
	{
		[Token(Token = "0x400085A")]
		Start,
		[Token(Token = "0x400085B")]
		Wait,
		[Token(Token = "0x400085C")]
		End,
		[Token(Token = "0x400085D")]
		Error
	}
	[Token(Token = "0x20001E8")]
	public abstract class TaskBase
	{
		[Token(Token = "0x400085E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected TaskState__HAIBAO__SWORD__ mState;

		[Token(Token = "0x6001B37")]
		[Address(RVA = "0xCADC60", Offset = "0xCADC60", VA = "0xCADC60", Slot = "4")]
		public virtual bool Run()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B38")]
		protected abstract void OnStart();

		[Token(Token = "0x6001B39")]
		protected abstract void OnEnd();

		[Token(Token = "0x6001B3A")]
		protected abstract bool IsWait();

		[Token(Token = "0x6001B3B")]
		[Address(RVA = "0xCADD00", Offset = "0xCADD00", VA = "0xCADD00", Slot = "8")]
		public virtual void Clear()
		{
		}

		[Token(Token = "0x6001B3C")]
		[Address(RVA = "0xCADD04", Offset = "0xCADD04", VA = "0xCADD04")]
		protected TaskBase()
		{
		}
	}
	[Token(Token = "0x20001E9")]
	public class TaskMgr__HAIBAO__SWORD__ : QSingleton<TaskMgr__HAIBAO__SWORD__>
	{
		[Token(Token = "0x400085F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Queue<TaskBase> mQueueTasks;

		[Token(Token = "0x4000860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _isRunning;

		[Token(Token = "0x4000861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private MonoBehaviour mRoot;

		[Token(Token = "0x4000862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TaskBase mCurrent;

		[Token(Token = "0x6001B3D")]
		[Address(RVA = "0xCADE60", Offset = "0xCADE60", VA = "0xCADE60")]
		public TaskMgr__HAIBAO__SWORD__()
		{
		}

		[Token(Token = "0x6001B3E")]
		[Address(RVA = "0xCADEF8", Offset = "0xCADEF8", VA = "0xCADEF8")]
		public void Init(MonoBehaviour mono)
		{
		}

		[Token(Token = "0x6001B3F")]
		[Address(RVA = "0xCADF00", Offset = "0xCADF00", VA = "0xCADF00")]
		public void AddTask(TaskBase task)
		{
		}

		[Token(Token = "0x6001B40")]
		[Address(RVA = "0xCADF60", Offset = "0xCADF60", VA = "0xCADF60")]
		public bool IsRunning()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B41")]
		[Address(RVA = "0xCADF68", Offset = "0xCADF68", VA = "0xCADF68")]
		public void SetRunning(bool running)
		{
		}

		[Token(Token = "0x6001B42")]
		[Address(RVA = "0xCADF74", Offset = "0xCADF74", VA = "0xCADF74")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001B43")]
		[Address(RVA = "0xCADFE8", Offset = "0xCADFE8", VA = "0xCADFE8")]
		public void Run()
		{
		}

		[Token(Token = "0x6001B44")]
		[Address(RVA = "0xCADFF4", Offset = "0xCADFF4", VA = "0xCADFF4")]
		private bool RunTask()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B45")]
		[Address(RVA = "0xCAE038", Offset = "0xCAE038", VA = "0xCAE038")]
		public void Frame()
		{
		}
	}
	[Token(Token = "0x20001EA")]
	internal interface IPlatform__HAIBAO__SWORD__
	{
		[Token(Token = "0x6001B46")]
		void Install(string path);

		[Token(Token = "0x6001B47")]
		void Restart(int miliSeconds);

		[Token(Token = "0x6001B48")]
		void Login(string data);

		[Token(Token = "0x6001B49")]
		void LoginResult(string data);

		[Token(Token = "0x6001B4A")]
		void Pay(string data);

		[Token(Token = "0x6001B4B")]
		void PayResult(string data);

		[Token(Token = "0x6001B4C")]
		void Logout(string data);

		[Token(Token = "0x6001B4D")]
		void CheckPay();

		[Token(Token = "0x6001B4E")]
		void Quit(string data);

		[Token(Token = "0x6001B4F")]
		void SendNotification(string title, string content, int time, bool isLoop, int id, int schedule = 86400);

		[Token(Token = "0x6001B50")]
		void ClearNotification();

		[Token(Token = "0x6001B51")]
		int GetNetSpeed();

		[Token(Token = "0x6001B52")]
		string GetChannelId();

		[Token(Token = "0x6001B53")]
		void SwitchAccount();

		[Token(Token = "0x6001B54")]
		void SubmitRoleData(string data);

		[Token(Token = "0x6001B55")]
		void ReportChat(string content, string type, string accountId, string accountName, int level, string serverId, string serverName);

		[Token(Token = "0x6001B56")]
		void OnLogOut(string data);

		[Token(Token = "0x6001B57")]
		string GetGameName();

		[Token(Token = "0x6001B58")]
		void JavaToUnity(string data);

		[Token(Token = "0x6001B59")]
		int GetUseMemory();

		[Token(Token = "0x6001B5A")]
		string GetBirthdayFromSDK();

		[Token(Token = "0x6001B5B")]
		string GetSdkVersion();

		[Token(Token = "0x6001B5C")]
		Rect GetSafeArea();

		[Token(Token = "0x6001B5D")]
		void OnSaveImageToAlbum(string fileName, LuaFunction callback);

		[Token(Token = "0x6001B5E")]
		void UnityToPlatform(string type, string data);

		[Token(Token = "0x6001B5F")]
		void InitSDK();

		[Token(Token = "0x6001B60")]
		void PlayMobAD();

		[Token(Token = "0x6001B61")]
		void InitMobAD();
	}
	[Token(Token = "0x20001EB")]
	internal interface IPlatformUpdate
	{
		[Token(Token = "0x6001B62")]
		void GoUpdatePackage(string downloadUrl, string title, string updateTip);
	}
	[Token(Token = "0x20001EC")]
	internal class PlatformNoSDK__HAIBAO__SWORD__ : IPlatform__HAIBAO__SWORD__
	{
		[Token(Token = "0x4000863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected float mRightSizePer;

		[Token(Token = "0x4000864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		protected float mRightSize;

		[Token(Token = "0x6001B63")]
		[Address(RVA = "0xCA8F64", Offset = "0xCA8F64", VA = "0xCA8F64", Slot = "32")]
		public virtual void Install(string path)
		{
		}

		[Token(Token = "0x6001B64")]
		[Address(RVA = "0xCA8F68", Offset = "0xCA8F68", VA = "0xCA8F68", Slot = "33")]
		public virtual void Login(string data)
		{
		}

		[Token(Token = "0x6001B65")]
		[Address(RVA = "0xCA8F6C", Offset = "0xCA8F6C", VA = "0xCA8F6C", Slot = "7")]
		public void LoginResult(string data)
		{
		}

		[Token(Token = "0x6001B66")]
		[Address(RVA = "0xCA9010", Offset = "0xCA9010", VA = "0xCA9010", Slot = "20")]
		public void OnLogOut(string data)
		{
		}

		[Token(Token = "0x6001B67")]
		[Address(RVA = "0xCA9014", Offset = "0xCA9014", VA = "0xCA9014", Slot = "34")]
		public virtual void Pay(string data)
		{
		}

		[Token(Token = "0x6001B68")]
		[Address(RVA = "0xCA9018", Offset = "0xCA9018", VA = "0xCA9018", Slot = "35")]
		public virtual void PayResult(string data)
		{
		}

		[Token(Token = "0x6001B69")]
		[Address(RVA = "0xCA901C", Offset = "0xCA901C", VA = "0xCA901C", Slot = "36")]
		public virtual void Logout(string data)
		{
		}

		[Token(Token = "0x6001B6A")]
		[Address(RVA = "0xCA9020", Offset = "0xCA9020", VA = "0xCA9020", Slot = "37")]
		public virtual void Quit(string data)
		{
		}

		[Token(Token = "0x6001B6B")]
		[Address(RVA = "0xCA9024", Offset = "0xCA9024", VA = "0xCA9024", Slot = "38")]
		public virtual void SendNotification(string title, string content, int time, bool isLoop, int id, int schedule = 86400)
		{
		}

		[Token(Token = "0x6001B6C")]
		[Address(RVA = "0xCA9028", Offset = "0xCA9028", VA = "0xCA9028", Slot = "39")]
		public virtual void ClearNotification()
		{
		}

		[Token(Token = "0x6001B6D")]
		[Address(RVA = "0xCA902C", Offset = "0xCA902C", VA = "0xCA902C", Slot = "40")]
		public virtual int GetNetSpeed()
		{
			return default(int);
		}

		[Token(Token = "0x6001B6E")]
		[Address(RVA = "0xCA9034", Offset = "0xCA9034", VA = "0xCA9034", Slot = "41")]
		public virtual string GetChannelId()
		{
			return null;
		}

		[Token(Token = "0x6001B6F")]
		[Address(RVA = "0xCA903C", Offset = "0xCA903C", VA = "0xCA903C", Slot = "42")]
		public virtual void Init()
		{
		}

		[Token(Token = "0x6001B70")]
		[Address(RVA = "0xCA9040", Offset = "0xCA9040", VA = "0xCA9040", Slot = "43")]
		public virtual void SwitchAccount()
		{
		}

		[Token(Token = "0x6001B71")]
		[Address(RVA = "0xCA9044", Offset = "0xCA9044", VA = "0xCA9044", Slot = "44")]
		public virtual void SubmitRoleData(string data)
		{
		}

		[Token(Token = "0x6001B72")]
		[Address(RVA = "0xCA9048", Offset = "0xCA9048", VA = "0xCA9048", Slot = "45")]
		public virtual void ReportChat(string content, string type, string accountId, string accountName, int level, string serverId, string serverName)
		{
		}

		[Token(Token = "0x6001B73")]
		[Address(RVA = "0xCA904C", Offset = "0xCA904C", VA = "0xCA904C", Slot = "46")]
		public virtual void Restart(int miliSeconds)
		{
		}

		[Token(Token = "0x6001B74")]
		[Address(RVA = "0xCA9088", Offset = "0xCA9088", VA = "0xCA9088", Slot = "47")]
		public virtual string GetGameName()
		{
			return null;
		}

		[Token(Token = "0x6001B75")]
		[Address(RVA = "0xCA90D0", Offset = "0xCA90D0", VA = "0xCA90D0", Slot = "22")]
		public void JavaToUnity(string jsonStr)
		{
		}

		[Token(Token = "0x6001B76")]
		[Address(RVA = "0xCA9744", Offset = "0xCA9744", VA = "0xCA9744", Slot = "28")]
		public void UnityToPlatform(string type, string data)
		{
		}

		[Token(Token = "0x6001B77")]
		[Address(RVA = "0xCA9828", Offset = "0xCA9828", VA = "0xCA9828", Slot = "48")]
		protected virtual void CallUnityToPlatform(string json)
		{
		}

		[Token(Token = "0x6001B78")]
		[Address(RVA = "0xCA98B0", Offset = "0xCA98B0", VA = "0xCA98B0", Slot = "49")]
		public virtual int GetUseMemory()
		{
			return default(int);
		}

		[Token(Token = "0x6001B79")]
		[Address(RVA = "0xCA98B8", Offset = "0xCA98B8", VA = "0xCA98B8", Slot = "50")]
		public virtual void CheckPay()
		{
		}

		[Token(Token = "0x6001B7A")]
		[Address(RVA = "0xCA98BC", Offset = "0xCA98BC", VA = "0xCA98BC", Slot = "51")]
		public virtual Rect GetSafeArea()
		{
			return default(Rect);
		}

		[Token(Token = "0x6001B7B")]
		[Address(RVA = "0xCA9934", Offset = "0xCA9934", VA = "0xCA9934", Slot = "52")]
		public virtual string GetBirthdayFromSDK()
		{
			return null;
		}

		[Token(Token = "0x6001B7C")]
		[Address(RVA = "0xCA993C", Offset = "0xCA993C", VA = "0xCA993C", Slot = "53")]
		public virtual string GetSdkVersion()
		{
			return null;
		}

		[Token(Token = "0x6001B7D")]
		[Address(RVA = "0xCA9984", Offset = "0xCA9984", VA = "0xCA9984", Slot = "54")]
		public virtual void OnSaveImageToAlbum(string fileName, LuaFunction callback)
		{
		}

		[Token(Token = "0x6001B7E")]
		[Address(RVA = "0xCA9988", Offset = "0xCA9988", VA = "0xCA9988", Slot = "55")]
		public virtual void InitSDK()
		{
		}

		[Token(Token = "0x6001B7F")]
		[Address(RVA = "0xCA998C", Offset = "0xCA998C", VA = "0xCA998C", Slot = "56")]
		public virtual void PlayMobAD()
		{
		}

		[Token(Token = "0x6001B80")]
		[Address(RVA = "0xCA9990", Offset = "0xCA9990", VA = "0xCA9990", Slot = "57")]
		public virtual void InitMobAD()
		{
		}

		[Token(Token = "0x6001B81")]
		[Address(RVA = "0xCA9994", Offset = "0xCA9994", VA = "0xCA9994")]
		public PlatformNoSDK__HAIBAO__SWORD__()
		{
		}
	}
	[Token(Token = "0x20001ED")]
	public interface ITouchEntity__HAIBAO__SWORD__
	{
		[Token(Token = "0x6001B82")]
		void DoTouch();
	}
	[Token(Token = "0x20001EE")]
	public static class TouchEventType__HAIBAO__SWORD__
	{
		[Token(Token = "0x4000865")]
		public const int None = 0;

		[Token(Token = "0x4000866")]
		public const int Tap = 1;

		[Token(Token = "0x4000867")]
		public const int TouchStart = 2;

		[Token(Token = "0x4000868")]
		public const int TouchEnd = 13;

		[Token(Token = "0x4000869")]
		public const int Swipe = 3;

		[Token(Token = "0x400086A")]
		public const int SwipeBegin = 4;

		[Token(Token = "0x400086B")]
		public const int SwipeEnd = 5;

		[Token(Token = "0x400086C")]
		public const int Drag = 6;

		[Token(Token = "0x400086D")]
		public const int DragBegin = 7;

		[Token(Token = "0x400086E")]
		public const int DragEnd = 8;

		[Token(Token = "0x400086F")]
		public const int PinchBegin = 9;

		[Token(Token = "0x4000870")]
		public const int PinchIn = 10;

		[Token(Token = "0x4000871")]
		public const int PinchOut = 11;

		[Token(Token = "0x4000872")]
		public const int PinchEnd = 12;

		[Token(Token = "0x4000873")]
		public const int TouchUI = 14;

		[Token(Token = "0x4000874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static List<string> i2s;
	}
	[Token(Token = "0x20001EF")]
	public static class TouchLayerIndex__HAIBAO__SWORD__
	{
		[Token(Token = "0x4000875")]
		public const int None = -1;

		[Token(Token = "0x4000876")]
		public const int Guide = int.MinValue;

		[Token(Token = "0x4000877")]
		public const int TowerRange = 9000;

		[Token(Token = "0x4000878")]
		public const int Attacker = 10000;

		[Token(Token = "0x4000879")]
		public const int HeroSkillCast = 80000;

		[Token(Token = "0x400087A")]
		public const int PVPEdit = 88888;

		[Token(Token = "0x400087B")]
		public const int Camera = 90000;

		[Token(Token = "0x400087C")]
		public const int EditorGuideUtil = int.MinValue;
	}
	[Token(Token = "0x20001F0")]
	public class ButtonEx : Button
	{
		[Token(Token = "0x20003BF")]
		public class EventDataEvent : UnityEvent<PointerEventData>
		{
			[Token(Token = "0x6002D0D")]
			[Address(RVA = "0xD3BDD4", Offset = "0xD3BDD4", VA = "0xD3BDD4")]
			public EventDataEvent()
			{
			}
		}

		[Token(Token = "0x400087D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private EventDataEvent mOnPointerClick;

		[Token(Token = "0x400087E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private bool isDown;

		[Token(Token = "0x400087F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public UnityEvent onClickDown;

		[Token(Token = "0x4000880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public UnityEvent onClickUp;

		[Token(Token = "0x4000881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public UnityEvent onSubmit;

		[Token(Token = "0x4000882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public UnityEvent onPointEnter;

		[Token(Token = "0x4000883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public UnityEvent onPointExit;

		[Token(Token = "0x4000884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private string mName;

		[Token(Token = "0x170000C1")]
		public string Name
		{
			[Token(Token = "0x6001B84")]
			[Address(RVA = "0xD3BB04", Offset = "0xD3BB04", VA = "0xD3BB04")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B85")]
		[Address(RVA = "0xD3BB48", Offset = "0xD3BB48", VA = "0xD3BB48", Slot = "34")]
		public override void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001B86")]
		[Address(RVA = "0xD3BB90", Offset = "0xD3BB90", VA = "0xD3BB90", Slot = "35")]
		public override void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001B87")]
		[Address(RVA = "0xD3BBC4", Offset = "0xD3BBC4", VA = "0xD3BBC4", Slot = "32")]
		public override void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001B88")]
		[Address(RVA = "0xD3BC00", Offset = "0xD3BC00", VA = "0xD3BC00", Slot = "33")]
		public override void OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001B89")]
		[Address(RVA = "0xD3BC38", Offset = "0xD3BC38", VA = "0xD3BC38", Slot = "41")]
		public override void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001B8A")]
		[Address(RVA = "0xD3BCC0", Offset = "0xD3BCC0", VA = "0xD3BCC0")]
		public void AddListener(UnityAction call)
		{
		}

		[Token(Token = "0x6001B8B")]
		[Address(RVA = "0xD3BCDC", Offset = "0xD3BCDC", VA = "0xD3BCDC", Slot = "43")]
		public virtual void RemoveAllListeners()
		{
		}

		[Token(Token = "0x6001B8C")]
		[Address(RVA = "0xD3BD48", Offset = "0xD3BD48", VA = "0xD3BD48")]
		public void AddPointerClick(UnityAction<PointerEventData> action)
		{
		}

		[Token(Token = "0x6001B8D")]
		[Address(RVA = "0xD3BE24", Offset = "0xD3BE24", VA = "0xD3BE24")]
		public ButtonEx()
		{
		}
	}
	[Token(Token = "0x20001F1")]
	public class CanvasAutoScaler : MonoBehaviour
	{
		[Token(Token = "0x4000885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector2 referenceResolution;

		[Token(Token = "0x6001B8E")]
		[Address(RVA = "0xD3BF9C", Offset = "0xD3BF9C", VA = "0xD3BF9C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001B8F")]
		[Address(RVA = "0xD3C1D0", Offset = "0xD3C1D0", VA = "0xD3C1D0")]
		public CanvasAutoScaler()
		{
		}
	}
	[Token(Token = "0x20001F2")]
	public enum eImageType__HAIBAO__SWORD__
	{
		[Token(Token = "0x4000887")]
		Atlas,
		[Token(Token = "0x4000888")]
		Single,
		[Token(Token = "0x4000889")]
		Default
	}
	[Token(Token = "0x20001F3")]
	public class ImageEx : Image
	{
		[Token(Token = "0x400088A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public eImageType__HAIBAO__SWORD__ ImageType;

		[Token(Token = "0x400088B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		public bool IsLoading;

		[Token(Token = "0x400088C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFD")]
		public bool IsGray;

		[Token(Token = "0x400088D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFE")]
		public bool IsNull;

		[Token(Token = "0x400088E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private string mSpriteName;

		[Token(Token = "0x400088F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private string mSpriteNameInNotActive;

		[Token(Token = "0x4000890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Material mDefaultMat;

		[Token(Token = "0x4000891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public Material GrayMat;

		[Token(Token = "0x4000892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public ImageChangeMat mChangeMat;

		[Token(Token = "0x4000893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public bool IsMask;

		[Token(Token = "0x4000894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x129")]
		public bool IsChangeMat;

		[Token(Token = "0x4000895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private SpriteRef mSpriteRef;

		[Token(Token = "0x170000C2")]
		public string spriteName
		{
			[Token(Token = "0x6001B90")]
			[Address(RVA = "0xCA3BD0", Offset = "0xCA3BD0", VA = "0xCA3BD0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B91")]
			[Address(RVA = "0xCA3BD8", Offset = "0xCA3BD8", VA = "0xCA3BD8")]
			set
			{
			}
		}

		[Token(Token = "0x170000C3")]
		public Material DefaultMat
		{
			[Token(Token = "0x6001B92")]
			[Address(RVA = "0xCA3BE4", Offset = "0xCA3BE4", VA = "0xCA3BE4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B93")]
		[Address(RVA = "0xCA3BEC", Offset = "0xCA3BEC", VA = "0xCA3BEC")]
		public void SetDefaultMat(Material mat)
		{
		}

		[Token(Token = "0x6001B94")]
		[Address(RVA = "0xCA3C90", Offset = "0xCA3C90", VA = "0xCA3C90")]
		public void SyncDefaultMat()
		{
		}

		[Token(Token = "0x6001B95")]
		[Address(RVA = "0xCA3D3C", Offset = "0xCA3D3C", VA = "0xCA3D3C", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001B96")]
		[Address(RVA = "0xCA3DFC", Offset = "0xCA3DFC", VA = "0xCA3DFC")]
		public void UpdateChangeMat()
		{
		}

		[Token(Token = "0x6001B97")]
		[Address(RVA = "0xCA3EA0", Offset = "0xCA3EA0", VA = "0xCA3EA0")]
		public void SetAlpha(float alpha)
		{
		}

		[Token(Token = "0x6001B98")]
		[Address(RVA = "0xCA3F50", Offset = "0xCA3F50", VA = "0xCA3F50")]
		public void SetDefault()
		{
		}

		[Token(Token = "0x6001B99")]
		[Address(RVA = "0xCA3F70", Offset = "0xCA3F70", VA = "0xCA3F70")]
		public void SetNull()
		{
		}

		[Token(Token = "0x6001B9A")]
		[Address(RVA = "0xCA3FB8", Offset = "0xCA3FB8", VA = "0xCA3FB8", Slot = "44")]
		protected override void OnPopulateMesh(VertexHelper toFill)
		{
		}

		[Token(Token = "0x6001B9B")]
		[Address(RVA = "0xCA4070", Offset = "0xCA4070", VA = "0xCA4070", Slot = "58")]
		public override Material GetModifiedMaterial(Material baseMaterial)
		{
			return null;
		}

		[Token(Token = "0x6001B9C")]
		[Address(RVA = "0xCA4110", Offset = "0xCA4110", VA = "0xCA4110", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001B9D")]
		[Address(RVA = "0xCA415C", Offset = "0xCA415C", VA = "0xCA415C")]
		public SpriteRef GetSpriteRef()
		{
			return null;
		}

		[Token(Token = "0x6001B9E")]
		[Address(RVA = "0xCA425C", Offset = "0xCA425C", VA = "0xCA425C")]
		public void SetSpriteNameInNotActive(string name)
		{
		}

		[Token(Token = "0x6001B9F")]
		[Address(RVA = "0xCA4298", Offset = "0xCA4298", VA = "0xCA4298")]
		public ImageEx()
		{
		}
	}
	[Token(Token = "0x20001F4")]
	public class RawImageEx : RawImage
	{
		[Token(Token = "0x4000896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public int DownloadID;

		[Token(Token = "0x4000897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public bool IsNull;

		[Token(Token = "0x4000898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public string uri;

		[Token(Token = "0x4000899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public Action callback;

		[Token(Token = "0x6001BA0")]
		[Address(RVA = "0xCA9A18", Offset = "0xCA9A18", VA = "0xCA9A18", Slot = "44")]
		protected override void OnPopulateMesh(VertexHelper toFill)
		{
		}

		[Token(Token = "0x6001BA1")]
		[Address(RVA = "0xCA9AD0", Offset = "0xCA9AD0", VA = "0xCA9AD0")]
		public RawImageEx()
		{
		}
	}
	[Token(Token = "0x20001F5")]
	public class TextEx : Text
	{
		[Token(Token = "0x400089A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public bool IsHandleLow;

		[Token(Token = "0x6001BA2")]
		[Address(RVA = "0xCAE1D0", Offset = "0xCAE1D0", VA = "0xCAE1D0", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001BA3")]
		[Address(RVA = "0xCAE1D8", Offset = "0xCAE1D8", VA = "0xCAE1D8")]
		public TextEx()
		{
		}
	}
	[Token(Token = "0x20001F6")]
	public class ToggleEx : Toggle
	{
		[Token(Token = "0x6001BA4")]
		[Address(RVA = "0xCAE248", Offset = "0xCAE248", VA = "0xCAE248")]
		public ToggleEx()
		{
		}
	}
	[Token(Token = "0x20001F7")]
	public sealed class Json2LuaSerializer__HAIBAO__SWORD__
	{
		[Token(Token = "0x400089B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private StringBuilder builder;

		[Token(Token = "0x400089C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int rowSpaceLenght;

		[Token(Token = "0x6001BA5")]
		[Address(RVA = "0xCA4310", Offset = "0xCA4310", VA = "0xCA4310", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001BA6")]
		[Address(RVA = "0xC9BDE0", Offset = "0xC9BDE0", VA = "0xC9BDE0")]
		public void SerializeValue(object value)
		{
		}

		[Token(Token = "0x6001BA7")]
		[Address(RVA = "0xCA43B0", Offset = "0xCA43B0", VA = "0xCA43B0")]
		private void SerializeArray(IList anArray)
		{
		}

		[Token(Token = "0x6001BA8")]
		[Address(RVA = "0xCA46B4", Offset = "0xCA46B4", VA = "0xCA46B4")]
		private void SerializeObject(IDictionary obj)
		{
		}

		[Token(Token = "0x6001BA9")]
		[Address(RVA = "0xCA4B94", Offset = "0xCA4B94", VA = "0xCA4B94")]
		private void SerializeOther(object value)
		{
		}

		[Token(Token = "0x6001BAA")]
		[Address(RVA = "0xCA4DA0", Offset = "0xCA4DA0", VA = "0xCA4DA0")]
		private void appNewRow()
		{
		}

		[Token(Token = "0x6001BAB")]
		[Address(RVA = "0xCA4E3C", Offset = "0xCA4E3C", VA = "0xCA4E3C")]
		private int getKeyLenght(object obj, string key)
		{
			return default(int);
		}

		[Token(Token = "0x6001BAC")]
		[Address(RVA = "0xCA4330", Offset = "0xCA4330", VA = "0xCA4330")]
		private void SerializeString(string str)
		{
		}

		[Token(Token = "0x6001BAD")]
		[Address(RVA = "0xC9BD78", Offset = "0xC9BD78", VA = "0xC9BD78")]
		public Json2LuaSerializer__HAIBAO__SWORD__()
		{
		}
	}
	[Token(Token = "0x20001F8")]
	public class UtilClick__HAIBAO__SWORD__
	{
		[Token(Token = "0x400089D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool IsVaildClick;

		[Token(Token = "0x400089E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static DateTime lastClick;

		[Token(Token = "0x400089F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static float DelayTime;

		[Token(Token = "0x6001BAE")]
		[Address(RVA = "0xC26864", Offset = "0xC26864", VA = "0xC26864")]
		public static bool IsVaildTouch()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BAF")]
		[Address(RVA = "0xC269F0", Offset = "0xC269F0", VA = "0xC269F0")]
		public UtilClick__HAIBAO__SWORD__()
		{
		}
	}
	[Token(Token = "0x20001F9")]
	public class UtilMesh__HAIBAO__SWORD__
	{
		[Token(Token = "0x6001BB1")]
		[Address(RVA = "0xC26A5C", Offset = "0xC26A5C", VA = "0xC26A5C")]
		public static void AddCube(GameObject gameObject)
		{
		}

		[Token(Token = "0x6001BB2")]
		[Address(RVA = "0xC26A84", Offset = "0xC26A84", VA = "0xC26A84")]
		public static void AddCube(GameObject gameObject, Color c)
		{
		}

		[Token(Token = "0x6001BB3")]
		[Address(RVA = "0xC275B0", Offset = "0xC275B0", VA = "0xC275B0")]
		public UtilMesh__HAIBAO__SWORD__()
		{
		}
	}
	[Token(Token = "0x20001FA")]
	public class UtilSystem
	{
		[Token(Token = "0x6001BB4")]
		[Address(RVA = "0xC27638", Offset = "0xC27638", VA = "0xC27638")]
		public static bool IsHasNet()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BB5")]
		[Address(RVA = "0xC27658", Offset = "0xC27658", VA = "0xC27658")]
		public static bool IsHasWifi()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BB6")]
		[Address(RVA = "0xC27678", Offset = "0xC27678", VA = "0xC27678")]
		public static bool IsHas2_4_5G()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BB7")]
		[Address(RVA = "0xC27698", Offset = "0xC27698", VA = "0xC27698")]
		public UtilSystem()
		{
		}
	}
	[Token(Token = "0x20001FB")]
	public class ComPlayAudio : MonoBehaviour
	{
		[Token(Token = "0x40008A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int AudioID;

		[Token(Token = "0x40008A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool IsPlayOnEnable;

		[Token(Token = "0x40008A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x941CA4", Offset = "0x941CA4")]
		public float ChangeBg;

		[Token(Token = "0x40008A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float Delay;

		[Token(Token = "0x6001BB8")]
		[Address(RVA = "0xC0C900", Offset = "0xC0C900", VA = "0xC0C900")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001BB9")]
		[Address(RVA = "0xC0C984", Offset = "0xC0C984", VA = "0xC0C984")]
		public void PlayAudio()
		{
		}

		[Token(Token = "0x6001BBA")]
		[Address(RVA = "0xC0CA08", Offset = "0xC0CA08", VA = "0xC0CA08")]
		public ComPlayAudio()
		{
		}
	}
	[Token(Token = "0x20001FC")]
	public class CheckInsideItem : UIBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x20003C0")]
		public class Event : UnityEvent<bool>
		{
			[Token(Token = "0x6002D0E")]
			[Address(RVA = "0xD3C334", Offset = "0xD3C334", VA = "0xD3C334")]
			public Event()
			{
			}
		}

		[Token(Token = "0x40008A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject GOInsideActive;

		[Token(Token = "0x40008A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject GOOutsideActive;

		[Token(Token = "0x40008A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool IsInside;

		[Token(Token = "0x6001BBB")]
		[Address(RVA = "0xD3C220", Offset = "0xD3C220", VA = "0xD3C220", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001BBC")]
		[Address(RVA = "0xD3C228", Offset = "0xD3C228", VA = "0xD3C228")]
		public void SetIsInside(bool isInside)
		{
		}

		[Token(Token = "0x6001BBD")]
		[Address(RVA = "0xD3C31C", Offset = "0xD3C31C", VA = "0xD3C31C", Slot = "17")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001BBE")]
		[Address(RVA = "0xD3C324", Offset = "0xD3C324", VA = "0xD3C324", Slot = "18")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001BBF")]
		[Address(RVA = "0xD3C32C", Offset = "0xD3C32C", VA = "0xD3C32C")]
		public CheckInsideItem()
		{
		}
	}
	[Token(Token = "0x20001FD")]
	internal class CheckUIRaycast : MonoBehaviour
	{
		[Token(Token = "0x6001BC0")]
		[Address(RVA = "0xD3C384", Offset = "0xD3C384", VA = "0xD3C384")]
		public CheckUIRaycast()
		{
		}
	}
	[Token(Token = "0x20001FE")]
	public class DragButton : Button, IDragHandler, IEventSystemHandler
	{
		[Token(Token = "0x20003C1")]
		private enum DragState
		{
			[Token(Token = "0x4000FB5")]
			None,
			[Token(Token = "0x4000FB6")]
			In,
			[Token(Token = "0x4000FB7")]
			Out
		}

		[Token(Token = "0x20003C2")]
		public class DragEvent : UnityEvent<PointerEventData>
		{
			[Token(Token = "0x6002D0F")]
			[Address(RVA = "0xC11360", Offset = "0xC11360", VA = "0xC11360")]
			public DragEvent()
			{
			}
		}

		[Token(Token = "0x40008A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public UnityEvent onDragExit;

		[Token(Token = "0x40008A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public UnityEvent onDragEnter;

		[Token(Token = "0x40008A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public DragEvent onDragOutside;

		[Token(Token = "0x40008AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public DragEvent onDragInside;

		[Token(Token = "0x40008AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private bool _isPointerDown;

		[Token(Token = "0x40008AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private DragState _state;

		[Token(Token = "0x6001BC1")]
		[Address(RVA = "0xC11120", Offset = "0xC11120", VA = "0xC11120", Slot = "32")]
		public override void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001BC2")]
		[Address(RVA = "0xC1114C", Offset = "0xC1114C", VA = "0xC1114C", Slot = "33")]
		public override void OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001BC3")]
		[Address(RVA = "0xC11174", Offset = "0xC11174", VA = "0xC11174", Slot = "34")]
		public override void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001BC4")]
		[Address(RVA = "0xC111BC", Offset = "0xC111BC", VA = "0xC111BC", Slot = "35")]
		public override void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001BC5")]
		[Address(RVA = "0xC11204", Offset = "0xC11204", VA = "0xC11204", Slot = "44")]
		public virtual void OnDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001BC6")]
		[Address(RVA = "0xC112A8", Offset = "0xC112A8", VA = "0xC112A8")]
		public DragButton()
		{
		}
	}
	[Token(Token = "0x20001FF")]
	public class EnhancedScrollerControllerLua__HAIBAO__SWORD__ : IEnhancedScrollerDelegate__HAIBAO__SWORD__
	{
		[Token(Token = "0x40008AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private EnhancedScroller _target;

		[Token(Token = "0x40008AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string ResPath;

		[Token(Token = "0x40008AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LuaFunction _onInitFunc;

		[Token(Token = "0x40008B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private LuaFunction _onFillFunc;

		[Token(Token = "0x40008B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private LuaFunction _onAdjustPosFunc;

		[Token(Token = "0x40008B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float CellSize;

		[Token(Token = "0x40008B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int Count;

		[Token(Token = "0x40008B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float _adjustPosMin;

		[Token(Token = "0x40008B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float _adjustPosMax;

		[Token(Token = "0x6001BC7")]
		[Address(RVA = "0xC11A50", Offset = "0xC11A50", VA = "0xC11A50")]
		public EnhancedScrollerControllerLua__HAIBAO__SWORD__(EnhancedScroller scroller, string resPath, LuaFunction onInitFunc, LuaFunction onFillFunc)
		{
		}

		[Token(Token = "0x6001BC8")]
		[Address(RVA = "0xC11B48", Offset = "0xC11B48", VA = "0xC11B48")]
		private void _onScrolled(EnhancedScroller scroller, Vector2 val, float scrollPosition)
		{
		}

		[Token(Token = "0x6001BC9")]
		[Address(RVA = "0xC11BA0", Offset = "0xC11BA0", VA = "0xC11BA0")]
		public void OnCellInit(EnhancedScroller scroller, EnhancedScrollerCellView cellView)
		{
		}

		[Token(Token = "0x6001BCA")]
		[Address(RVA = "0xC11C40", Offset = "0xC11C40", VA = "0xC11C40")]
		public void SetData(int count)
		{
		}

		[Token(Token = "0x6001BCB")]
		[Address(RVA = "0xC11C68", Offset = "0xC11C68", VA = "0xC11C68")]
		public void JumpToIndex(int index)
		{
		}

		[Token(Token = "0x6001BCC")]
		[Address(RVA = "0xC11CA0", Offset = "0xC11CA0", VA = "0xC11CA0")]
		public void SetAdjustPosCall(LuaFunction call, float min, float max)
		{
		}

		[Token(Token = "0x6001BCD")]
		[Address(RVA = "0xC11CAC", Offset = "0xC11CAC", VA = "0xC11CAC", Slot = "6")]
		public EnhancedScrollerCellView GetCellView(EnhancedScroller scroller, int dataIndex, int cellIndex)
		{
			return null;
		}

		[Token(Token = "0x6001BCE")]
		[Address(RVA = "0xC11D78", Offset = "0xC11D78", VA = "0xC11D78", Slot = "5")]
		public float GetCellViewSize(EnhancedScroller scroller, int dataIndex)
		{
			return default(float);
		}

		[Token(Token = "0x6001BCF")]
		[Address(RVA = "0xC11D80", Offset = "0xC11D80", VA = "0xC11D80", Slot = "4")]
		public int GetNumberOfCells(EnhancedScroller scroller)
		{
			return default(int);
		}

		[Token(Token = "0x6001BD0")]
		[Address(RVA = "0xC11D88", Offset = "0xC11D88", VA = "0xC11D88")]
		internal void Clear()
		{
		}
	}
	[Token(Token = "0x2000200")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x93F218", Offset = "0x93F218")]
	public class GrayText : MonoBehaviour
	{
		[Token(Token = "0x40008B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Text comp;

		[Token(Token = "0x40008B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string originStr;

		[Token(Token = "0x40008B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool isGray;

		[Token(Token = "0x170000C4")]
		public Text Comp
		{
			[Token(Token = "0x6001BD1")]
			[Address(RVA = "0xCA03F0", Offset = "0xCA03F0", VA = "0xCA03F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C5")]
		public bool IsGray
		{
			[Token(Token = "0x6001BD2")]
			[Address(RVA = "0xC9C7F0", Offset = "0xC9C7F0", VA = "0xC9C7F0")]
			set
			{
			}
		}

		[Token(Token = "0x6001BD3")]
		[Address(RVA = "0xCA0494", Offset = "0xCA0494", VA = "0xCA0494")]
		public GrayText()
		{
		}
	}
	[Token(Token = "0x2000201")]
	public class LongPressButton : ButtonEx
	{
		[Token(Token = "0x40008B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public float PressTime;

		[Token(Token = "0x40008BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		public bool IsRepeatLongPress;

		[Token(Token = "0x40008BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public EventDataEvent onLongPress;

		[Token(Token = "0x40008BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public UnityEvent onLongPressUp;

		[Token(Token = "0x40008BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public UnityEvent onPressDown;

		[Token(Token = "0x40008BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public UnityEvent onPressUp;

		[Token(Token = "0x40008BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public UnityEvent onDownEnter;

		[Token(Token = "0x40008C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public UnityEvent onDownExit;

		[Token(Token = "0x40008C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public UnityEvent onNormalClick;

		[Token(Token = "0x40008C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private PointerEventData _currentEventData;

		[Token(Token = "0x40008C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private bool _isLongPressed;

		[Token(Token = "0x40008C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x189")]
		private bool _isDown;

		[Token(Token = "0x6001BD4")]
		[Address(RVA = "0xCA4E84", Offset = "0xCA4E84", VA = "0xCA4E84", Slot = "32")]
		public override void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001BD5")]
		[Address(RVA = "0xCA4F30", Offset = "0xCA4F30", VA = "0xCA4F30", Slot = "33")]
		public override void OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001BD6")]
		[Address(RVA = "0xCA4F58", Offset = "0xCA4F58", VA = "0xCA4F58")]
		private void _onUp()
		{
		}

		[Token(Token = "0x6001BD7")]
		[Address(RVA = "0xCA4FB4", Offset = "0xCA4FB4", VA = "0xCA4FB4", Slot = "41")]
		public override void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001BD8")]
		[Address(RVA = "0xCA4FF4", Offset = "0xCA4FF4", VA = "0xCA4FF4", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001BD9")]
		[Address(RVA = "0xCA4FFC", Offset = "0xCA4FFC", VA = "0xCA4FFC", Slot = "34")]
		public override void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001BDA")]
		[Address(RVA = "0xCA5044", Offset = "0xCA5044", VA = "0xCA5044", Slot = "35")]
		public override void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001BDB")]
		[Address(RVA = "0xCA508C", Offset = "0xCA508C", VA = "0xCA508C")]
		private void LongPress()
		{
		}

		[Token(Token = "0x6001BDC")]
		[Address(RVA = "0xCA50F0", Offset = "0xCA50F0", VA = "0xCA50F0")]
		private void OnApplicationFocus(bool focus)
		{
		}

		[Token(Token = "0x6001BDD")]
		[Address(RVA = "0xCA50F4", Offset = "0xCA50F4", VA = "0xCA50F4", Slot = "43")]
		public override void RemoveAllListeners()
		{
		}

		[Token(Token = "0x6001BDE")]
		[Address(RVA = "0xCA5188", Offset = "0xCA5188", VA = "0xCA5188")]
		public LongPressButton()
		{
		}
	}
	[Token(Token = "0x2000202")]
	public class SwordEventTrigger : UIBehaviour, IDragHandler, IEventSystemHandler, IBeginDragHandler, IEndDragHandler, IPointerDownHandler, IPointerUpHandler
	{
		[Token(Token = "0x40008C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ButtonEx.EventDataEvent onDrag;

		[Token(Token = "0x40008C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ButtonEx.EventDataEvent onDragBegin;

		[Token(Token = "0x40008C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ButtonEx.EventDataEvent onDragEnd;

		[Token(Token = "0x40008C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ButtonEx.EventDataEvent onDown;

		[Token(Token = "0x40008C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ButtonEx.EventDataEvent onUp;

		[Token(Token = "0x6001BDF")]
		[Address(RVA = "0xCAB9C8", Offset = "0xCAB9C8", VA = "0xCAB9C8", Slot = "18")]
		public void OnBeginDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001BE0")]
		[Address(RVA = "0xCABA30", Offset = "0xCABA30", VA = "0xCABA30", Slot = "19")]
		public void OnEndDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001BE1")]
		[Address(RVA = "0xCABA98", Offset = "0xCABA98", VA = "0xCABA98", Slot = "20")]
		public void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001BE2")]
		[Address(RVA = "0xCABB00", Offset = "0xCABB00", VA = "0xCABB00", Slot = "21")]
		public void OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001BE3")]
		[Address(RVA = "0xCABB68", Offset = "0xCABB68", VA = "0xCABB68", Slot = "17")]
		private void UnityEngine.EventSystems.IDragHandler.OnDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001BE4")]
		[Address(RVA = "0xCABBD0", Offset = "0xCABBD0", VA = "0xCABBD0")]
		public SwordEventTrigger()
		{
		}
	}
	[Token(Token = "0x2000203")]
	public class TextAnimEvent : MonoBehaviour
	{
		[Token(Token = "0x40008CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Text comp;

		[Token(Token = "0x170000C6")]
		public Text Comp
		{
			[Token(Token = "0x6001BE5")]
			[Address(RVA = "0xCAE104", Offset = "0xCAE104", VA = "0xCAE104")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BE6")]
		[Address(RVA = "0xCAE198", Offset = "0xCAE198", VA = "0xCAE198")]
		public void SetAliment(TextAnchor anchor)
		{
		}

		[Token(Token = "0x6001BE7")]
		[Address(RVA = "0xCAE1C8", Offset = "0xCAE1C8", VA = "0xCAE1C8")]
		public TextAnimEvent()
		{
		}
	}
	[Token(Token = "0x2000204")]
	public class TouchScreen : SBehaviourForUpdate
	{
		[Token(Token = "0x6001BE8")]
		[Address(RVA = "0xCAE424", Offset = "0xCAE424", VA = "0xCAE424", Slot = "6")]
		public override void DestroyMono()
		{
		}

		[Token(Token = "0x6001BE9")]
		[Address(RVA = "0xCAE428", Offset = "0xCAE428", VA = "0xCAE428", Slot = "7")]
		public override void OnFrame()
		{
		}

		[Token(Token = "0x6001BEA")]
		[Address(RVA = "0xCAE648", Offset = "0xCAE648", VA = "0xCAE648", Slot = "5")]
		protected override void InitMono()
		{
		}

		[Token(Token = "0x6001BEB")]
		[Address(RVA = "0xCAE64C", Offset = "0xCAE64C", VA = "0xCAE64C")]
		public TouchScreen()
		{
		}
	}
	[Token(Token = "0x2000205")]
	public class ImageChangeMat : MonoBehaviour
	{
		[Token(Token = "0x40008CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material Mat;

		[Token(Token = "0x6001BEC")]
		[Address(RVA = "0xCA3BC8", Offset = "0xCA3BC8", VA = "0xCA3BC8")]
		public ImageChangeMat()
		{
		}
	}
	[Token(Token = "0x2000206")]
	public class ScrollArrow : MonoBehaviour
	{
		[Token(Token = "0x40008CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ScrollRectEx rect;

		[Token(Token = "0x40008CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Image Arrow_Vetical;

		[Token(Token = "0x40008CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image Arrow_Horizontal;

		[Token(Token = "0x6001BED")]
		[Address(RVA = "0xCAB14C", Offset = "0xCAB14C", VA = "0xCAB14C")]
		public void Start()
		{
		}

		[Token(Token = "0x6001BEE")]
		[Address(RVA = "0xCAB210", Offset = "0xCAB210", VA = "0xCAB210")]
		public void OnValueChange(Vector2 value)
		{
		}

		[Token(Token = "0x6001BEF")]
		[Address(RVA = "0xCAB5D0", Offset = "0xCAB5D0", VA = "0xCAB5D0")]
		public ScrollArrow()
		{
		}
	}
	[Token(Token = "0x2000207")]
	internal class UGUIColor : MonoBehaviour
	{
		[Token(Token = "0x40008CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color Color;

		[Token(Token = "0x40008D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Material mat;

		[Token(Token = "0x6001BF0")]
		[Address(RVA = "0xC250EC", Offset = "0xC250EC", VA = "0xC250EC")]
		public void Update()
		{
		}

		[Token(Token = "0x6001BF1")]
		[Address(RVA = "0xC251BC", Offset = "0xC251BC", VA = "0xC251BC")]
		public UGUIColor()
		{
		}
	}
	[Token(Token = "0x2000208")]
	public class MaskEx : Mask
	{
		[Token(Token = "0x6001BF2")]
		[Address(RVA = "0xCA6874", Offset = "0xCA6874", VA = "0xCA6874", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001BF3")]
		[Address(RVA = "0xCA6918", Offset = "0xCA6918", VA = "0xCA6918")]
		public MaskEx()
		{
		}
	}
	[Token(Token = "0x2000209")]
	public class Rect2DMaskEx : RectMask2D
	{
		[Token(Token = "0x6001BF4")]
		[Address(RVA = "0xCA9AF0", Offset = "0xCA9AF0", VA = "0xCA9AF0")]
		public Rect2DMaskEx()
		{
		}
	}
	[Token(Token = "0x200020A")]
	public class TypewriterEffect : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20003C3")]
		public class OnFinishEvent : UnityEvent
		{
			[Token(Token = "0x6002D10")]
			[Address(RVA = "0xC25058", Offset = "0xC25058", VA = "0xC25058")]
			public OnFinishEvent()
			{
			}
		}

		[Token(Token = "0x40008D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public OnFinishEvent OnFinishCall;

		[Token(Token = "0x40008D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LuaFunction CallbackLua;

		[Token(Token = "0x40008D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float charsPerSecond;

		[Token(Token = "0x40008D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string words;

		[Token(Token = "0x40008D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool IsAutoPlay;

		[Token(Token = "0x40008D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool isActive;

		[Token(Token = "0x40008D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float timer;

		[Token(Token = "0x40008D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Text comText;

		[Token(Token = "0x40008D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private InlineText comIText;

		[Token(Token = "0x40008DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int currentPos;

		[Token(Token = "0x40008DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string MARK_START;

		[Token(Token = "0x40008DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly string MARK_END;

		[Token(Token = "0x40008DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly int MARK_END_LENGTH;

		[Token(Token = "0x40008DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int mStart;

		[Token(Token = "0x40008DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int mEnd;

		[Token(Token = "0x6001BF5")]
		[Address(RVA = "0xC24970", Offset = "0xC24970", VA = "0xC24970")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BF6")]
		[Address(RVA = "0xC249E0", Offset = "0xC249E0", VA = "0xC249E0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001BF7")]
		[Address(RVA = "0xC24BAC", Offset = "0xC24BAC", VA = "0xC24BAC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BF8")]
		[Address(RVA = "0xC24E64", Offset = "0xC24E64", VA = "0xC24E64")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001BF9")]
		[Address(RVA = "0xC249F4", Offset = "0xC249F4", VA = "0xC249F4")]
		[ExportToLuaAttrbute]
		public void PlayEffect(string txt)
		{
		}

		[Token(Token = "0x6001BFA")]
		[Address(RVA = "0xC24BB0", Offset = "0xC24BB0", VA = "0xC24BB0")]
		private void OnStartWriter()
		{
		}

		[Token(Token = "0x6001BFB")]
		[Address(RVA = "0xC24EB0", Offset = "0xC24EB0", VA = "0xC24EB0")]
		public void OnFinish()
		{
		}

		[Token(Token = "0x6001BFC")]
		[Address(RVA = "0xC24FE4", Offset = "0xC24FE4", VA = "0xC24FE4")]
		public TypewriterEffect()
		{
		}
	}
	[Token(Token = "0x200020B")]
	[DisallowMultipleComponent]
	public class UIDepth : UIBehaviour
	{
		[Token(Token = "0x40008E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int order;

		[Token(Token = "0x40008E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool isDynamicCalcOrder;

		[Token(Token = "0x40008E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int _guideOrder;

		[Token(Token = "0x40008E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		protected bool isUI;

		[Token(Token = "0x40008E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		protected bool _isOrigHasCavas;

		[Token(Token = "0x40008E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Canvas _canvas;

		[Token(Token = "0x40008E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected int _origCanvasOrder;

		[Token(Token = "0x40008E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Renderer[] _renders;

		[Token(Token = "0x40008E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected bool _isStarted;

		[Token(Token = "0x40008E9")]
		protected const int DefaultOrder = 0;

		[Token(Token = "0x40008EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool IsForceUseRender;

		[Token(Token = "0x40008EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		public bool IsNeedEvent;

		[Token(Token = "0x40008EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected GraphicRaycaster _raycaster;

		[Token(Token = "0x40008ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool mEnable;

		[Token(Token = "0x170000C7")]
		public int Order
		{
			[Token(Token = "0x6001BFE")]
			[Address(RVA = "0xC25AF4", Offset = "0xC25AF4", VA = "0xC25AF4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001BFF")]
			[Address(RVA = "0xC25B10", Offset = "0xC25B10", VA = "0xC25B10")]
			set
			{
			}
		}

		[Token(Token = "0x170000C8")]
		public bool IsDynamicCalcOrder
		{
			[Token(Token = "0x6001C00")]
			[Address(RVA = "0xC25B18", Offset = "0xC25B18", VA = "0xC25B18")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C01")]
			[Address(RVA = "0xC25B3C", Offset = "0xC25B3C", VA = "0xC25B3C")]
			set
			{
			}
		}

		[Token(Token = "0x6001C02")]
		[Address(RVA = "0xC25B48", Offset = "0xC25B48", VA = "0xC25B48")]
		private void InitCacheComponent()
		{
		}

		[Token(Token = "0x6001C03")]
		[Address(RVA = "0xC25D30", Offset = "0xC25D30", VA = "0xC25D30")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x9A70A0", Offset = "0x9A70A0")]
		public void TotalRefresh()
		{
		}

		[Token(Token = "0x6001C04")]
		[Address(RVA = "0xC25D64", Offset = "0xC25D64", VA = "0xC25D64", Slot = "17")]
		public virtual void ResetOrder(bool isAddDefaultOrder = false)
		{
		}

		[Token(Token = "0x6001C05")]
		[Address(RVA = "0xC25F48", Offset = "0xC25F48", VA = "0xC25F48", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001C06")]
		[Address(RVA = "0xC25F90", Offset = "0xC25F90", VA = "0xC25F90", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001C07")]
		[Address(RVA = "0xC26098", Offset = "0xC26098", VA = "0xC26098", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001C08")]
		[Address(RVA = "0xC2617C", Offset = "0xC2617C", VA = "0xC2617C", Slot = "8")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001C09")]
		[Address(RVA = "0xC262B8", Offset = "0xC262B8", VA = "0xC262B8")]
		public void SetEnable(bool enable)
		{
		}

		[Token(Token = "0x6001C0A")]
		[Address(RVA = "0xC262DC", Offset = "0xC262DC", VA = "0xC262DC")]
		public void SetGuideOrder(int order)
		{
		}

		[Token(Token = "0x6001C0B")]
		[Address(RVA = "0xC262F4", Offset = "0xC262F4", VA = "0xC262F4")]
		public void ClearGuideOrder()
		{
		}

		[Token(Token = "0x6001C0C")]
		[Address(RVA = "0xC26310", Offset = "0xC26310", VA = "0xC26310")]
		public UIDepth()
		{
		}
	}
	[Token(Token = "0x200020C")]
	public class UIDepthMgr : QSingleton<UIDepthMgr>
	{
		[Token(Token = "0x40008EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<UIDepth> mList;

		[Token(Token = "0x6001C0D")]
		[Address(RVA = "0xC26030", Offset = "0xC26030", VA = "0xC26030")]
		public void AddUIDepth(UIDepth uidepth)
		{
		}

		[Token(Token = "0x6001C0E")]
		[Address(RVA = "0xC26114", Offset = "0xC26114", VA = "0xC26114")]
		public void RemoveUIDepth(UIDepth uidepth)
		{
		}

		[Token(Token = "0x6001C0F")]
		[Address(RVA = "0xC2632C", Offset = "0xC2632C", VA = "0xC2632C")]
		public void ResetOrder()
		{
		}

		[Token(Token = "0x6001C10")]
		[Address(RVA = "0xC26478", Offset = "0xC26478", VA = "0xC26478")]
		public UIDepthMgr()
		{
		}
	}
	[Token(Token = "0x200020D")]
	[DisallowMultipleComponent]
	public class UIDepthOffset : UIDepth
	{
		[Token(Token = "0x6001C11")]
		[Address(RVA = "0xC26510", Offset = "0xC26510", VA = "0xC26510", Slot = "17")]
		public override void ResetOrder(bool isAddDefaultOrder = false)
		{
		}

		[Token(Token = "0x6001C12")]
		[Address(RVA = "0xC266F4", Offset = "0xC266F4", VA = "0xC266F4")]
		public UIDepthOffset()
		{
		}
	}
	[Token(Token = "0x200020E")]
	public class ComCacheDict__HAIBAO__SWORD__<T> where T : Component
	{
		[Token(Token = "0x40008EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<GameObject, T> _dict;

		[Token(Token = "0x6001C13")]
		public T GetCom(GameObject go)
		{
			return null;
		}

		[Token(Token = "0x6001C14")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001C15")]
		public ComCacheDict__HAIBAO__SWORD__()
		{
		}
	}
	[Token(Token = "0x200020F")]
	public class WheelActive : MonoBehaviour
	{
		[Token(Token = "0x20003C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940130", Offset = "0x940130")]
		private sealed class <_play>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000FB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000FB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000FBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int countPerRound;

			[Token(Token = "0x4000FBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int round;

			[Token(Token = "0x4000FBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int targetIndex;

			[Token(Token = "0x4000FBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int startIndex;

			[Token(Token = "0x4000FBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public WheelActive <>4__this;

			[Token(Token = "0x4000FBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public LuaFunction callAtOverIndex;

			[Token(Token = "0x4000FC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public LuaFunction callback;

			[Token(Token = "0x4000FC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <preRoundCount>5__2;

			[Token(Token = "0x4000FC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private int <totalIndex>5__3;

			[Token(Token = "0x4000FC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private int <curIndex>5__4;

			[Token(Token = "0x4000FC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private bool <isLastRound>5__5;

			[Token(Token = "0x4000FC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private int <fixedIndex>5__6;

			[Token(Token = "0x17000209")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002D14")]
				[Address(RVA = "0xC28194", Offset = "0xC28194", VA = "0xC28194", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700020A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002D16")]
				[Address(RVA = "0xC281FC", Offset = "0xC281FC", VA = "0xC281FC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002D11")]
			[Address(RVA = "0xC27D6C", Offset = "0xC27D6C", VA = "0xC27D6C")]
			[DebuggerHidden]
			public <_play>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6002D12")]
			[Address(RVA = "0xC27E54", Offset = "0xC27E54", VA = "0xC27E54", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002D13")]
			[Address(RVA = "0xC27E58", Offset = "0xC27E58", VA = "0xC27E58", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002D15")]
			[Address(RVA = "0xC2819C", Offset = "0xC2819C", VA = "0xC2819C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40008F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationCurve _curve;

		[Token(Token = "0x40008F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<GameObject> _listMoveEffect;

		[Token(Token = "0x40008F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<GameObject> _listOverEffect;

		[Token(Token = "0x40008F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<GameObject> _listAnotherOverEffect;

		[Token(Token = "0x40008F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float MaxTime;

		[Token(Token = "0x40008F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float MinTime;

		[Token(Token = "0x40008F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float TimeAfterEnd;

		[Token(Token = "0x6001C16")]
		[Address(RVA = "0xC276A0", Offset = "0xC276A0", VA = "0xC276A0")]
		internal void Test()
		{
		}

		[Token(Token = "0x6001C17")]
		[Address(RVA = "0xC27974", Offset = "0xC27974", VA = "0xC27974")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C18")]
		[Address(RVA = "0xC276BC", Offset = "0xC276BC", VA = "0xC276BC")]
		public void PlayAnimation(int startIndex, int targetIndex, int round, int countPerRound, LuaFunction callback, LuaFunction callAtOverIndex)
		{
		}

		[Token(Token = "0x6001C19")]
		[Address(RVA = "0xC27CC0", Offset = "0xC27CC0", VA = "0xC27CC0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A70D8", Offset = "0x9A70D8")]
		public IEnumerator _play(int startIndex, int targetIndex, int round, int countPerRound, LuaFunction callback, LuaFunction callAtOverIndex)
		{
			return null;
		}

		[Token(Token = "0x6001C1A")]
		[Address(RVA = "0xC27CB8", Offset = "0xC27CB8", VA = "0xC27CB8")]
		public void StopAnim()
		{
		}

		[Token(Token = "0x6001C1B")]
		[Address(RVA = "0xC27D98", Offset = "0xC27D98", VA = "0xC27D98")]
		public WheelActive()
		{
		}
	}
	[Token(Token = "0x2000210")]
	public class ShaderLoader : SingletonMonoBehaviour<ShaderLoader>
	{
		[Token(Token = "0x40008F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Shader[] Shaders;

		[Token(Token = "0x6001C1C")]
		[Address(RVA = "0xCAB5D8", Offset = "0xCAB5D8", VA = "0xCAB5D8")]
		public ShaderLoader()
		{
		}

		[Token(Token = "0x6001C1D")]
		[Address(RVA = "0xCAB628", Offset = "0xCAB628", VA = "0xCAB628")]
		public Shader GetShader(string name)
		{
			return null;
		}
	}
	[Token(Token = "0x2000211")]
	public class ArtAnimation : SBehaviour
	{
		[Token(Token = "0x40008F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string Name;

		[Token(Token = "0x6001C1E")]
		[Address(RVA = "0xD37E5C", Offset = "0xD37E5C", VA = "0xD37E5C", Slot = "5")]
		protected override void InitMono()
		{
		}

		[Token(Token = "0x6001C1F")]
		[Address(RVA = "0xD37E60", Offset = "0xD37E60", VA = "0xD37E60", Slot = "6")]
		public override void DestroyMono()
		{
		}

		[Token(Token = "0x6001C20")]
		[Address(RVA = "0xD37E64", Offset = "0xD37E64", VA = "0xD37E64")]
		public void OnGUI()
		{
		}

		[Token(Token = "0x6001C21")]
		[Address(RVA = "0xD37FF4", Offset = "0xD37FF4", VA = "0xD37FF4")]
		public ArtAnimation()
		{
		}
	}
	[Token(Token = "0x2000212")]
	public class SwordVoice : SingletonMonoBehaviour<SwordVoice>
	{
		[Token(Token = "0x20003C5")]
		private enum eState
		{
			[Token(Token = "0x4000FC7")]
			None,
			[Token(Token = "0x4000FC8")]
			Inited,
			[Token(Token = "0x4000FC9")]
			AfterFirstPool,
			[Token(Token = "0x4000FCA")]
			Start,
			[Token(Token = "0x4000FCB")]
			Stop
		}

		[Token(Token = "0x20003C6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940140", Offset = "0x940140")]
		private sealed class <_startInit>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000FCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000FCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000FCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SwordVoice <>4__this;

			[Token(Token = "0x1700020B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002D1A")]
				[Address(RVA = "0xCADBF0", Offset = "0xCADBF0", VA = "0xCADBF0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700020C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002D1C")]
				[Address(RVA = "0xCADC58", Offset = "0xCADC58", VA = "0xCADC58", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002D17")]
			[Address(RVA = "0xCAC150", Offset = "0xCAC150", VA = "0xCAC150")]
			[DebuggerHidden]
			public <_startInit>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x6002D18")]
			[Address(RVA = "0xCAD8C8", Offset = "0xCAD8C8", VA = "0xCAD8C8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002D19")]
			[Address(RVA = "0xCAD8CC", Offset = "0xCAD8CC", VA = "0xCAD8CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002D1B")]
			[Address(RVA = "0xCADBF8", Offset = "0xCADBF8", VA = "0xCADBF8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40008F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string _appID;

		[Token(Token = "0x40008FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string _appKey;

		[Token(Token = "0x40008FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string _openID;

		[Token(Token = "0x40008FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private LuaTable _luaVoiceMgr;

		[Token(Token = "0x40008FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int MaxMessageLen;

		[Token(Token = "0x40008FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int UpLoadWaitTime;

		[Token(Token = "0x40008FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int DownLoadWaitTime;

		[Token(Token = "0x4000900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Dictionary<string, string> _dictID2Path;

		[Token(Token = "0x4000901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int volume;

		[Token(Token = "0x4000902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private string FilePath;

		[Token(Token = "0x4000903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _timer;

		[Token(Token = "0x4000904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public IGCloudVoice m_voiceengine;

		[Token(Token = "0x4000905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool _isAddedCall;

		[Token(Token = "0x4000906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		private bool isNeedSend;

		[Token(Token = "0x4000907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private eState _state;

		[Token(Token = "0x4000908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Dictionary<string, string> _dictPath2Text;

		[Token(Token = "0x170000C9")]
		public int Volume
		{
			[Token(Token = "0x6001C22")]
			[Address(RVA = "0xCABCA0", Offset = "0xCABCA0", VA = "0xCABCA0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001C23")]
			[Address(RVA = "0xCABCA8", Offset = "0xCABCA8", VA = "0xCABCA8")]
			set
			{
			}
		}

		[Token(Token = "0x6001C24")]
		[Address(RVA = "0xCABD54", Offset = "0xCABD54", VA = "0xCABD54")]
		public void Init(string openID, string appID, string appKey, LuaTable luaVoiceMgr)
		{
		}

		[Token(Token = "0x6001C25")]
		[Address(RVA = "0xCAC0E0", Offset = "0xCAC0E0", VA = "0xCAC0E0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A713C", Offset = "0x9A713C")]
		private IEnumerator _startInit()
		{
			return null;
		}

		[Token(Token = "0x6001C26")]
		[Address(RVA = "0xCAC17C", Offset = "0xCAC17C", VA = "0xCAC17C")]
		private void _addCall()
		{
		}

		[Token(Token = "0x6001C27")]
		[Address(RVA = "0xCABEB8", Offset = "0xCABEB8", VA = "0xCABEB8")]
		private void _clear()
		{
		}

		[Token(Token = "0x6001C28")]
		[Address(RVA = "0xCAC448", Offset = "0xCAC448", VA = "0xCAC448")]
		public void ApplyMessageLenCallBack(GCloudVoiceCompleteCode code)
		{
		}

		[Token(Token = "0x6001C29")]
		[Address(RVA = "0xCAC44C", Offset = "0xCAC44C", VA = "0xCAC44C")]
		public void UploadReccordFileCompletehandler(GCloudVoiceCompleteCode code, string filePath, string fileID)
		{
		}

		[Token(Token = "0x6001C2A")]
		[Address(RVA = "0xCAC558", Offset = "0xCAC558", VA = "0xCAC558")]
		public void DownloadRecordFileCompletehandler(GCloudVoiceCompleteCode code, string filePath, string fileID)
		{
		}

		[Token(Token = "0x6001C2B")]
		[Address(RVA = "0xCAC644", Offset = "0xCAC644", VA = "0xCAC644")]
		public void PlayRecordFilCompletehandler(GCloudVoiceCompleteCode code, string filePath)
		{
		}

		[Token(Token = "0x6001C2C")]
		[Address(RVA = "0xCAC704", Offset = "0xCAC704", VA = "0xCAC704")]
		public void SpeechToTextCallBack(GCloudVoiceCompleteCode code, string fileID, string result)
		{
		}

		[Token(Token = "0x6001C2D")]
		[Address(RVA = "0xCAC84C", Offset = "0xCAC84C", VA = "0xCAC84C")]
		public void SpeechToTextCallBackRTTS(GCloudVoiceCompleteCode code, int error, string result, string voicePath)
		{
		}

		[Token(Token = "0x6001C2E")]
		[Address(RVA = "0xCAC9C0", Offset = "0xCAC9C0", VA = "0xCAC9C0")]
		public string StartRecording()
		{
			return null;
		}

		[Token(Token = "0x6001C2F")]
		[Address(RVA = "0xCACDF4", Offset = "0xCACDF4", VA = "0xCACDF4")]
		public void StopRecording(string path)
		{
		}

		[Token(Token = "0x6001C30")]
		[Address(RVA = "0xCACE70", Offset = "0xCACE70", VA = "0xCACE70")]
		public void UploadRecordedFile(string path)
		{
		}

		[Token(Token = "0x6001C31")]
		[Address(RVA = "0xCAC93C", Offset = "0xCAC93C", VA = "0xCAC93C")]
		private void _uploadFile(string path)
		{
		}

		[Token(Token = "0x6001C32")]
		[Address(RVA = "0xCACE88", Offset = "0xCACE88", VA = "0xCACE88")]
		public string DownloadRecordedFile(string fileID)
		{
			return null;
		}

		[Token(Token = "0x6001C33")]
		[Address(RVA = "0xCAD0AC", Offset = "0xCAD0AC", VA = "0xCAD0AC")]
		public void PlayRecordedFile(string path)
		{
		}

		[Token(Token = "0x6001C34")]
		[Address(RVA = "0xCAD12C", Offset = "0xCAD12C", VA = "0xCAD12C")]
		public void StopPlay()
		{
		}

		[Token(Token = "0x6001C35")]
		[Address(RVA = "0xCAD150", Offset = "0xCAD150", VA = "0xCAD150")]
		public void VoiceToChianese(string fileID)
		{
		}

		[Token(Token = "0x6001C36")]
		[Address(RVA = "0xCAD35C", Offset = "0xCAD35C", VA = "0xCAD35C")]
		public int GetFileSecond(string path)
		{
			return default(int);
		}

		[Token(Token = "0x6001C37")]
		[Address(RVA = "0xCAD4D0", Offset = "0xCAD4D0", VA = "0xCAD4D0")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x6001C38")]
		[Address(RVA = "0xCAD5AC", Offset = "0xCAD5AC", VA = "0xCAD5AC")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x6001C39")]
		[Address(RVA = "0xCAD6B4", Offset = "0xCAD6B4", VA = "0xCAD6B4")]
		protected void _OnFrame(object data)
		{
		}

		[Token(Token = "0x6001C3A")]
		[Address(RVA = "0xCAD734", Offset = "0xCAD734", VA = "0xCAD734")]
		private void OnFrame()
		{
		}

		[Token(Token = "0x6001C3B")]
		[Address(RVA = "0xCAD790", Offset = "0xCAD790", VA = "0xCAD790")]
		public float GetVolumnPercent()
		{
			return default(float);
		}

		[Token(Token = "0x6001C3C")]
		[Address(RVA = "0xCABCB0", Offset = "0xCABCB0", VA = "0xCABCB0")]
		public void SetSpeakerVolume(int value)
		{
		}

		[Token(Token = "0x6001C3D")]
		[Address(RVA = "0xCACBD4", Offset = "0xCACBD4", VA = "0xCACBD4")]
		private void LogErrorCode(string prefix, GCloudVoiceCompleteCode code)
		{
		}

		[Token(Token = "0x6001C3E")]
		[Address(RVA = "0xCAC394", Offset = "0xCAC394", VA = "0xCAC394")]
		private void _setState(eState state)
		{
		}

		[Token(Token = "0x6001C3F")]
		[Address(RVA = "0xCAD7FC", Offset = "0xCAD7FC", VA = "0xCAD7FC")]
		public SwordVoice()
		{
		}
	}
}
namespace Sword.vr
{
	[Token(Token = "0x2000213")]
	public class VR_CameraFollow : MonoBehaviour
	{
		[Token(Token = "0x4000909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera follow;

		[Token(Token = "0x400090A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Camera currentCamera;

		[Token(Token = "0x6001C40")]
		[Address(RVA = "0xC28204", Offset = "0xC28204", VA = "0xC28204")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C41")]
		[Address(RVA = "0xC2826C", Offset = "0xC2826C", VA = "0xC2826C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C42")]
		[Address(RVA = "0xC283C4", Offset = "0xC283C4", VA = "0xC283C4")]
		public VR_CameraFollow()
		{
		}
	}
	[Token(Token = "0x2000214")]
	internal class VR_CameraToRenderTexture : MonoBehaviour
	{
		[Token(Token = "0x400090B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Camera currentCamera;

		[Token(Token = "0x400090C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RawImageEx rawImage;

		[Token(Token = "0x400090D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RenderTexture renderTexture;

		[Token(Token = "0x6001C43")]
		[Address(RVA = "0xC283CC", Offset = "0xC283CC", VA = "0xC283CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C44")]
		[Address(RVA = "0xC28544", Offset = "0xC28544", VA = "0xC28544")]
		public VR_CameraToRenderTexture()
		{
		}
	}
	[Token(Token = "0x2000215")]
	internal class VR_Debug : SingletonMonoBehaviour<VR_Debug>
	{
		[Token(Token = "0x400090E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Text text;

		[Token(Token = "0x6001C45")]
		[Address(RVA = "0xC2854C", Offset = "0xC2854C", VA = "0xC2854C")]
		public void Debug(string str)
		{
		}

		[Token(Token = "0x6001C46")]
		[Address(RVA = "0xC2864C", Offset = "0xC2864C", VA = "0xC2864C")]
		public VR_Debug()
		{
		}
	}
	[Token(Token = "0x2000216")]
	internal class VR_OVRSetting : MonoBehaviour
	{
		[Token(Token = "0x6001C47")]
		[Address(RVA = "0xC2869C", Offset = "0xC2869C", VA = "0xC2869C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C48")]
		[Address(RVA = "0xC28704", Offset = "0xC28704", VA = "0xC28704")]
		public VR_OVRSetting()
		{
		}
	}
}
namespace Sword.UI
{
	[Token(Token = "0x2000217")]
	public interface UIPoolableData
	{
	}
}
namespace Sword.BigDownload
{
	[Token(Token = "0x2000218")]
	public class BigDownloadDemo : MonoBehaviour
	{
		[Token(Token = "0x400090F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text text;

		[Token(Token = "0x4000910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Downloader dl;

		[Token(Token = "0x4000911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public VideoPlayer vp;

		[Token(Token = "0x4000912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MediaPlayer mp;

		[Token(Token = "0x4000913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string videoName;

		[Token(Token = "0x4000914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string org_videoName;

		[Token(Token = "0x6001C49")]
		[Address(RVA = "0xD3A248", Offset = "0xD3A248", VA = "0xD3A248")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C4A")]
		[Address(RVA = "0xD3A33C", Offset = "0xD3A33C", VA = "0xD3A33C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C4B")]
		[Address(RVA = "0xD3A59C", Offset = "0xD3A59C", VA = "0xD3A59C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001C4C")]
		[Address(RVA = "0xD3A6B0", Offset = "0xD3A6B0", VA = "0xD3A6B0")]
		private void DownloadFinish(int state, string url, string toFile, string md5)
		{
		}

		[Token(Token = "0x6001C4D")]
		[Address(RVA = "0xD3A898", Offset = "0xD3A898", VA = "0xD3A898")]
		private void download()
		{
		}

		[Token(Token = "0x6001C4E")]
		[Address(RVA = "0xD3AA48", Offset = "0xD3AA48", VA = "0xD3AA48")]
		private string ToFile(string name)
		{
			return null;
		}

		[Token(Token = "0x6001C4F")]
		[Address(RVA = "0xD3ABDC", Offset = "0xD3ABDC", VA = "0xD3ABDC")]
		public BigDownloadDemo()
		{
		}
	}
	[Token(Token = "0x2000219")]
	public class BigDownloadMgr : MonoBehaviour
	{
		[Token(Token = "0x4000915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static BigDownloadMgr mInstance;

		[Token(Token = "0x4000916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Downloader dl;

		[Token(Token = "0x170000CA")]
		public static BigDownloadMgr Instance
		{
			[Token(Token = "0x6001C50")]
			[Address(RVA = "0xD3AC44", Offset = "0xD3AC44", VA = "0xD3AC44")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C51")]
		[Address(RVA = "0xD3AD78", Offset = "0xD3AD78", VA = "0xD3AD78")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C52")]
		[Address(RVA = "0xD3ADD4", Offset = "0xD3ADD4", VA = "0xD3ADD4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C53")]
		[Address(RVA = "0xD3ADEC", Offset = "0xD3ADEC", VA = "0xD3ADEC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001C54")]
		[Address(RVA = "0xD3AE04", Offset = "0xD3AE04", VA = "0xD3AE04")]
		public void Download(string url, string toFile, string md5, OnDownloadCallback callback)
		{
		}

		[Token(Token = "0x6001C55")]
		[Address(RVA = "0xD3AE1C", Offset = "0xD3AE1C", VA = "0xD3AE1C")]
		public BigDownloadMgr()
		{
		}
	}
	[Token(Token = "0x200021A")]
	internal enum eDownloadEndState
	{
		[Token(Token = "0x4000918")]
		sucess,
		[Token(Token = "0x4000919")]
		fail,
		[Token(Token = "0x400091A")]
		MD5Error
	}
	[Token(Token = "0x200021B")]
	internal class DownloadThread
	{
		[Token(Token = "0x400091B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Thread thread;

		[Token(Token = "0x400091C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _isStop;

		[Token(Token = "0x400091D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _isEnd;

		[Token(Token = "0x400091E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		private bool _isRunning;

		[Token(Token = "0x400091F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private DownloadInfo _info;

		[Token(Token = "0x4000920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private eDownloadEndState State;

		[Token(Token = "0x4000921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x941CDC", Offset = "0x941CDC")]
		private float <progress>k__BackingField;

		[Token(Token = "0x170000CB")]
		public float progress
		{
			[Token(Token = "0x6001C57")]
			[Address(RVA = "0xD3AE40", Offset = "0xD3AE40", VA = "0xD3AE40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A71A0", Offset = "0x9A71A0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C58")]
			[Address(RVA = "0xD3AE48", Offset = "0xD3AE48", VA = "0xD3AE48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A71B0", Offset = "0x9A71B0")]
			private set
			{
			}
		}

		[Token(Token = "0x170000CC")]
		public bool IsEnd
		{
			[Token(Token = "0x6001C5B")]
			[Address(RVA = "0xD3B24C", Offset = "0xD3B24C", VA = "0xD3B24C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000CD")]
		public bool IsFinish
		{
			[Token(Token = "0x6001C5C")]
			[Address(RVA = "0xD3B254", Offset = "0xD3B254", VA = "0xD3B254")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000CE")]
		private string ToTempFile
		{
			[Token(Token = "0x6001C5E")]
			[Address(RVA = "0xD3B28C", Offset = "0xD3B28C", VA = "0xD3B28C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C59")]
		[Address(RVA = "0xD3AE50", Offset = "0xD3AE50", VA = "0xD3AE50")]
		public void Download(DownloadInfo info, OnDownloadCallback callback)
		{
		}

		[Token(Token = "0x6001C5A")]
		[Address(RVA = "0xD3B240", Offset = "0xD3B240", VA = "0xD3B240")]
		public void Stop()
		{
		}

		[Token(Token = "0x6001C5D")]
		[Address(RVA = "0xD3B26C", Offset = "0xD3B26C", VA = "0xD3B26C")]
		public void CallEnd()
		{
		}

		[Token(Token = "0x6001C5F")]
		[Address(RVA = "0xD3B2E0", Offset = "0xD3B2E0", VA = "0xD3B2E0")]
		private void Run()
		{
		}

		[Token(Token = "0x6001C60")]
		[Address(RVA = "0xD3BA1C", Offset = "0xD3BA1C", VA = "0xD3BA1C")]
		private void UpdateProgress(long fileLength, long totalLength)
		{
		}

		[Token(Token = "0x6001C61")]
		[Address(RVA = "0xD3B8D0", Offset = "0xD3B8D0", VA = "0xD3B8D0")]
		private long GetLength(string _fileUrl)
		{
			return default(long);
		}

		[Token(Token = "0x6001C62")]
		[Address(RVA = "0xD3BA3C", Offset = "0xD3BA3C", VA = "0xD3BA3C")]
		public DownloadThread()
		{
		}
	}
	[Token(Token = "0x200021C")]
	public delegate void OnDownloadCallback(int state, string url, string toFile, string md5);
	[Token(Token = "0x200021D")]
	public struct DownloadInfo
	{
		[Token(Token = "0x4000922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string URL;

		[Token(Token = "0x4000923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string ToFile;

		[Token(Token = "0x4000924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnDownloadCallback Callback;

		[Token(Token = "0x4000925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string MD5;

		[Token(Token = "0x6001C67")]
		[Address(RVA = "0xD3AE28", Offset = "0xD3AE28", VA = "0xD3AE28")]
		public DownloadInfo(string url, string toFile, string md5, OnDownloadCallback callback)
		{
		}

		[Token(Token = "0x6001C68")]
		[Address(RVA = "0xD3AE34", Offset = "0xD3AE34", VA = "0xD3AE34")]
		public DownloadInfo(string url, string toFile, OnDownloadCallback callback)
		{
		}
	}
	[Token(Token = "0x200021E")]
	public class Downloader
	{
		[Token(Token = "0x4000926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Queue<DownloadInfo> _downloadQueue;

		[Token(Token = "0x4000927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<string, DownloadThread> _downloading;

		[Token(Token = "0x4000928")]
		private const int max = 5;

		[Token(Token = "0x6001C69")]
		[Address(RVA = "0xD3AB50", Offset = "0xD3AB50", VA = "0xD3AB50")]
		public void Download(string url, string toFile, OnDownloadCallback callback)
		{
		}

		[Token(Token = "0x6001C6A")]
		[Address(RVA = "0xD3AAC0", Offset = "0xD3AAC0", VA = "0xD3AAC0")]
		public void Download(string url, string toFile, string md5, OnDownloadCallback callback)
		{
		}

		[Token(Token = "0x6001C6B")]
		[Address(RVA = "0xD3A354", Offset = "0xD3A354", VA = "0xD3A354")]
		public void Update()
		{
		}

		[Token(Token = "0x6001C6C")]
		[Address(RVA = "0xD3A5B4", Offset = "0xD3A5B4", VA = "0xD3A5B4")]
		public void Destory()
		{
		}

		[Token(Token = "0x6001C6D")]
		[Address(RVA = "0xD3A2A4", Offset = "0xD3A2A4", VA = "0xD3A2A4")]
		public Downloader()
		{
		}
	}
}
namespace Sword.Res
{
	[Token(Token = "0x200021F")]
	public class ResourcesMgr__HAIBAO__SWORD__ : IResourceLoader
	{
		[Token(Token = "0x4000929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<string, string> fileNameToNewFileNameInStreamAsseting;

		[Token(Token = "0x6001C6E")]
		[Address(RVA = "0xCA9AF8", Offset = "0xCA9AF8", VA = "0xCA9AF8")]
		private string GetResourcePath(string path)
		{
			return null;
		}

		[Token(Token = "0x6001C6F")]
		[Address(RVA = "0xCA9B00", Offset = "0xCA9B00", VA = "0xCA9B00", Slot = "4")]
		public Resource Load(string path)
		{
			return null;
		}

		[Token(Token = "0x6001C70")]
		[Address(RVA = "0xCA9BDC", Offset = "0xCA9BDC", VA = "0xCA9BDC", Slot = "5")]
		public void LoadAsyncAsset(string path, LoadHandler handler, object datas)
		{
		}

		[Token(Token = "0x6001C71")]
		[Address(RVA = "0xCA9CD4", Offset = "0xCA9CD4", VA = "0xCA9CD4", Slot = "6")]
		public void LoadAsyncAssetByFileType(string path, short type, LoadHandler handler, object datas)
		{
		}

		[Token(Token = "0x6001C72")]
		[Address(RVA = "0xCA9DDC", Offset = "0xCA9DDC", VA = "0xCA9DDC", Slot = "7")]
		public string LoadText(string path)
		{
			return null;
		}

		[Token(Token = "0x6001C73")]
		[Address(RVA = "0xCA9EBC", Offset = "0xCA9EBC", VA = "0xCA9EBC", Slot = "8")]
		public void LoadAsyncAssetsByArray(string[] assets, LoadHandlers handler, object obj)
		{
		}

		[Token(Token = "0x6001C74")]
		[Address(RVA = "0xCA9FB4", Offset = "0xCA9FB4", VA = "0xCA9FB4", Slot = "9")]
		public void LoadAsyncAssetsByList(List<string> assets, LoadHandlers handler, object o)
		{
		}

		[Token(Token = "0x6001C75")]
		[Address(RVA = "0xCAA0AC", Offset = "0xCAA0AC", VA = "0xCAA0AC", Slot = "10")]
		public byte[] LoadBytes(string path)
		{
			return null;
		}

		[Token(Token = "0x6001C76")]
		[Address(RVA = "0xCAA18C", Offset = "0xCAA18C", VA = "0xCAA18C", Slot = "11")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001C77")]
		[Address(RVA = "0xCAA264", Offset = "0xCAA264", VA = "0xCAA264", Slot = "12")]
		public void ReleaseScene(string resPath)
		{
		}

		[Token(Token = "0x6001C78")]
		[Address(RVA = "0xCAA344", Offset = "0xCAA344", VA = "0xCAA344")]
		public bool IsHasIcon(string resPath)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C79")]
		[Address(RVA = "0xCAA3F8", Offset = "0xCAA3F8", VA = "0xCAA3F8")]
		public static string LoadAbfixJson(bool isEncrypted)
		{
			return null;
		}

		[Token(Token = "0x6001C7A")]
		[Address(RVA = "0xCAA564", Offset = "0xCAA564", VA = "0xCAA564")]
		public static void Load()
		{
		}

		[Token(Token = "0x6001C7B")]
		[Address(RVA = "0xCAA848", Offset = "0xCAA848", VA = "0xCAA848")]
		public static string GetStreamAssetingPath(string path)
		{
			return null;
		}

		[Token(Token = "0x6001C7C")]
		[Address(RVA = "0xC9F930", Offset = "0xC9F930", VA = "0xC9F930")]
		public ResourcesMgr__HAIBAO__SWORD__()
		{
		}
	}
}
namespace Sword.Guide
{
	[Token(Token = "0x2000220")]
	public enum eGuideUIType
	{
		[Token(Token = "0x400092B")]
		Button = 1,
		[Token(Token = "0x400092C")]
		Toggle
	}
	[Token(Token = "0x2000221")]
	public class GuideMgr : QSingleton<GuideMgr>
	{
		[Token(Token = "0x20003C7")]
		private enum eGuideState
		{
			[Token(Token = "0x4000FD0")]
			Stop = 1,
			[Token(Token = "0x4000FD1")]
			Step,
			[Token(Token = "0x4000FD2")]
			Normal,
			[Token(Token = "0x4000FD3")]
			CheckCondition
		}

		[Token(Token = "0x20003C8")]
		[NoToLua]
		public static class eSearchType
		{
			[Token(Token = "0x4000FD4")]
			public const int GLOBAL = 0;

			[Token(Token = "0x4000FD5")]
			public const int UI_BTN = 1;

			[Token(Token = "0x4000FD6")]
			public const int SCENE = 2;

			[Token(Token = "0x4000FD7")]
			public const int UI_LONG_PRESS_BTN = 3;
		}

		[Token(Token = "0x20003C9")]
		[NoToLua]
		public class GuideDragData : IPoolableObject
		{
			[Token(Token = "0x4000FD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject GO;

			[Token(Token = "0x4000FD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public PointerEventData Data;

			[Token(Token = "0x6002D1D")]
			[Address(RVA = "0xCA3B68", Offset = "0xCA3B68", VA = "0xCA3B68", Slot = "7")]
			public void Delete()
			{
			}

			[Token(Token = "0x6002D1E")]
			[Address(RVA = "0xCA3B6C", Offset = "0xCA3B6C", VA = "0xCA3B6C", Slot = "8")]
			public string GetPoolType()
			{
				return null;
			}

			[Token(Token = "0x6002D1F")]
			[Address(RVA = "0xCA3BB4", Offset = "0xCA3BB4", VA = "0xCA3BB4", Slot = "4")]
			public void InitPoolable(object data)
			{
			}

			[Token(Token = "0x6002D20")]
			[Address(RVA = "0xCA3BB8", Offset = "0xCA3BB8", VA = "0xCA3BB8", Slot = "6")]
			public void Remove()
			{
			}

			[Token(Token = "0x6002D21")]
			[Address(RVA = "0xCA3BBC", Offset = "0xCA3BBC", VA = "0xCA3BBC", Slot = "5")]
			public void ResetPoolable(object data)
			{
			}

			[Token(Token = "0x6002D22")]
			[Address(RVA = "0xCA2484", Offset = "0xCA2484", VA = "0xCA2484")]
			public static GuideDragData GetData()
			{
				return null;
			}

			[Token(Token = "0x6002D23")]
			[Address(RVA = "0xCA2514", Offset = "0xCA2514", VA = "0xCA2514")]
			public static void RecycleData(GuideDragData data)
			{
			}

			[Token(Token = "0x6002D24")]
			[Address(RVA = "0xCA3BC0", Offset = "0xCA3BC0", VA = "0xCA3BC0")]
			public GuideDragData()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20003CA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940170", Offset = "0x940170")]
		private sealed class <>c
		{
			[Token(Token = "0x4000FDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000FDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static TimeHandler <>9__63_0;

			[Token(Token = "0x6002D26")]
			[Address(RVA = "0xCA3A48", Offset = "0xCA3A48", VA = "0xCA3A48")]
			public <>c()
			{
			}

			[Token(Token = "0x6002D27")]
			[Address(RVA = "0xCA3A50", Offset = "0xCA3A50", VA = "0xCA3A50")]
			internal void <_doCheckVisible>b__63_0(object com)
			{
			}
		}

		[Token(Token = "0x400092D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private GameObject _currentRaycastGO;

		[Token(Token = "0x400092E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int _originSceneGOLayer;

		[Token(Token = "0x400092F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float _originEffectDepth;

		[Token(Token = "0x4000930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int _countUIError;

		[Token(Token = "0x4000931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UIBehaviour _currentUIComp;

		[Token(Token = "0x4000932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform _currentSceneRaycastTransform;

		[Token(Token = "0x4000933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public RectTransform _currentRaycastTransform;

		[Token(Token = "0x4000934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private UIDepth _compDepthRoot;

		[Token(Token = "0x4000935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool IsChecking;

		[Token(Token = "0x4000936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public RectTransform _rectRoot;

		[Token(Token = "0x4000937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public RectTransform _rectTouch;

		[Token(Token = "0x4000938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private ButtonEx _btnTouch;

		[Token(Token = "0x4000939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private RectTransform _rectBg;

		[Token(Token = "0x400093A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private RectTransform _rectFinger;

		[Token(Token = "0x400093B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Sequence _tweenFinger;

		[Token(Token = "0x400093C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private ImageEx _imgBg;

		[Token(Token = "0x400093D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private LuaTable _luaCtrl;

		[Token(Token = "0x400093E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public bool IsNeedActiveCam;

		[Token(Token = "0x400093F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private eGuideState _state;

		[Token(Token = "0x4000940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int _appointedAttrID;

		[Token(Token = "0x4000941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Vector2 _appointedPos;

		[Token(Token = "0x4000942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Transform _appointedTransform;

		[Token(Token = "0x4000943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _isAdjustPosByAngle;

		[Token(Token = "0x4000944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
		private bool _isCastValid;

		[Token(Token = "0x4000945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private Vector2 _posTarget;

		[Token(Token = "0x4000946")]
		private const float DISTANCE_APPOINTED_POS = 200f;

		[Token(Token = "0x4000947")]
		private const float DISTANCE_APPOINTED_ID = 200f;

		[Token(Token = "0x4000948")]
		private const float ANGLE_FOR_ADSORB = 30f;

		[Token(Token = "0x4000949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private bool _isCanDrag;

		[Token(Token = "0x400094A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBD")]
		private bool _isDraging;

		[Token(Token = "0x170000CF")]
		public Vector2 PosRectTouch
		{
			[Token(Token = "0x6001C7E")]
			[Address(RVA = "0xCA0548", Offset = "0xCA0548", VA = "0xCA0548")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x170000D0")]
		public Vector2 SizeRectTouch
		{
			[Token(Token = "0x6001C7F")]
			[Address(RVA = "0xCA0564", Offset = "0xCA0564", VA = "0xCA0564")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x170000D1")]
		[NoToLua]
		public bool IsCanDrag
		{
			[Token(Token = "0x6001C80")]
			[Address(RVA = "0xCA0580", Offset = "0xCA0580", VA = "0xCA0580")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000D2")]
		internal bool _isNotInBattleGuide
		{
			[Token(Token = "0x6001CA3")]
			[Address(RVA = "0xCA28C0", Offset = "0xCA28C0", VA = "0xCA28C0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000D3")]
		[NoToLua]
		public bool IsBatttleCanTouch
		{
			[Token(Token = "0x6001CA8")]
			[Address(RVA = "0xCA2FA4", Offset = "0xCA2FA4", VA = "0xCA2FA4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000D4")]
		public bool IsRunning
		{
			[Token(Token = "0x6001CB7")]
			[Address(RVA = "0xCA2FDC", Offset = "0xCA2FDC", VA = "0xCA2FDC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001C7D")]
		[Address(RVA = "0xCA049C", Offset = "0xCA049C", VA = "0xCA049C")]
		public GuideMgr()
		{
		}

		[Token(Token = "0x6001C81")]
		[Address(RVA = "0xCA0588", Offset = "0xCA0588", VA = "0xCA0588")]
		public GameObject Init(LuaTable luaCtrl, int order)
		{
			return null;
		}

		[Token(Token = "0x6001C82")]
		[Address(RVA = "0xCA05A4", Offset = "0xCA05A4", VA = "0xCA05A4")]
		private void _onSecondFingerUp(int key, Vector3 pos)
		{
		}

		[Token(Token = "0x6001C83")]
		[Address(RVA = "0xCA05A8", Offset = "0xCA05A8", VA = "0xCA05A8")]
		private void _initGOBg()
		{
		}

		[Token(Token = "0x6001C84")]
		[Address(RVA = "0xCA0800", Offset = "0xCA0800", VA = "0xCA0800")]
		private void _initGOTouch()
		{
		}

		[Token(Token = "0x6001C85")]
		[Address(RVA = "0xCA0704", Offset = "0xCA0704", VA = "0xCA0704")]
		public RectTransform _newTemplateGO(string name)
		{
			return null;
		}

		[Token(Token = "0x6001C86")]
		[Address(RVA = "0xCA0B78", Offset = "0xCA0B78", VA = "0xCA0B78")]
		public void _doUINormal(float offsetX, float offsetY, bool isCheckVisibility)
		{
		}

		[Token(Token = "0x6001C87")]
		[Address(RVA = "0xCA0D60", Offset = "0xCA0D60", VA = "0xCA0D60")]
		public void _doSceneNormal(float offsetX, float offsetY)
		{
		}

		[Token(Token = "0x6001C88")]
		[Address(RVA = "0xCA0F78", Offset = "0xCA0F78", VA = "0xCA0F78")]
		public bool _doSearching(string fullPath, int searchType, string basePath, string nodeName, GameObject go)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C89")]
		[Address(RVA = "0xCA101C", Offset = "0xCA101C", VA = "0xCA101C")]
		public void _doUITarget()
		{
		}

		[Token(Token = "0x6001C8A")]
		[Address(RVA = "0xCA148C", Offset = "0xCA148C", VA = "0xCA148C")]
		public void _doSceneTarget()
		{
		}

		[Token(Token = "0x6001C8B")]
		[Address(RVA = "0xCA1580", Offset = "0xCA1580", VA = "0xCA1580")]
		public void _setTouchSize(float width, float height)
		{
		}

		[Token(Token = "0x6001C8C")]
		[Address(RVA = "0xCA16A0", Offset = "0xCA16A0", VA = "0xCA16A0")]
		public void _setTouchSizeFull()
		{
		}

		[Token(Token = "0x6001C8D")]
		[Address(RVA = "0xCA1770", Offset = "0xCA1770", VA = "0xCA1770")]
		public void _doStop()
		{
		}

		[Token(Token = "0x6001C8E")]
		[Address(RVA = "0xCA17A0", Offset = "0xCA17A0", VA = "0xCA17A0")]
		public void SetActiveRoot(bool isActive)
		{
		}

		[Token(Token = "0x6001C8F")]
		[Address(RVA = "0xCA1810", Offset = "0xCA1810", VA = "0xCA1810")]
		public static void SetRectAnchor(AntiMask com, float minX, float minY, float maxX, float maxY)
		{
		}

		[Token(Token = "0x6001C90")]
		[Address(RVA = "0xCA1828", Offset = "0xCA1828", VA = "0xCA1828")]
		public void TestTouch()
		{
		}

		[Token(Token = "0x6001C91")]
		[Address(RVA = "0xCA18D0", Offset = "0xCA18D0", VA = "0xCA18D0")]
		private void _onTouch(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001C92")]
		[Address(RVA = "0xCA197C", Offset = "0xCA197C", VA = "0xCA197C")]
		private void _onBgTouch(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001C93")]
		[Address(RVA = "0xCA19F0", Offset = "0xCA19F0", VA = "0xCA19F0")]
		public void _doUITouch()
		{
		}

		[Token(Token = "0x6001C94")]
		[Address(RVA = "0xCA1BDC", Offset = "0xCA1BDC", VA = "0xCA1BDC")]
		private void _callLuaFunc(string funcName, string data)
		{
		}

		[Token(Token = "0x6001C95")]
		[Address(RVA = "0xCA1C90", Offset = "0xCA1C90", VA = "0xCA1C90")]
		public void _doSceneTouch(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001C96")]
		[Address(RVA = "0xCA1E90", Offset = "0xCA1E90", VA = "0xCA1E90")]
		private Gesture _newGesture(PointerEventData eventData)
		{
			return null;
		}

		[Token(Token = "0x6001C97")]
		[Address(RVA = "0xCA1340", Offset = "0xCA1340", VA = "0xCA1340")]
		public void _clearCurrentUIDepth()
		{
		}

		[Token(Token = "0x6001C98")]
		[Address(RVA = "0xCA1F64", Offset = "0xCA1F64", VA = "0xCA1F64")]
		private void _doCheckVisible()
		{
		}

		[Token(Token = "0x6001C99")]
		[Address(RVA = "0xCA2074", Offset = "0xCA2074", VA = "0xCA2074")]
		public void _clearSceneTarget()
		{
		}

		[Token(Token = "0x6001C9A")]
		[Address(RVA = "0xCA2078", Offset = "0xCA2078", VA = "0xCA2078")]
		public int GetCurrentOrder()
		{
			return default(int);
		}

		[Token(Token = "0x6001C9B")]
		[Address(RVA = "0xCA20DC", Offset = "0xCA20DC", VA = "0xCA20DC")]
		public void ResetCurrentOrder(int order)
		{
		}

		[Token(Token = "0x6001C9C")]
		[Address(RVA = "0xCA2234", Offset = "0xCA2234", VA = "0xCA2234")]
		private void _setFingerActive(bool isActive)
		{
		}

		[Token(Token = "0x6001C9D")]
		[Address(RVA = "0xCA22E8", Offset = "0xCA22E8", VA = "0xCA22E8")]
		private void _onDragBegin(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001C9E")]
		[Address(RVA = "0xCA259C", Offset = "0xCA259C", VA = "0xCA259C")]
		private void _onDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001C9F")]
		[Address(RVA = "0xCA26CC", Offset = "0xCA26CC", VA = "0xCA26CC")]
		private void _doForBattleDrag(Gesture data)
		{
		}

		[Token(Token = "0x6001CA0")]
		[Address(RVA = "0xCA26D0", Offset = "0xCA26D0", VA = "0xCA26D0")]
		private void _onDragEnd(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001CA1")]
		[Address(RVA = "0xCA2808", Offset = "0xCA2808", VA = "0xCA2808")]
		private void _clearDrag()
		{
		}

		[Token(Token = "0x6001CA2")]
		[Address(RVA = "0xCA28BC", Offset = "0xCA28BC", VA = "0xCA28BC")]
		private void _clearArea()
		{
		}

		[Token(Token = "0x6001CA4")]
		[Address(RVA = "0xCA29C8", Offset = "0xCA29C8", VA = "0xCA29C8")]
		internal bool IsValidMaskByDir(Vector2 curPos)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CA5")]
		[Address(RVA = "0xCA2B98", Offset = "0xCA2B98", VA = "0xCA2B98")]
		internal bool IsValidByHorizontalScrape(Vector2 curPos)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CA6")]
		[Address(RVA = "0xCA2D80", Offset = "0xCA2D80", VA = "0xCA2D80")]
		private void _onDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001CA7")]
		[Address(RVA = "0xCA2E30", Offset = "0xCA2E30", VA = "0xCA2E30")]
		private void _onUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001CA9")]
		[Address(RVA = "0xCA3044", Offset = "0xCA3044", VA = "0xCA3044")]
		public void SetAppointedGuidePos(float x, float y, float z, bool isAdjustPosByAngle)
		{
		}

		[Token(Token = "0x6001CAA")]
		[Address(RVA = "0xCA3178", Offset = "0xCA3178", VA = "0xCA3178")]
		public void ClearAppointedGuidePos()
		{
		}

		[Token(Token = "0x6001CAB")]
		[Address(RVA = "0xCA31E8", Offset = "0xCA31E8", VA = "0xCA31E8")]
		public void ResetOrder(GameObject go, int order)
		{
		}

		[Token(Token = "0x6001CAC")]
		[Address(RVA = "0xCA3280", Offset = "0xCA3280", VA = "0xCA3280")]
		public void ResetRootOrder(int order)
		{
		}

		[Token(Token = "0x6001CAD")]
		[Address(RVA = "0xCA32B8", Offset = "0xCA32B8", VA = "0xCA32B8")]
		public void SetBgRaycast(bool isCanRaycast)
		{
		}

		[Token(Token = "0x6001CAE")]
		[Address(RVA = "0xCA32E0", Offset = "0xCA32E0", VA = "0xCA32E0")]
		public void SetBgAlpha(float alpha)
		{
		}

		[Token(Token = "0x6001CAF")]
		[Address(RVA = "0xCA33A8", Offset = "0xCA33A8", VA = "0xCA33A8")]
		public void UpdateAntiMask(AntiMask comp)
		{
		}

		[Token(Token = "0x6001CB0")]
		[Address(RVA = "0xCA33C4", Offset = "0xCA33C4", VA = "0xCA33C4")]
		public void SetAppointedGuideAttrID(int id)
		{
		}

		[Token(Token = "0x6001CB1")]
		[Address(RVA = "0xCA33CC", Offset = "0xCA33CC", VA = "0xCA33CC")]
		public void SetAppointedTransform(string path)
		{
		}

		[Token(Token = "0x6001CB2")]
		[Address(RVA = "0xCA3424", Offset = "0xCA3424", VA = "0xCA3424")]
		public void TryDoFingerAnim(GameObject goFinger)
		{
		}

		[Token(Token = "0x6001CB3")]
		[Address(RVA = "0xCA38E4", Offset = "0xCA38E4", VA = "0xCA38E4")]
		public void ClearFingerTween()
		{
		}

		[Token(Token = "0x6001CB4")]
		[Address(RVA = "0xCA36E0", Offset = "0xCA36E0", VA = "0xCA36E0")]
		private void _doFingerAnim(Vector2 pos, GameObject goFinger)
		{
		}

		[Token(Token = "0x6001CB5")]
		[Address(RVA = "0xCA360C", Offset = "0xCA360C", VA = "0xCA360C")]
		private void _clearFingerTween()
		{
		}

		[Token(Token = "0x6001CB6")]
		[Address(RVA = "0xCA3918", Offset = "0xCA3918", VA = "0xCA3918")]
		public void SetGuideState(int guideState)
		{
		}

		[Token(Token = "0x6001CB8")]
		[Address(RVA = "0xCA3920", Offset = "0xCA3920", VA = "0xCA3920")]
		public bool IsEmbattleGuideValid(Transform ts)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CB9")]
		[Address(RVA = "0xCA39E0", Offset = "0xCA39E0", VA = "0xCA39E0")]
		public void SyncArrow(RectTransform rectArrow, Transform targetTs)
		{
		}
	}
}
namespace Sword.Config
{
	[Token(Token = "0x2000222")]
	public class ConfigMgr__HAIBAO__SWORD__
	{
		[Token(Token = "0x400094B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<Type, IGameConfig__HAIBAO__SWORD__> mConfigs;

		[Token(Token = "0x400094C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static ConfigAtlas__HAIBAO__SWORD__ mConfigAtlas;

		[Token(Token = "0x6001CBA")]
		[Address(RVA = "0xC0ECEC", Offset = "0xC0ECEC", VA = "0xC0ECEC")]
		private static void Add(IGameConfig__HAIBAO__SWORD__ config)
		{
		}

		[Token(Token = "0x6001CBB")]
		public static T GetConfig<T>() where T : IGameConfig__HAIBAO__SWORD__, new()
		{
			return null;
		}

		[Token(Token = "0x6001CBC")]
		private static bool IsLoad<T>() where T : IGameConfig__HAIBAO__SWORD__, new()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CBD")]
		[Address(RVA = "0xC0ED94", Offset = "0xC0ED94", VA = "0xC0ED94")]
		public static ConfigCfgAudio__HAIBAO__SWORD__ GetAudioConfig()
		{
			return null;
		}

		[Token(Token = "0x6001CBE")]
		[Address(RVA = "0xC0EDFC", Offset = "0xC0EDFC", VA = "0xC0EDFC")]
		public static ConfigAtlas__HAIBAO__SWORD__ GetAtlasConfig()
		{
			return null;
		}

		[Token(Token = "0x6001CBF")]
		[Address(RVA = "0xC0EEC4", Offset = "0xC0EEC4", VA = "0xC0EEC4")]
		public static ConfigOther__HAIBAO__SWORD__ GetOtherConfig()
		{
			return null;
		}

		[Token(Token = "0x6001CC0")]
		[Address(RVA = "0xC0EF2C", Offset = "0xC0EF2C", VA = "0xC0EF2C")]
		public static Dictionary<Type, IGameConfig__HAIBAO__SWORD__>.Enumerator GetEnumerator()
		{
			return default(Dictionary<Type, IGameConfig__HAIBAO__SWORD__>.Enumerator);
		}

		[Token(Token = "0x6001CC1")]
		[Address(RVA = "0xC0EFB4", Offset = "0xC0EFB4", VA = "0xC0EFB4")]
		public static bool IsFinalizeToDestoryMono()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CC2")]
		[Address(RVA = "0xC0F110", Offset = "0xC0F110", VA = "0xC0F110")]
		public ConfigMgr__HAIBAO__SWORD__()
		{
		}
	}
	[Token(Token = "0x2000223")]
	public class ConfigItemCfgAudio__HAIBAO__SWORD__ : IConfigItem__HAIBAO__SWORD__
	{
		[Token(Token = "0x400094D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int audioType;

		[Token(Token = "0x400094E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string audio;

		[Token(Token = "0x400094F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int type;

		[Token(Token = "0x4000950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int priority;

		[Token(Token = "0x4000951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float OribgVolume;

		[Token(Token = "0x4000952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float bgVolume;

		[Token(Token = "0x4000953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int fileType;

		[Token(Token = "0x4000954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float paramValue;

		[Token(Token = "0x6001CC4")]
		[Address(RVA = "0xC0ECDC", Offset = "0xC0ECDC", VA = "0xC0ECDC")]
		public ConfigItemCfgAudio__HAIBAO__SWORD__()
		{
		}
	}
	[Token(Token = "0x2000224")]
	public class ConfigCfgAudio__HAIBAO__SWORD__ : IGameConfig__HAIBAO__SWORD__
	{
		[Token(Token = "0x4000955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Dictionary<int, IConfigItem__HAIBAO__SWORD__> m_mapDic;

		[Token(Token = "0x4000956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ConfigCfgAudio__HAIBAO__SWORD__ Config;

		[Token(Token = "0x6001CC5")]
		[Address(RVA = "0xC0E4F0", Offset = "0xC0E4F0", VA = "0xC0E4F0")]
		static ConfigCfgAudio__HAIBAO__SWORD__()
		{
		}

		[Token(Token = "0x6001CC6")]
		[Address(RVA = "0xC0E550", Offset = "0xC0E550", VA = "0xC0E550")]
		public ConfigCfgAudio__HAIBAO__SWORD__()
		{
		}

		[Token(Token = "0x6001CC7")]
		[Address(RVA = "0xC0E5F4", Offset = "0xC0E5F4", VA = "0xC0E5F4")]
		public ConfigItemCfgAudio__HAIBAO__SWORD__ GetItem(int id)
		{
			return null;
		}

		[Token(Token = "0x6001CC8")]
		[Address(RVA = "0xC0E790", Offset = "0xC0E790", VA = "0xC0E790")]
		public ConfigItemCfgAudio__HAIBAO__SWORD__ GetItemNoCheck(int id)
		{
			return null;
		}

		[Token(Token = "0x6001CC9")]
		[Address(RVA = "0xC0E85C", Offset = "0xC0E85C", VA = "0xC0E85C")]
		public bool IsExist(int id)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CCA")]
		[Address(RVA = "0xC0E8C4", Offset = "0xC0E8C4", VA = "0xC0E8C4")]
		public void LoadObjectByText(string json)
		{
		}

		[Token(Token = "0x6001CCB")]
		[Address(RVA = "0xC0E8D0", Offset = "0xC0E8D0", VA = "0xC0E8D0", Slot = "5")]
		protected override void LoadObject(string json)
		{
		}
	}
	[Token(Token = "0x2000225")]
	public class IConfigItem__HAIBAO__SWORD__
	{
		[Token(Token = "0x6001CCC")]
		[Address(RVA = "0xC0F530", Offset = "0xC0F530", VA = "0xC0F530", Slot = "4")]
		public virtual void LoadDataByJson(ref string json, ref int index)
		{
		}

		[Token(Token = "0x6001CCD")]
		[Address(RVA = "0xC0ECE4", Offset = "0xC0ECE4", VA = "0xC0ECE4")]
		public IConfigItem__HAIBAO__SWORD__()
		{
		}
	}
	[Token(Token = "0x2000226")]
	public abstract class IGameConfig__HAIBAO__SWORD__
	{
		[Token(Token = "0x4000957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected string ConfigName;

		[Token(Token = "0x4000958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected object data;

		[Token(Token = "0x4000959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static string JsonPath;

		[Token(Token = "0x400095A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected bool mIsLoaded;

		[Token(Token = "0x400095B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string mJson;

		[Token(Token = "0x6001CCE")]
		[Address(RVA = "0xC0F534", Offset = "0xC0F534", VA = "0xC0F534")]
		public bool IsLoaded()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CCF")]
		[Address(RVA = "0xC0F480", Offset = "0xC0F480", VA = "0xC0F480", Slot = "4")]
		public virtual void Load()
		{
		}

		[Token(Token = "0x6001CD0")]
		[Address(RVA = "0xC0F7E0", Offset = "0xC0F7E0", VA = "0xC0F7E0")]
		public void LoadByThread()
		{
		}

		[Token(Token = "0x6001CD1")]
		[Address(RVA = "0xC0F8A4", Offset = "0xC0F8A4", VA = "0xC0F8A4")]
		private void MainHandler(object o)
		{
		}

		[Token(Token = "0x6001CD2")]
		[Address(RVA = "0xC0F9B0", Offset = "0xC0F9B0", VA = "0xC0F9B0")]
		private void Handler(object o)
		{
		}

		[Token(Token = "0x6001CD3")]
		[Address(RVA = "0xC0FA5C", Offset = "0xC0FA5C", VA = "0xC0FA5C")]
		public void LoadAsync()
		{
		}

		[Token(Token = "0x6001CD4")]
		[Address(RVA = "0xC0FC08", Offset = "0xC0FC08", VA = "0xC0FC08")]
		public void OnCallback(Resource res, object data)
		{
		}

		[Token(Token = "0x6001CD5")]
		[Address(RVA = "0xC0FC5C", Offset = "0xC0FC5C", VA = "0xC0FC5C")]
		protected object GetData()
		{
			return null;
		}

		[Token(Token = "0x6001CD6")]
		[Address(RVA = "0xC0E45C", Offset = "0xC0E45C", VA = "0xC0E45C")]
		protected void Clear()
		{
		}

		[Token(Token = "0x6001CD7")]
		[Address(RVA = "0xC0F53C", Offset = "0xC0F53C", VA = "0xC0F53C")]
		public string Getjson(string fileName)
		{
			return null;
		}

		[Token(Token = "0x6001CD8")]
		[Address(RVA = "0xC0FB88", Offset = "0xC0FB88", VA = "0xC0FB88")]
		private string GetFile(string fileName)
		{
			return null;
		}

		[Token(Token = "0x6001CD9")]
		[Address(RVA = "0xC0E428", Offset = "0xC0E428", VA = "0xC0E428", Slot = "5")]
		protected virtual void LoadObject(string json)
		{
		}

		[Token(Token = "0x6001CDA")]
		protected List<T> ToTypeList<T>(object obj)
		{
			return null;
		}

		[Token(Token = "0x6001CDB")]
		[Address(RVA = "0xC0DFC8", Offset = "0xC0DFC8", VA = "0xC0DFC8")]
		protected IGameConfig__HAIBAO__SWORD__()
		{
		}
	}
	[Token(Token = "0x2000227")]
	public class ConfitAtlasItem__HAIBAO__SWORD__
	{
		[Token(Token = "0x400095C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float x;

		[Token(Token = "0x400095D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float y;

		[Token(Token = "0x400095E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float w;

		[Token(Token = "0x400095F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float h;

		[Token(Token = "0x4000960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float borderX;

		[Token(Token = "0x4000961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float borderY;

		[Token(Token = "0x4000962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float borderW;

		[Token(Token = "0x4000963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float borderH;

		[Token(Token = "0x4000964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string name;

		[Token(Token = "0x6001CDD")]
		[Address(RVA = "0xC0E188", Offset = "0xC0E188", VA = "0xC0E188")]
		public void Load(object obj)
		{
		}

		[Token(Token = "0x6001CDE")]
		[Address(RVA = "0xC0E180", Offset = "0xC0E180", VA = "0xC0E180")]
		public ConfitAtlasItem__HAIBAO__SWORD__()
		{
		}
	}
	[Token(Token = "0x2000228")]
	public class ConfigAtlas__HAIBAO__SWORD__ : IGameConfig__HAIBAO__SWORD__
	{
		[Token(Token = "0x4000965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<string, object> mDic;

		[Token(Token = "0x4000966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<string, ConfitAtlasItem__HAIBAO__SWORD__> mConfigDatas;

		[Token(Token = "0x6001CDF")]
		[Address(RVA = "0xC0DF24", Offset = "0xC0DF24", VA = "0xC0DF24")]
		public ConfigAtlas__HAIBAO__SWORD__()
		{
		}

		[Token(Token = "0x6001CE0")]
		[Address(RVA = "0xC0DFD0", Offset = "0xC0DFD0", VA = "0xC0DFD0")]
		public bool ContainsKey(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CE1")]
		[Address(RVA = "0xC0E06C", Offset = "0xC0E06C", VA = "0xC0E06C")]
		public ConfitAtlasItem__HAIBAO__SWORD__ GetConfigAtlasItem(string key)
		{
			return null;
		}

		[Token(Token = "0x6001CE2")]
		[Address(RVA = "0xC0E37C", Offset = "0xC0E37C", VA = "0xC0E37C", Slot = "5")]
		protected override void LoadObject(string json)
		{
		}

		[Token(Token = "0x6001CE3")]
		[Address(RVA = "0xC0E464", Offset = "0xC0E464", VA = "0xC0E464")]
		public string GetAtlasName(string icon)
		{
			return null;
		}
	}
	[Token(Token = "0x2000229")]
	public class ConfigOther__HAIBAO__SWORD__ : IGameConfig__HAIBAO__SWORD__
	{
		[Token(Token = "0x4000967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<string, object> dic;

		[Token(Token = "0x6001CE4")]
		[Address(RVA = "0xC0F18C", Offset = "0xC0F18C", VA = "0xC0F18C")]
		public ConfigOther__HAIBAO__SWORD__()
		{
		}

		[Token(Token = "0x6001CE5")]
		[Address(RVA = "0xC0F208", Offset = "0xC0F208", VA = "0xC0F208")]
		public float GetFloat(string key)
		{
			return default(float);
		}

		[Token(Token = "0x6001CE6")]
		[Address(RVA = "0xC0F278", Offset = "0xC0F278", VA = "0xC0F278")]
		public List<object> GetArray(string key)
		{
			return null;
		}

		[Token(Token = "0x6001CE7")]
		[Address(RVA = "0xC0F324", Offset = "0xC0F324", VA = "0xC0F324")]
		public Dictionary<string, object> GetDict(string key)
		{
			return null;
		}

		[Token(Token = "0x6001CE8")]
		[Address(RVA = "0xC0F3D0", Offset = "0xC0F3D0", VA = "0xC0F3D0", Slot = "5")]
		protected override void LoadObject(string json)
		{
		}

		[Token(Token = "0x6001CE9")]
		[Address(RVA = "0xC0F47C", Offset = "0xC0F47C", VA = "0xC0F47C", Slot = "4")]
		public override void Load()
		{
		}

		[Token(Token = "0x6001CEA")]
		[Address(RVA = "0xC0F4C0", Offset = "0xC0F4C0", VA = "0xC0F4C0")]
		public int GetInt(string key)
		{
			return default(int);
		}

		[Token(Token = "0x6001CEB")]
		[Address(RVA = "0xC0F068", Offset = "0xC0F068", VA = "0xC0F068")]
		public int GetInt(string key, int defaultValue)
		{
			return default(int);
		}
	}
	[Token(Token = "0x200022A")]
	public class SwordConfigSerialize__HAIBAO__SWORD__
	{
		[Token(Token = "0x20003CB")]
		private enum ConfigProcess
		{
			[Token(Token = "0x4000FDD")]
			Null,
			[Token(Token = "0x4000FDE")]
			start,
			[Token(Token = "0x4000FDF")]
			end
		}

		[Token(Token = "0x4000968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static StringBuilder sb;

		[Token(Token = "0x6001CEC")]
		public static Dictionary<int, T> ToObject<T>(string json) where T : IConfigItem__HAIBAO__SWORD__, new()
		{
			return null;
		}

		[Token(Token = "0x6001CED")]
		[Address(RVA = "0xC0FCC0", Offset = "0xC0FCC0", VA = "0xC0FCC0")]
		public static int GetInt(ref string json, ref int index)
		{
			return default(int);
		}

		[Token(Token = "0x6001CEE")]
		[Address(RVA = "0xC0FE30", Offset = "0xC0FE30", VA = "0xC0FE30")]
		public static string GetString(ref string json, ref int index, string name)
		{
			return null;
		}

		[Token(Token = "0x6001CEF")]
		[Address(RVA = "0xC1001C", Offset = "0xC1001C", VA = "0xC1001C")]
		public static int GetInt(ref string json, ref int index, string name)
		{
			return default(int);
		}

		[Token(Token = "0x6001CF0")]
		[Address(RVA = "0xC10230", Offset = "0xC10230", VA = "0xC10230")]
		public static float GetFloat(ref string json, ref int index, string name)
		{
			return default(float);
		}

		[Token(Token = "0x6001CF1")]
		[Address(RVA = "0xC103C0", Offset = "0xC103C0", VA = "0xC103C0")]
		public static List<float> GetFloatList(ref string json, ref int index, string name)
		{
			return null;
		}

		[Token(Token = "0x6001CF2")]
		[Address(RVA = "0xC1062C", Offset = "0xC1062C", VA = "0xC1062C")]
		public static List<int> GetIntList(ref string json, ref int index, string name)
		{
			return null;
		}

		[Token(Token = "0x6001CF3")]
		[Address(RVA = "0xC10898", Offset = "0xC10898", VA = "0xC10898")]
		public static List<object> GetObjectList(ref string json, ref int index, string name)
		{
			return null;
		}

		[Token(Token = "0x6001CF4")]
		[Address(RVA = "0xC10B94", Offset = "0xC10B94", VA = "0xC10B94")]
		public SwordConfigSerialize__HAIBAO__SWORD__()
		{
		}
	}
}
namespace Sword.Game
{
	[Token(Token = "0x200022B")]
	public enum CameraPlaneAxes__HAIBAO__SWORD__
	{
		[Token(Token = "0x400096A")]
		XY_2D_SIDESCROLL,
		[Token(Token = "0x400096B")]
		XZ_TOP_DOWN
	}
	[Token(Token = "0x200022C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x93F29C", Offset = "0x93F29C")]
	public class MainCamComp : SBehaviour
	{
		[Token(Token = "0x20003CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940180", Offset = "0x940180")]
		private sealed class <ZoomToTargetValueCoroutine>d__125 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000FE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000FE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000FE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float target;

			[Token(Token = "0x4000FE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MainCamComp <>4__this;

			[Token(Token = "0x4000FE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startValue>5__2;

			[Token(Token = "0x4000FE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <timeStart>5__3;

			[Token(Token = "0x1700020D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002D2B")]
				[Address(RVA = "0xBD3E18", Offset = "0xBD3E18", VA = "0xBD3E18", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700020E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002D2D")]
				[Address(RVA = "0xBD3E80", Offset = "0xBD3E80", VA = "0xBD3E80", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002D28")]
			[Address(RVA = "0xBD3C2C", Offset = "0xBD3C2C", VA = "0xBD3C2C")]
			[DebuggerHidden]
			public <ZoomToTargetValueCoroutine>d__125(int <>1__state)
			{
			}

			[Token(Token = "0x6002D29")]
			[Address(RVA = "0xBD3C58", Offset = "0xBD3C58", VA = "0xBD3C58", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002D2A")]
			[Address(RVA = "0xBD3C5C", Offset = "0xBD3C5C", VA = "0xBD3C5C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002D2C")]
			[Address(RVA = "0xBD3E20", Offset = "0xBD3E20", VA = "0xBD3E20", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400096C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private CameraPlaneAxes__HAIBAO__SWORD__ cameraAxes;

		[Token(Token = "0x400096D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x941CFC", Offset = "0x941CFC")]
		private float camZoomMin;

		[Token(Token = "0x400096E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x941D48", Offset = "0x941D48")]
		private float camZoomMax;

		[Token(Token = "0x400096F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x941D94", Offset = "0x941D94")]
		private float camOverzoomMargin;

		[Token(Token = "0x4000970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x941DE0", Offset = "0x941DE0")]
		private Vector2 boundaryMin;

		[Token(Token = "0x4000971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x941E2C", Offset = "0x941E2C")]
		private Vector2 boundaryMax;

		[Token(Token = "0x4000972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x941E78", Offset = "0x941E78")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x941E78", Offset = "0x941E78")]
		private float camFollowFactor;

		[Token(Token = "0x4000973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x941EE8", Offset = "0x941EE8")]
		private float autoScrollDamp;

		[Token(Token = "0x4000974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x941F34", Offset = "0x941F34")]
		private float groundLevelOffset;

		[Token(Token = "0x4000975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 dragStartCamPos;

		[Token(Token = "0x4000976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 cameraScrollVelocity;

		[Token(Token = "0x4000977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float pinchStartCamZoomSize;

		[Token(Token = "0x4000978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Vector3 pinchStartIntersectionCenter;

		[Token(Token = "0x4000979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 pinchCenterCurrent;

		[Token(Token = "0x400097A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float pinchDistanceCurrent;

		[Token(Token = "0x400097B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float pinchDistanceStart;

		[Token(Token = "0x400097C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Vector3 pinchCenterCurrentLerp;

		[Token(Token = "0x400097D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float pinchDistanceCurrentLerp;

		[Token(Token = "0x400097E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private float timeRealDragStop;

		[Token(Token = "0x400097F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float PinchFactor;

		[Token(Token = "0x4000980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x941F80", Offset = "0x941F80")]
		private bool <IsPinching>k__BackingField;

		[Token(Token = "0x4000981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x941F90", Offset = "0x941F90")]
		private bool <IsDragging>k__BackingField;

		[Token(Token = "0x4000982")]
		private const float zoomBackSpringFactor = 20f;

		[Token(Token = "0x4000983")]
		private const float autoScrollVelocityMax = 60f;

		[Token(Token = "0x4000984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAE")]
		private bool isStarted;

		[Token(Token = "0x4000985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x941FA0", Offset = "0x941FA0")]
		private Camera <Cam>k__BackingField;

		[Token(Token = "0x4000986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Camera SecondCam;

		[Token(Token = "0x4000987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public float InitCamZoom;

		[Token(Token = "0x4000988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private Plane refPlaneXY;

		[Token(Token = "0x4000989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private Plane refPlaneXZ;

		[Token(Token = "0x400098A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x941FB0", Offset = "0x941FB0")]
		private List<Vector3> <DragCameraMoveVector>k__BackingField;

		[Token(Token = "0x400098B")]
		private const int momentumSamplesCount = 5;

		[Token(Token = "0x400098C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Vector3 targetPositionClamped;

		[Token(Token = "0x400098D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x941FC0", Offset = "0x941FC0")]
		private bool <IsSmoothingEnabled>k__BackingField;

		[Token(Token = "0x400098E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x941FD0", Offset = "0x941FD0")]
		private float <ScreenRatio>k__BackingField;

		[Token(Token = "0x400098F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x941FE0", Offset = "0x941FE0")]
		private Vector2 <CamPosMin>k__BackingField;

		[Token(Token = "0x4000990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x941FF0", Offset = "0x941FF0")]
		private Vector2 <CamPosMax>k__BackingField;

		[Token(Token = "0x4000991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private Vector3 _dragStartPos;

		[Token(Token = "0x4000992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private float _timeSinceDragStart;

		[Token(Token = "0x170000D5")]
		[SerializeField]
		public CameraPlaneAxes__HAIBAO__SWORD__ CameraAxes
		{
			[Token(Token = "0x6001CF6")]
			[Address(RVA = "0xCC9AE4", Offset = "0xCC9AE4", VA = "0xCC9AE4")]
			get
			{
				return default(CameraPlaneAxes__HAIBAO__SWORD__);
			}
			[Token(Token = "0x6001CF7")]
			[Address(RVA = "0xCC9AEC", Offset = "0xCC9AEC", VA = "0xCC9AEC")]
			set
			{
			}
		}

		[Token(Token = "0x170000D6")]
		public bool IsAutoScrolling
		{
			[Token(Token = "0x6001CF8")]
			[Address(RVA = "0xCC9AF4", Offset = "0xCC9AF4", VA = "0xCC9AF4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000D7")]
		public bool IsPinching
		{
			[Token(Token = "0x6001CF9")]
			[Address(RVA = "0xCC9B20", Offset = "0xCC9B20", VA = "0xCC9B20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A71C0", Offset = "0x9A71C0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001CFA")]
			[Address(RVA = "0xCC9B28", Offset = "0xCC9B28", VA = "0xCC9B28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A71D0", Offset = "0x9A71D0")]
			private set
			{
			}
		}

		[Token(Token = "0x170000D8")]
		public bool IsDragging
		{
			[Token(Token = "0x6001CFB")]
			[Address(RVA = "0xCC9B34", Offset = "0xCC9B34", VA = "0xCC9B34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A71E0", Offset = "0x9A71E0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001CFC")]
			[Address(RVA = "0xCC9B3C", Offset = "0xCC9B3C", VA = "0xCC9B3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A71F0", Offset = "0x9A71F0")]
			private set
			{
			}
		}

		[Token(Token = "0x170000D9")]
		public Camera Cam
		{
			[Token(Token = "0x6001CFD")]
			[Address(RVA = "0xCC9B48", Offset = "0xCC9B48", VA = "0xCC9B48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7200", Offset = "0x9A7200")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CFE")]
			[Address(RVA = "0xCC9B50", Offset = "0xCC9B50", VA = "0xCC9B50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7210", Offset = "0x9A7210")]
			private set
			{
			}
		}

		[Token(Token = "0x170000DA")]
		public float EffectCamDepth
		{
			[Token(Token = "0x6001CFF")]
			[Address(RVA = "0xCC9B58", Offset = "0xCC9B58", VA = "0xCC9B58")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D00")]
			[Address(RVA = "0xCC9B74", Offset = "0xCC9B74", VA = "0xCC9B74")]
			set
			{
			}
		}

		[Token(Token = "0x170000DB")]
		public float CamZoom
		{
			[Token(Token = "0x6001D01")]
			[Address(RVA = "0xCC9B90", Offset = "0xCC9B90", VA = "0xCC9B90")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D02")]
			[Address(RVA = "0xCC9BE8", Offset = "0xCC9BE8", VA = "0xCC9BE8")]
			set
			{
			}
		}

		[Token(Token = "0x170000DC")]
		public bool Orthographic
		{
			[Token(Token = "0x6001D03")]
			[Address(RVA = "0xCCA430", Offset = "0xCCA430", VA = "0xCCA430")]
			set
			{
			}
		}

		[Token(Token = "0x170000DD")]
		public float CamZoomMin
		{
			[Token(Token = "0x6001D04")]
			[Address(RVA = "0xCCA478", Offset = "0xCCA478", VA = "0xCCA478")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D05")]
			[Address(RVA = "0xCCA480", Offset = "0xCCA480", VA = "0xCCA480")]
			set
			{
			}
		}

		[Token(Token = "0x170000DE")]
		public float CamZoomMax
		{
			[Token(Token = "0x6001D06")]
			[Address(RVA = "0xCCA488", Offset = "0xCCA488", VA = "0xCCA488")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D07")]
			[Address(RVA = "0xCCA490", Offset = "0xCCA490", VA = "0xCCA490")]
			set
			{
			}
		}

		[Token(Token = "0x170000DF")]
		public float CamOverzoomMargin
		{
			[Token(Token = "0x6001D08")]
			[Address(RVA = "0xCCA498", Offset = "0xCCA498", VA = "0xCCA498")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D09")]
			[Address(RVA = "0xCCA4A0", Offset = "0xCCA4A0", VA = "0xCCA4A0")]
			set
			{
			}
		}

		[Token(Token = "0x170000E0")]
		public float CamFollowFactor
		{
			[Token(Token = "0x6001D0A")]
			[Address(RVA = "0xCCA4A8", Offset = "0xCCA4A8", VA = "0xCCA4A8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D0B")]
			[Address(RVA = "0xCCA4B0", Offset = "0xCCA4B0", VA = "0xCCA4B0")]
			set
			{
			}
		}

		[Token(Token = "0x170000E1")]
		public float AutoScrollDamp
		{
			[Token(Token = "0x6001D0C")]
			[Address(RVA = "0xCCA4B8", Offset = "0xCCA4B8", VA = "0xCCA4B8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D0D")]
			[Address(RVA = "0xCCA4C0", Offset = "0xCCA4C0", VA = "0xCCA4C0")]
			set
			{
			}
		}

		[Token(Token = "0x170000E2")]
		public Vector2 BoundaryMin
		{
			[Token(Token = "0x6001D0E")]
			[Address(RVA = "0xCCA4C8", Offset = "0xCCA4C8", VA = "0xCCA4C8")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6001D0F")]
			[Address(RVA = "0xCCA4D0", Offset = "0xCCA4D0", VA = "0xCCA4D0")]
			set
			{
			}
		}

		[Token(Token = "0x170000E3")]
		public Vector2 BoundaryMax
		{
			[Token(Token = "0x6001D10")]
			[Address(RVA = "0xCCA4D8", Offset = "0xCCA4D8", VA = "0xCCA4D8")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6001D11")]
			[Address(RVA = "0xCCA4E0", Offset = "0xCCA4E0", VA = "0xCCA4E0")]
			set
			{
			}
		}

		[Token(Token = "0x170000E4")]
		public Plane RefPlane
		{
			[Token(Token = "0x6001D12")]
			[Address(RVA = "0xCCA4E8", Offset = "0xCCA4E8", VA = "0xCCA4E8")]
			get
			{
				return default(Plane);
			}
		}

		[Token(Token = "0x170000E5")]
		private List<Vector3> DragCameraMoveVector
		{
			[Token(Token = "0x6001D13")]
			[Address(RVA = "0xCCA52C", Offset = "0xCCA52C", VA = "0xCCA52C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7220", Offset = "0x9A7220")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D14")]
			[Address(RVA = "0xCCA534", Offset = "0xCCA534", VA = "0xCCA534")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7230", Offset = "0x9A7230")]
			set
			{
			}
		}

		[Token(Token = "0x170000E6")]
		public bool IsSmoothingEnabled
		{
			[Token(Token = "0x6001D15")]
			[Address(RVA = "0xCCA53C", Offset = "0xCCA53C", VA = "0xCCA53C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7240", Offset = "0x9A7240")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D16")]
			[Address(RVA = "0xCCA544", Offset = "0xCCA544", VA = "0xCCA544")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7250", Offset = "0x9A7250")]
			set
			{
			}
		}

		[Token(Token = "0x170000E7")]
		private float ScreenRatio
		{
			[Token(Token = "0x6001D17")]
			[Address(RVA = "0xCCA550", Offset = "0xCCA550", VA = "0xCCA550")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7260", Offset = "0x9A7260")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D18")]
			[Address(RVA = "0xCCA558", Offset = "0xCCA558", VA = "0xCCA558")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7270", Offset = "0x9A7270")]
			set
			{
			}
		}

		[Token(Token = "0x170000E8")]
		private Vector2 CamPosMin
		{
			[Token(Token = "0x6001D19")]
			[Address(RVA = "0xCCA560", Offset = "0xCCA560", VA = "0xCCA560")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7280", Offset = "0x9A7280")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6001D1A")]
			[Address(RVA = "0xCCA56C", Offset = "0xCCA56C", VA = "0xCCA56C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7290", Offset = "0x9A7290")]
			set
			{
			}
		}

		[Token(Token = "0x170000E9")]
		private Vector2 CamPosMax
		{
			[Token(Token = "0x6001D1B")]
			[Address(RVA = "0xCCA578", Offset = "0xCCA578", VA = "0xCCA578")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A72A0", Offset = "0x9A72A0")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6001D1C")]
			[Address(RVA = "0xCCA584", Offset = "0xCCA584", VA = "0xCCA584")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A72B0", Offset = "0x9A72B0")]
			set
			{
			}
		}

		[Token(Token = "0x6001D1D")]
		[Address(RVA = "0xCCA590", Offset = "0xCCA590", VA = "0xCCA590")]
		public void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001D1E")]
		[Address(RVA = "0xCCA6B8", Offset = "0xCCA6B8", VA = "0xCCA6B8")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001D1F")]
		[Address(RVA = "0xCCAAA0", Offset = "0xCCAAA0", VA = "0xCCAAA0")]
		public void Start()
		{
		}

		[Token(Token = "0x6001D20")]
		[Address(RVA = "0xCCAF0C", Offset = "0xCCAF0C", VA = "0xCCAF0C")]
		public void SetBoundary(float left, float right)
		{
		}

		[Token(Token = "0x6001D21")]
		[Address(RVA = "0xCCAFA4", Offset = "0xCCAFA4", VA = "0xCCAFA4")]
		public void SetBoundary(float left, float right, float top, float bottom, float max)
		{
		}

		[Token(Token = "0x6001D22")]
		[Address(RVA = "0xCC5B08", Offset = "0xCC5B08", VA = "0xCC5B08")]
		public Vector3 GetIntersectionPoint(Ray ray)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001D23")]
		[Address(RVA = "0xCCB028", Offset = "0xCCB028", VA = "0xCCB028")]
		private void UpdateZoom(float deltaTime)
		{
		}

		[Token(Token = "0x6001D24")]
		[Address(RVA = "0xCCB424", Offset = "0xCCB424", VA = "0xCCB424")]
		private void UpdatePosition(float deltaTime)
		{
		}

		[Token(Token = "0x6001D25")]
		[Address(RVA = "0xCCB7B0", Offset = "0xCCB7B0", VA = "0xCCB7B0")]
		private void SetTargetPosition(Vector3 newPositionClamped)
		{
		}

		[Token(Token = "0x6001D26")]
		[Address(RVA = "0xCCB2F4", Offset = "0xCCB2F4", VA = "0xCCB2F4")]
		private Vector3 GetClampToBoundaries(Vector3 newPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001D27")]
		[Address(RVA = "0xCC9CB4", Offset = "0xCC9CB4", VA = "0xCC9CB4")]
		public void ComputeCamBoundaries()
		{
		}

		[Token(Token = "0x6001D28")]
		[Address(RVA = "0xCCB7BC", Offset = "0xCCB7BC", VA = "0xCCB7BC")]
		public void LateUpdate()
		{
		}

		[Token(Token = "0x6001D29")]
		[Address(RVA = "0xCCB95C", Offset = "0xCCB95C", VA = "0xCCB95C")]
		private float DoEditorCameraZoom(float amount)
		{
			return default(float);
		}

		[Token(Token = "0x6001D2A")]
		[Address(RVA = "0xCCBA14", Offset = "0xCCBA14", VA = "0xCCBA14")]
		public void FixedUpdate()
		{
		}

		[Token(Token = "0x6001D2B")]
		[Address(RVA = "0xCCBCBC", Offset = "0xCCBCBC", VA = "0xCCBCBC")]
		private void InputControllerOnFingerDown(Vector3 pos)
		{
		}

		[Token(Token = "0x6001D2C")]
		[Address(RVA = "0xCCBD2C", Offset = "0xCCBD2C", VA = "0xCCBD2C")]
		private Vector3 GetDragVector(Vector3 dragPosStart, Vector3 dragPosCurrent)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001D2D")]
		[Address(RVA = "0xCCBE78", Offset = "0xCCBE78", VA = "0xCCBE78")]
		private Vector3 GetVelocityFromMoveHistory()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001D2E")]
		[Address(RVA = "0xCCC008", Offset = "0xCCC008", VA = "0xCCC008")]
		private bool TouchStart(Gesture gt)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D2F")]
		[Address(RVA = "0xCCC08C", Offset = "0xCCC08C", VA = "0xCCC08C")]
		private bool Tap(Gesture gt)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D30")]
		[Address(RVA = "0xCCC0A8", Offset = "0xCCC0A8", VA = "0xCCC0A8")]
		public bool BeginDrag(Gesture gt)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D31")]
		[Address(RVA = "0xCCC1F4", Offset = "0xCCC1F4", VA = "0xCCC1F4")]
		public bool OnDrag(Gesture gt)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D32")]
		[Address(RVA = "0xCCC354", Offset = "0xCCC354", VA = "0xCCC354")]
		public bool EndDrag(Gesture gt)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D33")]
		[Address(RVA = "0xCCC478", Offset = "0xCCC478", VA = "0xCCC478")]
		private bool OnPinchStart(Gesture gt)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D34")]
		[Address(RVA = "0xCCC5C8", Offset = "0xCCC5C8", VA = "0xCCC5C8")]
		private bool OnPinchOut(Gesture gt)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D35")]
		[Address(RVA = "0xCCC68C", Offset = "0xCCC68C", VA = "0xCCC68C")]
		private bool OnPinchIn(Gesture gt)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D36")]
		[Address(RVA = "0xCCC750", Offset = "0xCCC750", VA = "0xCCC750")]
		private bool OnPinchStop(Gesture gt)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D37")]
		[Address(RVA = "0xCCC7C4", Offset = "0xCCC7C4", VA = "0xCCC7C4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A72C0", Offset = "0x9A72C0")]
		private IEnumerator ZoomToTargetValueCoroutine(float target)
		{
			return null;
		}

		[Token(Token = "0x6001D38")]
		[Address(RVA = "0xCCC844", Offset = "0xCCC844", VA = "0xCCC844")]
		public void ResetCamZoom()
		{
		}

		[Token(Token = "0x6001D39")]
		[Address(RVA = "0xCCC84C", Offset = "0xCCC84C", VA = "0xCCC84C")]
		public void OnStartBattle(int key)
		{
		}

		[Token(Token = "0x6001D3A")]
		[Address(RVA = "0xCCC850", Offset = "0xCCC850", VA = "0xCCC850")]
		public void SetEffectCamera(bool enable)
		{
		}

		[Token(Token = "0x6001D3B")]
		[Address(RVA = "0xCCBC44", Offset = "0xCCBC44", VA = "0xCCBC44")]
		private bool IsCannotControl()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D3C")]
		[Address(RVA = "0xCCC870", Offset = "0xCCC870", VA = "0xCCC870", Slot = "5")]
		protected override void InitMono()
		{
		}

		[Token(Token = "0x6001D3D")]
		[Address(RVA = "0xCCCA84", Offset = "0xCCCA84", VA = "0xCCCA84", Slot = "6")]
		public override void DestroyMono()
		{
		}

		[Token(Token = "0x6001D3E")]
		[Address(RVA = "0xCCCF04", Offset = "0xCCCF04", VA = "0xCCCF04")]
		public MainCamComp()
		{
		}
	}
	[Token(Token = "0x200022D")]
	public class MyInspectCamera : MonoBehaviour
	{
		[Token(Token = "0x4000993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 targetPos;

		[Token(Token = "0x4000994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform CamTransform;

		[Token(Token = "0x4000995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float distance;

		[Token(Token = "0x4000996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float minDistance;

		[Token(Token = "0x4000997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float maxDistance;

		[Token(Token = "0x4000998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float xSpeed;

		[Token(Token = "0x4000999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float ySpeed;

		[Token(Token = "0x400099A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float yMinLimit;

		[Token(Token = "0x400099B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float yMaxLimit;

		[Token(Token = "0x400099C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float x;

		[Token(Token = "0x400099D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float y;

		[Token(Token = "0x400099E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float zoomInLimit;

		[Token(Token = "0x400099F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float zoomOutLimit;

		[Token(Token = "0x40009A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float yOffset;

		[Token(Token = "0x6001D3F")]
		[Address(RVA = "0xBD74DC", Offset = "0xBD74DC", VA = "0xBD74DC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D40")]
		[Address(RVA = "0xBD761C", Offset = "0xBD761C", VA = "0xBD761C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001D41")]
		[Address(RVA = "0xBD7874", Offset = "0xBD7874", VA = "0xBD7874")]
		private static float ClampAngle(float angle, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x6001D42")]
		[Address(RVA = "0xBD7924", Offset = "0xBD7924", VA = "0xBD7924")]
		public MyInspectCamera()
		{
		}
	}
	[Token(Token = "0x200022E")]
	public enum PerspectiveZoomMode__HAIBAO__SWORD__
	{
		[Token(Token = "0x40009A2")]
		FIELD_OF_VIEW,
		[Token(Token = "0x40009A3")]
		TRANSLATION
	}
	[Token(Token = "0x200022F")]
	public class UIFollowCam : MonoBehaviour
	{
		[Token(Token = "0x40009A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform cam;

		[Token(Token = "0x6001D43")]
		[Address(RVA = "0xBE6790", Offset = "0xBE6790", VA = "0xBE6790")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D44")]
		[Address(RVA = "0xBE6828", Offset = "0xBE6828", VA = "0xBE6828")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D45")]
		[Address(RVA = "0xBE6874", Offset = "0xBE6874", VA = "0xBE6874")]
		public UIFollowCam()
		{
		}
	}
	[Token(Token = "0x2000230")]
	public class WrappedTouch__HAIBAO__SWORD__
	{
		[Token(Token = "0x40009A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x942000", Offset = "0x942000")]
		private Vector3 <Position>k__BackingField;

		[Token(Token = "0x170000EA")]
		public Vector3 Position
		{
			[Token(Token = "0x6001D46")]
			[Address(RVA = "0xC9F7E0", Offset = "0xC9F7E0", VA = "0xC9F7E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7324", Offset = "0x9A7324")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001D47")]
			[Address(RVA = "0xC9F7EC", Offset = "0xC9F7EC", VA = "0xC9F7EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7334", Offset = "0x9A7334")]
			set
			{
			}
		}

		[Token(Token = "0x6001D48")]
		[Address(RVA = "0xC9F7F8", Offset = "0xC9F7F8", VA = "0xC9F7F8")]
		public static WrappedTouch__HAIBAO__SWORD__ FromTouch(Touch touch)
		{
			return null;
		}

		[Token(Token = "0x6001D49")]
		[Address(RVA = "0xC9F8B4", Offset = "0xC9F8B4", VA = "0xC9F8B4")]
		public WrappedTouch__HAIBAO__SWORD__()
		{
		}
	}
	[Token(Token = "0x2000231")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x93F300", Offset = "0x93F300")]
	public class FocusCameraOnItem : SBehaviour
	{
		[Token(Token = "0x40009A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float transitionDuration;

		[Token(Token = "0x40009A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x942020", Offset = "0x942020")]
		private MainCamComp <MobileTouchCamera>k__BackingField;

		[Token(Token = "0x40009A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 posTransitionStart;

		[Token(Token = "0x40009A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 posTransitionEnd;

		[Token(Token = "0x40009AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float timeTransitionStart;

		[Token(Token = "0x40009AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool isTransitionStarted;

		[Token(Token = "0x170000EB")]
		private MainCamComp MobileTouchCamera
		{
			[Token(Token = "0x6001D4A")]
			[Address(RVA = "0xCC557C", Offset = "0xCC557C", VA = "0xCC557C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7344", Offset = "0x9A7344")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D4B")]
			[Address(RVA = "0xCC5584", Offset = "0xCC5584", VA = "0xCC5584")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7354", Offset = "0x9A7354")]
			set
			{
			}
		}

		[Token(Token = "0x6001D4C")]
		[Address(RVA = "0xCC558C", Offset = "0xCC558C", VA = "0xCC558C", Slot = "5")]
		protected override void InitMono()
		{
		}

		[Token(Token = "0x6001D4D")]
		[Address(RVA = "0xCC55E8", Offset = "0xCC55E8", VA = "0xCC55E8")]
		public void LateUpdate()
		{
		}

		[Token(Token = "0x6001D4E")]
		[Address(RVA = "0xCC567C", Offset = "0xCC567C", VA = "0xCC567C")]
		private void UpdatePosition()
		{
		}

		[Token(Token = "0x6001D4F")]
		[Address(RVA = "0xCC583C", Offset = "0xCC583C", VA = "0xCC583C")]
		public void OnPickItem(RaycastHit hitInfo)
		{
		}

		[Token(Token = "0x6001D50")]
		[Address(RVA = "0xCC5AD4", Offset = "0xCC5AD4", VA = "0xCC5AD4")]
		public void OnPickItem2D(RaycastHit2D hitInfo2D)
		{
		}

		[Token(Token = "0x6001D51")]
		[Address(RVA = "0xCC5B04", Offset = "0xCC5B04", VA = "0xCC5B04")]
		public void OnPickableTransformSelected(Transform pickableTransform)
		{
		}

		[Token(Token = "0x6001D52")]
		[Address(RVA = "0xCC586C", Offset = "0xCC586C", VA = "0xCC586C")]
		public void FocusCameraOnTransform(Transform targetTransform)
		{
		}

		[Token(Token = "0x6001D53")]
		[Address(RVA = "0xCC5790", Offset = "0xCC5790", VA = "0xCC5790")]
		private void SetPosition(Vector3 newPosition)
		{
		}

		[Token(Token = "0x6001D54")]
		[Address(RVA = "0xCC5C7C", Offset = "0xCC5C7C", VA = "0xCC5C7C", Slot = "6")]
		public override void DestroyMono()
		{
		}

		[Token(Token = "0x6001D55")]
		[Address(RVA = "0xCC5C80", Offset = "0xCC5C80", VA = "0xCC5C80")]
		public FocusCameraOnItem()
		{
		}
	}
	[Token(Token = "0x2000232")]
	public class MainCamera : QSingleton<MainCamera>
	{
		[Token(Token = "0x40009AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Transform _tsCamRoot;

		[Token(Token = "0x40009AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GameObject _goCamRoot;

		[Token(Token = "0x40009AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Camera Camera;

		[Token(Token = "0x40009AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform TSCamera;

		[Token(Token = "0x40009B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Camera fxCam;

		[Token(Token = "0x40009B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MainCamComp _comp;

		[Token(Token = "0x40009B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Tweener _tweenShake;

		[Token(Token = "0x40009B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[NoToLua]
		public bool UseFixedView;

		[Token(Token = "0x40009B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector3 CurConfigPos;

		[Token(Token = "0x40009B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool mIsUse;

		[Token(Token = "0x40009B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<Camera> mOtherCameraList;

		[Token(Token = "0x170000EC")]
		public MainCamComp Comp
		{
			[Token(Token = "0x6001D56")]
			[Address(RVA = "0xBD3E88", Offset = "0xBD3E88", VA = "0xBD3E88")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000ED")]
		public Camera FXCam
		{
			[Token(Token = "0x6001D57")]
			[Address(RVA = "0xBD3E90", Offset = "0xBD3E90", VA = "0xBD3E90")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D58")]
		[Address(RVA = "0xBD3F78", Offset = "0xBD3F78", VA = "0xBD3F78")]
		public MainCamera()
		{
		}

		[Token(Token = "0x6001D59")]
		[Address(RVA = "0xBD4018", Offset = "0xBD4018", VA = "0xBD4018")]
		public void Init()
		{
		}

		[Token(Token = "0x6001D5A")]
		[Address(RVA = "0xBD40D8", Offset = "0xBD40D8", VA = "0xBD40D8")]
		[ExportToLuaAttrbute]
		public GameObject GetRoot()
		{
			return null;
		}

		[Token(Token = "0x6001D5B")]
		[Address(RVA = "0xBD40E0", Offset = "0xBD40E0", VA = "0xBD40E0")]
		public void MoveToPos(Vector3 pos)
		{
		}

		[Token(Token = "0x6001D5C")]
		[Address(RVA = "0xBD40FC", Offset = "0xBD40FC", VA = "0xBD40FC")]
		public void MoveDelta(Vector2 delta)
		{
		}

		[Token(Token = "0x6001D5D")]
		[Address(RVA = "0xBD41F0", Offset = "0xBD41F0", VA = "0xBD41F0")]
		[ExportToLuaAttrbute]
		public Vector3 GetEyesightPos(Vector2 screenPos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001D5E")]
		[Address(RVA = "0xBD43FC", Offset = "0xBD43FC", VA = "0xBD43FC")]
		[ExportToLuaAttrbute]
		public Vector3 FromScreenPoint(Vector3 screenPoint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001D5F")]
		[Address(RVA = "0xBD4418", Offset = "0xBD4418", VA = "0xBD4418")]
		[ExportToLuaAttrbute]
		public Vector3 WorldToScreenPoint(Vector3 worldPos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001D60")]
		[Address(RVA = "0xBD4434", Offset = "0xBD4434", VA = "0xBD4434")]
		public void SetCameraEnable(bool enable)
		{
		}

		[Token(Token = "0x6001D61")]
		[Address(RVA = "0xBD4438", Offset = "0xBD4438", VA = "0xBD4438")]
		[ExportToLuaAttrbute]
		public void SetTouch(bool enable)
		{
		}

		[Token(Token = "0x6001D62")]
		[Address(RVA = "0xBD44D8", Offset = "0xBD44D8", VA = "0xBD44D8")]
		public void ShakeCamera(float time, float x, float z, [Optional] AnimationCurve curve)
		{
		}

		[Token(Token = "0x6001D63")]
		[Address(RVA = "0xBD4630", Offset = "0xBD4630", VA = "0xBD4630")]
		private void RevertPos()
		{
		}

		[Token(Token = "0x6001D64")]
		[Address(RVA = "0xBD4658", Offset = "0xBD4658", VA = "0xBD4658")]
		public void SetEffectCamera(bool enable)
		{
		}

		[Token(Token = "0x6001D65")]
		[Address(RVA = "0xBD4678", Offset = "0xBD4678", VA = "0xBD4678")]
		public Transform GetCamRoot()
		{
			return null;
		}

		[Token(Token = "0x6001D66")]
		[Address(RVA = "0xBD4680", Offset = "0xBD4680", VA = "0xBD4680")]
		public void SetCamRootActive(bool isActive)
		{
		}

		[Token(Token = "0x6001D67")]
		[Address(RVA = "0xBD46A0", Offset = "0xBD46A0", VA = "0xBD46A0")]
		[ExportToLuaAttrbute]
		public void SetCameraParams(float posX, float posY, float posZ, float rotationX, float rotationY, float rotationZ, int type, float fov, float left, float right, float top, float bottom, float min, float max)
		{
		}

		[Token(Token = "0x6001D68")]
		[Address(RVA = "0xBD48F4", Offset = "0xBD48F4", VA = "0xBD48F4")]
		public void TweenCameraParams(float posX, float posY, float posZ, float rotationX, float rotationY, float rotationZ, int type, float fov, float time)
		{
		}

		[Token(Token = "0x6001D69")]
		[Address(RVA = "0xBD4AB4", Offset = "0xBD4AB4", VA = "0xBD4AB4")]
		[ExportToLuaAttrbute]
		public void SetUseCamera(bool use)
		{
		}

		[Token(Token = "0x6001D6A")]
		[Address(RVA = "0xBD4AC0", Offset = "0xBD4AC0", VA = "0xBD4AC0")]
		public void AddCameraGo(Camera c)
		{
		}

		[Token(Token = "0x6001D6B")]
		[Address(RVA = "0xBD4B28", Offset = "0xBD4B28", VA = "0xBD4B28")]
		public void RemoveCameraGo(Camera c)
		{
		}

		[Token(Token = "0x6001D6C")]
		[Address(RVA = "0xBD4B90", Offset = "0xBD4B90", VA = "0xBD4B90")]
		[NoToLua]
		private bool SetOtherCameraEnable(bool enable)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000233")]
	public static class ConstApp__HAIBAO__SWORD__
	{
		[Token(Token = "0x40009B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float _TIME_PER_FRAME;

		[Token(Token = "0x40009B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int _FRAME_PER_SECOND;

		[Token(Token = "0x40009B9")]
		public const float fEFFECT_CAM_DEPTH_BETWEEN_UI_FRONT_AND_BACK = 6f;

		[Token(Token = "0x40009BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string ResourcesName;

		[Token(Token = "0x40009BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static string Resources;

		[Token(Token = "0x170000EE")]
		public static float TIME_PER_FRAME
		{
			[Token(Token = "0x6001D6D")]
			[Address(RVA = "0xCC2B80", Offset = "0xCC2B80", VA = "0xCC2B80")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000EF")]
		public static int FRAME_PER_SECOND
		{
			[Token(Token = "0x6001D6E")]
			[Address(RVA = "0xCC2BE8", Offset = "0xCC2BE8", VA = "0xCC2BE8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000F0")]
		public static bool IS_ALL_SYS_OPEN
		{
			[Token(Token = "0x6001D70")]
			[Address(RVA = "0xCC2D6C", Offset = "0xCC2D6C", VA = "0xCC2D6C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000F1")]
		public static bool IsOpenGuide
		{
			[Token(Token = "0x6001D71")]
			[Address(RVA = "0xCC2D74", Offset = "0xCC2D74", VA = "0xCC2D74")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000F2")]
		public static int ForceGuideGroupID
		{
			[Token(Token = "0x6001D72")]
			[Address(RVA = "0xCC2D7C", Offset = "0xCC2D7C", VA = "0xCC2D7C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000F3")]
		public static bool IsGuideCanBack
		{
			[Token(Token = "0x6001D73")]
			[Address(RVA = "0xCC2D84", Offset = "0xCC2D84", VA = "0xCC2D84")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000F4")]
		public static bool IsGuideAutoPlay
		{
			[Token(Token = "0x6001D74")]
			[Address(RVA = "0xCC2D8C", Offset = "0xCC2D8C", VA = "0xCC2D8C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000F5")]
		public static bool IsUnityEditor
		{
			[Token(Token = "0x6001D75")]
			[Address(RVA = "0xCC2D94", Offset = "0xCC2D94", VA = "0xCC2D94")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000F6")]
		public static bool IsDebug
		{
			[Token(Token = "0x6001D76")]
			[Address(RVA = "0xCC2D9C", Offset = "0xCC2D9C", VA = "0xCC2D9C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001D6F")]
		[Address(RVA = "0xCC2C50", Offset = "0xCC2C50", VA = "0xCC2C50")]
		public static void SetFps(int fps)
		{
		}
	}
	[Token(Token = "0x2000234")]
	public static class ConstNotifyLua__HAIBAO__SWORD__
	{
		[Token(Token = "0x40009BC")]
		public const int ReportLua = 0;
	}
	[Token(Token = "0x2000235")]
	public static class ConstLayer__HAIBAO__SWORD__
	{
		[Token(Token = "0x40009BD")]
		public const string sDefault = "Default";

		[Token(Token = "0x40009BE")]
		public const string sCamera = "Camera";

		[Token(Token = "0x40009BF")]
		public const string sAttacker = "Attacker";

		[Token(Token = "0x40009C0")]
		public const string sUI = "UI";

		[Token(Token = "0x40009C1")]
		public const string sUI_MAIN = "UI_MAIN";

		[Token(Token = "0x40009C2")]
		public const string sUI_POPUP = "UI_POPUP";

		[Token(Token = "0x40009C3")]
		public const string sUI_HUD = "UI_HUD";

		[Token(Token = "0x40009C4")]
		public const string sUI_GUIDE = "UI_GUIDE";

		[Token(Token = "0x40009C5")]
		public const string sTween = "Tween";

		[Token(Token = "0x40009C6")]
		public const string sFloor = "Floor";

		[Token(Token = "0x40009C7")]
		public const string sFloorLight = "FloorLight";

		[Token(Token = "0x40009C8")]
		public const string sRenderTexture = "RenderTexture";

		[Token(Token = "0x40009C9")]
		public const string sJiaose = "jiaos";

		[Token(Token = "0x40009CA")]
		public const string sGeneral = "General";

		[Token(Token = "0x40009CB")]
		public const string sWater = "Water";

		[Token(Token = "0x40009CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int Default;

		[Token(Token = "0x40009CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static readonly int Camera;

		[Token(Token = "0x40009CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly int Attacker;

		[Token(Token = "0x40009CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static readonly int General;

		[Token(Token = "0x40009D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly int UI;

		[Token(Token = "0x40009D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static readonly int UI_MAIN;

		[Token(Token = "0x40009D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly int UI_POPUP;

		[Token(Token = "0x40009D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public static readonly int UI_HUD;

		[Token(Token = "0x40009D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly int UI_GUIDE;

		[Token(Token = "0x40009D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public static readonly int Tween;

		[Token(Token = "0x40009D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static readonly int Floor;

		[Token(Token = "0x40009D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public static readonly int FloorLight;

		[Token(Token = "0x40009D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static readonly int RenderTexture;

		[Token(Token = "0x40009D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public static readonly int FxLayer;

		[Token(Token = "0x40009DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static readonly int WaterLayer;

		[Token(Token = "0x40009DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public static readonly int EasyTouch;

		[Token(Token = "0x40009DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static readonly int UICameraMask;

		[Token(Token = "0x6001D78")]
		[Address(RVA = "0xCC2E3C", Offset = "0xCC2E3C", VA = "0xCC2E3C")]
		public static int GetUIMask()
		{
			return default(int);
		}

		[Token(Token = "0x6001D79")]
		[Address(RVA = "0xCC2FB8", Offset = "0xCC2FB8", VA = "0xCC2FB8")]
		public static int GetMainMask()
		{
			return default(int);
		}

		[Token(Token = "0x6001D7A")]
		[Address(RVA = "0xCC3100", Offset = "0xCC3100", VA = "0xCC3100")]
		public static int GetHudMask()
		{
			return default(int);
		}

		[Token(Token = "0x6001D7B")]
		[Address(RVA = "0xCC3214", Offset = "0xCC3214", VA = "0xCC3214")]
		public static int GetPopUpMask()
		{
			return default(int);
		}

		[Token(Token = "0x6001D7C")]
		[Address(RVA = "0xCC3328", Offset = "0xCC3328", VA = "0xCC3328")]
		public static int GetNameToLayer(string str)
		{
			return default(int);
		}

		[Token(Token = "0x6001D7D")]
		[Address(RVA = "0xCC3330", Offset = "0xCC3330", VA = "0xCC3330")]
		public static int GetMask(params string[] layerNames)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000236")]
	public class ConstStatic
	{
		[Token(Token = "0x40009DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Dictionary<GameObject, ReloadChildCompoent> _cachReloadChildComponent;

		[Token(Token = "0x40009DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Dictionary<string, Texture2D> StreamingAssetMgrDic;

		[Token(Token = "0x40009DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Dictionary<string, Material> mGrayAtlasToMat;

		[Token(Token = "0x40009E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Dictionary<string, SpriteItem__HAIBAO__SWORD__> KeyToSpriteItem;

		[Token(Token = "0x40009E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Dictionary<string, SpriteItem__HAIBAO__SWORD__> mUnusedSprite;

		[Token(Token = "0x40009E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Dictionary<string, string> mTexturePath;

		[Token(Token = "0x40009E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static Dictionary<string, Shader> _dicName2Shader;

		[Token(Token = "0x40009E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static Dictionary<string, Texture2D> mCache;

		[Token(Token = "0x40009E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static Dictionary<GameObject, LuaTable> TempLuaTable;

		[Token(Token = "0x40009E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static Dictionary<string, ComViewLoader> _dicAllLoader;

		[Token(Token = "0x6001D7F")]
		[Address(RVA = "0xCC35E8", Offset = "0xCC35E8", VA = "0xCC35E8")]
		public ConstStatic()
		{
		}
	}
	[Token(Token = "0x2000237")]
	public class ComCameraGo : MonoBehaviour
	{
		[Token(Token = "0x40009E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Camera[] mCameras;

		[Token(Token = "0x6001D81")]
		[Address(RVA = "0xCBACE8", Offset = "0xCBACE8", VA = "0xCBACE8")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001D82")]
		[Address(RVA = "0xCBADE8", Offset = "0xCBADE8", VA = "0xCBADE8")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6001D83")]
		[Address(RVA = "0xCBAEC8", Offset = "0xCBAEC8", VA = "0xCBAEC8")]
		public ComCameraGo()
		{
		}
	}
	[Token(Token = "0x2000238")]
	internal class TowardsCamera : SBehaviourForUpdate
	{
		[Token(Token = "0x6001D84")]
		[Address(RVA = "0xBE66C8", Offset = "0xBE66C8", VA = "0xBE66C8", Slot = "6")]
		public override void DestroyMono()
		{
		}

		[Token(Token = "0x6001D85")]
		[Address(RVA = "0xBE66CC", Offset = "0xBE66CC", VA = "0xBE66CC", Slot = "5")]
		protected override void InitMono()
		{
		}

		[Token(Token = "0x6001D86")]
		[Address(RVA = "0xBE66D0", Offset = "0xBE66D0", VA = "0xBE66D0", Slot = "7")]
		public override void OnFrame()
		{
		}

		[Token(Token = "0x6001D87")]
		[Address(RVA = "0xBE6788", Offset = "0xBE6788", VA = "0xBE6788")]
		public TowardsCamera()
		{
		}
	}
	[Token(Token = "0x2000239")]
	public class ImageLoadStreamingAssets : MonoBehaviour
	{
		[Token(Token = "0x20003CD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940190", Offset = "0x940190")]
		private sealed class <LoadPicture>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000FE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000FE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000FE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ImageLoadStreamingAssets <>4__this;

			[Token(Token = "0x1700020F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002D31")]
				[Address(RVA = "0xCC9388", Offset = "0xCC9388", VA = "0xCC9388", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000210")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002D33")]
				[Address(RVA = "0xCC93F0", Offset = "0xCC93F0", VA = "0xCC93F0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002D2E")]
			[Address(RVA = "0xCC90A8", Offset = "0xCC90A8", VA = "0xCC90A8")]
			[DebuggerHidden]
			public <LoadPicture>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6002D2F")]
			[Address(RVA = "0xCC90DC", Offset = "0xCC90DC", VA = "0xCC90DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002D30")]
			[Address(RVA = "0xCC90E0", Offset = "0xCC90E0", VA = "0xCC90E0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002D32")]
			[Address(RVA = "0xCC9390", Offset = "0xCC9390", VA = "0xCC9390", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40009E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Path;

		[Token(Token = "0x40009E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Image mImage;

		[Token(Token = "0x40009EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RawImage mRawImage;

		[Token(Token = "0x40009EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool mIsLoaded;

		[Token(Token = "0x6001D88")]
		[Address(RVA = "0xCC8F64", Offset = "0xCC8F64", VA = "0xCC8F64")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D89")]
		[Address(RVA = "0xCC9000", Offset = "0xCC9000", VA = "0xCC9000")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001D8A")]
		[Address(RVA = "0xCC9038", Offset = "0xCC9038", VA = "0xCC9038")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A73E4", Offset = "0x9A73E4")]
		private IEnumerator LoadPicture()
		{
			return null;
		}

		[Token(Token = "0x6001D8B")]
		[Address(RVA = "0xCC90D4", Offset = "0xCC90D4", VA = "0xCC90D4")]
		public ImageLoadStreamingAssets()
		{
		}
	}
	[Token(Token = "0x200023A")]
	public class ModelPoolMgr__HAIBAO__SWORD__ : QSingleton<ModelPoolMgr__HAIBAO__SWORD__>
	{
		[Token(Token = "0x20003CE")]
		private struct ModelItem
		{
			[Token(Token = "0x4000FE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string Path;

			[Token(Token = "0x4000FEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public GoCallBack Callback;

			[Token(Token = "0x4000FEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OnCheckDirty CheckCallback;

			[Token(Token = "0x4000FEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 initPos;

			[Token(Token = "0x4000FED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public ResourceRefType__HAIBAO__SWORD__ ResourceRefType;

			[Token(Token = "0x6002D34")]
			[Address(RVA = "0xBD6E68", Offset = "0xBD6E68", VA = "0xBD6E68")]
			public ModelItem(string p, GoCallBack c, OnCheckDirty checkCallback, Vector3 pos, ResourceRefType__HAIBAO__SWORD__ type)
			{
			}
		}

		[Token(Token = "0x20003CF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9401A0", Offset = "0x9401A0")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x4000FEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ModelPoolMgr__HAIBAO__SWORD__ <>4__this;

			[Token(Token = "0x4000FEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string path;

			[Token(Token = "0x4000FF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int totalCount;

			[Token(Token = "0x4000FF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LuaFunction callback;

			[Token(Token = "0x6002D35")]
			[Address(RVA = "0xBD6FFC", Offset = "0xBD6FFC", VA = "0xBD6FFC")]
			public <>c__DisplayClass8_0()
			{
			}
		}

		[Token(Token = "0x20003D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9401B0", Offset = "0x9401B0")]
		private sealed class <>c__DisplayClass8_1
		{
			[Token(Token = "0x4000FF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<GameObject> list;

			[Token(Token = "0x4000FF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int timer;

			[Token(Token = "0x4000FF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public <>c__DisplayClass8_0 CS$<>8__locals1;

			[Token(Token = "0x4000FF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GoCallBack <>9__1;

			[Token(Token = "0x6002D36")]
			[Address(RVA = "0xBD7004", Offset = "0xBD7004", VA = "0xBD7004")]
			public <>c__DisplayClass8_1()
			{
			}

			[Token(Token = "0x6002D37")]
			[Address(RVA = "0xBD72E4", Offset = "0xBD72E4", VA = "0xBD72E4")]
			internal void <InitWithTimer>b__0(object datas)
			{
			}

			[Token(Token = "0x6002D38")]
			[Address(RVA = "0xBD7474", Offset = "0xBD7474", VA = "0xBD7474")]
			internal void <InitWithTimer>b__1(GameObject go, Resource res)
			{
			}
		}

		[Token(Token = "0x40009EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ComObjectPools pools;

		[Token(Token = "0x40009ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private LoadHandler mHandleLoadRes;

		[Token(Token = "0x6001D8C")]
		[Address(RVA = "0xBD6438", Offset = "0xBD6438", VA = "0xBD6438")]
		[NoToLua]
		public static void JustUnload(GameObject go, Resource res)
		{
		}

		[Token(Token = "0x6001D8D")]
		[Address(RVA = "0xBD685C", Offset = "0xBD685C", VA = "0xBD685C")]
		[NoToLua]
		public ModelPoolMgr__HAIBAO__SWORD__()
		{
		}

		[Token(Token = "0x6001D8E")]
		[Address(RVA = "0xBD693C", Offset = "0xBD693C", VA = "0xBD693C")]
		public void Load(string path, ResourceRefType__HAIBAO__SWORD__ type, GoCallBack callback)
		{
		}

		[Token(Token = "0x6001D8F")]
		[Address(RVA = "0xBD6CC4", Offset = "0xBD6CC4", VA = "0xBD6CC4")]
		private void OnLoadWithInitPos(Resource res, object data)
		{
		}

		[Token(Token = "0x6001D90")]
		[Address(RVA = "0xBD69D4", Offset = "0xBD69D4", VA = "0xBD69D4")]
		public void LoadWithInitPos(string path, Vector3 initPos, ResourceRefType__HAIBAO__SWORD__ type, GoCallBack callback, [Optional] OnCheckDirty callCheck)
		{
		}

		[Token(Token = "0x6001D91")]
		[Address(RVA = "0xBD6E80", Offset = "0xBD6E80", VA = "0xBD6E80")]
		[NoToLua]
		public void InitWithTimer(string path, int totalCount, LuaFunction callback)
		{
		}

		[Token(Token = "0x6001D92")]
		[Address(RVA = "0xBD700C", Offset = "0xBD700C", VA = "0xBD700C")]
		public void SetCapacicy(string path, int capacity)
		{
		}

		[Token(Token = "0x6001D93")]
		[Address(RVA = "0xBD7028", Offset = "0xBD7028", VA = "0xBD7028")]
		[NoToLua]
		public GameObject LoadSync(string path, ResourceRefType__HAIBAO__SWORD__ type)
		{
			return null;
		}

		[Token(Token = "0x6001D94")]
		[Address(RVA = "0xBD7280", Offset = "0xBD7280", VA = "0xBD7280")]
		public bool ContainKey(string path)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D95")]
		[Address(RVA = "0xBD64B4", Offset = "0xBD64B4", VA = "0xBD64B4")]
		public void UnLoad(GameObject go)
		{
		}

		[Token(Token = "0x6001D96")]
		[Address(RVA = "0xBD72AC", Offset = "0xBD72AC", VA = "0xBD72AC")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001D97")]
		[Address(RVA = "0xBD72C8", Offset = "0xBD72C8", VA = "0xBD72C8")]
		public void Clear(string path)
		{
		}
	}
	[Token(Token = "0x200023B")]
	public class PoolUIViewItem__HAIBAO__SWORD__ : QSingleton<PoolUIViewItem__HAIBAO__SWORD__>
	{
		[Token(Token = "0x20003D1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9401C0", Offset = "0x9401C0")]
		private sealed class <CheckWaitFrame>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000FF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000FF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000FF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PoolUIViewItem__HAIBAO__SWORD__ <>4__this;

			[Token(Token = "0x17000211")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002D3C")]
				[Address(RVA = "0xBD9B94", Offset = "0xBD9B94", VA = "0xBD9B94", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000212")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002D3E")]
				[Address(RVA = "0xBD9BFC", Offset = "0xBD9BFC", VA = "0xBD9BFC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002D39")]
			[Address(RVA = "0xBD9204", Offset = "0xBD9204", VA = "0xBD9204")]
			[DebuggerHidden]
			public <CheckWaitFrame>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6002D3A")]
			[Address(RVA = "0xBD9B14", Offset = "0xBD9B14", VA = "0xBD9B14", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002D3B")]
			[Address(RVA = "0xBD9B18", Offset = "0xBD9B18", VA = "0xBD9B18", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002D3D")]
			[Address(RVA = "0xBD9B9C", Offset = "0xBD9B9C", VA = "0xBD9B9C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40009EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<string, Queue<GameObject>> PathToUIItem;

		[Token(Token = "0x40009EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<string, GameObject> PathToPoolRoot;

		[Token(Token = "0x40009F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int mWaitFrame;

		[Token(Token = "0x40009F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int mWaitTimeFrameCount;

		[Token(Token = "0x40009F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<string> mCachePath;

		[Token(Token = "0x6001D98")]
		[Address(RVA = "0xBD8FD4", Offset = "0xBD8FD4", VA = "0xBD8FD4")]
		public GameObject Load(string path, GameObject root, GameObject prefab, string name, bool isRecordWait)
		{
			return null;
		}

		[Token(Token = "0x6001D99")]
		[Address(RVA = "0xBD9194", Offset = "0xBD9194", VA = "0xBD9194")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A7488", Offset = "0x9A7488")]
		public IEnumerator CheckWaitFrame()
		{
			return null;
		}

		[Token(Token = "0x6001D9A")]
		[Address(RVA = "0xBD9230", Offset = "0xBD9230", VA = "0xBD9230")]
		public bool UnLoad(string path, List<GameObject> childs)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D9B")]
		[Address(RVA = "0xBD9880", Offset = "0xBD9880", VA = "0xBD9880")]
		public bool UnLoad(string path, List<RectTransform> childs)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D9C")]
		[Address(RVA = "0xBD94C0", Offset = "0xBD94C0", VA = "0xBD94C0")]
		private void UnLoad(string path, GameObject go)
		{
		}

		[Token(Token = "0x6001D9D")]
		[Address(RVA = "0xBD93A8", Offset = "0xBD93A8", VA = "0xBD93A8")]
		private bool IsCache(string path)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D9E")]
		[Address(RVA = "0xBD9A24", Offset = "0xBD9A24", VA = "0xBD9A24")]
		public PoolUIViewItem__HAIBAO__SWORD__()
		{
		}
	}
	[Token(Token = "0x200023C")]
	public class StreamingAssetMgr : MonoBehaviour
	{
		[Token(Token = "0x20003D2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9401D0", Offset = "0x9401D0")]
		private sealed class <LoadPicture>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000FF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000FFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000FFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private string <path>5__2;

			[Token(Token = "0x4000FFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private WWW <www>5__3;

			[Token(Token = "0x17000213")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002D42")]
				[Address(RVA = "0xBDF5A0", Offset = "0xBDF5A0", VA = "0xBDF5A0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000214")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002D44")]
				[Address(RVA = "0xBDF608", Offset = "0xBDF608", VA = "0xBDF608", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002D3F")]
			[Address(RVA = "0xBDEEF4", Offset = "0xBDEEF4", VA = "0xBDEEF4")]
			[DebuggerHidden]
			public <LoadPicture>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6002D40")]
			[Address(RVA = "0xBDF244", Offset = "0xBDF244", VA = "0xBDF244", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002D41")]
			[Address(RVA = "0xBDF248", Offset = "0xBDF248", VA = "0xBDF248", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002D43")]
			[Address(RVA = "0xBDF5A8", Offset = "0xBDF5A8", VA = "0xBDF5A8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40009F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Queue<string> mQueue;

		[Token(Token = "0x40009F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int LastFrame;

		[Token(Token = "0x40009F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static StreamingAssetMgr Instance;

		[Token(Token = "0x40009F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static bool running;

		[Token(Token = "0x6001D9F")]
		[Address(RVA = "0xBDEC44", Offset = "0xBDEC44", VA = "0xBDEC44")]
		public static void Load(string path)
		{
		}

		[Token(Token = "0x6001DA0")]
		[Address(RVA = "0xBDEE24", Offset = "0xBDEE24", VA = "0xBDEE24")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6001DA1")]
		[Address(RVA = "0xBDED40", Offset = "0xBDED40", VA = "0xBDED40")]
		public void StartLoad()
		{
		}

		[Token(Token = "0x6001DA2")]
		[Address(RVA = "0xBDEE94", Offset = "0xBDEE94", VA = "0xBDEE94")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A74EC", Offset = "0x9A74EC")]
		private IEnumerator LoadPicture()
		{
			return null;
		}

		[Token(Token = "0x6001DA3")]
		[Address(RVA = "0xBDEF20", Offset = "0xBDEF20", VA = "0xBDEF20")]
		public void Update()
		{
		}

		[Token(Token = "0x6001DA4")]
		[Address(RVA = "0xBDF0AC", Offset = "0xBDF0AC", VA = "0xBDF0AC")]
		public static bool IsHasTexture(string path)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DA5")]
		[Address(RVA = "0xBDF130", Offset = "0xBDF130", VA = "0xBDF130")]
		public static Texture2D GetTexture(string path)
		{
			return null;
		}

		[Token(Token = "0x6001DA6")]
		[Address(RVA = "0xBDF1B4", Offset = "0xBDF1B4", VA = "0xBDF1B4")]
		public StreamingAssetMgr()
		{
		}
	}
	[Token(Token = "0x200023D")]
	public static class SwordExt__HAIBAO__SWORD__
	{
		[Token(Token = "0x20003D3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9401E0", Offset = "0x9401E0")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4000FFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool isNative;

			[Token(Token = "0x4000FFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Image img;

			[Token(Token = "0x6002D45")]
			[Address(RVA = "0xBDF6E0", Offset = "0xBDF6E0", VA = "0xBDF6E0")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6002D46")]
			[Address(RVA = "0xBDF8AC", Offset = "0xBDF8AC", VA = "0xBDF8AC")]
			internal void <SetSprite>b__0()
			{
			}
		}

		[Token(Token = "0x20003D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9401F0", Offset = "0x9401F0")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4000FFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LuaFunction call;

			[Token(Token = "0x6002D47")]
			[Address(RVA = "0xBDF7D4", Offset = "0xBDF7D4", VA = "0xBDF7D4")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x6002D48")]
			[Address(RVA = "0xBDF8DC", Offset = "0xBDF8DC", VA = "0xBDF8DC")]
			internal void <SetSpriteWithLuaFunc>b__0()
			{
			}
		}

		[Token(Token = "0x20003D5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940200", Offset = "0x940200")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x4001000")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action func;

			[Token(Token = "0x6002D49")]
			[Address(RVA = "0xBDF8A4", Offset = "0xBDF8A4", VA = "0xBDF8A4")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x6002D4A")]
			[Address(RVA = "0xBDF93C", Offset = "0xBDF93C", VA = "0xBDF93C")]
			internal void <SetSpriteWithAction>b__0()
			{
			}
		}

		[Token(Token = "0x6001DA8")]
		[Address(RVA = "0xBDF610", Offset = "0xBDF610", VA = "0xBDF610")]
		public static void SetSprite(this Image img, string name, bool isNative)
		{
		}

		[Token(Token = "0x6001DA9")]
		[Address(RVA = "0xBDC254", Offset = "0xBDC254", VA = "0xBDC254")]
		public static void SetSprite(this Image img, string name, Action callBack)
		{
		}

		[Token(Token = "0x6001DAA")]
		[Address(RVA = "0xBDF6F0", Offset = "0xBDF6F0", VA = "0xBDF6F0")]
		public static void SetSprite(this Image img, string name)
		{
		}

		[Token(Token = "0x6001DAB")]
		[Address(RVA = "0xBDF6E8", Offset = "0xBDF6E8", VA = "0xBDF6E8")]
		public static void SetSprite(this Image img, string name, Action callBack, bool isCache)
		{
		}

		[Token(Token = "0x6001DAC")]
		[Address(RVA = "0xBDF6FC", Offset = "0xBDF6FC", VA = "0xBDF6FC")]
		public static void SetSpriteWithLuaFunc(this Image img, string name, LuaFunction call)
		{
		}

		[Token(Token = "0x6001DAD")]
		[Address(RVA = "0xBDF7DC", Offset = "0xBDF7DC", VA = "0xBDF7DC")]
		public static void SetSpriteWithAction(this Image img, string name, Action func)
		{
		}
	}
	[Token(Token = "0x200023E")]
	public class DownloadTiming__HAIBAO__SWORD__ : QSingleton<DownloadTiming__HAIBAO__SWORD__>
	{
		[Token(Token = "0x40009F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int DownloadInterval;

		[Token(Token = "0x40009F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ThreadItem mThread;

		[Token(Token = "0x40009F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string[] mDownloadListSortLevel;

		[Token(Token = "0x40009FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool isRun;

		[Token(Token = "0x40009FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Queue<string> mQueue;

		[Token(Token = "0x6001DAE")]
		[Address(RVA = "0xCC45A8", Offset = "0xCC45A8", VA = "0xCC45A8")]
		public DownloadTiming__HAIBAO__SWORD__()
		{
		}

		[Token(Token = "0x6001DAF")]
		[Address(RVA = "0xCC4698", Offset = "0xCC4698", VA = "0xCC4698")]
		public void Start()
		{
		}

		[Token(Token = "0x6001DB0")]
		[Address(RVA = "0xCC48E4", Offset = "0xCC48E4", VA = "0xCC48E4")]
		public void Stop()
		{
		}

		[Token(Token = "0x6001DB1")]
		[Address(RVA = "0xCC4970", Offset = "0xCC4970", VA = "0xCC4970")]
		private void Run()
		{
		}

		[Token(Token = "0x6001DB2")]
		[Address(RVA = "0xCC4C24", Offset = "0xCC4C24", VA = "0xCC4C24")]
		private bool DownloadByAbName(string abName)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200023F")]
	internal class GrayMgr__HAIBAO__SWORD__
	{
		[Token(Token = "0x40009FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Material mDefaultText;

		[Token(Token = "0x40009FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Material mGrayText;

		[Token(Token = "0x40009FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Material mDefaultRawImage;

		[Token(Token = "0x40009FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Material mGrayRawImage;

		[Token(Token = "0x4000A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Material mGraySingleImage;

		[Token(Token = "0x6001DB4")]
		[Address(RVA = "0xCC61D0", Offset = "0xCC61D0", VA = "0xCC61D0")]
		public static void SetGray(ImageEx img)
		{
		}

		[Token(Token = "0x6001DB5")]
		[Address(RVA = "0xCC657C", Offset = "0xCC657C", VA = "0xCC657C")]
		public static void SetDefault(ImageEx img)
		{
		}

		[Token(Token = "0x6001DB6")]
		[Address(RVA = "0xCC6594", Offset = "0xCC6594", VA = "0xCC6594")]
		public static void SetGray(Text text)
		{
		}

		[Token(Token = "0x6001DB7")]
		[Address(RVA = "0xCC6698", Offset = "0xCC6698", VA = "0xCC6698")]
		public static void SetGray(InlineText text)
		{
		}

		[Token(Token = "0x6001DB8")]
		[Address(RVA = "0xCC679C", Offset = "0xCC679C", VA = "0xCC679C")]
		public static void SetDefault(Text text)
		{
		}

		[Token(Token = "0x6001DB9")]
		[Address(RVA = "0xCC68A4", Offset = "0xCC68A4", VA = "0xCC68A4")]
		public static void SetDefault(InlineText text)
		{
		}

		[Token(Token = "0x6001DBA")]
		[Address(RVA = "0xCC69AC", Offset = "0xCC69AC", VA = "0xCC69AC")]
		public static void SetGray(RawImage t)
		{
		}

		[Token(Token = "0x6001DBB")]
		[Address(RVA = "0xCC6AB0", Offset = "0xCC6AB0", VA = "0xCC6AB0")]
		public static void SetDefault(RawImage t)
		{
		}

		[Token(Token = "0x6001DBC")]
		[Address(RVA = "0xCC6BB4", Offset = "0xCC6BB4", VA = "0xCC6BB4")]
		public static void Clear()
		{
		}

		[Token(Token = "0x6001DBD")]
		[Address(RVA = "0xCC6BB8", Offset = "0xCC6BB8", VA = "0xCC6BB8")]
		public GrayMgr__HAIBAO__SWORD__()
		{
		}
	}
	[Token(Token = "0x2000240")]
	public class SpriteItem__HAIBAO__SWORD__ : RefCounter
	{
		[Token(Token = "0x4000A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Sprite mSprite;

		[Token(Token = "0x4000A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Resource mRes;

		[Token(Token = "0x4000A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Action mCallBack;

		[Token(Token = "0x4000A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Material mDefaultMat;

		[Token(Token = "0x4000A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public DateTime Time;

		[Token(Token = "0x4000A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string mSpriteName;

		[Token(Token = "0x4000A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool mIsLoad;

		[Token(Token = "0x170000F7")]
		public string SpriteName
		{
			[Token(Token = "0x6001DBE")]
			[Address(RVA = "0xBDA1E4", Offset = "0xBDA1E4", VA = "0xBDA1E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F8")]
		public bool IsLoaded
		{
			[Token(Token = "0x6001DC4")]
			[Address(RVA = "0xBDA814", Offset = "0xBDA814", VA = "0xBDA814")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001DBF")]
		[Address(RVA = "0xBDA1EC", Offset = "0xBDA1EC", VA = "0xBDA1EC")]
		public void SetImage(ImageEx img)
		{
		}

		[Token(Token = "0x6001DC0")]
		[Address(RVA = "0xBDA38C", Offset = "0xBDA38C", VA = "0xBDA38C", Slot = "8")]
		protected override void OnZeroRef()
		{
		}

		[Token(Token = "0x6001DC1")]
		[Address(RVA = "0xBDA46C", Offset = "0xBDA46C", VA = "0xBDA46C")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001DC2")]
		[Address(RVA = "0xBDA48C", Offset = "0xBDA48C", VA = "0xBDA48C")]
		public void SetRes(Resource res)
		{
		}

		[Token(Token = "0x6001DC3")]
		[Address(RVA = "0xBDA494", Offset = "0xBDA494", VA = "0xBDA494")]
		public void Load(string spriteName)
		{
		}

		[Token(Token = "0x6001DC5")]
		[Address(RVA = "0xBDA81C", Offset = "0xBDA81C", VA = "0xBDA81C")]
		public void CallCallback()
		{
		}

		[Token(Token = "0x6001DC6")]
		[Address(RVA = "0xBDA84C", Offset = "0xBDA84C", VA = "0xBDA84C")]
		public void AddCallback(Action a)
		{
		}

		[Token(Token = "0x6001DC7")]
		[Address(RVA = "0xBDA8CC", Offset = "0xBDA8CC", VA = "0xBDA8CC", Slot = "6")]
		public override void Release()
		{
		}

		[Token(Token = "0x6001DC8")]
		[Address(RVA = "0xBDA904", Offset = "0xBDA904", VA = "0xBDA904", Slot = "5")]
		public override void Retain()
		{
		}

		[Token(Token = "0x6001DC9")]
		[Address(RVA = "0xBDA93C", Offset = "0xBDA93C", VA = "0xBDA93C")]
		public bool IsOverTime()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DCA")]
		[Address(RVA = "0xBDA9F0", Offset = "0xBDA9F0", VA = "0xBDA9F0")]
		public void SetImgSprite(SpriteRenderer render)
		{
		}

		[Token(Token = "0x6001DCB")]
		[Address(RVA = "0xBDAA94", Offset = "0xBDAA94", VA = "0xBDAA94")]
		public SpriteItem__HAIBAO__SWORD__()
		{
		}
	}
	[Token(Token = "0x2000241")]
	public class SpriteMgr__HAIBAO__SWORD__
	{
		[Token(Token = "0x20003D6")]
		private struct SpriteResItem
		{
			[Token(Token = "0x4001001")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public SpriteItem__HAIBAO__SWORD__ item;

			[Token(Token = "0x4001002")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public ImageEx image;

			[Token(Token = "0x4001003")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string name;

			[Token(Token = "0x4001004")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SpriteRef spriteRef;

			[Token(Token = "0x4001005")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SpriteRenderer spriteRender;
		}

		[Token(Token = "0x6001DCC")]
		[Address(RVA = "0xBDAA9C", Offset = "0xBDAA9C", VA = "0xBDAA9C")]
		private static SpriteItem__HAIBAO__SWORD__ Create(string name)
		{
			return null;
		}

		[Token(Token = "0x6001DCD")]
		[Address(RVA = "0xBDAB50", Offset = "0xBDAB50", VA = "0xBDAB50")]
		public static void AddUsed(SpriteItem__HAIBAO__SWORD__ item)
		{
		}

		[Token(Token = "0x6001DCE")]
		[Address(RVA = "0xBDA390", Offset = "0xBDA390", VA = "0xBDA390")]
		public static void AddUnused(SpriteItem__HAIBAO__SWORD__ item)
		{
		}

		[Token(Token = "0x6001DCF")]
		[Address(RVA = "0xBDAC2C", Offset = "0xBDAC2C", VA = "0xBDAC2C")]
		public static void Clear()
		{
		}

		[Token(Token = "0x6001DD0")]
		[Address(RVA = "0xBDAC30", Offset = "0xBDAC30", VA = "0xBDAC30")]
		public static void Retain(SpriteItem__HAIBAO__SWORD__ item)
		{
		}

		[Token(Token = "0x6001DD1")]
		[Address(RVA = "0xBDAC64", Offset = "0xBDAC64", VA = "0xBDAC64")]
		public static void Release(SpriteItem__HAIBAO__SWORD__ item)
		{
		}

		[Token(Token = "0x6001DD2")]
		[Address(RVA = "0xBDAC80", Offset = "0xBDAC80", VA = "0xBDAC80")]
		public static SpriteItem__HAIBAO__SWORD__ GetSpriteItem(string name)
		{
			return null;
		}

		[Token(Token = "0x6001DD3")]
		[Address(RVA = "0xBDAD5C", Offset = "0xBDAD5C", VA = "0xBDAD5C")]
		public static void SetSprite(ImageEx imgEx, string name, Action call)
		{
		}

		[Token(Token = "0x6001DD4")]
		[Address(RVA = "0xBDB178", Offset = "0xBDB178", VA = "0xBDB178")]
		private static void OnHandleLoad(Resource res, object obj)
		{
		}

		[Token(Token = "0x6001DD5")]
		[Address(RVA = "0xBDB2E8", Offset = "0xBDB2E8", VA = "0xBDB2E8")]
		private static SpriteRef GetRenderSpriteRef(SpriteRenderer spriteRender)
		{
			return null;
		}

		[Token(Token = "0x6001DD6")]
		[Address(RVA = "0xBDB0DC", Offset = "0xBDB0DC", VA = "0xBDB0DC")]
		public static string GetPath(string spriteName)
		{
			return null;
		}

		[Token(Token = "0x6001DD7")]
		[Address(RVA = "0xBDA308", Offset = "0xBDA308", VA = "0xBDA308")]
		public static eImageType__HAIBAO__SWORD__ GetSpriteType(string spriteName)
		{
			return default(eImageType__HAIBAO__SWORD__);
		}

		[Token(Token = "0x6001DD8")]
		[Address(RVA = "0xBDB724", Offset = "0xBDB724", VA = "0xBDB724")]
		public static void SetSprite(Image img, string name, Action callBack, bool isCache)
		{
		}

		[Token(Token = "0x6001DD9")]
		[Address(RVA = "0xBDB8C4", Offset = "0xBDB8C4", VA = "0xBDB8C4")]
		public static void SetSprite(ImageEx imgEx, string name, Action callBack, bool isCache)
		{
		}

		[Token(Token = "0x6001DDA")]
		[Address(RVA = "0xBDB524", Offset = "0xBDB524", VA = "0xBDB524")]
		public static string getTexturePath(string spriteName, bool isCache)
		{
			return null;
		}

		[Token(Token = "0x6001DDB")]
		[Address(RVA = "0xBDB3AC", Offset = "0xBDB3AC", VA = "0xBDB3AC")]
		public static string GetSingleSpritePath(string spriteName, bool isCache)
		{
			return null;
		}

		[Token(Token = "0x6001DDC")]
		[Address(RVA = "0xBDB99C", Offset = "0xBDB99C", VA = "0xBDB99C")]
		public static void CheckUnusedSprite()
		{
		}

		[Token(Token = "0x6001DDD")]
		[Address(RVA = "0xBDBB2C", Offset = "0xBDBB2C", VA = "0xBDBB2C")]
		public static void SetSpriteRenderSprite(SpriteRenderer spriterender, string name, Action call)
		{
		}

		[Token(Token = "0x6001DDE")]
		[Address(RVA = "0xBDBD74", Offset = "0xBDBD74", VA = "0xBDBD74")]
		private static void OnSpriteRenderHandleLoad(Resource res, object obj)
		{
		}

		[Token(Token = "0x6001DDF")]
		[Address(RVA = "0xBDBEA0", Offset = "0xBDBEA0", VA = "0xBDBEA0")]
		public SpriteMgr__HAIBAO__SWORD__()
		{
		}
	}
	[Token(Token = "0x2000242")]
	public class SpriteRef : SBehaviour
	{
		[Token(Token = "0x4000A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private SpriteItem__HAIBAO__SWORD__ mItem;

		[Token(Token = "0x6001DE0")]
		[Address(RVA = "0xBDBEA8", Offset = "0xBDBEA8", VA = "0xBDBEA8", Slot = "1")]
		~SpriteRef()
		{
		}

		[Token(Token = "0x6001DE1")]
		[Address(RVA = "0xBDBF70", Offset = "0xBDBF70", VA = "0xBDBF70", Slot = "6")]
		public override void DestroyMono()
		{
		}

		[Token(Token = "0x6001DE2")]
		[Address(RVA = "0xBDBFA4", Offset = "0xBDBFA4", VA = "0xBDBFA4", Slot = "5")]
		protected override void InitMono()
		{
		}

		[Token(Token = "0x6001DE3")]
		[Address(RVA = "0xBDB094", Offset = "0xBDB094", VA = "0xBDB094")]
		public void SetSpriteItem(SpriteItem__HAIBAO__SWORD__ item)
		{
		}

		[Token(Token = "0x6001DE4")]
		[Address(RVA = "0xBDB060", Offset = "0xBDB060", VA = "0xBDB060")]
		public void Release()
		{
		}

		[Token(Token = "0x6001DE5")]
		[Address(RVA = "0xBDBFA8", Offset = "0xBDBFA8", VA = "0xBDBFA8")]
		public SpriteRef()
		{
		}
	}
	[Token(Token = "0x2000243")]
	public class HttpManager
	{
		[Token(Token = "0x20003D7")]
		public delegate void OnHttpCallback(int state, string data);

		[Token(Token = "0x20003D8")]
		public delegate void OnHttpByteCallback(int state, byte[] data);

		[Serializable]
		[Token(Token = "0x20003D9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940210", Offset = "0x940210")]
		private sealed class <>c
		{
			[Token(Token = "0x4001006")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001007")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static RemoteCertificateValidationCallback <>9__6_0;

			[Token(Token = "0x6002D54")]
			[Address(RVA = "0xCC856C", Offset = "0xCC856C", VA = "0xCC856C")]
			public <>c()
			{
			}

			[Token(Token = "0x6002D55")]
			[Address(RVA = "0xCC8574", Offset = "0xCC8574", VA = "0xCC8574")]
			internal bool <Init>b__6_0(object p1, X509Certificate p2, X509Chain p3, SslPolicyErrors p4)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20003DA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940220", Offset = "0x940220")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x4001008")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OnHttpByteCallback callback;

			[Token(Token = "0x6002D56")]
			[Address(RVA = "0xCC6E00", Offset = "0xCC6E00", VA = "0xCC6E00")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x6002D57")]
			[Address(RVA = "0xCC8894", Offset = "0xCC8894", VA = "0xCC8894")]
			internal void <RequestHttp>b__0(HttpInfo info)
			{
			}
		}

		[Token(Token = "0x20003DB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940230", Offset = "0x940230")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x4001009")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OnHttpCallback callback;

			[Token(Token = "0x6002D58")]
			[Address(RVA = "0xCC71C0", Offset = "0xCC71C0", VA = "0xCC71C0")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x6002D59")]
			[Address(RVA = "0xCC88F4", Offset = "0xCC88F4", VA = "0xCC88F4")]
			internal void <RequestHttp>b__0(HttpInfo info)
			{
			}
		}

		[Token(Token = "0x20003DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940240", Offset = "0x940240")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x400100A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string path;

			[Token(Token = "0x400100B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public OnTexture callback;

			[Token(Token = "0x6002D5A")]
			[Address(RVA = "0xCC75E0", Offset = "0xCC75E0", VA = "0xCC75E0")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x6002D5B")]
			[Address(RVA = "0xCC8B14", Offset = "0xCC8B14", VA = "0xCC8B14")]
			internal void <ReqTextureRequest>b__0(string url, string error, Texture2D tex)
			{
			}
		}

		[Token(Token = "0x20003DD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940250", Offset = "0x940250")]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x400100C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LuaFunction callback;

			[Token(Token = "0x6002D5C")]
			[Address(RVA = "0xCC7BEC", Offset = "0xCC7BEC", VA = "0xCC7BEC")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x6002D5D")]
			[Address(RVA = "0xCC857C", Offset = "0xCC857C", VA = "0xCC857C")]
			internal void <PostHttp>b__0(HttpInfo info)
			{
			}
		}

		[Token(Token = "0x20003DE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940260", Offset = "0x940260")]
		private sealed class <>c__DisplayClass12_0
		{
			[Token(Token = "0x400100D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LuaFunction callback;

			[Token(Token = "0x6002D5E")]
			[Address(RVA = "0xCC7D38", Offset = "0xCC7D38", VA = "0xCC7D38")]
			public <>c__DisplayClass12_0()
			{
			}

			[Token(Token = "0x6002D5F")]
			[Address(RVA = "0xCC861C", Offset = "0xCC861C", VA = "0xCC861C")]
			internal void <HttpPostString>b__0(HttpInfo info)
			{
			}
		}

		[Token(Token = "0x20003DF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940270", Offset = "0x940270")]
		private sealed class <>c__DisplayClass15_0
		{
			[Token(Token = "0x400100E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int id;

			[Token(Token = "0x400100F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UnityEngine.Object comp;

			[Token(Token = "0x4001010")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LuaFunction fun;

			[Token(Token = "0x6002D60")]
			[Address(RVA = "0xCC7F60", Offset = "0xCC7F60", VA = "0xCC7F60")]
			public <>c__DisplayClass15_0()
			{
			}

			[Token(Token = "0x6002D61")]
			[Address(RVA = "0xCC86BC", Offset = "0xCC86BC", VA = "0xCC86BC")]
			internal void <_dowloadWithData>b__0(Texture2D tex)
			{
			}
		}

		[Token(Token = "0x20003E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940280", Offset = "0x940280")]
		private sealed class <>c__DisplayClass20_0
		{
			[Token(Token = "0x4001011")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<string, string, string, string> finish;

			[Token(Token = "0x4001012")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string abName;

			[Token(Token = "0x6002D62")]
			[Address(RVA = "0xCC825C", Offset = "0xCC825C", VA = "0xCC825C")]
			public <>c__DisplayClass20_0()
			{
			}

			[Token(Token = "0x6002D63")]
			[Address(RVA = "0xCC876C", Offset = "0xCC876C", VA = "0xCC876C")]
			internal void <AsyncDownload>b__0(string url, string error, string localPath)
			{
			}

			[Token(Token = "0x6002D64")]
			[Address(RVA = "0xCC8800", Offset = "0xCC8800", VA = "0xCC8800")]
			internal void <AsyncDownload>b__1(string url, string error, string localPath)
			{
			}
		}

		[Token(Token = "0x20003E1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940290", Offset = "0x940290")]
		private sealed class <UnityWebRequestGet>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001013")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001014")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001015")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string url;

			[Token(Token = "0x4001016")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LuaFunction callback;

			[Token(Token = "0x4001017")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UnityWebRequest <webRequest>5__2;

			[Token(Token = "0x17000215")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002D68")]
				[Address(RVA = "0xCC8D8C", Offset = "0xCC8D8C", VA = "0xCC8D8C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000216")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002D6A")]
				[Address(RVA = "0xCC8DF4", Offset = "0xCC8DF4", VA = "0xCC8DF4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002D65")]
			[Address(RVA = "0xCC84D4", Offset = "0xCC84D4", VA = "0xCC84D4")]
			[DebuggerHidden]
			public <UnityWebRequestGet>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x6002D66")]
			[Address(RVA = "0xCC8BE4", Offset = "0xCC8BE4", VA = "0xCC8BE4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002D67")]
			[Address(RVA = "0xCC8BE8", Offset = "0xCC8BE8", VA = "0xCC8BE8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002D69")]
			[Address(RVA = "0xCC8D94", Offset = "0xCC8D94", VA = "0xCC8D94", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A09")]
		public const int TIME_OUT_INTTERVAL = 10000;

		[Token(Token = "0x4000A0A")]
		public const int TIme_out_download = 30;

		[Token(Token = "0x4000A0B")]
		public const int downloadMaxConnect = 5;

		[Token(Token = "0x4000A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static MonoBehaviour mRoot;

		[Token(Token = "0x4000A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Downloader mDownloader;

		[Token(Token = "0x170000F9")]
		public static Downloader Downloader
		{
			[Token(Token = "0x6001DF8")]
			[Address(RVA = "0xCC8264", Offset = "0xCC8264", VA = "0xCC8264")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DE6")]
		[Address(RVA = "0xCC6BC0", Offset = "0xCC6BC0", VA = "0xCC6BC0")]
		public static void Init(MonoBehaviour root)
		{
		}

		[Token(Token = "0x6001DE7")]
		[Address(RVA = "0xCC6CCC", Offset = "0xCC6CCC", VA = "0xCC6CCC")]
		public static void RequestHttp(string path, OnHttpByteCallback callback)
		{
		}

		[Token(Token = "0x6001DE8")]
		[Address(RVA = "0xCC7084", Offset = "0xCC7084", VA = "0xCC7084")]
		public static void RequestHttp(string path, OnHttpCallback callback)
		{
		}

		[Token(Token = "0x6001DE9")]
		[Address(RVA = "0xCC7444", Offset = "0xCC7444", VA = "0xCC7444")]
		public static void ReqTextureRequest(string path, OnTexture callback)
		{
		}

		[Token(Token = "0x6001DEA")]
		[Address(RVA = "0xCC75E8", Offset = "0xCC75E8", VA = "0xCC75E8")]
		[ExportToLuaAttrbute]
		public static void ReqHttp(string url, LuaFunction callback)
		{
		}

		[Token(Token = "0x6001DEB")]
		[Address(RVA = "0xCC77D0", Offset = "0xCC77D0", VA = "0xCC77D0")]
		[ExportToLuaAttrbute]
		public static void PostHttp(string url, LuaFunction callback, LuaTable form)
		{
		}

		[Token(Token = "0x6001DEC")]
		[Address(RVA = "0xCC7BF4", Offset = "0xCC7BF4", VA = "0xCC7BF4")]
		[ExportToLuaAttrbute]
		public static void HttpPostString(string url, LuaFunction callback, string data)
		{
		}

		[Token(Token = "0x6001DED")]
		[Address(RVA = "0xCC7D40", Offset = "0xCC7D40", VA = "0xCC7D40")]
		[ExportToLuaAttrbute]
		public static void DownLoadImgAsyn(GameObject go, string uri, [Optional] LuaFunction onLoaded)
		{
		}

		[Token(Token = "0x6001DEE")]
		[Address(RVA = "0xCC7DB4", Offset = "0xCC7DB4", VA = "0xCC7DB4")]
		public static void DownloadImgAsynByComp(RawImageEx comp, string uri, [Optional] LuaFunction onLoaded)
		{
		}

		[Token(Token = "0x6001DEF")]
		[Address(RVA = "0xCC7EA4", Offset = "0xCC7EA4", VA = "0xCC7EA4")]
		private static void _dowloadWithData(string uri, UnityEngine.Object comp, int id, LuaFunction fun)
		{
		}

		[Token(Token = "0x6001DF0")]
		[Address(RVA = "0xCC7F68", Offset = "0xCC7F68", VA = "0xCC7F68")]
		private static void _assignTexture(Texture2D tex, int id, UnityEngine.Object comp)
		{
		}

		[Token(Token = "0x6001DF1")]
		[Address(RVA = "0xCC6004", Offset = "0xCC6004", VA = "0xCC6004")]
		public static void Download(string downloadUrl, string localUrl, GameVoidAction<object> finish, GameVoidAction<object> fail, GameVoidAction<int, int> process, object obj)
		{
		}

		[Token(Token = "0x6001DF2")]
		[Address(RVA = "0xCC4D48", Offset = "0xCC4D48", VA = "0xCC4D48")]
		public static void DownloadResByAbname(string abName, string md5, Action<string, string, string, string> finish, string data, bool priority, DownloadProcessHandler _onProcess)
		{
		}

		[Token(Token = "0x6001DF3")]
		[Address(RVA = "0xCBCB88", Offset = "0xCBCB88", VA = "0xCBCB88")]
		public static void DownloadResByAbName(string abName, Action<string, string, string, string> finish)
		{
		}

		[Token(Token = "0x6001DF4")]
		[Address(RVA = "0xCC8070", Offset = "0xCC8070", VA = "0xCC8070")]
		public static void AsyncDownload(string abName, string downloadUrl, string localUrl, string md5, int len, Action<string, string, string, string> finish, bool priority, DownloadProcessHandler onProcess)
		{
		}

		[Token(Token = "0x6001DF5")]
		[Address(RVA = "0xCC833C", Offset = "0xCC833C", VA = "0xCC833C")]
		public static void AsyncDownload(string abName, string url, string localUrl, Action<string, string, string, string> finish)
		{
		}

		[Token(Token = "0x6001DF6")]
		[Address(RVA = "0xCC8458", Offset = "0xCC8458", VA = "0xCC8458")]
		public static void Clear()
		{
		}

		[Token(Token = "0x6001DF7")]
		[Address(RVA = "0xCC7754", Offset = "0xCC7754", VA = "0xCC7754")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A75F0", Offset = "0x9A75F0")]
		private static IEnumerator UnityWebRequestGet(string url, LuaFunction callback)
		{
			return null;
		}

		[Token(Token = "0x6001DF9")]
		[Address(RVA = "0xCC8500", Offset = "0xCC8500", VA = "0xCC8500")]
		public HttpManager()
		{
		}
	}
	[Token(Token = "0x2000244")]
	public static class UtilLua
	{
		[Token(Token = "0x20003E2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9402A0", Offset = "0x9402A0")]
		private sealed class <_capture>d__85 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001018")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001019")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400101A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string filePath;

			[Token(Token = "0x400101B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LuaFunction callback;

			[Token(Token = "0x17000217")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002D6E")]
				[Address(RVA = "0xC9B5F8", Offset = "0xC9B5F8", VA = "0xC9B5F8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000218")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002D70")]
				[Address(RVA = "0xC9B660", Offset = "0xC9B660", VA = "0xC9B660", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002D6B")]
			[Address(RVA = "0xC9B4BC", Offset = "0xC9B4BC", VA = "0xC9B4BC")]
			[DebuggerHidden]
			public <_capture>d__85(int <>1__state)
			{
			}

			[Token(Token = "0x6002D6C")]
			[Address(RVA = "0xC9B4E8", Offset = "0xC9B4E8", VA = "0xC9B4E8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002D6D")]
			[Address(RVA = "0xC9B4EC", Offset = "0xC9B4EC", VA = "0xC9B4EC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002D6F")]
			[Address(RVA = "0xC9B600", Offset = "0xC9B600", VA = "0xC9B600", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003E3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9402B0", Offset = "0x9402B0")]
		private sealed class <>c__DisplayClass105_0
		{
			[Token(Token = "0x400101C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Animator animator;

			[Token(Token = "0x400101D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string name;

			[Token(Token = "0x400101E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float process;

			[Token(Token = "0x6002D71")]
			[Address(RVA = "0xC9A464", Offset = "0xC9A464", VA = "0xC9A464")]
			public <>c__DisplayClass105_0()
			{
			}

			[Token(Token = "0x6002D72")]
			[Address(RVA = "0xC9A46C", Offset = "0xC9A46C", VA = "0xC9A46C")]
			internal void <PlayAnimatorInChildByProcess>b__0(object obj)
			{
			}
		}

		[Token(Token = "0x20003E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9402C0", Offset = "0x9402C0")]
		private sealed class <>c__DisplayClass128_0
		{
			[Token(Token = "0x400101F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LuaFunction callBack;

			[Token(Token = "0x6002D73")]
			[Address(RVA = "0xC9A50C", Offset = "0xC9A50C", VA = "0xC9A50C")]
			public <>c__DisplayClass128_0()
			{
			}

			[Token(Token = "0x6002D74")]
			[Address(RVA = "0xC9A514", Offset = "0xC9A514", VA = "0xC9A514")]
			internal void <LoadGo>b__0(GameObject go, Resource res)
			{
			}
		}

		[Token(Token = "0x20003E5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9402D0", Offset = "0x9402D0")]
		private sealed class <>c__DisplayClass154_0
		{
			[Token(Token = "0x4001020")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LuaFunction callback;

			[Token(Token = "0x6002D75")]
			[Address(RVA = "0xC9A5B8", Offset = "0xC9A5B8", VA = "0xC9A5B8")]
			public <>c__DisplayClass154_0()
			{
			}

			[Token(Token = "0x6002D76")]
			[Address(RVA = "0xC9A5C0", Offset = "0xC9A5C0", VA = "0xC9A5C0")]
			internal void <PlayMoveTween>b__0()
			{
			}
		}

		[Token(Token = "0x20003E6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9402E0", Offset = "0x9402E0")]
		private sealed class <>c__DisplayClass155_0
		{
			[Token(Token = "0x4001021")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LuaFunction callback;

			[Token(Token = "0x6002D77")]
			[Address(RVA = "0xC9A620", Offset = "0xC9A620", VA = "0xC9A620")]
			public <>c__DisplayClass155_0()
			{
			}

			[Token(Token = "0x6002D78")]
			[Address(RVA = "0xC9A628", Offset = "0xC9A628", VA = "0xC9A628")]
			internal void <PlayLocalMoveTween>b__0()
			{
			}
		}

		[Token(Token = "0x20003E7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9402F0", Offset = "0x9402F0")]
		private sealed class <>c__DisplayClass156_0
		{
			[Token(Token = "0x4001022")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LuaFunction callback;

			[Token(Token = "0x6002D79")]
			[Address(RVA = "0xC9A668", Offset = "0xC9A668", VA = "0xC9A668")]
			public <>c__DisplayClass156_0()
			{
			}

			[Token(Token = "0x6002D7A")]
			[Address(RVA = "0xC9A670", Offset = "0xC9A670", VA = "0xC9A670")]
			internal void <PlayLocalValueMoveTween>b__0()
			{
			}
		}

		[Token(Token = "0x20003E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940300", Offset = "0x940300")]
		private sealed class <>c__DisplayClass157_0
		{
			[Token(Token = "0x4001023")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LuaFunction callback;

			[Token(Token = "0x6002D7B")]
			[Address(RVA = "0xC9A6D0", Offset = "0xC9A6D0", VA = "0xC9A6D0")]
			public <>c__DisplayClass157_0()
			{
			}

			[Token(Token = "0x6002D7C")]
			[Address(RVA = "0xC9A6D8", Offset = "0xC9A6D8", VA = "0xC9A6D8")]
			internal void <PlayLocalValueRotateTween>b__0()
			{
			}
		}

		[Token(Token = "0x20003E9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940310", Offset = "0x940310")]
		private sealed class <>c__DisplayClass158_0
		{
			[Token(Token = "0x4001024")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Slider slider;

			[Token(Token = "0x4001025")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LuaFunction callback;

			[Token(Token = "0x6002D7D")]
			[Address(RVA = "0xC9A738", Offset = "0xC9A738", VA = "0xC9A738")]
			public <>c__DisplayClass158_0()
			{
			}

			[Token(Token = "0x6002D7E")]
			[Address(RVA = "0xC9A740", Offset = "0xC9A740", VA = "0xC9A740")]
			internal float <PlaySliderTo>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x6002D7F")]
			[Address(RVA = "0xC9A764", Offset = "0xC9A764", VA = "0xC9A764")]
			internal void <PlaySliderTo>b__1(float x)
			{
			}

			[Token(Token = "0x6002D80")]
			[Address(RVA = "0xC9A788", Offset = "0xC9A788", VA = "0xC9A788")]
			internal void <PlaySliderTo>b__2()
			{
			}
		}

		[Token(Token = "0x20003EA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940320", Offset = "0x940320")]
		private sealed class <>c__DisplayClass160_0
		{
			[Token(Token = "0x4001026")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LuaFunction call;

			[Token(Token = "0x6002D81")]
			[Address(RVA = "0xC9A7E8", Offset = "0xC9A7E8", VA = "0xC9A7E8")]
			public <>c__DisplayClass160_0()
			{
			}

			[Token(Token = "0x6002D82")]
			[Address(RVA = "0xC9A7F0", Offset = "0xC9A7F0", VA = "0xC9A7F0")]
			internal void <TweenDoMoveLua>b__0()
			{
			}
		}

		[Token(Token = "0x20003EB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940330", Offset = "0x940330")]
		private sealed class <>c__DisplayClass171_0
		{
			[Token(Token = "0x4001027")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LuaFunction OnRefreshProcess;

			[Token(Token = "0x6002D83")]
			[Address(RVA = "0xC9A80C", Offset = "0xC9A80C", VA = "0xC9A80C")]
			public <>c__DisplayClass171_0()
			{
			}
		}

		[Token(Token = "0x20003EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940340", Offset = "0x940340")]
		private sealed class <>c__DisplayClass171_1
		{
			[Token(Token = "0x4001028")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Queue<string> temp;

			[Token(Token = "0x4001029")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass171_0 CS$<>8__locals1;

			[Token(Token = "0x6002D84")]
			[Address(RVA = "0xC9A814", Offset = "0xC9A814", VA = "0xC9A814")]
			public <>c__DisplayClass171_1()
			{
			}
		}

		[Token(Token = "0x20003ED")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940350", Offset = "0x940350")]
		private sealed class <>c__DisplayClass171_2
		{
			[Token(Token = "0x400102A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int current;

			[Token(Token = "0x400102B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int count;

			[Token(Token = "0x400102C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int speedCount;

			[Token(Token = "0x400102D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public <>c__DisplayClass171_1 CS$<>8__locals2;

			[Token(Token = "0x6002D85")]
			[Address(RVA = "0xC9A81C", Offset = "0xC9A81C", VA = "0xC9A81C")]
			public <>c__DisplayClass171_2()
			{
			}
		}

		[Token(Token = "0x20003EE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940360", Offset = "0x940360")]
		private sealed class <>c__DisplayClass171_3
		{
			[Token(Token = "0x400102E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string local;

			[Token(Token = "0x400102F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string name;

			[Token(Token = "0x4001030")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public <>c__DisplayClass171_2 CS$<>8__locals3;

			[Token(Token = "0x6002D86")]
			[Address(RVA = "0xC9A824", Offset = "0xC9A824", VA = "0xC9A824")]
			public <>c__DisplayClass171_3()
			{
			}

			[Token(Token = "0x6002D87")]
			[Address(RVA = "0xC9A82C", Offset = "0xC9A82C", VA = "0xC9A82C")]
			internal void <DownloadOtherRes>b__0(string url, string error, string localPath, string abName)
			{
			}
		}

		[Token(Token = "0x20003EF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940370", Offset = "0x940370")]
		private sealed class <DownloadOtherRes>d__171 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001031")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001032")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001033")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LuaFunction OnRefreshProcess;

			[Token(Token = "0x4001034")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass171_2 <>8__1;

			[Token(Token = "0x4001035")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public LuaFunction finish;

			[Token(Token = "0x4001036")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <time>5__2;

			[Token(Token = "0x17000219")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002D8B")]
				[Address(RVA = "0xC9B200", Offset = "0xC9B200", VA = "0xC9B200", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700021A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002D8D")]
				[Address(RVA = "0xC9B268", Offset = "0xC9B268", VA = "0xC9B268", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002D88")]
			[Address(RVA = "0xC9AC14", Offset = "0xC9AC14", VA = "0xC9AC14")]
			[DebuggerHidden]
			public <DownloadOtherRes>d__171(int <>1__state)
			{
			}

			[Token(Token = "0x6002D89")]
			[Address(RVA = "0xC9AC40", Offset = "0xC9AC40", VA = "0xC9AC40", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002D8A")]
			[Address(RVA = "0xC9AC44", Offset = "0xC9AC44", VA = "0xC9AC44", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002D8C")]
			[Address(RVA = "0xC9B208", Offset = "0xC9B208", VA = "0xC9B208", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940380", Offset = "0x940380")]
		private sealed class <DownloadOtherResTest>d__175 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001037")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001038")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001039")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LuaFunction OnRefreshProcess;

			[Token(Token = "0x400103A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LuaFunction finish;

			[Token(Token = "0x400103B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <count>5__2;

			[Token(Token = "0x400103C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private int <current>5__3;

			[Token(Token = "0x400103D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <time>5__4;

			[Token(Token = "0x400103E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private int <speedCount>5__5;

			[Token(Token = "0x1700021B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002D91")]
				[Address(RVA = "0xC9B44C", Offset = "0xC9B44C", VA = "0xC9B44C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700021C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002D93")]
				[Address(RVA = "0xC9B4B4", Offset = "0xC9B4B4", VA = "0xC9B4B4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002D8E")]
			[Address(RVA = "0xC9B270", Offset = "0xC9B270", VA = "0xC9B270")]
			[DebuggerHidden]
			public <DownloadOtherResTest>d__175(int <>1__state)
			{
			}

			[Token(Token = "0x6002D8F")]
			[Address(RVA = "0xC9B29C", Offset = "0xC9B29C", VA = "0xC9B29C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002D90")]
			[Address(RVA = "0xC9B2A0", Offset = "0xC9B2A0", VA = "0xC9B2A0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002D92")]
			[Address(RVA = "0xC9B454", Offset = "0xC9B454", VA = "0xC9B454", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003F1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940390", Offset = "0x940390")]
		private sealed class <_captureScreenOnImage>d__253 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400103F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001040")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001041")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject obj;

			[Token(Token = "0x4001042")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LuaFunction callback;

			[Token(Token = "0x1700021D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002D97")]
				[Address(RVA = "0xC9B82C", Offset = "0xC9B82C", VA = "0xC9B82C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700021E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002D99")]
				[Address(RVA = "0xC9B894", Offset = "0xC9B894", VA = "0xC9B894", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002D94")]
			[Address(RVA = "0xC9B668", Offset = "0xC9B668", VA = "0xC9B668")]
			[DebuggerHidden]
			public <_captureScreenOnImage>d__253(int <>1__state)
			{
			}

			[Token(Token = "0x6002D95")]
			[Address(RVA = "0xC9B694", Offset = "0xC9B694", VA = "0xC9B694", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002D96")]
			[Address(RVA = "0xC9B698", Offset = "0xC9B698", VA = "0xC9B698", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002D98")]
			[Address(RVA = "0xC9B834", Offset = "0xC9B834", VA = "0xC9B834", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003F2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9403A0", Offset = "0x9403A0")]
		private sealed class <>c__DisplayClass256_0
		{
			[Token(Token = "0x4001043")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TextureLoaderCom textureCom;

			[Token(Token = "0x4001044")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SkinnedMeshRenderer skinmeshRenderComp;

			[Token(Token = "0x4001045")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string matName;

			[Token(Token = "0x4001046")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string TextureName;

			[Token(Token = "0x6002D9A")]
			[Address(RVA = "0xC9A978", Offset = "0xC9A978", VA = "0xC9A978")]
			public <>c__DisplayClass256_0()
			{
			}

			[Token(Token = "0x6002D9B")]
			[Address(RVA = "0xC9A980", Offset = "0xC9A980", VA = "0xC9A980")]
			internal void <SetMeshRenderTexture>b__0(Resource res, object data)
			{
			}
		}

		[Token(Token = "0x20003F3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9403B0", Offset = "0x9403B0")]
		private sealed class <>c__DisplayClass306_0
		{
			[Token(Token = "0x4001047")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LuaFunction func;

			[Token(Token = "0x6002D9C")]
			[Address(RVA = "0xC9AAA0", Offset = "0xC9AAA0", VA = "0xC9AAA0")]
			public <>c__DisplayClass306_0()
			{
			}

			[Token(Token = "0x6002D9D")]
			[Address(RVA = "0xC9AAA8", Offset = "0xC9AAA8", VA = "0xC9AAA8")]
			internal void <DownloadVideo>b__0(int state, string _url, string _toFile, string _md5)
			{
			}
		}

		[Token(Token = "0x20003F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9403C0", Offset = "0x9403C0")]
		private sealed class <>c__DisplayClass315_0
		{
			[Token(Token = "0x4001048")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject go;

			[Token(Token = "0x6002D9E")]
			[Address(RVA = "0xC9AB30", Offset = "0xC9AB30", VA = "0xC9AB30")]
			public <>c__DisplayClass315_0()
			{
			}

			[Token(Token = "0x6002D9F")]
			[Address(RVA = "0xC9AB38", Offset = "0xC9AB38", VA = "0xC9AB38")]
			internal void <SetMeshTexture>b__0(Resource res, object data)
			{
			}
		}

		[Token(Token = "0x4000A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static DateTime Last;

		[Token(Token = "0x4000A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static bool IsDownloading;

		[Token(Token = "0x4000A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static LuaTable AllLuaTableMem;

		[Token(Token = "0x4000A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static LuaTable AllTimerTimeDicMem;

		[Token(Token = "0x4000A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static LuaTable AllTimerFrameDicMem;

		[Token(Token = "0x4000A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static LuaTable XXLTable;

		[Token(Token = "0x6001DFA")]
		[Address(RVA = "0xBE6934", Offset = "0xBE6934", VA = "0xBE6934")]
		public static string GetGOFullPath(GameObject go)
		{
			return null;
		}

		[Token(Token = "0x6001DFB")]
		[Address(RVA = "0xBE6A88", Offset = "0xBE6A88", VA = "0xBE6A88")]
		public static QualityMgr GetQuality()
		{
			return null;
		}

		[Token(Token = "0x6001DFC")]
		[Address(RVA = "0xBE6AF0", Offset = "0xBE6AF0", VA = "0xBE6AF0")]
		public static AudioMgr GetAudioMgr()
		{
			return null;
		}

		[Token(Token = "0x6001DFD")]
		[Address(RVA = "0xBE6B38", Offset = "0xBE6B38", VA = "0xBE6B38")]
		public static MainCamera GetMainCam()
		{
			return null;
		}

		[Token(Token = "0x6001DFE")]
		[Address(RVA = "0xBE6BA0", Offset = "0xBE6BA0", VA = "0xBE6BA0")]
		public static UICamera GetUICam()
		{
			return null;
		}

		[Token(Token = "0x6001DFF")]
		[Address(RVA = "0xBE6C08", Offset = "0xBE6C08", VA = "0xBE6C08")]
		public static Cache GetCache()
		{
			return null;
		}

		[Token(Token = "0x6001E00")]
		[Address(RVA = "0xBE6C70", Offset = "0xBE6C70", VA = "0xBE6C70")]
		public static TouchMgr GetTouchMgr()
		{
			return null;
		}

		[Token(Token = "0x6001E01")]
		[Address(RVA = "0xBE6CD8", Offset = "0xBE6CD8", VA = "0xBE6CD8")]
		public static GuideMgr GetGuideMgr()
		{
			return null;
		}

		[Token(Token = "0x6001E02")]
		[Address(RVA = "0xBE6D40", Offset = "0xBE6D40", VA = "0xBE6D40")]
		public static LuaTable AddUIComponent(GameObject go, LuaTable table)
		{
			return null;
		}

		[Token(Token = "0x6001E03")]
		[Address(RVA = "0xBE6FF0", Offset = "0xBE6FF0", VA = "0xBE6FF0")]
		public static LuaTable AddSceneComponent(GameObject go, LuaTable table)
		{
			return null;
		}

		[Token(Token = "0x6001E04")]
		[Address(RVA = "0xBE70B0", Offset = "0xBE70B0", VA = "0xBE70B0")]
		public static LuaTable AddLuaComponent(GameObject go, LuaTable table)
		{
			return null;
		}

		[Token(Token = "0x6001E05")]
		[Address(RVA = "0xBE7170", Offset = "0xBE7170", VA = "0xBE7170")]
		public static void RemoveLuaUIComponent(GameObject go)
		{
		}

		[Token(Token = "0x6001E06")]
		[Address(RVA = "0xBE6E00", Offset = "0xBE6E00", VA = "0xBE6E00")]
		public static LuaComponent AddComponent(GameObject go, LuaTable table, Type type)
		{
			return null;
		}

		[Token(Token = "0x6001E07")]
		[Address(RVA = "0xBE71C0", Offset = "0xBE71C0", VA = "0xBE71C0")]
		public static LuaTable AddComponent(GameObject go, LuaTable table, string type)
		{
			return null;
		}

		[Token(Token = "0x6001E08")]
		[Address(RVA = "0xBE7294", Offset = "0xBE7294", VA = "0xBE7294")]
		public static string GetDeviceUid()
		{
			return null;
		}

		[Token(Token = "0x6001E09")]
		[Address(RVA = "0xBE729C", Offset = "0xBE729C", VA = "0xBE729C")]
		public static ComPlatform GetPlatform()
		{
			return null;
		}

		[Token(Token = "0x6001E0A")]
		[Address(RVA = "0xBE72E4", Offset = "0xBE72E4", VA = "0xBE72E4")]
		public static void UserQuit()
		{
		}

		[Token(Token = "0x6001E0B")]
		[Address(RVA = "0xBE7348", Offset = "0xBE7348", VA = "0xBE7348")]
		public static string GetGameName()
		{
			return null;
		}

		[Token(Token = "0x6001E0C")]
		[Address(RVA = "0xBE73A0", Offset = "0xBE73A0", VA = "0xBE73A0")]
		public static void LoginInPlatform(string data)
		{
		}

		[Token(Token = "0x6001E0D")]
		[Address(RVA = "0xBE7400", Offset = "0xBE7400", VA = "0xBE7400")]
		public static string GetBirthdayFromSDK()
		{
			return null;
		}

		[Token(Token = "0x6001E0E")]
		[Address(RVA = "0xBE7458", Offset = "0xBE7458", VA = "0xBE7458")]
		public static void LogC(params object[] param)
		{
		}

		[Token(Token = "0x6001E0F")]
		[Address(RVA = "0xBE75BC", Offset = "0xBE75BC", VA = "0xBE75BC")]
		public static string GetLog(Color color, params object[] param)
		{
			return null;
		}

		[Token(Token = "0x6001E10")]
		[Address(RVA = "0xBE795C", Offset = "0xBE795C", VA = "0xBE795C")]
		public static void LogColor(object message, Color color)
		{
		}

		[Token(Token = "0x6001E11")]
		[Address(RVA = "0xBE7524", Offset = "0xBE7524", VA = "0xBE7524")]
		public static void LogColor(Color color, params object[] param)
		{
		}

		[Token(Token = "0x6001E12")]
		[Address(RVA = "0xBE7824", Offset = "0xBE7824", VA = "0xBE7824")]
		public static string GetLog(params object[] param)
		{
			return null;
		}

		[Token(Token = "0x6001E13")]
		[Address(RVA = "0xBE7BCC", Offset = "0xBE7BCC", VA = "0xBE7BCC")]
		public static string GetChannelId()
		{
			return null;
		}

		[Token(Token = "0x6001E14")]
		[Address(RVA = "0xBE7C44", Offset = "0xBE7C44", VA = "0xBE7C44")]
		public static void PlatformSwitchAccount()
		{
		}

		[Token(Token = "0x6001E15")]
		[Address(RVA = "0xBE2A28", Offset = "0xBE2A28", VA = "0xBE2A28")]
		public static void PlatformRestart(int miliseconds)
		{
		}

		[Token(Token = "0x6001E16")]
		[Address(RVA = "0xBE7C9C", Offset = "0xBE7C9C", VA = "0xBE7C9C")]
		public static void UpdateLuaError()
		{
		}

		[Token(Token = "0x6001E17")]
		[Address(RVA = "0xBE7D6C", Offset = "0xBE7D6C", VA = "0xBE7D6C")]
		public static void SubmitRoleData(string id, string lv, string sex, string name, string serverId, string serverName, string partyName, string roleType, string vipLv, string diamon, string moneyType, string createTime, string summitType, string custom)
		{
		}

		[Token(Token = "0x6001E18")]
		[Address(RVA = "0xBE8028", Offset = "0xBE8028", VA = "0xBE8028")]
		public static void CallPay(string amount, string serverId, string serverName, string roleId, string roleLevel, string roleName, string productId, string productName, string productDesc, string strExchange, string custom)
		{
		}

		[Token(Token = "0x6001E19")]
		[Address(RVA = "0xBE8278", Offset = "0xBE8278", VA = "0xBE8278")]
		public static void CheckPay()
		{
		}

		[Token(Token = "0x6001E1A")]
		[Address(RVA = "0xBE82D0", Offset = "0xBE82D0", VA = "0xBE82D0")]
		public static void ReportChat(string content, string type, string accountId, string accountName, int level, string serverId, string serverName)
		{
		}

		[Token(Token = "0x6001E1B")]
		[Address(RVA = "0xBE8384", Offset = "0xBE8384", VA = "0xBE8384")]
		public static void SendNotification(string title, string content, int t, bool isLoop, int id, int schedule = 86400)
		{
		}

		[Token(Token = "0x6001E1C")]
		[Address(RVA = "0xBE8424", Offset = "0xBE8424", VA = "0xBE8424")]
		public static void ClearNotification()
		{
		}

		[Token(Token = "0x6001E1D")]
		[Address(RVA = "0xBE847C", Offset = "0xBE847C", VA = "0xBE847C")]
		public static void ClearChild(GameObject go)
		{
		}

		[Token(Token = "0x6001E1E")]
		[Address(RVA = "0xBE8640", Offset = "0xBE8640", VA = "0xBE8640")]
		public static void SetPosAndLookAt(GameObject go, float posX, float posY, float posZ, float x, float y, float z)
		{
		}

		[Token(Token = "0x6001E1F")]
		[Address(RVA = "0xBE87C4", Offset = "0xBE87C4", VA = "0xBE87C4")]
		public static void SetLocalScaleByTransform(Transform t, float x, float y, float z)
		{
		}

		[Token(Token = "0x6001E20")]
		[Address(RVA = "0xBE8898", Offset = "0xBE8898", VA = "0xBE8898")]
		public static void SetLocalScale(GameObject go, float x, float y, float z)
		{
		}

		[Token(Token = "0x6001E21")]
		[Address(RVA = "0xBE89C0", Offset = "0xBE89C0", VA = "0xBE89C0")]
		public static void SetScale(GameObject go, float x, float y, float z)
		{
		}

		[Token(Token = "0x6001E22")]
		[Address(RVA = "0xBE8B44", Offset = "0xBE8B44", VA = "0xBE8B44")]
		public static void SetSkillRangeScale(GameObject go, float outRange, float innerRange)
		{
		}

		[Token(Token = "0x6001E23")]
		[Address(RVA = "0xBE8DA4", Offset = "0xBE8DA4", VA = "0xBE8DA4")]
		public static Vector3 GetLocalScale(GameObject go)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001E24")]
		[Address(RVA = "0xBE8DCC", Offset = "0xBE8DCC", VA = "0xBE8DCC")]
		public static float GetLocalScaleX(GameObject go)
		{
			return default(float);
		}

		[Token(Token = "0x6001E25")]
		[Address(RVA = "0xBE8DF4", Offset = "0xBE8DF4", VA = "0xBE8DF4")]
		public static float GetLocalScaleY(GameObject go)
		{
			return default(float);
		}

		[Token(Token = "0x6001E26")]
		[Address(RVA = "0xBE8E24", Offset = "0xBE8E24", VA = "0xBE8E24")]
		public static float GetLocalScaleZ(GameObject go)
		{
			return default(float);
		}

		[Token(Token = "0x6001E27")]
		[Address(RVA = "0xBE8E54", Offset = "0xBE8E54", VA = "0xBE8E54")]
		public static void SetAnchoredLocalPos(GameObject go, float x, float y)
		{
		}

		[Token(Token = "0x6001E28")]
		[Address(RVA = "0xBE8F78", Offset = "0xBE8F78", VA = "0xBE8F78")]
		public static void SetRectLocalPos(GameObject go, float x, float y, float z)
		{
		}

		[Token(Token = "0x6001E29")]
		[Address(RVA = "0xBE909C", Offset = "0xBE909C", VA = "0xBE909C")]
		public static void SetLocalPos(GameObject go, float x, float y, float z)
		{
		}

		[Token(Token = "0x6001E2A")]
		[Address(RVA = "0xBE91C4", Offset = "0xBE91C4", VA = "0xBE91C4")]
		public static float GetLocalPosX(GameObject go)
		{
			return default(float);
		}

		[Token(Token = "0x6001E2B")]
		[Address(RVA = "0xBE91F4", Offset = "0xBE91F4", VA = "0xBE91F4")]
		public static float GetLocalPosY(GameObject go)
		{
			return default(float);
		}

		[Token(Token = "0x6001E2C")]
		[Address(RVA = "0xBE9224", Offset = "0xBE9224", VA = "0xBE9224")]
		public static float GetLocalPosZ(GameObject go)
		{
			return default(float);
		}

		[Token(Token = "0x6001E2D")]
		[Address(RVA = "0xBE9254", Offset = "0xBE9254", VA = "0xBE9254")]
		public static void SetLocalPosZ(GameObject go, float z)
		{
		}

		[Token(Token = "0x6001E2E")]
		[Address(RVA = "0xBE9394", Offset = "0xBE9394", VA = "0xBE9394")]
		public static void SetPosByEventData(GameObject go, PointerEventData data)
		{
		}

		[Token(Token = "0x6001E2F")]
		[Address(RVA = "0xBE948C", Offset = "0xBE948C", VA = "0xBE948C")]
		public static void SetPosByGO(GameObject go, GameObject target)
		{
		}

		[Token(Token = "0x6001E30")]
		[Address(RVA = "0xBE959C", Offset = "0xBE959C", VA = "0xBE959C")]
		public static void LookAt(GameObject go, float x, float y, float z)
		{
		}

		[Token(Token = "0x6001E31")]
		[Address(RVA = "0xBE96C4", Offset = "0xBE96C4", VA = "0xBE96C4")]
		public static void Rotate(GameObject go, float x, float y, float z)
		{
		}

		[Token(Token = "0x6001E32")]
		[Address(RVA = "0xBE97EC", Offset = "0xBE97EC", VA = "0xBE97EC")]
		public static void SetLocalEulerAngles(GameObject go, float x, float y, float z)
		{
		}

		[Token(Token = "0x6001E33")]
		[Address(RVA = "0xBE9914", Offset = "0xBE9914", VA = "0xBE9914")]
		public static void SetEulerAngles(GameObject go, float x, float y, float z)
		{
		}

		[Token(Token = "0x6001E34")]
		[Address(RVA = "0xBE9A3C", Offset = "0xBE9A3C", VA = "0xBE9A3C")]
		public static void RotateGO(GameObject go, float x, float y, float z)
		{
		}

		[Token(Token = "0x6001E35")]
		[Address(RVA = "0xBE9B48", Offset = "0xBE9B48", VA = "0xBE9B48")]
		public static Vector3 GetEulerAngles(GameObject go)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001E36")]
		[Address(RVA = "0xBE9B70", Offset = "0xBE9B70", VA = "0xBE9B70")]
		public static Vector3 GetPos(GameObject go)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001E37")]
		[Address(RVA = "0xBE9C30", Offset = "0xBE9C30", VA = "0xBE9C30")]
		public static Vector3 GetLocalPos(GameObject go)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001E38")]
		[Address(RVA = "0xBE9C58", Offset = "0xBE9C58", VA = "0xBE9C58")]
		public static Vector3 GetLocalEulerAngles(GameObject go)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001E39")]
		[Address(RVA = "0xBE9C80", Offset = "0xBE9C80", VA = "0xBE9C80")]
		public static void NetConnect(string ip, int port)
		{
		}

		[Token(Token = "0x6001E3A")]
		[Address(RVA = "0xBE9CF0", Offset = "0xBE9CF0", VA = "0xBE9CF0")]
		public static void NetShutdown()
		{
		}

		[Token(Token = "0x6001E3B")]
		[Address(RVA = "0xBE9D48", Offset = "0xBE9D48", VA = "0xBE9D48")]
		public static void NetSend(string typeName, byte[] datas)
		{
		}

		[Token(Token = "0x6001E3C")]
		[Address(RVA = "0xBE9DB8", Offset = "0xBE9DB8", VA = "0xBE9DB8")]
		public static void NetClearData()
		{
		}

		[Token(Token = "0x6001E3D")]
		[Address(RVA = "0xBE9DBC", Offset = "0xBE9DBC", VA = "0xBE9DBC")]
		public static TouchLayerLua CreateTouchLayer(int key, LuaTable module)
		{
			return null;
		}

		[Token(Token = "0x6001E3E")]
		[Address(RVA = "0xBE9E30", Offset = "0xBE9E30", VA = "0xBE9E30")]
		public static void AddTouchLayer(TouchLayerLua layer)
		{
		}

		[Token(Token = "0x6001E3F")]
		[Address(RVA = "0xBE9EB4", Offset = "0xBE9EB4", VA = "0xBE9EB4")]
		public static void RemoveTouchLayer(TouchLayerLua layer)
		{
		}

		[Token(Token = "0x6001E40")]
		[Address(RVA = "0xBE9F38", Offset = "0xBE9F38", VA = "0xBE9F38")]
		public static void InitGVoice(string playerID, string appID, string appKey, LuaTable luaVoiceMgr)
		{
		}

		[Token(Token = "0x6001E41")]
		[Address(RVA = "0xBEA004", Offset = "0xBEA004", VA = "0xBEA004")]
		public static int GetVoiceSec(string filePath)
		{
			return default(int);
		}

		[Token(Token = "0x6001E42")]
		[Address(RVA = "0xBEA0A4", Offset = "0xBEA0A4", VA = "0xBEA0A4")]
		public static string StartRecord()
		{
			return null;
		}

		[Token(Token = "0x6001E43")]
		[Address(RVA = "0xBEA144", Offset = "0xBEA144", VA = "0xBEA144")]
		public static void StopRecord(string filePath)
		{
		}

		[Token(Token = "0x6001E44")]
		[Address(RVA = "0xBEA1E0", Offset = "0xBEA1E0", VA = "0xBEA1E0")]
		public static void UploadRecord(string filePath)
		{
		}

		[Token(Token = "0x6001E45")]
		[Address(RVA = "0xBEA27C", Offset = "0xBEA27C", VA = "0xBEA27C")]
		public static void DownloadRecord(string fileID)
		{
		}

		[Token(Token = "0x6001E46")]
		[Address(RVA = "0xBEA318", Offset = "0xBEA318", VA = "0xBEA318")]
		public static void PlayVoice(string filePath)
		{
		}

		[Token(Token = "0x6001E47")]
		[Address(RVA = "0xBEA3B4", Offset = "0xBEA3B4", VA = "0xBEA3B4")]
		public static void StopPlayVoice()
		{
		}

		[Token(Token = "0x6001E48")]
		[Address(RVA = "0xBEA448", Offset = "0xBEA448", VA = "0xBEA448")]
		public static void Voice2Text(string fileID)
		{
		}

		[Token(Token = "0x6001E49")]
		[Address(RVA = "0xBEA4E4", Offset = "0xBEA4E4", VA = "0xBEA4E4")]
		public static float GetVolumePercent()
		{
			return default(float);
		}

		[Token(Token = "0x6001E4A")]
		[Address(RVA = "0xBEA53C", Offset = "0xBEA53C", VA = "0xBEA53C")]
		public static void InitShareSDK(string playerID, string appKey, string appSecret, LuaTable luaShareMgr)
		{
		}

		[Token(Token = "0x6001E4B")]
		[Address(RVA = "0xBEA540", Offset = "0xBEA540", VA = "0xBEA540")]
		public static void TestShare()
		{
		}

		[Token(Token = "0x6001E4C")]
		[Address(RVA = "0xBEA544", Offset = "0xBEA544", VA = "0xBEA544")]
		public static void ShareByPlatform(string text, string title, string imgUrl, string imgPath, string url, string comment, int shareType, int paltformType)
		{
		}

		[Token(Token = "0x6001E4D")]
		[Address(RVA = "0xBEA548", Offset = "0xBEA548", VA = "0xBEA548")]
		public static void ShareByShowList(string text, string title, string imgUrl, string imgPath, string url, string comment, int shareType, int[] typeList, int x, int y)
		{
		}

		[Token(Token = "0x6001E4E")]
		[Address(RVA = "0xBEA54C", Offset = "0xBEA54C", VA = "0xBEA54C")]
		public static void Capture(string filePath, LuaFunction callback)
		{
		}

		[Token(Token = "0x6001E4F")]
		[Address(RVA = "0xBEA5F0", Offset = "0xBEA5F0", VA = "0xBEA5F0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A7654", Offset = "0x9A7654")]
		private static IEnumerator _capture(string filePath, LuaFunction callback)
		{
			return null;
		}

		[Token(Token = "0x6001E50")]
		[Address(RVA = "0xBEA66C", Offset = "0xBEA66C", VA = "0xBEA66C")]
		public static void CaptureToAlbum(string fileName, LuaFunction callback)
		{
		}

		[Token(Token = "0x6001E51")]
		[Address(RVA = "0xBEA724", Offset = "0xBEA724", VA = "0xBEA724")]
		public static string GetCurTime()
		{
			return null;
		}

		[Token(Token = "0x6001E52")]
		[Address(RVA = "0xBEA9CC", Offset = "0xBEA9CC", VA = "0xBEA9CC")]
		public static string GetWriteCapturePath(string path)
		{
			return null;
		}

		[Token(Token = "0x6001E53")]
		[Address(RVA = "0xBEA9D0", Offset = "0xBEA9D0", VA = "0xBEA9D0")]
		public static string GetReadCapturePath(string path)
		{
			return null;
		}

		[Token(Token = "0x6001E54")]
		[Address(RVA = "0xBEAA2C", Offset = "0xBEAA2C", VA = "0xBEAA2C")]
		public static int GetHash(string str)
		{
			return default(int);
		}

		[Token(Token = "0x6001E55")]
		[Address(RVA = "0xBEAA48", Offset = "0xBEAA48", VA = "0xBEAA48")]
		public static void SetImageFillAnimation(GameObject img, float target, float time)
		{
		}

		[Token(Token = "0x6001E56")]
		[Address(RVA = "0xBEAAC0", Offset = "0xBEAAC0", VA = "0xBEAAC0")]
		public static void SetGridGroupActive(GameObject go, bool value)
		{
		}

		[Token(Token = "0x6001E57")]
		[Address(RVA = "0xBEAB34", Offset = "0xBEAB34", VA = "0xBEAB34")]
		public static void SetRectSize(GameObject go, float x, float y)
		{
		}

		[Token(Token = "0x6001E58")]
		[Address(RVA = "0xBEABD8", Offset = "0xBEABD8", VA = "0xBEABD8")]
		public static void SetRectStretch(GameObject go, float x1, float y1, float z1, float x, float y)
		{
		}

		[Token(Token = "0x6001E59")]
		[Address(RVA = "0xBEAD04", Offset = "0xBEAD04", VA = "0xBEAD04")]
		public static void LogNormal(object data)
		{
		}

		[Token(Token = "0x6001E5A")]
		[Address(RVA = "0xBEAD6C", Offset = "0xBEAD6C", VA = "0xBEAD6C")]
		public static void LogInfo(object data)
		{
		}

		[Token(Token = "0x6001E5B")]
		[Address(RVA = "0xBEAD74", Offset = "0xBEAD74", VA = "0xBEAD74")]
		public static Animator GetAnimComp(GameObject go)
		{
			return null;
		}

		[Token(Token = "0x6001E5C")]
		[Address(RVA = "0xBEAE0C", Offset = "0xBEAE0C", VA = "0xBEAE0C")]
		public static void PlayAnim(Animation comp, string name)
		{
		}

		[Token(Token = "0x6001E5D")]
		[Address(RVA = "0xBEAE24", Offset = "0xBEAE24", VA = "0xBEAE24")]
		public static void PlayAnimWithGO(GameObject go, string name)
		{
		}

		[Token(Token = "0x6001E5E")]
		[Address(RVA = "0xBEAE98", Offset = "0xBEAE98", VA = "0xBEAE98")]
		public static void PlayAnimator(GameObject go, string name)
		{
		}

		[Token(Token = "0x6001E5F")]
		[Address(RVA = "0xBEAFA0", Offset = "0xBEAFA0", VA = "0xBEAFA0")]
		public static void PlayAnimatorInFixedTime(GameObject go, string name, int time, float startTime)
		{
		}

		[Token(Token = "0x6001E60")]
		[Address(RVA = "0xBEB0B8", Offset = "0xBEB0B8", VA = "0xBEB0B8")]
		public static float GetAnimatorCurrentTime(GameObject go)
		{
			return default(float);
		}

		[Token(Token = "0x6001E61")]
		[Address(RVA = "0xBEB194", Offset = "0xBEB194", VA = "0xBEB194")]
		public static void SetAnimatorSpeed(GameObject go, int speed)
		{
		}

		[Token(Token = "0x6001E62")]
		[Address(RVA = "0xBEB294", Offset = "0xBEB294", VA = "0xBEB294")]
		public static void PlayAnimatorInChild(GameObject go, string name)
		{
		}

		[Token(Token = "0x6001E63")]
		[Address(RVA = "0xBEB368", Offset = "0xBEB368", VA = "0xBEB368")]
		public static void PlayAnimatorInChildByProcess(GameObject go, string name, float process)
		{
		}

		[Token(Token = "0x6001E64")]
		[Address(RVA = "0xBEB510", Offset = "0xBEB510", VA = "0xBEB510")]
		public static void PlayAnimationInChildByProcess(GameObject go, string name, float process)
		{
		}

		[Token(Token = "0x6001E65")]
		[Address(RVA = "0xBEB5F8", Offset = "0xBEB5F8", VA = "0xBEB5F8")]
		public static void CrossFadeQueuedAnimationInChildByProcess(GameObject go, string name, float process)
		{
		}

		[Token(Token = "0x6001E66")]
		[Address(RVA = "0xBEB6E0", Offset = "0xBEB6E0", VA = "0xBEB6E0")]
		public static void SetGridArgs(GameObject go, float sizeX, float sizeY, float spacX, float spacY)
		{
		}

		[Token(Token = "0x6001E67")]
		[Address(RVA = "0xBEB83C", Offset = "0xBEB83C", VA = "0xBEB83C")]
		public static void SetPoolCapacity(string path, int count)
		{
		}

		[Token(Token = "0x6001E68")]
		[Address(RVA = "0xBEB8D4", Offset = "0xBEB8D4", VA = "0xBEB8D4")]
		public static void InitPoolWithTimer(string path, int count, LuaFunction callback)
		{
		}

		[Token(Token = "0x6001E69")]
		[Address(RVA = "0xBEB968", Offset = "0xBEB968", VA = "0xBEB968")]
		public static void DoShake()
		{
		}

		[Token(Token = "0x6001E6A")]
		[Address(RVA = "0xBEB970", Offset = "0xBEB970", VA = "0xBEB970")]
		public static float GetTime()
		{
			return default(float);
		}

		[Token(Token = "0x6001E6B")]
		[Address(RVA = "0xBEB978", Offset = "0xBEB978", VA = "0xBEB978")]
		public static int GetFrameCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001E6C")]
		[Address(RVA = "0xBEB980", Offset = "0xBEB980", VA = "0xBEB980")]
		public static void SetTextByGo(GameObject go, string str)
		{
		}

		[Token(Token = "0x6001E6D")]
		[Address(RVA = "0xBEB9FC", Offset = "0xBEB9FC", VA = "0xBEB9FC")]
		public static void RestartTween(GameObject target)
		{
		}

		[Token(Token = "0x6001E6E")]
		[Address(RVA = "0xBEBAB0", Offset = "0xBEBAB0", VA = "0xBEBAB0")]
		public static void RestartTweenByID(string id)
		{
		}

		[Token(Token = "0x6001E6F")]
		[Address(RVA = "0xBEBB1C", Offset = "0xBEBB1C", VA = "0xBEBB1C")]
		public static void RewindTweenByID(string id)
		{
		}

		[Token(Token = "0x6001E70")]
		[Address(RVA = "0xBEBB88", Offset = "0xBEBB88", VA = "0xBEBB88")]
		public static void Playback(string id)
		{
		}

		[Token(Token = "0x6001E71")]
		[Address(RVA = "0xBEBBF0", Offset = "0xBEBBF0", VA = "0xBEBBF0")]
		public static void DebugBreak()
		{
		}

		[Token(Token = "0x6001E72")]
		[Address(RVA = "0xBEBC50", Offset = "0xBEBC50", VA = "0xBEBC50")]
		public static void SetSibling(GameObject go, int index)
		{
		}

		[Token(Token = "0x6001E73")]
		[Address(RVA = "0xBEBCC4", Offset = "0xBEBCC4", VA = "0xBEBCC4")]
		public static void ClearCall(LuaFunction call)
		{
		}

		[Token(Token = "0x6001E74")]
		[Address(RVA = "0xBEBCE0", Offset = "0xBEBCE0", VA = "0xBEBCE0")]
		public static bool SetClipboard(string input)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E75")]
		[Address(RVA = "0xBEBDA4", Offset = "0xBEBDA4", VA = "0xBEBDA4")]
		public static string GetClipBoard()
		{
			return null;
		}

		[Token(Token = "0x6001E76")]
		[Address(RVA = "0xBEBDAC", Offset = "0xBEBDAC", VA = "0xBEBDAC")]
		public static string EscapeText(string str)
		{
			return null;
		}

		[Token(Token = "0x6001E77")]
		[Address(RVA = "0xBEBE14", Offset = "0xBEBE14", VA = "0xBEBE14")]
		public static string UnescapeText(string str)
		{
			return null;
		}

		[Token(Token = "0x6001E78")]
		[Address(RVA = "0xBEBE7C", Offset = "0xBEBE7C", VA = "0xBEBE7C")]
		public static void SetColorBlendAlpha(GameObject go, float alpha)
		{
		}

		[Token(Token = "0x6001E79")]
		[Address(RVA = "0xBEC018", Offset = "0xBEC018", VA = "0xBEC018")]
		public static void ForceShaderNoRim(GameObject go)
		{
		}

		[Token(Token = "0x6001E7A")]
		[Address(RVA = "0xBEC01C", Offset = "0xBEC01C", VA = "0xBEC01C")]
		public static void LoadGo(string path, LuaFunction callBack)
		{
		}

		[Token(Token = "0x6001E7B")]
		[Address(RVA = "0xBEC108", Offset = "0xBEC108", VA = "0xBEC108")]
		public static void UnLoadGo(GameObject go)
		{
		}

		[Token(Token = "0x6001E7C")]
		[Address(RVA = "0xBEC184", Offset = "0xBEC184", VA = "0xBEC184")]
		public static void CheckPool()
		{
		}

		[Token(Token = "0x6001E7D")]
		[Address(RVA = "0xBEC2C0", Offset = "0xBEC2C0", VA = "0xBEC2C0")]
		public static void RunAction(int key)
		{
		}

		[Token(Token = "0x6001E7E")]
		[Address(RVA = "0xBEC2C8", Offset = "0xBEC2C8", VA = "0xBEC2C8")]
		public static int GetLeftTime()
		{
			return default(int);
		}

		[Token(Token = "0x6001E7F")]
		[Address(RVA = "0xBEC3A4", Offset = "0xBEC3A4", VA = "0xBEC3A4")]
		public static void SetClientTime()
		{
		}

		[Token(Token = "0x6001E80")]
		[Address(RVA = "0xBEC43C", Offset = "0xBEC43C", VA = "0xBEC43C")]
		public static void SetGrayImage(Graphic a, bool isGray)
		{
		}

		[Token(Token = "0x6001E81")]
		[Address(RVA = "0xBEC448", Offset = "0xBEC448", VA = "0xBEC448")]
		public static void HideNativeView()
		{
		}

		[Token(Token = "0x6001E82")]
		[Address(RVA = "0xBEC5A8", Offset = "0xBEC5A8", VA = "0xBEC5A8")]
		public static GameObject FindChildByName(GameObject obj, string name)
		{
			return null;
		}

		[Token(Token = "0x6001E83")]
		[Address(RVA = "0xBEC6D0", Offset = "0xBEC6D0", VA = "0xBEC6D0")]
		public static void SetRenderTextureCamera(bool isShow)
		{
		}

		[Token(Token = "0x6001E84")]
		[Address(RVA = "0xBEC6D4", Offset = "0xBEC6D4", VA = "0xBEC6D4")]
		public static string GetPlatformName()
		{
			return null;
		}

		[Token(Token = "0x6001E85")]
		[Address(RVA = "0xBEC730", Offset = "0xBEC730", VA = "0xBEC730")]
		public static void SetTriangleAnimation(GameObject go, Vector3 p1, Vector3 p2, Vector3 p3)
		{
		}

		[Token(Token = "0x6001E86")]
		[Address(RVA = "0xBEC858", Offset = "0xBEC858", VA = "0xBEC858")]
		public static void SetLineTitleAnimation(GameObject go, Vector3 p1, Vector3 p2, Vector3 p3)
		{
		}

		[Token(Token = "0x6001E87")]
		[Address(RVA = "0xBEC980", Offset = "0xBEC980", VA = "0xBEC980")]
		public static void SetSpriteName(GameObject go, string name)
		{
		}

		[Token(Token = "0x6001E88")]
		[Address(RVA = "0xBEC9F4", Offset = "0xBEC9F4", VA = "0xBEC9F4")]
		public static void SetLayoutElementSize(GameObject go, float x, float y)
		{
		}

		[Token(Token = "0x6001E89")]
		[Address(RVA = "0xBECAD8", Offset = "0xBECAD8", VA = "0xBECAD8")]
		public static void SetRadar(GameObject go, float v1, float v2, float v3, float v4, float v5)
		{
		}

		[Token(Token = "0x6001E8A")]
		[Address(RVA = "0xBECBD8", Offset = "0xBECBD8", VA = "0xBECBD8")]
		public static void SetAnimatorProcess(GameObject go, float p)
		{
		}

		[Token(Token = "0x6001E8B")]
		[Address(RVA = "0xBECC9C", Offset = "0xBECC9C", VA = "0xBECC9C")]
		public static void SetTypewriterFinishCall(TypewriterEffect com, LuaFunction call)
		{
		}

		[Token(Token = "0x6001E8C")]
		[Address(RVA = "0xBECCB4", Offset = "0xBECCB4", VA = "0xBECCB4")]
		public static void SetTypewriterFinish(TypewriterEffect com)
		{
		}

		[Token(Token = "0x6001E8D")]
		[Address(RVA = "0xBECCCC", Offset = "0xBECCCC", VA = "0xBECCCC")]
		public static void PlayWheelAnim(WheelRotate comp, int targetIndex, int Round, int countPerRound, float angel, LuaFunction callback)
		{
		}

		[Token(Token = "0x6001E8E")]
		[Address(RVA = "0xBECCE4", Offset = "0xBECCE4", VA = "0xBECCE4")]
		public static void StopWheelAnim(WheelRotate comp)
		{
		}

		[Token(Token = "0x6001E8F")]
		[Address(RVA = "0xBECCFC", Offset = "0xBECCFC", VA = "0xBECCFC")]
		public static void PlayWheelIdle(WheelRotate com, int countPerRound, float angle)
		{
		}

		[Token(Token = "0x6001E90")]
		[Address(RVA = "0xBECD14", Offset = "0xBECD14", VA = "0xBECD14")]
		public static void SetWheelIndex(WheelRotate com, int curIndex)
		{
		}

		[Token(Token = "0x6001E91")]
		[Address(RVA = "0xBECD2C", Offset = "0xBECD2C", VA = "0xBECD2C")]
		public static int GetWheelIndex(WheelRotate com)
		{
			return default(int);
		}

		[Token(Token = "0x6001E92")]
		[Address(RVA = "0xBECD44", Offset = "0xBECD44", VA = "0xBECD44")]
		public static void PlayWheelActive(WheelActive com, int startIndex, int targetIndex, int round, int countPerRound, LuaFunction callback, LuaFunction callAtOverIndex)
		{
		}

		[Token(Token = "0x6001E93")]
		[Address(RVA = "0xBECD5C", Offset = "0xBECD5C", VA = "0xBECD5C")]
		public static Tweener PlayMoveTween(GameObject goFrom, GameObject goTo, float duration, LuaFunction callback)
		{
			return null;
		}

		[Token(Token = "0x6001E94")]
		[Address(RVA = "0xBECE6C", Offset = "0xBECE6C", VA = "0xBECE6C")]
		public static Tweener PlayLocalMoveTween(GameObject goFrom, GameObject goTo, float duration, LuaFunction callback)
		{
			return null;
		}

		[Token(Token = "0x6001E95")]
		[Address(RVA = "0xBECF7C", Offset = "0xBECF7C", VA = "0xBECF7C")]
		public static Tweener PlayLocalValueMoveTween(GameObject goFrom, Vector3 goLocalPos, float duration, LuaFunction callback)
		{
			return null;
		}

		[Token(Token = "0x6001E96")]
		[Address(RVA = "0xBED084", Offset = "0xBED084", VA = "0xBED084")]
		public static Tweener PlayLocalValueRotateTween(GameObject goFrom, Vector3 goLocalPos, float duration, LuaFunction callback)
		{
			return null;
		}

		[Token(Token = "0x6001E97")]
		[Address(RVA = "0xBED18C", Offset = "0xBED18C", VA = "0xBED18C")]
		public static Tweener PlaySliderTo(Slider slider, float endValue, float duration, LuaFunction callback)
		{
			return null;
		}

		[Token(Token = "0x6001E98")]
		[Address(RVA = "0xBED300", Offset = "0xBED300", VA = "0xBED300")]
		public static Tweener TweenDoMove(GameObject go, Vector3 target, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001E99")]
		[Address(RVA = "0xBED358", Offset = "0xBED358", VA = "0xBED358")]
		public static Tweener TweenDoMoveLua(GameObject go, float x, float y, float z, float duration, LuaFunction call)
		{
			return null;
		}

		[Token(Token = "0x6001E9A")]
		[Address(RVA = "0xBED4B4", Offset = "0xBED4B4", VA = "0xBED4B4")]
		public static void PlayAnimLua(GameObject go, string animName)
		{
		}

		[Token(Token = "0x6001E9B")]
		[Address(RVA = "0xBED528", Offset = "0xBED528", VA = "0xBED528")]
		public static float PlayAnimLuaReturnTime(GameObject go, string animName)
		{
			return default(float);
		}

		[Token(Token = "0x6001E9C")]
		[Address(RVA = "0xBED76C", Offset = "0xBED76C", VA = "0xBED76C")]
		public static void SetAnimatorSpeed(GameObject go, float speed)
		{
		}

		[Token(Token = "0x6001E9D")]
		[Address(RVA = "0xBED898", Offset = "0xBED898", VA = "0xBED898")]
		public static float GetAnimLength(GameObject go, string animName)
		{
			return default(float);
		}

		[Token(Token = "0x6001E9E")]
		[Address(RVA = "0xBEDA88", Offset = "0xBEDA88", VA = "0xBEDA88")]
		public static Tweener PlayPathMoveTween(GameObject go, Vector3 from, Vector3 to, float duration, float offset)
		{
			return null;
		}

		[Token(Token = "0x6001E9F")]
		[Address(RVA = "0xBEDC2C", Offset = "0xBEDC2C", VA = "0xBEDC2C")]
		public static void KillTween(Tweener tween)
		{
		}

		[Token(Token = "0x6001EA0")]
		[Address(RVA = "0xBEDC70", Offset = "0xBEDC70", VA = "0xBEDC70")]
		public static void SetCenterToLevelIndex(GameObject go, int index)
		{
		}

		[Token(Token = "0x6001EA1")]
		[Address(RVA = "0xBEDD30", Offset = "0xBEDD30", VA = "0xBEDD30")]
		public static int GetOtherResourceSize()
		{
			return default(int);
		}

		[Token(Token = "0x6001EA2")]
		[Address(RVA = "0xBEDE04", Offset = "0xBEDE04", VA = "0xBEDE04")]
		public static int GetDeleteListCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001EA3")]
		[Address(RVA = "0xBEDEC4", Offset = "0xBEDEC4", VA = "0xBEDEC4")]
		private static bool IsFinish(int current, int max)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EA4")]
		[Address(RVA = "0xBEDED4", Offset = "0xBEDED4", VA = "0xBEDED4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A76B8", Offset = "0x9A76B8")]
		private static IEnumerator DownloadOtherRes(LuaFunction finish, LuaFunction OnRefreshProcess)
		{
			return null;
		}

		[Token(Token = "0x6001EA5")]
		[Address(RVA = "0xBEDF54", Offset = "0xBEDF54", VA = "0xBEDF54")]
		public static void DownloadOtherResource(LuaFunction finish, LuaFunction OnRefreshProcess)
		{
		}

		[Token(Token = "0x6001EA6")]
		[Address(RVA = "0xBEE024", Offset = "0xBEE024", VA = "0xBEE024")]
		public static void StopDownLoadOtherResource(LuaFunction finish, LuaFunction OnRefreshProcess)
		{
		}

		[Token(Token = "0x6001EA7")]
		[Address(RVA = "0xBEE0C8", Offset = "0xBEE0C8", VA = "0xBEE0C8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A771C", Offset = "0x9A771C")]
		private static IEnumerator DownloadOtherResTest(LuaFunction finish, LuaFunction OnRefreshProcess)
		{
			return null;
		}

		[Token(Token = "0x6001EA8")]
		[Address(RVA = "0xBEE144", Offset = "0xBEE144", VA = "0xBEE144")]
		public static void SetMatByResource(GameObject obj, Resource res)
		{
		}

		[Token(Token = "0x6001EA9")]
		[Address(RVA = "0xBEE220", Offset = "0xBEE220", VA = "0xBEE220")]
		public static void SetAsyncLoadBundle()
		{
		}

		[Token(Token = "0x6001EAA")]
		[Address(RVA = "0xBEE224", Offset = "0xBEE224", VA = "0xBEE224")]
		public static void SetSyncLoadBundle()
		{
		}

		[Token(Token = "0x6001EAB")]
		[Address(RVA = "0xBEE228", Offset = "0xBEE228", VA = "0xBEE228")]
		public static string GetDeviceName()
		{
			return null;
		}

		[Token(Token = "0x6001EAC")]
		[Address(RVA = "0xBEE2A0", Offset = "0xBEE2A0", VA = "0xBEE2A0")]
		public static void SetMaskEnable(GameObject go, bool b)
		{
		}

		[Token(Token = "0x6001EAD")]
		[Address(RVA = "0xBEE364", Offset = "0xBEE364", VA = "0xBEE364")]
		public static string GetPxrPuiVersion()
		{
			return null;
		}

		[Token(Token = "0x6001EAE")]
		[Address(RVA = "0xBEE3AC", Offset = "0xBEE3AC", VA = "0xBEE3AC")]
		public static string GetPxrEquipmentModel()
		{
			return null;
		}

		[Token(Token = "0x6001EAF")]
		[Address(RVA = "0xBEE3F4", Offset = "0xBEE3F4", VA = "0xBEE3F4")]
		public static string GetPxrCustomerSN()
		{
			return null;
		}

		[Token(Token = "0x6001EB0")]
		[Address(RVA = "0xBEE43C", Offset = "0xBEE43C", VA = "0xBEE43C")]
		public static string GetPxrEquipmentSN()
		{
			return null;
		}

		[Token(Token = "0x6001EB1")]
		[Address(RVA = "0xBEE484", Offset = "0xBEE484", VA = "0xBEE484")]
		public static string GetDeviceModel()
		{
			return null;
		}

		[Token(Token = "0x6001EB2")]
		[Address(RVA = "0xBEE48C", Offset = "0xBEE48C", VA = "0xBEE48C")]
		public static void AppendFileLog(string data)
		{
		}

		[Token(Token = "0x6001EB3")]
		[Address(RVA = "0xBEE490", Offset = "0xBEE490", VA = "0xBEE490")]
		public static string GetNewRolePath(string path)
		{
			return null;
		}

		[Token(Token = "0x6001EB4")]
		[Address(RVA = "0xBEE494", Offset = "0xBEE494", VA = "0xBEE494")]
		public static void RefreshSorting(GameObject go, int order)
		{
		}

		[Token(Token = "0x6001EB5")]
		[Address(RVA = "0xBEE57C", Offset = "0xBEE57C", VA = "0xBEE57C")]
		public static void RefreshDepth(GameObject go, bool isForce)
		{
		}

		[Token(Token = "0x6001EB6")]
		[Address(RVA = "0xBEE668", Offset = "0xBEE668", VA = "0xBEE668")]
		public static void SetUIDepthEnabled(GameObject go, bool enableValue)
		{
		}

		[Token(Token = "0x6001EB7")]
		[Address(RVA = "0xBEE754", Offset = "0xBEE754", VA = "0xBEE754")]
		public static void SetLuaCallBack(GameObject go, LuaFunction callBack)
		{
		}

		[Token(Token = "0x6001EB8")]
		[Address(RVA = "0xBEE818", Offset = "0xBEE818", VA = "0xBEE818")]
		public static void ClearHideNodes()
		{
		}

		[Token(Token = "0x6001EB9")]
		[Address(RVA = "0xBEE81C", Offset = "0xBEE81C", VA = "0xBEE81C")]
		public static void AddHideNodes(int index)
		{
		}

		[Token(Token = "0x6001EBA")]
		[Address(RVA = "0xBEE820", Offset = "0xBEE820", VA = "0xBEE820")]
		public static void LoadShader()
		{
		}

		[Token(Token = "0x6001EBB")]
		[Address(RVA = "0xBEE828", Offset = "0xBEE828", VA = "0xBEE828")]
		public static void LogTime(string name)
		{
		}

		[Token(Token = "0x6001EBC")]
		[Address(RVA = "0xBEEA0C", Offset = "0xBEEA0C", VA = "0xBEEA0C")]
		public static void SetFps(int fps)
		{
		}

		[Token(Token = "0x6001EBD")]
		[Address(RVA = "0xBEEA74", Offset = "0xBEEA74", VA = "0xBEEA74")]
		public static void StartDownloadTiming()
		{
		}

		[Token(Token = "0x6001EBE")]
		[Address(RVA = "0xBDC710", Offset = "0xBDC710", VA = "0xBDC710")]
		public static void StopDownloadTiming()
		{
		}

		[Token(Token = "0x6001EBF")]
		[Address(RVA = "0xBEEA78", Offset = "0xBEEA78", VA = "0xBEEA78")]
		public static void AddSeeFrame()
		{
		}

		[Token(Token = "0x6001EC0")]
		[Address(RVA = "0xBEEB48", Offset = "0xBEEB48", VA = "0xBEEB48")]
		public static void AddLuaTime(LuaFunction fun)
		{
		}

		[Token(Token = "0x6001EC1")]
		[Address(RVA = "0xBEEBA4", Offset = "0xBEEBA4", VA = "0xBEEBA4")]
		public static void ReleaseScene(string path)
		{
		}

		[Token(Token = "0x6001EC2")]
		[Address(RVA = "0xBEEC84", Offset = "0xBEEC84", VA = "0xBEEC84")]
		public static void AddCameraToEasyTouch(GameObject cameraGo)
		{
		}

		[Token(Token = "0x6001EC3")]
		[Address(RVA = "0xBEED64", Offset = "0xBEED64", VA = "0xBEED64")]
		public static void RemoveCameraFromEasyTouch(GameObject cameraGo)
		{
		}

		[Token(Token = "0x6001EC4")]
		[Address(RVA = "0xBEEE40", Offset = "0xBEEE40", VA = "0xBEEE40")]
		public static void Record(string name)
		{
		}

		[Token(Token = "0x6001EC5")]
		[Address(RVA = "0xBEEE44", Offset = "0xBEEE44", VA = "0xBEEE44")]
		public static void Game_Register(string account, int gender, string age, string serverId, string accountType, string rolename)
		{
		}

		[Token(Token = "0x6001EC6")]
		[Address(RVA = "0xBEEF44", Offset = "0xBEEF44", VA = "0xBEEF44")]
		public static void Game_Login(string account, int genders, string age, string serverId, int level, string rolename)
		{
		}

		[Token(Token = "0x6001EC7")]
		[Address(RVA = "0xBEF044", Offset = "0xBEF044", VA = "0xBEF044")]
		public static void Game_SetPayment(string transactionId, string paymentType, string currencyType, float currencyAmount, float virtualCoinAmount, string iapName, int iapAmount, int level)
		{
		}

		[Token(Token = "0x6001EC8")]
		[Address(RVA = "0xBEF160", Offset = "0xBEF160", VA = "0xBEF160")]
		public static void SetActiveScene(string scene, LuaFunction fun)
		{
		}

		[Token(Token = "0x6001EC9")]
		[Address(RVA = "0xBEF204", Offset = "0xBEF204", VA = "0xBEF204")]
		public static void SetRenderSettings()
		{
		}

		[Token(Token = "0x6001ECA")]
		[Address(RVA = "0xBEF25C", Offset = "0xBEF25C", VA = "0xBEF25C")]
		public static string GetBranchInfoDesc()
		{
			return null;
		}

		[Token(Token = "0x6001ECB")]
		[Address(RVA = "0xBEF2A4", Offset = "0xBEF2A4", VA = "0xBEF2A4")]
		public static Vector2 GetScreenSize()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001ECC")]
		[Address(RVA = "0xBEF30C", Offset = "0xBEF30C", VA = "0xBEF30C")]
		public static Vector2 GetRectLocalPos(Vector3 scenePos, Camera cam, RectTransform canvasRectTransform)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001ECD")]
		[Address(RVA = "0xBEF458", Offset = "0xBEF458", VA = "0xBEF458")]
		public static void FormatGO(GameObject go)
		{
		}

		[Token(Token = "0x6001ECE")]
		[Address(RVA = "0xBEF510", Offset = "0xBEF510", VA = "0xBEF510")]
		public static void SetNetFunction(LuaFunction fun)
		{
		}

		[Token(Token = "0x6001ECF")]
		[Address(RVA = "0xBEF564", Offset = "0xBEF564", VA = "0xBEF564")]
		public static void AddLuaListener(int index, int key, LuaFunction fun)
		{
		}

		[Token(Token = "0x6001ED0")]
		[Address(RVA = "0xBEF56C", Offset = "0xBEF56C", VA = "0xBEF56C")]
		public static void RemoveLuaListener(int index, int key, LuaFunction fun)
		{
		}

		[Token(Token = "0x6001ED1")]
		[Address(RVA = "0xBEF574", Offset = "0xBEF574", VA = "0xBEF574")]
		public static void Dispatch(int index, int key, params object[] datas)
		{
		}

		[Token(Token = "0x6001ED2")]
		[Address(RVA = "0xBEF57C", Offset = "0xBEF57C", VA = "0xBEF57C")]
		public static void SetUIPosByWorldPos(GameObject go, float worldX, float worldY, float worldZ, RectTransform canvasRectTransform)
		{
		}

		[Token(Token = "0x6001ED3")]
		[Address(RVA = "0xBEF688", Offset = "0xBEF688", VA = "0xBEF688")]
		public static void SetPos(GameObject go, float x, float y, float z)
		{
		}

		[Token(Token = "0x6001ED4")]
		[Address(RVA = "0xBEF710", Offset = "0xBEF710", VA = "0xBEF710")]
		public static void AddAnimationCallback(GameObject go, LuaFunction callback)
		{
		}

		[Token(Token = "0x6001ED5")]
		[Address(RVA = "0xBEF71C", Offset = "0xBEF71C", VA = "0xBEF71C")]
		public static void SetUICameraShake(float shakeLevelPara, float shakeTimePara, float shakeFpsPara)
		{
		}

		[Token(Token = "0x6001ED6")]
		[Address(RVA = "0xBEF7BC", Offset = "0xBEF7BC", VA = "0xBEF7BC")]
		public static void SetGoShader(GameObject go, string shaderName)
		{
		}

		[Token(Token = "0x6001ED7")]
		[Address(RVA = "0xBEF840", Offset = "0xBEF840", VA = "0xBEF840")]
		public static void ReConnect()
		{
		}

		[Token(Token = "0x6001ED8")]
		[Address(RVA = "0xBEF8A0", Offset = "0xBEF8A0", VA = "0xBEF8A0")]
		public static void Logout()
		{
		}

		[Token(Token = "0x6001ED9")]
		[Address(RVA = "0xBEF900", Offset = "0xBEF900", VA = "0xBEF900")]
		public static void LuaToCS(int type, string data)
		{
		}

		[Token(Token = "0x6001EDA")]
		[Address(RVA = "0xBEF904", Offset = "0xBEF904", VA = "0xBEF904")]
		public static void CSToLua(int type, string data)
		{
		}

		[Token(Token = "0x6001EDB")]
		[Address(RVA = "0xBEF9E8", Offset = "0xBEF9E8", VA = "0xBEF9E8")]
		public static int DiffLong(long a, long b)
		{
			return default(int);
		}

		[Token(Token = "0x6001EDC")]
		[Address(RVA = "0xBEFA00", Offset = "0xBEFA00", VA = "0xBEFA00")]
		public static string Base64Encrypt(string input)
		{
			return null;
		}

		[Token(Token = "0x6001EDD")]
		[Address(RVA = "0xBEFA84", Offset = "0xBEFA84", VA = "0xBEFA84")]
		public static string Base64Encrypt(string input, Encoding encode)
		{
			return null;
		}

		[Token(Token = "0x6001EDE")]
		[Address(RVA = "0xBEFB20", Offset = "0xBEFB20", VA = "0xBEFB20")]
		public static string Base64Decrypt(string input)
		{
			return null;
		}

		[Token(Token = "0x6001EDF")]
		[Address(RVA = "0xBEFBA4", Offset = "0xBEFBA4", VA = "0xBEFBA4")]
		public static string Base64Decrypt(string input, Encoding encode)
		{
			return null;
		}

		[Token(Token = "0x6001EE0")]
		[Address(RVA = "0xBE5664", Offset = "0xBE5664", VA = "0xBE5664")]
		public static string DecryptJsonString(string orig)
		{
			return null;
		}

		[Token(Token = "0x6001EE1")]
		[Address(RVA = "0xBEFC38", Offset = "0xBEFC38", VA = "0xBEFC38")]
		public static float CalculateMutiLong(long a, float b)
		{
			return default(float);
		}

		[Token(Token = "0x6001EE2")]
		[Address(RVA = "0xBEFC44", Offset = "0xBEFC44", VA = "0xBEFC44")]
		public static void UnityToNative(string type, string data)
		{
		}

		[Token(Token = "0x6001EE3")]
		[Address(RVA = "0xBEFCB4", Offset = "0xBEFCB4", VA = "0xBEFCB4")]
		public static void RepairUpdate()
		{
		}

		[Token(Token = "0x6001EE4")]
		[Address(RVA = "0xBEFD68", Offset = "0xBEFD68", VA = "0xBEFD68")]
		public static void SetLuaMem(LuaTable table)
		{
		}

		[Token(Token = "0x6001EE5")]
		[Address(RVA = "0xBEFDD4", Offset = "0xBEFDD4", VA = "0xBEFDD4")]
		public static void SetLuaTimeMgrMem(LuaTable timeDic, LuaTable frameDic)
		{
		}

		[Token(Token = "0x6001EE6")]
		[Address(RVA = "0xBEFE54", Offset = "0xBEFE54", VA = "0xBEFE54")]
		public static GameObject AddView(string path, GameObject viewRoot, int hierarichy, RectTransform canvasRoot)
		{
			return null;
		}

		[Token(Token = "0x6001EE7")]
		[Address(RVA = "0xBEFFD8", Offset = "0xBEFFD8", VA = "0xBEFFD8")]
		public static GameObject AddSceneGoView(string path, GameObject viewRoot, GameObject root)
		{
			return null;
		}

		[Token(Token = "0x6001EE8")]
		[Address(RVA = "0xBF0138", Offset = "0xBF0138", VA = "0xBF0138")]
		public static Canvas AddUICanvas(GameObject viewRoot, int layer)
		{
			return null;
		}

		[Token(Token = "0x6001EE9")]
		[Address(RVA = "0xBF01E0", Offset = "0xBF01E0", VA = "0xBF01E0")]
		public static void AddBoxCollider(GameObject go, float sizex, float sizey)
		{
		}

		[Token(Token = "0x6001EEA")]
		[Address(RVA = "0xBF02B4", Offset = "0xBF02B4", VA = "0xBF02B4")]
		public static int BitOperation(int type, int a, int b)
		{
			return default(int);
		}

		[Token(Token = "0x6001EEB")]
		[Address(RVA = "0xBF0358", Offset = "0xBF0358", VA = "0xBF0358")]
		public static int BitOperation(int type, int a, int b, int c)
		{
			return default(int);
		}

		[Token(Token = "0x6001EEC")]
		[Address(RVA = "0xBF0410", Offset = "0xBF0410", VA = "0xBF0410")]
		public static int BitOperation(int type, int a, int b, int c, int d)
		{
			return default(int);
		}

		[Token(Token = "0x6001EED")]
		[Address(RVA = "0xBF04D4", Offset = "0xBF04D4", VA = "0xBF04D4")]
		public static void SetXXLTable(LuaTable table)
		{
		}

		[Token(Token = "0x6001EEE")]
		[Address(RVA = "0xBF0540", Offset = "0xBF0540", VA = "0xBF0540")]
		public static void CombineSkinned(GameObject source, GameObject[] gos, bool combine = false)
		{
		}

		[Token(Token = "0x6001EEF")]
		[Address(RVA = "0xBF0AD8", Offset = "0xBF0AD8", VA = "0xBF0AD8")]
		public static void CombineSkinnedOnlyBone(GameObject source, GameObject[] gos)
		{
		}

		[Token(Token = "0x6001EF0")]
		[Address(RVA = "0xBF1084", Offset = "0xBF1084", VA = "0xBF1084")]
		public static void CaptureScreenOnImage(GameObject obj, LuaFunction callback)
		{
		}

		[Token(Token = "0x6001EF1")]
		[Address(RVA = "0xBF1128", Offset = "0xBF1128", VA = "0xBF1128")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A7780", Offset = "0x9A7780")]
		private static IEnumerator _captureScreenOnImage(GameObject obj, LuaFunction callback)
		{
			return null;
		}

		[Token(Token = "0x6001EF2")]
		[Address(RVA = "0xBF11A4", Offset = "0xBF11A4", VA = "0xBF11A4")]
		public static void SetMeshRenderColorValue(GameObject go, string ColorName, LuaTable colorTab)
		{
		}

		[Token(Token = "0x6001EF3")]
		[Address(RVA = "0xBF1378", Offset = "0xBF1378", VA = "0xBF1378")]
		public static void SetChildMeshRenderColorValue(GameObject go, string ColorName, string matName, LuaTable colorTab)
		{
		}

		[Token(Token = "0x6001EF4")]
		[Address(RVA = "0xBF15D4", Offset = "0xBF15D4", VA = "0xBF15D4")]
		public static void SetMeshRenderTexture(GameObject go, string TextureName, string imgName, string matName)
		{
		}

		[Token(Token = "0x6001EF5")]
		[Address(RVA = "0xBF17AC", Offset = "0xBF17AC", VA = "0xBF17AC")]
		public static void RemoveTextureLoaderCom(GameObject go)
		{
		}

		[Token(Token = "0x6001EF6")]
		[Address(RVA = "0xBF1874", Offset = "0xBF1874", VA = "0xBF1874")]
		public static void SetSpineAniName(GameObject go, string aniName)
		{
		}

		[Token(Token = "0x6001EF7")]
		[Address(RVA = "0xBF1938", Offset = "0xBF1938", VA = "0xBF1938")]
		public static float MathLerp(float a, float b, float t)
		{
			return default(float);
		}

		[Token(Token = "0x6001EF8")]
		[Address(RVA = "0xBF19C0", Offset = "0xBF19C0", VA = "0xBF19C0")]
		public static GameObject GoFindNode(GameObject go, string findName)
		{
			return null;
		}

		[Token(Token = "0x6001EF9")]
		[Address(RVA = "0xBF19C8", Offset = "0xBF19C8", VA = "0xBF19C8")]
		public static void SaveCameraCapture(Camera targetCamera, int wide, int high, string name)
		{
		}

		[Token(Token = "0x6001EFA")]
		[Address(RVA = "0xBF1C90", Offset = "0xBF1C90", VA = "0xBF1C90")]
		public static Canvas AddCanvas2D(GameObject uiroot, string canvasName, int sortingOrder, bool isCheckMatchOrHeight, int layer, Camera camera)
		{
			return null;
		}

		[Token(Token = "0x6001EFB")]
		[Address(RVA = "0xBF1FA0", Offset = "0xBF1FA0", VA = "0xBF1FA0")]
		public static int GetNameToLayer(string str)
		{
			return default(int);
		}

		[Token(Token = "0x6001EFC")]
		[Address(RVA = "0xBF1FA8", Offset = "0xBF1FA8", VA = "0xBF1FA8")]
		public static int GetMask(params string[] layerNames)
		{
			return default(int);
		}

		[Token(Token = "0x6001EFD")]
		[Address(RVA = "0xBF1FB0", Offset = "0xBF1FB0", VA = "0xBF1FB0")]
		public static void SetUICamera(Camera c)
		{
		}

		[Token(Token = "0x6001EFE")]
		[Address(RVA = "0xBF2050", Offset = "0xBF2050", VA = "0xBF2050")]
		public static void ChangeLayerRecursively(RectTransform rect, int layer)
		{
		}

		[Token(Token = "0x6001EFF")]
		[Address(RVA = "0xBF2058", Offset = "0xBF2058", VA = "0xBF2058")]
		public static long GetDateTimeNowTicks()
		{
			return default(long);
		}

		[Token(Token = "0x6001F00")]
		[Address(RVA = "0xBF20EC", Offset = "0xBF20EC", VA = "0xBF20EC")]
		public static void AddLogToFile(string file, string content)
		{
		}

		[Token(Token = "0x6001F01")]
		[Address(RVA = "0xBF2164", Offset = "0xBF2164", VA = "0xBF2164")]
		public static int GetVRPingtai()
		{
			return default(int);
		}

		[Token(Token = "0x6001F02")]
		[Address(RVA = "0xBF21BC", Offset = "0xBF21BC", VA = "0xBF21BC")]
		public static void CheckGCSprite()
		{
		}

		[Token(Token = "0x6001F03")]
		[Address(RVA = "0xBF21C0", Offset = "0xBF21C0", VA = "0xBF21C0")]
		public static void CheckGCUnityResource()
		{
		}

		[Token(Token = "0x6001F04")]
		[Address(RVA = "0xBF21D8", Offset = "0xBF21D8", VA = "0xBF21D8")]
		public static void CheckGCAssetBundle(int checkMaxCount)
		{
		}

		[Token(Token = "0x6001F05")]
		[Address(RVA = "0xBF2258", Offset = "0xBF2258", VA = "0xBF2258")]
		public static void CheckGCLua()
		{
		}

		[Token(Token = "0x6001F06")]
		[Address(RVA = "0xBF231C", Offset = "0xBF231C", VA = "0xBF231C")]
		public static void CheckLibSettingCheck()
		{
		}

		[Token(Token = "0x6001F07")]
		[Address(RVA = "0xBF237C", Offset = "0xBF237C", VA = "0xBF237C")]
		public static bool GetVrHandActive(int side)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F08")]
		[Address(RVA = "0xBF2448", Offset = "0xBF2448", VA = "0xBF2448")]
		public static void SetVrControllerFunc(LuaFunction func)
		{
		}

		[Token(Token = "0x6001F09")]
		[Address(RVA = "0xBF24BC", Offset = "0xBF24BC", VA = "0xBF24BC")]
		public static void SetVrControllerNotifyToLua(bool value)
		{
		}

		[Token(Token = "0x6001F0A")]
		[Address(RVA = "0xBF2534", Offset = "0xBF2534", VA = "0xBF2534")]
		public static void SetVrControllerMianHand(int value)
		{
		}

		[Token(Token = "0x6001F0B")]
		[Address(RVA = "0xBF25A8", Offset = "0xBF25A8", VA = "0xBF25A8")]
		public static void VrControllerShakeHand(int hand, float amplitude, float duration)
		{
		}

		[Token(Token = "0x6001F0C")]
		[Address(RVA = "0xBF2638", Offset = "0xBF2638", VA = "0xBF2638")]
		public static void VrControllerSetLineRendererActive(bool value)
		{
		}

		[Token(Token = "0x6001F0D")]
		[Address(RVA = "0xBF26B0", Offset = "0xBF26B0", VA = "0xBF26B0")]
		public static void VrControllerSetHandControllerActive(bool value)
		{
		}

		[Token(Token = "0x6001F0E")]
		[Address(RVA = "0xBF2728", Offset = "0xBF2728", VA = "0xBF2728")]
		public static void SetAntiAliasing(int anti)
		{
		}

		[Token(Token = "0x6001F0F")]
		[Address(RVA = "0xBF27A8", Offset = "0xBF27A8", VA = "0xBF27A8")]
		public static Vector2 GetRectSize(GameObject go)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001F10")]
		[Address(RVA = "0xBF2830", Offset = "0xBF2830", VA = "0xBF2830")]
		public static string GetSystemLanguage()
		{
			return null;
		}

		[Token(Token = "0x6001F11")]
		[Address(RVA = "0xBF28C0", Offset = "0xBF28C0", VA = "0xBF28C0")]
		public static Color[] GetImgColorParam(GameObject go)
		{
			return null;
		}

		[Token(Token = "0x6001F12")]
		[Address(RVA = "0xBF29C0", Offset = "0xBF29C0", VA = "0xBF29C0")]
		public static void SetImgColorParamInGo(GameObject go, LuaTable colorGroupParam)
		{
		}

		[Token(Token = "0x6001F13")]
		[Address(RVA = "0xBF2C48", Offset = "0xBF2C48", VA = "0xBF2C48")]
		public static Color[] GetSpriteRenderColorParam(GameObject go)
		{
			return null;
		}

		[Token(Token = "0x6001F14")]
		[Address(RVA = "0xBF2D40", Offset = "0xBF2D40", VA = "0xBF2D40")]
		public static void SetSpriteRenderColorParamInGo(GameObject go, LuaTable colorGroupParam)
		{
		}

		[Token(Token = "0x6001F15")]
		[Address(RVA = "0xBF2FB8", Offset = "0xBF2FB8", VA = "0xBF2FB8")]
		public static void PlayComVideo(GameObject go, float startTime)
		{
		}

		[Token(Token = "0x6001F16")]
		[Address(RVA = "0xBF3048", Offset = "0xBF3048", VA = "0xBF3048")]
		public static double GetComVideoTime(GameObject go)
		{
			return default(double);
		}

		[Token(Token = "0x6001F17")]
		[Address(RVA = "0xBF30B8", Offset = "0xBF30B8", VA = "0xBF30B8")]
		public static void SetComVideoTime(GameObject go, double startTime)
		{
		}

		[Token(Token = "0x6001F18")]
		[Address(RVA = "0xBF3138", Offset = "0xBF3138", VA = "0xBF3138")]
		public static void SetComVideoSpeed(GameObject go, float speedValue)
		{
		}

		[Token(Token = "0x6001F19")]
		[Address(RVA = "0xBF31B8", Offset = "0xBF31B8", VA = "0xBF31B8")]
		public static void StopComVideo(GameObject go)
		{
		}

		[Token(Token = "0x6001F1A")]
		[Address(RVA = "0xBF3228", Offset = "0xBF3228", VA = "0xBF3228")]
		public static void SetComVideoUtl(GameObject go, string url)
		{
		}

		[Token(Token = "0x6001F1B")]
		[Address(RVA = "0xBF32A8", Offset = "0xBF32A8", VA = "0xBF32A8")]
		public static void SetComVideoPrePareFunc(GameObject go, LuaFunction func)
		{
		}

		[Token(Token = "0x6001F1C")]
		[Address(RVA = "0xBF3324", Offset = "0xBF3324", VA = "0xBF3324")]
		public static void SetComVideoEndTimeFunc(GameObject go, float endTime, LuaFunction func)
		{
		}

		[Token(Token = "0x6001F1D")]
		[Address(RVA = "0xBF33B0", Offset = "0xBF33B0", VA = "0xBF33B0")]
		public static void SetComVideoOutTimeFunc(GameObject go, float outTime, LuaFunction func)
		{
		}

		[Token(Token = "0x6001F1E")]
		[Address(RVA = "0xBF343C", Offset = "0xBF343C", VA = "0xBF343C")]
		public static void SetComVideoStartTimeFunc(GameObject go, float startTime, LuaFunction func)
		{
		}

		[Token(Token = "0x6001F1F")]
		[Address(RVA = "0xBF34C8", Offset = "0xBF34C8", VA = "0xBF34C8")]
		public static void ClearComVideoParams(GameObject go)
		{
		}

		[Token(Token = "0x6001F20")]
		[Address(RVA = "0xBF3538", Offset = "0xBF3538", VA = "0xBF3538")]
		public static void SetComVideoPercentLuaFun(GameObject go, LuaFunction func)
		{
		}

		[Token(Token = "0x6001F21")]
		[Address(RVA = "0xBF35B4", Offset = "0xBF35B4", VA = "0xBF35B4")]
		public static void SetComVideoAddFrame(GameObject go)
		{
		}

		[Token(Token = "0x6001F22")]
		[Address(RVA = "0xBF3624", Offset = "0xBF3624", VA = "0xBF3624")]
		public static void SetComVideoReduceFrame(GameObject go)
		{
		}

		[Token(Token = "0x6001F23")]
		[Address(RVA = "0xBF3694", Offset = "0xBF3694", VA = "0xBF3694")]
		public static string GetComVideoFile(GameObject go)
		{
			return null;
		}

		[Token(Token = "0x6001F24")]
		[Address(RVA = "0xBF3704", Offset = "0xBF3704", VA = "0xBF3704")]
		public static void VideoPlayByUrl(GameObject go, string fullPath)
		{
		}

		[Token(Token = "0x6001F25")]
		[Address(RVA = "0xBF3784", Offset = "0xBF3784", VA = "0xBF3784")]
		public static void SetComVideoTimeByPercent(GameObject go, float percent)
		{
		}

		[Token(Token = "0x6001F26")]
		[Address(RVA = "0xBF3804", Offset = "0xBF3804", VA = "0xBF3804")]
		public static void DownloadVideo(string url, string toFile, LuaFunction func)
		{
		}

		[Token(Token = "0x6001F27")]
		[Address(RVA = "0xBF393C", Offset = "0xBF393C", VA = "0xBF393C")]
		public static bool HasVideoFile(string toFile)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F28")]
		[Address(RVA = "0xBF3944", Offset = "0xBF3944", VA = "0xBF3944")]
		public static string GetPersistentDataPath(string ResourcePath)
		{
			return null;
		}

		[Token(Token = "0x6001F29")]
		[Address(RVA = "0xBF39C0", Offset = "0xBF39C0", VA = "0xBF39C0")]
		public static void SetComVideoPathType(GameObject go, int typeValue)
		{
		}

		[Token(Token = "0x6001F2A")]
		[Address(RVA = "0xBF3A3C", Offset = "0xBF3A3C", VA = "0xBF3A3C")]
		public static void SetComVideoStepForward(GameObject go)
		{
		}

		[Token(Token = "0x6001F2B")]
		[Address(RVA = "0xBF3AAC", Offset = "0xBF3AAC", VA = "0xBF3AAC")]
		public static bool GetBuglyIsOpen()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F2C")]
		[Address(RVA = "0xBF3B14", Offset = "0xBF3B14", VA = "0xBF3B14")]
		public static void SetAnimationEvent(GameObject go, LuaFunction luaFunc)
		{
		}

		[Token(Token = "0x6001F2D")]
		[Address(RVA = "0xBF3BEC", Offset = "0xBF3BEC", VA = "0xBF3BEC")]
		public static float GetValueOnAnimationCurveByTime(AnimationCurve curve, float time)
		{
			return default(float);
		}

		[Token(Token = "0x6001F2E")]
		[Address(RVA = "0xBF3C04", Offset = "0xBF3C04", VA = "0xBF3C04")]
		public static void PlayAnimatorWithCom(Animator animatorCom, string name)
		{
		}

		[Token(Token = "0x6001F2F")]
		[Address(RVA = "0xBF3CC0", Offset = "0xBF3CC0", VA = "0xBF3CC0")]
		public static void SetMeshTexture(GameObject go, string path)
		{
		}

		[Token(Token = "0x6001F30")]
		[Address(RVA = "0xBF3E04", Offset = "0xBF3E04", VA = "0xBF3E04")]
		public static void SetComVideoPercentVolume(GameObject go, float percent)
		{
		}
	}
	[Token(Token = "0x2000245")]
	internal class NativePanel : SBehaviour
	{
		[Token(Token = "0x4000A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject _goUpdate;

		[Token(Token = "0x4000A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject mUpdate;

		[Token(Token = "0x4000A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float DownloadStartTime;

		[Token(Token = "0x4000A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Action Handler;

		[Token(Token = "0x4000A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float mCurrent;

		[Token(Token = "0x4000A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool IsWait;

		[Token(Token = "0x4000A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float AminationTime;

		[Token(Token = "0x4000A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static NativePanel mInstance;

		[Token(Token = "0x4000A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private DateTime mStart;

		[Token(Token = "0x4000A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool mIsCheck;

		[Token(Token = "0x170000FA")]
		public static NativePanel Instance
		{
			[Token(Token = "0x6001F32")]
			[Address(RVA = "0xBD7954", Offset = "0xBD7954", VA = "0xBD7954")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F33")]
		[Address(RVA = "0xBD79BC", Offset = "0xBD79BC", VA = "0xBD79BC")]
		public void SetText(string text)
		{
		}

		[Token(Token = "0x6001F34")]
		[Address(RVA = "0xBD79C0", Offset = "0xBD79C0", VA = "0xBD79C0")]
		public void SetPercentText(string text)
		{
		}

		[Token(Token = "0x6001F35")]
		[Address(RVA = "0xBD79C4", Offset = "0xBD79C4", VA = "0xBD79C4")]
		public void SetVersionText()
		{
		}

		[Token(Token = "0x6001F36")]
		[Address(RVA = "0xBD79C8", Offset = "0xBD79C8", VA = "0xBD79C8")]
		public void SetVisible(bool isVisible)
		{
		}

		[Token(Token = "0x6001F37")]
		[Address(RVA = "0xBD7A48", Offset = "0xBD7A48", VA = "0xBD7A48")]
		public void SetProcessVisible(bool isVisible)
		{
		}

		[Token(Token = "0x6001F38")]
		[Address(RVA = "0xBD79F4", Offset = "0xBD79F4", VA = "0xBD79F4")]
		public void SetGoActive(GameObject go, bool visible)
		{
		}

		[Token(Token = "0x6001F39")]
		[Address(RVA = "0xBD7A4C", Offset = "0xBD7A4C", VA = "0xBD7A4C")]
		public void SetProcess(float v)
		{
		}

		[Token(Token = "0x6001F3A")]
		[Address(RVA = "0xBD7A50", Offset = "0xBD7A50", VA = "0xBD7A50")]
		public void DestoryAll()
		{
		}

		[Token(Token = "0x6001F3B")]
		[Address(RVA = "0xBD7B38", Offset = "0xBD7B38", VA = "0xBD7B38")]
		public void Hide()
		{
		}

		[Token(Token = "0x6001F3C")]
		[Address(RVA = "0xBD7CD8", Offset = "0xBD7CD8", VA = "0xBD7CD8", Slot = "5")]
		protected override void InitMono()
		{
		}

		[Token(Token = "0x6001F3D")]
		[Address(RVA = "0xBD7DC4", Offset = "0xBD7DC4", VA = "0xBD7DC4")]
		public void SetProgressUpdate(float percent)
		{
		}

		[Token(Token = "0x6001F3E")]
		[Address(RVA = "0xBD7DC8", Offset = "0xBD7DC8", VA = "0xBD7DC8")]
		public void SetRemainSize(int remainKb, int totalKb)
		{
		}

		[Token(Token = "0x6001F3F")]
		[Address(RVA = "0xBD7F30", Offset = "0xBD7F30", VA = "0xBD7F30")]
		public void Init()
		{
		}

		[Token(Token = "0x6001F40")]
		[Address(RVA = "0xBD8030", Offset = "0xBD8030", VA = "0xBD8030")]
		public void SetSize(string str)
		{
		}

		[Token(Token = "0x6001F41")]
		[Address(RVA = "0xBD8034", Offset = "0xBD8034", VA = "0xBD8034")]
		private string GetBgPath(string channel)
		{
			return null;
		}

		[Token(Token = "0x6001F42")]
		[Address(RVA = "0xBD8088", Offset = "0xBD8088", VA = "0xBD8088")]
		private void ClickUpdate()
		{
		}

		[Token(Token = "0x6001F43")]
		[Address(RVA = "0xBD8114", Offset = "0xBD8114", VA = "0xBD8114")]
		private void ClickCancel()
		{
		}

		[Token(Token = "0x6001F44")]
		[Address(RVA = "0xBD81AC", Offset = "0xBD81AC", VA = "0xBD81AC", Slot = "6")]
		public override void DestroyMono()
		{
		}

		[Token(Token = "0x6001F45")]
		[Address(RVA = "0xBD81B0", Offset = "0xBD81B0", VA = "0xBD81B0")]
		public void Update()
		{
		}

		[Token(Token = "0x6001F46")]
		[Address(RVA = "0xBD7B44", Offset = "0xBD7B44", VA = "0xBD7B44")]
		private void Check()
		{
		}

		[Token(Token = "0x6001F47")]
		[Address(RVA = "0xBD7FA4", Offset = "0xBD7FA4", VA = "0xBD7FA4")]
		public void HideUpdate()
		{
		}

		[Token(Token = "0x6001F48")]
		[Address(RVA = "0xBD81E8", Offset = "0xBD81E8", VA = "0xBD81E8")]
		public void ShowUpdate(Action handler)
		{
		}

		[Token(Token = "0x6001F49")]
		[Address(RVA = "0xBD82B8", Offset = "0xBD82B8", VA = "0xBD82B8")]
		public static void SetNativeText(string str)
		{
		}

		[Token(Token = "0x6001F4A")]
		[Address(RVA = "0xBD8400", Offset = "0xBD8400", VA = "0xBD8400")]
		public NativePanel()
		{
		}
	}
	[Token(Token = "0x2000246")]
	public class GUIProfiler : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20003F5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9403D0", Offset = "0x9403D0")]
		private sealed class <>c
		{
			[Token(Token = "0x4001049")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400104A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static GameVoidAction<object> <>9__4_0;

			[Token(Token = "0x400104B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static GameVoidAction<object> <>9__4_1;

			[Token(Token = "0x6002DA1")]
			[Address(RVA = "0xCC61C0", Offset = "0xCC61C0", VA = "0xCC61C0")]
			public <>c()
			{
			}

			[Token(Token = "0x6002DA2")]
			[Address(RVA = "0xCC61C8", Offset = "0xCC61C8", VA = "0xCC61C8")]
			internal void <OnDownload>b__4_0(object o)
			{
			}

			[Token(Token = "0x6002DA3")]
			[Address(RVA = "0xCC61CC", Offset = "0xCC61CC", VA = "0xCC61CC")]
			internal void <OnDownload>b__4_1(object o)
			{
			}
		}

		[Token(Token = "0x4000A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int interval;

		[Token(Token = "0x4000A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool IsAutoStart;

		[Token(Token = "0x4000A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string view;

		[Token(Token = "0x6001F4C")]
		[Address(RVA = "0xCC5C90", Offset = "0xCC5C90", VA = "0xCC5C90")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001F4D")]
		[Address(RVA = "0xCC5E74", Offset = "0xCC5E74", VA = "0xCC5E74")]
		private void OnDownload(object data)
		{
		}

		[Token(Token = "0x6001F4E")]
		[Address(RVA = "0xCC6008", Offset = "0xCC6008", VA = "0xCC6008")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F4F")]
		[Address(RVA = "0xCC60FC", Offset = "0xCC60FC", VA = "0xCC60FC")]
		public GUIProfiler()
		{
		}
	}
	[Token(Token = "0x2000247")]
	public class DelResModel__HAIBAO__SWORD__
	{
		[Token(Token = "0x4000A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<string, bool> mFolderDeleteDic;

		[Token(Token = "0x4000A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<string, bool> mHasResourceDic;

		[Token(Token = "0x4000A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool isLoaded;

		[Token(Token = "0x4000A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<string> AssetBundleRecord;

		[Token(Token = "0x4000A25")]
		private const string AssetBundleRecordPath = "Assets/Other/assetbundleRecord.txt";

		[Token(Token = "0x6001F50")]
		[Address(RVA = "0xCC3804", Offset = "0xCC3804", VA = "0xCC3804")]
		public void Load()
		{
		}

		[Token(Token = "0x6001F51")]
		[Address(RVA = "0xCC3A2C", Offset = "0xCC3A2C", VA = "0xCC3A2C")]
		public void GenEditor(List<string> genPaths, List<string> hasPaths)
		{
		}

		[Token(Token = "0x6001F52")]
		[Address(RVA = "0xCC3910", Offset = "0xCC3910", VA = "0xCC3910")]
		private void SerializeGenPath(string text, Dictionary<string, bool> temps)
		{
		}

		[Token(Token = "0x6001F53")]
		[Address(RVA = "0xCC3DF4", Offset = "0xCC3DF4", VA = "0xCC3DF4")]
		public bool IsDelete(string path)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F54")]
		[Address(RVA = "0xCC3E3C", Offset = "0xCC3E3C", VA = "0xCC3E3C")]
		public bool IsHas(string path)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F55")]
		[Address(RVA = "0xCC3F08", Offset = "0xCC3F08", VA = "0xCC3F08")]
		public Queue<string> GetDeleteList(int count)
		{
			return null;
		}

		[Token(Token = "0x6001F56")]
		[Address(RVA = "0xCC4160", Offset = "0xCC4160", VA = "0xCC4160")]
		public static void AddAssetBundleRecord(string abPath)
		{
		}

		[Token(Token = "0x6001F57")]
		[Address(RVA = "0xCC4164", Offset = "0xCC4164", VA = "0xCC4164")]
		public static void SendResPathToHttp(string path)
		{
		}

		[Token(Token = "0x6001F58")]
		[Address(RVA = "0xCC4168", Offset = "0xCC4168", VA = "0xCC4168")]
		public static void AddAssetBundleRecordByResourcePath(string resPath)
		{
		}

		[Token(Token = "0x6001F59")]
		[Address(RVA = "0xCC416C", Offset = "0xCC416C", VA = "0xCC416C")]
		public static void SaveAssetBundleRecord()
		{
		}

		[Token(Token = "0x6001F5A")]
		[Address(RVA = "0xCC4170", Offset = "0xCC4170", VA = "0xCC4170")]
		public static List<string> LoadAssetBundleRecord()
		{
			return null;
		}

		[Token(Token = "0x6001F5B")]
		[Address(RVA = "0xCC43CC", Offset = "0xCC43CC", VA = "0xCC43CC")]
		public static bool IsContainRecord(string path)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F5C")]
		[Address(RVA = "0xCC4518", Offset = "0xCC4518", VA = "0xCC4518")]
		public DelResModel__HAIBAO__SWORD__()
		{
		}
	}
	[Token(Token = "0x2000248")]
	public class ManifestInfo__HAIBAO__SWORD__
	{
		[Token(Token = "0x4000A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int size;

		[Token(Token = "0x4000A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string md5;

		[Token(Token = "0x6001F5D")]
		[Address(RVA = "0xBD4C54", Offset = "0xBD4C54", VA = "0xBD4C54")]
		public ManifestInfo__HAIBAO__SWORD__()
		{
		}
	}
	[Token(Token = "0x2000249")]
	public class ManifestModel__HAIBAO__SWORD__ : QSingleton<ManifestModel__HAIBAO__SWORD__>
	{
		[Token(Token = "0x4000A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<string, ManifestInfo__HAIBAO__SWORD__> mLocalMd5Data;

		[Token(Token = "0x4000A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<string, ManifestInfo__HAIBAO__SWORD__> mRemoteMd5Data;

		[Token(Token = "0x4000A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string LocalMD5;

		[Token(Token = "0x4000A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string RemoteMd5;

		[Token(Token = "0x4000A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string mRemoteText;

		[Token(Token = "0x4000A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<string> mNeedList;

		[Token(Token = "0x4000A2E")]
		public const string Md5Key = "md5";

		[Token(Token = "0x4000A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int mNeedSize;

		[Token(Token = "0x4000A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static DelResModel__HAIBAO__SWORD__ DelResModel__HAIBAO__SWORD__;

		[Token(Token = "0x6001F5E")]
		[Address(RVA = "0xBD4C5C", Offset = "0xBD4C5C", VA = "0xBD4C5C")]
		public ManifestModel__HAIBAO__SWORD__()
		{
		}

		[Token(Token = "0x6001F5F")]
		[Address(RVA = "0xBD4CF4", Offset = "0xBD4CF4", VA = "0xBD4CF4")]
		public bool IsSamveManifestMD5()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F60")]
		[Address(RVA = "0xBD4D18", Offset = "0xBD4D18", VA = "0xBD4D18")]
		public bool LoadLocal(string text)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F61")]
		[Address(RVA = "0xBD5094", Offset = "0xBD5094", VA = "0xBD5094")]
		public string GetTotalSizeStr()
		{
			return null;
		}

		[Token(Token = "0x6001F62")]
		[Address(RVA = "0xBD5134", Offset = "0xBD5134", VA = "0xBD5134")]
		public int GetTotalSize()
		{
			return default(int);
		}

		[Token(Token = "0x6001F63")]
		[Address(RVA = "0xBD4DD8", Offset = "0xBD4DD8", VA = "0xBD4DD8")]
		private bool Fill(string text, string key, ref Dictionary<string, ManifestInfo__HAIBAO__SWORD__> dic)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F64")]
		[Address(RVA = "0xBD513C", Offset = "0xBD513C", VA = "0xBD513C")]
		public bool LoadRemote(string text)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F65")]
		[Address(RVA = "0xBD5194", Offset = "0xBD5194", VA = "0xBD5194")]
		public Dictionary<string, ManifestInfo__HAIBAO__SWORD__> GetLocalData()
		{
			return null;
		}

		[Token(Token = "0x6001F66")]
		[Address(RVA = "0xBD519C", Offset = "0xBD519C", VA = "0xBD519C")]
		public ManifestInfo__HAIBAO__SWORD__ GetManifestInfoByRemote(string key)
		{
			return null;
		}

		[Token(Token = "0x6001F67")]
		[Address(RVA = "0xBD5230", Offset = "0xBD5230", VA = "0xBD5230")]
		private ManifestInfo__HAIBAO__SWORD__ GetManifestInfoByLocal(string key)
		{
			return null;
		}

		[Token(Token = "0x6001F68")]
		[Address(RVA = "0xBD52C4", Offset = "0xBD52C4", VA = "0xBD52C4")]
		public int GetSize(string path)
		{
			return default(int);
		}

		[Token(Token = "0x6001F69")]
		[Address(RVA = "0xBD5308", Offset = "0xBD5308", VA = "0xBD5308")]
		public bool AddInfoToLocal(string key, ManifestInfo__HAIBAO__SWORD__ info)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F6A")]
		[Address(RVA = "0xBD5388", Offset = "0xBD5388", VA = "0xBD5388")]
		public string GetMDByLocal(string key)
		{
			return null;
		}

		[Token(Token = "0x6001F6B")]
		[Address(RVA = "0xBD5400", Offset = "0xBD5400", VA = "0xBD5400")]
		public string GetMDByRemote(string key)
		{
			return null;
		}

		[Token(Token = "0x6001F6C")]
		[Address(RVA = "0xBD5478", Offset = "0xBD5478", VA = "0xBD5478")]
		public string GetMD5(string key)
		{
			return null;
		}

		[Token(Token = "0x6001F6D")]
		[Address(RVA = "0xBD54D0", Offset = "0xBD54D0", VA = "0xBD54D0")]
		public void Diff()
		{
		}

		[Token(Token = "0x6001F6E")]
		[Address(RVA = "0xBD5738", Offset = "0xBD5738", VA = "0xBD5738")]
		public void AddDownloadFile(string key)
		{
		}

		[Token(Token = "0x6001F6F")]
		[Address(RVA = "0xBD5A00", Offset = "0xBD5A00", VA = "0xBD5A00")]
		public bool IsDownloadFile(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F70")]
		[Address(RVA = "0xBD5A4C", Offset = "0xBD5A4C", VA = "0xBD5A4C")]
		public List<string> GetDownloadList()
		{
			return null;
		}

		[Token(Token = "0x6001F71")]
		[Address(RVA = "0xBD5A54", Offset = "0xBD5A54", VA = "0xBD5A54")]
		public void UpdateMD5(string key, string md5)
		{
		}

		[Token(Token = "0x6001F72")]
		[Address(RVA = "0xBD58A4", Offset = "0xBD58A4", VA = "0xBD58A4")]
		public void UpdateDownloadLocalManifest()
		{
		}

		[Token(Token = "0x6001F73")]
		[Address(RVA = "0xBD5DE4", Offset = "0xBD5DE4", VA = "0xBD5DE4")]
		public bool IsZiped()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F74")]
		[Address(RVA = "0xBD5EBC", Offset = "0xBD5EBC", VA = "0xBD5EBC")]
		public static string GetAssetBundleFile(string path)
		{
			return null;
		}

		[Token(Token = "0x6001F75")]
		[Address(RVA = "0xBD608C", Offset = "0xBD608C", VA = "0xBD608C")]
		public static bool IsLocalFile(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F76")]
		[Address(RVA = "0xBD6100", Offset = "0xBD6100", VA = "0xBD6100")]
		public static string GetABPath(string name)
		{
			return null;
		}

		[Token(Token = "0x6001F77")]
		[Address(RVA = "0xBD61B8", Offset = "0xBD61B8", VA = "0xBD61B8")]
		public static bool IsDelete(string path)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F78")]
		[Address(RVA = "0xBD5BD0", Offset = "0xBD5BD0", VA = "0xBD5BD0")]
		private string Serialize()
		{
			return null;
		}
	}
	[Token(Token = "0x200024A")]
	public class TaskDiffManifest__HAIBAO__SWORD__ : TaskBase
	{
		[Token(Token = "0x20003F6")]
		public enum State
		{
			[Token(Token = "0x400104D")]
			RemoteMD5,
			[Token(Token = "0x400104E")]
			Remote,
			[Token(Token = "0x400104F")]
			Diff,
			[Token(Token = "0x4001050")]
			Download,
			[Token(Token = "0x4001051")]
			UpdateManifest,
			[Token(Token = "0x4001052")]
			Wait,
			[Token(Token = "0x4001053")]
			Finish,
			[Token(Token = "0x4001054")]
			CheckLuaBundle
		}

		[Token(Token = "0x20003F7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9403E0", Offset = "0x9403E0")]
		private sealed class <Download>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001055")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001056")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001057")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TaskDiffManifest__HAIBAO__SWORD__ <>4__this;

			[Token(Token = "0x1700021F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002DA7")]
				[Address(RVA = "0xBE1A04", Offset = "0xBE1A04", VA = "0xBE1A04", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000220")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002DA9")]
				[Address(RVA = "0xBE1A6C", Offset = "0xBE1A6C", VA = "0xBE1A6C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002DA4")]
			[Address(RVA = "0xBE09D4", Offset = "0xBE09D4", VA = "0xBE09D4")]
			[DebuggerHidden]
			public <Download>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6002DA5")]
			[Address(RVA = "0xBE1420", Offset = "0xBE1420", VA = "0xBE1420", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002DA6")]
			[Address(RVA = "0xBE1424", Offset = "0xBE1424", VA = "0xBE1424", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002DA8")]
			[Address(RVA = "0xBE1A0C", Offset = "0xBE1A0C", VA = "0xBE1A0C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private int DownloadCountPerFrame;

		[Token(Token = "0x4000A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private State state;

		[Token(Token = "0x4000A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Queue<string> mDownloadList;

		[Token(Token = "0x4000A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int downloadCount;

		[Token(Token = "0x4000A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<string, bool> needdDwnloadDic;

		[Token(Token = "0x6001F7A")]
		[Address(RVA = "0xBDF958", Offset = "0xBDF958", VA = "0xBDF958", Slot = "4")]
		public override bool Run()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F7B")]
		[Address(RVA = "0xBDFF7C", Offset = "0xBDFF7C", VA = "0xBDFF7C")]
		private void Remote()
		{
		}

		[Token(Token = "0x6001F7C")]
		[Address(RVA = "0xBDFEB4", Offset = "0xBDFEB4", VA = "0xBDFEB4")]
		private void RemoteMD5()
		{
		}

		[Token(Token = "0x6001F7D")]
		[Address(RVA = "0xBE0044", Offset = "0xBE0044", VA = "0xBE0044")]
		private void CheckLuaBundle()
		{
		}

		[Token(Token = "0x6001F7E")]
		[Address(RVA = "0xBE05F4", Offset = "0xBE05F4", VA = "0xBE05F4")]
		private void OnRequestFinishedMd5(int httpState, string data)
		{
		}

		[Token(Token = "0x6001F7F")]
		[Address(RVA = "0xBE07EC", Offset = "0xBE07EC", VA = "0xBE07EC")]
		private void Error(State gotoState, string error)
		{
		}

		[Token(Token = "0x6001F80")]
		[Address(RVA = "0xBE085C", Offset = "0xBE085C", VA = "0xBE085C")]
		private void OnRequestFinished(int httpState, byte[] data)
		{
		}

		[Token(Token = "0x6001F81")]
		[Address(RVA = "0xBE01E8", Offset = "0xBE01E8", VA = "0xBE01E8")]
		private void Diff()
		{
		}

		[Token(Token = "0x6001F82")]
		[Address(RVA = "0xBE0584", Offset = "0xBE0584", VA = "0xBE0584")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A77E4", Offset = "0x9A77E4")]
		private IEnumerator Download()
		{
			return null;
		}

		[Token(Token = "0x6001F83")]
		[Address(RVA = "0xBE0A00", Offset = "0xBE0A00", VA = "0xBE0A00")]
		private void DownloadFinish(string url, string error, string localPath, string abName)
		{
		}

		[Token(Token = "0x6001F84")]
		[Address(RVA = "0xBE10F0", Offset = "0xBE10F0", VA = "0xBE10F0")]
		private void _setDownloadInfo()
		{
		}

		[Token(Token = "0x6001F85")]
		[Address(RVA = "0xBE12F4", Offset = "0xBE12F4", VA = "0xBE12F4", Slot = "5")]
		protected override void OnStart()
		{
		}

		[Token(Token = "0x6001F86")]
		[Address(RVA = "0xBE1354", Offset = "0xBE1354", VA = "0xBE1354", Slot = "6")]
		protected override void OnEnd()
		{
		}

		[Token(Token = "0x6001F87")]
		[Address(RVA = "0xBE13B4", Offset = "0xBE13B4", VA = "0xBE13B4", Slot = "7")]
		protected override bool IsWait()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F88")]
		[Address(RVA = "0xBDEB3C", Offset = "0xBDEB3C", VA = "0xBDEB3C")]
		public TaskDiffManifest__HAIBAO__SWORD__()
		{
		}

		[Token(Token = "0x6001F89")]
		[Address(RVA = "0xBE1414", Offset = "0xBE1414", VA = "0xBE1414")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7848", Offset = "0x9A7848")]
		private void <Diff>b__10_0()
		{
		}
	}
	[Token(Token = "0x200024B")]
	internal class TaskLoadManifest__HAIBAO__SWORD__ : TaskBase
	{
		[Token(Token = "0x20003F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9403F0", Offset = "0x9403F0")]
		private sealed class <LoadManifestName>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001058")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001059")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400105A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TaskLoadManifest__HAIBAO__SWORD__ <>4__this;

			[Token(Token = "0x400105B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private string <path>5__2;

			[Token(Token = "0x400105C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private WWW <www>5__3;

			[Token(Token = "0x17000221")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002DAE")]
				[Address(RVA = "0xBE2AE0", Offset = "0xBE2AE0", VA = "0xBE2AE0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000222")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002DB0")]
				[Address(RVA = "0xBE2B48", Offset = "0xBE2B48", VA = "0xBE2B48", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002DAA")]
			[Address(RVA = "0xBE1D8C", Offset = "0xBE1D8C", VA = "0xBE1D8C")]
			[DebuggerHidden]
			public <LoadManifestName>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x6002DAB")]
			[Address(RVA = "0xBE2558", Offset = "0xBE2558", VA = "0xBE2558", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002DAC")]
			[Address(RVA = "0xBE2634", Offset = "0xBE2634", VA = "0xBE2634", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002DAD")]
			[Address(RVA = "0xBE2574", Offset = "0xBE2574", VA = "0xBE2574")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002DAF")]
			[Address(RVA = "0xBE2AE8", Offset = "0xBE2AE8", VA = "0xBE2AE8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003F9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940400", Offset = "0x940400")]
		private sealed class <LoadManifestNameMD5>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400105D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400105E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400105F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TaskLoadManifest__HAIBAO__SWORD__ <>4__this;

			[Token(Token = "0x4001060")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private string <path>5__2;

			[Token(Token = "0x4001061")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private WWW <www>5__3;

			[Token(Token = "0x17000223")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002DB5")]
				[Address(RVA = "0xBE3024", Offset = "0xBE3024", VA = "0xBE3024", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000224")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002DB7")]
				[Address(RVA = "0xBE308C", Offset = "0xBE308C", VA = "0xBE308C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002DB1")]
			[Address(RVA = "0xBE1FD0", Offset = "0xBE1FD0", VA = "0xBE1FD0")]
			[DebuggerHidden]
			public <LoadManifestNameMD5>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6002DB2")]
			[Address(RVA = "0xBE2B50", Offset = "0xBE2B50", VA = "0xBE2B50", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002DB3")]
			[Address(RVA = "0xBE2C2C", Offset = "0xBE2C2C", VA = "0xBE2C2C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002DB4")]
			[Address(RVA = "0xBE2B6C", Offset = "0xBE2B6C", VA = "0xBE2B6C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002DB6")]
			[Address(RVA = "0xBE302C", Offset = "0xBE302C", VA = "0xBE302C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003FA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940410", Offset = "0x940410")]
		private sealed class <Load>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001062")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001063")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001064")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TaskLoadManifest__HAIBAO__SWORD__ <>4__this;

			[Token(Token = "0x17000225")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002DBB")]
				[Address(RVA = "0xBE24E8", Offset = "0xBE24E8", VA = "0xBE24E8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000226")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002DBD")]
				[Address(RVA = "0xBE2550", Offset = "0xBE2550", VA = "0xBE2550", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002DB8")]
			[Address(RVA = "0xBE2298", Offset = "0xBE2298", VA = "0xBE2298")]
			[DebuggerHidden]
			public <Load>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6002DB9")]
			[Address(RVA = "0xBE23EC", Offset = "0xBE23EC", VA = "0xBE23EC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002DBA")]
			[Address(RVA = "0xBE23F0", Offset = "0xBE23F0", VA = "0xBE23F0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002DBC")]
			[Address(RVA = "0xBE24F0", Offset = "0xBE24F0", VA = "0xBE24F0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool Wait;

		[Token(Token = "0x6001F8A")]
		[Address(RVA = "0xBE1D1C", Offset = "0xBE1D1C", VA = "0xBE1D1C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A7858", Offset = "0x9A7858")]
		private IEnumerator LoadManifestName()
		{
			return null;
		}

		[Token(Token = "0x6001F8B")]
		[Address(RVA = "0xBE1DB8", Offset = "0xBE1DB8", VA = "0xBE1DB8")]
		private bool LoadLocalManifest()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F8C")]
		[Address(RVA = "0xBE1F60", Offset = "0xBE1F60", VA = "0xBE1F60")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A78BC", Offset = "0x9A78BC")]
		private IEnumerator LoadManifestNameMD5()
		{
			return null;
		}

		[Token(Token = "0x6001F8D")]
		[Address(RVA = "0xBE1FFC", Offset = "0xBE1FFC", VA = "0xBE1FFC")]
		private bool LoadLocalManifestMD5()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F8E")]
		[Address(RVA = "0xBE2228", Offset = "0xBE2228", VA = "0xBE2228")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A7920", Offset = "0x9A7920")]
		private IEnumerator Load()
		{
			return null;
		}

		[Token(Token = "0x6001F8F")]
		[Address(RVA = "0xBE22C4", Offset = "0xBE22C4", VA = "0xBE22C4", Slot = "5")]
		protected override void OnStart()
		{
		}

		[Token(Token = "0x6001F90")]
		[Address(RVA = "0xBE2334", Offset = "0xBE2334", VA = "0xBE2334", Slot = "6")]
		protected override void OnEnd()
		{
		}

		[Token(Token = "0x6001F91")]
		[Address(RVA = "0xBE23E4", Offset = "0xBE23E4", VA = "0xBE23E4", Slot = "7")]
		protected override bool IsWait()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F92")]
		[Address(RVA = "0xBDEB2C", Offset = "0xBDEB2C", VA = "0xBDEB2C")]
		public TaskLoadManifest__HAIBAO__SWORD__()
		{
		}
	}
	[Token(Token = "0x200024C")]
	internal class TaskPackage__HAIBAO__SWORD__ : TaskBase
	{
		[Token(Token = "0x20003FB")]
		public enum State
		{
			[Token(Token = "0x4001066")]
			Start,
			[Token(Token = "0x4001067")]
			Requst,
			[Token(Token = "0x4001068")]
			CheckChannel,
			[Token(Token = "0x4001069")]
			Wait,
			[Token(Token = "0x400106A")]
			Error
		}

		[Token(Token = "0x4000A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool isBreak;

		[Token(Token = "0x4000A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int error;

		[Token(Token = "0x4000A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private new State mState;

		[Token(Token = "0x4000A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private DateTime StartTime;

		[Token(Token = "0x4000A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<string, object> mDic;

		[Token(Token = "0x4000A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static bool mIsDebug;

		[Token(Token = "0x170000FB")]
		public static bool IsTestBattle
		{
			[Token(Token = "0x6001F9B")]
			[Address(RVA = "0xBE61F4", Offset = "0xBE61F4", VA = "0xBE61F4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000FC")]
		public static bool IsTestUpdate
		{
			[Token(Token = "0x6001F9C")]
			[Address(RVA = "0xBE5D5C", Offset = "0xBE5D5C", VA = "0xBE5D5C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000FD")]
		public static bool IsDebug
		{
			[Token(Token = "0x6001F9D")]
			[Address(RVA = "0xBE62D4", Offset = "0xBE62D4", VA = "0xBE62D4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000FE")]
		public static bool IsPurchase
		{
			[Token(Token = "0x6001F9E")]
			[Address(RVA = "0xBE633C", Offset = "0xBE633C", VA = "0xBE633C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000FF")]
		public static bool IsBattleScene
		{
			[Token(Token = "0x6001F9F")]
			[Address(RVA = "0xBE57D4", Offset = "0xBE57D4", VA = "0xBE57D4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000100")]
		public static bool IsResourceUpdate
		{
			[Token(Token = "0x6001FA0")]
			[Address(RVA = "0xBE58B0", Offset = "0xBE58B0", VA = "0xBE58B0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000101")]
		public static bool IsAntiAddiction
		{
			[Token(Token = "0x6001FA1")]
			[Address(RVA = "0xBE6418", Offset = "0xBE6418", VA = "0xBE6418")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000102")]
		public static bool IsNeedFPS
		{
			[Token(Token = "0x6001FA2")]
			[Address(RVA = "0xBE64FC", Offset = "0xBE64FC", VA = "0xBE64FC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000103")]
		public static bool IsShowBattleText
		{
			[Token(Token = "0x6001FA3")]
			[Address(RVA = "0xBE5F48", Offset = "0xBE5F48", VA = "0xBE5F48")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000104")]
		public static bool IsShowBattleBlood
		{
			[Token(Token = "0x6001FA4")]
			[Address(RVA = "0xBE602C", Offset = "0xBE602C", VA = "0xBE602C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000105")]
		public static bool IsShowBattleEffect
		{
			[Token(Token = "0x6001FA5")]
			[Address(RVA = "0xBE6110", Offset = "0xBE6110", VA = "0xBE6110")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000106")]
		public static bool IsIOSVerify
		{
			[Token(Token = "0x6001FA6")]
			[Address(RVA = "0xBE65E0", Offset = "0xBE65E0", VA = "0xBE65E0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000107")]
		public static string Zone
		{
			[Token(Token = "0x6001FA8")]
			[Address(RVA = "0xBE56E4", Offset = "0xBE56E4", VA = "0xBE56E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000108")]
		public static string IP
		{
			[Token(Token = "0x6001FA9")]
			[Address(RVA = "0xBE5A9C", Offset = "0xBE5A9C", VA = "0xBE5A9C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000109")]
		public static string ShareUrl
		{
			[Token(Token = "0x6001FAA")]
			[Address(RVA = "0xBE5C6C", Offset = "0xBE5C6C", VA = "0xBE5C6C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010A")]
		public static int Port
		{
			[Token(Token = "0x6001FAB")]
			[Address(RVA = "0xBE5B8C", Offset = "0xBE5B8C", VA = "0xBE5B8C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001F93")]
		[Address(RVA = "0xBE3D20", Offset = "0xBE3D20", VA = "0xBE3D20", Slot = "5")]
		protected override void OnStart()
		{
		}

		[Token(Token = "0x6001F94")]
		[Address(RVA = "0xBE3D80", Offset = "0xBE3D80", VA = "0xBE3D80", Slot = "6")]
		protected override void OnEnd()
		{
		}

		[Token(Token = "0x6001F95")]
		[Address(RVA = "0xBE3DE0", Offset = "0xBE3DE0", VA = "0xBE3DE0", Slot = "7")]
		protected override bool IsWait()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F96")]
		[Address(RVA = "0xBE3E40", Offset = "0xBE3E40", VA = "0xBE3E40", Slot = "4")]
		public override bool Run()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F97")]
		[Address(RVA = "0xBE40C8", Offset = "0xBE40C8", VA = "0xBE40C8")]
		public bool IsNeedWaitChannel()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F98")]
		[Address(RVA = "0xBE4148", Offset = "0xBE4148", VA = "0xBE4148")]
		private void RequestVersion()
		{
		}

		[Token(Token = "0x6001F99")]
		[Address(RVA = "0xBE4488", Offset = "0xBE4488", VA = "0xBE4488")]
		private void OnRequestFinished(int state, string data)
		{
		}

		[Token(Token = "0x6001F9A")]
		[Address(RVA = "0xBE441C", Offset = "0xBE441C", VA = "0xBE441C")]
		private void Error()
		{
		}

		[Token(Token = "0x6001FA7")]
		[Address(RVA = "0xBD9E14", Offset = "0xBD9E14", VA = "0xBD9E14")]
		public static bool IsHasTrue(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FAC")]
		[Address(RVA = "0xBE5E3C", Offset = "0xBE5E3C", VA = "0xBE5E3C")]
		public static string GetValueStr(string key)
		{
			return null;
		}

		[Token(Token = "0x6001FAD")]
		[Address(RVA = "0xBE5994", Offset = "0xBE5994", VA = "0xBE5994")]
		public static bool GetBoolStr(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FAE")]
		[Address(RVA = "0xBD62B8", Offset = "0xBD62B8", VA = "0xBD62B8")]
		public static int GetValuInt(string key, int defaultV = 0)
		{
			return default(int);
		}

		[Token(Token = "0x6001FAF")]
		[Address(RVA = "0xBDEB1C", Offset = "0xBDEB1C", VA = "0xBDEB1C")]
		public TaskPackage__HAIBAO__SWORD__()
		{
		}
	}
	[Token(Token = "0x200024D")]
	public enum eStartMode
	{
		[Token(Token = "0x4000A3E")]
		pico = 0,
		[Token(Token = "0x4000A3F")]
		quest2 = 1,
		[Token(Token = "0x4000A40")]
		phone = 2,
		[Token(Token = "0x4000A41")]
		picoXR = 3,
		[Token(Token = "0x4000A42")]
		uiEditor = 5,
		[Token(Token = "0x4000A43")]
		videoEditor = 6
	}
	[Token(Token = "0x200024E")]
	public class Starter : SingletonMonoBehaviour<Starter>
	{
		[Token(Token = "0x20003FC")]
		public enum eStarterTag
		{
			[Token(Token = "0x400106C")]
			Normal = 0,
			[Token(Token = "0x400106D")]
			PVPBattleEditor = 3,
			[Token(Token = "0x400106E")]
			PVEHeroEditor = 4
		}

		[Token(Token = "0x20003FD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940420", Offset = "0x940420")]
		private sealed class <Start>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400106F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001070")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001071")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Starter <>4__this;

			[Token(Token = "0x17000227")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002DC1")]
				[Address(RVA = "0xBDEBD4", Offset = "0xBDEBD4", VA = "0xBDEBD4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000228")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002DC3")]
				[Address(RVA = "0xBDEC3C", Offset = "0xBDEC3C", VA = "0xBDEC3C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002DBE")]
			[Address(RVA = "0xBDC45C", Offset = "0xBDC45C", VA = "0xBDC45C")]
			[DebuggerHidden]
			public <Start>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6002DBF")]
			[Address(RVA = "0xBDE0F0", Offset = "0xBDE0F0", VA = "0xBDE0F0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002DC0")]
			[Address(RVA = "0xBDE0F4", Offset = "0xBDE0F4", VA = "0xBDE0F4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002DC2")]
			[Address(RVA = "0xBDEBDC", Offset = "0xBDEBDC", VA = "0xBDEBDC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public eStartMode StartMode;

		[Token(Token = "0x4000A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool IsPause;

		[Token(Token = "0x4000A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public eStarterTag Tag;

		[Token(Token = "0x4000A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int DesignWidth;

		[Token(Token = "0x4000A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int DesignHeight;

		[Token(Token = "0x4000A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int FRAME_PER_SECOND;

		[Token(Token = "0x4000A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public LuaFunction LuaUpdate;

		[Token(Token = "0x4000A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool mIsRunning;

		[Token(Token = "0x4000A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private CompNetwork__HAIBAO__SWORD__ network;

		[Token(Token = "0x4000A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int scaleWidth;

		[Token(Token = "0x4000A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int scaleHeight;

		[Token(Token = "0x4000A4F")]
		private const int GCFrame = 54000;

		[Token(Token = "0x4000A50")]
		private const int PooGCFrame = 9000;

		[Token(Token = "0x4000A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private DateTime mLast;

		[Token(Token = "0x6001FB1")]
		[Address(RVA = "0xBDC39C", Offset = "0xBDC39C", VA = "0xBDC39C", Slot = "5")]
		protected override void InitMono()
		{
		}

		[Token(Token = "0x6001FB2")]
		[Address(RVA = "0xBDC3EC", Offset = "0xBDC3EC", VA = "0xBDC3EC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A7984", Offset = "0x9A7984")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6001FB3")]
		[Address(RVA = "0xBDC488", Offset = "0xBDC488", VA = "0xBDC488")]
		public void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001FB4")]
		[Address(RVA = "0xBDC75C", Offset = "0xBDC75C", VA = "0xBDC75C")]
		public void OnApplicationPause(bool paused)
		{
		}

		[Token(Token = "0x6001FB5")]
		[Address(RVA = "0xBDC908", Offset = "0xBDC908", VA = "0xBDC908")]
		private void _onAppPause(bool paused)
		{
		}

		[Token(Token = "0x6001FB6")]
		[Address(RVA = "0xBDCB3C", Offset = "0xBDCB3C", VA = "0xBDCB3C")]
		public void SetDesignContentScale()
		{
		}

		[Token(Token = "0x6001FB7")]
		[Address(RVA = "0xBDCEE0", Offset = "0xBDCEE0", VA = "0xBDCEE0")]
		private bool IsResetView()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FB8")]
		[Address(RVA = "0xBDCF4C", Offset = "0xBDCF4C", VA = "0xBDCF4C")]
		public void Update()
		{
		}

		[Token(Token = "0x6001FB9")]
		[Address(RVA = "0xBDDFE4", Offset = "0xBDDFE4", VA = "0xBDDFE4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001FBA")]
		[Address(RVA = "0xBDDFEC", Offset = "0xBDDFEC", VA = "0xBDDFEC")]
		public void SetGCTime(DateTime n)
		{
		}

		[Token(Token = "0x6001FBB")]
		[Address(RVA = "0xBDDFF4", Offset = "0xBDDFF4", VA = "0xBDDFF4")]
		public void CheckGC()
		{
		}

		[Token(Token = "0x6001FBC")]
		[Address(RVA = "0xBDE058", Offset = "0xBDE058", VA = "0xBDE058")]
		public void CheckGCByTime(int t)
		{
		}

		[Token(Token = "0x6001FBD")]
		[Address(RVA = "0xBD88F8", Offset = "0xBD88F8", VA = "0xBD88F8")]
		public Coroutine RunCoroutine(IEnumerator fun)
		{
			return null;
		}

		[Token(Token = "0x6001FBE")]
		[Address(RVA = "0xBDE05C", Offset = "0xBDE05C", VA = "0xBDE05C")]
		public Starter()
		{
		}
	}
	[Token(Token = "0x200024F")]
	internal class TaskLua__HAIBAO__SWORD__ : TaskBase
	{
		[Token(Token = "0x20003FE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940430", Offset = "0x940430")]
		private sealed class <Load>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001072")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001073")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x17000229")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002DC7")]
				[Address(RVA = "0xBE3CB0", Offset = "0xBE3CB0", VA = "0xBE3CB0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700022A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002DC9")]
				[Address(RVA = "0xBE3D18", Offset = "0xBE3D18", VA = "0xBE3D18", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002DC4")]
			[Address(RVA = "0xBE3594", Offset = "0xBE3594", VA = "0xBE3594")]
			[DebuggerHidden]
			public <Load>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6002DC5")]
			[Address(RVA = "0xBE3B70", Offset = "0xBE3B70", VA = "0xBE3B70", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002DC6")]
			[Address(RVA = "0xBE3B74", Offset = "0xBE3B74", VA = "0xBE3B74", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002DC8")]
			[Address(RVA = "0xBE3CB8", Offset = "0xBE3CB8", VA = "0xBE3CB8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Resource Res;

		[Token(Token = "0x4000A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static bool IsEnd;

		[Token(Token = "0x6001FC0")]
		[Address(RVA = "0xBE3534", Offset = "0xBE3534", VA = "0xBE3534")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A79E8", Offset = "0x9A79E8")]
		private IEnumerator Load()
		{
			return null;
		}

		[Token(Token = "0x6001FC1")]
		[Address(RVA = "0xBE35C0", Offset = "0xBE35C0", VA = "0xBE35C0")]
		private static byte[] LoadByte(string path)
		{
			return null;
		}

		[Token(Token = "0x6001FC2")]
		[Address(RVA = "0xBE36D4", Offset = "0xBE36D4", VA = "0xBE36D4", Slot = "5")]
		protected override void OnStart()
		{
		}

		[Token(Token = "0x6001FC3")]
		[Address(RVA = "0xBE3920", Offset = "0xBE3920", VA = "0xBE3920", Slot = "6")]
		protected override void OnEnd()
		{
		}

		[Token(Token = "0x6001FC4")]
		[Address(RVA = "0xBE3924", Offset = "0xBE3924", VA = "0xBE3924", Slot = "7")]
		protected override bool IsWait()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FC5")]
		[Address(RVA = "0xBDEBC4", Offset = "0xBDEBC4", VA = "0xBDEBC4")]
		public TaskLua__HAIBAO__SWORD__()
		{
		}

		[Token(Token = "0x6001FC7")]
		[Address(RVA = "0xBE3998", Offset = "0xBE3998", VA = "0xBE3998")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7A4C", Offset = "0x9A7A4C")]
		private void <OnStart>b__4_0(Resource res, object data)
		{
		}

		[Token(Token = "0x6001FC8")]
		[Address(RVA = "0xBE3A84", Offset = "0xBE3A84", VA = "0xBE3A84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7A5C", Offset = "0x9A7A5C")]
		private void <OnStart>b__4_1(Resource res, object data)
		{
		}
	}
	[Token(Token = "0x2000250")]
	internal class TaskLuaBind__HAIBAO__SWORD__ : TaskBase
	{
		[Token(Token = "0x20003FF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940440", Offset = "0x940440")]
		private sealed class <Load>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001074")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001075")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001076")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TaskLuaBind__HAIBAO__SWORD__ <>4__this;

			[Token(Token = "0x1700022B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002DCD")]
				[Address(RVA = "0xBE32C4", Offset = "0xBE32C4", VA = "0xBE32C4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700022C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002DCF")]
				[Address(RVA = "0xBE332C", Offset = "0xBE332C", VA = "0xBE332C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002DCA")]
			[Address(RVA = "0xBE3180", Offset = "0xBE3180", VA = "0xBE3180")]
			[DebuggerHidden]
			public <Load>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6002DCB")]
			[Address(RVA = "0xBE31AC", Offset = "0xBE31AC", VA = "0xBE31AC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002DCC")]
			[Address(RVA = "0xBE31B0", Offset = "0xBE31B0", VA = "0xBE31B0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002DCE")]
			[Address(RVA = "0xBE32CC", Offset = "0xBE32CC", VA = "0xBE32CC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool mIsWait;

		[Token(Token = "0x6001FC9")]
		[Address(RVA = "0xBE3094", Offset = "0xBE3094", VA = "0xBE3094", Slot = "7")]
		protected override bool IsWait()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FCA")]
		[Address(RVA = "0xBE309C", Offset = "0xBE309C", VA = "0xBE309C", Slot = "6")]
		protected override void OnEnd()
		{
		}

		[Token(Token = "0x6001FCB")]
		[Address(RVA = "0xBE30A0", Offset = "0xBE30A0", VA = "0xBE30A0", Slot = "5")]
		protected override void OnStart()
		{
		}

		[Token(Token = "0x6001FCC")]
		[Address(RVA = "0xBE3110", Offset = "0xBE3110", VA = "0xBE3110")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A7A6C", Offset = "0x9A7A6C")]
		private IEnumerator Load()
		{
			return null;
		}

		[Token(Token = "0x6001FCD")]
		[Address(RVA = "0xBDEBB4", Offset = "0xBDEBB4", VA = "0xBDEBB4")]
		public TaskLuaBind__HAIBAO__SWORD__()
		{
		}
	}
	[Token(Token = "0x2000251")]
	public class TaskLuaStarter__HAIBAO__SWORD__ : TaskBase
	{
		[Token(Token = "0x6001FCE")]
		[Address(RVA = "0xBE3334", Offset = "0xBE3334", VA = "0xBE3334", Slot = "7")]
		protected override bool IsWait()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FCF")]
		[Address(RVA = "0xBE333C", Offset = "0xBE333C", VA = "0xBE333C", Slot = "6")]
		protected override void OnEnd()
		{
		}

		[Token(Token = "0x6001FD0")]
		[Address(RVA = "0xBE3494", Offset = "0xBE3494", VA = "0xBE3494", Slot = "5")]
		protected override void OnStart()
		{
		}

		[Token(Token = "0x6001FD1")]
		[Address(RVA = "0xBDEBCC", Offset = "0xBDEBCC", VA = "0xBDEBCC")]
		public TaskLuaStarter__HAIBAO__SWORD__()
		{
		}
	}
	[Token(Token = "0x2000252")]
	public class TaskInit__HAIBAO__SWORD__ : TaskBase
	{
		[Token(Token = "0x2000400")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940450", Offset = "0x940450")]
		private sealed class <Init>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001077")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001078")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x1700022D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002DD3")]
				[Address(RVA = "0xBE1CAC", Offset = "0xBE1CAC", VA = "0xBE1CAC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700022E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002DD5")]
				[Address(RVA = "0xBE1D14", Offset = "0xBE1D14", VA = "0xBE1D14", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002DD0")]
			[Address(RVA = "0xBE1AD4", Offset = "0xBE1AD4", VA = "0xBE1AD4")]
			[DebuggerHidden]
			public <Init>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6002DD1")]
			[Address(RVA = "0xBE1BF4", Offset = "0xBE1BF4", VA = "0xBE1BF4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002DD2")]
			[Address(RVA = "0xBE1BF8", Offset = "0xBE1BF8", VA = "0xBE1BF8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002DD4")]
			[Address(RVA = "0xBE1CB4", Offset = "0xBE1CB4", VA = "0xBE1CB4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6001FD2")]
		[Address(RVA = "0xBE1A74", Offset = "0xBE1A74", VA = "0xBE1A74")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A7AD0", Offset = "0x9A7AD0")]
		public static IEnumerator Init()
		{
			return null;
		}

		[Token(Token = "0x6001FD3")]
		[Address(RVA = "0xBE1B00", Offset = "0xBE1B00", VA = "0xBE1B00")]
		public static Component Add(Type type)
		{
			return null;
		}

		[Token(Token = "0x6001FD4")]
		[Address(RVA = "0xBE1B80", Offset = "0xBE1B80", VA = "0xBE1B80", Slot = "5")]
		protected override void OnStart()
		{
		}

		[Token(Token = "0x6001FD5")]
		[Address(RVA = "0xBE1BE8", Offset = "0xBE1BE8", VA = "0xBE1BE8", Slot = "6")]
		protected override void OnEnd()
		{
		}

		[Token(Token = "0x6001FD6")]
		[Address(RVA = "0xBE1BEC", Offset = "0xBE1BEC", VA = "0xBE1BEC", Slot = "7")]
		protected override bool IsWait()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FD7")]
		[Address(RVA = "0xBDEB24", Offset = "0xBDEB24", VA = "0xBDEB24")]
		public TaskInit__HAIBAO__SWORD__()
		{
		}
	}
	[Token(Token = "0x2000253")]
	public class ComPlatform : SingletonMonoBehaviour<ComPlatform>, IPlatform__HAIBAO__SWORD__
	{
		[Token(Token = "0x4000A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private IPlatform__HAIBAO__SWORD__ mPlatform;

		[Token(Token = "0x1700010B")]
		private string Channel
		{
			[Token(Token = "0x6001FDB")]
			[Address(RVA = "0xCBB030", Offset = "0xCBB030", VA = "0xCBB030")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FD8")]
		[Address(RVA = "0xCBAED0", Offset = "0xCBAED0", VA = "0xCBAED0")]
		public ComPlatform()
		{
		}

		[Token(Token = "0x6001FD9")]
		[Address(RVA = "0xCBAF48", Offset = "0xCBAF48", VA = "0xCBAF48")]
		public void Init()
		{
		}

		[Token(Token = "0x6001FDA")]
		[Address(RVA = "0xCBB034", Offset = "0xCBB034", VA = "0xCBB034")]
		public bool IsHasChannel()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FDC")]
		[Address(RVA = "0xCBB198", Offset = "0xCBB198", VA = "0xCBB198", Slot = "7")]
		public void Install(string path)
		{
		}

		[Token(Token = "0x6001FDD")]
		[Address(RVA = "0xCBB258", Offset = "0xCBB258", VA = "0xCBB258", Slot = "8")]
		public void Restart(int miliSeconds)
		{
		}

		[Token(Token = "0x6001FDE")]
		[Address(RVA = "0xCBB31C", Offset = "0xCBB31C", VA = "0xCBB31C", Slot = "9")]
		public void Login(string data)
		{
		}

		[Token(Token = "0x6001FDF")]
		[Address(RVA = "0xCBB3E0", Offset = "0xCBB3E0", VA = "0xCBB3E0", Slot = "10")]
		public void LoginResult(string data)
		{
		}

		[Token(Token = "0x6001FE0")]
		[Address(RVA = "0xCBB4A4", Offset = "0xCBB4A4", VA = "0xCBB4A4", Slot = "23")]
		public void OnLogOut(string data)
		{
		}

		[Token(Token = "0x6001FE1")]
		[Address(RVA = "0xCBB568", Offset = "0xCBB568", VA = "0xCBB568", Slot = "11")]
		public void Pay(string data)
		{
		}

		[Token(Token = "0x6001FE2")]
		[Address(RVA = "0xCBB62C", Offset = "0xCBB62C", VA = "0xCBB62C", Slot = "12")]
		public void PayResult(string data)
		{
		}

		[Token(Token = "0x6001FE3")]
		[Address(RVA = "0xCBB6F0", Offset = "0xCBB6F0", VA = "0xCBB6F0", Slot = "13")]
		public void Logout(string data)
		{
		}

		[Token(Token = "0x6001FE4")]
		[Address(RVA = "0xCBB7B4", Offset = "0xCBB7B4", VA = "0xCBB7B4", Slot = "15")]
		public void Quit(string data)
		{
		}

		[Token(Token = "0x6001FE5")]
		[Address(RVA = "0xCBB878", Offset = "0xCBB878", VA = "0xCBB878", Slot = "16")]
		public void SendNotification(string title, string content, int time, bool isLoop, int id, int schedule = 86400)
		{
		}

		[Token(Token = "0x6001FE6")]
		[Address(RVA = "0xCBB974", Offset = "0xCBB974", VA = "0xCBB974", Slot = "17")]
		public void ClearNotification()
		{
		}

		[Token(Token = "0x6001FE7")]
		[Address(RVA = "0xCBBA28", Offset = "0xCBBA28", VA = "0xCBBA28", Slot = "18")]
		public int GetNetSpeed()
		{
			return default(int);
		}

		[Token(Token = "0x6001FE8")]
		[Address(RVA = "0xCBB0E4", Offset = "0xCBB0E4", VA = "0xCBB0E4", Slot = "19")]
		public string GetChannelId()
		{
			return null;
		}

		[Token(Token = "0x6001FE9")]
		[Address(RVA = "0xCBBADC", Offset = "0xCBBADC", VA = "0xCBBADC", Slot = "20")]
		public void SwitchAccount()
		{
		}

		[Token(Token = "0x6001FEA")]
		[Address(RVA = "0xCBBB90", Offset = "0xCBBB90", VA = "0xCBBB90", Slot = "21")]
		public void SubmitRoleData(string data)
		{
		}

		[Token(Token = "0x6001FEB")]
		[Address(RVA = "0xCBBC54", Offset = "0xCBBC54", VA = "0xCBBC54", Slot = "22")]
		public void ReportChat(string content, string type, string accountId, string accountName, int level, string serverId, string serverName)
		{
		}

		[Token(Token = "0x6001FEC")]
		[Address(RVA = "0xCBBD64", Offset = "0xCBBD64", VA = "0xCBBD64", Slot = "24")]
		public string GetGameName()
		{
			return null;
		}

		[Token(Token = "0x6001FED")]
		[Address(RVA = "0xCBBE18", Offset = "0xCBBE18", VA = "0xCBBE18")]
		public void GoUpdatePackage(string downloadUrl, string title, string updateTip)
		{
		}

		[Token(Token = "0x6001FEE")]
		[Address(RVA = "0xCBBF34", Offset = "0xCBBF34", VA = "0xCBBF34", Slot = "25")]
		public void JavaToUnity(string data)
		{
		}

		[Token(Token = "0x6001FEF")]
		[Address(RVA = "0xCBBFF8", Offset = "0xCBBFF8", VA = "0xCBBFF8", Slot = "26")]
		public int GetUseMemory()
		{
			return default(int);
		}

		[Token(Token = "0x6001FF0")]
		[Address(RVA = "0xCBC0AC", Offset = "0xCBC0AC", VA = "0xCBC0AC", Slot = "14")]
		public void CheckPay()
		{
		}

		[Token(Token = "0x6001FF1")]
		[Address(RVA = "0xCBC160", Offset = "0xCBC160", VA = "0xCBC160", Slot = "27")]
		public string GetBirthdayFromSDK()
		{
			return null;
		}

		[Token(Token = "0x6001FF2")]
		[Address(RVA = "0xCBC214", Offset = "0xCBC214", VA = "0xCBC214", Slot = "28")]
		public string GetSdkVersion()
		{
			return null;
		}

		[Token(Token = "0x6001FF3")]
		[Address(RVA = "0xCBC2C8", Offset = "0xCBC2C8", VA = "0xCBC2C8", Slot = "29")]
		public Rect GetSafeArea()
		{
			return default(Rect);
		}

		[Token(Token = "0x6001FF4")]
		[Address(RVA = "0xCBC37C", Offset = "0xCBC37C", VA = "0xCBC37C", Slot = "30")]
		public void OnSaveImageToAlbum(string fileName, LuaFunction callback)
		{
		}

		[Token(Token = "0x6001FF5")]
		[Address(RVA = "0xCBC448", Offset = "0xCBC448", VA = "0xCBC448", Slot = "31")]
		public void UnityToPlatform(string type, string data)
		{
		}

		[Token(Token = "0x6001FF6")]
		[Address(RVA = "0xCBC514", Offset = "0xCBC514", VA = "0xCBC514")]
		public static void SetIsUseAntiAddiction(int ret)
		{
		}

		[Token(Token = "0x6001FF7")]
		[Address(RVA = "0xCBC600", Offset = "0xCBC600", VA = "0xCBC600")]
		public static bool IsHasSDK()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FF8")]
		[Address(RVA = "0xCBC68C", Offset = "0xCBC68C", VA = "0xCBC68C", Slot = "32")]
		public void InitSDK()
		{
		}

		[Token(Token = "0x6001FF9")]
		[Address(RVA = "0xCBC748", Offset = "0xCBC748", VA = "0xCBC748", Slot = "33")]
		public void PlayMobAD()
		{
		}

		[Token(Token = "0x6001FFA")]
		[Address(RVA = "0xCBC7FC", Offset = "0xCBC7FC", VA = "0xCBC7FC", Slot = "34")]
		public void InitMobAD()
		{
		}
	}
	[Token(Token = "0x2000254")]
	internal class PlatformAndroid__HAIBAO__SWORD__ : PlatformNoSDK__HAIBAO__SWORD__, IPlatformUpdate
	{
		[Token(Token = "0x2000401")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940460", Offset = "0x940460")]
		private sealed class <CutImage>d__29 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001079")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400107A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400107B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string name;

			[Token(Token = "0x400107C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LuaFunction callback;

			[Token(Token = "0x400107D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Texture2D <tex>5__2;

			[Token(Token = "0x1700022F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002DD9")]
				[Address(RVA = "0xBD8F64", Offset = "0xBD8F64", VA = "0xBD8F64", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000230")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002DDB")]
				[Address(RVA = "0xBD8FCC", Offset = "0xBD8FCC", VA = "0xBD8FCC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002DD6")]
			[Address(RVA = "0xBD8908", Offset = "0xBD8908", VA = "0xBD8908")]
			[DebuggerHidden]
			public <CutImage>d__29(int <>1__state)
			{
			}

			[Token(Token = "0x6002DD7")]
			[Address(RVA = "0xBD8C94", Offset = "0xBD8C94", VA = "0xBD8C94", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002DD8")]
			[Address(RVA = "0xBD8C98", Offset = "0xBD8C98", VA = "0xBD8C98", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002DDA")]
			[Address(RVA = "0xBD8F6C", Offset = "0xBD8F6C", VA = "0xBD8F6C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private AndroidJavaObject jo;

		[Token(Token = "0x4000A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string serverId;

		[Token(Token = "0x4000A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string roleId;

		[Token(Token = "0x4000A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string amount;

		[Token(Token = "0x4000A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string productId;

		[Token(Token = "0x4000A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool isLoaded;

		[Token(Token = "0x6001FFB")]
		[Address(RVA = "0xBD8608", Offset = "0xBD8608", VA = "0xBD8608")]
		public PlatformAndroid__HAIBAO__SWORD__()
		{
		}

		[Token(Token = "0x6001FFC")]
		[Address(RVA = "0xBD868C", Offset = "0xBD868C", VA = "0xBD868C")]
		public void InitAndroidPlugins()
		{
		}

		[Token(Token = "0x6001FFD")]
		[Address(RVA = "0xBD8690", Offset = "0xBD8690", VA = "0xBD8690", Slot = "32")]
		public override void Install(string path)
		{
		}

		[Token(Token = "0x6001FFE")]
		[Address(RVA = "0xBD8694", Offset = "0xBD8694", VA = "0xBD8694", Slot = "33")]
		public override void Login(string data)
		{
		}

		[Token(Token = "0x6001FFF")]
		[Address(RVA = "0xBD8698", Offset = "0xBD8698", VA = "0xBD8698", Slot = "36")]
		public override void Logout(string data)
		{
		}

		[Token(Token = "0x6002000")]
		[Address(RVA = "0xBD869C", Offset = "0xBD869C", VA = "0xBD869C", Slot = "34")]
		public override void Pay(string data)
		{
		}

		[Token(Token = "0x6002001")]
		[Address(RVA = "0xBD86A0", Offset = "0xBD86A0", VA = "0xBD86A0", Slot = "50")]
		public override void CheckPay()
		{
		}

		[Token(Token = "0x6002002")]
		[Address(RVA = "0xBD86A4", Offset = "0xBD86A4", VA = "0xBD86A4", Slot = "35")]
		public override void PayResult(string data)
		{
		}

		[Token(Token = "0x6002003")]
		[Address(RVA = "0xBD86AC", Offset = "0xBD86AC", VA = "0xBD86AC", Slot = "37")]
		public override void Quit(string data)
		{
		}

		[Token(Token = "0x6002004")]
		[Address(RVA = "0xBD86B0", Offset = "0xBD86B0", VA = "0xBD86B0", Slot = "39")]
		public override void ClearNotification()
		{
		}

		[Token(Token = "0x6002005")]
		[Address(RVA = "0xBD86B4", Offset = "0xBD86B4", VA = "0xBD86B4", Slot = "38")]
		public override void SendNotification(string title, string content, int time, bool isLoop, int id, int schedule = 86400)
		{
		}

		[Token(Token = "0x6002006")]
		[Address(RVA = "0xBD86B8", Offset = "0xBD86B8", VA = "0xBD86B8", Slot = "40")]
		public override int GetNetSpeed()
		{
			return default(int);
		}

		[Token(Token = "0x6002007")]
		[Address(RVA = "0xBD86C0", Offset = "0xBD86C0", VA = "0xBD86C0", Slot = "41")]
		public override string GetChannelId()
		{
			return null;
		}

		[Token(Token = "0x6002008")]
		[Address(RVA = "0xBD8708", Offset = "0xBD8708", VA = "0xBD8708", Slot = "43")]
		public override void SwitchAccount()
		{
		}

		[Token(Token = "0x6002009")]
		[Address(RVA = "0xBD870C", Offset = "0xBD870C", VA = "0xBD870C", Slot = "44")]
		public override void SubmitRoleData(string data)
		{
		}

		[Token(Token = "0x600200A")]
		[Address(RVA = "0xBD8710", Offset = "0xBD8710", VA = "0xBD8710", Slot = "45")]
		public override void ReportChat(string content, string type, string accountId, string accountName, int level, string serverId, string serverName)
		{
		}

		[Token(Token = "0x600200B")]
		[Address(RVA = "0xBD8714", Offset = "0xBD8714", VA = "0xBD8714", Slot = "47")]
		public override string GetGameName()
		{
			return null;
		}

		[Token(Token = "0x600200C")]
		[Address(RVA = "0xBD875C", Offset = "0xBD875C", VA = "0xBD875C", Slot = "46")]
		public override void Restart(int miliSeconds)
		{
		}

		[Token(Token = "0x600200D")]
		[Address(RVA = "0xBD8760", Offset = "0xBD8760", VA = "0xBD8760", Slot = "58")]
		public void GoUpdatePackage(string downloadUrl, string title, string updateTip)
		{
		}

		[Token(Token = "0x600200E")]
		[Address(RVA = "0xBD8764", Offset = "0xBD8764", VA = "0xBD8764", Slot = "49")]
		public override int GetUseMemory()
		{
			return default(int);
		}

		[Token(Token = "0x600200F")]
		[Address(RVA = "0xBD876C", Offset = "0xBD876C", VA = "0xBD876C", Slot = "52")]
		public override string GetBirthdayFromSDK()
		{
			return null;
		}

		[Token(Token = "0x6002010")]
		[Address(RVA = "0xBD87B4", Offset = "0xBD87B4", VA = "0xBD87B4", Slot = "53")]
		public override string GetSdkVersion()
		{
			return null;
		}

		[Token(Token = "0x6002011")]
		[Address(RVA = "0xBD87FC", Offset = "0xBD87FC", VA = "0xBD87FC", Slot = "54")]
		public override void OnSaveImageToAlbum(string fileName, LuaFunction callback)
		{
		}

		[Token(Token = "0x6002012")]
		[Address(RVA = "0xBD8900", Offset = "0xBD8900", VA = "0xBD8900", Slot = "48")]
		protected override void CallUnityToPlatform(string json)
		{
		}

		[Token(Token = "0x6002013")]
		[Address(RVA = "0xBD887C", Offset = "0xBD887C", VA = "0xBD887C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A7B34", Offset = "0x9A7B34")]
		private static IEnumerator CutImage(string name, LuaFunction callback)
		{
			return null;
		}

		[Token(Token = "0x6002014")]
		[Address(RVA = "0xBD8934", Offset = "0xBD8934", VA = "0xBD8934")]
		private static void ScanFile(string[] path)
		{
		}

		[Token(Token = "0x6002015")]
		[Address(RVA = "0xBD8C74", Offset = "0xBD8C74", VA = "0xBD8C74", Slot = "51")]
		public override Rect GetSafeArea()
		{
			return default(Rect);
		}

		[Token(Token = "0x6002016")]
		[Address(RVA = "0xBD8C7C", Offset = "0xBD8C7C", VA = "0xBD8C7C", Slot = "55")]
		public override void InitSDK()
		{
		}

		[Token(Token = "0x6002017")]
		[Address(RVA = "0xBD8C84", Offset = "0xBD8C84", VA = "0xBD8C84", Slot = "56")]
		public override void PlayMobAD()
		{
		}

		[Token(Token = "0x6002018")]
		[Address(RVA = "0xBD8C8C", Offset = "0xBD8C8C", VA = "0xBD8C8C", Slot = "57")]
		public override void InitMobAD()
		{
		}
	}
	[Token(Token = "0x2000255")]
	public class CameraToRT : SingletonMonoBehaviour<CameraToRT>
	{
		[Token(Token = "0x4000A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private RenderTexture rt;

		[Token(Token = "0x4000A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Camera mCamera;

		[Token(Token = "0x4000A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private RawImage image;

		[Token(Token = "0x6002019")]
		[Address(RVA = "0xCBA3B4", Offset = "0xCBA3B4", VA = "0xCBA3B4", Slot = "5")]
		protected override void InitMono()
		{
		}

		[Token(Token = "0x600201A")]
		[Address(RVA = "0xCBA434", Offset = "0xCBA434", VA = "0xCBA434")]
		private void SetHighQuality()
		{
		}

		[Token(Token = "0x600201B")]
		[Address(RVA = "0xCBA6D8", Offset = "0xCBA6D8", VA = "0xCBA6D8")]
		private void SetLowQuality()
		{
		}

		[Token(Token = "0x600201C")]
		[Address(RVA = "0xCBAB98", Offset = "0xCBAB98", VA = "0xCBAB98")]
		public void SetCameraVisible(bool isVisible)
		{
		}

		[Token(Token = "0x600201D")]
		[Address(RVA = "0xCBAC78", Offset = "0xCBAC78", VA = "0xCBAC78")]
		private void HideCamera()
		{
		}

		[Token(Token = "0x600201E")]
		[Address(RVA = "0xCBAC98", Offset = "0xCBAC98", VA = "0xCBAC98")]
		public CameraToRT()
		{
		}
	}
	[Token(Token = "0x2000256")]
	public enum SetParentStyle
	{
		[Token(Token = "0x4000A60")]
		KeepWorldTransform,
		[Token(Token = "0x4000A61")]
		KeepLocalTransform
	}
	[Token(Token = "0x2000257")]
	public static class CommonHelper__HAIBAO__SWORD__
	{
		[Token(Token = "0x2000402")]
		public enum ShaderPropertyType
		{
			[Token(Token = "0x400107F")]
			Texture,
			[Token(Token = "0x4001080")]
			Color,
			[Token(Token = "0x4001081")]
			Vector,
			[Token(Token = "0x4001082")]
			Float
		}

		[Token(Token = "0x2000403")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940470", Offset = "0x940470")]
		private sealed class <>c__DisplayClass52_0
		{
			[Token(Token = "0x4001083")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool confirmed;

			[Token(Token = "0x6002DDC")]
			[Address(RVA = "0xCC29E8", Offset = "0xCC29E8", VA = "0xCC29E8")]
			public <>c__DisplayClass52_0()
			{
			}

			[Token(Token = "0x6002DDD")]
			[Address(RVA = "0xCC29F0", Offset = "0xCC29F0", VA = "0xCC29F0")]
			internal void <WaitForConfirm>b__0()
			{
			}
		}

		[Token(Token = "0x2000404")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940480", Offset = "0x940480")]
		private sealed class <WaitForConfirm>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001084")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001085")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001086")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string tips;

			[Token(Token = "0x4001087")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass52_0 <>8__1;

			[Token(Token = "0x17000231")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002DE1")]
				[Address(RVA = "0xCC2B10", Offset = "0xCC2B10", VA = "0xCC2B10", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000232")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002DE3")]
				[Address(RVA = "0xCC2B78", Offset = "0xCC2B78", VA = "0xCC2B78", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002DDE")]
			[Address(RVA = "0xCC15A0", Offset = "0xCC15A0", VA = "0xCC15A0")]
			[DebuggerHidden]
			public <WaitForConfirm>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x6002DDF")]
			[Address(RVA = "0xCC29FC", Offset = "0xCC29FC", VA = "0xCC29FC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002DE0")]
			[Address(RVA = "0xCC2A00", Offset = "0xCC2A00", VA = "0xCC2A00", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002DE2")]
			[Address(RVA = "0xCC2B18", Offset = "0xCC2B18", VA = "0xCC2B18", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A62")]
		public const char separatorChar = '/';

		[Token(Token = "0x4000A63")]
		public const string RESHOUSE = "Assets/ResHouse";

		[Token(Token = "0x4000A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly ObjectPool<StringBuilder> stringBuilderPool;

		[Token(Token = "0x4000A65")]
		private const string SLUADLL = "slua";

		[Token(Token = "0x4000A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static DateTime START_DATETIME;

		[Token(Token = "0x600201F")]
		[Address(RVA = "0xCBCE80", Offset = "0xCBCE80", VA = "0xCBCE80")]
		public static void ForEachChildren(GameObject obj, Action<GameObject> action, bool includeRoot)
		{
		}

		[Token(Token = "0x6002020")]
		[Address(RVA = "0xCBD164", Offset = "0xCBD164", VA = "0xCBD164")]
		public static void ForEachChildren(GameObject obj, string url, Action<GameObject, string> action, bool includeRoot)
		{
		}

		[Token(Token = "0x6002021")]
		public static T AddComponent<T>(GameObject go) where T : Component
		{
			return null;
		}

		[Token(Token = "0x6002022")]
		[Address(RVA = "0xCBD45C", Offset = "0xCBD45C", VA = "0xCBD45C")]
		public static void DelectDir(string srcPath)
		{
		}

		[Token(Token = "0x6002023")]
		[Address(RVA = "0xCBD68C", Offset = "0xCBD68C", VA = "0xCBD68C")]
		public static GameObject TransformFind(GameObject go, string childPath)
		{
			return null;
		}

		[Token(Token = "0x6002024")]
		[Address(RVA = "0xCBD80C", Offset = "0xCBD80C", VA = "0xCBD80C")]
		public static void FindGameObjectsWithTag(this GameObject go, List<GameObject> resultGOs, string tag)
		{
		}

		[Token(Token = "0x6002025")]
		[Address(RVA = "0xCBD918", Offset = "0xCBD918", VA = "0xCBD918")]
		public static Vector4 GetSpriteUVRect(Sprite sprite)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6002026")]
		[Address(RVA = "0xCBDAA8", Offset = "0xCBDAA8", VA = "0xCBDAA8")]
		public static Transform FindChild(Transform t, string childName)
		{
			return null;
		}

		[Token(Token = "0x6002027")]
		[Address(RVA = "0xCBDC30", Offset = "0xCBDC30", VA = "0xCBDC30")]
		public static List<Transform> FindChildList(Transform t, string childName)
		{
			return null;
		}

		[Token(Token = "0x6002028")]
		[Address(RVA = "0xCBDD84", Offset = "0xCBDD84", VA = "0xCBDD84")]
		public static void SetParent(Transform t, Transform parent, SetParentStyle style = SetParentStyle.KeepWorldTransform)
		{
		}

		[Token(Token = "0x6002029")]
		[Address(RVA = "0xCBDF7C", Offset = "0xCBDF7C", VA = "0xCBDF7C")]
		public static void ResetTransform(Transform t, bool changeScale = true)
		{
		}

		[Token(Token = "0x600202A")]
		[Address(RVA = "0xCBE074", Offset = "0xCBE074", VA = "0xCBE074")]
		public static void SetGOLayer(Transform t, int layer)
		{
		}

		[Token(Token = "0x600202B")]
		[Address(RVA = "0xCBE1B4", Offset = "0xCBE1B4", VA = "0xCBE1B4")]
		public static void DestroyChildren(Transform t, bool immediate = false)
		{
		}

		[Token(Token = "0x600202C")]
		[Address(RVA = "0xCBE2E4", Offset = "0xCBE2E4", VA = "0xCBE2E4")]
		public static object CreateInstance(string className, [Optional] object[] parameters, string nameSpace = "StarStudio")
		{
			return null;
		}

		[Token(Token = "0x600202D")]
		[Address(RVA = "0xCBE454", Offset = "0xCBE454", VA = "0xCBE454")]
		public static AnimationClip[] GetAnimationClips(GameObject go)
		{
			return null;
		}

		[Token(Token = "0x600202E")]
		[Address(RVA = "0xCBE814", Offset = "0xCBE814", VA = "0xCBE814")]
		public static Vector3 GetGroundPosition(Vector3 sourcePos, float maxDistance = 10f)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600202F")]
		[Address(RVA = "0xCBE894", Offset = "0xCBE894", VA = "0xCBE894")]
		public static List<string> GetAllFiles(string sPath, string sMatch = ".lua")
		{
			return null;
		}

		[Token(Token = "0x6002030")]
		[Address(RVA = "0xCBE97C", Offset = "0xCBE97C", VA = "0xCBE97C")]
		private static List<string> GetAllFiles(DirectoryInfo dirPath, string sMatch = ".lua", string sub = "")
		{
			return null;
		}

		[Token(Token = "0x6002031")]
		[Address(RVA = "0xCBEBA8", Offset = "0xCBEBA8", VA = "0xCBEBA8")]
		public static List<string> GetAllFileFullPaths(string sPath)
		{
			return null;
		}

		[Token(Token = "0x6002032")]
		[Address(RVA = "0xCBECF0", Offset = "0xCBECF0", VA = "0xCBECF0")]
		public static string StandardizePath(string path)
		{
			return null;
		}

		[Token(Token = "0x6002033")]
		[Address(RVA = "0xCBED10", Offset = "0xCBED10", VA = "0xCBED10")]
		public static string Contact(string str1, string str2)
		{
			return null;
		}

		[Token(Token = "0x6002034")]
		[Address(RVA = "0xCBEE14", Offset = "0xCBEE14", VA = "0xCBEE14")]
		public static string CombineTwoPath(string path1, string path2)
		{
			return null;
		}

		[Token(Token = "0x6002035")]
		[Address(RVA = "0xCBEF28", Offset = "0xCBEF28", VA = "0xCBEF28")]
		public static string ContactStr(string str1, string str2)
		{
			return null;
		}

		[Token(Token = "0x6002036")]
		[Address(RVA = "0xCBEFD4", Offset = "0xCBEFD4", VA = "0xCBEFD4")]
		public static string ContactStr(string str1, string str2, string str3)
		{
			return null;
		}

		[Token(Token = "0x6002037")]
		[Address(RVA = "0xCBF0A8", Offset = "0xCBF0A8", VA = "0xCBF0A8")]
		public static string ContactStr(string str1, string str2, string str3, string str4)
		{
			return null;
		}

		[Token(Token = "0x6002038")]
		[Address(RVA = "0xCBF1A4", Offset = "0xCBF1A4", VA = "0xCBF1A4")]
		public static string CombinePath(string path1, string path2)
		{
			return null;
		}

		[Token(Token = "0x6002039")]
		[Address(RVA = "0xCBF264", Offset = "0xCBF264", VA = "0xCBF264")]
		public static string CombinePath(string path1, string path2, string path3)
		{
			return null;
		}

		[Token(Token = "0x600203A")]
		[Address(RVA = "0xCBF35C", Offset = "0xCBF35C", VA = "0xCBF35C")]
		public static string CombinePath(string path1, string path2, string path3, string path4)
		{
			return null;
		}

		[Token(Token = "0x600203B")]
		[Address(RVA = "0xCBF48C", Offset = "0xCBF48C", VA = "0xCBF48C")]
		public static string PathCombine(params string[] strs)
		{
			return null;
		}

		[Token(Token = "0x600203C")]
		[Address(RVA = "0xCBF640", Offset = "0xCBF640", VA = "0xCBF640")]
		public static string GetFileName(string filePath, bool includeExt)
		{
			return null;
		}

		[Token(Token = "0x600203D")]
		[Address(RVA = "0xCBF774", Offset = "0xCBF774", VA = "0xCBF774")]
		public static string GetLocalFileWWWURL(string localFullURL)
		{
			return null;
		}

		[Token(Token = "0x600203E")]
		[Address(RVA = "0xCBF814", Offset = "0xCBF814", VA = "0xCBF814")]
		public static void CopyDir(string sourceDirPath, string destDirPath, bool clear = false)
		{
		}

		[Token(Token = "0x600203F")]
		[Address(RVA = "0xCBFAA4", Offset = "0xCBFAA4", VA = "0xCBFAA4")]
		public static bool DeleteDirectory(string dirPath, int tryCount = 1)
		{
			return default(bool);
		}

		[Token(Token = "0x6002040")]
		[Address(RVA = "0xCBFC18", Offset = "0xCBFC18", VA = "0xCBFC18")]
		public static bool ClearDirectory(string dirPath, bool makeSureExists)
		{
			return default(bool);
		}

		[Token(Token = "0x6002041")]
		[Address(RVA = "0xCBFE84", Offset = "0xCBFE84", VA = "0xCBFE84")]
		public static string AbsolutePathToAssetPath(string absolutePath)
		{
			return null;
		}

		[Token(Token = "0x6002042")]
		[Address(RVA = "0xCBFF5C", Offset = "0xCBFF5C", VA = "0xCBFF5C")]
		public static string AssetPathToAbsolutePath(string assetPath)
		{
			return null;
		}

		[Token(Token = "0x6002043")]
		[Address(RVA = "0xCBFFE4", Offset = "0xCBFFE4", VA = "0xCBFFE4")]
		public static bool IsAssetPath(string path)
		{
			return default(bool);
		}

		[Token(Token = "0x6002044")]
		[Address(RVA = "0xCC0040", Offset = "0xCC0040", VA = "0xCC0040")]
		public static bool IsImageExtension(string extension)
		{
			return default(bool);
		}

		[Token(Token = "0x6002045")]
		[Address(RVA = "0xCC0164", Offset = "0xCC0164", VA = "0xCC0164")]
		public static bool IsRaycastOtherCollider(Collider centerCollider, Vector3 direction, float distance, ref Vector3 fixPos, bool isSlide = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6002046")]
		[Address(RVA = "0xCC07C8", Offset = "0xCC07C8", VA = "0xCC07C8")]
		public static string GetUrlWithTimestamp(string url)
		{
			return null;
		}

		[Token(Token = "0x6002047")]
		[Address(RVA = "0xCC0924", Offset = "0xCC0924", VA = "0xCC0924")]
		public static string GetMD5Code(byte[] buffer, int count)
		{
			return null;
		}

		[Token(Token = "0x6002048")]
		[Address(RVA = "0xCC0A00", Offset = "0xCC0A00", VA = "0xCC0A00")]
		public static string GetFileMD5(string filePath)
		{
			return null;
		}

		[Token(Token = "0x6002049")]
		[Address(RVA = "0xCC0DE4", Offset = "0xCC0DE4", VA = "0xCC0DE4")]
		public static string GetStackTraceInfo()
		{
			return null;
		}

		[Token(Token = "0x600204A")]
		[Address(RVA = "0xCC10A4", Offset = "0xCC10A4", VA = "0xCC10A4")]
		public static void SetEventSystemInputEnabled(bool enabled)
		{
		}

		[Token(Token = "0x600204B")]
		[Address(RVA = "0xCC11F0", Offset = "0xCC11F0", VA = "0xCC11F0")]
		public static GameObject GetLoadingUICameraGO()
		{
			return null;
		}

		[Token(Token = "0x600204C")]
		[Address(RVA = "0xCC123C", Offset = "0xCC123C", VA = "0xCC123C")]
		public static GameObject GetUIPopupParent()
		{
			return null;
		}

		[Token(Token = "0x600204D")]
		[Address(RVA = "0xCC1528", Offset = "0xCC1528", VA = "0xCC1528")]
		public static GameObject ShowMsgPanel(string text, [Optional] UnityAction action, [Optional] UnityAction cancelAction, bool dontDestroy = false)
		{
			return null;
		}

		[Token(Token = "0x600204E")]
		[Address(RVA = "0xCC1530", Offset = "0xCC1530", VA = "0xCC1530")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A7BA8", Offset = "0x9A7BA8")]
		public static IEnumerator WaitForConfirm(string tips)
		{
			return null;
		}

		[Token(Token = "0x600204F")]
		[Address(RVA = "0xCC15CC", Offset = "0xCC15CC", VA = "0xCC15CC")]
		public static void SetSameRateScreenBg(RectTransform rt)
		{
		}

		[Token(Token = "0x6002050")]
		[Address(RVA = "0xCC17A8", Offset = "0xCC17A8", VA = "0xCC17A8")]
		public static void SetAssemblyLengthAdaptScreen(RectTransform rt)
		{
		}

		[Token(Token = "0x6002051")]
		[Address(RVA = "0xCC1930", Offset = "0xCC1930", VA = "0xCC1930")]
		public static string ReadTxtFile(string path)
		{
			return null;
		}

		[Token(Token = "0x6002052")]
		[Address(RVA = "0xCC1C80", Offset = "0xCC1C80", VA = "0xCC1C80")]
		public static byte[] ReadBytesFile(string path)
		{
			return null;
		}

		[Token(Token = "0x6002053")]
		[Address(RVA = "0xCC207C", Offset = "0xCC207C", VA = "0xCC207C")]
		public static void WriteTxtFile(string path, string text)
		{
		}

		[Token(Token = "0x6002054")]
		[Address(RVA = "0xCC0A9C", Offset = "0xCC0A9C", VA = "0xCC0A9C")]
		public static byte[] ReadBinFile(string path)
		{
			return null;
		}

		[Token(Token = "0x6002055")]
		[Address(RVA = "0xCC21C8", Offset = "0xCC21C8", VA = "0xCC21C8")]
		public static Sprite ReadSpriteFile(string path)
		{
			return null;
		}

		[Token(Token = "0x6002056")]
		[Address(RVA = "0xCC2490", Offset = "0xCC2490", VA = "0xCC2490")]
		public static string GetAppABPath(bool considerPlatform = true)
		{
			return null;
		}

		[Token(Token = "0x6002057")]
		[Address(RVA = "0xCC2500", Offset = "0xCC2500", VA = "0xCC2500")]
		public static string GetExternalABPath(bool considerPlatform = true)
		{
			return null;
		}

		[Token(Token = "0x6002058")]
		[Address(RVA = "0xCC25FC", Offset = "0xCC25FC", VA = "0xCC25FC")]
		public static string GetExternalDataPath()
		{
			return null;
		}

		[Token(Token = "0x6002059")]
		[Address(RVA = "0xCC2604", Offset = "0xCC2604", VA = "0xCC2604")]
		public static string ReadAssetTxtFile(string relativePath, bool considerPlatform = true)
		{
			return null;
		}

		[Token(Token = "0x600205A")]
		[Address(RVA = "0xCC27D8", Offset = "0xCC27D8", VA = "0xCC27D8")]
		public static float GetMB(long size)
		{
			return default(float);
		}

		[Token(Token = "0x600205B")]
		[Address(RVA = "0xCC27EC", Offset = "0xCC27EC", VA = "0xCC27EC")]
		public static float GetKB(long size)
		{
			return default(float);
		}

		[Token(Token = "0x600205C")]
		[Address(RVA = "0xCC2800", Offset = "0xCC2800", VA = "0xCC2800")]
		public static void CopyMaterialProperty(Material material, Material initialMaterial, string propertyName, ShaderPropertyType propertyType)
		{
		}
	}
	[Token(Token = "0x2000258")]
	public static class UtilExtension__HAIBAO__SWORD__
	{
		[Token(Token = "0x600205E")]
		[Address(RVA = "0xBE687C", Offset = "0xBE687C", VA = "0xBE687C")]
		public static bool IsAnimation(this string path)
		{
			return default(bool);
		}

		[Token(Token = "0x600205F")]
		[Address(RVA = "0xBE68D8", Offset = "0xBE68D8", VA = "0xBE68D8")]
		public static bool IsAnimator(this string path)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000259")]
	public class Util__HAIBAO__SWORD__
	{
		[Token(Token = "0x4000A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string _sdkVersion;

		[Token(Token = "0x1700010C")]
		public static string sdkVersion
		{
			[Token(Token = "0x600206B")]
			[Address(RVA = "0xC9C220", Offset = "0xC9C220", VA = "0xC9C220")]
			set
			{
			}
		}

		[Token(Token = "0x6002060")]
		[Address(RVA = "0xC9B9FC", Offset = "0xC9B9FC", VA = "0xC9B9FC")]
		public static bool IsNewUser()
		{
			return default(bool);
		}

		[Token(Token = "0x6002061")]
		[Address(RVA = "0xC9BA8C", Offset = "0xC9BA8C", VA = "0xC9BA8C")]
		public static void SetNotNewUser()
		{
		}

		[Token(Token = "0x6002062")]
		[Address(RVA = "0xC9BB1C", Offset = "0xC9BB1C", VA = "0xC9BB1C")]
		public static float GetScreenRatio()
		{
			return default(float);
		}

		[Token(Token = "0x6002063")]
		[Address(RVA = "0xC9BB54", Offset = "0xC9BB54", VA = "0xC9BB54")]
		public static bool PointInRect(Vector3 point, Vector3 center, float w, float h)
		{
			return default(bool);
		}

		[Token(Token = "0x6002064")]
		[Address(RVA = "0xC9BBA0", Offset = "0xC9BBA0", VA = "0xC9BBA0")]
		public static double DateDiffBySeconds(DateTime DateTime1, DateTime DateTime2)
		{
			return default(double);
		}

		[Token(Token = "0x6002065")]
		[Address(RVA = "0xC9BBE8", Offset = "0xC9BBE8", VA = "0xC9BBE8")]
		public static RectTransform AddRectTransform(GameObject go)
		{
			return null;
		}

		[Token(Token = "0x6002066")]
		[Address(RVA = "0xC9BCD8", Offset = "0xC9BCD8", VA = "0xC9BCD8")]
		public static string Json2Lua(Dictionary<string, object> data, string tableKey)
		{
			return null;
		}

		[Token(Token = "0x6002067")]
		[Address(RVA = "0xC9BF78", Offset = "0xC9BF78", VA = "0xC9BF78")]
		public static void SetUIDepth(GameObject go, bool enable)
		{
		}

		[Token(Token = "0x6002068")]
		[Address(RVA = "0xC9C0C8", Offset = "0xC9C0C8", VA = "0xC9C0C8")]
		public static string WWWStreamingAssetPath()
		{
			return null;
		}

		[Token(Token = "0x6002069")]
		[Address(RVA = "0xC9C130", Offset = "0xC9C130", VA = "0xC9C130")]
		public static string GetPid()
		{
			return null;
		}

		[Token(Token = "0x600206A")]
		[Address(RVA = "0xC9C1A0", Offset = "0xC9C1A0", VA = "0xC9C1A0")]
		public static void ReportError(Exception ex)
		{
		}

		[Token(Token = "0x600206C")]
		[Address(RVA = "0xC9C28C", Offset = "0xC9C28C", VA = "0xC9C28C")]
		public static string GetSdkVersion()
		{
			return null;
		}

		[Token(Token = "0x600206D")]
		[Address(RVA = "0xC9C2F4", Offset = "0xC9C2F4", VA = "0xC9C2F4")]
		public Util__HAIBAO__SWORD__()
		{
		}
	}
	[Token(Token = "0x200025A")]
	public class Index2Bin
	{
		[Token(Token = "0x4000A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<int> _arr;

		[Token(Token = "0x4000A69")]
		private const int BASE = 31;

		[Token(Token = "0x600206F")]
		[Address(RVA = "0xCC93F8", Offset = "0xCC93F8", VA = "0xCC93F8")]
		public Index2Bin()
		{
		}

		[Token(Token = "0x6002070")]
		[Address(RVA = "0xCC946C", Offset = "0xCC946C", VA = "0xCC946C")]
		public Index2Bin(List<int> param)
		{
		}

		[Token(Token = "0x6002071")]
		[Address(RVA = "0xCC94F0", Offset = "0xCC94F0", VA = "0xCC94F0")]
		public Index2Bin(LuaTable arr)
		{
		}

		[Token(Token = "0x6002072")]
		[Address(RVA = "0xCC95E0", Offset = "0xCC95E0", VA = "0xCC95E0")]
		public bool Dif(int number)
		{
			return default(bool);
		}

		[Token(Token = "0x6002073")]
		[Address(RVA = "0xCC9714", Offset = "0xCC9714", VA = "0xCC9714")]
		public List<int> Get()
		{
			return null;
		}
	}
	[Token(Token = "0x200025B")]
	public static class UtilUnity
	{
		[Token(Token = "0x6002074")]
		[Address(RVA = "0xC9B8F4", Offset = "0xC9B8F4", VA = "0xC9B8F4")]
		public static GameObject CloneWithInitPosAndParent(this GameObject prefab, Transform root, Vector3 pos, string name)
		{
			return null;
		}
	}
	[Token(Token = "0x200025C")]
	public class UtilPlatform__HAIBAO__SWORD__
	{
		[Token(Token = "0x6002075")]
		[Address(RVA = "0xC9B89C", Offset = "0xC9B89C", VA = "0xC9B89C")]
		public static string GetPlatformName()
		{
			return null;
		}

		[Token(Token = "0x6002076")]
		[Address(RVA = "0xC9B8E4", Offset = "0xC9B8E4", VA = "0xC9B8E4")]
		public static bool IsIOS()
		{
			return default(bool);
		}

		[Token(Token = "0x6002077")]
		[Address(RVA = "0xC9B8EC", Offset = "0xC9B8EC", VA = "0xC9B8EC")]
		public UtilPlatform__HAIBAO__SWORD__()
		{
		}
	}
	[Token(Token = "0x200025D")]
	public class EffectMask : UIBehaviourForUpdate
	{
		[Token(Token = "0x4000A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject _target;

		[Token(Token = "0x4000A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _lastPos;

		[Token(Token = "0x4000A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _cacheGO;

		[Token(Token = "0x4000A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform _cacheTS;

		[Token(Token = "0x4000A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool IsNeedResetOnEnable;

		[Token(Token = "0x6002078")]
		[Address(RVA = "0xCC4EC0", Offset = "0xCC4EC0", VA = "0xCC4EC0")]
		private void _init()
		{
		}

		[Token(Token = "0x6002079")]
		[Address(RVA = "0xCC50B8", Offset = "0xCC50B8", VA = "0xCC50B8", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x600207A")]
		[Address(RVA = "0xCC50E0", Offset = "0xCC50E0", VA = "0xCC50E0", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x600207B")]
		[Address(RVA = "0xCC5434", Offset = "0xCC5434", VA = "0xCC5434", Slot = "12")]
		protected override void OnTransformParentChanged()
		{
		}

		[Token(Token = "0x600207C")]
		[Address(RVA = "0xCC5028", Offset = "0xCC5028", VA = "0xCC5028")]
		private void setMask()
		{
		}

		[Token(Token = "0x600207D")]
		[Address(RVA = "0xCC5168", Offset = "0xCC5168", VA = "0xCC5168")]
		private void ReCoverRender()
		{
		}

		[Token(Token = "0x600207E")]
		[Address(RVA = "0xCC545C", Offset = "0xCC545C", VA = "0xCC545C", Slot = "17")]
		public override void OnFrame()
		{
		}

		[Token(Token = "0x600207F")]
		[Address(RVA = "0xCC5574", Offset = "0xCC5574", VA = "0xCC5574")]
		public EffectMask()
		{
		}
	}
	[Token(Token = "0x200025E")]
	public class SpriteSheet : MonoBehaviour
	{
		[Token(Token = "0x2000405")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940490", Offset = "0x940490")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x4001088")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string name;

			[Token(Token = "0x4001089")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SpriteSheet <>4__this;

			[Token(Token = "0x6002DE4")]
			[Address(RVA = "0xBDC24C", Offset = "0xBDC24C", VA = "0xBDC24C")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x6002DE5")]
			[Address(RVA = "0xBDC32C", Offset = "0xBDC32C", VA = "0xBDC32C")]
			internal void <Update>b__0()
			{
			}
		}

		[Token(Token = "0x4000A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Image img;

		[Token(Token = "0x4000A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string Prefix;

		[Token(Token = "0x4000A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int CurrentFrame;

		[Token(Token = "0x4000A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int Interval;

		[Token(Token = "0x4000A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int Count;

		[Token(Token = "0x4000A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int CurrentIndex;

		[Token(Token = "0x4000A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Dictionary<string, Sprite> _dic;

		[Token(Token = "0x6002080")]
		[Address(RVA = "0xBDBFB0", Offset = "0xBDBFB0", VA = "0xBDBFB0")]
		public void Awake()
		{
		}

		[Token(Token = "0x6002081")]
		[Address(RVA = "0xBDC008", Offset = "0xBDC008", VA = "0xBDC008")]
		public void Set(string prefix, int count, int interval)
		{
		}

		[Token(Token = "0x6002082")]
		[Address(RVA = "0xBDC058", Offset = "0xBDC058", VA = "0xBDC058")]
		public void Update()
		{
		}

		[Token(Token = "0x6002083")]
		[Address(RVA = "0xBDC25C", Offset = "0xBDC25C", VA = "0xBDC25C")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6002084")]
		[Address(RVA = "0xBDC2B4", Offset = "0xBDC2B4", VA = "0xBDC2B4")]
		public SpriteSheet()
		{
		}
	}
	[Token(Token = "0x200025F")]
	internal class LoaderUIBgTexture : MonoBehaviour
	{
		[Token(Token = "0x4000A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Path;

		[Token(Token = "0x4000A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RawImage mImage;

		[Token(Token = "0x4000A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Resource mRes;

		[Token(Token = "0x6002085")]
		[Address(RVA = "0xCC971C", Offset = "0xCC971C", VA = "0xCC971C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002086")]
		[Address(RVA = "0xCC9774", Offset = "0xCC9774", VA = "0xCC9774")]
		private void Start()
		{
		}

		[Token(Token = "0x6002087")]
		[Address(RVA = "0xCC99D8", Offset = "0xCC99D8", VA = "0xCC99D8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002088")]
		[Address(RVA = "0xCC9A0C", Offset = "0xCC9A0C", VA = "0xCC9A0C")]
		public LoaderUIBgTexture()
		{
		}

		[Token(Token = "0x6002089")]
		[Address(RVA = "0xCC9A14", Offset = "0xCC9A14", VA = "0xCC9A14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7C3C", Offset = "0x9A7C3C")]
		private void <Start>b__4_0(Resource res, object data)
		{
		}
	}
	[Token(Token = "0x2000260")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x93F3A4", Offset = "0x93F3A4")]
	public class PanelSafeArea : MonoBehaviour
	{
		[Token(Token = "0x4000A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool IsAdjust;

		[Token(Token = "0x4000A7A")]
		public const float iPhoneXWidth = 2436f;

		[Token(Token = "0x4000A7B")]
		public const float iPhoneXHeight = 1125f;

		[Token(Token = "0x4000A7C")]
		public const float iPhoneXMargin = 132f;

		[Token(Token = "0x600208A")]
		[Address(RVA = "0xBD840C", Offset = "0xBD840C", VA = "0xBD840C")]
		public void Awake()
		{
		}

		[Token(Token = "0x600208B")]
		[Address(RVA = "0xBD841C", Offset = "0xBD841C", VA = "0xBD841C")]
		private void _ajustArea()
		{
		}

		[Token(Token = "0x600208C")]
		[Address(RVA = "0xBD85F8", Offset = "0xBD85F8", VA = "0xBD85F8")]
		public PanelSafeArea()
		{
		}
	}
	[Token(Token = "0x2000261")]
	public static class SafeAreaUtil
	{
		[Token(Token = "0x600208D")]
		[Address(RVA = "0xBD85A0", Offset = "0xBD85A0", VA = "0xBD85A0")]
		public static Rect GetSafeArea()
		{
			return default(Rect);
		}
	}
	[Token(Token = "0x2000262")]
	public enum VideoState__HAIBAO__SWORD__
	{
		[Token(Token = "0x4000A7E")]
		loading,
		[Token(Token = "0x4000A7F")]
		open,
		[Token(Token = "0x4000A80")]
		close
	}
	[Token(Token = "0x2000263")]
	public class ComVideo__HAIBAO__SWORD__
	{
		[Token(Token = "0x4000A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private MediaPlayer mComPlayer;

		[Token(Token = "0x4000A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string mPath;

		[Token(Token = "0x4000A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private VideoState__HAIBAO__SWORD__ mState;

		[Token(Token = "0x600208E")]
		[Address(RVA = "0xCBC8B0", Offset = "0xCBC8B0", VA = "0xCBC8B0")]
		public void SetData(string path, MediaPlayer player)
		{
		}

		[Token(Token = "0x600208F")]
		[Address(RVA = "0xCBC8B8", Offset = "0xCBC8B8", VA = "0xCBC8B8")]
		public void Load()
		{
		}

		[Token(Token = "0x6002090")]
		[Address(RVA = "0xCBCAE8", Offset = "0xCBCAE8", VA = "0xCBCAE8")]
		private void Download()
		{
		}

		[Token(Token = "0x6002091")]
		[Address(RVA = "0xCBC9D4", Offset = "0xCBC9D4", VA = "0xCBC9D4")]
		private void OnLoad()
		{
		}

		[Token(Token = "0x6002092")]
		[Address(RVA = "0xCBCD60", Offset = "0xCBCD60", VA = "0xCBCD60")]
		public void UnLoad()
		{
		}

		[Token(Token = "0x6002093")]
		[Address(RVA = "0xCBCCCC", Offset = "0xCBCCCC", VA = "0xCBCCCC")]
		private MediaPlayer.FileLocation GetFileType()
		{
			return default(MediaPlayer.FileLocation);
		}

		[Token(Token = "0x6002094")]
		[Address(RVA = "0xCBCC64", Offset = "0xCBCC64", VA = "0xCBCC64")]
		private string GetPath()
		{
			return null;
		}

		[Token(Token = "0x6002095")]
		[Address(RVA = "0xCBCDA4", Offset = "0xCBCDA4", VA = "0xCBCDA4")]
		private string GetStreamingAssetPath()
		{
			return null;
		}

		[Token(Token = "0x6002096")]
		[Address(RVA = "0xCBCDF8", Offset = "0xCBCDF8", VA = "0xCBCDF8")]
		private string GetPeristentDataPath()
		{
			return null;
		}

		[Token(Token = "0x6002097")]
		[Address(RVA = "0xCBCA38", Offset = "0xCBCA38", VA = "0xCBCA38")]
		private bool IsPackageDelete()
		{
			return default(bool);
		}

		[Token(Token = "0x6002098")]
		[Address(RVA = "0xCBC95C", Offset = "0xCBC95C", VA = "0xCBC95C")]
		private bool IsHasInPeristentData()
		{
			return default(bool);
		}

		[Token(Token = "0x6002099")]
		[Address(RVA = "0xCBCE68", Offset = "0xCBCE68", VA = "0xCBCE68")]
		public ComVideo__HAIBAO__SWORD__()
		{
		}

		[Token(Token = "0x600209A")]
		[Address(RVA = "0xCBCE70", Offset = "0xCBCE70", VA = "0xCBCE70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7C4C", Offset = "0x9A7C4C")]
		private void <Download>b__5_0(string url, string error, string localPath, string str)
		{
		}
	}
	[Token(Token = "0x2000264")]
	public static class ViewTool
	{
		[Token(Token = "0x2000406")]
		public delegate void OnInitItem(GameObject go);

		[Token(Token = "0x2000407")]
		public delegate void OnFillItem(GameObject go, int index);

		[Token(Token = "0x2000408")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9404A0", Offset = "0x9404A0")]
		private sealed class <>c__DisplayClass24_0
		{
			[Token(Token = "0x400108A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LuaFunction call;

			[Token(Token = "0x6002DEE")]
			[Address(RVA = "0xC9D638", Offset = "0xC9D638", VA = "0xC9D638")]
			public <>c__DisplayClass24_0()
			{
			}

			[Token(Token = "0x6002DEF")]
			[Address(RVA = "0xC9EEC0", Offset = "0xC9EEC0", VA = "0xC9EEC0")]
			internal void <BindClick>b__0()
			{
			}
		}

		[Token(Token = "0x1700010D")]
		public static bool IsTouchUI
		{
			[Token(Token = "0x600209D")]
			[Address(RVA = "0xC9C4B8", Offset = "0xC9C4B8", VA = "0xC9C4B8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600209B")]
		[Address(RVA = "0xC9C358", Offset = "0xC9C358", VA = "0xC9C358")]
		public static GameObject NewUIObject(string name)
		{
			return null;
		}

		[Token(Token = "0x600209C")]
		[Address(RVA = "0xC9C3D8", Offset = "0xC9C3D8", VA = "0xC9C3D8")]
		public static void SetInteractable(Component comp, bool isInteractable)
		{
		}

		[Token(Token = "0x600209E")]
		[Address(RVA = "0xC9C594", Offset = "0xC9C594", VA = "0xC9C594")]
		public static Vector3 GetLocalPosWith(GameObject target, Transform parent)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600209F")]
		[Address(RVA = "0xC9C650", Offset = "0xC9C650", VA = "0xC9C650")]
		public static void SetColor(Image img, float r, float g, float b, float a)
		{
		}

		[Token(Token = "0x60020A0")]
		[Address(RVA = "0xC9C6A8", Offset = "0xC9C6A8", VA = "0xC9C6A8")]
		public static void SetGray(GameObject go, bool isGray)
		{
		}

		[Token(Token = "0x60020A1")]
		[Address(RVA = "0xC9C8FC", Offset = "0xC9C8FC", VA = "0xC9C8FC")]
		public static void SetGrayImage(Graphic a, bool isGray)
		{
		}

		[Token(Token = "0x60020A2")]
		[Address(RVA = "0xC9CDCC", Offset = "0xC9CDCC", VA = "0xC9CDCC")]
		public static void SetImg(Image com, string name)
		{
		}

		[Token(Token = "0x60020A3")]
		[Address(RVA = "0xC9CDD4", Offset = "0xC9CDD4", VA = "0xC9CDD4")]
		public static Material GetSoftClip(Graphic a, float clipX, float clipY, bool isLeftAndBottom, bool isRightAndTop)
		{
			return null;
		}

		[Token(Token = "0x60020A4")]
		[Address(RVA = "0xC9CCA4", Offset = "0xC9CCA4", VA = "0xC9CCA4")]
		public static void UpdateMaterial(Material a, string name, bool AddOrDel)
		{
		}

		[Token(Token = "0x60020A5")]
		[Address(RVA = "0xC9CFC8", Offset = "0xC9CFC8", VA = "0xC9CFC8")]
		public static bool SetColor(ref Color currentValue, Color newValue)
		{
			return default(bool);
		}

		[Token(Token = "0x60020A6")]
		public static bool SetEquatableStruct<T>(ref T currentValue, T newValue) where T : IEquatable<T>
		{
			return default(bool);
		}

		[Token(Token = "0x60020A7")]
		public static bool SetStruct<T>(ref T currentValue, T newValue) where T : struct
		{
			return default(bool);
		}

		[Token(Token = "0x60020A8")]
		public static bool SetClass<T>(ref T currentValue, T newValue) where T : class
		{
			return default(bool);
		}

		[Token(Token = "0x60020A9")]
		[Address(RVA = "0xC9D010", Offset = "0xC9D010", VA = "0xC9D010")]
		public static void AddDragScrollViewItem(GameObject dragTarget, LuaFunction beginDragCallBack, LuaFunction dragCallBack, LuaFunction dragEnd)
		{
		}

		[Token(Token = "0x60020AA")]
		[Address(RVA = "0xC9D098", Offset = "0xC9D098", VA = "0xC9D098")]
		public static void SetDragScrollViewItemEnable(GameObject dragTarget, bool isEnable)
		{
		}

		[Token(Token = "0x60020AB")]
		[Address(RVA = "0xC9D158", Offset = "0xC9D158", VA = "0xC9D158")]
		public static void SetImageFillAmount(Image com, float value)
		{
		}

		[Token(Token = "0x60020AC")]
		[Address(RVA = "0xC9D170", Offset = "0xC9D170", VA = "0xC9D170")]
		public static void SetCompActive(Component comp, bool isActive)
		{
		}

		[Token(Token = "0x60020AD")]
		[Address(RVA = "0xC9D1A8", Offset = "0xC9D1A8", VA = "0xC9D1A8")]
		public static void AddGrayText(Component comp)
		{
		}

		[Token(Token = "0x60020AE")]
		[Address(RVA = "0xC9D24C", Offset = "0xC9D24C", VA = "0xC9D24C")]
		public static void SetRawImageCameral(RawImage image, Camera camera)
		{
		}

		[Token(Token = "0x60020AF")]
		[Address(RVA = "0xC9D39C", Offset = "0xC9D39C", VA = "0xC9D39C")]
		public static void LoadPlayerHeadIcon(RawImage image, string name)
		{
		}

		[Token(Token = "0x60020B0")]
		[Address(RVA = "0xC9D51C", Offset = "0xC9D51C", VA = "0xC9D51C")]
		public static Component GetChildComp(GameObject go, string childName, string compName)
		{
			return null;
		}

		[Token(Token = "0x60020B1")]
		[Address(RVA = "0xC9D550", Offset = "0xC9D550", VA = "0xC9D550")]
		public static Component GetComp(GameObject go, string compName)
		{
			return null;
		}

		[Token(Token = "0x60020B2")]
		[Address(RVA = "0xC9D568", Offset = "0xC9D568", VA = "0xC9D568")]
		public static void BindClick(GameObject go, LuaFunction call)
		{
		}

		[Token(Token = "0x60020B3")]
		[Address(RVA = "0xC9D640", Offset = "0xC9D640", VA = "0xC9D640")]
		public static void SetHorizontalNormalizedPosition(GameObject go, float percent)
		{
		}

		[Token(Token = "0x60020B4")]
		[Address(RVA = "0xC9D718", Offset = "0xC9D718", VA = "0xC9D718")]
		public static void SetHorizontalNormalizedPositionWithTime(GameObject go, float percent, float time)
		{
		}

		[Token(Token = "0x60020B5")]
		[Address(RVA = "0xC9D7E4", Offset = "0xC9D7E4", VA = "0xC9D7E4")]
		public static void SetVerticalNormalizedPosition(GameObject go, float percent)
		{
		}

		[Token(Token = "0x60020B6")]
		[Address(RVA = "0xC9D8BC", Offset = "0xC9D8BC", VA = "0xC9D8BC")]
		public static void SetScrollRectContentMoveEnable(GameObject go, bool enabled)
		{
		}

		[Token(Token = "0x60020B7")]
		[Address(RVA = "0xC9D96C", Offset = "0xC9D96C", VA = "0xC9D96C")]
		public static void TeewAlpha(GameObject go, float to, float duration)
		{
		}

		[Token(Token = "0x60020B8")]
		[Address(RVA = "0xC9DAAC", Offset = "0xC9DAAC", VA = "0xC9DAAC")]
		public static void SetLayoutPreferredWidth(LayoutElement comp, float width)
		{
		}

		[Token(Token = "0x60020B9")]
		[Address(RVA = "0xC9DACC", Offset = "0xC9DACC", VA = "0xC9DACC")]
		public static void SetLayoutPreferredHeight(LayoutElement comp, float height)
		{
		}

		[Token(Token = "0x60020BA")]
		[Address(RVA = "0xC9DAEC", Offset = "0xC9DAEC", VA = "0xC9DAEC")]
		public static float GetLayoutPreferredWidth(LayoutElement comp)
		{
			return default(float);
		}

		[Token(Token = "0x60020BB")]
		[Address(RVA = "0xC9DB0C", Offset = "0xC9DB0C", VA = "0xC9DB0C")]
		public static float GetLayoutPreferredHeight(LayoutElement comp)
		{
			return default(float);
		}

		[Token(Token = "0x60020BC")]
		[Address(RVA = "0xC9DB2C", Offset = "0xC9DB2C", VA = "0xC9DB2C")]
		public static void SetFitter(ContentSizeFitter comp, int type)
		{
		}

		[Token(Token = "0x60020BD")]
		[Address(RVA = "0xC9DB44", Offset = "0xC9DB44", VA = "0xC9DB44")]
		public static void SetRectSize(RectTransform rect, float width, float height)
		{
		}

		[Token(Token = "0x60020BE")]
		[Address(RVA = "0xC9DB88", Offset = "0xC9DB88", VA = "0xC9DB88")]
		public static void SetRectAnchor(RectTransform rect, float minX, float minY, float maxX, float maxY)
		{
		}

		[Token(Token = "0x60020BF")]
		[Address(RVA = "0xC9DC0C", Offset = "0xC9DC0C", VA = "0xC9DC0C")]
		public static void SetRectOffsetMin(RectTransform rect, float minX, float minY)
		{
		}

		[Token(Token = "0x60020C0")]
		[Address(RVA = "0xC9DC50", Offset = "0xC9DC50", VA = "0xC9DC50")]
		public static void SetRectOffsetMax(RectTransform rect, float maxX, float maxY)
		{
		}

		[Token(Token = "0x60020C1")]
		[Address(RVA = "0xC9DC94", Offset = "0xC9DC94", VA = "0xC9DC94")]
		public static void SetRectPosition(RectTransform rect, float x, float y, float z)
		{
		}

		[Token(Token = "0x60020C2")]
		[Address(RVA = "0xC9DCE8", Offset = "0xC9DCE8", VA = "0xC9DCE8")]
		public static void SetRectPositionByTransform(Transform src, Transform dst)
		{
		}

		[Token(Token = "0x60020C3")]
		[Address(RVA = "0xC9DD20", Offset = "0xC9DD20", VA = "0xC9DD20")]
		public static void SetRectAnchorPosition(RectTransform rect, float x, float y, float z)
		{
		}

		[Token(Token = "0x60020C4")]
		[Address(RVA = "0xC9DDE8", Offset = "0xC9DDE8", VA = "0xC9DDE8")]
		public static void SetRectPivotByRect(RectTransform src, RectTransform dst)
		{
		}

		[Token(Token = "0x60020C5")]
		[Address(RVA = "0xC9DE20", Offset = "0xC9DE20", VA = "0xC9DE20")]
		public static void SetRectPivot(RectTransform rect, float x, float y)
		{
		}

		[Token(Token = "0x60020C6")]
		[Address(RVA = "0xC9DE64", Offset = "0xC9DE64", VA = "0xC9DE64")]
		public static void ChangeRendererStencil(GameObject viewport, GameObject target)
		{
		}

		[Token(Token = "0x60020C7")]
		[Address(RVA = "0xC9E26C", Offset = "0xC9E26C", VA = "0xC9E26C")]
		public static void SetAsFirstSibling(GameObject go)
		{
		}

		[Token(Token = "0x60020C8")]
		[Address(RVA = "0xC9E2E8", Offset = "0xC9E2E8", VA = "0xC9E2E8")]
		public static void SetAsLastSibling(GameObject go)
		{
		}

		[Token(Token = "0x60020C9")]
		[Address(RVA = "0xC9E2D0", Offset = "0xC9E2D0", VA = "0xC9E2D0")]
		public static void SetAsFirstSiblingWithRect(RectTransform comp)
		{
		}

		[Token(Token = "0x60020CA")]
		[Address(RVA = "0xC9E34C", Offset = "0xC9E34C", VA = "0xC9E34C")]
		public static void SetAsLastSiblingWithRect(RectTransform comp)
		{
		}

		[Token(Token = "0x60020CB")]
		[Address(RVA = "0xC9E364", Offset = "0xC9E364", VA = "0xC9E364")]
		public static void ForceRebuild(GameObject go)
		{
		}

		[Token(Token = "0x60020CC")]
		[Address(RVA = "0xC9E40C", Offset = "0xC9E40C", VA = "0xC9E40C")]
		public static void SetGridSpacing(GridLayoutGroup com, float spacingX, float spacingY)
		{
		}

		[Token(Token = "0x60020CD")]
		[Address(RVA = "0xC9E450", Offset = "0xC9E450", VA = "0xC9E450")]
		public static void SetCompEnable(Behaviour comp, bool isActive)
		{
		}

		[Token(Token = "0x60020CE")]
		[Address(RVA = "0xC9E46C", Offset = "0xC9E46C", VA = "0xC9E46C")]
		public static CanvasGroup GetCanvasGroup(Component comp)
		{
			return null;
		}

		[Token(Token = "0x60020CF")]
		[Address(RVA = "0xC9E4C4", Offset = "0xC9E4C4", VA = "0xC9E4C4")]
		public static CanvasGroup GetCanvasGroupByGO(GameObject go)
		{
			return null;
		}

		[Token(Token = "0x60020D0")]
		[Address(RVA = "0xC9E51C", Offset = "0xC9E51C", VA = "0xC9E51C")]
		public static bool GetParentCanvasEnabledByGO(GameObject go)
		{
			return default(bool);
		}

		[Token(Token = "0x60020D1")]
		[Address(RVA = "0xC9E5FC", Offset = "0xC9E5FC", VA = "0xC9E5FC")]
		public static void SetCanvasGroupAlpha(CanvasGroup comp, float alpha)
		{
		}

		[Token(Token = "0x60020D2")]
		[Address(RVA = "0xC9E614", Offset = "0xC9E614", VA = "0xC9E614")]
		public static void SetGeneralColor(GameObject go, float a)
		{
		}

		[Token(Token = "0x60020D3")]
		[Address(RVA = "0xC9E790", Offset = "0xC9E790", VA = "0xC9E790")]
		public static void SetGeneralGray(GameObject go, bool isGray)
		{
		}

		[Token(Token = "0x60020D4")]
		[Address(RVA = "0xC9E928", Offset = "0xC9E928", VA = "0xC9E928")]
		public static void PlayAni(GameObject go, string name)
		{
		}

		[Token(Token = "0x60020D5")]
		[Address(RVA = "0xC9EA18", Offset = "0xC9EA18", VA = "0xC9EA18")]
		public static float GetAniTime(GameObject go, string name)
		{
			return default(float);
		}

		[Token(Token = "0x60020D6")]
		[Address(RVA = "0xC9EB18", Offset = "0xC9EB18", VA = "0xC9EB18")]
		public static void RestartTween(string id)
		{
		}

		[Token(Token = "0x60020D7")]
		[Address(RVA = "0xC9EB84", Offset = "0xC9EB84", VA = "0xC9EB84")]
		[NoToLua]
		public static void ReloadChild(this GameObject parent, GameObject prefab, int count, [Optional] ReloadChildCompoent.OnFillItem onFillItem, [Optional] ReloadChildCompoent.OnInitItem onIniteItem)
		{
		}

		[Token(Token = "0x60020D8")]
		[Address(RVA = "0xC9EBD0", Offset = "0xC9EBD0", VA = "0xC9EBD0")]
		public static void ReloadLuaChild(this GameObject parent, GameObject prefab, int count, LuaFunction onCreate, LuaFunction onFill, LuaFunction onComplete, bool isSync)
		{
		}

		[Token(Token = "0x60020D9")]
		[Address(RVA = "0xC9EC1C", Offset = "0xC9EC1C", VA = "0xC9EC1C")]
		public static void ReloadLuaChildWithPath(this GameObject parent, string path, int count, LuaFunction onCreate, LuaFunction onFill, LuaFunction onComplete, bool isSync)
		{
		}

		[Token(Token = "0x60020DA")]
		[Address(RVA = "0xC9EC68", Offset = "0xC9EC68", VA = "0xC9EC68")]
		public static void SetGridConstraintCount(GameObject go, int count)
		{
		}

		[Token(Token = "0x60020DB")]
		[Address(RVA = "0xC9ECDC", Offset = "0xC9ECDC", VA = "0xC9ECDC")]
		public static int GetTextFontSize(GameObject gameObject)
		{
			return default(int);
		}

		[Token(Token = "0x60020DC")]
		[Address(RVA = "0xC9ED90", Offset = "0xC9ED90", VA = "0xC9ED90")]
		public static void SetTextFontSize(GameObject gameObject, int size)
		{
		}

		[Token(Token = "0x60020DD")]
		[Address(RVA = "0xC9EE54", Offset = "0xC9EE54", VA = "0xC9EE54")]
		public static void PlayAnimator(Animator comp, string name)
		{
		}

		[Token(Token = "0x60020DE")]
		[Address(RVA = "0xC9EE74", Offset = "0xC9EE74", VA = "0xC9EE74")]
		public static void PlayAnimatorPause(Animator comp, string name)
		{
		}

		[Token(Token = "0x60020DF")]
		[Address(RVA = "0xC9EEB4", Offset = "0xC9EEB4", VA = "0xC9EEB4")]
		public static void KillTween(Tween tween)
		{
		}
	}
	[Token(Token = "0x2000265")]
	public class RecordMgr__HAIBAO__SWORD__
	{
		[Token(Token = "0x4000A84")]
		private const string reyunAppId = "aaf01a834e864010b0b4232816f9eac2";

		[Token(Token = "0x4000A85")]
		private const string iosReyunAppid = "7a381f372d957d02e2e45d5b088b6437";

		[Token(Token = "0x4000A86")]
		private const string editorAppid = "82791345111c7b1770cada241819e728";

		[Token(Token = "0x4000A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool IsRequest;

		[Token(Token = "0x4000A88")]
		public const int Starter_Start = 1;

		[Token(Token = "0x4000A89")]
		public const int Starter_Start_End = 2;

		[Token(Token = "0x4000A8A")]
		public const int TaskPackage = 3;

		[Token(Token = "0x4000A8B")]
		public const int TaskDiffManifest_remote = 4;

		[Token(Token = "0x4000A8C")]
		public const int TaskDiffManifest_Finish = 5;

		[Token(Token = "0x4000A8D")]
		public const int TaskDiffManifest_CheckLuaBundle = 6;

		[Token(Token = "0x4000A8E")]
		public const int TaskDiffManifest_Diff = 7;

		[Token(Token = "0x4000A8F")]
		public const int TaskDiffManifest_Download = 8;

		[Token(Token = "0x4000A90")]
		public const int TaskDiffManifest_UpdateManifest = 9;

		[Token(Token = "0x4000A91")]
		public const int TaskDiffManifest_remote1 = 10;

		[Token(Token = "0x4000A92")]
		public const int TaskDiffManifest_RemoteMD5 = 11;

		[Token(Token = "0x60020E0")]
		[Address(RVA = "0xBD9C04", Offset = "0xBD9C04", VA = "0xBD9C04")]
		public static void Init(string channel)
		{
		}

		[Token(Token = "0x60020E1")]
		[Address(RVA = "0xBD9D18", Offset = "0xBD9D18", VA = "0xBD9D18")]
		public static void RecordMemory()
		{
		}

		[Token(Token = "0x60020E2")]
		[Address(RVA = "0xBD9F1C", Offset = "0xBD9F1C", VA = "0xBD9F1C")]
		public static void SendRecord(int value)
		{
		}

		[Token(Token = "0x60020E3")]
		[Address(RVA = "0xBDA1D4", Offset = "0xBDA1D4", VA = "0xBDA1D4")]
		public static void OnHttpCallback(int state, string data)
		{
		}

		[Token(Token = "0x60020E4")]
		[Address(RVA = "0xBDA1D8", Offset = "0xBDA1D8", VA = "0xBDA1D8")]
		public RecordMgr__HAIBAO__SWORD__()
		{
		}
	}
}
namespace Sword.Framework
{
	[Token(Token = "0x2000266")]
	public class Const
	{
		[Token(Token = "0x4000A93")]
		public const string ManifestName = "NewManifest.txt";

		[Token(Token = "0x4000A94")]
		public const string ManifestMd5Name = "NewManifestMD5.txt";

		[Token(Token = "0x4000A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Vector2 ResolutionSize;

		[Token(Token = "0x4000A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Vector2 UIScreenSize;

		[Token(Token = "0x4000A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Camera UIMainCamera;

		[Token(Token = "0x4000A98")]
		public const string AtlasPath = "atlas/atlas";

		[Token(Token = "0x60020E6")]
		[Address(RVA = "0xC2213C", Offset = "0xC2213C", VA = "0xC2213C")]
		public Const()
		{
		}
	}
	[Token(Token = "0x2000267")]
	public static class Util
	{
		[Token(Token = "0x60020E8")]
		[Address(RVA = "0xCB3680", Offset = "0xCB3680", VA = "0xCB3680")]
		public static string MainifestToString(byte[] temp)
		{
			return null;
		}

		[Token(Token = "0x60020E9")]
		[Address(RVA = "0xCB369C", Offset = "0xCB369C", VA = "0xCB369C")]
		public static byte[] MainifestToByte(string str)
		{
			return null;
		}

		[Token(Token = "0x60020EA")]
		[Address(RVA = "0xCB36B8", Offset = "0xCB36B8", VA = "0xCB36B8")]
		public static void WriteManifestByStr(string str, string file)
		{
		}

		[Token(Token = "0x60020EB")]
		public static Dictionary<string, int> GetEnumDic<T>()
		{
			return null;
		}

		[Token(Token = "0x60020EC")]
		[Address(RVA = "0xCB36EC", Offset = "0xCB36EC", VA = "0xCB36EC")]
		public static Dictionary<string, int> GetEnumDic(Type type)
		{
			return null;
		}

		[Token(Token = "0x60020ED")]
		public static string[] GetNamesArr<T>()
		{
			return null;
		}

		[Token(Token = "0x60020EE")]
		[Address(RVA = "0xCB383C", Offset = "0xCB383C", VA = "0xCB383C")]
		public static string[] GetNamesArr(Type t)
		{
			return null;
		}

		[Token(Token = "0x60020EF")]
		[Address(RVA = "0xCB38A4", Offset = "0xCB38A4", VA = "0xCB38A4")]
		public static string Seconds2TimeFormat(int seconds)
		{
			return null;
		}

		[Token(Token = "0x60020F0")]
		[Address(RVA = "0xCB3964", Offset = "0xCB3964", VA = "0xCB3964")]
		public static void DestroySelf(GameObject obj)
		{
		}

		[Token(Token = "0x60020F1")]
		[Address(RVA = "0xCB3A04", Offset = "0xCB3A04", VA = "0xCB3A04")]
		public static void DestoryObject(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x60020F2")]
		[Address(RVA = "0xCB3AA4", Offset = "0xCB3AA4", VA = "0xCB3AA4")]
		public static Vector3 ToVec3(this LuaTable vec3)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60020F3")]
		[Address(RVA = "0xCB3B8C", Offset = "0xCB3B8C", VA = "0xCB3B8C")]
		public static Vector4 ToVec4(this LuaTable vec3)
		{
			return default(Vector4);
		}
	}
	[Token(Token = "0x2000268")]
	internal class UtilView
	{
		[Token(Token = "0x60020F4")]
		[Address(RVA = "0xCB3CA0", Offset = "0xCB3CA0", VA = "0xCB3CA0")]
		public static void SetAlpha(Graphic comp, float alpha)
		{
		}

		[Token(Token = "0x60020F5")]
		[Address(RVA = "0xCB3CF4", Offset = "0xCB3CF4", VA = "0xCB3CF4")]
		public static void SetParent(GameObject go, GameObject target)
		{
		}

		[Token(Token = "0x60020F6")]
		[Address(RVA = "0xCB3E3C", Offset = "0xCB3E3C", VA = "0xCB3E3C")]
		public UtilView()
		{
		}
	}
	[Token(Token = "0x2000269")]
	public class UICamera : QSingleton<UICamera>
	{
		[Token(Token = "0x4000A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Camera _uiMainCamera;

		[Token(Token = "0x1700010E")]
		public Camera UIMainCamera
		{
			[Token(Token = "0x60020F8")]
			[Address(RVA = "0xCB298C", Offset = "0xCB298C", VA = "0xCB298C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020F7")]
		[Address(RVA = "0xCB291C", Offset = "0xCB291C", VA = "0xCB291C")]
		public UICamera()
		{
		}

		[Token(Token = "0x60020F9")]
		[Address(RVA = "0xCB2A38", Offset = "0xCB2A38", VA = "0xCB2A38")]
		[ExportToLuaAttrbute]
		public Vector2 FromScenePoint(Vector3 scenePoint, Camera cam)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60020FA")]
		[Address(RVA = "0xCB2B18", Offset = "0xCB2B18", VA = "0xCB2B18")]
		public Vector3 GetRectPos(Vector3 scenePos, RectTransform canvasRect)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60020FB")]
		[Address(RVA = "0xCB2C94", Offset = "0xCB2C94", VA = "0xCB2C94")]
		public Vector2 GetRectLocalPos(Vector3 scenePos, RectTransform canvasRect)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60020FC")]
		[Address(RVA = "0xCB2E00", Offset = "0xCB2E00", VA = "0xCB2E00")]
		public Vector3 GetRectLocalPos(RectTransform rectTransform, Vector3 screenPos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60020FD")]
		[Address(RVA = "0xCB2F14", Offset = "0xCB2F14", VA = "0xCB2F14")]
		[ExportToLuaAttrbute]
		public Vector3 FromScreenPoint(Vector3 screenPoint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60020FE")]
		[Address(RVA = "0xCB2F5C", Offset = "0xCB2F5C", VA = "0xCB2F5C")]
		[ExportToLuaAttrbute]
		public Vector3 WorldToScreenPoint(Vector3 worldPos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60020FF")]
		[Address(RVA = "0xCB2FA4", Offset = "0xCB2FA4", VA = "0xCB2FA4")]
		public void Shake2DCamera(float shakeLevelPara, float shakeTimePara, float shakeFpsPara)
		{
		}
	}
	[Token(Token = "0x200026A")]
	public class DragScrollViewItem : MonoBehaviour
	{
		[Token(Token = "0x4000A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ScrollRectEx _scrollView;

		[Token(Token = "0x4000A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RectTransform dragTarget;

		[Token(Token = "0x4000A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private LuaFunction beginDragCallBack;

		[Token(Token = "0x4000A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private LuaFunction dragCallBack;

		[Token(Token = "0x4000A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private LuaFunction dragEndCallBack;

		[Token(Token = "0x4000A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool IsDragging;

		[Token(Token = "0x6002100")]
		[Address(RVA = "0xD74330", Offset = "0xD74330", VA = "0xD74330")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002101")]
		[Address(RVA = "0xD743D4", Offset = "0xD743D4", VA = "0xD743D4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002102")]
		[Address(RVA = "0xD74650", Offset = "0xD74650", VA = "0xD74650")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002103")]
		[Address(RVA = "0xD74654", Offset = "0xD74654", VA = "0xD74654")]
		private void CleanUpCheck()
		{
		}

		[Token(Token = "0x6002104")]
		[Address(RVA = "0xD74738", Offset = "0xD74738", VA = "0xD74738")]
		public void SetCallBack(LuaFunction _beginDragCallBack, LuaFunction _dragCallBack, LuaFunction dragEnd)
		{
		}

		[Token(Token = "0x6002105")]
		[Address(RVA = "0xD74744", Offset = "0xD74744", VA = "0xD74744")]
		public void OnEndDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002106")]
		[Address(RVA = "0xD7481C", Offset = "0xD7481C", VA = "0xD7481C")]
		public void OnApplicationPause(bool paused)
		{
		}

		[Token(Token = "0x6002107")]
		[Address(RVA = "0xD74820", Offset = "0xD74820", VA = "0xD74820")]
		private void HandlePause()
		{
		}

		[Token(Token = "0x6002108")]
		[Address(RVA = "0xD74904", Offset = "0xD74904", VA = "0xD74904")]
		private void OnApplicationFocus(bool focus)
		{
		}

		[Token(Token = "0x6002109")]
		[Address(RVA = "0xD74908", Offset = "0xD74908", VA = "0xD74908")]
		public void OnBeginDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600210A")]
		[Address(RVA = "0xD74A94", Offset = "0xD74A94", VA = "0xD74A94")]
		private Vector3 WorldPos(PointerEventData eventData)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600210B")]
		[Address(RVA = "0xD74B58", Offset = "0xD74B58", VA = "0xD74B58")]
		public void OnDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600210C")]
		[Address(RVA = "0xD74CAC", Offset = "0xD74CAC", VA = "0xD74CAC")]
		public DragScrollViewItem()
		{
		}
	}
	[Token(Token = "0x200026B")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x93F428", Offset = "0x93F428")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x93F428", Offset = "0x93F428")]
	public class PageIndex : SBehaviour
	{
		[Token(Token = "0x4000AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject template;

		[Token(Token = "0x4000AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<GameObject, Toggle> childs;

		[Token(Token = "0x4000AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int curPage;

		[Token(Token = "0x4000AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int _count;

		[Token(Token = "0x4000AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool inited;

		[Token(Token = "0x1700010F")]
		public int Count
		{
			[Token(Token = "0x600210D")]
			[Address(RVA = "0xD82228", Offset = "0xD82228", VA = "0xD82228")]
			set
			{
			}
		}

		[Token(Token = "0x600210E")]
		[Address(RVA = "0xD8234C", Offset = "0xD8234C", VA = "0xD8234C")]
		public void OnPage(int page)
		{
		}

		[Token(Token = "0x600210F")]
		[Address(RVA = "0xD8241C", Offset = "0xD8241C", VA = "0xD8241C")]
		private void onInitItem(GameObject go, int index)
		{
		}

		[Token(Token = "0x6002110")]
		[Address(RVA = "0xD8251C", Offset = "0xD8251C", VA = "0xD8251C")]
		private void onFillItem(GameObject go, int index)
		{
		}

		[Token(Token = "0x6002111")]
		[Address(RVA = "0xD825A0", Offset = "0xD825A0", VA = "0xD825A0", Slot = "5")]
		protected override void InitMono()
		{
		}

		[Token(Token = "0x6002112")]
		[Address(RVA = "0xD826D0", Offset = "0xD826D0", VA = "0xD826D0", Slot = "6")]
		public override void DestroyMono()
		{
		}

		[Token(Token = "0x6002113")]
		[Address(RVA = "0xD826D4", Offset = "0xD826D4", VA = "0xD826D4")]
		public PageIndex()
		{
		}
	}
	[Token(Token = "0x200026C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x93F4B4", Offset = "0x93F4B4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x93F4B4", Offset = "0x93F4B4")]
	[DisallowMultipleComponent]
	public class PageView : UIBehaviour
	{
		[Token(Token = "0x2000409")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9404B0", Offset = "0x9404B0")]
		private sealed class <>c__DisplayClass14_0
		{
			[Token(Token = "0x400108B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PageView <>4__this;

			[Token(Token = "0x400108C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LuaFunction onCreateItem;

			[Token(Token = "0x400108D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LuaFunction onFillItem;

			[Token(Token = "0x6002DF0")]
			[Address(RVA = "0xD82BD0", Offset = "0xD82BD0", VA = "0xD82BD0")]
			public <>c__DisplayClass14_0()
			{
			}

			[Token(Token = "0x6002DF1")]
			[Address(RVA = "0xD84104", Offset = "0xD84104", VA = "0xD84104")]
			internal void <Set>b__0(Resource res, object data)
			{
			}
		}

		[Token(Token = "0x200040A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9404C0", Offset = "0x9404C0")]
		private sealed class <>c__DisplayClass27_0
		{
			[Token(Token = "0x400108E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PageView <>4__this;

			[Token(Token = "0x400108F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject go;

			[Token(Token = "0x6002DF2")]
			[Address(RVA = "0xD83988", Offset = "0xD83988", VA = "0xD83988")]
			public <>c__DisplayClass27_0()
			{
			}

			[Token(Token = "0x6002DF3")]
			[Address(RVA = "0xD8426C", Offset = "0xD8426C", VA = "0xD8426C")]
			internal void <onCreateItem>b__0(GameObject childGo, int childIndex)
			{
			}
		}

		[Token(Token = "0x4000AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private WrapContent wrap;

		[Token(Token = "0x4000AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private PageViewConfig pageViewConfig;

		[Token(Token = "0x4000AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ScrollRectEx scrollRect;

		[Token(Token = "0x4000AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject childModel;

		[Token(Token = "0x4000AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private LuaFunction onCreateSubItem;

		[Token(Token = "0x4000AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private LuaFunction onFillSubItem;

		[Token(Token = "0x4000AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int count;

		[Token(Token = "0x4000AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int moveToIndex;

		[Token(Token = "0x4000AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int lastIndex;

		[Token(Token = "0x4000AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<GameObject, ReloadChildCompoent> compDic;

		[Token(Token = "0x4000AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<GameObject, int> indexDic;

		[Token(Token = "0x4000AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Resource res;

		[Token(Token = "0x17000110")]
		public int Count
		{
			[Token(Token = "0x6002119")]
			[Address(RVA = "0xD82D5C", Offset = "0xD82D5C", VA = "0xD82D5C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600211A")]
			[Address(RVA = "0xD82D64", Offset = "0xD82D64", VA = "0xD82D64")]
			set
			{
			}
		}

		[Token(Token = "0x17000111")]
		private int PageCount
		{
			[Token(Token = "0x600212A")]
			[Address(RVA = "0xD82E68", Offset = "0xD82E68", VA = "0xD82E68")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6002114")]
		[Address(RVA = "0xD8274C", Offset = "0xD8274C", VA = "0xD8274C")]
		public void Set(GameObject prefab, LuaFunction onCreateItem, LuaFunction onFillItem)
		{
		}

		[Token(Token = "0x6002115")]
		[Address(RVA = "0xD82A5C", Offset = "0xD82A5C", VA = "0xD82A5C")]
		public int GetIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6002116")]
		[Address(RVA = "0xD82A78", Offset = "0xD82A78", VA = "0xD82A78")]
		public void Set(string path, LuaFunction onCreateItem, LuaFunction onFillItem)
		{
		}

		[Token(Token = "0x6002117")]
		[Address(RVA = "0xD82BD8", Offset = "0xD82BD8", VA = "0xD82BD8")]
		public void ScollTo(int index)
		{
		}

		[Token(Token = "0x6002118")]
		[Address(RVA = "0xD82C9C", Offset = "0xD82C9C", VA = "0xD82C9C")]
		public void MoveToIndex(int index)
		{
		}

		[Token(Token = "0x600211B")]
		[Address(RVA = "0xD82D6C", Offset = "0xD82D6C", VA = "0xD82D6C")]
		public void SetCellCount(int cellCount, bool isRePosition = true)
		{
		}

		[Token(Token = "0x600211C")]
		[Address(RVA = "0xD82F4C", Offset = "0xD82F4C", VA = "0xD82F4C", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600211D")]
		[Address(RVA = "0xD83210", Offset = "0xD83210", VA = "0xD83210", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600211E")]
		[Address(RVA = "0xD83364", Offset = "0xD83364", VA = "0xD83364")]
		private void _onBeginDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600211F")]
		[Address(RVA = "0xD83398", Offset = "0xD83398", VA = "0xD83398")]
		private void _onEndDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002120")]
		[Address(RVA = "0xD83420", Offset = "0xD83420", VA = "0xD83420")]
		private void _checkCenterByDistance(int curIndex)
		{
		}

		[Token(Token = "0x6002121")]
		[Address(RVA = "0xD83658", Offset = "0xD83658", VA = "0xD83658")]
		private void _checkCenterBySpeed(int curIndex)
		{
		}

		[Token(Token = "0x6002122")]
		[Address(RVA = "0xD83798", Offset = "0xD83798", VA = "0xD83798")]
		private void onCreateItem(GameObject go)
		{
		}

		[Token(Token = "0x6002123")]
		[Address(RVA = "0xD828B0", Offset = "0xD828B0", VA = "0xD828B0")]
		public void RefreshConfig()
		{
		}

		[Token(Token = "0x6002124")]
		[Address(RVA = "0xD83AD0", Offset = "0xD83AD0", VA = "0xD83AD0")]
		private void onFillItem(GameObject go, int index)
		{
		}

		[Token(Token = "0x6002125")]
		[Address(RVA = "0xD83D90", Offset = "0xD83D90", VA = "0xD83D90")]
		private void onCenterIndex(GameObject go, int index)
		{
		}

		[Token(Token = "0x6002126")]
		[Address(RVA = "0xD83DA8", Offset = "0xD83DA8", VA = "0xD83DA8", Slot = "17")]
		protected virtual void OnPage(int page)
		{
		}

		[Token(Token = "0x6002127")]
		[Address(RVA = "0xD82E98", Offset = "0xD82E98", VA = "0xD82E98")]
		private void onNewCount(int count)
		{
		}

		[Token(Token = "0x6002128")]
		[Address(RVA = "0xD83E5C", Offset = "0xD83E5C", VA = "0xD83E5C")]
		private void onCreateSubChild(GameObject go, int index)
		{
		}

		[Token(Token = "0x6002129")]
		[Address(RVA = "0xD83EF0", Offset = "0xD83EF0", VA = "0xD83EF0")]
		private void onFillSubChild(GameObject go, int index)
		{
		}

		[Token(Token = "0x600212B")]
		[Address(RVA = "0xD83FB0", Offset = "0xD83FB0", VA = "0xD83FB0")]
		public void AddCenterListener(WrapContent.OnCenterItem oncenter)
		{
		}

		[Token(Token = "0x600212C")]
		[Address(RVA = "0xD83FCC", Offset = "0xD83FCC", VA = "0xD83FCC", Slot = "8")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x600212D")]
		[Address(RVA = "0xD84064", Offset = "0xD84064", VA = "0xD84064")]
		public PageView()
		{
		}
	}
	[Token(Token = "0x200026D")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x93F550", Offset = "0x93F550")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x93F550", Offset = "0x93F550")]
	[DisallowMultipleComponent]
	public class PageViewConfig : SBehaviour
	{
		[Token(Token = "0x200040B")]
		public enum eMoveType
		{
			[Token(Token = "0x4001091")]
			Speed,
			[Token(Token = "0x4001092")]
			Distance
		}

		[Token(Token = "0x4000AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public eMoveType MoveType;

		[Token(Token = "0x4000AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector2 CellSize;

		[Token(Token = "0x4000AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector2 Spacing;

		[Token(Token = "0x4000AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int maxPerLine;

		[Token(Token = "0x4000AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int EachPageCount;

		[Token(Token = "0x4000AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public PageIndex pageIndex;

		[Token(Token = "0x4000AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool isInited;

		[Token(Token = "0x4000AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject Template;

		[Token(Token = "0x4000AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float move2NextSpeed;

		[Token(Token = "0x4000ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float MoveDistance;

		[Token(Token = "0x4000ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool IsFullSize;

		[Token(Token = "0x600212E")]
		[Address(RVA = "0xD84344", Offset = "0xD84344", VA = "0xD84344", Slot = "5")]
		protected override void InitMono()
		{
		}

		[Token(Token = "0x600212F")]
		[Address(RVA = "0xD84348", Offset = "0xD84348", VA = "0xD84348", Slot = "6")]
		public override void DestroyMono()
		{
		}

		[Token(Token = "0x6002130")]
		[Address(RVA = "0xD8434C", Offset = "0xD8434C", VA = "0xD8434C")]
		public PageViewConfig()
		{
		}
	}
	[Token(Token = "0x200026E")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x93F5E8", Offset = "0x93F5E8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x93F5E8", Offset = "0x93F5E8")]
	[DisallowMultipleComponent]
	public class WrapContent : UIBehaviour
	{
		[Token(Token = "0x200040C")]
		public delegate void OnFillItem(GameObject go, int index);

		[Token(Token = "0x200040D")]
		public delegate void OnCreateItem(GameObject go);

		[Token(Token = "0x200040E")]
		public delegate void OnCenterItem(GameObject go, int index);

		[Token(Token = "0x200040F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9404D0", Offset = "0x9404D0")]
		private sealed class <>c__DisplayClass46_0
		{
			[Token(Token = "0x4001093")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LuaFunction onCreateItem;

			[Token(Token = "0x4001094")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LuaFunction onFillItem;

			[Token(Token = "0x6002E00")]
			[Address(RVA = "0xCB407C", Offset = "0xCB407C", VA = "0xCB407C")]
			public <>c__DisplayClass46_0()
			{
			}

			[Token(Token = "0x6002E01")]
			[Address(RVA = "0xCB931C", Offset = "0xCB931C", VA = "0xCB931C")]
			internal void <Init>b__0(GameObject go)
			{
			}

			[Token(Token = "0x6002E02")]
			[Address(RVA = "0xCB9384", Offset = "0xCB9384", VA = "0xCB9384")]
			internal void <Init>b__1(GameObject go, int index)
			{
			}
		}

		[Token(Token = "0x2000410")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9404E0", Offset = "0x9404E0")]
		private sealed class <>c__DisplayClass48_0
		{
			[Token(Token = "0x4001095")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LuaFunction onCreateItem;

			[Token(Token = "0x4001096")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LuaFunction onFillItem;

			[Token(Token = "0x6002E03")]
			[Address(RVA = "0xCB42B0", Offset = "0xCB42B0", VA = "0xCB42B0")]
			public <>c__DisplayClass48_0()
			{
			}

			[Token(Token = "0x6002E04")]
			[Address(RVA = "0xCB93F4", Offset = "0xCB93F4", VA = "0xCB93F4")]
			internal void <Set>b__0(GameObject go)
			{
			}

			[Token(Token = "0x6002E05")]
			[Address(RVA = "0xCB945C", Offset = "0xCB945C", VA = "0xCB945C")]
			internal void <Set>b__1(GameObject go, int index)
			{
			}
		}

		[Token(Token = "0x2000411")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9404F0", Offset = "0x9404F0")]
		private sealed class <>c__DisplayClass50_0
		{
			[Token(Token = "0x4001097")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public WrapContent <>4__this;

			[Token(Token = "0x4001098")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public OnCreateItem onCreateItem;

			[Token(Token = "0x4001099")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OnFillItem onFillItem;

			[Token(Token = "0x6002E06")]
			[Address(RVA = "0xCB4B38", Offset = "0xCB4B38", VA = "0xCB4B38")]
			public <>c__DisplayClass50_0()
			{
			}

			[Token(Token = "0x6002E07")]
			[Address(RVA = "0xCB94CC", Offset = "0xCB94CC", VA = "0xCB94CC")]
			internal void <Set>b__0(Resource res, object datas)
			{
			}
		}

		[Token(Token = "0x2000412")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940500", Offset = "0x940500")]
		private sealed class <move>d__65 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400109A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400109B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400109C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WrapContent <>4__this;

			[Token(Token = "0x400109D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float endValue;

			[Token(Token = "0x400109E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <startValue>5__2;

			[Token(Token = "0x17000233")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E0B")]
				[Address(RVA = "0xCB9D50", Offset = "0xCB9D50", VA = "0xCB9D50", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000234")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E0D")]
				[Address(RVA = "0xCB9DB8", Offset = "0xCB9DB8", VA = "0xCB9DB8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E08")]
			[Address(RVA = "0xCB64C0", Offset = "0xCB64C0", VA = "0xCB64C0")]
			[DebuggerHidden]
			public <move>d__65(int <>1__state)
			{
			}

			[Token(Token = "0x6002E09")]
			[Address(RVA = "0xCB9B74", Offset = "0xCB9B74", VA = "0xCB9B74", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E0A")]
			[Address(RVA = "0xCB9B78", Offset = "0xCB9B78", VA = "0xCB9B78", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E0C")]
			[Address(RVA = "0xCB9D58", Offset = "0xCB9D58", VA = "0xCB9D58", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000413")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940510", Offset = "0x940510")]
		private sealed class <createChildInColoutine>d__110 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400109F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40010A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40010A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WrapContent <>4__this;

			[Token(Token = "0x40010A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isCreateCallback;

			[Token(Token = "0x40010A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <total>5__2;

			[Token(Token = "0x17000235")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E11")]
				[Address(RVA = "0xCB9B04", Offset = "0xCB9B04", VA = "0xCB9B04", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000236")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E13")]
				[Address(RVA = "0xCB9B6C", Offset = "0xCB9B6C", VA = "0xCB9B6C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E0E")]
			[Address(RVA = "0xCB85B0", Offset = "0xCB85B0", VA = "0xCB85B0")]
			[DebuggerHidden]
			public <createChildInColoutine>d__110(int <>1__state)
			{
			}

			[Token(Token = "0x6002E0F")]
			[Address(RVA = "0xCB982C", Offset = "0xCB982C", VA = "0xCB982C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E10")]
			[Address(RVA = "0xCB9830", Offset = "0xCB9830", VA = "0xCB9830", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E12")]
			[Address(RVA = "0xCB9B0C", Offset = "0xCB9B0C", VA = "0xCB9B0C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000414")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940520", Offset = "0x940520")]
		private sealed class <_updateAllChild>d__115 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40010A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40010A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40010A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WrapContent <>4__this;

			[Token(Token = "0x40010A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x40010A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <count>5__3;

			[Token(Token = "0x17000237")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E17")]
				[Address(RVA = "0xCB97BC", Offset = "0xCB97BC", VA = "0xCB97BC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000238")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E19")]
				[Address(RVA = "0xCB9824", Offset = "0xCB9824", VA = "0xCB9824", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E14")]
			[Address(RVA = "0xCB86A8", Offset = "0xCB86A8", VA = "0xCB86A8")]
			[DebuggerHidden]
			public <_updateAllChild>d__115(int <>1__state)
			{
			}

			[Token(Token = "0x6002E15")]
			[Address(RVA = "0xCB95C0", Offset = "0xCB95C0", VA = "0xCB95C0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E16")]
			[Address(RVA = "0xCB95C4", Offset = "0xCB95C4", VA = "0xCB95C4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E18")]
			[Address(RVA = "0xCB97C4", Offset = "0xCB97C4", VA = "0xCB97C4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject _childModel;

		[Token(Token = "0x4000ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string childPath;

		[Token(Token = "0x4000ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<RectTransform> childTrans;

		[Token(Token = "0x4000ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<RectTransform> _listTsForScale;

		[Token(Token = "0x4000AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int _cellWidth;

		[Token(Token = "0x4000AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[ExportToLuaAttrbute]
		public int _cellHeight;

		[Token(Token = "0x4000AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int _maxPerLine;

		[Token(Token = "0x4000AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int _cellCount;

		[Token(Token = "0x4000AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OnFillItem onFillItem;

		[Token(Token = "0x4000AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OnCreateItem onCreateItem;

		[Token(Token = "0x4000AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private OnCenterItem onCenterItem;

		[Token(Token = "0x4000AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private RectTransform mTrans;

		[Token(Token = "0x4000AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private RectTransform viewportTrans;

		[Token(Token = "0x4000AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool mHorizontal;

		[Token(Token = "0x4000ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int axis;

		[Token(Token = "0x4000ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int rowNum;

		[Token(Token = "0x4000ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int colNum;

		[Token(Token = "0x4000ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float extents;

		[Token(Token = "0x4000ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float mAllPageHeightOrWidth;

		[Token(Token = "0x4000ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector2 sizeDelta;

		[Token(Token = "0x4000AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector2 scrollSize;

		[Token(Token = "0x4000AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private ScrollRectEx scroll;

		[Token(Token = "0x4000AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Vector2 mFirstItemPos;

		[Token(Token = "0x4000AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector2 mStartGridRootPos;

		[Token(Token = "0x4000AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector2 mStartTranAnchoredPos;

		[Token(Token = "0x4000AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Resource _res;

		[Token(Token = "0x4000AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public int _moveToIndex;

		[Token(Token = "0x4000AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private bool isStarted;

		[Token(Token = "0x4000AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC5")]
		private bool initSuccess;

		[Token(Token = "0x4000AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC6")]
		private bool lastSetCountInUnVisible;

		[Token(Token = "0x4000ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Coroutine _coMove;

		[Token(Token = "0x4000ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private bool isCreattingChild;

		[Token(Token = "0x4000ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public int lastCenterIndex;

		[Token(Token = "0x4000ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool hasCenterListioner;

		[Token(Token = "0x4000ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
		private bool needRePosition;

		[Token(Token = "0x4000ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private WrapPrefabSize config;

		[Token(Token = "0x4000AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Vector3[] v3;

		[Token(Token = "0x4000AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private List<LuaFunction> luaFuns;

		[Token(Token = "0x4000AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public LuaFunction OnCreateFinish;

		[Token(Token = "0x4000AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private WrapContentCenterChild centerChild;

		[Token(Token = "0x4000AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private ScrollRectDragEvent _dragEvent;

		[Token(Token = "0x4000AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private bool IsNeedCreateFinish;

		[Token(Token = "0x4000AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static GameObject _emptyParent;

		[Token(Token = "0x4000AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private Vector2 LastScrollPos;

		[Token(Token = "0x4000AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Coroutine _coroutineOnUpdateAllChild;

		[Token(Token = "0x4000AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private WaitForSeconds _waitInCoroutine;

		[Token(Token = "0x4000AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private bool isDochangeLater;

		[Token(Token = "0x17000112")]
		private Vector3 centerPos
		{
			[Token(Token = "0x6002131")]
			[Address(RVA = "0xCB3E44", Offset = "0xCB3E44", VA = "0xCB3E44")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000113")]
		[ExportToLuaAttrbute]
		public virtual int Count
		{
			[Token(Token = "0x6002137")]
			[Address(RVA = "0xCB4B40", Offset = "0xCB4B40", VA = "0xCB4B40", Slot = "17")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002138")]
			[Address(RVA = "0xCB4B48", Offset = "0xCB4B48", VA = "0xCB4B48", Slot = "18")]
			set
			{
			}
		}

		[Token(Token = "0x17000114")]
		public GameObject ChildModel
		{
			[Token(Token = "0x600214F")]
			[Address(RVA = "0xCB6B20", Offset = "0xCB6B20", VA = "0xCB6B20")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002150")]
			[Address(RVA = "0xCB4414", Offset = "0xCB4414", VA = "0xCB4414")]
			set
			{
			}
		}

		[Token(Token = "0x17000115")]
		public static GameObject emptyParent
		{
			[Token(Token = "0x6002151")]
			[Address(RVA = "0xCB6B28", Offset = "0xCB6B28", VA = "0xCB6B28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000116")]
		public RectTransform CurCenterChild
		{
			[Token(Token = "0x6002167")]
			[Address(RVA = "0xCB78EC", Offset = "0xCB78EC", VA = "0xCB78EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000117")]
		public WaitForSeconds WaitInCoroutine
		{
			[Token(Token = "0x600216B")]
			[Address(RVA = "0xCB85DC", Offset = "0xCB85DC", VA = "0xCB85DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002132")]
		[Address(RVA = "0xCB3F30", Offset = "0xCB3F30", VA = "0xCB3F30")]
		public void Init(GameObject prefab, int _cellWidth, int _cellHeight, int _maxPerLine, LuaFunction onCreateItem, LuaFunction onFillItem)
		{
		}

		[Token(Token = "0x6002133")]
		[Address(RVA = "0xCB416C", Offset = "0xCB416C", VA = "0xCB416C")]
		public void Init(string resPath, int _cellWidth, int _cellHeight, int _maxPerLine, LuaFunction onCreateItem, LuaFunction onFillItem)
		{
		}

		[Token(Token = "0x6002134")]
		[Address(RVA = "0xCB4178", Offset = "0xCB4178", VA = "0xCB4178")]
		[ExportToLuaAttrbute]
		public void Set(string resPath, LuaFunction onCreateItem, LuaFunction onFillItem, int maxPerLine)
		{
		}

		[Token(Token = "0x6002135")]
		[Address(RVA = "0xCB4130", Offset = "0xCB4130", VA = "0xCB4130")]
		public void Set(GameObject prefab, OnCreateItem onCreateItem, OnFillItem onFillItem)
		{
		}

		[Token(Token = "0x6002136")]
		[Address(RVA = "0xCB42B8", Offset = "0xCB42B8", VA = "0xCB42B8")]
		public void Set(string resPath, OnCreateItem onCreateItem, OnFillItem onFillItem)
		{
		}

		[Token(Token = "0x6002139")]
		[Address(RVA = "0xCB4B60", Offset = "0xCB4B60", VA = "0xCB4B60")]
		public void AddCenterListener(OnCenterItem onCentter)
		{
		}

		[Token(Token = "0x600213A")]
		[Address(RVA = "0xCB4BE8", Offset = "0xCB4BE8", VA = "0xCB4BE8", Slot = "19")]
		public virtual void SetCellCount(int cellCount, bool isCallback, bool rePosition)
		{
		}

		[Token(Token = "0x600213B")]
		[Address(RVA = "0xCB56D8", Offset = "0xCB56D8", VA = "0xCB56D8")]
		private void CallCreateFinish(bool isCallCreate)
		{
		}

		[Token(Token = "0x600213C")]
		[Address(RVA = "0xCB5728", Offset = "0xCB5728", VA = "0xCB5728", Slot = "20")]
		[ExportToLuaAttrbute]
		public virtual void MoveToIndex(int index)
		{
		}

		[Token(Token = "0x600213D")]
		[Address(RVA = "0xCB5B9C", Offset = "0xCB5B9C", VA = "0xCB5B9C")]
		private Vector2 getNeedMove(int index)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600213E")]
		[Address(RVA = "0xCB5EE8", Offset = "0xCB5EE8", VA = "0xCB5EE8")]
		public void ScrollWithSpeed(int index, float speed)
		{
		}

		[Token(Token = "0x600213F")]
		[Address(RVA = "0xCB5F14", Offset = "0xCB5F14", VA = "0xCB5F14", Slot = "21")]
		public virtual void ScrollToIndex(int index, float speed = -1f)
		{
		}

		[Token(Token = "0x6002140")]
		[Address(RVA = "0xCB6144", Offset = "0xCB6144", VA = "0xCB6144", Slot = "22")]
		public virtual void ScrollMoveTo(Vector2 vect2)
		{
		}

		[Token(Token = "0x6002141")]
		[Address(RVA = "0xCB6310", Offset = "0xCB6310", VA = "0xCB6310", Slot = "23")]
		public virtual Vector2 GetNormalizedPosition()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002142")]
		[Address(RVA = "0xCB632C", Offset = "0xCB632C", VA = "0xCB632C", Slot = "24")]
		protected virtual float GetMoveDelta(float curValue, float endValue, float deltaTime, float startValue)
		{
			return default(float);
		}

		[Token(Token = "0x6002143")]
		[Address(RVA = "0xCB60C4", Offset = "0xCB60C4", VA = "0xCB60C4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A7D24", Offset = "0x9A7D24")]
		private IEnumerator move(float endValue)
		{
			return null;
		}

		[Token(Token = "0x6002144")]
		[Address(RVA = "0xCB5B38", Offset = "0xCB5B38", VA = "0xCB5B38")]
		public void StopScroll(bool isStopScrollRectEx = true)
		{
		}

		[Token(Token = "0x6002145")]
		[Address(RVA = "0xCB64EC", Offset = "0xCB64EC", VA = "0xCB64EC", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6002146")]
		[Address(RVA = "0xCB64F8", Offset = "0xCB64F8", VA = "0xCB64F8", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002147")]
		[Address(RVA = "0xCB67B4", Offset = "0xCB67B4", VA = "0xCB67B4", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6002148")]
		[Address(RVA = "0xCB6824", Offset = "0xCB6824", VA = "0xCB6824", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6002149")]
		[Address(RVA = "0xCB684C", Offset = "0xCB684C", VA = "0xCB684C")]
		public void UnLoad()
		{
		}

		[Token(Token = "0x600214A")]
		[Address(RVA = "0xCB68FC", Offset = "0xCB68FC", VA = "0xCB68FC", Slot = "8")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x600214B")]
		[Address(RVA = "0xCB4084", Offset = "0xCB4084", VA = "0xCB4084")]
		private void addLuaFun(LuaFunction fun)
		{
		}

		[Token(Token = "0x600214C")]
		[Address(RVA = "0xCB6A68", Offset = "0xCB6A68", VA = "0xCB6A68")]
		private void ClearLuaFunction()
		{
		}

		[Token(Token = "0x600214D")]
		[Address(RVA = "0xCB6B14", Offset = "0xCB6B14", VA = "0xCB6B14")]
		private void _onBeginDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600214E")]
		[Address(RVA = "0xCB6B1C", Offset = "0xCB6B1C", VA = "0xCB6B1C")]
		public void UpdateData()
		{
		}

		[Token(Token = "0x6002152")]
		[Address(RVA = "0xCB6C04", Offset = "0xCB6C04", VA = "0xCB6C04")]
		private void ResetAllItem()
		{
		}

		[Token(Token = "0x6002153")]
		[Address(RVA = "0xCB6FA8", Offset = "0xCB6FA8", VA = "0xCB6FA8", Slot = "25")]
		public virtual void OnChange(Vector2 v2)
		{
		}

		[Token(Token = "0x6002154")]
		[Address(RVA = "0xCB6F44", Offset = "0xCB6F44", VA = "0xCB6F44")]
		private void SetVisible(GameObject go, bool isVisible)
		{
		}

		[Token(Token = "0x6002155")]
		[Address(RVA = "0xCB72C4", Offset = "0xCB72C4", VA = "0xCB72C4")]
		private bool isVisible(Transform tran)
		{
			return default(bool);
		}

		[Token(Token = "0x6002156")]
		[Address(RVA = "0xCB7378", Offset = "0xCB7378", VA = "0xCB7378")]
		private void doScale()
		{
		}

		[Token(Token = "0x6002157")]
		[Address(RVA = "0xCB75EC", Offset = "0xCB75EC", VA = "0xCB75EC")]
		private void _sibling()
		{
		}

		[Token(Token = "0x6002158")]
		[Address(RVA = "0xCB7770", Offset = "0xCB7770", VA = "0xCB7770")]
		private int _sortScale(RectTransform a, RectTransform b)
		{
			return default(int);
		}

		[Token(Token = "0x6002159")]
		[Address(RVA = "0xCB77F4", Offset = "0xCB77F4", VA = "0xCB77F4")]
		private void dispCenter()
		{
		}

		[Token(Token = "0x600215A")]
		[Address(RVA = "0xCB44C8", Offset = "0xCB44C8", VA = "0xCB44C8")]
		public void doInit()
		{
		}

		[Token(Token = "0x600215B")]
		[Address(RVA = "0xCB7F10", Offset = "0xCB7F10", VA = "0xCB7F10")]
		public void SetCellSize(Vector2 cellSize)
		{
		}

		[Token(Token = "0x600215C")]
		[Address(RVA = "0xCB7F2C", Offset = "0xCB7F2C", VA = "0xCB7F2C")]
		[ExportToLuaAttrbute]
		public void SetCellSize(int width, int height)
		{
		}

		[Token(Token = "0x600215D")]
		[Address(RVA = "0xCB7E9C", Offset = "0xCB7E9C", VA = "0xCB7E9C")]
		public void RefreshCellSize()
		{
		}

		[Token(Token = "0x600215E")]
		[Address(RVA = "0xCB5014", Offset = "0xCB5014", VA = "0xCB5014")]
		private void SetFirstItemPos()
		{
		}

		[Token(Token = "0x600215F")]
		[Address(RVA = "0xCB4DFC", Offset = "0xCB4DFC", VA = "0xCB4DFC")]
		private void setSize()
		{
		}

		[Token(Token = "0x6002160")]
		[Address(RVA = "0xCB52BC", Offset = "0xCB52BC", VA = "0xCB52BC")]
		private void Resetposition(bool update = true, bool isForceUpdate = false)
		{
		}

		[Token(Token = "0x6002161")]
		[Address(RVA = "0xCB7FD8", Offset = "0xCB7FD8", VA = "0xCB7FD8")]
		private Vector2 initPos(int childIndex)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002162")]
		[Address(RVA = "0xCB80A8", Offset = "0xCB80A8", VA = "0xCB80A8")]
		private void initNewChild(GameObject child)
		{
		}

		[Token(Token = "0x6002163")]
		[Address(RVA = "0xCB8294", Offset = "0xCB8294", VA = "0xCB8294")]
		private GameObject createNewChild(int index = 0)
		{
			return null;
		}

		[Token(Token = "0x6002164")]
		[Address(RVA = "0xCB6E0C", Offset = "0xCB6E0C", VA = "0xCB6E0C")]
		private int getIndex(Vector2 pos)
		{
			return default(int);
		}

		[Token(Token = "0x6002165")]
		[Address(RVA = "0xCB5D84", Offset = "0xCB5D84", VA = "0xCB5D84")]
		private Vector3 getPosByIndex(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002166")]
		[Address(RVA = "0xCB83D0", Offset = "0xCB83D0", VA = "0xCB83D0")]
		public int CurIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6002168")]
		[Address(RVA = "0xCB5598", Offset = "0xCB5598", VA = "0xCB5598")]
		private void _stopUpdateAllChild()
		{
		}

		[Token(Token = "0x6002169")]
		[Address(RVA = "0xCB5428", Offset = "0xCB5428", VA = "0xCB5428")]
		private void updateAllChild()
		{
		}

		[Token(Token = "0x600216A")]
		[Address(RVA = "0xCB5654", Offset = "0xCB5654", VA = "0xCB5654")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A7D98", Offset = "0x9A7D98")]
		private IEnumerator createChildInColoutine(bool isCreateCallback)
		{
			return null;
		}

		[Token(Token = "0x600216C")]
		[Address(RVA = "0xCB8664", Offset = "0xCB8664", VA = "0xCB8664")]
		private bool _isNeedWaitWithTime(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x600216D")]
		[Address(RVA = "0xCB847C", Offset = "0xCB847C", VA = "0xCB847C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A7DFC", Offset = "0x9A7DFC")]
		private IEnumerator _updateAllChild()
		{
			return null;
		}

		[Token(Token = "0x600216E")]
		[Address(RVA = "0xCB84EC", Offset = "0xCB84EC", VA = "0xCB84EC")]
		private void updateChild(RectTransform child)
		{
		}

		[Token(Token = "0x600216F")]
		[Address(RVA = "0xCB8284", Offset = "0xCB8284", VA = "0xCB8284")]
		private void callBackCreateItem(GameObject child)
		{
		}

		[Token(Token = "0x6002170")]
		[Address(RVA = "0xCB6F98", Offset = "0xCB6F98", VA = "0xCB6F98")]
		private void callBackFillItem(GameObject child, int index)
		{
		}

		[Token(Token = "0x6002171")]
		[Address(RVA = "0xCB8E74", Offset = "0xCB8E74", VA = "0xCB8E74")]
		private void setDirectVisible()
		{
		}

		[Token(Token = "0x6002172")]
		[Address(RVA = "0xCB7258", Offset = "0xCB7258", VA = "0xCB7258")]
		private void onPosChange()
		{
		}

		[Token(Token = "0x6002173")]
		[Address(RVA = "0xCB90E4", Offset = "0xCB90E4", VA = "0xCB90E4")]
		private void _reverseSibling()
		{
		}

		[Token(Token = "0x6002174")]
		[Address(RVA = "0xCB5EA0", Offset = "0xCB5EA0", VA = "0xCB5EA0")]
		private void SetGridRootPos(Vector2 pos)
		{
		}

		[Token(Token = "0x6002175")]
		[Address(RVA = "0xCB5E84", Offset = "0xCB5E84", VA = "0xCB5E84")]
		private Vector2 GetGridRootPos()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002176")]
		[Address(RVA = "0xCB91F4", Offset = "0xCB91F4", VA = "0xCB91F4")]
		public WrapContent()
		{
		}

		[Token(Token = "0x6002177")]
		[Address(RVA = "0xCB9314", Offset = "0xCB9314", VA = "0xCB9314")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7E60", Offset = "0x9A7E60")]
		private void <Awake>b__68_0(PointerEventData eventData)
		{
		}
	}
	[Token(Token = "0x200026F")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x93F680", Offset = "0x93F680")]
	[DisallowMultipleComponent]
	public class WrapPrefabSize : MonoBehaviour
	{
		[Token(Token = "0x2000415")]
		public enum eScrollType
		{
			[Token(Token = "0x40010AA")]
			Horizontal,
			[Token(Token = "0x40010AB")]
			Verticle
		}

		[Token(Token = "0x2000416")]
		public enum eCurTargeType
		{
			[Token(Token = "0x40010AD")]
			Center,
			[Token(Token = "0x40010AE")]
			Top
		}

		[Token(Token = "0x4000AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector2 CellSize;

		[Token(Token = "0x4000AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector2 Spacing;

		[Token(Token = "0x4000AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public eScrollType scrollType;

		[Token(Token = "0x4000AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public eCurTargeType curTargeType;

		[Token(Token = "0x4000AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int maxPerLine;

		[Token(Token = "0x4000AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool CenterAlignment;

		[Token(Token = "0x4000AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		private bool started;

		[Token(Token = "0x4000AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject Template;

		[Token(Token = "0x4000AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject DirectLeft;

		[Token(Token = "0x4000AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject DirectRight;

		[Token(Token = "0x4000AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool IsReverseSibling;

		[Token(Token = "0x4000AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool doScale;

		[Token(Token = "0x4000AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float minScale;

		[Token(Token = "0x4000AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float maxScale;

		[Token(Token = "0x4000AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public bool IsReversDirection;

		[Token(Token = "0x4000AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float speed;

		[Token(Token = "0x4000AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float prefabScale;

		[Token(Token = "0x4000AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool CreateChildInCoroutine;

		[Token(Token = "0x4000AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		public bool FillChildInCoroutine;

		[Token(Token = "0x4000AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float CoroutineWaitSeconds;

		[Token(Token = "0x4000AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public int CoroutineWaitCount;

		[Token(Token = "0x4000B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private WrapContent _content;

		[Token(Token = "0x4000B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool IsCenter;

		[Token(Token = "0x4000B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public AnimationCurve ScrollCurve;

		[Token(Token = "0x4000B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public int ForceChildCount;

		[Token(Token = "0x17000118")]
		private WrapContent content
		{
			[Token(Token = "0x6002178")]
			[Address(RVA = "0xCB9F50", Offset = "0xCB9F50", VA = "0xCB9F50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002179")]
		[Address(RVA = "0xCB9FF8", Offset = "0xCB9FF8", VA = "0xCB9FF8")]
		private void Start()
		{
		}

		[Token(Token = "0x600217A")]
		[Address(RVA = "0xCBA1DC", Offset = "0xCBA1DC", VA = "0xCBA1DC")]
		private void onClickLeft()
		{
		}

		[Token(Token = "0x600217B")]
		[Address(RVA = "0xCBA2AC", Offset = "0xCBA2AC", VA = "0xCBA2AC")]
		private void onClickRight()
		{
		}

		[Token(Token = "0x600217C")]
		[Address(RVA = "0xCBA37C", Offset = "0xCBA37C", VA = "0xCBA37C")]
		public WrapPrefabSize()
		{
		}
	}
	[Token(Token = "0x2000270")]
	public abstract class BaseMono : SBehaviour
	{
		[Token(Token = "0x600217D")]
		[Address(RVA = "0xC128C4", Offset = "0xC128C4", VA = "0xC128C4")]
		public void RunAction(int key)
		{
		}

		[Token(Token = "0x600217E")]
		public void RunAction<T>(int key, T data)
		{
		}

		[Token(Token = "0x600217F")]
		[Address(RVA = "0xC128F4", Offset = "0xC128F4", VA = "0xC128F4")]
		public void RunView(int key)
		{
		}

		[Token(Token = "0x6002180")]
		public void RunView<T>(int key, T data)
		{
		}

		[Token(Token = "0x6002181")]
		[Address(RVA = "0xC12924", Offset = "0xC12924", VA = "0xC12924")]
		protected BaseMono()
		{
		}
	}
	[Token(Token = "0x2000271")]
	public abstract class BaseView : BaseMono
	{
		[Token(Token = "0x6002182")]
		[Address(RVA = "0xC1292C", Offset = "0xC1292C", VA = "0xC1292C")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6002183")]
		[Address(RVA = "0xC12938", Offset = "0xC12938", VA = "0xC12938")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6002184")]
		public abstract void OnEnter();

		[Token(Token = "0x6002185")]
		public abstract void OnExit();

		[Token(Token = "0x6002186")]
		public abstract void OnBeginExit();

		[Token(Token = "0x6002187")]
		[Address(RVA = "0xC12944", Offset = "0xC12944", VA = "0xC12944")]
		public void View(int key)
		{
		}

		[Token(Token = "0x6002188")]
		public void View<T>(int key, T data)
		{
		}

		[Token(Token = "0x6002189")]
		[Address(RVA = "0xC12974", Offset = "0xC12974", VA = "0xC12974")]
		protected BaseView()
		{
		}
	}
	[Token(Token = "0x2000272")]
	internal interface IView__HAIBAO__SWORD__
	{
		[Token(Token = "0x600218A")]
		void BuildUI();

		[Token(Token = "0x600218B")]
		void OnEnter();

		[Token(Token = "0x600218C")]
		void OnExit();

		[Token(Token = "0x600218D")]
		void View(int key);

		[Token(Token = "0x600218E")]
		void View<T>(int key, T data);

		[Token(Token = "0x600218F")]
		void RunAction(int key);

		[Token(Token = "0x6002190")]
		void RunAction<T>(int key, T data);
	}
	[Token(Token = "0x2000273")]
	public class ComLuaResLoader
	{
		[Token(Token = "0x2000417")]
		private struct AssetsData
		{
			[Token(Token = "0x40010AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public LuaTable resTable;

			[Token(Token = "0x40010B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public LuaFunction func;
		}

		[Token(Token = "0x2000418")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940530", Offset = "0x940530")]
		private sealed class <PreCreate>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40010B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40010B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40010B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string[] paths;

			[Token(Token = "0x40010B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ComLuaResLoader <>4__this;

			[Token(Token = "0x40010B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public LuaFunction func;

			[Token(Token = "0x40010B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <i>5__2;

			[Token(Token = "0x17000239")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E1D")]
				[Address(RVA = "0xC136A0", Offset = "0xC136A0", VA = "0xC136A0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700023A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E1F")]
				[Address(RVA = "0xC13708", Offset = "0xC13708", VA = "0xC13708", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E1A")]
			[Address(RVA = "0xC12FCC", Offset = "0xC12FCC", VA = "0xC12FCC")]
			[DebuggerHidden]
			public <PreCreate>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6002E1B")]
			[Address(RVA = "0xC134C4", Offset = "0xC134C4", VA = "0xC134C4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E1C")]
			[Address(RVA = "0xC134C8", Offset = "0xC134C8", VA = "0xC134C8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E1E")]
			[Address(RVA = "0xC136A8", Offset = "0xC136A8", VA = "0xC136A8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<Resource> _list;

		[Token(Token = "0x4000B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _isDestroyed;

		[Token(Token = "0x4000B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LoadHandler _onLoad;

		[Token(Token = "0x4000B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private LoadHandler _onLoadInCs;

		[Token(Token = "0x4000B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private LoadHandlers _onLoadAssets;

		[Token(Token = "0x4000B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private LoadHandlers _onLoadResources;

		[Token(Token = "0x6002191")]
		[Address(RVA = "0xC1297C", Offset = "0xC1297C", VA = "0xC1297C")]
		[ExportToLuaAttrbute]
		public ComLuaResLoader()
		{
		}

		[Token(Token = "0x6002192")]
		[Address(RVA = "0xC12AA8", Offset = "0xC12AA8", VA = "0xC12AA8")]
		[ExportToLuaAttrbute]
		public void Load(string path, LuaFunction func)
		{
		}

		[Token(Token = "0x6002193")]
		[Address(RVA = "0xC12BA4", Offset = "0xC12BA4", VA = "0xC12BA4")]
		[NoToLua]
		public void LoadInCS(string path, LoadHandler handler)
		{
		}

		[Token(Token = "0x6002194")]
		[Address(RVA = "0xC12CA0", Offset = "0xC12CA0", VA = "0xC12CA0")]
		[ExportToLuaAttrbute]
		public void LoadAssets(string[] paths, LuaTable resTable, LuaFunction func)
		{
		}

		[Token(Token = "0x6002195")]
		[Address(RVA = "0xC12DD0", Offset = "0xC12DD0", VA = "0xC12DD0")]
		[ExportToLuaAttrbute]
		public void LoadResources(string[] paths, LuaFunction func)
		{
		}

		[Token(Token = "0x6002196")]
		[Address(RVA = "0xC12ECC", Offset = "0xC12ECC", VA = "0xC12ECC")]
		private void _addRes(Resource res)
		{
		}

		[Token(Token = "0x6002197")]
		[Address(RVA = "0xC12F48", Offset = "0xC12F48", VA = "0xC12F48")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A7EC0", Offset = "0x9A7EC0")]
		[ExportToLuaAttrbute]
		private IEnumerator PreCreate(string[] paths, LuaFunction func)
		{
			return null;
		}

		[Token(Token = "0x6002198")]
		[Address(RVA = "0xC12FF8", Offset = "0xC12FF8", VA = "0xC12FF8")]
		[ExportToLuaAttrbute]
		public void Clear()
		{
		}

		[Token(Token = "0x6002199")]
		[Address(RVA = "0xC130A8", Offset = "0xC130A8", VA = "0xC130A8")]
		public void Destroy()
		{
		}

		[Token(Token = "0x600219A")]
		[Address(RVA = "0xC130B4", Offset = "0xC130B4", VA = "0xC130B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7F44", Offset = "0x9A7F44")]
		private void <.ctor>b__7_0(Resource res, object data)
		{
		}

		[Token(Token = "0x600219B")]
		[Address(RVA = "0xC131B0", Offset = "0xC131B0", VA = "0xC131B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7F54", Offset = "0x9A7F54")]
		private void <.ctor>b__7_1(Resource res, object data)
		{
		}

		[Token(Token = "0x600219C")]
		[Address(RVA = "0xC13274", Offset = "0xC13274", VA = "0xC13274")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7F64", Offset = "0x9A7F64")]
		private void <.ctor>b__7_2(List<Resource> res, object data)
		{
		}

		[Token(Token = "0x600219D")]
		[Address(RVA = "0xC133BC", Offset = "0xC133BC", VA = "0xC133BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7F74", Offset = "0x9A7F74")]
		private void <.ctor>b__7_3(List<Resource> res, object o)
		{
		}
	}
	[Token(Token = "0x2000274")]
	internal class QualityItem : MonoBehaviour
	{
		[Token(Token = "0x4000B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] Low;

		[Token(Token = "0x4000B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject[] Middle;

		[Token(Token = "0x4000B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject[] High;

		[Token(Token = "0x4000B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject[] SuperHigh;

		[Token(Token = "0x600219E")]
		[Address(RVA = "0xD84370", Offset = "0xD84370", VA = "0xD84370")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600219F")]
		[Address(RVA = "0xD844BC", Offset = "0xD844BC", VA = "0xD844BC")]
		private void SetActive(GameObject[] objs, bool active)
		{
		}

		[Token(Token = "0x60021A0")]
		[Address(RVA = "0xD845A4", Offset = "0xD845A4", VA = "0xD845A4")]
		public QualityItem()
		{
		}
	}
	[Token(Token = "0x2000275")]
	public class QualityMgr : QSingleton<QualityMgr>
	{
		[Token(Token = "0x4000B0E")]
		[NoToLua]
		public const int low = 0;

		[Token(Token = "0x4000B0F")]
		[NoToLua]
		public const int middle = 1;

		[Token(Token = "0x4000B10")]
		[NoToLua]
		public const int high = 2;

		[Token(Token = "0x4000B11")]
		[NoToLua]
		public const int superHigh = 3;

		[Token(Token = "0x60021A1")]
		[Address(RVA = "0xD845AC", Offset = "0xD845AC", VA = "0xD845AC")]
		[NoToLua]
		public QualityMgr()
		{
		}

		[Token(Token = "0x60021A2")]
		[Address(RVA = "0xD8461C", Offset = "0xD8461C", VA = "0xD8461C")]
		[ExportToLuaAttrbute]
		public void SetQualityLevel(int quality)
		{
		}

		[Token(Token = "0x60021A3")]
		[Address(RVA = "0xD844B4", Offset = "0xD844B4", VA = "0xD844B4")]
		[ExportToLuaAttrbute]
		public int GetQualityLevel()
		{
			return default(int);
		}

		[Token(Token = "0x60021A4")]
		[Address(RVA = "0xD8520C", Offset = "0xD8520C", VA = "0xD8520C")]
		[ExportToLuaAttrbute]
		public int GetGraphicsMemorySize()
		{
			return default(int);
		}

		[Token(Token = "0x60021A5")]
		[Address(RVA = "0xD85214", Offset = "0xD85214", VA = "0xD85214")]
		[ExportToLuaAttrbute]
		public string GetGraphicsDevice()
		{
			return null;
		}

		[Token(Token = "0x60021A6")]
		[Address(RVA = "0xD8521C", Offset = "0xD8521C", VA = "0xD8521C")]
		[NoToLua]
		public bool IsLowLevelDevice()
		{
			return default(bool);
		}

		[Token(Token = "0x60021A7")]
		[Address(RVA = "0xD8523C", Offset = "0xD8523C", VA = "0xD8523C")]
		[NoToLua]
		public bool IsNoShadowForEntity()
		{
			return default(bool);
		}

		[Token(Token = "0x60021A8")]
		[Address(RVA = "0xD84968", Offset = "0xD84968", VA = "0xD84968")]
		private void SetSetting(int quality)
		{
		}

		[Token(Token = "0x60021A9")]
		[Address(RVA = "0xD8525C", Offset = "0xD8525C", VA = "0xD8525C")]
		public void SetDefaultCapacity(int size)
		{
		}

		[Token(Token = "0x60021AA")]
		[Address(RVA = "0xD85384", Offset = "0xD85384", VA = "0xD85384")]
		public void SetAntiAliasing(int anti)
		{
		}
	}
	[Token(Token = "0x2000276")]
	public static class ShaderMgr__HAIBAO__SWORD__
	{
		[Serializable]
		[Token(Token = "0x2000419")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940540", Offset = "0x940540")]
		private sealed class <>c
		{
			[Token(Token = "0x40010B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40010B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static LoadHandler <>9__8_0;

			[Token(Token = "0x6002E21")]
			[Address(RVA = "0xD87AF0", Offset = "0xD87AF0", VA = "0xD87AF0")]
			public <>c()
			{
			}

			[Token(Token = "0x6002E22")]
			[Address(RVA = "0xD87AF8", Offset = "0xD87AF8", VA = "0xD87AF8")]
			internal void <LoadShader>b__8_0(Resource res, object data)
			{
			}
		}

		[Token(Token = "0x4000B12")]
		private const string GRAY_SHADER_FIX = "-Gray";

		[Token(Token = "0x4000B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Resource Res;

		[Token(Token = "0x60021AB")]
		[Address(RVA = "0xD84810", Offset = "0xD84810", VA = "0xD84810")]
		public static Shader Load(string name)
		{
			return null;
		}

		[Token(Token = "0x60021AC")]
		[Address(RVA = "0xD871BC", Offset = "0xD871BC", VA = "0xD871BC")]
		public static void SetStringShader(GameObject go, string name)
		{
		}

		[Token(Token = "0x60021AD")]
		public static void SetShader<T>(GameObject go, Shader s) where T : Renderer
		{
		}

		[Token(Token = "0x60021AE")]
		public static void SetAllShader<T>(GameObject go, Shader s) where T : Renderer
		{
		}

		[Token(Token = "0x60021AF")]
		[Address(RVA = "0xD87224", Offset = "0xD87224", VA = "0xD87224")]
		public static void SetInt(GameObject go, string name, int value)
		{
		}

		[Token(Token = "0x60021B0")]
		[Address(RVA = "0xD87338", Offset = "0xD87338", VA = "0xD87338")]
		public static void SetGray(this GameObject go, bool isNeedGray)
		{
		}

		[Token(Token = "0x60021B1")]
		[Address(RVA = "0xD87480", Offset = "0xD87480", VA = "0xD87480")]
		public static void LoadShader()
		{
		}

		[Token(Token = "0x60021B2")]
		[Address(RVA = "0xD87638", Offset = "0xD87638", VA = "0xD87638")]
		public static void SetShaderParams(Material mat, Dictionary<string, float> dic)
		{
		}

		[Token(Token = "0x60021B3")]
		[Address(RVA = "0xD87748", Offset = "0xD87748", VA = "0xD87748")]
		public static void SetShaderParams(Material mat, Dictionary<string, int> dic)
		{
		}

		[Token(Token = "0x60021B4")]
		[Address(RVA = "0xD87858", Offset = "0xD87858", VA = "0xD87858")]
		public static void SetShaderParams(Material mat, Dictionary<string, Color> dic)
		{
		}

		[Token(Token = "0x60021B5")]
		[Address(RVA = "0xD87968", Offset = "0xD87968", VA = "0xD87968")]
		private static string GetGameObjectPath(GameObject _gameObject)
		{
			return null;
		}
	}
	[Token(Token = "0x2000277")]
	public class CubeLuaComponent : LuaComponent
	{
		[Token(Token = "0x60021B6")]
		[Address(RVA = "0xC221B8", Offset = "0xC221B8", VA = "0xC221B8")]
		private void OnMouseDown()
		{
		}

		[Token(Token = "0x60021B7")]
		[Address(RVA = "0xC222A0", Offset = "0xC222A0", VA = "0xC222A0")]
		private void OnMouseUp()
		{
		}

		[Token(Token = "0x60021B8")]
		[Address(RVA = "0xC22388", Offset = "0xC22388", VA = "0xC22388")]
		public CubeLuaComponent()
		{
		}
	}
	[Token(Token = "0x2000278")]
	public class DragLuaComponent : LuaComponent, IEndDragHandler, IEventSystemHandler, IDragHandler
	{
		[Token(Token = "0x4000B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _timer;

		[Token(Token = "0x60021B9")]
		[Address(RVA = "0xD73B44", Offset = "0xD73B44", VA = "0xD73B44", Slot = "7")]
		public override void OnEnter()
		{
		}

		[Token(Token = "0x60021BA")]
		[Address(RVA = "0xD73CE4", Offset = "0xD73CE4", VA = "0xD73CE4")]
		private void RemoveTimer()
		{
		}

		[Token(Token = "0x60021BB")]
		[Address(RVA = "0xD73D5C", Offset = "0xD73D5C", VA = "0xD73D5C", Slot = "8")]
		public override void OnExit()
		{
		}

		[Token(Token = "0x60021BC")]
		[Address(RVA = "0xD73EA4", Offset = "0xD73EA4", VA = "0xD73EA4", Slot = "12")]
		public void OnEndDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60021BD")]
		[Address(RVA = "0xD74180", Offset = "0xD74180", VA = "0xD74180", Slot = "13")]
		public void OnDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60021BE")]
		[Address(RVA = "0xD7423C", Offset = "0xD7423C", VA = "0xD7423C")]
		protected void _OnFrame(object data)
		{
		}

		[Token(Token = "0x60021BF")]
		[Address(RVA = "0xD74320", Offset = "0xD74320", VA = "0xD74320")]
		public DragLuaComponent()
		{
		}
	}
	[Token(Token = "0x2000279")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x93F6DC", Offset = "0x93F6DC")]
	public class LuaComponent : BaseView
	{
		[Token(Token = "0x4000B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private LuaTable _mtable;

		[Token(Token = "0x4000B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected bool mIsDestroyed;

		[Token(Token = "0x17000119")]
		public LuaTable LuaModule
		{
			[Token(Token = "0x60021C1")]
			[Address(RVA = "0xD815C4", Offset = "0xD815C4", VA = "0xD815C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011A")]
		public new bool IsDestory
		{
			[Token(Token = "0x60021C3")]
			[Address(RVA = "0xD8175C", Offset = "0xD8175C", VA = "0xD8175C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60021C0")]
		[Address(RVA = "0xD81530", Offset = "0xD81530", VA = "0xD81530")]
		public static void AddTable(GameObject go, LuaTable t)
		{
		}

		[Token(Token = "0x60021C2")]
		[Address(RVA = "0xD815CC", Offset = "0xD815CC", VA = "0xD815CC")]
		public void InitLuaModule()
		{
		}

		[Token(Token = "0x60021C4")]
		[Address(RVA = "0xD73F60", Offset = "0xD73F60", VA = "0xD73F60")]
		protected void CallLuaFunction(string funcName, params object[] args)
		{
		}

		[Token(Token = "0x60021C5")]
		[Address(RVA = "0xD81764", Offset = "0xD81764", VA = "0xD81764", Slot = "5")]
		protected override void InitMono()
		{
		}

		[Token(Token = "0x60021C6")]
		[Address(RVA = "0xD81790", Offset = "0xD81790", VA = "0xD81790", Slot = "6")]
		public override void DestroyMono()
		{
		}

		[Token(Token = "0x60021C7")]
		[Address(RVA = "0xD818E8", Offset = "0xD818E8", VA = "0xD818E8", Slot = "1")]
		~LuaComponent()
		{
		}

		[Token(Token = "0x60021C8")]
		[Address(RVA = "0xD73C00", Offset = "0xD73C00", VA = "0xD73C00", Slot = "7")]
		public override void OnEnter()
		{
		}

		[Token(Token = "0x60021C9")]
		[Address(RVA = "0xD73D80", Offset = "0xD73D80", VA = "0xD73D80", Slot = "8")]
		public override void OnExit()
		{
		}

		[Token(Token = "0x60021CA")]
		[Address(RVA = "0xD819B0", Offset = "0xD819B0", VA = "0xD819B0", Slot = "10")]
		protected virtual void BuildUI()
		{
		}

		[Token(Token = "0x60021CB")]
		[Address(RVA = "0xD81AF0", Offset = "0xD81AF0", VA = "0xD81AF0")]
		protected void OnCanvas(bool active)
		{
		}

		[Token(Token = "0x60021CC")]
		[Address(RVA = "0xD81BCC", Offset = "0xD81BCC", VA = "0xD81BCC", Slot = "11")]
		public virtual void SetVisible(bool active)
		{
		}

		[Token(Token = "0x60021CD")]
		[Address(RVA = "0xD81C00", Offset = "0xD81C00", VA = "0xD81C00")]
		public string GetClsName()
		{
			return null;
		}

		[Token(Token = "0x60021CE")]
		[Address(RVA = "0xD81C6C", Offset = "0xD81C6C", VA = "0xD81C6C", Slot = "9")]
		public override void OnBeginExit()
		{
		}

		[Token(Token = "0x60021CF")]
		[Address(RVA = "0xD74328", Offset = "0xD74328", VA = "0xD74328")]
		public LuaComponent()
		{
		}
	}
	[Token(Token = "0x200027A")]
	public class LuaUIComponent : LuaComponent
	{
		[Token(Token = "0x4000B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[NoToLua]
		protected bool mCodeActiveState;

		[Token(Token = "0x4000B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		protected bool mViewActiveState;

		[Token(Token = "0x4000B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ComViewLoader _loader;

		[Token(Token = "0x4000B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool mIsBuild;

		[Token(Token = "0x60021D0")]
		[Address(RVA = "0xD81E1C", Offset = "0xD81E1C", VA = "0xD81E1C", Slot = "10")]
		protected override void BuildUI()
		{
		}

		[Token(Token = "0x60021D1")]
		[Address(RVA = "0xD81EE0", Offset = "0xD81EE0", VA = "0xD81EE0", Slot = "6")]
		public override void DestroyMono()
		{
		}

		[Token(Token = "0x60021D2")]
		[Address(RVA = "0xD81F1C", Offset = "0xD81F1C", VA = "0xD81F1C", Slot = "7")]
		public override void OnEnter()
		{
		}

		[Token(Token = "0x60021D3")]
		[Address(RVA = "0xD81F58", Offset = "0xD81F58", VA = "0xD81F58")]
		private void _OnEnter(bool isSetView)
		{
		}

		[Token(Token = "0x60021D4")]
		[Address(RVA = "0xD81FA0", Offset = "0xD81FA0", VA = "0xD81FA0")]
		private void _OnExit(bool isSetView)
		{
		}

		[Token(Token = "0x60021D5")]
		[Address(RVA = "0xD81FE4", Offset = "0xD81FE4", VA = "0xD81FE4", Slot = "8")]
		public override void OnExit()
		{
		}

		[Token(Token = "0x60021D6")]
		[Address(RVA = "0xD8201C", Offset = "0xD8201C", VA = "0xD8201C", Slot = "11")]
		public override void SetVisible(bool visible)
		{
		}

		[Token(Token = "0x60021D7")]
		[Address(RVA = "0xD820E8", Offset = "0xD820E8", VA = "0xD820E8")]
		public void SetVisibleByCheckState(bool visible)
		{
		}

		[Token(Token = "0x60021D8")]
		[Address(RVA = "0xD821E0", Offset = "0xD821E0", VA = "0xD821E0", Slot = "9")]
		public override void OnBeginExit()
		{
		}

		[Token(Token = "0x60021D9")]
		[Address(RVA = "0xD82218", Offset = "0xD82218", VA = "0xD82218")]
		public LuaUIComponent()
		{
		}
	}
	[Token(Token = "0x200027B")]
	public class UIComponentContainer__HAIBAO__SWORD__
	{
		[Token(Token = "0x4000B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<LuaUIComponent> mList;

		[Token(Token = "0x60021DA")]
		[Address(RVA = "0xCB3168", Offset = "0xCB3168", VA = "0xCB3168")]
		public LuaTable AddUIComponent(GameObject go, LuaTable table)
		{
			return null;
		}

		[Token(Token = "0x60021DB")]
		[Address(RVA = "0xCB32C4", Offset = "0xCB32C4", VA = "0xCB32C4")]
		public void RemoveUIComponent(GameObject go)
		{
		}

		[Token(Token = "0x60021DC")]
		[Address(RVA = "0xCB3394", Offset = "0xCB3394", VA = "0xCB3394")]
		public void SetVisible(bool visible)
		{
		}

		[Token(Token = "0x60021DD")]
		[Address(RVA = "0xCB344C", Offset = "0xCB344C", VA = "0xCB344C")]
		public void OnBeginExit()
		{
		}

		[Token(Token = "0x60021DE")]
		[Address(RVA = "0xCB3544", Offset = "0xCB3544", VA = "0xCB3544")]
		public void Clear()
		{
		}

		[Token(Token = "0x60021DF")]
		[Address(RVA = "0xCB3678", Offset = "0xCB3678", VA = "0xCB3678")]
		public UIComponentContainer__HAIBAO__SWORD__()
		{
		}
	}
	[Token(Token = "0x200027C")]
	public class TouchLayerLua
	{
		[Token(Token = "0x4000B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private LayerInfo__HAIBAO__SWORD__ _layer;

		[Token(Token = "0x4000B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private LuaTable _luaModule;

		[Token(Token = "0x4000B1E")]
		private const string FUNC_NAME_ON_TOUCH = "OnTap";

		[Token(Token = "0x4000B1F")]
		private const string FUNC_NAME_ON_TOUCH_START = "OnTouchStart";

		[Token(Token = "0x4000B20")]
		private const string FUNC_NAME_ON_TOUCH_END = "OnTouchEnd";

		[Token(Token = "0x1700011B")]
		public LayerInfo__HAIBAO__SWORD__ Layer
		{
			[Token(Token = "0x60021E0")]
			[Address(RVA = "0xD88F80", Offset = "0xD88F80", VA = "0xD88F80")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60021E1")]
		[Address(RVA = "0xD88F88", Offset = "0xD88F88", VA = "0xD88F88")]
		public TouchLayerLua(int layerIndex, LuaTable luaModule)
		{
		}

		[Token(Token = "0x60021E2")]
		[Address(RVA = "0xD8918C", Offset = "0xD8918C", VA = "0xD8918C", Slot = "1")]
		~TouchLayerLua()
		{
		}

		[Token(Token = "0x60021E3")]
		[Address(RVA = "0xD89198", Offset = "0xD89198", VA = "0xD89198")]
		private bool OnTouchSceneObject(Gesture gt)
		{
			return default(bool);
		}

		[Token(Token = "0x60021E4")]
		[Address(RVA = "0xD89330", Offset = "0xD89330", VA = "0xD89330")]
		private bool OnTouchStartSceneObject(Gesture gt)
		{
			return default(bool);
		}

		[Token(Token = "0x60021E5")]
		[Address(RVA = "0xD89398", Offset = "0xD89398", VA = "0xD89398")]
		private bool OnTouchEndSceneObject(Gesture gt)
		{
			return default(bool);
		}

		[Token(Token = "0x60021E6")]
		[Address(RVA = "0xD89200", Offset = "0xD89200", VA = "0xD89200")]
		internal bool _call(string methodName, GameObject go)
		{
			return default(bool);
		}

		[Token(Token = "0x60021E7")]
		[Address(RVA = "0xD89400", Offset = "0xD89400", VA = "0xD89400")]
		internal bool _call(string methodName, Gesture gt)
		{
			return default(bool);
		}

		[Token(Token = "0x60021E8")]
		[Address(RVA = "0xD895BC", Offset = "0xD895BC", VA = "0xD895BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A8004", Offset = "0x9A8004")]
		private bool <.ctor>b__7_0(Gesture gt)
		{
			return default(bool);
		}

		[Token(Token = "0x60021E9")]
		[Address(RVA = "0xD8961C", Offset = "0xD8961C", VA = "0xD8961C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A8014", Offset = "0x9A8014")]
		private bool <.ctor>b__7_1(Gesture gt)
		{
			return default(bool);
		}

		[Token(Token = "0x60021EA")]
		[Address(RVA = "0xD8967C", Offset = "0xD8967C", VA = "0xD8967C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A8024", Offset = "0x9A8024")]
		private bool <.ctor>b__7_2(Gesture gt)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200027D")]
	public delegate bool EventCall(Gesture gt);
	[Token(Token = "0x200027E")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x93F714", Offset = "0x93F714")]
	public class LayerInfo__HAIBAO__SWORD__
	{
		[Token(Token = "0x4000B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<int, EventCall> _calls;

		[Token(Token = "0x4000B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int _layer;

		[Token(Token = "0x1700011C")]
		public int Layer
		{
			[Token(Token = "0x60021EF")]
			[Address(RVA = "0xD7A50C", Offset = "0xD7A50C", VA = "0xD7A50C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700011D")]
		public virtual EventCall Item
		{
			[Token(Token = "0x60021F1")]
			[Address(RVA = "0xD7A5A0", Offset = "0xD7A5A0", VA = "0xD7A5A0", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60021F2")]
			[Address(RVA = "0xD7A634", Offset = "0xD7A634", VA = "0xD7A634", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x60021F0")]
		[Address(RVA = "0xD7A514", Offset = "0xD7A514", VA = "0xD7A514")]
		public LayerInfo__HAIBAO__SWORD__(int layer)
		{
		}
	}
	[Token(Token = "0x200027F")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x93F74C", Offset = "0x93F74C")]
	public class TouchMgr : QSingleton<TouchMgr>
	{
		[Token(Token = "0x4000B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SortedList<int, LayerInfo__HAIBAO__SWORD__> _allLayers;

		[Token(Token = "0x4000B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool mIsTouch;

		[Token(Token = "0x4000B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private EasyTouch mET;

		[Token(Token = "0x4000B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject go;

		[Token(Token = "0x1700011E")]
		public LayerInfo__HAIBAO__SWORD__ Item
		{
			[Token(Token = "0x600220A")]
			[Address(RVA = "0xD8A410", Offset = "0xD8A410", VA = "0xD8A410")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60021F3")]
		[Address(RVA = "0xD896DC", Offset = "0xD896DC", VA = "0xD896DC")]
		public TouchMgr()
		{
		}

		[Token(Token = "0x60021F4")]
		[Address(RVA = "0xD8977C", Offset = "0xD8977C", VA = "0xD8977C")]
		public void Init()
		{
		}

		[Token(Token = "0x60021F5")]
		[Address(RVA = "0xD89B38", Offset = "0xD89B38", VA = "0xD89B38")]
		public void SetEasyTouch(bool enable)
		{
		}

		[Token(Token = "0x60021F6")]
		[Address(RVA = "0xD89B44", Offset = "0xD89B44", VA = "0xD89B44")]
		public void Clear()
		{
		}

		[Token(Token = "0x60021F7")]
		[Address(RVA = "0xD89E90", Offset = "0xD89E90", VA = "0xD89E90")]
		public void OnTap(Gesture gt)
		{
		}

		[Token(Token = "0x60021F8")]
		[Address(RVA = "0xD8A1F8", Offset = "0xD8A1F8", VA = "0xD8A1F8")]
		public void OnDoubleTap(Gesture gt)
		{
		}

		[Token(Token = "0x60021F9")]
		[Address(RVA = "0xD8A1FC", Offset = "0xD8A1FC", VA = "0xD8A1FC")]
		public void GuideEvent(int type, Gesture gt)
		{
		}

		[Token(Token = "0x60021FA")]
		[Address(RVA = "0xD8A200", Offset = "0xD8A200", VA = "0xD8A200")]
		public void OnTouchStart(Gesture gt)
		{
		}

		[Token(Token = "0x60021FB")]
		[Address(RVA = "0xD8A20C", Offset = "0xD8A20C", VA = "0xD8A20C")]
		public void OnTouchEnd(Gesture gt)
		{
		}

		[Token(Token = "0x60021FC")]
		[Address(RVA = "0xD8A218", Offset = "0xD8A218", VA = "0xD8A218")]
		public void OnSwipeBegin(Gesture gt)
		{
		}

		[Token(Token = "0x60021FD")]
		[Address(RVA = "0xD8A224", Offset = "0xD8A224", VA = "0xD8A224")]
		public void OnSwipe(Gesture gt)
		{
		}

		[Token(Token = "0x60021FE")]
		[Address(RVA = "0xD8A230", Offset = "0xD8A230", VA = "0xD8A230")]
		public void OnSwipeEnd(Gesture gt)
		{
		}

		[Token(Token = "0x60021FF")]
		[Address(RVA = "0xD8A23C", Offset = "0xD8A23C", VA = "0xD8A23C")]
		public void OnDragBegin(Gesture gt)
		{
		}

		[Token(Token = "0x6002200")]
		[Address(RVA = "0xD8A248", Offset = "0xD8A248", VA = "0xD8A248")]
		public void OnDrag(Gesture gt)
		{
		}

		[Token(Token = "0x6002201")]
		[Address(RVA = "0xD8A254", Offset = "0xD8A254", VA = "0xD8A254")]
		public void OnDragEnd(Gesture gt)
		{
		}

		[Token(Token = "0x6002202")]
		[Address(RVA = "0xD8A260", Offset = "0xD8A260", VA = "0xD8A260")]
		public void OnPinchBegin(Gesture gt)
		{
		}

		[Token(Token = "0x6002203")]
		[Address(RVA = "0xD8A26C", Offset = "0xD8A26C", VA = "0xD8A26C")]
		public void OnPinchIn(Gesture gt)
		{
		}

		[Token(Token = "0x6002204")]
		[Address(RVA = "0xD8A278", Offset = "0xD8A278", VA = "0xD8A278")]
		public void OnPinchOut(Gesture gt)
		{
		}

		[Token(Token = "0x6002205")]
		[Address(RVA = "0xD8A284", Offset = "0xD8A284", VA = "0xD8A284")]
		public void OnPinchEnd(Gesture gt)
		{
		}

		[Token(Token = "0x6002206")]
		[Address(RVA = "0xD8A290", Offset = "0xD8A290", VA = "0xD8A290")]
		public void OnUIElimentTouchUp(Gesture gt)
		{
		}

		[Token(Token = "0x6002207")]
		[Address(RVA = "0xD89F4C", Offset = "0xD89F4C", VA = "0xD89F4C")]
		private void Do(int type, Gesture gt)
		{
		}

		[Token(Token = "0x6002208")]
		[Address(RVA = "0xD8A29C", Offset = "0xD8A29C", VA = "0xD8A29C")]
		public void AddEvent(int layer, int type, EventCall call)
		{
		}

		[Token(Token = "0x6002209")]
		[Address(RVA = "0xD8A38C", Offset = "0xD8A38C", VA = "0xD8A38C")]
		public void RemoveEvent(int layer, int type, EventCall call)
		{
		}

		[Token(Token = "0x600220B")]
		[Address(RVA = "0xD8A478", Offset = "0xD8A478", VA = "0xD8A478")]
		public void AddLayer(LayerInfo__HAIBAO__SWORD__ layer)
		{
		}

		[Token(Token = "0x600220C")]
		[Address(RVA = "0xD8A518", Offset = "0xD8A518", VA = "0xD8A518")]
		public void RemoveLayer(LayerInfo__HAIBAO__SWORD__ layer)
		{
		}

		[Token(Token = "0x600220D")]
		[Address(RVA = "0xD8A584", Offset = "0xD8A584", VA = "0xD8A584")]
		public void RemoveLayer(int key)
		{
		}

		[Token(Token = "0x600220E")]
		[Address(RVA = "0xD8A5EC", Offset = "0xD8A5EC", VA = "0xD8A5EC")]
		public static bool IsPointerOverUIObject()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000280")]
	public class OutlineEx : Outline
	{
		[Token(Token = "0x600220F")]
		[Address(RVA = "0xD82220", Offset = "0xD82220", VA = "0xD82220")]
		public OutlineEx()
		{
		}
	}
	[Token(Token = "0x2000281")]
	public class ComViewLoader
	{
		[Token(Token = "0x200041A")]
		public enum eUIWidgetName
		{
			[Token(Token = "0x40010BA")]
			btn_,
			[Token(Token = "0x40010BB")]
			txt_,
			[Token(Token = "0x40010BC")]
			sld_,
			[Token(Token = "0x40010BD")]
			img_,
			[Token(Token = "0x40010BE")]
			tog_,
			[Token(Token = "0x40010BF")]
			inp_,
			[Token(Token = "0x40010C0")]
			drop_,
			[Token(Token = "0x40010C1")]
			btnLP_,
			[Token(Token = "0x40010C2")]
			rect_,
			[Token(Token = "0x40010C3")]
			grid_,
			[Token(Token = "0x40010C4")]
			tog_group_,
			[Token(Token = "0x40010C5")]
			center_,
			[Token(Token = "0x40010C6")]
			empty_,
			[Token(Token = "0x40010C7")]
			loop_rect_,
			[Token(Token = "0x40010C8")]
			pageView_,
			[Token(Token = "0x40010C9")]
			rimg_,
			[Token(Token = "0x40010CA")]
			enhanced_scv_,
			[Token(Token = "0x40010CB")]
			trans_,
			[Token(Token = "0x40010CC")]
			sprite_,
			[Token(Token = "0x40010CD")]
			end
		}

		[Token(Token = "0x200041B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940550", Offset = "0x940550")]
		private sealed class <>c__DisplayClass102_0
		{
			[Token(Token = "0x40010CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LuaFunction lf;

			[Token(Token = "0x6002E23")]
			[Address(RVA = "0xC178D0", Offset = "0xC178D0", VA = "0xC178D0")]
			public <>c__DisplayClass102_0()
			{
			}

			[Token(Token = "0x6002E24")]
			[Address(RVA = "0xC20DC4", Offset = "0xC20DC4", VA = "0xC20DC4")]
			internal void <BindBtnEnter>b__0()
			{
			}
		}

		[Token(Token = "0x200041C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940560", Offset = "0x940560")]
		private sealed class <>c__DisplayClass103_0
		{
			[Token(Token = "0x40010CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LuaFunction lf;

			[Token(Token = "0x6002E25")]
			[Address(RVA = "0xC17B2C", Offset = "0xC17B2C", VA = "0xC17B2C")]
			public <>c__DisplayClass103_0()
			{
			}

			[Token(Token = "0x6002E26")]
			[Address(RVA = "0xC20DE0", Offset = "0xC20DE0", VA = "0xC20DE0")]
			internal void <BindBtnExit>b__0()
			{
			}
		}

		[Token(Token = "0x200041D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940570", Offset = "0x940570")]
		private sealed class <>c__DisplayClass104_0
		{
			[Token(Token = "0x40010D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LuaFunction lf;

			[Token(Token = "0x6002E27")]
			[Address(RVA = "0xC17C58", Offset = "0xC17C58", VA = "0xC17C58")]
			public <>c__DisplayClass104_0()
			{
			}

			[Token(Token = "0x6002E28")]
			[Address(RVA = "0xC20DFC", Offset = "0xC20DFC", VA = "0xC20DFC")]
			internal void <BindClickDown>b__0()
			{
			}
		}

		[Token(Token = "0x200041E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940580", Offset = "0x940580")]
		private sealed class <>c__DisplayClass105_0
		{
			[Token(Token = "0x40010D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LuaFunction lf;

			[Token(Token = "0x6002E29")]
			[Address(RVA = "0xC17D84", Offset = "0xC17D84", VA = "0xC17D84")]
			public <>c__DisplayClass105_0()
			{
			}

			[Token(Token = "0x6002E2A")]
			[Address(RVA = "0xC20E18", Offset = "0xC20E18", VA = "0xC20E18")]
			internal void <BindClickUp>b__0()
			{
			}
		}

		[Token(Token = "0x200041F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940590", Offset = "0x940590")]
		private sealed class <>c__DisplayClass106_0
		{
			[Token(Token = "0x40010D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LuaFunction lf;

			[Token(Token = "0x40010D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ButtonEx btn;

			[Token(Token = "0x6002E2B")]
			[Address(RVA = "0xC17D8C", Offset = "0xC17D8C", VA = "0xC17D8C")]
			public <>c__DisplayClass106_0()
			{
			}

			[Token(Token = "0x6002E2C")]
			[Address(RVA = "0xC20E34", Offset = "0xC20E34", VA = "0xC20E34")]
			internal void <BindClick>b__0()
			{
			}
		}

		[Token(Token = "0x2000420")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9405A0", Offset = "0x9405A0")]
		private sealed class <>c__DisplayClass107_0
		{
			[Token(Token = "0x40010D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LuaFunction lf;

			[Token(Token = "0x6002E2D")]
			[Address(RVA = "0xC17ECC", Offset = "0xC17ECC", VA = "0xC17ECC")]
			public <>c__DisplayClass107_0()
			{
			}

			[Token(Token = "0x6002E2E")]
			[Address(RVA = "0xC20F68", Offset = "0xC20F68", VA = "0xC20F68")]
			internal void <BindBtnLongPress>b__0(PointerEventData data)
			{
			}
		}

		[Token(Token = "0x2000421")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9405B0", Offset = "0x9405B0")]
		private sealed class <>c__DisplayClass108_0
		{
			[Token(Token = "0x40010D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LuaFunction lf;

			[Token(Token = "0x6002E2F")]
			[Address(RVA = "0xC17FFC", Offset = "0xC17FFC", VA = "0xC17FFC")]
			public <>c__DisplayClass108_0()
			{
			}

			[Token(Token = "0x6002E30")]
			[Address(RVA = "0xC20FD0", Offset = "0xC20FD0", VA = "0xC20FD0")]
			internal void <BindBtnLongPressUp>b__0()
			{
			}
		}

		[Token(Token = "0x2000422")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9405C0", Offset = "0x9405C0")]
		private sealed class <>c__DisplayClass109_0
		{
			[Token(Token = "0x40010D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LuaFunction lf;

			[Token(Token = "0x6002E31")]
			[Address(RVA = "0xC1812C", Offset = "0xC1812C", VA = "0xC1812C")]
			public <>c__DisplayClass109_0()
			{
			}

			[Token(Token = "0x6002E32")]
			[Address(RVA = "0xC20FEC", Offset = "0xC20FEC", VA = "0xC20FEC")]
			internal void <BindBtnLongPressDown>b__0()
			{
			}
		}

		[Token(Token = "0x2000423")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9405D0", Offset = "0x9405D0")]
		private sealed class <>c__DisplayClass110_0
		{
			[Token(Token = "0x40010D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LuaFunction lf;

			[Token(Token = "0x6002E33")]
			[Address(RVA = "0xC1825C", Offset = "0xC1825C", VA = "0xC1825C")]
			public <>c__DisplayClass110_0()
			{
			}

			[Token(Token = "0x6002E34")]
			[Address(RVA = "0xC21008", Offset = "0xC21008", VA = "0xC21008")]
			internal void <BindBtnLongPressNormalUp>b__0()
			{
			}
		}

		[Token(Token = "0x2000424")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9405E0", Offset = "0x9405E0")]
		private sealed class <>c__DisplayClass111_0
		{
			[Token(Token = "0x40010D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LuaFunction lf;

			[Token(Token = "0x6002E35")]
			[Address(RVA = "0xC1838C", Offset = "0xC1838C", VA = "0xC1838C")]
			public <>c__DisplayClass111_0()
			{
			}

			[Token(Token = "0x6002E36")]
			[Address(RVA = "0xC21024", Offset = "0xC21024", VA = "0xC21024")]
			internal void <BindBtnLongPressNormalClick>b__0()
			{
			}
		}

		[Token(Token = "0x2000425")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9405F0", Offset = "0x9405F0")]
		private sealed class <>c__DisplayClass112_0
		{
			[Token(Token = "0x40010D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LuaFunction lf;

			[Token(Token = "0x6002E37")]
			[Address(RVA = "0xC184BC", Offset = "0xC184BC", VA = "0xC184BC")]
			public <>c__DisplayClass112_0()
			{
			}

			[Token(Token = "0x6002E38")]
			[Address(RVA = "0xC21040", Offset = "0xC21040", VA = "0xC21040")]
			internal void <BindBtnLongPressDownEnter>b__0()
			{
			}
		}

		[Token(Token = "0x2000426")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940600", Offset = "0x940600")]
		private sealed class <>c__DisplayClass113_0
		{
			[Token(Token = "0x40010DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LuaFunction lf;

			[Token(Token = "0x6002E39")]
			[Address(RVA = "0xC185EC", Offset = "0xC185EC", VA = "0xC185EC")]
			public <>c__DisplayClass113_0()
			{
			}

			[Token(Token = "0x6002E3A")]
			[Address(RVA = "0xC2105C", Offset = "0xC2105C", VA = "0xC2105C")]
			internal void <BindBtnLongPressDownExit>b__0()
			{
			}
		}

		[Token(Token = "0x2000427")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940610", Offset = "0x940610")]
		private sealed class <>c__DisplayClass114_0
		{
			[Token(Token = "0x40010DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LuaFunction lf;

			[Token(Token = "0x6002E3B")]
			[Address(RVA = "0xC186F8", Offset = "0xC186F8", VA = "0xC186F8")]
			public <>c__DisplayClass114_0()
			{
			}

			[Token(Token = "0x6002E3C")]
			[Address(RVA = "0xC21078", Offset = "0xC21078", VA = "0xC21078")]
			internal void <BindBtnLongPressDrag>b__0(PointerEventData data)
			{
			}
		}

		[Token(Token = "0x2000428")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940620", Offset = "0x940620")]
		private sealed class <>c__DisplayClass115_0
		{
			[Token(Token = "0x40010DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LuaFunction lf;

			[Token(Token = "0x6002E3D")]
			[Address(RVA = "0xC18804", Offset = "0xC18804", VA = "0xC18804")]
			public <>c__DisplayClass115_0()
			{
			}

			[Token(Token = "0x6002E3E")]
			[Address(RVA = "0xC210E0", Offset = "0xC210E0", VA = "0xC210E0")]
			internal void <BindBtnLongPressDragBegin>b__0(PointerEventData data)
			{
			}
		}

		[Token(Token = "0x2000429")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940630", Offset = "0x940630")]
		private sealed class <>c__DisplayClass116_0
		{
			[Token(Token = "0x40010DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LuaFunction lf;

			[Token(Token = "0x6002E3F")]
			[Address(RVA = "0xC18910", Offset = "0xC18910", VA = "0xC18910")]
			public <>c__DisplayClass116_0()
			{
			}

			[Token(Token = "0x6002E40")]
			[Address(RVA = "0xC21148", Offset = "0xC21148", VA = "0xC21148")]
			internal void <BindBtnLongPressDragEnd>b__0(PointerEventData data)
			{
			}
		}

		[Token(Token = "0x200042A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940640", Offset = "0x940640")]
		private sealed class <>c__DisplayClass117_0
		{
			[Token(Token = "0x40010DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LuaFunction lf;

			[Token(Token = "0x6002E41")]
			[Address(RVA = "0xC18A04", Offset = "0xC18A04", VA = "0xC18A04")]
			public <>c__DisplayClass117_0()
			{
			}

			[Token(Token = "0x6002E42")]
			[Address(RVA = "0xC211B0", Offset = "0xC211B0", VA = "0xC211B0")]
			internal void <BindColliderItemOnSelectEntered>b__0()
			{
			}
		}

		[Token(Token = "0x200042B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940650", Offset = "0x940650")]
		private sealed class <>c__DisplayClass118_0
		{
			[Token(Token = "0x40010DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LuaFunction lf;

			[Token(Token = "0x6002E43")]
			[Address(RVA = "0xC18AF8", Offset = "0xC18AF8", VA = "0xC18AF8")]
			public <>c__DisplayClass118_0()
			{
			}

			[Token(Token = "0x6002E44")]
			[Address(RVA = "0xC211CC", Offset = "0xC211CC", VA = "0xC211CC")]
			internal void <BindColliderItemOnSelectExited>b__0()
			{
			}
		}

		[Token(Token = "0x200042C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940660", Offset = "0x940660")]
		private sealed class <>c__DisplayClass119_0
		{
			[Token(Token = "0x40010E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LuaFunction lf;

			[Token(Token = "0x6002E45")]
			[Address(RVA = "0xC18BEC", Offset = "0xC18BEC", VA = "0xC18BEC")]
			public <>c__DisplayClass119_0()
			{
			}

			[Token(Token = "0x6002E46")]
			[Address(RVA = "0xC211E8", Offset = "0xC211E8", VA = "0xC211E8")]
			internal void <BindColliderItemOnHoverEntered>b__0()
			{
			}
		}

		[Token(Token = "0x200042D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940670", Offset = "0x940670")]
		private sealed class <>c__DisplayClass120_0
		{
			[Token(Token = "0x40010E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LuaFunction lf;

			[Token(Token = "0x6002E47")]
			[Address(RVA = "0xC18CE0", Offset = "0xC18CE0", VA = "0xC18CE0")]
			public <>c__DisplayClass120_0()
			{
			}

			[Token(Token = "0x6002E48")]
			[Address(RVA = "0xC21204", Offset = "0xC21204", VA = "0xC21204")]
			internal void <BindColliderItemOnHoverExited>b__0()
			{
			}
		}

		[Token(Token = "0x200042E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940680", Offset = "0x940680")]
		private sealed class <>c__DisplayClass121_0
		{
			[Token(Token = "0x40010E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LuaFunction lf;

			[Token(Token = "0x6002E49")]
			[Address(RVA = "0xC18DE4", Offset = "0xC18DE4", VA = "0xC18DE4")]
			public <>c__DisplayClass121_0()
			{
			}

			[Token(Token = "0x6002E4A")]
			[Address(RVA = "0xC21220", Offset = "0xC21220", VA = "0xC21220")]
			internal void <BindDragItemOnDrag>b__0(PointerEventData data)
			{
			}
		}

		[Token(Token = "0x200042F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940690", Offset = "0x940690")]
		private sealed class <>c__DisplayClass122_0
		{
			[Token(Token = "0x40010E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LuaFunction lf;

			[Token(Token = "0x6002E4B")]
			[Address(RVA = "0xC18EE8", Offset = "0xC18EE8", VA = "0xC18EE8")]
			public <>c__DisplayClass122_0()
			{
			}

			[Token(Token = "0x6002E4C")]
			[Address(RVA = "0xC21288", Offset = "0xC21288", VA = "0xC21288")]
			internal void <BindDragItemOnDragBegin>b__0(PointerEventData data)
			{
			}
		}

		[Token(Token = "0x2000430")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9406A0", Offset = "0x9406A0")]
		private sealed class <>c__DisplayClass123_0
		{
			[Token(Token = "0x40010E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LuaFunction lf;

			[Token(Token = "0x6002E4D")]
			[Address(RVA = "0xC18FEC", Offset = "0xC18FEC", VA = "0xC18FEC")]
			public <>c__DisplayClass123_0()
			{
			}

			[Token(Token = "0x6002E4E")]
			[Address(RVA = "0xC212F0", Offset = "0xC212F0", VA = "0xC212F0")]
			internal void <BindDragItemOnDragEnd>b__0(PointerEventData data)
			{
			}
		}

		[Token(Token = "0x2000431")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9406B0", Offset = "0x9406B0")]
		private sealed class <>c__DisplayClass124_0
		{
			[Token(Token = "0x40010E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LuaFunction lf;

			[Token(Token = "0x6002E4F")]
			[Address(RVA = "0xC190F0", Offset = "0xC190F0", VA = "0xC190F0")]
			public <>c__DisplayClass124_0()
			{
			}

			[Token(Token = "0x6002E50")]
			[Address(RVA = "0xC21358", Offset = "0xC21358", VA = "0xC21358")]
			internal void <BindDragItemOnDown>b__0(PointerEventData data)
			{
			}
		}

		[Token(Token = "0x2000432")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9406C0", Offset = "0x9406C0")]
		private sealed class <>c__DisplayClass125_0
		{
			[Token(Token = "0x40010E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LuaFunction lf;

			[Token(Token = "0x6002E51")]
			[Address(RVA = "0xC191F4", Offset = "0xC191F4", VA = "0xC191F4")]
			public <>c__DisplayClass125_0()
			{
			}

			[Token(Token = "0x6002E52")]
			[Address(RVA = "0xC213C0", Offset = "0xC213C0", VA = "0xC213C0")]
			internal void <BindDragItemOnUp>b__0(PointerEventData data)
			{
			}
		}

		[Token(Token = "0x2000433")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9406D0", Offset = "0x9406D0")]
		private sealed class <>c__DisplayClass126_0
		{
			[Token(Token = "0x40010E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LuaFunction lf;

			[Token(Token = "0x6002E53")]
			[Address(RVA = "0xC192F8", Offset = "0xC192F8", VA = "0xC192F8")]
			public <>c__DisplayClass126_0()
			{
			}

			[Token(Token = "0x6002E54")]
			[Address(RVA = "0xC21428", Offset = "0xC21428", VA = "0xC21428")]
			internal void <BindDragItemOnDragOut>b__0(PointerEventData data)
			{
			}
		}

		[Token(Token = "0x2000434")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9406E0", Offset = "0x9406E0")]
		private sealed class <>c__DisplayClass127_0
		{
			[Token(Token = "0x40010E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LuaFunction lf;

			[Token(Token = "0x6002E55")]
			[Address(RVA = "0xC193FC", Offset = "0xC193FC", VA = "0xC193FC")]
			public <>c__DisplayClass127_0()
			{
			}

			[Token(Token = "0x6002E56")]
			[Address(RVA = "0xC21490", Offset = "0xC21490", VA = "0xC21490")]
			internal void <BindDragItemOnPointerEnter>b__0(PointerEventData data)
			{
			}
		}

		[Token(Token = "0x2000435")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9406F0", Offset = "0x9406F0")]
		private sealed class <>c__DisplayClass128_0
		{
			[Token(Token = "0x40010E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LuaFunction lf;

			[Token(Token = "0x6002E57")]
			[Address(RVA = "0xC19500", Offset = "0xC19500", VA = "0xC19500")]
			public <>c__DisplayClass128_0()
			{
			}

			[Token(Token = "0x6002E58")]
			[Address(RVA = "0xC214F8", Offset = "0xC214F8", VA = "0xC214F8")]
			internal void <BindDragItemOnPointerExit>b__0(PointerEventData data)
			{
			}
		}

		[Token(Token = "0x2000436")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940700", Offset = "0x940700")]
		private sealed class <>c__DisplayClass129_0
		{
			[Token(Token = "0x40010EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LuaFunction lf;

			[Token(Token = "0x6002E59")]
			[Address(RVA = "0xC19604", Offset = "0xC19604", VA = "0xC19604")]
			public <>c__DisplayClass129_0()
			{
			}

			[Token(Token = "0x6002E5A")]
			[Address(RVA = "0xC21560", Offset = "0xC21560", VA = "0xC21560")]
			internal void <BindDragItemOnDragOutAtFirst>b__0(PointerEventData data)
			{
			}
		}

		[Token(Token = "0x2000437")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940710", Offset = "0x940710")]
		private sealed class <>c__DisplayClass143_0
		{
			[Token(Token = "0x40010EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LuaFunction lf;

			[Token(Token = "0x6002E5B")]
			[Address(RVA = "0xC1A098", Offset = "0xC1A098", VA = "0xC1A098")]
			public <>c__DisplayClass143_0()
			{
			}

			[Token(Token = "0x6002E5C")]
			[Address(RVA = "0xC215C8", Offset = "0xC215C8", VA = "0xC215C8")]
			internal void <BindRichTextHRefClick>b__0(string txt)
			{
			}
		}

		[Token(Token = "0x2000438")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940720", Offset = "0x940720")]
		private sealed class <>c__DisplayClass144_0
		{
			[Token(Token = "0x40010EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LuaFunction lf;

			[Token(Token = "0x6002E5D")]
			[Address(RVA = "0xC1A1C4", Offset = "0xC1A1C4", VA = "0xC1A1C4")]
			public <>c__DisplayClass144_0()
			{
			}

			[Token(Token = "0x6002E5E")]
			[Address(RVA = "0xC21630", Offset = "0xC21630", VA = "0xC21630")]
			internal void <BindRichTextHRefClick>b__0(string txt)
			{
			}
		}

		[Token(Token = "0x2000439")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940730", Offset = "0x940730")]
		private sealed class <>c__DisplayClass146_0
		{
			[Token(Token = "0x40010ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LuaFunction lf;

			[Token(Token = "0x6002E5F")]
			[Address(RVA = "0xC1A3A8", Offset = "0xC1A3A8", VA = "0xC1A3A8")]
			public <>c__DisplayClass146_0()
			{
			}

			[Token(Token = "0x6002E60")]
			[Address(RVA = "0xC21698", Offset = "0xC21698", VA = "0xC21698")]
			internal void <BindSld>b__0(float value)
			{
			}
		}

		[Token(Token = "0x200043A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940740", Offset = "0x940740")]
		private sealed class <>c__DisplayClass165_0
		{
			[Token(Token = "0x40010EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Image tmp;

			[Token(Token = "0x40010EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Material mat;

			[Token(Token = "0x6002E61")]
			[Address(RVA = "0xC1B064", Offset = "0xC1B064", VA = "0xC1B064")]
			public <>c__DisplayClass165_0()
			{
			}

			[Token(Token = "0x6002E62")]
			[Address(RVA = "0xC21700", Offset = "0xC21700", VA = "0xC21700")]
			internal void <SetImgAndNotSetMaterial>b__0()
			{
			}
		}

		[Token(Token = "0x200043B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940750", Offset = "0x940750")]
		private sealed class <>c__DisplayClass166_0
		{
			[Token(Token = "0x40010F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Material mat;

			[Token(Token = "0x40010F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ComViewLoader <>4__this;

			[Token(Token = "0x40010F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int name;

			[Token(Token = "0x40010F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string icon;

			[Token(Token = "0x6002E63")]
			[Address(RVA = "0xC1B138", Offset = "0xC1B138", VA = "0xC1B138")]
			public <>c__DisplayClass166_0()
			{
			}

			[Token(Token = "0x6002E64")]
			[Address(RVA = "0xC2172C", Offset = "0xC2172C", VA = "0xC2172C")]
			internal void <SetImgAndMaterial>b__0(Resource res, object datas)
			{
			}
		}

		[Token(Token = "0x200043C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940760", Offset = "0x940760")]
		private sealed class <>c__DisplayClass166_1
		{
			[Token(Token = "0x40010F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Image tmp;

			[Token(Token = "0x40010F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass166_0 CS$<>8__locals1;

			[Token(Token = "0x6002E65")]
			[Address(RVA = "0xC21894", Offset = "0xC21894", VA = "0xC21894")]
			public <>c__DisplayClass166_1()
			{
			}

			[Token(Token = "0x6002E66")]
			[Address(RVA = "0xC2189C", Offset = "0xC2189C", VA = "0xC2189C")]
			internal void <SetImgAndMaterial>b__1()
			{
			}
		}

		[Token(Token = "0x200043D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940770", Offset = "0x940770")]
		private sealed class <>c__DisplayClass167_0
		{
			[Token(Token = "0x40010F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RawImage tmp;

			[Token(Token = "0x40010F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ComViewLoader <>4__this;

			[Token(Token = "0x40010F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int name;

			[Token(Token = "0x6002E67")]
			[Address(RVA = "0xC1B300", Offset = "0xC1B300", VA = "0xC1B300")]
			public <>c__DisplayClass167_0()
			{
			}

			[Token(Token = "0x6002E68")]
			[Address(RVA = "0xC218D0", Offset = "0xC218D0", VA = "0xC218D0")]
			internal void <SetRawImg>b__0(Resource res, object datas)
			{
			}
		}

		[Token(Token = "0x200043E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940780", Offset = "0x940780")]
		private sealed class <>c__DisplayClass170_0
		{
			[Token(Token = "0x40010F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LuaFunction lf;

			[Token(Token = "0x6002E69")]
			[Address(RVA = "0xC1B580", Offset = "0xC1B580", VA = "0xC1B580")]
			public <>c__DisplayClass170_0()
			{
			}

			[Token(Token = "0x6002E6A")]
			[Address(RVA = "0xC21A8C", Offset = "0xC21A8C", VA = "0xC21A8C")]
			internal void <BindDropdown>b__0(int value)
			{
			}
		}

		[Token(Token = "0x200043F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940790", Offset = "0x940790")]
		private sealed class <>c__DisplayClass173_0
		{
			[Token(Token = "0x40010FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LuaFunction lf;

			[Token(Token = "0x6002E6B")]
			[Address(RVA = "0xC1B854", Offset = "0xC1B854", VA = "0xC1B854")]
			public <>c__DisplayClass173_0()
			{
			}

			[Token(Token = "0x6002E6C")]
			[Address(RVA = "0xC21AF4", Offset = "0xC21AF4", VA = "0xC21AF4")]
			internal void <BindTog>b__0(bool value)
			{
			}
		}

		[Token(Token = "0x2000440")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9407A0", Offset = "0x9407A0")]
		private sealed class <>c__DisplayClass176_0
		{
			[Token(Token = "0x40010FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LuaFunction call;

			[Token(Token = "0x6002E6D")]
			[Address(RVA = "0xC1BBD0", Offset = "0xC1BBD0", VA = "0xC1BBD0")]
			public <>c__DisplayClass176_0()
			{
			}
		}

		[Token(Token = "0x2000441")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9407B0", Offset = "0x9407B0")]
		private sealed class <>c__DisplayClass176_1
		{
			[Token(Token = "0x40010FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Toggle tog;

			[Token(Token = "0x40010FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int index;

			[Token(Token = "0x40010FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public <>c__DisplayClass176_0 CS$<>8__locals1;

			[Token(Token = "0x6002E6E")]
			[Address(RVA = "0xC1BBD8", Offset = "0xC1BBD8", VA = "0xC1BBD8")]
			public <>c__DisplayClass176_1()
			{
			}

			[Token(Token = "0x6002E6F")]
			[Address(RVA = "0xC21B5C", Offset = "0xC21B5C", VA = "0xC21B5C")]
			internal void <BindToggleGroup>b__0(bool isActive)
			{
			}
		}

		[Token(Token = "0x2000442")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9407C0", Offset = "0x9407C0")]
		private sealed class <>c__DisplayClass177_0
		{
			[Token(Token = "0x40010FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LuaFunction call;

			[Token(Token = "0x6002E70")]
			[Address(RVA = "0xC1BEAC", Offset = "0xC1BEAC", VA = "0xC1BEAC")]
			public <>c__DisplayClass177_0()
			{
			}
		}

		[Token(Token = "0x2000443")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9407D0", Offset = "0x9407D0")]
		private sealed class <>c__DisplayClass177_1
		{
			[Token(Token = "0x4001100")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Toggle tog;

			[Token(Token = "0x4001101")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int index;

			[Token(Token = "0x4001102")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public <>c__DisplayClass177_0 CS$<>8__locals1;

			[Token(Token = "0x6002E71")]
			[Address(RVA = "0xC1BEB4", Offset = "0xC1BEB4", VA = "0xC1BEB4")]
			public <>c__DisplayClass177_1()
			{
			}

			[Token(Token = "0x6002E72")]
			[Address(RVA = "0xC21BD4", Offset = "0xC21BD4", VA = "0xC21BD4")]
			internal void <BindToggleGroupAndRemove>b__0(bool isActive)
			{
			}
		}

		[Token(Token = "0x2000444")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9407E0", Offset = "0x9407E0")]
		private sealed class <>c__DisplayClass181_0
		{
			[Token(Token = "0x4001103")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public InputField tmp;

			[Token(Token = "0x4001104")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LuaFunction lfOnValueChanged;

			[Token(Token = "0x4001105")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LuaFunction lfOnEndEdit;

			[Token(Token = "0x6002E73")]
			[Address(RVA = "0xC1C1D0", Offset = "0xC1C1D0", VA = "0xC1C1D0")]
			public <>c__DisplayClass181_0()
			{
			}

			[Token(Token = "0x6002E74")]
			[Address(RVA = "0xC21C4C", Offset = "0xC21C4C", VA = "0xC21C4C")]
			internal void <BindInp>b__0(string value)
			{
			}

			[Token(Token = "0x6002E75")]
			[Address(RVA = "0xC21E88", Offset = "0xC21E88", VA = "0xC21E88")]
			internal void <BindInp>b__1(string value)
			{
			}
		}

		[Token(Token = "0x2000445")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9407F0", Offset = "0x9407F0")]
		private sealed class <>c__DisplayClass188_0
		{
			[Token(Token = "0x4001106")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LuaFunction init;

			[Token(Token = "0x4001107")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LuaFunction fill;

			[Token(Token = "0x6002E76")]
			[Address(RVA = "0xC1C7A8", Offset = "0xC1C7A8", VA = "0xC1C7A8")]
			public <>c__DisplayClass188_0()
			{
			}

			[Token(Token = "0x6002E77")]
			[Address(RVA = "0xC21EF0", Offset = "0xC21EF0", VA = "0xC21EF0")]
			internal void <SetGrid>b__0(GameObject go)
			{
			}

			[Token(Token = "0x6002E78")]
			[Address(RVA = "0xC21F58", Offset = "0xC21F58", VA = "0xC21F58")]
			internal void <SetGrid>b__1(GameObject go, int index)
			{
			}
		}

		[Token(Token = "0x2000446")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940800", Offset = "0x940800")]
		private sealed class <>c__DisplayClass190_0
		{
			[Token(Token = "0x4001108")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LuaFunction call;

			[Token(Token = "0x6002E79")]
			[Address(RVA = "0xC1C93C", Offset = "0xC1C93C", VA = "0xC1C93C")]
			public <>c__DisplayClass190_0()
			{
			}

			[Token(Token = "0x6002E7A")]
			[Address(RVA = "0xC21FC8", Offset = "0xC21FC8", VA = "0xC21FC8")]
			internal void <SetGridMoveCall>b__0(Vector2 v2)
			{
			}
		}

		[Token(Token = "0x2000447")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940810", Offset = "0x940810")]
		private sealed class <>c__DisplayClass191_0
		{
			[Token(Token = "0x4001109")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LuaFunction call;

			[Token(Token = "0x6002E7B")]
			[Address(RVA = "0xC1CA78", Offset = "0xC1CA78", VA = "0xC1CA78")]
			public <>c__DisplayClass191_0()
			{
			}

			[Token(Token = "0x6002E7C")]
			[Address(RVA = "0xC21FE4", Offset = "0xC21FE4", VA = "0xC21FE4")]
			internal void <SetGridMoveBeginCall>b__0(PointerEventData eventData)
			{
			}
		}

		[Token(Token = "0x2000448")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940820", Offset = "0x940820")]
		private sealed class <>c__DisplayClass192_0
		{
			[Token(Token = "0x400110A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LuaFunction call;

			[Token(Token = "0x6002E7D")]
			[Address(RVA = "0xC1CBB4", Offset = "0xC1CBB4", VA = "0xC1CBB4")]
			public <>c__DisplayClass192_0()
			{
			}

			[Token(Token = "0x6002E7E")]
			[Address(RVA = "0xC22000", Offset = "0xC22000", VA = "0xC22000")]
			internal void <SetGridMoveEndCall>b__0(PointerEventData eventData)
			{
			}
		}

		[Token(Token = "0x2000449")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940830", Offset = "0x940830")]
		private sealed class <>c__DisplayClass254_0
		{
			[Token(Token = "0x400110B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int key;

			[Token(Token = "0x400110C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public TweenCallback <>9__0;

			[Token(Token = "0x6002E7F")]
			[Address(RVA = "0xC1ED5C", Offset = "0xC1ED5C", VA = "0xC1ED5C")]
			public <>c__DisplayClass254_0()
			{
			}

			[Token(Token = "0x6002E80")]
			[Address(RVA = "0xC2201C", Offset = "0xC2201C", VA = "0xC2201C")]
			internal void <AddCompleteViewNotify>b__0()
			{
			}
		}

		[Token(Token = "0x200044A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940840", Offset = "0x940840")]
		private sealed class <>c__DisplayClass266_0
		{
			[Token(Token = "0x400110D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LuaFunction func;

			[Token(Token = "0x6002E81")]
			[Address(RVA = "0xC1F6C4", Offset = "0xC1F6C4", VA = "0xC1F6C4")]
			public <>c__DisplayClass266_0()
			{
			}

			[Token(Token = "0x6002E82")]
			[Address(RVA = "0xC22024", Offset = "0xC22024", VA = "0xC22024")]
			internal void <_bindEntry>b__0(BaseEventData data)
			{
			}
		}

		[Token(Token = "0x200044B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940850", Offset = "0x940850")]
		private sealed class <>c__DisplayClass276_0
		{
			[Token(Token = "0x400110E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LuaFunction onCenter;

			[Token(Token = "0x6002E83")]
			[Address(RVA = "0xC1FDA8", Offset = "0xC1FDA8", VA = "0xC1FDA8")]
			public <>c__DisplayClass276_0()
			{
			}

			[Token(Token = "0x6002E84")]
			[Address(RVA = "0xC220CC", Offset = "0xC220CC", VA = "0xC220CC")]
			internal void <AddPageViewCenter>b__0(GameObject child, int index)
			{
			}
		}

		[Token(Token = "0x4000B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Dictionary<int, Type> _dicE2T;

		[Token(Token = "0x4000B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<int, Dictionary<string, bool>> dicNameList;

		[Token(Token = "0x4000B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<int, DOTweenAnimation> _dicTween;

		[Token(Token = "0x4000B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<int, Dictionary<int, Component>> dicWidgets;

		[Token(Token = "0x4000B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<int, LayoutElement> _dic4layout;

		[Token(Token = "0x4000B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<int, SwordEventTrigger> _dic4Trigger;

		[Token(Token = "0x4000B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<int, DragItem> _dic4DragItem;

		[Token(Token = "0x4000B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Dictionary<int, CheckInsideItem> _dic4DropItem;

		[Token(Token = "0x4000B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Dictionary<int, Transform> _dic4ColliderItem;

		[Token(Token = "0x4000B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Dictionary<int, SpriteRenderer> _dic4SpriteRenderItem;

		[Token(Token = "0x4000B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GameObject _owner;

		[Token(Token = "0x4000B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private RectTransform _ownerRect;

		[Token(Token = "0x4000B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private LayoutElement _ownerLayout;

		[Token(Token = "0x4000B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Animator _animator;

		[Token(Token = "0x4000B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private ComLuaResLoader _resLoader;

		[Token(Token = "0x4000B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private LuaTable mTable;

		[Token(Token = "0x4000B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private UIComponentContainer__HAIBAO__SWORD__ mComps;

		[Token(Token = "0x4000B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Dictionary<int, Resource> mCacheResource;

		[Token(Token = "0x4000B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private List<LuaFunction> _listAllFunc;

		[Token(Token = "0x4000B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private LuaFunction _luaFuncBg;

		[Token(Token = "0x4000B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool _isDestroyed;

		[Token(Token = "0x4000B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private GameObject _bg;

		[Token(Token = "0x4000B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private RectTransform _rectBg;

		[Token(Token = "0x4000B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<int> _listRemoveCharIndex;

		[Token(Token = "0x4000B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Dictionary<GameObject, LuaTable> _dictPoolObject;

		[Token(Token = "0x4000B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Dictionary<string, Queue<GameObject>> _dictPoolGO;

		[Token(Token = "0x1700011F")]
		public RectTransform OwnerRect
		{
			[Token(Token = "0x6002210")]
			[Address(RVA = "0xC13710", Offset = "0xC13710", VA = "0xC13710")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000120")]
		public LayoutElement OwnerLayout
		{
			[Token(Token = "0x6002211")]
			[Address(RVA = "0xC137B0", Offset = "0xC137B0", VA = "0xC137B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000121")]
		private bool _hasAnimator
		{
			[Token(Token = "0x60022CE")]
			[Address(RVA = "0xC1D958", Offset = "0xC1D958", VA = "0xC1D958")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002212")]
		[Address(RVA = "0xC13850", Offset = "0xC13850", VA = "0xC13850")]
		[NoToLua]
		public static Dictionary<int, Type> GetDicE2T()
		{
			return null;
		}

		[Token(Token = "0x6002213")]
		[Address(RVA = "0xC138B8", Offset = "0xC138B8", VA = "0xC138B8")]
		public void AddBg()
		{
		}

		[Token(Token = "0x6002214")]
		[Address(RVA = "0xC13A74", Offset = "0xC13A74", VA = "0xC13A74")]
		private void _onTouchBg()
		{
		}

		[Token(Token = "0x6002215")]
		[Address(RVA = "0xC13AC0", Offset = "0xC13AC0", VA = "0xC13AC0")]
		public void SetBgActive(bool isActive)
		{
		}

		[Token(Token = "0x6002216")]
		[Address(RVA = "0xC13B68", Offset = "0xC13B68", VA = "0xC13B68")]
		public void SetBgToTop(bool isTop)
		{
		}

		[Token(Token = "0x6002217")]
		[Address(RVA = "0xC13C1C", Offset = "0xC13C1C", VA = "0xC13C1C")]
		public void SetBgCallback(LuaFunction call)
		{
		}

		[Token(Token = "0x6002218")]
		[Address(RVA = "0xC13D4C", Offset = "0xC13D4C", VA = "0xC13D4C")]
		public ComViewLoader()
		{
		}

		[Token(Token = "0x6002219")]
		[Address(RVA = "0xC14034", Offset = "0xC14034", VA = "0xC14034")]
		public void SetGameObject(GameObject go)
		{
		}

		[Token(Token = "0x600221A")]
		[Address(RVA = "0xC140A4", Offset = "0xC140A4", VA = "0xC140A4")]
		public void SetTable(LuaTable t)
		{
		}

		[Token(Token = "0x600221B")]
		[Address(RVA = "0xC140AC", Offset = "0xC140AC", VA = "0xC140AC")]
		public void SetActive(bool isActive)
		{
		}

		[Token(Token = "0x600221C")]
		[Address(RVA = "0xC140CC", Offset = "0xC140CC", VA = "0xC140CC")]
		public bool GetActiveInHierarchy(GameObject go)
		{
			return default(bool);
		}

		[Token(Token = "0x600221D")]
		[Address(RVA = "0xC140E8", Offset = "0xC140E8", VA = "0xC140E8")]
		public void AddNames(string name, eUIWidgetName t)
		{
		}

		[Token(Token = "0x600221E")]
		[Address(RVA = "0xC140EC", Offset = "0xC140EC", VA = "0xC140EC")]
		public void AddNames(string name, int type)
		{
		}

		[Token(Token = "0x600221F")]
		[Address(RVA = "0xC14174", Offset = "0xC14174", VA = "0xC14174")]
		public void LoadWidget(LuaTable table)
		{
		}

		[Token(Token = "0x6002220")]
		[Address(RVA = "0xC14178", Offset = "0xC14178", VA = "0xC14178")]
		public void LoadWidget()
		{
		}

		[Token(Token = "0x6002221")]
		[Address(RVA = "0xC14660", Offset = "0xC14660", VA = "0xC14660")]
		private Dictionary<int, Component> GetWidgetDictionary(eUIWidgetName eName)
		{
			return null;
		}

		[Token(Token = "0x6002222")]
		[Address(RVA = "0xC14518", Offset = "0xC14518", VA = "0xC14518")]
		private void LoadWidgets(eUIWidgetName eName, Type type)
		{
		}

		[Token(Token = "0x6002223")]
		[Address(RVA = "0xC147C4", Offset = "0xC147C4", VA = "0xC147C4")]
		internal int GetHash(string name)
		{
			return default(int);
		}

		[Token(Token = "0x6002224")]
		[Address(RVA = "0xC1499C", Offset = "0xC1499C", VA = "0xC1499C")]
		internal int GetHashNoLog(string name)
		{
			return default(int);
		}

		[Token(Token = "0x6002225")]
		[Address(RVA = "0xC149BC", Offset = "0xC149BC", VA = "0xC149BC")]
		private void LoadGrid()
		{
		}

		[Token(Token = "0x6002226")]
		private void LoadGrid<T>(eUIWidgetName eName) where T : Component
		{
		}

		[Token(Token = "0x6002227")]
		[Address(RVA = "0xC14334", Offset = "0xC14334", VA = "0xC14334")]
		private void LoadLoopRect()
		{
		}

		[Token(Token = "0x6002228")]
		[Address(RVA = "0xC146C8", Offset = "0xC146C8", VA = "0xC146C8")]
		private void AddCompInDic(string name, Component comp, Dictionary<int, Component> dic)
		{
		}

		[Token(Token = "0x6002229")]
		[Address(RVA = "0xC14B8C", Offset = "0xC14B8C", VA = "0xC14B8C")]
		private Component GetWidget(eUIWidgetName eName, int name)
		{
			return null;
		}

		[Token(Token = "0x600222A")]
		[NoToLua]
		private T GetWidget<T>(eUIWidgetName eName, int name) where T : Component
		{
			return null;
		}

		[Token(Token = "0x600222B")]
		[Address(RVA = "0xC14C54", Offset = "0xC14C54", VA = "0xC14C54")]
		public void Dispose()
		{
		}

		[Token(Token = "0x600222C")]
		[Address(RVA = "0xC158AC", Offset = "0xC158AC", VA = "0xC158AC")]
		public bool IsDestroyed()
		{
			return default(bool);
		}

		[Token(Token = "0x600222D")]
		[Address(RVA = "0xC158B4", Offset = "0xC158B4", VA = "0xC158B4")]
		public Component GetComp(int type, int name)
		{
			return null;
		}

		[Token(Token = "0x600222E")]
		[Address(RVA = "0xC15938", Offset = "0xC15938", VA = "0xC15938")]
		public Dictionary<int, Component> GetComps(int type)
		{
			return null;
		}

		[Token(Token = "0x600222F")]
		[Address(RVA = "0xC14B90", Offset = "0xC14B90", VA = "0xC14B90")]
		public Component TryGetComp(int type, int nameHash)
		{
			return null;
		}

		[Token(Token = "0x6002230")]
		[Address(RVA = "0xC159A0", Offset = "0xC159A0", VA = "0xC159A0")]
		public Behaviour GetBehaviour(int type, int key, string compName)
		{
			return null;
		}

		[Token(Token = "0x6002231")]
		public T GetComp<T>(int type, int name) where T : UIBehaviour
		{
			return null;
		}

		[Token(Token = "0x6002232")]
		[Address(RVA = "0xC15A60", Offset = "0xC15A60", VA = "0xC15A60")]
		public GameObject GetGO(int type, int name)
		{
			return null;
		}

		[Token(Token = "0x6002233")]
		[Address(RVA = "0xC15A80", Offset = "0xC15A80", VA = "0xC15A80")]
		public Transform GetTS(int type, int name)
		{
			return null;
		}

		[Token(Token = "0x6002234")]
		[Address(RVA = "0xC15AA0", Offset = "0xC15AA0", VA = "0xC15AA0")]
		public void SetComEnable(int type, int name, string typeName, bool isEnable)
		{
		}

		[Token(Token = "0x6002235")]
		[Address(RVA = "0xC15BB8", Offset = "0xC15BB8", VA = "0xC15BB8")]
		public void SetAlpha(int type, int name, float a)
		{
		}

		[Token(Token = "0x6002236")]
		[Address(RVA = "0xC15CD0", Offset = "0xC15CD0", VA = "0xC15CD0")]
		public void SetPos(int type, int name, LuaTable vec3)
		{
		}

		[Token(Token = "0x6002237")]
		[Address(RVA = "0xC15D70", Offset = "0xC15D70", VA = "0xC15D70")]
		public void SetScale(int type, int name, LuaTable scale)
		{
		}

		[Token(Token = "0x6002238")]
		[Address(RVA = "0xC15E10", Offset = "0xC15E10", VA = "0xC15E10")]
		public void SetColor(int type, int name, LuaTable color)
		{
		}

		[Token(Token = "0x6002239")]
		[Address(RVA = "0xC15F08", Offset = "0xC15F08", VA = "0xC15F08")]
		public void SetColor32(int type, int name, byte r, byte g, byte b)
		{
		}

		[Token(Token = "0x600223A")]
		[Address(RVA = "0xC16008", Offset = "0xC16008", VA = "0xC16008")]
		public void SetOutlineColor(int type, int name, byte r, byte g, byte b)
		{
		}

		[Token(Token = "0x600223B")]
		[Address(RVA = "0xC16144", Offset = "0xC16144", VA = "0xC16144")]
		public void SetVisible(int type, int name, bool isVisible)
		{
		}

		[Token(Token = "0x600223C")]
		[Address(RVA = "0xC165A4", Offset = "0xC165A4", VA = "0xC165A4")]
		public void SetEnable(int type, int name, bool value)
		{
		}

		[Token(Token = "0x600223D")]
		[Address(RVA = "0xC166A8", Offset = "0xC166A8", VA = "0xC166A8")]
		public GameObject SetChildVisible(int type, int name, int index, bool isVisible)
		{
			return null;
		}

		[Token(Token = "0x600223E")]
		[Address(RVA = "0xC167BC", Offset = "0xC167BC", VA = "0xC167BC")]
		public void SetGray(int type, int name, bool isGray)
		{
		}

		[Token(Token = "0x600223F")]
		[Address(RVA = "0xC16928", Offset = "0xC16928", VA = "0xC16928")]
		public void SetAllGray(GameObject go, bool isGray)
		{
		}

		[Token(Token = "0x6002240")]
		[Address(RVA = "0xC166E4", Offset = "0xC166E4", VA = "0xC166E4")]
		public GameObject GetCompChild(int type, int name, int index)
		{
			return null;
		}

		[Token(Token = "0x6002241")]
		[Address(RVA = "0xC16994", Offset = "0xC16994", VA = "0xC16994")]
		public Component GetChildComp(int type, int name, int index, string typeName)
		{
			return null;
		}

		[Token(Token = "0x6002242")]
		[Address(RVA = "0xC169C4", Offset = "0xC169C4", VA = "0xC169C4")]
		public int GetCompChildCount(int type, int name)
		{
			return default(int);
		}

		[Token(Token = "0x6002243")]
		[Address(RVA = "0xC16A8C", Offset = "0xC16A8C", VA = "0xC16A8C")]
		public RectTransform GetRect(int type, int name)
		{
			return null;
		}

		[Token(Token = "0x6002244")]
		[Address(RVA = "0xC16B00", Offset = "0xC16B00", VA = "0xC16B00")]
		public LayoutElement GetElem(int type, int name)
		{
			return null;
		}

		[Token(Token = "0x6002245")]
		[Address(RVA = "0xC16BD4", Offset = "0xC16BD4", VA = "0xC16BD4")]
		public SwordEventTrigger GetTrigger(int type, int name)
		{
			return null;
		}

		[Token(Token = "0x6002246")]
		[Address(RVA = "0xC16D04", Offset = "0xC16D04", VA = "0xC16D04")]
		public DragItem GetDragItem(int type, int name)
		{
			return null;
		}

		[Token(Token = "0x6002247")]
		[Address(RVA = "0xC16E3C", Offset = "0xC16E3C", VA = "0xC16E3C")]
		public CheckInsideItem GetDropItem(int type, int name)
		{
			return null;
		}

		[Token(Token = "0x6002248")]
		[Address(RVA = "0xC16F6C", Offset = "0xC16F6C", VA = "0xC16F6C")]
		public ColliderItem GetColliderItem(int type, int name)
		{
			return null;
		}

		[Token(Token = "0x6002249")]
		[Address(RVA = "0xC170C4", Offset = "0xC170C4", VA = "0xC170C4")]
		public ContentSizeFitter GetFitter(int type, int name)
		{
			return null;
		}

		[Token(Token = "0x600224A")]
		[Address(RVA = "0xC17138", Offset = "0xC17138", VA = "0xC17138")]
		public void SetSize(int type, int name, float x, float y)
		{
		}

		[Token(Token = "0x600224B")]
		[Address(RVA = "0xC17198", Offset = "0xC17198", VA = "0xC17198")]
		public void SetWidth(int type, int name, float x)
		{
		}

		[Token(Token = "0x600224C")]
		[Address(RVA = "0xC17200", Offset = "0xC17200", VA = "0xC17200")]
		public Vector2 GetSize(int type, int name)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600224D")]
		[Address(RVA = "0xC17220", Offset = "0xC17220", VA = "0xC17220")]
		public float GetHeight(int type, int name)
		{
			return default(float);
		}

		[Token(Token = "0x600224E")]
		[Address(RVA = "0xC17238", Offset = "0xC17238", VA = "0xC17238")]
		public float GetWidth(int type, int name)
		{
			return default(float);
		}

		[Token(Token = "0x600224F")]
		[Address(RVA = "0xC1723C", Offset = "0xC1723C", VA = "0xC1723C")]
		public void SetLayoutSize(int type, int name, int axis)
		{
		}

		[Token(Token = "0x6002250")]
		[Address(RVA = "0xC17280", Offset = "0xC17280", VA = "0xC17280")]
		public float GetPreferredSize(int type, int name, int axis)
		{
			return default(float);
		}

		[Token(Token = "0x6002251")]
		[Address(RVA = "0xC172A8", Offset = "0xC172A8", VA = "0xC172A8")]
		public void SetPreferredWidth(int type, int name, float value)
		{
		}

		[Token(Token = "0x6002252")]
		[Address(RVA = "0xC172E0", Offset = "0xC172E0", VA = "0xC172E0")]
		public float GetPreferredWidth(int type, int name)
		{
			return default(float);
		}

		[Token(Token = "0x6002253")]
		[Address(RVA = "0xC172FC", Offset = "0xC172FC", VA = "0xC172FC")]
		public void SetPreferredHeight(int type, int name, float value)
		{
		}

		[Token(Token = "0x6002254")]
		[Address(RVA = "0xC17334", Offset = "0xC17334", VA = "0xC17334")]
		public float GetPreferredHeight(int type, int name)
		{
			return default(float);
		}

		[Token(Token = "0x6002255")]
		[Address(RVA = "0xC17350", Offset = "0xC17350", VA = "0xC17350")]
		public float GetPreferredHeightLayoutGroup(int type, int name)
		{
			return default(float);
		}

		[Token(Token = "0x6002256")]
		[Address(RVA = "0xC173D0", Offset = "0xC173D0", VA = "0xC173D0")]
		public float GetPreferredWidthLayoutGroup(int type, int name)
		{
			return default(float);
		}

		[Token(Token = "0x6002257")]
		[Address(RVA = "0xC17450", Offset = "0xC17450", VA = "0xC17450")]
		public void SetRaycast(int type, int key, bool raycastTarget)
		{
		}

		[Token(Token = "0x6002258")]
		[Address(RVA = "0xC17504", Offset = "0xC17504", VA = "0xC17504")]
		public void BindBtn(string name, LuaFunction lf)
		{
		}

		[Token(Token = "0x6002259")]
		[Address(RVA = "0xC1754C", Offset = "0xC1754C", VA = "0xC1754C")]
		public void BindBtn(int key, LuaFunction lf)
		{
		}

		[Token(Token = "0x600225A")]
		[Address(RVA = "0xC176BC", Offset = "0xC176BC", VA = "0xC176BC")]
		public void BindBtnLongPressClick(string name, LuaFunction lf)
		{
		}

		[Token(Token = "0x600225B")]
		[Address(RVA = "0xC17704", Offset = "0xC17704", VA = "0xC17704")]
		public void BindBtnLongPressClick(int key, LuaFunction lf)
		{
		}

		[Token(Token = "0x600225C")]
		[Address(RVA = "0xC177AC", Offset = "0xC177AC", VA = "0xC177AC")]
		public void BindBtnEnter(string name, LuaFunction lf)
		{
		}

		[Token(Token = "0x600225D")]
		[Address(RVA = "0xC17A08", Offset = "0xC17A08", VA = "0xC17A08")]
		public void BindBtnExit(string name, LuaFunction lf)
		{
		}

		[Token(Token = "0x600225E")]
		[Address(RVA = "0xC17B34", Offset = "0xC17B34", VA = "0xC17B34")]
		public void BindClickDown(string name, LuaFunction lf)
		{
		}

		[Token(Token = "0x600225F")]
		[Address(RVA = "0xC17C60", Offset = "0xC17C60", VA = "0xC17C60")]
		public void BindClickUp(string name, LuaFunction lf)
		{
		}

		[Token(Token = "0x6002260")]
		[Address(RVA = "0xC175F4", Offset = "0xC175F4", VA = "0xC175F4")]
		public void BindClick(ButtonEx btn, LuaFunction lf)
		{
		}

		[Token(Token = "0x6002261")]
		[Address(RVA = "0xC17D94", Offset = "0xC17D94", VA = "0xC17D94")]
		public void BindBtnLongPress(string name, LuaFunction lf)
		{
		}

		[Token(Token = "0x6002262")]
		[Address(RVA = "0xC17ED4", Offset = "0xC17ED4", VA = "0xC17ED4")]
		public void BindBtnLongPressUp(string name, LuaFunction lf)
		{
		}

		[Token(Token = "0x6002263")]
		[Address(RVA = "0xC18004", Offset = "0xC18004", VA = "0xC18004")]
		public void BindBtnLongPressDown(string name, LuaFunction lf)
		{
		}

		[Token(Token = "0x6002264")]
		[Address(RVA = "0xC18134", Offset = "0xC18134", VA = "0xC18134")]
		public void BindBtnLongPressNormalUp(string name, LuaFunction lf)
		{
		}

		[Token(Token = "0x6002265")]
		[Address(RVA = "0xC18264", Offset = "0xC18264", VA = "0xC18264")]
		public void BindBtnLongPressNormalClick(string name, LuaFunction lf)
		{
		}

		[Token(Token = "0x6002266")]
		[Address(RVA = "0xC18394", Offset = "0xC18394", VA = "0xC18394")]
		public void BindBtnLongPressDownEnter(string name, LuaFunction lf)
		{
		}

		[Token(Token = "0x6002267")]
		[Address(RVA = "0xC184C4", Offset = "0xC184C4", VA = "0xC184C4")]
		public void BindBtnLongPressDownExit(string name, LuaFunction lf)
		{
		}

		[Token(Token = "0x6002268")]
		[Address(RVA = "0xC185F4", Offset = "0xC185F4", VA = "0xC185F4")]
		public void BindBtnLongPressDrag(string name, LuaFunction lf)
		{
		}

		[Token(Token = "0x6002269")]
		[Address(RVA = "0xC18700", Offset = "0xC18700", VA = "0xC18700")]
		public void BindBtnLongPressDragBegin(string name, LuaFunction lf)
		{
		}

		[Token(Token = "0x600226A")]
		[Address(RVA = "0xC1880C", Offset = "0xC1880C", VA = "0xC1880C")]
		public void BindBtnLongPressDragEnd(string name, LuaFunction lf)
		{
		}

		[Token(Token = "0x600226B")]
		[Address(RVA = "0xC18918", Offset = "0xC18918", VA = "0xC18918")]
		public void BindColliderItemOnSelectEntered(int type, int name, LuaFunction lf)
		{
		}

		[Token(Token = "0x600226C")]
		[Address(RVA = "0xC18A0C", Offset = "0xC18A0C", VA = "0xC18A0C")]
		public void BindColliderItemOnSelectExited(int type, int name, LuaFunction lf)
		{
		}

		[Token(Token = "0x600226D")]
		[Address(RVA = "0xC18B00", Offset = "0xC18B00", VA = "0xC18B00")]
		public void BindColliderItemOnHoverEntered(int type, int name, LuaFunction lf)
		{
		}

		[Token(Token = "0x600226E")]
		[Address(RVA = "0xC18BF4", Offset = "0xC18BF4", VA = "0xC18BF4")]
		public void BindColliderItemOnHoverExited(int type, int name, LuaFunction lf)
		{
		}

		[Token(Token = "0x600226F")]
		[Address(RVA = "0xC18CE8", Offset = "0xC18CE8", VA = "0xC18CE8")]
		public void BindDragItemOnDrag(int type, int name, LuaFunction lf)
		{
		}

		[Token(Token = "0x6002270")]
		[Address(RVA = "0xC18DEC", Offset = "0xC18DEC", VA = "0xC18DEC")]
		public void BindDragItemOnDragBegin(int type, int name, LuaFunction lf)
		{
		}

		[Token(Token = "0x6002271")]
		[Address(RVA = "0xC18EF0", Offset = "0xC18EF0", VA = "0xC18EF0")]
		public void BindDragItemOnDragEnd(int type, int name, LuaFunction lf)
		{
		}

		[Token(Token = "0x6002272")]
		[Address(RVA = "0xC18FF4", Offset = "0xC18FF4", VA = "0xC18FF4")]
		public void BindDragItemOnDown(int type, int name, LuaFunction lf)
		{
		}

		[Token(Token = "0x6002273")]
		[Address(RVA = "0xC190F8", Offset = "0xC190F8", VA = "0xC190F8")]
		public void BindDragItemOnUp(int type, int name, LuaFunction lf)
		{
		}

		[Token(Token = "0x6002274")]
		[Address(RVA = "0xC191FC", Offset = "0xC191FC", VA = "0xC191FC")]
		public void BindDragItemOnDragOut(int type, int name, LuaFunction lf)
		{
		}

		[Token(Token = "0x6002275")]
		[Address(RVA = "0xC19300", Offset = "0xC19300", VA = "0xC19300")]
		public void BindDragItemOnPointerEnter(int type, int name, LuaFunction lf)
		{
		}

		[Token(Token = "0x6002276")]
		[Address(RVA = "0xC19404", Offset = "0xC19404", VA = "0xC19404")]
		public void BindDragItemOnPointerExit(int type, int name, LuaFunction lf)
		{
		}

		[Token(Token = "0x6002277")]
		[Address(RVA = "0xC19508", Offset = "0xC19508", VA = "0xC19508")]
		public void BindDragItemOnDragOutAtFirst(int type, int name, LuaFunction lf)
		{
		}

		[Token(Token = "0x6002278")]
		[Address(RVA = "0xC1960C", Offset = "0xC1960C", VA = "0xC1960C")]
		public void SetButtonImg(int name, string iconName)
		{
		}

		[Token(Token = "0x6002279")]
		[Address(RVA = "0xC196BC", Offset = "0xC196BC", VA = "0xC196BC")]
		public void SetButtonImg(string name, int iconName)
		{
		}

		[Token(Token = "0x600227A")]
		[Address(RVA = "0xC19790", Offset = "0xC19790", VA = "0xC19790")]
		public void SetButtonImg(int name, int iconName)
		{
		}

		[Token(Token = "0x600227B")]
		[Address(RVA = "0xC19858", Offset = "0xC19858", VA = "0xC19858")]
		public void SetButtonState(int name, bool enable)
		{
		}

		[Token(Token = "0x600227C")]
		[Address(RVA = "0xC198DC", Offset = "0xC198DC", VA = "0xC198DC")]
		public void SetTxtAnim(int name, string txt, int fontSize)
		{
		}

		[Token(Token = "0x600227D")]
		[Address(RVA = "0xC19998", Offset = "0xC19998", VA = "0xC19998")]
		public void SetTxtTimeAnim(int name, int start, int end, float duration)
		{
		}

		[Token(Token = "0x600227E")]
		[Address(RVA = "0xC19A5C", Offset = "0xC19A5C", VA = "0xC19A5C")]
		public void SetInlineTxt(int name, string txt)
		{
		}

		[Token(Token = "0x600227F")]
		[Address(RVA = "0xC19B04", Offset = "0xC19B04", VA = "0xC19B04")]
		public void SetInlineTextAutoAdaptive(int name, bool isAuto)
		{
		}

		[Token(Token = "0x6002280")]
		[Address(RVA = "0xC19BAC", Offset = "0xC19BAC", VA = "0xC19BAC")]
		public float GetInlineTextPreferredHeight(int name)
		{
			return default(float);
		}

		[Token(Token = "0x6002281")]
		[Address(RVA = "0xC19C78", Offset = "0xC19C78", VA = "0xC19C78")]
		public float GetTextPreferredHeight(int name)
		{
			return default(float);
		}

		[Token(Token = "0x6002282")]
		[Address(RVA = "0xC19D44", Offset = "0xC19D44", VA = "0xC19D44")]
		public float GetInlineTextPreferredWidth(int name)
		{
			return default(float);
		}

		[Token(Token = "0x6002283")]
		[Address(RVA = "0xC19E10", Offset = "0xC19E10", VA = "0xC19E10")]
		public string GetTxt(int name)
		{
			return null;
		}

		[Token(Token = "0x6002284")]
		[Address(RVA = "0xC19EB0", Offset = "0xC19EB0", VA = "0xC19EB0")]
		public void SetInlineCharOffX(int name, float offset)
		{
		}

		[Token(Token = "0x6002285")]
		[Address(RVA = "0xC19F60", Offset = "0xC19F60", VA = "0xC19F60")]
		public void BindRichTextHRefClick(string name, LuaFunction lf)
		{
		}

		[Token(Token = "0x6002286")]
		[Address(RVA = "0xC1A0A0", Offset = "0xC1A0A0", VA = "0xC1A0A0")]
		public void BindRichTextHRefClick(int key, LuaFunction lf)
		{
		}

		[Token(Token = "0x6002287")]
		[Address(RVA = "0xC1A1CC", Offset = "0xC1A1CC", VA = "0xC1A1CC")]
		public void SetInlineTextOutline(int key, bool isOutLine)
		{
		}

		[Token(Token = "0x6002288")]
		[Address(RVA = "0xC1A270", Offset = "0xC1A270", VA = "0xC1A270")]
		public void BindSld(string name, LuaFunction lf)
		{
		}

		[Token(Token = "0x6002289")]
		[Address(RVA = "0xC1A3B0", Offset = "0xC1A3B0", VA = "0xC1A3B0")]
		public void SetSldValue(int name, float value)
		{
		}

		[Token(Token = "0x600228A")]
		[Address(RVA = "0xC1A460", Offset = "0xC1A460", VA = "0xC1A460")]
		public Sequence SetSldValueAnim(int name, float value, float duration)
		{
			return null;
		}

		[Token(Token = "0x600228B")]
		[Address(RVA = "0xC1A518", Offset = "0xC1A518", VA = "0xC1A518")]
		public float GetSldValue(int name)
		{
			return default(float);
		}

		[Token(Token = "0x600228C")]
		[Address(RVA = "0xC1A5B8", Offset = "0xC1A5B8", VA = "0xC1A5B8")]
		public void SetSldMax(int name, float value)
		{
		}

		[Token(Token = "0x600228D")]
		[Address(RVA = "0xC1A664", Offset = "0xC1A664", VA = "0xC1A664")]
		public float GetSldMax(int name)
		{
			return default(float);
		}

		[Token(Token = "0x600228E")]
		[Address(RVA = "0xC1A700", Offset = "0xC1A700", VA = "0xC1A700")]
		public void SetSldMin(int name, float value)
		{
		}

		[Token(Token = "0x600228F")]
		[Address(RVA = "0xC1A7AC", Offset = "0xC1A7AC", VA = "0xC1A7AC")]
		public float GetSldMin(int name)
		{
			return default(float);
		}

		[Token(Token = "0x6002290")]
		[Address(RVA = "0xC1A848", Offset = "0xC1A848", VA = "0xC1A848")]
		public void SetSldIsWholeNumbers(int name, bool isWhole)
		{
		}

		[Token(Token = "0x6002291")]
		[Address(RVA = "0xC1A8EC", Offset = "0xC1A8EC", VA = "0xC1A8EC")]
		public bool GetSldIsWholeNumbers(int name)
		{
			return default(bool);
		}

		[Token(Token = "0x6002292")]
		[Address(RVA = "0xC1A988", Offset = "0xC1A988", VA = "0xC1A988")]
		public void SetImg(int name, string iconName)
		{
		}

		[Token(Token = "0x6002293")]
		[Address(RVA = "0xC1AA34", Offset = "0xC1AA34", VA = "0xC1AA34")]
		public void SetImg(int name, int iconName)
		{
		}

		[Token(Token = "0x6002294")]
		[Address(RVA = "0xC1AAF4", Offset = "0xC1AAF4", VA = "0xC1AAF4")]
		public void SetImgFillAmount(int name, float fill)
		{
		}

		[Token(Token = "0x6002295")]
		[Address(RVA = "0xC1ABA0", Offset = "0xC1ABA0", VA = "0xC1ABA0")]
		public void SetImgFillVertical(int name)
		{
		}

		[Token(Token = "0x6002296")]
		[Address(RVA = "0xC1AC58", Offset = "0xC1AC58", VA = "0xC1AC58")]
		public void SetImgFillHorizontal(int name)
		{
		}

		[Token(Token = "0x6002297")]
		[Address(RVA = "0xC1AD10", Offset = "0xC1AD10", VA = "0xC1AD10")]
		public void SetImgWithCall(int name, string icon, LuaFunction call)
		{
		}

		[Token(Token = "0x6002298")]
		[Address(RVA = "0xC1ADC8", Offset = "0xC1ADC8", VA = "0xC1ADC8")]
		public void SetImgWithCall(int name, int icon, LuaFunction call)
		{
		}

		[Token(Token = "0x6002299")]
		[Address(RVA = "0xC1AE18", Offset = "0xC1AE18", VA = "0xC1AE18")]
		public void SetCompImg(int type, int name, string iconName)
		{
		}

		[Token(Token = "0x600229A")]
		[Address(RVA = "0xC1AEA8", Offset = "0xC1AEA8", VA = "0xC1AEA8")]
		public void SetImgNativeSize(int name)
		{
		}

		[Token(Token = "0x600229B")]
		[Address(RVA = "0xC1AF48", Offset = "0xC1AF48", VA = "0xC1AF48")]
		public void SetImgAndNotSetMaterial(int name, string icon)
		{
		}

		[Token(Token = "0x600229C")]
		[Address(RVA = "0xC1B06C", Offset = "0xC1B06C", VA = "0xC1B06C")]
		public void SetImgAndMaterial(int name, string icon, string matPath)
		{
		}

		[Token(Token = "0x600229D")]
		[Address(RVA = "0xC1B140", Offset = "0xC1B140", VA = "0xC1B140")]
		public void SetRawImg(int name, string texturePath)
		{
		}

		[Token(Token = "0x600229E")]
		[Address(RVA = "0xC1B308", Offset = "0xC1B308", VA = "0xC1B308")]
		public int GetDropDownValue(int name)
		{
			return default(int);
		}

		[Token(Token = "0x600229F")]
		[Address(RVA = "0xC1B3A4", Offset = "0xC1B3A4", VA = "0xC1B3A4")]
		public void SetDropDownValue(int name, int value)
		{
		}

		[Token(Token = "0x60022A0")]
		[Address(RVA = "0xC1B448", Offset = "0xC1B448", VA = "0xC1B448")]
		public void BindDropdown(string name, LuaFunction lf)
		{
		}

		[Token(Token = "0x60022A1")]
		[Address(RVA = "0xC1B588", Offset = "0xC1B588", VA = "0xC1B588")]
		public void AddDropDownValue(int key, string value)
		{
		}

		[Token(Token = "0x60022A2")]
		[Address(RVA = "0xC1B680", Offset = "0xC1B680", VA = "0xC1B680")]
		public void ClearDropDownValue(int key)
		{
		}

		[Token(Token = "0x60022A3")]
		[Address(RVA = "0xC1B71C", Offset = "0xC1B71C", VA = "0xC1B71C")]
		public void BindTog(string name, LuaFunction lf)
		{
		}

		[Token(Token = "0x60022A4")]
		[Address(RVA = "0xC1B85C", Offset = "0xC1B85C", VA = "0xC1B85C")]
		public void SetTogValue(int name, bool isOn)
		{
		}

		[Token(Token = "0x60022A5")]
		[Address(RVA = "0xC1B900", Offset = "0xC1B900", VA = "0xC1B900")]
		public bool GetTogValue(int name)
		{
			return default(bool);
		}

		[Token(Token = "0x60022A6")]
		[Address(RVA = "0xC1B99C", Offset = "0xC1B99C", VA = "0xC1B99C")]
		public void BindToggleGroup(string name, LuaFunction call)
		{
		}

		[Token(Token = "0x60022A7")]
		[Address(RVA = "0xC1BBE0", Offset = "0xC1BBE0", VA = "0xC1BBE0")]
		public void BindToggleGroupAndRemove(string name, LuaFunction call)
		{
		}

		[Token(Token = "0x60022A8")]
		[Address(RVA = "0xC1BEBC", Offset = "0xC1BEBC", VA = "0xC1BEBC")]
		private void OnToggleClick(GameObject go)
		{
		}

		[Token(Token = "0x60022A9")]
		[Address(RVA = "0xC1BEC0", Offset = "0xC1BEC0", VA = "0xC1BEC0")]
		public void SetToggleWithGroupIndex(int name, bool isActive, int index)
		{
		}

		[Token(Token = "0x60022AA")]
		[Address(RVA = "0xC1BFD4", Offset = "0xC1BFD4", VA = "0xC1BFD4")]
		public void BindInp(string name, LuaFunction lfOnValueChanged, LuaFunction lfOnEndEdit)
		{
		}

		[Token(Token = "0x60022AB")]
		[Address(RVA = "0xC1C1D8", Offset = "0xC1C1D8", VA = "0xC1C1D8")]
		public string GetInputValue(int name)
		{
			return null;
		}

		[Token(Token = "0x60022AC")]
		[Address(RVA = "0xC1C274", Offset = "0xC1C274", VA = "0xC1C274")]
		public void SetInputPlaceHolder(int name, string ph)
		{
		}

		[Token(Token = "0x60022AD")]
		[Address(RVA = "0xC1C358", Offset = "0xC1C358", VA = "0xC1C358")]
		public void SetInputValue(int name, string txt)
		{
		}

		[Token(Token = "0x60022AE")]
		[Address(RVA = "0xC1C3FC", Offset = "0xC1C3FC", VA = "0xC1C3FC")]
		public void SetInputFocus(int name, bool isFocus)
		{
		}

		[Token(Token = "0x60022AF")]
		[Address(RVA = "0xC1C49C", Offset = "0xC1C49C", VA = "0xC1C49C")]
		public void SetInputCharacterLimit(int name, int count)
		{
		}

		[Token(Token = "0x60022B0")]
		[Address(RVA = "0xC1C540", Offset = "0xC1C540", VA = "0xC1C540")]
		public void Select(int type, int name)
		{
		}

		[Token(Token = "0x60022B1")]
		[Address(RVA = "0xC1C638", Offset = "0xC1C638", VA = "0xC1C638")]
		public void SetGrid(int name, string resPath, LuaFunction init, LuaFunction fill, int maxPerLine)
		{
		}

		[Token(Token = "0x60022B2")]
		[Address(RVA = "0xC1C7B0", Offset = "0xC1C7B0", VA = "0xC1C7B0")]
		public void SetGrid(string name, string resPath, LuaFunction init, LuaFunction fill, int maxPerLine)
		{
		}

		[Token(Token = "0x60022B3")]
		[Address(RVA = "0xC1C808", Offset = "0xC1C808", VA = "0xC1C808")]
		public void SetGridMoveCall(int key, LuaFunction call)
		{
		}

		[Token(Token = "0x60022B4")]
		[Address(RVA = "0xC1C944", Offset = "0xC1C944", VA = "0xC1C944")]
		public void SetGridMoveBeginCall(int key, LuaFunction call)
		{
		}

		[Token(Token = "0x60022B5")]
		[Address(RVA = "0xC1CA80", Offset = "0xC1CA80", VA = "0xC1CA80")]
		public void SetGridMoveEndCall(int key, LuaFunction call)
		{
		}

		[Token(Token = "0x60022B6")]
		[Address(RVA = "0xC1CBBC", Offset = "0xC1CBBC", VA = "0xC1CBBC")]
		public void SetGridCount(int name, int count, bool isReposition)
		{
		}

		[Token(Token = "0x60022B7")]
		[Address(RVA = "0xC1CC78", Offset = "0xC1CC78", VA = "0xC1CC78")]
		public void SetGriUpdate(int name)
		{
		}

		[Token(Token = "0x60022B8")]
		[Address(RVA = "0xC1CD14", Offset = "0xC1CD14", VA = "0xC1CD14")]
		public void SetGridIndex(int name, int index)
		{
		}

		[Token(Token = "0x60022B9")]
		[Address(RVA = "0xC1CDBC", Offset = "0xC1CDBC", VA = "0xC1CDBC")]
		public void SetGridScollIndex(int name, int index)
		{
		}

		[Token(Token = "0x60022BA")]
		[Address(RVA = "0xC1CE68", Offset = "0xC1CE68", VA = "0xC1CE68")]
		public void SetGridScollMoveTo(int name, Vector2 vect2)
		{
		}

		[Token(Token = "0x60022BB")]
		[Address(RVA = "0xC1CF20", Offset = "0xC1CF20", VA = "0xC1CF20")]
		public Vector2 GetGridNormalizedPosition(int name)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60022BC")]
		[Address(RVA = "0xC1CFC0", Offset = "0xC1CFC0", VA = "0xC1CFC0")]
		public void SetGridScollSpeed(int name, float speed)
		{
		}

		[Token(Token = "0x60022BD")]
		[Address(RVA = "0xC1D088", Offset = "0xC1D088", VA = "0xC1D088")]
		public void SetPageViewScrollIndex(int name, int index)
		{
		}

		[Token(Token = "0x60022BE")]
		[Address(RVA = "0xC1D12C", Offset = "0xC1D12C", VA = "0xC1D12C")]
		public void SetGridScollIndexAndSpeed(int name, int index, float speed)
		{
		}

		[Token(Token = "0x60022BF")]
		[Address(RVA = "0xC1D1E0", Offset = "0xC1D1E0", VA = "0xC1D1E0")]
		public int GetGridIndex(int name)
		{
			return default(int);
		}

		[Token(Token = "0x60022C0")]
		[Address(RVA = "0xC1D27C", Offset = "0xC1D27C", VA = "0xC1D27C")]
		public int GetPageIndex(int name)
		{
			return default(int);
		}

		[Token(Token = "0x60022C1")]
		[Address(RVA = "0xC1D318", Offset = "0xC1D318", VA = "0xC1D318")]
		public void SetGridCenter(int name)
		{
		}

		[Token(Token = "0x60022C2")]
		[Address(RVA = "0xC1D31C", Offset = "0xC1D31C", VA = "0xC1D31C")]
		public void SetGridCreateFinish(int name, LuaFunction func)
		{
		}

		[Token(Token = "0x60022C3")]
		[Address(RVA = "0xC1D3BC", Offset = "0xC1D3BC", VA = "0xC1D3BC")]
		public void SetGridCoroutine(int name, bool b)
		{
		}

		[Token(Token = "0x60022C4")]
		[Address(RVA = "0xC1D3C0", Offset = "0xC1D3C0", VA = "0xC1D3C0")]
		public void AddCenterComp(int name, LuaFunction onCenter, float speed)
		{
		}

		[Token(Token = "0x60022C5")]
		[Address(RVA = "0xC1D3C4", Offset = "0xC1D3C4", VA = "0xC1D3C4")]
		public void SetLoopRect(int name, string resPath, LuaFunction init, LuaFunction fill, Component content)
		{
		}

		[Token(Token = "0x60022C6")]
		[Address(RVA = "0xC1D4B0", Offset = "0xC1D4B0", VA = "0xC1D4B0")]
		public void SetLoopRectCount(int name, int count)
		{
		}

		[Token(Token = "0x60022C7")]
		[Address(RVA = "0xC1D550", Offset = "0xC1D550", VA = "0xC1D550")]
		public void SetLoopRectIndex(int name, int index)
		{
		}

		[Token(Token = "0x60022C8")]
		[Address(RVA = "0xC1D5F4", Offset = "0xC1D5F4", VA = "0xC1D5F4")]
		public void SetLoopRectRefresh(int name)
		{
		}

		[Token(Token = "0x60022C9")]
		[Address(RVA = "0xC1D690", Offset = "0xC1D690", VA = "0xC1D690")]
		public void SetEnhancedSCVController(int name, string resPath, LuaFunction onInitFuncName, LuaFunction onFillFuncName)
		{
		}

		[Token(Token = "0x60022CA")]
		[Address(RVA = "0xC1D748", Offset = "0xC1D748", VA = "0xC1D748")]
		public void SetEnhancedSCVCount(int name, int count)
		{
		}

		[Token(Token = "0x60022CB")]
		[Address(RVA = "0xC1D7C8", Offset = "0xC1D7C8", VA = "0xC1D7C8")]
		public void SetEnhancedSCVIndex(int name, int count)
		{
		}

		[Token(Token = "0x60022CC")]
		[Address(RVA = "0xC1D848", Offset = "0xC1D848", VA = "0xC1D848")]
		public void SetEnhancedSCVLoop(int name, bool isLoop)
		{
		}

		[Token(Token = "0x60022CD")]
		[Address(RVA = "0xC1D8C4", Offset = "0xC1D8C4", VA = "0xC1D8C4")]
		public void SetAdjustPosCall(int name, LuaFunction call, float min, float max)
		{
		}

		[Token(Token = "0x60022CF")]
		[Address(RVA = "0xC1D9C8", Offset = "0xC1D9C8", VA = "0xC1D9C8")]
		public void SetAnimInt(int name, int value)
		{
		}

		[Token(Token = "0x60022D0")]
		[Address(RVA = "0xC1DA24", Offset = "0xC1DA24", VA = "0xC1DA24")]
		public void PlayAnimByName(string name)
		{
		}

		[Token(Token = "0x60022D1")]
		[Address(RVA = "0xC1DA6C", Offset = "0xC1DA6C", VA = "0xC1DA6C")]
		public GameObject GetPrefab(string path)
		{
			return null;
		}

		[Token(Token = "0x60022D2")]
		[Address(RVA = "0xC1DB60", Offset = "0xC1DB60", VA = "0xC1DB60")]
		public void LoadResource(string path, LuaFunction func)
		{
		}

		[Token(Token = "0x60022D3")]
		[Address(RVA = "0xC1DB78", Offset = "0xC1DB78", VA = "0xC1DB78")]
		public void LoadAssets(string[] path, LuaTable resTable, LuaFunction func)
		{
		}

		[Token(Token = "0x60022D4")]
		[Address(RVA = "0xC1DB90", Offset = "0xC1DB90", VA = "0xC1DB90")]
		public void LoadResources(string[] path, LuaFunction func)
		{
		}

		[Token(Token = "0x60022D5")]
		[Address(RVA = "0xC1DBA8", Offset = "0xC1DBA8", VA = "0xC1DBA8")]
		public LuaTable AddUIComponent(GameObject go, LuaTable table)
		{
			return null;
		}

		[Token(Token = "0x60022D6")]
		[Address(RVA = "0xC1DC40", Offset = "0xC1DC40", VA = "0xC1DC40")]
		public void RemoveUIComponent(GameObject go)
		{
		}

		[Token(Token = "0x60022D7")]
		[Address(RVA = "0xC1DC54", Offset = "0xC1DC54", VA = "0xC1DC54")]
		[NoToLua]
		public void SetUIComponentVisible(bool visible)
		{
		}

		[Token(Token = "0x60022D8")]
		[Address(RVA = "0xC1DC6C", Offset = "0xC1DC6C", VA = "0xC1DC6C")]
		public void OnBeginExitUIComps()
		{
		}

		[Token(Token = "0x60022D9")]
		[Address(RVA = "0xC1DC80", Offset = "0xC1DC80", VA = "0xC1DC80")]
		public void TweenRestart(int type, int key)
		{
		}

		[Token(Token = "0x60022DA")]
		[Address(RVA = "0xC1DD7C", Offset = "0xC1DD7C", VA = "0xC1DD7C")]
		public void SetTxt(int name, string txt)
		{
		}

		[Token(Token = "0x60022DB")]
		[Address(RVA = "0xC1DE24", Offset = "0xC1DE24", VA = "0xC1DE24")]
		public void SetTxt(int name, int txt)
		{
		}

		[Token(Token = "0x60022DC")]
		[Address(RVA = "0xC1DE6C", Offset = "0xC1DE6C", VA = "0xC1DE6C")]
		public void SetTextFontSize(int name, int size)
		{
		}

		[Token(Token = "0x60022DD")]
		[Address(RVA = "0xC1DF10", Offset = "0xC1DF10", VA = "0xC1DF10")]
		public int GetTextFontSize(int name)
		{
			return default(int);
		}

		[Token(Token = "0x60022DE")]
		[Address(RVA = "0xC1DFAC", Offset = "0xC1DFAC", VA = "0xC1DFAC")]
		public void SetInlineTextHorizontalOverflow(int key, int type)
		{
		}

		[Token(Token = "0x60022DF")]
		[Address(RVA = "0xC1E054", Offset = "0xC1E054", VA = "0xC1E054")]
		public void PlayAnimOnGO(int type, int name)
		{
		}

		[Token(Token = "0x60022E0")]
		[Address(RVA = "0xC1E120", Offset = "0xC1E120", VA = "0xC1E120")]
		public void PlayAnimatorByName(int type, int name, string animName)
		{
		}

		[Token(Token = "0x60022E1")]
		[Address(RVA = "0xC1E200", Offset = "0xC1E200", VA = "0xC1E200")]
		public void ReParent(int type, int name)
		{
		}

		[Token(Token = "0x60022E2")]
		[Address(RVA = "0xC1E254", Offset = "0xC1E254", VA = "0xC1E254")]
		public GameObject ClonePrefab(string path)
		{
			return null;
		}

		[Token(Token = "0x60022E3")]
		[Address(RVA = "0xC1E270", Offset = "0xC1E270", VA = "0xC1E270")]
		public GameObject AddPrefabChild(int type, int key, string path)
		{
			return null;
		}

		[Token(Token = "0x60022E4")]
		[Address(RVA = "0xC1E2A0", Offset = "0xC1E2A0", VA = "0xC1E2A0")]
		public GameObject AddPrefabChildByParent(GameObject parent, string path)
		{
			return null;
		}

		[Token(Token = "0x60022E5")]
		[Address(RVA = "0xC1E2AC", Offset = "0xC1E2AC", VA = "0xC1E2AC")]
		public GameObject AddPrefabChildByParent(GameObject parent, string path, bool worldPositionStays, string childName)
		{
			return null;
		}

		[Token(Token = "0x60022E6")]
		[Address(RVA = "0xC1E3B4", Offset = "0xC1E3B4", VA = "0xC1E3B4")]
		public GameObject AddPrefabChildByOriPos(int type, int key, string path)
		{
			return null;
		}

		[Token(Token = "0x60022E7")]
		[Address(RVA = "0xC1E45C", Offset = "0xC1E45C", VA = "0xC1E45C")]
		public void ForceRebuild(int type, int key)
		{
		}

		[Token(Token = "0x60022E8")]
		[Address(RVA = "0xC1E4EC", Offset = "0xC1E4EC", VA = "0xC1E4EC")]
		public void AdjusePreferredSize()
		{
		}

		[Token(Token = "0x60022E9")]
		[Address(RVA = "0xC1E5CC", Offset = "0xC1E5CC", VA = "0xC1E5CC")]
		public void AddButtonDepth(int key, int depth)
		{
		}

		[Token(Token = "0x60022EA")]
		[Address(RVA = "0xC1E728", Offset = "0xC1E728", VA = "0xC1E728")]
		public void SetVrControllerFunc(LuaFunction fun)
		{
		}

		[Token(Token = "0x60022EB")]
		[Address(RVA = "0xC1E79C", Offset = "0xC1E79C", VA = "0xC1E79C")]
		public void AddButtonDepthByGO(GameObject go, int depth)
		{
		}

		[Token(Token = "0x60022EC")]
		[Address(RVA = "0xC1E94C", Offset = "0xC1E94C", VA = "0xC1E94C")]
		public void InlineTxtUpdateLines(int key)
		{
		}

		[Token(Token = "0x60022ED")]
		[Address(RVA = "0xC1E9EC", Offset = "0xC1E9EC", VA = "0xC1E9EC")]
		public void AddGrayText(int key)
		{
		}

		[Token(Token = "0x60022EE")]
		[Address(RVA = "0xC1EAD0", Offset = "0xC1EAD0", VA = "0xC1EAD0")]
		public void UpdateGrid(int key)
		{
		}

		[Token(Token = "0x60022EF")]
		[Address(RVA = "0xC1EB6C", Offset = "0xC1EB6C", VA = "0xC1EB6C")]
		public void StopAnim()
		{
		}

		[Token(Token = "0x60022F0")]
		[Address(RVA = "0xC1EB70", Offset = "0xC1EB70", VA = "0xC1EB70")]
		public void PauseTween(int type, int key)
		{
		}

		[Token(Token = "0x60022F1")]
		[Address(RVA = "0xC1DCA8", Offset = "0xC1DCA8", VA = "0xC1DCA8")]
		private DOTweenAnimation GetTween(int type, int key)
		{
			return null;
		}

		[Token(Token = "0x60022F2")]
		[Address(RVA = "0xC1EB74", Offset = "0xC1EB74", VA = "0xC1EB74")]
		public void AddCompleteViewNotify(int type, int name, string tweenID, int key)
		{
		}

		[Token(Token = "0x60022F3")]
		[Address(RVA = "0xC1ED64", Offset = "0xC1ED64", VA = "0xC1ED64")]
		public void TweenRestartByID(int type, int name, string id)
		{
		}

		[Token(Token = "0x60022F4")]
		[Address(RVA = "0xC1EDD0", Offset = "0xC1EDD0", VA = "0xC1EDD0")]
		public void Playbacks(int type, int name)
		{
		}

		[Token(Token = "0x60022F5")]
		[Address(RVA = "0xC1EDF4", Offset = "0xC1EDF4", VA = "0xC1EDF4")]
		public float GetTweenDuration(int type, int name)
		{
			return default(float);
		}

		[Token(Token = "0x60022F6")]
		[Address(RVA = "0xC1EE14", Offset = "0xC1EE14", VA = "0xC1EE14")]
		public void SetTxtNumberAnim(int name, int end, float duration)
		{
		}

		[Token(Token = "0x60022F7")]
		[Address(RVA = "0xC1EEC8", Offset = "0xC1EEC8", VA = "0xC1EEC8")]
		public Tweener SetTxtNumberAnimWithFmt(int name, int start, int end, string fmt, float duration)
		{
			return null;
		}

		[Token(Token = "0x60022F8")]
		[Address(RVA = "0xC1EF94", Offset = "0xC1EF94", VA = "0xC1EF94")]
		public void SetSldAnim(string key, float end, float duration)
		{
		}

		[Token(Token = "0x60022F9")]
		[Address(RVA = "0xC1F054", Offset = "0xC1F054", VA = "0xC1F054")]
		public void SetSldAnim(int name, float end, float duration)
		{
		}

		[Token(Token = "0x60022FA")]
		[Address(RVA = "0xC1F108", Offset = "0xC1F108", VA = "0xC1F108")]
		public void BindImgDrag(string name, LuaFunction up, LuaFunction drag, LuaFunction end)
		{
		}

		[Token(Token = "0x60022FB")]
		[Address(RVA = "0xC1F3A4", Offset = "0xC1F3A4", VA = "0xC1F3A4")]
		public void BindImgDrag(int key, LuaFunction up, LuaFunction drag, LuaFunction end)
		{
		}

		[Token(Token = "0x60022FC")]
		[Address(RVA = "0xC1F4FC", Offset = "0xC1F4FC", VA = "0xC1F4FC")]
		public void SetDownloadID(int key, int downloadID)
		{
		}

		[Token(Token = "0x60022FD")]
		[Address(RVA = "0xC1F59C", Offset = "0xC1F59C", VA = "0xC1F59C")]
		public void BindRawImgDrag(GameObject go, LuaFunction up, LuaFunction drag, LuaFunction end)
		{
		}

		[Token(Token = "0x60022FE")]
		[Address(RVA = "0xC1F274", Offset = "0xC1F274", VA = "0xC1F274")]
		private void _bindEntry(EventTrigger trigger, EventTriggerType type, LuaFunction func)
		{
		}

		[Token(Token = "0x60022FF")]
		[Address(RVA = "0xC1F6CC", Offset = "0xC1F6CC", VA = "0xC1F6CC")]
		public void SetLongPressBtnRepeat(string name, bool isRepeat)
		{
		}

		[Token(Token = "0x6002300")]
		[Address(RVA = "0xC1F77C", Offset = "0xC1F77C", VA = "0xC1F77C")]
		public void SetLongPressBtnPressTime(string name, float time)
		{
		}

		[Token(Token = "0x6002301")]
		[Address(RVA = "0xC1F830", Offset = "0xC1F830", VA = "0xC1F830")]
		public void SetLongPressBtnRepeat(int name, bool isRepeat)
		{
		}

		[Token(Token = "0x6002302")]
		[Address(RVA = "0xC1F8D4", Offset = "0xC1F8D4", VA = "0xC1F8D4")]
		public void SetLongPressBtnPressTime(int name, float time)
		{
		}

		[Token(Token = "0x6002303")]
		[Address(RVA = "0xC1F97C", Offset = "0xC1F97C", VA = "0xC1F97C")]
		public void FindImgAndSetActive(GameObject go, string img, bool state)
		{
		}

		[Token(Token = "0x6002304")]
		[Address(RVA = "0xC1FA80", Offset = "0xC1FA80", VA = "0xC1FA80")]
		public void SetPageView(int name, string resPath, LuaFunction init, LuaFunction fill, int maxPerLine)
		{
		}

		[Token(Token = "0x6002305")]
		[Address(RVA = "0xC1FA84", Offset = "0xC1FA84", VA = "0xC1FA84")]
		public void SetPageView(int name, string resPath, LuaFunction init, LuaFunction fill)
		{
		}

		[Token(Token = "0x6002306")]
		[Address(RVA = "0xC1FB40", Offset = "0xC1FB40", VA = "0xC1FB40")]
		public void SetPageViewCount(int name, int count, bool isReposition)
		{
		}

		[Token(Token = "0x6002307")]
		[Address(RVA = "0xC1FBF4", Offset = "0xC1FBF4", VA = "0xC1FBF4")]
		public void SetPageViewIndex(int name, int index)
		{
		}

		[Token(Token = "0x6002308")]
		[Address(RVA = "0xC1FC98", Offset = "0xC1FC98", VA = "0xC1FC98")]
		public void AddPageViewCenter(int name, LuaFunction onCenter)
		{
		}

		[Token(Token = "0x6002309")]
		[Address(RVA = "0xC1FDB0", Offset = "0xC1FDB0", VA = "0xC1FDB0")]
		public void SetImgState(GameObject go, bool value)
		{
		}

		[Token(Token = "0x600230A")]
		[Address(RVA = "0xC1FE2C", Offset = "0xC1FE2C", VA = "0xC1FE2C")]
		public void PlayMedia(GameObject go, GameObject go2, string value)
		{
		}

		[Token(Token = "0x600230B")]
		[Address(RVA = "0xC1FE30", Offset = "0xC1FE30", VA = "0xC1FE30")]
		public void SkipMedia(GameObject go)
		{
		}

		[Token(Token = "0x600230C")]
		[Address(RVA = "0xC1FE34", Offset = "0xC1FE34", VA = "0xC1FE34")]
		public Slider GetSlider(int name)
		{
			return null;
		}

		[Token(Token = "0x600230D")]
		[Address(RVA = "0xC1FECC", Offset = "0xC1FECC", VA = "0xC1FECC")]
		public void AnimImgAlphaStart(int type, int name, float time)
		{
		}

		[Token(Token = "0x600230E")]
		[Address(RVA = "0xC20214", Offset = "0xC20214", VA = "0xC20214")]
		public void CallAnimSliderStar(int type, int name, int _RunCount, float _CurRatio, float _EndRatio, LuaFunction _callback)
		{
		}

		[Token(Token = "0x600230F")]
		[Address(RVA = "0xC2058C", Offset = "0xC2058C", VA = "0xC2058C")]
		public LuaTable LoadPoolObject(string path, GameObject goParent, LuaTable table)
		{
			return null;
		}

		[Token(Token = "0x6002310")]
		[Address(RVA = "0xC2078C", Offset = "0xC2078C", VA = "0xC2078C")]
		public void UnloadGO(GameObject go)
		{
		}

		[Token(Token = "0x6002311")]
		[Address(RVA = "0xC20878", Offset = "0xC20878", VA = "0xC20878")]
		private Queue<GameObject> _getPoolQueue(string path)
		{
			return null;
		}

		[Token(Token = "0x6002312")]
		[Address(RVA = "0xC206C8", Offset = "0xC206C8", VA = "0xC206C8")]
		private GameObject _loadGO(string path)
		{
			return null;
		}

		[Token(Token = "0x6002313")]
		[Address(RVA = "0xC20790", Offset = "0xC20790", VA = "0xC20790")]
		private void _unloadGO(GameObject go)
		{
		}

		[Token(Token = "0x6002314")]
		[Address(RVA = "0xC155CC", Offset = "0xC155CC", VA = "0xC155CC")]
		private void ClearPoolObject()
		{
		}

		[Token(Token = "0x6002315")]
		[Address(RVA = "0xC178D8", Offset = "0xC178D8", VA = "0xC178D8")]
		private void _addFunc(LuaFunction lf, [Optional] Component target)
		{
		}

		[Token(Token = "0x6002316")]
		[Address(RVA = "0xC2096C", Offset = "0xC2096C", VA = "0xC2096C")]
		public void SetSprite(int name, string iconName)
		{
		}
	}
	[Token(Token = "0x2000282")]
	public class DragItem : UIBehaviour, IDragHandler, IEventSystemHandler, IBeginDragHandler, IEndDragHandler, IPointerDownHandler, IPointerUpHandler, IPointerEnterHandler, IPointerExitHandler
	{
		[Token(Token = "0x4000B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ButtonEx.EventDataEvent onDrag;

		[Token(Token = "0x4000B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ButtonEx.EventDataEvent onDragBegin;

		[Token(Token = "0x4000B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ButtonEx.EventDataEvent onDragEnd;

		[Token(Token = "0x4000B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ButtonEx.EventDataEvent onDown;

		[Token(Token = "0x4000B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ButtonEx.EventDataEvent onUp;

		[Token(Token = "0x4000B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ButtonEx.EventDataEvent onPointerEnter;

		[Token(Token = "0x4000B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public ButtonEx.EventDataEvent onPointerExit;

		[Token(Token = "0x4000B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public ButtonEx.EventDataEvent onDragOutAtFirst;

		[Token(Token = "0x4000B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ButtonEx.EventDataEvent onDragOut;

		[Token(Token = "0x4000B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private ScrollRectEx _scv;

		[Token(Token = "0x4000B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _cacheGO;

		[Token(Token = "0x4000B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool _isDraggingOut;

		[Token(Token = "0x4000B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool _isDragging;

		[Token(Token = "0x4000B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float Threadhold;

		[Token(Token = "0x4000B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool _isChangePos;

		[Token(Token = "0x6002318")]
		[Address(RVA = "0xC22390", Offset = "0xC22390", VA = "0xC22390", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002319")]
		[Address(RVA = "0xC223F8", Offset = "0xC223F8", VA = "0xC223F8", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x600231A")]
		[Address(RVA = "0xC22640", Offset = "0xC22640", VA = "0xC22640", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x600231B")]
		[Address(RVA = "0xC22848", Offset = "0xC22848", VA = "0xC22848")]
		private void _onNotifyGuideDragBegin(int key, GuideMgr.GuideDragData data)
		{
		}

		[Token(Token = "0x600231C")]
		[Address(RVA = "0xC229B4", Offset = "0xC229B4", VA = "0xC229B4")]
		private void _onNotifyGuideDrag(int key, GuideMgr.GuideDragData data)
		{
		}

		[Token(Token = "0x600231D")]
		[Address(RVA = "0xC22C64", Offset = "0xC22C64", VA = "0xC22C64")]
		private void _onNotifyGuideDragEnd(int key, GuideMgr.GuideDragData data)
		{
		}

		[Token(Token = "0x600231E")]
		[Address(RVA = "0xC22E28", Offset = "0xC22E28", VA = "0xC22E28")]
		private void _onNotifyGuideDown(int key, GuideMgr.GuideDragData data)
		{
		}

		[Token(Token = "0x600231F")]
		[Address(RVA = "0xC22F38", Offset = "0xC22F38", VA = "0xC22F38")]
		private void _onNotifyGuideUp(int key, GuideMgr.GuideDragData data)
		{
		}

		[Token(Token = "0x6002320")]
		[Address(RVA = "0xC228F0", Offset = "0xC228F0", VA = "0xC228F0", Slot = "18")]
		public void OnBeginDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002321")]
		[Address(RVA = "0xC22D0C", Offset = "0xC22D0C", VA = "0xC22D0C", Slot = "19")]
		public void OnEndDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002322")]
		[Address(RVA = "0xC22ED0", Offset = "0xC22ED0", VA = "0xC22ED0", Slot = "20")]
		public void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002323")]
		[Address(RVA = "0xC22FE0", Offset = "0xC22FE0", VA = "0xC22FE0", Slot = "21")]
		public void OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002324")]
		[Address(RVA = "0xC22A5C", Offset = "0xC22A5C", VA = "0xC22A5C", Slot = "17")]
		public void OnDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002325")]
		[Address(RVA = "0xC23048", Offset = "0xC23048", VA = "0xC23048")]
		private void OnApplicationPause(bool pause)
		{
		}

		[Token(Token = "0x6002326")]
		[Address(RVA = "0xC23050", Offset = "0xC23050", VA = "0xC23050")]
		private void OnApplicationFocus(bool focus)
		{
		}

		[Token(Token = "0x6002327")]
		[Address(RVA = "0xC15520", Offset = "0xC15520", VA = "0xC15520")]
		public void ClearAllListener()
		{
		}

		[Token(Token = "0x6002328")]
		[Address(RVA = "0xC23058", Offset = "0xC23058", VA = "0xC23058", Slot = "22")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002329")]
		[Address(RVA = "0xC230C0", Offset = "0xC230C0", VA = "0xC230C0", Slot = "23")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600232A")]
		[Address(RVA = "0xC23128", Offset = "0xC23128", VA = "0xC23128")]
		public DragItem()
		{
		}
	}
	[Token(Token = "0x2000283")]
	public class InlineText : MaskableGraphic, ILayoutElement, IPointerClickHandler, IEventSystemHandler, IBeginDragHandler, IEndDragHandler, IPointerDownHandler, IPointerUpHandler
	{
		[Token(Token = "0x200044C")]
		private enum CharType
		{
			[Token(Token = "0x4001110")]
			Normal,
			[Token(Token = "0x4001111")]
			UnderWire,
			[Token(Token = "0x4001112")]
			DeleteWire
		}

		[Token(Token = "0x200044D")]
		private enum WireType
		{
			[Token(Token = "0x4001114")]
			UnderWire,
			[Token(Token = "0x4001115")]
			DeleteWire
		}

		[Token(Token = "0x200044E")]
		public class HrefClickEvent : UnityEvent<string>
		{
			[Token(Token = "0x6002E85")]
			[Address(RVA = "0xD776D4", Offset = "0xD776D4", VA = "0xD776D4")]
			public HrefClickEvent()
			{
			}
		}

		[Token(Token = "0x200044F")]
		private class CharData
		{
			[Token(Token = "0x4001116")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CharType cType;

			[Token(Token = "0x4001117")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UIVertex[] vertices;

			[Token(Token = "0x6002E86")]
			[Address(RVA = "0xD7A4AC", Offset = "0xD7A4AC", VA = "0xD7A4AC")]
			public CharData()
			{
			}
		}

		[Token(Token = "0x2000450")]
		private class AssetData
		{
			[Token(Token = "0x4001118")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string assetPath;

			[Token(Token = "0x4001119")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int aType;

			[Token(Token = "0x400111A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string spriteName;

			[Token(Token = "0x400111B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float x;

			[Token(Token = "0x400111C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float y;

			[Token(Token = "0x400111D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float width;

			[Token(Token = "0x400111E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float height;

			[Token(Token = "0x400111F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int frameCount;

			[Token(Token = "0x6002E87")]
			[Address(RVA = "0xD790C0", Offset = "0xD790C0", VA = "0xD790C0")]
			public AssetData()
			{
			}
		}

		[Token(Token = "0x2000451")]
		private class WireData
		{
			[Token(Token = "0x4001120")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public WireType wireType;

			[Token(Token = "0x4001121")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float beginX;

			[Token(Token = "0x4001122")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float endX;

			[Token(Token = "0x4001123")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Color32 uColor;

			[Token(Token = "0x6002E88")]
			[Address(RVA = "0xD78F94", Offset = "0xD78F94", VA = "0xD78F94")]
			public WireData()
			{
			}
		}

		[Token(Token = "0x2000452")]
		private class LinkData
		{
			[Token(Token = "0x4001124")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rect rect;

			[Token(Token = "0x4001125")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string arg;

			[Token(Token = "0x6002E89")]
			[Address(RVA = "0xD78FCC", Offset = "0xD78FCC", VA = "0xD78FCC")]
			public LinkData()
			{
			}
		}

		[Token(Token = "0x2000453")]
		private class LineData
		{
			[Token(Token = "0x4001126")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float x;

			[Token(Token = "0x4001127")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float y;

			[Token(Token = "0x4001128")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float z;

			[Token(Token = "0x4001129")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float width;

			[Token(Token = "0x400112A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float height;

			[Token(Token = "0x400112B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float charMaxHeight;

			[Token(Token = "0x400112C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float charMinY;

			[Token(Token = "0x400112D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float charMaxY;

			[Token(Token = "0x400112E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InlineText inlineText;

			[Token(Token = "0x400112F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public List<CharData> charDatas;

			[Token(Token = "0x4001130")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public List<AssetData> assetDatas;

			[Token(Token = "0x4001131")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public List<LinkData> linkDatas;

			[Token(Token = "0x6002E8A")]
			[Address(RVA = "0xD78824", Offset = "0xD78824", VA = "0xD78824")]
			public LineData()
			{
			}

			[Token(Token = "0x6002E8B")]
			[Address(RVA = "0xD79174", Offset = "0xD79174", VA = "0xD79174")]
			public void AddCharData(char cstr, CharacterInfo ci, float charBeginX, float charEndX, Color32 topColor, Color32 bottomColor)
			{
			}

			[Token(Token = "0x6002E8C")]
			[Address(RVA = "0xD788E4", Offset = "0xD788E4", VA = "0xD788E4")]
			public bool AddWireData(WireData wireData)
			{
				return default(bool);
			}

			[Token(Token = "0x6002E8D")]
			[Address(RVA = "0xD790D0", Offset = "0xD790D0", VA = "0xD790D0")]
			public void AddAssetData(AssetData assetData, float emoteX)
			{
			}

			[Token(Token = "0x6002E8E")]
			[Address(RVA = "0xD79024", Offset = "0xD79024", VA = "0xD79024")]
			public void AddLinkData(LinkData linkData, float endX)
			{
			}

			[Token(Token = "0x6002E8F")]
			[Address(RVA = "0xD796C8", Offset = "0xD796C8", VA = "0xD796C8")]
			public void OnFinish()
			{
			}

			[Token(Token = "0x6002E90")]
			[Address(RVA = "0xD77C30", Offset = "0xD77C30", VA = "0xD77C30")]
			public void OnPopulateCharMesh(ref VertexHelper vh, ref int j)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000454")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940860", Offset = "0x940860")]
		private sealed class <>c
		{
			[Token(Token = "0x4001132")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001133")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<Image> <>9__128_0;

			[Token(Token = "0x6002E92")]
			[Address(RVA = "0xD7A410", Offset = "0xD7A410", VA = "0xD7A410")]
			public <>c()
			{
			}

			[Token(Token = "0x6002E93")]
			[Address(RVA = "0xD7A418", Offset = "0xD7A418", VA = "0xD7A418")]
			internal bool <_updateMesh>b__128_0(Image image)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public HrefClickEvent onLinkClick;

		[Token(Token = "0x4000B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x9420A0", Offset = "0x9420A0")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9420A0", Offset = "0x9420A0")]
		private string m_Text;

		[Token(Token = "0x4000B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x942104", Offset = "0x942104")]
		private Font m_Font;

		[Token(Token = "0x4000B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x942150", Offset = "0x942150")]
		private int m_FontSize;

		[Token(Token = "0x4000B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x94219C", Offset = "0x94219C")]
		private float m_LineHeght;

		[Token(Token = "0x4000B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9421E8", Offset = "0x9421E8")]
		private float m_LineSpacing;

		[Token(Token = "0x4000B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x942234", Offset = "0x942234")]
		private float m_OffCharX;

		[Token(Token = "0x4000B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x942280", Offset = "0x942280")]
		private int m_MaxChars;

		[Token(Token = "0x4000B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9422CC", Offset = "0x9422CC")]
		private bool m_IsCustomWidthToNewLine;

		[Token(Token = "0x4000B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x942318", Offset = "0x942318")]
		private float m_CustomWidthToNewLine;

		[Token(Token = "0x4000B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x942364", Offset = "0x942364")]
		private bool m_IsNeedOutLine;

		[Token(Token = "0x4000B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9423B0", Offset = "0x9423B0")]
		private Color32 m_OutLineColor;

		[Token(Token = "0x4000B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9423FC", Offset = "0x9423FC")]
		private Color32 m_TColor;

		[Token(Token = "0x4000B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x942448", Offset = "0x942448")]
		private bool m_IsAutoAdaptiveWidthHeight;

		[Token(Token = "0x4000B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x942494", Offset = "0x942494")]
		private HorizontalWrapMode m_HorizontalOverflow;

		[Token(Token = "0x4000B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9424E0", Offset = "0x9424E0")]
		private VerticalWrapMode m_VerticalOverflow;

		[Token(Token = "0x4000B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x94252C", Offset = "0x94252C")]
		private TextAnchor m_Alignment;

		[Token(Token = "0x4000B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x942578", Offset = "0x942578")]
		private bool m_EnableRichText;

		[Token(Token = "0x4000B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3[] outLineOffsetPos;

		[Token(Token = "0x4000B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private InlineTextUtil__HAIBAO__SWORD__ m_TxtParser;

		[Token(Token = "0x4000B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private List<LineData> m_Lines;

		[Token(Token = "0x4000B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private readonly List<Image> _listSelfImage;

		[Token(Token = "0x4000B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<Image> _listImagePool;

		[Token(Token = "0x4000B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private float m_PreferredHeight;

		[Token(Token = "0x4000B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		private float m_PreferredWidth;

		[Token(Token = "0x4000B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private int[] m_StrMask;

		[Token(Token = "0x4000B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private Dictionary<int, string> m_ParamDict;

		[Token(Token = "0x4000B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public Dictionary<int, Hashtable> _dictSprite;

		[Token(Token = "0x4000B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private string m_ParsedText;

		[Token(Token = "0x4000B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private bool m_IsFontTextureDirty;

		[Token(Token = "0x4000B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x159")]
		private bool m_IsPopulateMeshDone;

		[Token(Token = "0x4000B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15A")]
		private bool m_IsDrag;

		[Token(Token = "0x4000B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15B")]
		private bool mIsFirst;

		[Token(Token = "0x4000B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		private bool isNeedReLine;

		[Token(Token = "0x17000122")]
		private InlineTextUtil__HAIBAO__SWORD__ txtParser
		{
			[Token(Token = "0x600232B")]
			[Address(RVA = "0xD750B4", Offset = "0xD750B4", VA = "0xD750B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000123")]
		public Font font
		{
			[Token(Token = "0x600232C")]
			[Address(RVA = "0xD75120", Offset = "0xD75120", VA = "0xD75120")]
			get
			{
				return null;
			}
			[Token(Token = "0x600232D")]
			[Address(RVA = "0xD75128", Offset = "0xD75128", VA = "0xD75128")]
			set
			{
			}
		}

		[Token(Token = "0x17000124")]
		public new Color color
		{
			[Token(Token = "0x600232E")]
			[Address(RVA = "0xD75138", Offset = "0xD75138", VA = "0xD75138")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x600232F")]
			[Address(RVA = "0xD75144", Offset = "0xD75144", VA = "0xD75144")]
			set
			{
			}
		}

		[Token(Token = "0x17000125")]
		public string text
		{
			[Token(Token = "0x6002330")]
			[Address(RVA = "0xD7523C", Offset = "0xD7523C", VA = "0xD7523C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002331")]
			[Address(RVA = "0xD75244", Offset = "0xD75244", VA = "0xD75244")]
			set
			{
			}
		}

		[Token(Token = "0x17000126")]
		public int fontSize
		{
			[Token(Token = "0x6002332")]
			[Address(RVA = "0xD7718C", Offset = "0xD7718C", VA = "0xD7718C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002333")]
			[Address(RVA = "0xD77194", Offset = "0xD77194", VA = "0xD77194")]
			set
			{
			}
		}

		[Token(Token = "0x17000127")]
		public float lineHeght
		{
			[Token(Token = "0x6002334")]
			[Address(RVA = "0xD771AC", Offset = "0xD771AC", VA = "0xD771AC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002335")]
			[Address(RVA = "0xD771B4", Offset = "0xD771B4", VA = "0xD771B4")]
			set
			{
			}
		}

		[Token(Token = "0x17000128")]
		public float lineSpacing
		{
			[Token(Token = "0x6002336")]
			[Address(RVA = "0xD771C4", Offset = "0xD771C4", VA = "0xD771C4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002337")]
			[Address(RVA = "0xD771CC", Offset = "0xD771CC", VA = "0xD771CC")]
			set
			{
			}
		}

		[Token(Token = "0x17000129")]
		public float offCharX
		{
			[Token(Token = "0x6002338")]
			[Address(RVA = "0xD771DC", Offset = "0xD771DC", VA = "0xD771DC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002339")]
			[Address(RVA = "0xD771E4", Offset = "0xD771E4", VA = "0xD771E4")]
			set
			{
			}
		}

		[Token(Token = "0x1700012A")]
		public int maxChars
		{
			[Token(Token = "0x600233A")]
			[Address(RVA = "0xD771F4", Offset = "0xD771F4", VA = "0xD771F4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600233B")]
			[Address(RVA = "0xD771FC", Offset = "0xD771FC", VA = "0xD771FC")]
			set
			{
			}
		}

		[Token(Token = "0x1700012B")]
		public bool isAutoAdaptiveWidthHeight
		{
			[Token(Token = "0x600233C")]
			[Address(RVA = "0xD7722C", Offset = "0xD7722C", VA = "0xD7722C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600233D")]
			[Address(RVA = "0xD77234", Offset = "0xD77234", VA = "0xD77234")]
			set
			{
			}
		}

		[Token(Token = "0x1700012C")]
		public bool isCustomWidthToNewLine
		{
			[Token(Token = "0x600233E")]
			[Address(RVA = "0xD77248", Offset = "0xD77248", VA = "0xD77248")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600233F")]
			[Address(RVA = "0xD77250", Offset = "0xD77250", VA = "0xD77250")]
			set
			{
			}
		}

		[Token(Token = "0x1700012D")]
		public float customWidthToNewLine
		{
			[Token(Token = "0x6002340")]
			[Address(RVA = "0xD77264", Offset = "0xD77264", VA = "0xD77264")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002341")]
			[Address(RVA = "0xD7726C", Offset = "0xD7726C", VA = "0xD7726C")]
			set
			{
			}
		}

		[Token(Token = "0x1700012E")]
		public bool isNeedOutLine
		{
			[Token(Token = "0x6002342")]
			[Address(RVA = "0xD7727C", Offset = "0xD7727C", VA = "0xD7727C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002343")]
			[Address(RVA = "0xD77284", Offset = "0xD77284", VA = "0xD77284")]
			set
			{
			}
		}

		[Token(Token = "0x1700012F")]
		public Color32 outLineColor
		{
			[Token(Token = "0x6002344")]
			[Address(RVA = "0xD77298", Offset = "0xD77298", VA = "0xD77298")]
			get
			{
				return default(Color32);
			}
			[Token(Token = "0x6002345")]
			[Address(RVA = "0xD772A0", Offset = "0xD772A0", VA = "0xD772A0")]
			set
			{
			}
		}

		[Token(Token = "0x17000130")]
		public HorizontalWrapMode horizontalOverflow
		{
			[Token(Token = "0x6002346")]
			[Address(RVA = "0xD772B8", Offset = "0xD772B8", VA = "0xD772B8")]
			get
			{
				return default(HorizontalWrapMode);
			}
			[Token(Token = "0x6002347")]
			[Address(RVA = "0xD772C0", Offset = "0xD772C0", VA = "0xD772C0")]
			set
			{
			}
		}

		[Token(Token = "0x17000131")]
		public VerticalWrapMode verticalOverflow
		{
			[Token(Token = "0x6002348")]
			[Address(RVA = "0xD772D0", Offset = "0xD772D0", VA = "0xD772D0")]
			get
			{
				return default(VerticalWrapMode);
			}
			[Token(Token = "0x6002349")]
			[Address(RVA = "0xD772D8", Offset = "0xD772D8", VA = "0xD772D8")]
			set
			{
			}
		}

		[Token(Token = "0x17000132")]
		public bool enableRichText
		{
			[Token(Token = "0x600234A")]
			[Address(RVA = "0xD772E8", Offset = "0xD772E8", VA = "0xD772E8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600234B")]
			[Address(RVA = "0xD772F0", Offset = "0xD772F0", VA = "0xD772F0")]
			set
			{
			}
		}

		[Token(Token = "0x17000133")]
		public TextAnchor alignment
		{
			[Token(Token = "0x600234C")]
			[Address(RVA = "0xD77320", Offset = "0xD77320", VA = "0xD77320")]
			get
			{
				return default(TextAnchor);
			}
			[Token(Token = "0x600234D")]
			[Address(RVA = "0xD77328", Offset = "0xD77328", VA = "0xD77328")]
			set
			{
			}
		}

		[Token(Token = "0x17000134")]
		public override Texture mainTexture
		{
			[Token(Token = "0x600234E")]
			[Address(RVA = "0xD77338", Offset = "0xD77338", VA = "0xD77338", Slot = "35")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000135")]
		public virtual float flexibleHeight
		{
			[Token(Token = "0x600234F")]
			[Address(RVA = "0xD77500", Offset = "0xD77500", VA = "0xD77500", Slot = "79")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000136")]
		public virtual float flexibleWidth
		{
			[Token(Token = "0x6002350")]
			[Address(RVA = "0xD77508", Offset = "0xD77508", VA = "0xD77508", Slot = "80")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000137")]
		public virtual int layoutPriority
		{
			[Token(Token = "0x6002351")]
			[Address(RVA = "0xD77510", Offset = "0xD77510", VA = "0xD77510", Slot = "81")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000138")]
		public virtual float minHeight
		{
			[Token(Token = "0x6002352")]
			[Address(RVA = "0xD77518", Offset = "0xD77518", VA = "0xD77518", Slot = "82")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000139")]
		public virtual float minWidth
		{
			[Token(Token = "0x6002353")]
			[Address(RVA = "0xD77520", Offset = "0xD77520", VA = "0xD77520", Slot = "83")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700013A")]
		public virtual float preferredHeight
		{
			[Token(Token = "0x6002354")]
			[Address(RVA = "0xD77528", Offset = "0xD77528", VA = "0xD77528", Slot = "84")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700013B")]
		public virtual float preferredWidth
		{
			[Token(Token = "0x6002355")]
			[Address(RVA = "0xD77530", Offset = "0xD77530", VA = "0xD77530", Slot = "85")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700013C")]
		internal Vector2 _anchor
		{
			[Token(Token = "0x6002369")]
			[Address(RVA = "0xD7A0A4", Offset = "0xD7A0A4", VA = "0xD7A0A4")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x1700013D")]
		internal Vector2 _pivot
		{
			[Token(Token = "0x600236A")]
			[Address(RVA = "0xD7A104", Offset = "0xD7A104", VA = "0xD7A104")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x6002356")]
		[Address(RVA = "0xD77538", Offset = "0xD77538", VA = "0xD77538", Slot = "86")]
		public virtual void CalculateLayoutInputHorizontal()
		{
		}

		[Token(Token = "0x6002357")]
		[Address(RVA = "0xD7753C", Offset = "0xD7753C", VA = "0xD7753C", Slot = "87")]
		public virtual void CalculateLayoutInputVertical()
		{
		}

		[Token(Token = "0x6002358")]
		[Address(RVA = "0xD77540", Offset = "0xD77540", VA = "0xD77540")]
		protected InlineText()
		{
		}

		[Token(Token = "0x6002359")]
		[Address(RVA = "0xD77724", Offset = "0xD77724", VA = "0xD77724", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600235A")]
		[Address(RVA = "0xD77864", Offset = "0xD77864", VA = "0xD77864", Slot = "74")]
		public void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600235B")]
		[Address(RVA = "0xD77B4C", Offset = "0xD77B4C", VA = "0xD77B4C", Slot = "77")]
		public void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600235C")]
		[Address(RVA = "0xD77B50", Offset = "0xD77B50", VA = "0xD77B50", Slot = "78")]
		public void OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600235D")]
		[Address(RVA = "0xD77B54", Offset = "0xD77B54", VA = "0xD77B54", Slot = "75")]
		public void OnBeginDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600235E")]
		[Address(RVA = "0xD77B60", Offset = "0xD77B60", VA = "0xD77B60", Slot = "76")]
		public void OnEndDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600235F")]
		[Address(RVA = "0xD77B68", Offset = "0xD77B68", VA = "0xD77B68", Slot = "44")]
		protected override void OnPopulateMesh(VertexHelper vh)
		{
		}

		[Token(Token = "0x6002360")]
		[Address(RVA = "0xD78660", Offset = "0xD78660", VA = "0xD78660", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6002361")]
		[Address(RVA = "0xD78668", Offset = "0xD78668", VA = "0xD78668", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6002362")]
		[Address(RVA = "0xD78814", Offset = "0xD78814", VA = "0xD78814", Slot = "10")]
		protected override void OnRectTransformDimensionsChange()
		{
		}

		[Token(Token = "0x6002363")]
		[Address(RVA = "0xD752B0", Offset = "0xD752B0", VA = "0xD752B0")]
		public void UpdateLines()
		{
		}

		[Token(Token = "0x6002364")]
		[Address(RVA = "0xD79F98", Offset = "0xD79F98", VA = "0xD79F98")]
		private void FontTextureRebuilt(Font changedFont)
		{
		}

		[Token(Token = "0x6002365")]
		[Address(RVA = "0xD7517C", Offset = "0xD7517C", VA = "0xD7517C")]
		private void ParseText()
		{
		}

		[Token(Token = "0x6002366")]
		[Address(RVA = "0xD7A058", Offset = "0xD7A058", VA = "0xD7A058")]
		private void Update()
		{
		}

		[Token(Token = "0x6002367")]
		[Address(RVA = "0xD76644", Offset = "0xD76644", VA = "0xD76644")]
		private void _updateMesh()
		{
		}

		[Token(Token = "0x6002368")]
		[Address(RVA = "0xD78694", Offset = "0xD78694", VA = "0xD78694")]
		private void _unloadImage(int startIndex)
		{
		}

		[Token(Token = "0x600236B")]
		[Address(RVA = "0xD7A16C", Offset = "0xD7A16C", VA = "0xD7A16C", Slot = "8")]
		protected override void OnDestroy()
		{
		}
	}
	[Token(Token = "0x2000284")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x93F784", Offset = "0x93F784")]
	[DisallowMultipleComponent]
	public class LoopHorizontalScrollRect : LoopScrollRect
	{
		[Token(Token = "0x600236D")]
		[Address(RVA = "0xD7A6A4", Offset = "0xD7A6A4", VA = "0xD7A6A4", Slot = "50")]
		protected override float GetSize(RectTransform item)
		{
			return default(float);
		}

		[Token(Token = "0x600236E")]
		[Address(RVA = "0xD7A8F8", Offset = "0xD7A8F8", VA = "0xD7A8F8", Slot = "51")]
		protected override float GetDimension(Vector2 vector)
		{
			return default(float);
		}

		[Token(Token = "0x600236F")]
		[Address(RVA = "0xD7A8FC", Offset = "0xD7A8FC", VA = "0xD7A8FC", Slot = "52")]
		protected override Vector2 GetVector(float value)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002370")]
		[Address(RVA = "0xD7A930", Offset = "0xD7A930", VA = "0xD7A930", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6002371")]
		[Address(RVA = "0xD7AA38", Offset = "0xD7AA38", VA = "0xD7AA38", Slot = "60")]
		protected override bool UpdateItems(Bounds viewBounds, Bounds contentBounds)
		{
			return default(bool);
		}

		[Token(Token = "0x6002372")]
		[Address(RVA = "0xD7B560", Offset = "0xD7B560", VA = "0xD7B560")]
		public LoopHorizontalScrollRect()
		{
		}
	}
	[Token(Token = "0x2000285")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x93F7D4", Offset = "0x93F7D4")]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x93F7D4", Offset = "0x93F7D4")]
	public abstract class LoopScrollRect : ISCVCenter, IInitializePotentialDragHandler, IEventSystemHandler, IBeginDragHandler, IEndDragHandler, IDragHandler, IScrollHandler, ICanvasElement, ILayoutElement, ILayoutGroup, ILayoutController
	{
		[Token(Token = "0x2000455")]
		public enum ScrollbarVisibility
		{
			[Token(Token = "0x4001135")]
			Permanent,
			[Token(Token = "0x4001136")]
			AutoHide,
			[Token(Token = "0x4001137")]
			AutoHideAndExpandViewport
		}

		[Serializable]
		[Token(Token = "0x2000456")]
		public class ScrollRectEvent : UnityEvent<Vector2>
		{
			[Token(Token = "0x6002E94")]
			[Address(RVA = "0xD7C190", Offset = "0xD7C190", VA = "0xD7C190")]
			public ScrollRectEvent()
			{
			}
		}

		[Token(Token = "0x2000457")]
		public delegate void OnInit(GameObject go);

		[Token(Token = "0x2000458")]
		public delegate void OnFill(GameObject go, int index);

		[Token(Token = "0x2000459")]
		public delegate string prefabNameDelegate(int idx);

		[Token(Token = "0x200045A")]
		public delegate int prefabCountDelegate(int idx);

		[Token(Token = "0x4000B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private OnInit _onInit;

		[Token(Token = "0x4000B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private OnFill _onFill;

		[Token(Token = "0x4000B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private LuaFunction mOnInit;

		[Token(Token = "0x4000B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private LuaFunction mOnFill;

		[Token(Token = "0x4000B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9425C4", Offset = "0x9425C4")]
		public string prefabName;

		[Token(Token = "0x4000B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private prefabNameDelegate prefabNameFunc;

		[Token(Token = "0x4000B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public prefabCountDelegate prefabCountFunc;

		[Token(Token = "0x4000B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x94260C", Offset = "0x94260C")]
		public int totalCount;

		[Token(Token = "0x4000B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[HideInInspector]
		public int poolSize;

		[NonSerialized]
		[Token(Token = "0x4000B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public object[] objectsToFill;

		[Token(Token = "0x4000B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x942664", Offset = "0x942664")]
		public float threshold;

		[Token(Token = "0x4000B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x94269C", Offset = "0x94269C")]
		public bool reverseDirection;

		[Token(Token = "0x4000B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9426D4", Offset = "0x9426D4")]
		public float rubberScale;

		[Token(Token = "0x4000B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		protected int itemTypeStart;

		[Token(Token = "0x4000B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected int itemTypeEnd;

		[Token(Token = "0x4000B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private bool _isFirstSetData;

		[Token(Token = "0x4000B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Vector2 ItemSize;

		[Token(Token = "0x4000B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected int directionSign;

		[Token(Token = "0x4000B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float m_ContentSpacing;

		[Token(Token = "0x4000B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected GridLayoutGroup m_GridLayout;

		[Token(Token = "0x4000B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int m_ContentConstraintCount;

		[Token(Token = "0x4000B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private RectTransform m_Content;

		[Token(Token = "0x4000B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private bool m_Horizontal;

		[Token(Token = "0x4000B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		[SerializeField]
		private bool m_Vertical;

		[Token(Token = "0x4000B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		private ScrollRectEx.MovementType m_MovementType;

		[Token(Token = "0x4000B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private float m_Elasticity;

		[Token(Token = "0x4000B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[SerializeField]
		private bool m_Inertia;

		[Token(Token = "0x4000B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private float m_DecelerationRate;

		[Token(Token = "0x4000B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[SerializeField]
		private float m_ScrollSensitivity;

		[Token(Token = "0x4000B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private RectTransform m_Viewport;

		[Token(Token = "0x4000B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private Scrollbar m_HorizontalScrollbar;

		[Token(Token = "0x4000B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private Scrollbar m_VerticalScrollbar;

		[Token(Token = "0x4000B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ScrollbarVisibility m_HorizontalScrollbarVisibility;

		[Token(Token = "0x4000B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[SerializeField]
		private ScrollbarVisibility m_VerticalScrollbarVisibility;

		[Token(Token = "0x4000B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private float m_HorizontalScrollbarSpacing;

		[Token(Token = "0x4000B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private float m_VerticalScrollbarSpacing;

		[Token(Token = "0x4000B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private ScrollRectEvent m_OnValueChanged;

		[Token(Token = "0x4000B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Vector2 m_PointerStartLocalCursor;

		[Token(Token = "0x4000B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Vector2 m_ContentStartPosition;

		[Token(Token = "0x4000B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private RectTransform m_ViewRect;

		[Token(Token = "0x4000B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Bounds m_ContentBounds;

		[Token(Token = "0x4000B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Bounds m_ViewBounds;

		[Token(Token = "0x4000B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private Vector2 m_Velocity;

		[Token(Token = "0x4000B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private bool m_Dragging;

		[Token(Token = "0x4000B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private Vector2 m_PrevPosition;

		[Token(Token = "0x4000B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private Bounds m_PrevContentBounds;

		[Token(Token = "0x4000BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		private Bounds m_PrevViewBounds;

		[NonSerialized]
		[Token(Token = "0x4000BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		private bool m_HasRebuiltLayout;

		[Token(Token = "0x4000BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x175")]
		private bool m_HSliderExpand;

		[Token(Token = "0x4000BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x176")]
		private bool m_VSliderExpand;

		[Token(Token = "0x4000BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private float m_HSliderHeight;

		[Token(Token = "0x4000BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		private float m_VSliderWidth;

		[NonSerialized]
		[Token(Token = "0x4000BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private RectTransform m_Rect;

		[Token(Token = "0x4000BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private RectTransform m_HorizontalScrollbarRect;

		[Token(Token = "0x4000BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private RectTransform m_VerticalScrollbarRect;

		[Token(Token = "0x4000BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private DrivenRectTransformTracker m_Tracker;

		[Token(Token = "0x4000BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x94280C", Offset = "0x94280C")]
		private float <flexibleWidth>k__BackingField;

		[Token(Token = "0x4000BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private readonly Vector3[] m_Corners;

		[Token(Token = "0x1700013E")]
		protected float contentSpacing
		{
			[Token(Token = "0x6002378")]
			[Address(RVA = "0xD7A760", Offset = "0xD7A760", VA = "0xD7A760")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700013F")]
		protected int contentConstraintCount
		{
			[Token(Token = "0x6002379")]
			[Address(RVA = "0xD7B844", Offset = "0xD7B844", VA = "0xD7B844")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000140")]
		public override RectTransform content
		{
			[Token(Token = "0x600237A")]
			[Address(RVA = "0xD7B99C", Offset = "0xD7B99C", VA = "0xD7B99C", Slot = "17")]
			get
			{
				return null;
			}
			[Token(Token = "0x600237B")]
			[Address(RVA = "0xD7B9A4", Offset = "0xD7B9A4", VA = "0xD7B9A4", Slot = "18")]
			set
			{
			}
		}

		[Token(Token = "0x17000141")]
		public override bool horizontal
		{
			[Token(Token = "0x600237C")]
			[Address(RVA = "0xD7B9AC", Offset = "0xD7B9AC", VA = "0xD7B9AC", Slot = "23")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600237D")]
			[Address(RVA = "0xD7B9B4", Offset = "0xD7B9B4", VA = "0xD7B9B4", Slot = "24")]
			set
			{
			}
		}

		[Token(Token = "0x17000142")]
		public bool vertical
		{
			[Token(Token = "0x600237E")]
			[Address(RVA = "0xD7B9C0", Offset = "0xD7B9C0", VA = "0xD7B9C0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600237F")]
			[Address(RVA = "0xD7B9C8", Offset = "0xD7B9C8", VA = "0xD7B9C8")]
			set
			{
			}
		}

		[Token(Token = "0x17000143")]
		public override ScrollRectEx.MovementType movementType
		{
			[Token(Token = "0x6002380")]
			[Address(RVA = "0xD7B9D4", Offset = "0xD7B9D4", VA = "0xD7B9D4", Slot = "25")]
			get
			{
				return default(ScrollRectEx.MovementType);
			}
			[Token(Token = "0x6002381")]
			[Address(RVA = "0xD7B9DC", Offset = "0xD7B9DC", VA = "0xD7B9DC", Slot = "26")]
			set
			{
			}
		}

		[Token(Token = "0x17000144")]
		public float elasticity
		{
			[Token(Token = "0x6002382")]
			[Address(RVA = "0xD7B9E4", Offset = "0xD7B9E4", VA = "0xD7B9E4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002383")]
			[Address(RVA = "0xD7B9EC", Offset = "0xD7B9EC", VA = "0xD7B9EC")]
			set
			{
			}
		}

		[Token(Token = "0x17000145")]
		public override bool inertia
		{
			[Token(Token = "0x6002384")]
			[Address(RVA = "0xD7B9F4", Offset = "0xD7B9F4", VA = "0xD7B9F4", Slot = "21")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002385")]
			[Address(RVA = "0xD7B9FC", Offset = "0xD7B9FC", VA = "0xD7B9FC", Slot = "22")]
			set
			{
			}
		}

		[Token(Token = "0x17000146")]
		public float decelerationRate
		{
			[Token(Token = "0x6002386")]
			[Address(RVA = "0xD7BA08", Offset = "0xD7BA08", VA = "0xD7BA08")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002387")]
			[Address(RVA = "0xD7BA10", Offset = "0xD7BA10", VA = "0xD7BA10")]
			set
			{
			}
		}

		[Token(Token = "0x17000147")]
		public float scrollSensitivity
		{
			[Token(Token = "0x6002388")]
			[Address(RVA = "0xD7BA18", Offset = "0xD7BA18", VA = "0xD7BA18")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002389")]
			[Address(RVA = "0xD7BA20", Offset = "0xD7BA20", VA = "0xD7BA20")]
			set
			{
			}
		}

		[Token(Token = "0x17000148")]
		public RectTransform viewport
		{
			[Token(Token = "0x600238A")]
			[Address(RVA = "0xD7BA28", Offset = "0xD7BA28", VA = "0xD7BA28")]
			get
			{
				return null;
			}
			[Token(Token = "0x600238B")]
			[Address(RVA = "0xD7BA30", Offset = "0xD7BA30", VA = "0xD7BA30")]
			set
			{
			}
		}

		[Token(Token = "0x17000149")]
		public Scrollbar horizontalScrollbar
		{
			[Token(Token = "0x600238C")]
			[Address(RVA = "0xD7BAFC", Offset = "0xD7BAFC", VA = "0xD7BAFC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600238D")]
			[Address(RVA = "0xD7BB04", Offset = "0xD7BB04", VA = "0xD7BB04")]
			set
			{
			}
		}

		[Token(Token = "0x1700014A")]
		public Scrollbar verticalScrollbar
		{
			[Token(Token = "0x600238E")]
			[Address(RVA = "0xD7BC78", Offset = "0xD7BC78", VA = "0xD7BC78")]
			get
			{
				return null;
			}
			[Token(Token = "0x600238F")]
			[Address(RVA = "0xD7BC80", Offset = "0xD7BC80", VA = "0xD7BC80")]
			set
			{
			}
		}

		[Token(Token = "0x1700014B")]
		public ScrollbarVisibility horizontalScrollbarVisibility
		{
			[Token(Token = "0x6002390")]
			[Address(RVA = "0xD7BDF4", Offset = "0xD7BDF4", VA = "0xD7BDF4")]
			get
			{
				return default(ScrollbarVisibility);
			}
			[Token(Token = "0x6002391")]
			[Address(RVA = "0xD7BDFC", Offset = "0xD7BDFC", VA = "0xD7BDFC")]
			set
			{
			}
		}

		[Token(Token = "0x1700014C")]
		public ScrollbarVisibility verticalScrollbarVisibility
		{
			[Token(Token = "0x6002392")]
			[Address(RVA = "0xD7BE04", Offset = "0xD7BE04", VA = "0xD7BE04")]
			get
			{
				return default(ScrollbarVisibility);
			}
			[Token(Token = "0x6002393")]
			[Address(RVA = "0xD7BE0C", Offset = "0xD7BE0C", VA = "0xD7BE0C")]
			set
			{
			}
		}

		[Token(Token = "0x1700014D")]
		public float horizontalScrollbarSpacing
		{
			[Token(Token = "0x6002394")]
			[Address(RVA = "0xD7BE14", Offset = "0xD7BE14", VA = "0xD7BE14")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002395")]
			[Address(RVA = "0xD7BE1C", Offset = "0xD7BE1C", VA = "0xD7BE1C")]
			set
			{
			}
		}

		[Token(Token = "0x1700014E")]
		public float verticalScrollbarSpacing
		{
			[Token(Token = "0x6002396")]
			[Address(RVA = "0xD7BEBC", Offset = "0xD7BEBC", VA = "0xD7BEBC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002397")]
			[Address(RVA = "0xD7BEC4", Offset = "0xD7BEC4", VA = "0xD7BEC4")]
			set
			{
			}
		}

		[Token(Token = "0x1700014F")]
		public ScrollRectEvent onValueChanged
		{
			[Token(Token = "0x6002398")]
			[Address(RVA = "0xD7BECC", Offset = "0xD7BECC", VA = "0xD7BECC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002399")]
			[Address(RVA = "0xD7BED4", Offset = "0xD7BED4", VA = "0xD7BED4")]
			set
			{
			}
		}

		[Token(Token = "0x17000150")]
		protected RectTransform viewRect
		{
			[Token(Token = "0x600239A")]
			[Address(RVA = "0xD7BEDC", Offset = "0xD7BEDC", VA = "0xD7BEDC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000151")]
		public override Vector2 velocity
		{
			[Token(Token = "0x600239B")]
			[Address(RVA = "0xD7BFD0", Offset = "0xD7BFD0", VA = "0xD7BFD0", Slot = "19")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x600239C")]
			[Address(RVA = "0xD7BFDC", Offset = "0xD7BFDC", VA = "0xD7BFDC", Slot = "20")]
			set
			{
			}
		}

		[Token(Token = "0x17000152")]
		private RectTransform rectTransform
		{
			[Token(Token = "0x600239D")]
			[Address(RVA = "0xD7BFE8", Offset = "0xD7BFE8", VA = "0xD7BFE8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000153")]
		public virtual float minWidth
		{
			[Token(Token = "0x600239E")]
			[Address(RVA = "0xD7C080", Offset = "0xD7C080", VA = "0xD7C080", Slot = "53")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000154")]
		public virtual float preferredWidth
		{
			[Token(Token = "0x600239F")]
			[Address(RVA = "0xD7C088", Offset = "0xD7C088", VA = "0xD7C088", Slot = "54")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000155")]
		public virtual float flexibleWidth
		{
			[Token(Token = "0x60023A0")]
			[Address(RVA = "0xD7C090", Offset = "0xD7C090", VA = "0xD7C090", Slot = "55")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A8064", Offset = "0x9A8064")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60023A1")]
			[Address(RVA = "0xD7C098", Offset = "0xD7C098", VA = "0xD7C098")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A8074", Offset = "0x9A8074")]
			private set
			{
			}
		}

		[Token(Token = "0x17000156")]
		public virtual float minHeight
		{
			[Token(Token = "0x60023A2")]
			[Address(RVA = "0xD7C0A0", Offset = "0xD7C0A0", VA = "0xD7C0A0", Slot = "56")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000157")]
		public virtual float preferredHeight
		{
			[Token(Token = "0x60023A3")]
			[Address(RVA = "0xD7C0A8", Offset = "0xD7C0A8", VA = "0xD7C0A8", Slot = "57")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000158")]
		public virtual float flexibleHeight
		{
			[Token(Token = "0x60023A4")]
			[Address(RVA = "0xD7C0B0", Offset = "0xD7C0B0", VA = "0xD7C0B0", Slot = "58")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000159")]
		public virtual int layoutPriority
		{
			[Token(Token = "0x60023A5")]
			[Address(RVA = "0xD7C0B8", Offset = "0xD7C0B8", VA = "0xD7C0B8", Slot = "59")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700015A")]
		private bool hScrollingNeeded
		{
			[Token(Token = "0x60023A6")]
			[Address(RVA = "0xD7C0C0", Offset = "0xD7C0C0", VA = "0xD7C0C0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700015B")]
		private bool vScrollingNeeded
		{
			[Token(Token = "0x60023A7")]
			[Address(RVA = "0xD7C128", Offset = "0xD7C128", VA = "0xD7C128")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700015C")]
		public Vector2 normalizedPosition
		{
			[Token(Token = "0x60023CC")]
			[Address(RVA = "0xD7F688", Offset = "0xD7F688", VA = "0xD7F688")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x60023CD")]
			[Address(RVA = "0xD7FBF8", Offset = "0xD7FBF8", VA = "0xD7FBF8")]
			set
			{
			}
		}

		[Token(Token = "0x1700015D")]
		public float horizontalNormalizedPosition
		{
			[Token(Token = "0x60023CE")]
			[Address(RVA = "0xD7FA10", Offset = "0xD7FA10", VA = "0xD7FA10")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60023CF")]
			[Address(RVA = "0xD7FECC", Offset = "0xD7FECC", VA = "0xD7FECC")]
			set
			{
			}
		}

		[Token(Token = "0x1700015E")]
		public float verticalNormalizedPosition
		{
			[Token(Token = "0x60023D0")]
			[Address(RVA = "0xD7FB04", Offset = "0xD7FB04", VA = "0xD7FB04")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60023D1")]
			[Address(RVA = "0xD7FED4", Offset = "0xD7FED4", VA = "0xD7FED4")]
			set
			{
			}
		}

		[Token(Token = "0x6002373")]
		[Address(RVA = "0xD7B6AC", Offset = "0xD7B6AC", VA = "0xD7B6AC")]
		public void Set(string prefabPath, LuaFunction onInit, LuaFunction onFill, Component comp)
		{
		}

		[Token(Token = "0x6002374")]
		[Address(RVA = "0xD7B7AC", Offset = "0xD7B7AC", VA = "0xD7B7AC")]
		private void ClearLuafunction()
		{
		}

		[Token(Token = "0x6002375")]
		protected abstract float GetSize(RectTransform item);

		[Token(Token = "0x6002376")]
		protected abstract float GetDimension(Vector2 vector);

		[Token(Token = "0x6002377")]
		protected abstract Vector2 GetVector(float value);

		[Token(Token = "0x60023A8")]
		[Address(RVA = "0xD7B564", Offset = "0xD7B564", VA = "0xD7B564")]
		protected LoopScrollRect()
		{
		}

		[Token(Token = "0x60023A9")]
		[Address(RVA = "0xD7C1E0", Offset = "0xD7C1E0", VA = "0xD7C1E0", Slot = "60")]
		protected virtual bool UpdateItems(Bounds viewBounds, Bounds contentBounds)
		{
			return default(bool);
		}

		[Token(Token = "0x60023AA")]
		[Address(RVA = "0xD7C1E8", Offset = "0xD7C1E8", VA = "0xD7C1E8")]
		private void SendMessageToNewObject(Transform ts, int idx)
		{
		}

		[Token(Token = "0x60023AB")]
		[Address(RVA = "0xD7C644", Offset = "0xD7C644", VA = "0xD7C644")]
		private void ReturnObjectAndSendMessage(Transform ts)
		{
		}

		[Token(Token = "0x60023AC")]
		[Address(RVA = "0xD7C70C", Offset = "0xD7C70C", VA = "0xD7C70C")]
		public void ClearCells()
		{
		}

		[Token(Token = "0x60023AD")]
		[Address(RVA = "0xD7C7A4", Offset = "0xD7C7A4", VA = "0xD7C7A4")]
		public void RefreshCells()
		{
		}

		[Token(Token = "0x60023AE")]
		[Address(RVA = "0xD7C898", Offset = "0xD7C898", VA = "0xD7C898")]
		public void RefillCells(int startIdx = 0)
		{
		}

		[Token(Token = "0x60023AF")]
		[Address(RVA = "0xD7B0BC", Offset = "0xD7B0BC", VA = "0xD7B0BC")]
		protected float NewItemAtStart()
		{
			return default(float);
		}

		[Token(Token = "0x60023B0")]
		[Address(RVA = "0xD7B2C8", Offset = "0xD7B2C8", VA = "0xD7B2C8")]
		protected float DeleteItemAtStart()
		{
			return default(float);
		}

		[Token(Token = "0x60023B1")]
		[Address(RVA = "0xD7ABA8", Offset = "0xD7ABA8", VA = "0xD7ABA8")]
		protected float NewItemAtEnd()
		{
			return default(float);
		}

		[Token(Token = "0x60023B2")]
		[Address(RVA = "0xD7ADE4", Offset = "0xD7ADE4", VA = "0xD7ADE4")]
		protected float DeleteItemAtEnd()
		{
			return default(float);
		}

		[Token(Token = "0x60023B3")]
		[Address(RVA = "0xD7CEC0", Offset = "0xD7CEC0", VA = "0xD7CEC0")]
		private RectTransform InstantiateNextItem(int itemIdx)
		{
			return null;
		}

		[Token(Token = "0x60023B4")]
		[Address(RVA = "0xD7D284", Offset = "0xD7D284", VA = "0xD7D284")]
		private GameObject _loadGO(string prefabPath)
		{
			return null;
		}

		[Token(Token = "0x60023B5")]
		[Address(RVA = "0xD7C68C", Offset = "0xD7C68C", VA = "0xD7C68C")]
		private void _unloadGO(GameObject go)
		{
		}

		[Token(Token = "0x60023B6")]
		[Address(RVA = "0xD7D69C", Offset = "0xD7D69C", VA = "0xD7D69C")]
		private void _clearPool()
		{
		}

		[Token(Token = "0x60023B7")]
		[Address(RVA = "0xD7D71C", Offset = "0xD7D71C", VA = "0xD7D71C", Slot = "61")]
		public virtual void Rebuild(CanvasUpdate executing)
		{
		}

		[Token(Token = "0x60023B8")]
		[Address(RVA = "0xD7E2A0", Offset = "0xD7E2A0", VA = "0xD7E2A0", Slot = "62")]
		public virtual void LayoutComplete()
		{
		}

		[Token(Token = "0x60023B9")]
		[Address(RVA = "0xD7E2A4", Offset = "0xD7E2A4", VA = "0xD7E2A4", Slot = "63")]
		public virtual void GraphicUpdateComplete()
		{
		}

		[Token(Token = "0x60023BA")]
		[Address(RVA = "0xD7D7D8", Offset = "0xD7D7D8", VA = "0xD7D7D8")]
		private void UpdateCachedData()
		{
		}

		[Token(Token = "0x60023BB")]
		[Address(RVA = "0xD7E2A8", Offset = "0xD7E2A8", VA = "0xD7E2A8", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60023BC")]
		[Address(RVA = "0xD7E440", Offset = "0xD7E440", VA = "0xD7E440", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x60023BD")]
		[Address(RVA = "0xD7E654", Offset = "0xD7E654", VA = "0xD7E654", Slot = "8")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x60023BE")]
		[Address(RVA = "0xD7E684", Offset = "0xD7E684", VA = "0xD7E684", Slot = "64")]
		public virtual void OnScroll(PointerEventData data)
		{
		}

		[Token(Token = "0x60023BF")]
		[Address(RVA = "0xD7E99C", Offset = "0xD7E99C", VA = "0xD7E99C", Slot = "65")]
		public virtual void OnInitializePotentialDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60023C0")]
		[Address(RVA = "0xD7EA28", Offset = "0xD7EA28", VA = "0xD7EA28", Slot = "66")]
		public virtual void OnBeginDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60023C1")]
		[Address(RVA = "0xD7EB60", Offset = "0xD7EB60", VA = "0xD7EB60", Slot = "67")]
		public virtual void OnEndDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60023C2")]
		[Address(RVA = "0xD7EB84", Offset = "0xD7EB84", VA = "0xD7EB84", Slot = "68")]
		public virtual void OnDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60023C3")]
		[Address(RVA = "0xD7EECC", Offset = "0xD7EECC", VA = "0xD7EECC", Slot = "9")]
		public override bool IsActive()
		{
			return default(bool);
		}

		[Token(Token = "0x60023C4")]
		[Address(RVA = "0xD7E918", Offset = "0xD7E918", VA = "0xD7E918")]
		private void EnsureLayoutHasRebuilt()
		{
		}

		[Token(Token = "0x60023C5")]
		[Address(RVA = "0xD7EF5C", Offset = "0xD7EF5C", VA = "0xD7EF5C", Slot = "27")]
		public override void StopMovement()
		{
		}

		[Token(Token = "0x60023C6")]
		[Address(RVA = "0xD7EFCC", Offset = "0xD7EFCC", VA = "0xD7EFCC", Slot = "69")]
		protected virtual void SetContentAnchoredPosition(Vector2 position)
		{
		}

		[Token(Token = "0x60023C7")]
		[Address(RVA = "0xD7F0EC", Offset = "0xD7F0EC", VA = "0xD7F0EC", Slot = "70")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x60023C8")]
		[Address(RVA = "0xD7F488", Offset = "0xD7F488", VA = "0xD7F488")]
		private void _update(float deltaTime, Vector2 offset)
		{
		}

		[Token(Token = "0x60023C9")]
		[Address(RVA = "0xD7F6E0", Offset = "0xD7F6E0", VA = "0xD7F6E0")]
		private void _updateVelocity(Vector2 offset, float deltaTime)
		{
		}

		[Token(Token = "0x60023CA")]
		[Address(RVA = "0xD7E1AC", Offset = "0xD7E1AC", VA = "0xD7E1AC")]
		private void UpdatePrevData()
		{
		}

		[Token(Token = "0x60023CB")]
		[Address(RVA = "0xD7DF34", Offset = "0xD7DF34", VA = "0xD7DF34")]
		private void UpdateScrollbars(Vector2 offset)
		{
		}

		[Token(Token = "0x60023D2")]
		[Address(RVA = "0xD7FEDC", Offset = "0xD7FEDC", VA = "0xD7FEDC")]
		private void SetHorizontalNormalizedPosition(float value)
		{
		}

		[Token(Token = "0x60023D3")]
		[Address(RVA = "0xD7FEE4", Offset = "0xD7FEE4", VA = "0xD7FEE4")]
		private void SetVerticalNormalizedPosition(float value)
		{
		}

		[Token(Token = "0x60023D4")]
		[Address(RVA = "0xD7FC34", Offset = "0xD7FC34", VA = "0xD7FC34")]
		private void SetNormalizedPosition(float value, int axis)
		{
		}

		[Token(Token = "0x60023D5")]
		[Address(RVA = "0xD7EE20", Offset = "0xD7EE20", VA = "0xD7EE20")]
		private static float RubberDelta(float overStretching, float viewSize)
		{
			return default(float);
		}

		[Token(Token = "0x60023D6")]
		[Address(RVA = "0xD7FEEC", Offset = "0xD7FEEC", VA = "0xD7FEEC", Slot = "10")]
		protected override void OnRectTransformDimensionsChange()
		{
		}

		[Token(Token = "0x60023D7")]
		[Address(RVA = "0xD7FEF0", Offset = "0xD7FEF0", VA = "0xD7FEF0", Slot = "71")]
		public virtual void CalculateLayoutInputHorizontal()
		{
		}

		[Token(Token = "0x60023D8")]
		[Address(RVA = "0xD7FEF4", Offset = "0xD7FEF4", VA = "0xD7FEF4", Slot = "72")]
		public virtual void CalculateLayoutInputVertical()
		{
		}

		[Token(Token = "0x60023D9")]
		[Address(RVA = "0xD7FEF8", Offset = "0xD7FEF8", VA = "0xD7FEF8", Slot = "73")]
		public virtual void SetLayoutHorizontal()
		{
		}

		[Token(Token = "0x60023DA")]
		[Address(RVA = "0xD807BC", Offset = "0xD807BC", VA = "0xD807BC", Slot = "74")]
		public virtual void SetLayoutVertical()
		{
		}

		[Token(Token = "0x60023DB")]
		[Address(RVA = "0xD7F300", Offset = "0xD7F300", VA = "0xD7F300")]
		private void UpdateScrollbarVisibility()
		{
		}

		[Token(Token = "0x60023DC")]
		[Address(RVA = "0xD8091C", Offset = "0xD8091C", VA = "0xD8091C")]
		private void UpdateScrollbarLayout()
		{
		}

		[Token(Token = "0x60023DD")]
		[Address(RVA = "0xD7DBA4", Offset = "0xD7DBA4", VA = "0xD7DBA4")]
		private void UpdateBounds(bool updateItems = true, bool updateBounds = false)
		{
		}

		[Token(Token = "0x60023DE")]
		[Address(RVA = "0xD80510", Offset = "0xD80510", VA = "0xD80510")]
		private Bounds GetBounds()
		{
			return default(Bounds);
		}

		[Token(Token = "0x60023DF")]
		[Address(RVA = "0xD7CB80", Offset = "0xD7CB80", VA = "0xD7CB80")]
		private new Vector2 CalculateOffset(Vector2 delta)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60023E0")]
		[Address(RVA = "0xD7BE24", Offset = "0xD7BE24", VA = "0xD7BE24")]
		protected void SetDirty()
		{
		}

		[Token(Token = "0x60023E1")]
		[Address(RVA = "0xD7BA38", Offset = "0xD7BA38", VA = "0xD7BA38")]
		protected void SetDirtyCaching()
		{
		}

		[SpecialName]
		[Token(Token = "0x60023E2")]
		[Address(RVA = "0xD80C44", Offset = "0xD80C44", VA = "0xD80C44", Slot = "35")]
		private Transform UnityEngine.UI.ICanvasElement.get_transform()
		{
			return null;
		}

		[Token(Token = "0x60023E3")]
		[Address(RVA = "0xD80C4C", Offset = "0xD80C4C", VA = "0xD80C4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A8084", Offset = "0x9A8084")]
		private void <Set>b__8_0(GameObject go)
		{
		}

		[Token(Token = "0x60023E4")]
		[Address(RVA = "0xD80CB4", Offset = "0xD80CB4", VA = "0xD80CB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A8094", Offset = "0x9A8094")]
		private void <Set>b__8_1(GameObject go, int index)
		{
		}
	}
	[Token(Token = "0x2000286")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x93F86C", Offset = "0x93F86C")]
	[DisallowMultipleComponent]
	public class LoopVerticalScrollRect : LoopScrollRect
	{
		[Token(Token = "0x60023E5")]
		[Address(RVA = "0xD811D4", Offset = "0xD811D4", VA = "0xD811D4", Slot = "50")]
		protected override float GetSize(RectTransform item)
		{
			return default(float);
		}

		[Token(Token = "0x60023E6")]
		[Address(RVA = "0xD81290", Offset = "0xD81290", VA = "0xD81290", Slot = "51")]
		protected override float GetDimension(Vector2 vector)
		{
			return default(float);
		}

		[Token(Token = "0x60023E7")]
		[Address(RVA = "0xD81298", Offset = "0xD81298", VA = "0xD81298", Slot = "52")]
		protected override Vector2 GetVector(float value)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60023E8")]
		[Address(RVA = "0xD812CC", Offset = "0xD812CC", VA = "0xD812CC", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60023E9")]
		[Address(RVA = "0xD813D4", Offset = "0xD813D4", VA = "0xD813D4", Slot = "60")]
		protected override bool UpdateItems(Bounds viewBounds, Bounds contentBounds)
		{
			return default(bool);
		}

		[Token(Token = "0x60023EA")]
		[Address(RVA = "0xD8152C", Offset = "0xD8152C", VA = "0xD8152C")]
		public LoopVerticalScrollRect()
		{
		}
	}
	[Token(Token = "0x2000287")]
	public class AllReloadChildComponent__HAIBAO__SWORD__
	{
		[Token(Token = "0x60023EB")]
		[Address(RVA = "0xC126C8", Offset = "0xC126C8", VA = "0xC126C8")]
		public static void SetComponnet(GameObject go, ReloadChildCompoent com)
		{
		}

		[Token(Token = "0x60023EC")]
		[Address(RVA = "0xC126CC", Offset = "0xC126CC", VA = "0xC126CC")]
		public static ReloadChildCompoent GetComponent(GameObject go)
		{
			return null;
		}

		[Token(Token = "0x60023ED")]
		[Address(RVA = "0xC12724", Offset = "0xC12724", VA = "0xC12724")]
		public static bool ContainsKey(GameObject go)
		{
			return default(bool);
		}

		[Token(Token = "0x60023EE")]
		[Address(RVA = "0xC127A0", Offset = "0xC127A0", VA = "0xC127A0")]
		public static void Remove(GameObject go, ReloadChildCompoent comp)
		{
		}

		[Token(Token = "0x60023EF")]
		[Address(RVA = "0xC12824", Offset = "0xC12824", VA = "0xC12824")]
		public static void RemoveComponent(GameObject go)
		{
		}

		[Token(Token = "0x60023F0")]
		[Address(RVA = "0xC128BC", Offset = "0xC128BC", VA = "0xC128BC")]
		public AllReloadChildComponent__HAIBAO__SWORD__()
		{
		}
	}
	[Token(Token = "0x2000288")]
	public class ReloadChildCompoent : SBehaviour
	{
		[Token(Token = "0x200045B")]
		public delegate void OnInitItem(GameObject go, int index);

		[Token(Token = "0x200045C")]
		public delegate void OnFillItem(GameObject go, int index);

		[Token(Token = "0x200045D")]
		public delegate void OnComplete();

		[Token(Token = "0x200045E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940870", Offset = "0x940870")]
		private sealed class <>c__DisplayClass19_0
		{
			[Token(Token = "0x4001138")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LuaFunction onFill;

			[Token(Token = "0x4001139")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LuaFunction onCreate;

			[Token(Token = "0x400113A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LuaFunction onComplete;

			[Token(Token = "0x6002EB1")]
			[Address(RVA = "0xD85578", Offset = "0xD85578", VA = "0xD85578")]
			public <>c__DisplayClass19_0()
			{
			}

			[Token(Token = "0x6002EB2")]
			[Address(RVA = "0xD86E00", Offset = "0xD86E00", VA = "0xD86E00")]
			internal void <Get>b__0(GameObject go, int index)
			{
			}

			[Token(Token = "0x6002EB3")]
			[Address(RVA = "0xD86E70", Offset = "0xD86E70", VA = "0xD86E70")]
			internal void <Get>b__1(GameObject go, int index)
			{
			}

			[Token(Token = "0x6002EB4")]
			[Address(RVA = "0xD86EE0", Offset = "0xD86EE0", VA = "0xD86EE0")]
			internal void <Get>b__2()
			{
			}
		}

		[Token(Token = "0x200045F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940880", Offset = "0x940880")]
		private sealed class <createChildInColoutine>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400113B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400113C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400113D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ReloadChildCompoent <>4__this;

			[Token(Token = "0x1700023B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002EB8")]
				[Address(RVA = "0xD86FC4", Offset = "0xD86FC4", VA = "0xD86FC4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700023C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002EBA")]
				[Address(RVA = "0xD8702C", Offset = "0xD8702C", VA = "0xD8702C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002EB5")]
			[Address(RVA = "0xD861F0", Offset = "0xD861F0", VA = "0xD861F0")]
			[DebuggerHidden]
			public <createChildInColoutine>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6002EB6")]
			[Address(RVA = "0xD86EFC", Offset = "0xD86EFC", VA = "0xD86EFC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002EB7")]
			[Address(RVA = "0xD86F00", Offset = "0xD86F00", VA = "0xD86F00", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002EB9")]
			[Address(RVA = "0xD86FCC", Offset = "0xD86FCC", VA = "0xD86FCC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<GameObject> childs;

		[Token(Token = "0x4000BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int count;

		[Token(Token = "0x4000BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int resChildCountByPrefab;

		[Token(Token = "0x4000BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OnInitItem onIniteItem;

		[Token(Token = "0x4000BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OnFillItem onFillItem;

		[Token(Token = "0x4000BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OnComplete onComplete;

		[Token(Token = "0x4000BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Resource res;

		[Token(Token = "0x4000BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private string path;

		[Token(Token = "0x4000BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool isLoading;

		[Token(Token = "0x4000BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		private bool isInied;

		[Token(Token = "0x4000BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		private bool lastSetCountInUnVisible;

		[Token(Token = "0x4000BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<LuaFunction> luafuns;

		[Token(Token = "0x4000BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool IsSync;

		[Token(Token = "0x4000BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public GameObject _prefab;

		[Token(Token = "0x4000BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Coroutine mCoroutine;

		[Token(Token = "0x4000BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool isDestroyed;

		[Token(Token = "0x1700015F")]
		private GameObject prefab
		{
			[Token(Token = "0x60023F7")]
			[Address(RVA = "0xD85990", Offset = "0xD85990", VA = "0xD85990")]
			get
			{
				return null;
			}
			[Token(Token = "0x60023F8")]
			[Address(RVA = "0xD85A68", Offset = "0xD85A68", VA = "0xD85A68")]
			set
			{
			}
		}

		[Token(Token = "0x60023F1")]
		[Address(RVA = "0xD85390", Offset = "0xD85390", VA = "0xD85390")]
		public static ReloadChildCompoent Get(GameObject parent, LuaFunction onCreate, LuaFunction onFill, string path, GameObject temp, [Optional] LuaFunction onComplete)
		{
			return null;
		}

		[Token(Token = "0x60023F2")]
		[Address(RVA = "0xD83990", Offset = "0xD83990", VA = "0xD83990")]
		public static ReloadChildCompoent Get(GameObject parent, OnInitItem onCreate, OnFillItem onFill, string path, GameObject temp, [Optional] OnComplete onComplete)
		{
			return null;
		}

		[Token(Token = "0x60023F3")]
		[Address(RVA = "0xD8561C", Offset = "0xD8561C", VA = "0xD8561C")]
		public void Init(string path, OnInitItem onIniteItem, OnFillItem onFillItem, [Optional] OnComplete onComplete)
		{
		}

		[Token(Token = "0x60023F4")]
		[Address(RVA = "0xD85798", Offset = "0xD85798", VA = "0xD85798")]
		public void Init(GameObject prefab, OnInitItem onIniteItem, OnFillItem onFillItem, [Optional] OnComplete onComplete)
		{
		}

		[Token(Token = "0x60023F5")]
		[Address(RVA = "0xD857A8", Offset = "0xD857A8", VA = "0xD857A8")]
		private void Load()
		{
		}

		[Token(Token = "0x60023F6")]
		[Address(RVA = "0xD858F8", Offset = "0xD858F8", VA = "0xD858F8", Slot = "5")]
		protected override void InitMono()
		{
		}

		[Token(Token = "0x60023F9")]
		[Address(RVA = "0xD83B90", Offset = "0xD83B90", VA = "0xD83B90")]
		public void SetCount(int count)
		{
		}

		[Token(Token = "0x60023FA")]
		[Address(RVA = "0xD85F38", Offset = "0xD85F38", VA = "0xD85F38")]
		private void _createChildSync()
		{
		}

		[Token(Token = "0x60023FB")]
		[Address(RVA = "0xD85FA4", Offset = "0xD85FA4", VA = "0xD85FA4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A80A4", Offset = "0x9A80A4")]
		private IEnumerator createChildInColoutine()
		{
			return null;
		}

		[Token(Token = "0x60023FC")]
		[Address(RVA = "0xD8621C", Offset = "0xD8621C", VA = "0xD8621C")]
		private void InitOne()
		{
		}

		[Token(Token = "0x60023FD")]
		[Address(RVA = "0xD86024", Offset = "0xD86024", VA = "0xD86024")]
		private void _initOneSync()
		{
		}

		[Token(Token = "0x60023FE")]
		[Address(RVA = "0xD86134", Offset = "0xD86134", VA = "0xD86134")]
		private void _onFinish()
		{
		}

		[Token(Token = "0x60023FF")]
		[Address(RVA = "0xD85A70", Offset = "0xD85A70", VA = "0xD85A70")]
		private void initedDefaulse()
		{
		}

		[Token(Token = "0x6002400")]
		[Address(RVA = "0xD86784", Offset = "0xD86784", VA = "0xD86784")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002401")]
		[Address(RVA = "0xD86804", Offset = "0xD86804", VA = "0xD86804")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002402")]
		[Address(RVA = "0xD86808", Offset = "0xD86808", VA = "0xD86808")]
		public void UnLoad()
		{
		}

		[Token(Token = "0x6002403")]
		[Address(RVA = "0xD868C4", Offset = "0xD868C4", VA = "0xD868C4", Slot = "6")]
		public override void DestroyMono()
		{
		}

		[Token(Token = "0x6002404")]
		[Address(RVA = "0xD86A08", Offset = "0xD86A08", VA = "0xD86A08", Slot = "1")]
		~ReloadChildCompoent()
		{
		}

		[Token(Token = "0x6002405")]
		[Address(RVA = "0xD85590", Offset = "0xD85590", VA = "0xD85590")]
		public void addLuaFun(LuaFunction fun)
		{
		}

		[Token(Token = "0x6002406")]
		[Address(RVA = "0xD86014", Offset = "0xD86014", VA = "0xD86014")]
		private void callCompelete()
		{
		}

		[Token(Token = "0x6002407")]
		[Address(RVA = "0xD86CDC", Offset = "0xD86CDC", VA = "0xD86CDC")]
		public ReloadChildCompoent()
		{
		}

		[Token(Token = "0x6002408")]
		[Address(RVA = "0xD86D74", Offset = "0xD86D74", VA = "0xD86D74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A8108", Offset = "0x9A8108")]
		private void <Load>b__23_0(Resource res, object data)
		{
		}
	}
	[Token(Token = "0x2000289")]
	public class StickOnBorder : MonoBehaviour, IEndDragHandler, IEventSystemHandler, IBeginDragHandler, IDragHandler, IScrollHandler
	{
		[Token(Token = "0x2000460")]
		public enum eDirection
		{
			[Token(Token = "0x400113F")]
			Left,
			[Token(Token = "0x4001140")]
			Right
		}

		[Token(Token = "0x4000BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[ExportToLuaAttrbute]
		public bool IsCanDrag;

		[Token(Token = "0x4000BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool IsSetToAdjustSize;

		[Token(Token = "0x4000BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ScrollRectEx Scv;

		[Token(Token = "0x4000BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RectTransform Content;

		[Token(Token = "0x4000BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[NoToLua]
		public RectTransform ContentMid;

		[Token(Token = "0x4000BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[NoToLua]
		public RectTransform ContentRight;

		[Token(Token = "0x4000BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[NoToLua]
		public RectTransform ContentLeft;

		[Token(Token = "0x4000BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<RectTransform> ListRectRightSync;

		[Token(Token = "0x4000BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<RectTransform> ListRectLeftSync;

		[Token(Token = "0x4000BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<RectTransform> ListRectMidSync;

		[Token(Token = "0x4000BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<LuaFunction> EndCallback;

		[Token(Token = "0x4000BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<LuaFunction> BeginCallback;

		[Token(Token = "0x4000BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<LuaFunction> mAllFun;

		[Token(Token = "0x4000BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[NoToLua]
		public int Offset;

		[Token(Token = "0x4000BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[NoToLua]
		public float DragPercent;

		[Token(Token = "0x4000BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[NoToLua]
		public float FullDuration;

		[Token(Token = "0x4000BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[NoToLua]
		public float MinDuration;

		[Token(Token = "0x4000BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[NoToLua]
		public float NearMinDuration;

		[Token(Token = "0x4000BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector3 PosLeft;

		[Token(Token = "0x4000BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 PosRight;

		[Token(Token = "0x4000BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Tweener _tweenMove;

		[Token(Token = "0x4000BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector2 _startPos;

		[Token(Token = "0x4000BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Vector2 LastPos;

		[Token(Token = "0x4000BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private eDirection LastDirection;

		[Token(Token = "0x4000BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private bool _isNeedSyncPos;

		[Token(Token = "0x4000BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC5")]
		private bool _isCanCallBengin;

		[Token(Token = "0x6002409")]
		[Address(RVA = "0xD87B80", Offset = "0xD87B80", VA = "0xD87B80")]
		private void Awake()
		{
		}

		[Token(Token = "0x600240A")]
		[Address(RVA = "0xD87E98", Offset = "0xD87E98", VA = "0xD87E98")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600240B")]
		[Address(RVA = "0xD87EA4", Offset = "0xD87EA4", VA = "0xD87EA4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600240C")]
		[Address(RVA = "0xD87EAC", Offset = "0xD87EAC", VA = "0xD87EAC")]
		[ExportToLuaAttrbute]
		public void SetToLeft()
		{
		}

		[Token(Token = "0x600240D")]
		[Address(RVA = "0xD8813C", Offset = "0xD8813C", VA = "0xD8813C")]
		[ExportToLuaAttrbute]
		public void SetToRight()
		{
		}

		[Token(Token = "0x600240E")]
		[Address(RVA = "0xD88194", Offset = "0xD88194", VA = "0xD88194")]
		[ExportToLuaAttrbute]
		public void MoveToLeft()
		{
		}

		[Token(Token = "0x600240F")]
		[Address(RVA = "0xD88218", Offset = "0xD88218", VA = "0xD88218")]
		[ExportToLuaAttrbute]
		public void MoveToRight()
		{
		}

		[Token(Token = "0x6002410")]
		[Address(RVA = "0xD88278", Offset = "0xD88278", VA = "0xD88278")]
		private void _clearTween()
		{
		}

		[Token(Token = "0x6002411")]
		[Address(RVA = "0xD882E4", Offset = "0xD882E4", VA = "0xD882E4", Slot = "6")]
		[NoToLua]
		public void OnDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002412")]
		[Address(RVA = "0xD886DC", Offset = "0xD886DC", VA = "0xD886DC", Slot = "5")]
		[NoToLua]
		public void OnBeginDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002413")]
		[Address(RVA = "0xD87F28", Offset = "0xD87F28", VA = "0xD87F28")]
		private void _callOnBeginDrag()
		{
		}

		[Token(Token = "0x6002414")]
		[Address(RVA = "0xD8871C", Offset = "0xD8871C", VA = "0xD8871C", Slot = "4")]
		[NoToLua]
		public void OnEndDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002415")]
		[Address(RVA = "0xD88734", Offset = "0xD88734", VA = "0xD88734")]
		private void _onEnd()
		{
		}

		[Token(Token = "0x6002416")]
		[Address(RVA = "0xD88028", Offset = "0xD88028", VA = "0xD88028")]
		private void _tweenTo(Vector2 endPos, float duration)
		{
		}

		[Token(Token = "0x6002417")]
		[Address(RVA = "0xD888A8", Offset = "0xD888A8", VA = "0xD888A8")]
		private void _onTweenOver()
		{
		}

		[Token(Token = "0x6002418")]
		[Address(RVA = "0xD883A0", Offset = "0xD883A0", VA = "0xD883A0")]
		private void _syncPos()
		{
		}

		[Token(Token = "0x6002419")]
		[Address(RVA = "0xD889B4", Offset = "0xD889B4", VA = "0xD889B4")]
		[ExportToLuaAttrbute]
		public void AddMidSync(GameObject go)
		{
		}

		[Token(Token = "0x600241A")]
		[Address(RVA = "0xD88A70", Offset = "0xD88A70", VA = "0xD88A70")]
		[ExportToLuaAttrbute]
		public void RemoveMidSync(GameObject go)
		{
		}

		[Token(Token = "0x600241B")]
		[Address(RVA = "0xD88B08", Offset = "0xD88B08", VA = "0xD88B08")]
		[ExportToLuaAttrbute]
		public void AddEndDragCall(LuaFunction onEndDrag)
		{
		}

		[Token(Token = "0x600241C")]
		[Address(RVA = "0xD88B84", Offset = "0xD88B84", VA = "0xD88B84")]
		[ExportToLuaAttrbute]
		public void RemoveEndDragCall(LuaFunction onEndDrag)
		{
		}

		[Token(Token = "0x600241D")]
		[Address(RVA = "0xD88BEC", Offset = "0xD88BEC", VA = "0xD88BEC")]
		[ExportToLuaAttrbute]
		public void AddBeginDragCall(LuaFunction onEndDrag)
		{
		}

		[Token(Token = "0x600241E")]
		[Address(RVA = "0xD88C68", Offset = "0xD88C68", VA = "0xD88C68")]
		[ExportToLuaAttrbute]
		public void RemoveBeginDragCall(LuaFunction onEndDrag)
		{
		}

		[Token(Token = "0x600241F")]
		[Address(RVA = "0xD88CD0", Offset = "0xD88CD0", VA = "0xD88CD0", Slot = "7")]
		public void OnScroll(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002420")]
		[Address(RVA = "0xD88CD4", Offset = "0xD88CD4", VA = "0xD88CD4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002421")]
		[Address(RVA = "0xD88DE8", Offset = "0xD88DE8", VA = "0xD88DE8")]
		public StickOnBorder()
		{
		}
	}
	[Token(Token = "0x200028A")]
	public abstract class UIBase : BaseMono
	{
		[Token(Token = "0x6002422")]
		[Address(RVA = "0xCB2914", Offset = "0xCB2914", VA = "0xCB2914")]
		protected UIBase()
		{
		}
	}
}
namespace LuaInterface
{
	[Token(Token = "0x200028B")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x93F8BC", Offset = "0x93F8BC")]
	public sealed class MonoPInvokeCallbackAttribute : Attribute
	{
		[Token(Token = "0x6002423")]
		[Address(RVA = "0x15AD744", Offset = "0x15AD744", VA = "0x15AD744")]
		public MonoPInvokeCallbackAttribute(Type type)
		{
		}
	}
	[Token(Token = "0x200028C")]
	public class NoToLuaAttribute : Attribute
	{
		[Token(Token = "0x6002424")]
		[Address(RVA = "0x15AD74C", Offset = "0x15AD74C", VA = "0x15AD74C")]
		public NoToLuaAttribute()
		{
		}
	}
	[Token(Token = "0x200028D")]
	public class UseDefinedAttribute : Attribute
	{
		[Token(Token = "0x6002425")]
		[Address(RVA = "0x15BD318", Offset = "0x15BD318", VA = "0x15BD318")]
		public UseDefinedAttribute()
		{
		}
	}
	[Token(Token = "0x200028E")]
	public class OverrideDefinedAttribute : Attribute
	{
		[Token(Token = "0x6002426")]
		[Address(RVA = "0x15AE420", Offset = "0x15AE420", VA = "0x15AE420")]
		public OverrideDefinedAttribute()
		{
		}
	}
	[Token(Token = "0x200028F")]
	public sealed class LuaByteBufferAttribute : Attribute
	{
		[Token(Token = "0x6002427")]
		[Address(RVA = "0x14732DC", Offset = "0x14732DC", VA = "0x14732DC")]
		public LuaByteBufferAttribute()
		{
		}
	}
	[Token(Token = "0x2000290")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x93F8D0", Offset = "0x93F8D0")]
	public sealed class LuaRenameAttribute : Attribute
	{
		[Token(Token = "0x4000BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Name;

		[Token(Token = "0x6002428")]
		[Address(RVA = "0xEFDDF4", Offset = "0xEFDDF4", VA = "0xEFDDF4")]
		public LuaRenameAttribute()
		{
		}
	}
	[Token(Token = "0x2000291")]
	public abstract class LuaBaseRef : IDisposable
	{
		[Token(Token = "0x4000BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4000BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected int reference;

		[Token(Token = "0x4000BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected LuaState luaState;

		[Token(Token = "0x4000BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ObjectTranslator translator;

		[Token(Token = "0x4000BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected bool beDisposed;

		[Token(Token = "0x4000BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		protected int count;

		[Token(Token = "0x4000BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool IsAlive;

		[Token(Token = "0x6002429")]
		[Address(RVA = "0x1472A80", Offset = "0x1472A80", VA = "0x1472A80")]
		public LuaBaseRef()
		{
		}

		[Token(Token = "0x600242A")]
		[Address(RVA = "0x1472AC8", Offset = "0x1472AC8", VA = "0x1472AC8", Slot = "1")]
		~LuaBaseRef()
		{
		}

		[Token(Token = "0x600242B")]
		[Address(RVA = "0x1472B48", Offset = "0x1472B48", VA = "0x1472B48", Slot = "5")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x600242C")]
		[Address(RVA = "0x14725D4", Offset = "0x14725D4", VA = "0x14725D4")]
		public void AddRef()
		{
		}

		[Token(Token = "0x600242D")]
		[Address(RVA = "0x1472B9C", Offset = "0x1472B9C", VA = "0x1472B9C", Slot = "6")]
		public virtual void Dispose(bool disposeManagedResources)
		{
		}

		[Token(Token = "0x600242E")]
		[Address(RVA = "0x1472C78", Offset = "0x1472C78", VA = "0x1472C78")]
		public void Dispose(int generation)
		{
		}

		[Token(Token = "0x600242F")]
		[Address(RVA = "0x1472C98", Offset = "0x1472C98", VA = "0x1472C98")]
		public LuaState GetLuaState()
		{
			return null;
		}

		[Token(Token = "0x6002430")]
		[Address(RVA = "0x1472CA0", Offset = "0x1472CA0", VA = "0x1472CA0")]
		public void Push()
		{
		}

		[Token(Token = "0x6002431")]
		[Address(RVA = "0x1472CC0", Offset = "0x1472CC0", VA = "0x1472CC0", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6002432")]
		[Address(RVA = "0x1472CC8", Offset = "0x1472CC8", VA = "0x1472CC8", Slot = "7")]
		public virtual int GetReference()
		{
			return default(int);
		}

		[Token(Token = "0x6002433")]
		[Address(RVA = "0x1472CD0", Offset = "0x1472CD0", VA = "0x1472CD0", Slot = "0")]
		public override bool Equals(object o)
		{
			return default(bool);
		}

		[Token(Token = "0x6002434")]
		[Address(RVA = "0x1472D90", Offset = "0x1472D90", VA = "0x1472D90")]
		private static bool CompareRef(LuaBaseRef a, LuaBaseRef b)
		{
			return default(bool);
		}

		[Token(Token = "0x6002435")]
		[Address(RVA = "0x1470E28", Offset = "0x1470E28", VA = "0x1470E28")]
		public static bool operator ==(LuaBaseRef a, LuaBaseRef b)
		{
			return default(bool);
		}

		[Token(Token = "0x6002436")]
		[Address(RVA = "0x146F768", Offset = "0x146F768", VA = "0x146F768")]
		public static bool operator !=(LuaBaseRef a, LuaBaseRef b)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000292")]
	public class LuaBeatEvent : IDisposable
	{
		[Token(Token = "0x4000BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected LuaState luaState;

		[Token(Token = "0x4000BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool beDisposed;

		[Token(Token = "0x4000BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LuaTable self;

		[Token(Token = "0x4000BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private LuaFunction _add;

		[Token(Token = "0x4000BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private LuaFunction _remove;

		[Token(Token = "0x6002437")]
		[Address(RVA = "0x1472DF0", Offset = "0x1472DF0", VA = "0x1472DF0")]
		public LuaBeatEvent(LuaTable table)
		{
		}

		[Token(Token = "0x6002438")]
		[Address(RVA = "0x1472EAC", Offset = "0x1472EAC", VA = "0x1472EAC", Slot = "4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6002439")]
		[Address(RVA = "0x1472F18", Offset = "0x1472F18", VA = "0x1472F18")]
		private void Clear()
		{
		}

		[Token(Token = "0x600243A")]
		[Address(RVA = "0x1472F28", Offset = "0x1472F28", VA = "0x1472F28")]
		public void Dispose(bool disposeManagedResources)
		{
		}

		[Token(Token = "0x600243B")]
		[Address(RVA = "0x1472FE8", Offset = "0x1472FE8", VA = "0x1472FE8")]
		public void Add(LuaFunction func, LuaTable obj)
		{
		}

		[Token(Token = "0x600243C")]
		[Address(RVA = "0x14730CC", Offset = "0x14730CC", VA = "0x14730CC")]
		public void Remove(LuaFunction func, LuaTable obj)
		{
		}
	}
	[Token(Token = "0x2000293")]
	public enum LuaTypes
	{
		[Token(Token = "0x4000BE4")]
		LUA_TNONE = -1,
		[Token(Token = "0x4000BE5")]
		LUA_TNIL,
		[Token(Token = "0x4000BE6")]
		LUA_TBOOLEAN,
		[Token(Token = "0x4000BE7")]
		LUA_TLIGHTUSERDATA,
		[Token(Token = "0x4000BE8")]
		LUA_TNUMBER,
		[Token(Token = "0x4000BE9")]
		LUA_TSTRING,
		[Token(Token = "0x4000BEA")]
		LUA_TTABLE,
		[Token(Token = "0x4000BEB")]
		LUA_TFUNCTION,
		[Token(Token = "0x4000BEC")]
		LUA_TUSERDATA,
		[Token(Token = "0x4000BED")]
		LUA_TTHREAD
	}
	[Token(Token = "0x2000294")]
	public enum LuaGCOptions
	{
		[Token(Token = "0x4000BEF")]
		LUA_GCSTOP,
		[Token(Token = "0x4000BF0")]
		LUA_GCRESTART,
		[Token(Token = "0x4000BF1")]
		LUA_GCCOLLECT,
		[Token(Token = "0x4000BF2")]
		LUA_GCCOUNT,
		[Token(Token = "0x4000BF3")]
		LUA_GCCOUNTB,
		[Token(Token = "0x4000BF4")]
		LUA_GCSTEP,
		[Token(Token = "0x4000BF5")]
		LUA_GCSETPAUSE,
		[Token(Token = "0x4000BF6")]
		LUA_GCSETSTEPMUL
	}
	[Token(Token = "0x2000295")]
	public enum LuaThreadStatus
	{
		[Token(Token = "0x4000BF8")]
		LUA_YIELD = 1,
		[Token(Token = "0x4000BF9")]
		LUA_ERRRUN,
		[Token(Token = "0x4000BFA")]
		LUA_ERRSYNTAX,
		[Token(Token = "0x4000BFB")]
		LUA_ERRMEM,
		[Token(Token = "0x4000BFC")]
		LUA_ERRERR
	}
	[Token(Token = "0x2000296")]
	public enum LuaHookFlag
	{
		[Token(Token = "0x4000BFE")]
		LUA_HOOKCALL,
		[Token(Token = "0x4000BFF")]
		LUA_HOOKRET,
		[Token(Token = "0x4000C00")]
		LUA_HOOKLINE,
		[Token(Token = "0x4000C01")]
		LUA_HOOKCOUNT,
		[Token(Token = "0x4000C02")]
		LUA_HOOKTAILRET
	}
	[Token(Token = "0x2000297")]
	public enum LuaMask
	{
		[Token(Token = "0x4000C04")]
		LUA_MASKCALL = 1,
		[Token(Token = "0x4000C05")]
		LUA_MASKRET = 2,
		[Token(Token = "0x4000C06")]
		LUA_MASKLINE = 4,
		[Token(Token = "0x4000C07")]
		LUA_MASKCOUNT = 8
	}
	[Token(Token = "0x2000298")]
	public class LuaIndexes
	{
		[Token(Token = "0x4000C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int LUA_REGISTRYINDEX;

		[Token(Token = "0x4000C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static int LUA_ENVIRONINDEX;

		[Token(Token = "0x4000C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static int LUA_GLOBALSINDEX;

		[Token(Token = "0x600243D")]
		[Address(RVA = "0x1481C64", Offset = "0x1481C64", VA = "0x1481C64")]
		public LuaIndexes()
		{
		}
	}
	[Token(Token = "0x2000299")]
	public class LuaRIDX
	{
		[Token(Token = "0x4000C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int LUA_RIDX_MAINTHREAD;

		[Token(Token = "0x4000C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int LUA_RIDX_GLOBALS;

		[Token(Token = "0x4000C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int LUA_RIDX_PRELOAD;

		[Token(Token = "0x4000C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int LUA_RIDX_LOADED;

		[Token(Token = "0x600243F")]
		[Address(RVA = "0x1487D98", Offset = "0x1487D98", VA = "0x1487D98")]
		public LuaRIDX()
		{
		}
	}
	[Token(Token = "0x200029A")]
	public static class ToLuaFlags
	{
		[Token(Token = "0x4000C0F")]
		public const int INDEX_ERROR = 1;

		[Token(Token = "0x4000C10")]
		public const int USE_INT64 = 2;
	}
	[Token(Token = "0x200029B")]
	public struct Lua_Debug
	{
		[Token(Token = "0x4000C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int eventcode;

		[Token(Token = "0x4000C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr _name;

		[Token(Token = "0x4000C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr _namewhat;

		[Token(Token = "0x4000C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IntPtr _what;

		[Token(Token = "0x4000C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IntPtr _source;

		[Token(Token = "0x4000C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int currentline;

		[Token(Token = "0x4000C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int nups;

		[Token(Token = "0x4000C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int linedefined;

		[Token(Token = "0x4000C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int lastlinedefined;

		[Token(Token = "0x4000C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public byte[] _short_src;

		[Token(Token = "0x4000C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int i_ci;

		[Token(Token = "0x17000160")]
		public string namewhat
		{
			[Token(Token = "0x6002441")]
			[Address(RVA = "0x15AD634", Offset = "0x15AD634", VA = "0x15AD634")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000161")]
		public string name
		{
			[Token(Token = "0x6002442")]
			[Address(RVA = "0x15AD63C", Offset = "0x15AD63C", VA = "0x15AD63C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000162")]
		public string what
		{
			[Token(Token = "0x6002443")]
			[Address(RVA = "0x15AD644", Offset = "0x15AD644", VA = "0x15AD644")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000163")]
		public string source
		{
			[Token(Token = "0x6002444")]
			[Address(RVA = "0x15AD64C", Offset = "0x15AD64C", VA = "0x15AD64C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000164")]
		public string short_src
		{
			[Token(Token = "0x6002446")]
			[Address(RVA = "0x15AD6AC", Offset = "0x15AD6AC", VA = "0x15AD6AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002440")]
		[Address(RVA = "0x15AD588", Offset = "0x15AD588", VA = "0x15AD588")]
		private string tostring(IntPtr p)
		{
			return null;
		}

		[Token(Token = "0x6002445")]
		[Address(RVA = "0x15AD654", Offset = "0x15AD654", VA = "0x15AD654")]
		private int GetShortSrcLen(byte[] str)
		{
			return default(int);
		}
	}
	[Token(Token = "0x200029C")]
	public delegate int LuaCSFunction(IntPtr luaState);
	[Token(Token = "0x200029D")]
	public delegate void LuaHookFunc(IntPtr L, ref Lua_Debug ar);
	[Token(Token = "0x200029E")]
	public class LuaDLL
	{
		[Token(Token = "0x4000C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string version;

		[Token(Token = "0x4000C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static int LUA_MULTRET;

		[Token(Token = "0x4000C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static string[] LuaTypeName;

		[Token(Token = "0x4000C1F")]
		private const string LUADLL = "tolua";

		[PreserveSig]
		[Token(Token = "0x600244F")]
		[Address(RVA = "0x14739A4", Offset = "0x14739A4", VA = "0x14739A4")]
		public static extern int luaopen_pb(IntPtr L);

		[PreserveSig]
		[Token(Token = "0x6002450")]
		[Address(RVA = "0x1473A24", Offset = "0x1473A24", VA = "0x1473A24")]
		public static extern int luaopen_ffi(IntPtr L);

		[PreserveSig]
		[Token(Token = "0x6002451")]
		[Address(RVA = "0x1473AA4", Offset = "0x1473AA4", VA = "0x1473AA4")]
		public static extern int luaopen_bit(IntPtr L);

		[PreserveSig]
		[Token(Token = "0x6002452")]
		[Address(RVA = "0x1473B24", Offset = "0x1473B24", VA = "0x1473B24")]
		public static extern int luaopen_struct(IntPtr L);

		[PreserveSig]
		[Token(Token = "0x6002453")]
		[Address(RVA = "0x1473BA4", Offset = "0x1473BA4", VA = "0x1473BA4")]
		public static extern int luaopen_lpeg(IntPtr L);

		[PreserveSig]
		[Token(Token = "0x6002454")]
		[Address(RVA = "0x146FEF0", Offset = "0x146FEF0", VA = "0x146FEF0")]
		public static extern int luaopen_socket_core(IntPtr L);

		[PreserveSig]
		[Token(Token = "0x6002455")]
		[Address(RVA = "0x146FF70", Offset = "0x146FF70", VA = "0x146FF70")]
		public static extern int luaopen_mime_core(IntPtr L);

		[PreserveSig]
		[Token(Token = "0x6002456")]
		[Address(RVA = "0x1473C24", Offset = "0x1473C24", VA = "0x1473C24")]
		public static extern int luaopen_cjson(IntPtr L);

		[PreserveSig]
		[Token(Token = "0x6002457")]
		[Address(RVA = "0x1473CA4", Offset = "0x1473CA4", VA = "0x1473CA4")]
		public static extern int luaopen_cjson_safe(IntPtr L);

		[Token(Token = "0x6002458")]
		[Address(RVA = "0x1473D24", Offset = "0x1473D24", VA = "0x1473D24")]
		public static int lua_upvalueindex(int i)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002459")]
		[Address(RVA = "0x1473D94", Offset = "0x1473D94", VA = "0x1473D94")]
		public static extern void lua_close(IntPtr luaState);

		[PreserveSig]
		[Token(Token = "0x600245A")]
		[Address(RVA = "0x1473E14", Offset = "0x1473E14", VA = "0x1473E14")]
		public static extern IntPtr lua_newthread(IntPtr L);

		[PreserveSig]
		[Token(Token = "0x600245B")]
		[Address(RVA = "0x1473E94", Offset = "0x1473E94", VA = "0x1473E94")]
		public static extern IntPtr lua_atpanic(IntPtr luaState, IntPtr panic);

		[PreserveSig]
		[Token(Token = "0x600245C")]
		[Address(RVA = "0x1473F24", Offset = "0x1473F24", VA = "0x1473F24")]
		public static extern int lua_gettop(IntPtr luaState);

		[PreserveSig]
		[Token(Token = "0x600245D")]
		[Address(RVA = "0x1473FA4", Offset = "0x1473FA4", VA = "0x1473FA4")]
		public static extern void lua_settop(IntPtr luaState, int top);

		[PreserveSig]
		[Token(Token = "0x600245E")]
		[Address(RVA = "0x1474034", Offset = "0x1474034", VA = "0x1474034")]
		public static extern void lua_pushvalue(IntPtr luaState, int idx);

		[PreserveSig]
		[Token(Token = "0x600245F")]
		[Address(RVA = "0x14740C4", Offset = "0x14740C4", VA = "0x14740C4")]
		public static extern void lua_remove(IntPtr luaState, int idx);

		[PreserveSig]
		[Token(Token = "0x6002460")]
		[Address(RVA = "0x1474154", Offset = "0x1474154", VA = "0x1474154")]
		public static extern void lua_insert(IntPtr luaState, int idx);

		[PreserveSig]
		[Token(Token = "0x6002461")]
		[Address(RVA = "0x14741E4", Offset = "0x14741E4", VA = "0x14741E4")]
		public static extern void lua_replace(IntPtr luaState, int index);

		[PreserveSig]
		[Token(Token = "0x6002462")]
		[Address(RVA = "0x1474274", Offset = "0x1474274", VA = "0x1474274")]
		public static extern int lua_checkstack(IntPtr luaState, int extra);

		[PreserveSig]
		[Token(Token = "0x6002463")]
		[Address(RVA = "0x1474304", Offset = "0x1474304", VA = "0x1474304")]
		public static extern void lua_xmove(IntPtr from, IntPtr to, int n);

		[PreserveSig]
		[Token(Token = "0x6002464")]
		[Address(RVA = "0x147439C", Offset = "0x147439C", VA = "0x147439C")]
		public static extern int lua_isnumber(IntPtr luaState, int idx);

		[PreserveSig]
		[Token(Token = "0x6002465")]
		[Address(RVA = "0x1474428", Offset = "0x1474428", VA = "0x1474428")]
		public static extern int lua_isstring(IntPtr luaState, int index);

		[PreserveSig]
		[Token(Token = "0x6002466")]
		[Address(RVA = "0x14744B4", Offset = "0x14744B4", VA = "0x14744B4")]
		public static extern int lua_iscfunction(IntPtr luaState, int index);

		[PreserveSig]
		[Token(Token = "0x6002467")]
		[Address(RVA = "0x1474544", Offset = "0x1474544", VA = "0x1474544")]
		public static extern int lua_isuserdata(IntPtr luaState, int stackPos);

		[PreserveSig]
		[Token(Token = "0x6002468")]
		[Address(RVA = "0x14745D4", Offset = "0x14745D4", VA = "0x14745D4")]
		public static extern LuaTypes lua_type(IntPtr luaState, int index);

		[Token(Token = "0x6002469")]
		[Address(RVA = "0x1474664", Offset = "0x1474664", VA = "0x1474664")]
		public static string lua_typename(IntPtr luaState, LuaTypes type)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600246A")]
		[Address(RVA = "0x14746FC", Offset = "0x14746FC", VA = "0x14746FC")]
		public static extern int lua_equal(IntPtr luaState, int idx1, int idx2);

		[PreserveSig]
		[Token(Token = "0x600246B")]
		[Address(RVA = "0x1474794", Offset = "0x1474794", VA = "0x1474794")]
		public static extern int lua_rawequal(IntPtr luaState, int idx1, int idx2);

		[PreserveSig]
		[Token(Token = "0x600246C")]
		[Address(RVA = "0x147482C", Offset = "0x147482C", VA = "0x147482C")]
		public static extern int lua_lessthan(IntPtr luaState, int idx1, int idx2);

		[PreserveSig]
		[Token(Token = "0x600246D")]
		[Address(RVA = "0x14748C4", Offset = "0x14748C4", VA = "0x14748C4")]
		public static extern double lua_tonumber(IntPtr luaState, int idx);

		[Token(Token = "0x600246E")]
		[Address(RVA = "0x1474950", Offset = "0x1474950", VA = "0x1474950")]
		public static int lua_tointeger(IntPtr luaState, int idx)
		{
			return default(int);
		}

		[Token(Token = "0x600246F")]
		[Address(RVA = "0x1474A54", Offset = "0x1474A54", VA = "0x1474A54")]
		public static bool lua_toboolean(IntPtr luaState, int idx)
		{
			return default(bool);
		}

		[Token(Token = "0x6002470")]
		[Address(RVA = "0x1474B60", Offset = "0x1474B60", VA = "0x1474B60")]
		public static IntPtr lua_tolstring(IntPtr luaState, int index, out int strLen)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6002471")]
		[Address(RVA = "0x1474C74", Offset = "0x1474C74", VA = "0x1474C74")]
		public static int lua_objlen(IntPtr luaState, int idx)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002472")]
		[Address(RVA = "0x1474D74", Offset = "0x1474D74", VA = "0x1474D74")]
		public static extern IntPtr lua_tocfunction(IntPtr luaState, int idx);

		[PreserveSig]
		[Token(Token = "0x6002473")]
		[Address(RVA = "0x1474E04", Offset = "0x1474E04", VA = "0x1474E04")]
		public static extern IntPtr lua_touserdata(IntPtr luaState, int idx);

		[PreserveSig]
		[Token(Token = "0x6002474")]
		[Address(RVA = "0x1474E94", Offset = "0x1474E94", VA = "0x1474E94")]
		public static extern IntPtr lua_tothread(IntPtr L, int idx);

		[PreserveSig]
		[Token(Token = "0x6002475")]
		[Address(RVA = "0x1474F20", Offset = "0x1474F20", VA = "0x1474F20")]
		public static extern IntPtr lua_topointer(IntPtr L, int idx);

		[PreserveSig]
		[Token(Token = "0x6002476")]
		[Address(RVA = "0x1474FB0", Offset = "0x1474FB0", VA = "0x1474FB0")]
		public static extern void lua_pushnil(IntPtr luaState);

		[PreserveSig]
		[Token(Token = "0x6002477")]
		[Address(RVA = "0x1475030", Offset = "0x1475030", VA = "0x1475030")]
		public static extern void lua_pushnumber(IntPtr luaState, double number);

		[Token(Token = "0x6002478")]
		[Address(RVA = "0x14750C0", Offset = "0x14750C0", VA = "0x14750C0")]
		public static void lua_pushinteger(IntPtr L, int n)
		{
		}

		[Token(Token = "0x6002479")]
		[Address(RVA = "0x1475134", Offset = "0x1475134", VA = "0x1475134")]
		public static void lua_pushlstring(IntPtr luaState, byte[] str, int size)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600247A")]
		[Address(RVA = "0x14754D0", Offset = "0x14754D0", VA = "0x14754D0")]
		public static extern void lua_pushstring(IntPtr luaState, string str);

		[PreserveSig]
		[Token(Token = "0x600247B")]
		[Address(RVA = "0x1475574", Offset = "0x1475574", VA = "0x1475574")]
		public static extern void lua_pushcclosure(IntPtr luaState, IntPtr fn, int n);

		[PreserveSig]
		[Token(Token = "0x600247C")]
		[Address(RVA = "0x147560C", Offset = "0x147560C", VA = "0x147560C")]
		public static extern void lua_pushboolean(IntPtr luaState, int value);

		[Token(Token = "0x600247D")]
		[Address(RVA = "0x147569C", Offset = "0x147569C", VA = "0x147569C")]
		public static void lua_pushboolean(IntPtr luaState, bool value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600247E")]
		[Address(RVA = "0x1475714", Offset = "0x1475714", VA = "0x1475714")]
		public static extern void lua_pushlightuserdata(IntPtr luaState, IntPtr udata);

		[PreserveSig]
		[Token(Token = "0x600247F")]
		[Address(RVA = "0x14757A4", Offset = "0x14757A4", VA = "0x14757A4")]
		public static extern int lua_pushthread(IntPtr L);

		[Token(Token = "0x6002480")]
		[Address(RVA = "0x1475824", Offset = "0x1475824", VA = "0x1475824")]
		public static void lua_gettable(IntPtr L, int idx)
		{
		}

		[Token(Token = "0x6002481")]
		[Address(RVA = "0x1475A58", Offset = "0x1475A58", VA = "0x1475A58")]
		public static void lua_getfield(IntPtr L, int idx, string key)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6002482")]
		[Address(RVA = "0x1475BF4", Offset = "0x1475BF4", VA = "0x1475BF4")]
		public static extern void lua_rawget(IntPtr luaState, int idx);

		[PreserveSig]
		[Token(Token = "0x6002483")]
		[Address(RVA = "0x1475C84", Offset = "0x1475C84", VA = "0x1475C84")]
		public static extern void lua_rawgeti(IntPtr luaState, int idx, int n);

		[PreserveSig]
		[Token(Token = "0x6002484")]
		[Address(RVA = "0x1475D1C", Offset = "0x1475D1C", VA = "0x1475D1C")]
		public static extern void lua_createtable(IntPtr luaState, int narr, int nrec);

		[Token(Token = "0x6002485")]
		[Address(RVA = "0x1475DB4", Offset = "0x1475DB4", VA = "0x1475DB4")]
		public static IntPtr lua_newuserdata(IntPtr luaState, int size)
		{
			return default(IntPtr);
		}

		[PreserveSig]
		[Token(Token = "0x6002486")]
		[Address(RVA = "0x1475EB8", Offset = "0x1475EB8", VA = "0x1475EB8")]
		public static extern int lua_getmetatable(IntPtr luaState, int objIndex);

		[PreserveSig]
		[Token(Token = "0x6002487")]
		[Address(RVA = "0x1475F48", Offset = "0x1475F48", VA = "0x1475F48")]
		public static extern void lua_getfenv(IntPtr luaState, int idx);

		[Token(Token = "0x6002488")]
		[Address(RVA = "0x1475FD8", Offset = "0x1475FD8", VA = "0x1475FD8")]
		public static void lua_settable(IntPtr L, int idx)
		{
		}

		[Token(Token = "0x6002489")]
		[Address(RVA = "0x1476148", Offset = "0x1476148", VA = "0x1476148")]
		public static void lua_setfield(IntPtr L, int idx, string key)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600248A")]
		[Address(RVA = "0x14762E4", Offset = "0x14762E4", VA = "0x14762E4")]
		public static extern void lua_rawset(IntPtr luaState, int idx);

		[PreserveSig]
		[Token(Token = "0x600248B")]
		[Address(RVA = "0x1476374", Offset = "0x1476374", VA = "0x1476374")]
		public static extern void lua_rawseti(IntPtr luaState, int tableIndex, int index);

		[PreserveSig]
		[Token(Token = "0x600248C")]
		[Address(RVA = "0x147640C", Offset = "0x147640C", VA = "0x147640C")]
		public static extern void lua_setmetatable(IntPtr luaState, int objIndex);

		[PreserveSig]
		[Token(Token = "0x600248D")]
		[Address(RVA = "0x147649C", Offset = "0x147649C", VA = "0x147649C")]
		public static extern int lua_setfenv(IntPtr luaState, int stackPos);

		[PreserveSig]
		[Token(Token = "0x600248E")]
		[Address(RVA = "0x147652C", Offset = "0x147652C", VA = "0x147652C")]
		public static extern void lua_call(IntPtr luaState, int nArgs, int nResults);

		[PreserveSig]
		[Token(Token = "0x600248F")]
		[Address(RVA = "0x14765C4", Offset = "0x14765C4", VA = "0x14765C4")]
		public static extern int lua_pcall(IntPtr luaState, int nArgs, int nResults, int errfunc);

		[PreserveSig]
		[Token(Token = "0x6002490")]
		[Address(RVA = "0x147666C", Offset = "0x147666C", VA = "0x147666C")]
		public static extern int lua_cpcall(IntPtr L, IntPtr func, IntPtr ud);

		[PreserveSig]
		[Token(Token = "0x6002491")]
		[Address(RVA = "0x1476704", Offset = "0x1476704", VA = "0x1476704")]
		public static extern int lua_yield(IntPtr L, int nresults);

		[PreserveSig]
		[Token(Token = "0x6002492")]
		[Address(RVA = "0x1476794", Offset = "0x1476794", VA = "0x1476794")]
		public static extern int lua_resume(IntPtr L, int narg);

		[PreserveSig]
		[Token(Token = "0x6002493")]
		[Address(RVA = "0x1476824", Offset = "0x1476824", VA = "0x1476824")]
		public static extern int lua_status(IntPtr L);

		[PreserveSig]
		[Token(Token = "0x6002494")]
		[Address(RVA = "0x14768A4", Offset = "0x14768A4", VA = "0x14768A4")]
		public static extern int lua_gc(IntPtr luaState, LuaGCOptions what, int data);

		[PreserveSig]
		[Token(Token = "0x6002495")]
		[Address(RVA = "0x147693C", Offset = "0x147693C", VA = "0x147693C")]
		public static extern int lua_next(IntPtr luaState, int index);

		[PreserveSig]
		[Token(Token = "0x6002496")]
		[Address(RVA = "0x14769CC", Offset = "0x14769CC", VA = "0x14769CC")]
		public static extern void lua_concat(IntPtr luaState, int n);

		[Token(Token = "0x6002497")]
		[Address(RVA = "0x1476A5C", Offset = "0x1476A5C", VA = "0x1476A5C")]
		public static void lua_pop(IntPtr luaState, int amount)
		{
		}

		[Token(Token = "0x6002498")]
		[Address(RVA = "0x1476AD0", Offset = "0x1476AD0", VA = "0x1476AD0")]
		public static void lua_newtable(IntPtr luaState)
		{
		}

		[Token(Token = "0x6002499")]
		[Address(RVA = "0x1476B3C", Offset = "0x1476B3C", VA = "0x1476B3C")]
		public static void lua_register(IntPtr luaState, string name, LuaCSFunction func)
		{
		}

		[Token(Token = "0x600249A")]
		[Address(RVA = "0x1476BC0", Offset = "0x1476BC0", VA = "0x1476BC0")]
		public static void lua_pushcfunction(IntPtr luaState, LuaCSFunction func)
		{
		}

		[Token(Token = "0x600249B")]
		[Address(RVA = "0x1476D1C", Offset = "0x1476D1C", VA = "0x1476D1C")]
		public static bool lua_isfunction(IntPtr luaState, int n)
		{
			return default(bool);
		}

		[Token(Token = "0x600249C")]
		[Address(RVA = "0x1476D9C", Offset = "0x1476D9C", VA = "0x1476D9C")]
		public static bool lua_istable(IntPtr luaState, int n)
		{
			return default(bool);
		}

		[Token(Token = "0x600249D")]
		[Address(RVA = "0x1476E1C", Offset = "0x1476E1C", VA = "0x1476E1C")]
		public static bool lua_islightuserdata(IntPtr luaState, int n)
		{
			return default(bool);
		}

		[Token(Token = "0x600249E")]
		[Address(RVA = "0x1476E9C", Offset = "0x1476E9C", VA = "0x1476E9C")]
		public static bool lua_isnil(IntPtr luaState, int n)
		{
			return default(bool);
		}

		[Token(Token = "0x600249F")]
		[Address(RVA = "0x1476F1C", Offset = "0x1476F1C", VA = "0x1476F1C")]
		public static bool lua_isboolean(IntPtr luaState, int n)
		{
			return default(bool);
		}

		[Token(Token = "0x60024A0")]
		[Address(RVA = "0x1476F9C", Offset = "0x1476F9C", VA = "0x1476F9C")]
		public static bool lua_isthread(IntPtr luaState, int n)
		{
			return default(bool);
		}

		[Token(Token = "0x60024A1")]
		[Address(RVA = "0x147701C", Offset = "0x147701C", VA = "0x147701C")]
		public static bool lua_isnone(IntPtr luaState, int n)
		{
			return default(bool);
		}

		[Token(Token = "0x60024A2")]
		[Address(RVA = "0x147709C", Offset = "0x147709C", VA = "0x147709C")]
		public static bool lua_isnoneornil(IntPtr luaState, int n)
		{
			return default(bool);
		}

		[Token(Token = "0x60024A3")]
		[Address(RVA = "0x1476C74", Offset = "0x1476C74", VA = "0x1476C74")]
		public static void lua_setglobal(IntPtr luaState, string name)
		{
		}

		[Token(Token = "0x60024A4")]
		[Address(RVA = "0x147711C", Offset = "0x147711C", VA = "0x147711C")]
		public static void lua_getglobal(IntPtr luaState, string name)
		{
		}

		[Token(Token = "0x60024A5")]
		[Address(RVA = "0x14771C4", Offset = "0x14771C4", VA = "0x14771C4")]
		public static string lua_ptrtostring(IntPtr str, int len)
		{
			return null;
		}

		[Token(Token = "0x60024A6")]
		[Address(RVA = "0x1475994", Offset = "0x1475994", VA = "0x1475994")]
		public static string lua_tostring(IntPtr luaState, int index)
		{
			return null;
		}

		[Token(Token = "0x60024A7")]
		[Address(RVA = "0x14772C0", Offset = "0x14772C0", VA = "0x14772C0")]
		public static IntPtr lua_open()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60024A8")]
		[Address(RVA = "0x1477390", Offset = "0x1477390", VA = "0x1477390")]
		public static void lua_getregistry(IntPtr L)
		{
		}

		[Token(Token = "0x60024A9")]
		[Address(RVA = "0x1477428", Offset = "0x1477428", VA = "0x1477428")]
		public static int lua_getgccount(IntPtr L)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60024AA")]
		[Address(RVA = "0x1477494", Offset = "0x1477494", VA = "0x1477494")]
		public static extern int lua_getstack(IntPtr L, int level, ref Lua_Debug ar);

		[PreserveSig]
		[Token(Token = "0x60024AB")]
		[Address(RVA = "0x147758C", Offset = "0x147758C", VA = "0x147758C")]
		public static extern int lua_getinfo(IntPtr L, string what, ref Lua_Debug ar);

		[PreserveSig]
		[Token(Token = "0x60024AC")]
		[Address(RVA = "0x1477698", Offset = "0x1477698", VA = "0x1477698")]
		public static extern string lua_getlocal(IntPtr L, ref Lua_Debug ar, int n);

		[PreserveSig]
		[Token(Token = "0x60024AD")]
		[Address(RVA = "0x14777A0", Offset = "0x14777A0", VA = "0x14777A0")]
		public static extern string lua_setlocal(IntPtr L, ref Lua_Debug ar, int n);

		[PreserveSig]
		[Token(Token = "0x60024AE")]
		[Address(RVA = "0x14778A8", Offset = "0x14778A8", VA = "0x14778A8")]
		public static extern string lua_getupvalue(IntPtr L, int funcindex, int n);

		[PreserveSig]
		[Token(Token = "0x60024AF")]
		[Address(RVA = "0x1477958", Offset = "0x1477958", VA = "0x1477958")]
		public static extern string lua_setupvalue(IntPtr L, int funcindex, int n);

		[PreserveSig]
		[Token(Token = "0x60024B0")]
		[Address(RVA = "0x1477A08", Offset = "0x1477A08", VA = "0x1477A08")]
		public static extern int lua_sethook(IntPtr L, LuaHookFunc func, int mask, int count);

		[PreserveSig]
		[Token(Token = "0x60024B1")]
		[Address(RVA = "0x1477AB8", Offset = "0x1477AB8", VA = "0x1477AB8")]
		public static extern LuaHookFunc lua_gethook(IntPtr L);

		[PreserveSig]
		[Token(Token = "0x60024B2")]
		[Address(RVA = "0x1477B6C", Offset = "0x1477B6C", VA = "0x1477B6C")]
		public static extern int lua_gethookmask(IntPtr L);

		[PreserveSig]
		[Token(Token = "0x60024B3")]
		[Address(RVA = "0x1477BEC", Offset = "0x1477BEC", VA = "0x1477BEC")]
		public static extern int lua_gethookcount(IntPtr L);

		[PreserveSig]
		[Token(Token = "0x60024B4")]
		[Address(RVA = "0x1477C6C", Offset = "0x1477C6C", VA = "0x1477C6C")]
		public static extern void luaL_openlibs(IntPtr luaState);

		[Token(Token = "0x60024B5")]
		[Address(RVA = "0x1477CEC", Offset = "0x1477CEC", VA = "0x1477CEC")]
		public static int abs_index(IntPtr L, int i)
		{
			return default(int);
		}

		[Token(Token = "0x60024B6")]
		[Address(RVA = "0x1477DA8", Offset = "0x1477DA8", VA = "0x1477DA8")]
		public static int luaL_getn(IntPtr luaState, int i)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60024B7")]
		[Address(RVA = "0x1477EAC", Offset = "0x1477EAC", VA = "0x1477EAC")]
		public static extern int luaL_getmetafield(IntPtr luaState, int stackPos, string field);

		[Token(Token = "0x60024B8")]
		[Address(RVA = "0x1477F60", Offset = "0x1477F60", VA = "0x1477F60")]
		public static int luaL_callmeta(IntPtr L, int stackPos, string field)
		{
			return default(int);
		}

		[Token(Token = "0x60024B9")]
		[Address(RVA = "0x14780A8", Offset = "0x14780A8", VA = "0x14780A8")]
		public static int luaL_argerror(IntPtr L, int narg, string extramsg)
		{
			return default(int);
		}

		[Token(Token = "0x60024BA")]
		[Address(RVA = "0x147824C", Offset = "0x147824C", VA = "0x147824C")]
		public static int luaL_typerror(IntPtr L, int stackPos, string tname, [Optional] string t2)
		{
			return default(int);
		}

		[Token(Token = "0x60024BB")]
		[Address(RVA = "0x14783B0", Offset = "0x14783B0", VA = "0x14783B0")]
		public static string luaL_checklstring(IntPtr L, int numArg, out int len)
		{
			return null;
		}

		[Token(Token = "0x60024BC")]
		[Address(RVA = "0x14784BC", Offset = "0x14784BC", VA = "0x14784BC")]
		public static string luaL_optlstring(IntPtr L, int narg, string def, out int len)
		{
			return null;
		}

		[Token(Token = "0x60024BD")]
		[Address(RVA = "0x14718E8", Offset = "0x14718E8", VA = "0x14718E8")]
		public static double luaL_checknumber(IntPtr L, int stackPos)
		{
			return default(double);
		}

		[Token(Token = "0x60024BE")]
		[Address(RVA = "0x1478598", Offset = "0x1478598", VA = "0x1478598")]
		public static double luaL_optnumber(IntPtr L, int idx, double def)
		{
			return default(double);
		}

		[Token(Token = "0x60024BF")]
		[Address(RVA = "0x1478658", Offset = "0x1478658", VA = "0x1478658")]
		public static int luaL_checkinteger(IntPtr L, int stackPos)
		{
			return default(int);
		}

		[Token(Token = "0x60024C0")]
		[Address(RVA = "0x1478738", Offset = "0x1478738", VA = "0x1478738")]
		public static int luaL_optinteger(IntPtr L, int idx, int def)
		{
			return default(int);
		}

		[Token(Token = "0x60024C1")]
		[Address(RVA = "0x14787EC", Offset = "0x14787EC", VA = "0x14787EC")]
		public static bool luaL_checkboolean(IntPtr luaState, int index)
		{
			return default(bool);
		}

		[Token(Token = "0x60024C2")]
		[Address(RVA = "0x14788D0", Offset = "0x14788D0", VA = "0x14788D0")]
		public static void luaL_checkstack(IntPtr L, int space, string mes)
		{
		}

		[Token(Token = "0x60024C3")]
		[Address(RVA = "0x14789A8", Offset = "0x14789A8", VA = "0x14789A8")]
		public static void luaL_checktype(IntPtr L, int narg, LuaTypes t)
		{
		}

		[Token(Token = "0x60024C4")]
		[Address(RVA = "0x1478A6C", Offset = "0x1478A6C", VA = "0x1478A6C")]
		public static void luaL_checkany(IntPtr L, int narg)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60024C5")]
		[Address(RVA = "0x1478B28", Offset = "0x1478B28", VA = "0x1478B28")]
		public static extern int luaL_newmetatable(IntPtr luaState, string meta);

		[Token(Token = "0x60024C6")]
		[Address(RVA = "0x1478BD4", Offset = "0x1478BD4", VA = "0x1478BD4")]
		public static IntPtr luaL_checkudata(IntPtr L, int ud, string tname)
		{
			return default(IntPtr);
		}

		[PreserveSig]
		[Token(Token = "0x60024C7")]
		[Address(RVA = "0x1478D5C", Offset = "0x1478D5C", VA = "0x1478D5C")]
		public static extern void luaL_where(IntPtr luaState, int level);

		[Token(Token = "0x60024C8")]
		[Address(RVA = "0x1478DEC", Offset = "0x1478DEC", VA = "0x1478DEC")]
		public static int luaL_throw(IntPtr L, string message)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60024C9")]
		[Address(RVA = "0x1478F88", Offset = "0x1478F88", VA = "0x1478F88")]
		public static extern int luaL_ref(IntPtr luaState, int t);

		[PreserveSig]
		[Token(Token = "0x60024CA")]
		[Address(RVA = "0x1479018", Offset = "0x1479018", VA = "0x1479018")]
		public static extern void luaL_unref(IntPtr luaState, int registryIndex, int reference);

		[PreserveSig]
		[Token(Token = "0x60024CB")]
		[Address(RVA = "0x14790B0", Offset = "0x14790B0", VA = "0x14790B0")]
		public static extern int luaL_loadfile(IntPtr luaState, string filename);

		[Token(Token = "0x60024CC")]
		[Address(RVA = "0x147915C", Offset = "0x147915C", VA = "0x147915C")]
		public static int luaL_loadbuffer(IntPtr luaState, byte[] buff, int size, string name)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60024CD")]
		[Address(RVA = "0x14792B8", Offset = "0x14792B8", VA = "0x14792B8")]
		public static extern int luaL_loadstring(IntPtr luaState, string chunk);

		[PreserveSig]
		[Token(Token = "0x60024CE")]
		[Address(RVA = "0x147731C", Offset = "0x147731C", VA = "0x147731C")]
		public static extern IntPtr luaL_newstate();

		[PreserveSig]
		[Token(Token = "0x60024CF")]
		[Address(RVA = "0x1479364", Offset = "0x1479364", VA = "0x1479364")]
		public static extern IntPtr luaL_gsub(IntPtr luaState, string str, string pattern, string replacement);

		[PreserveSig]
		[Token(Token = "0x60024D0")]
		[Address(RVA = "0x1479450", Offset = "0x1479450", VA = "0x1479450")]
		public static extern IntPtr luaL_findtable(IntPtr luaState, int idx, string fname, int szhint = 1);

		[Token(Token = "0x60024D1")]
		[Address(RVA = "0x1478334", Offset = "0x1478334", VA = "0x1478334")]
		public static string luaL_typename(IntPtr luaState, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x60024D2")]
		[Address(RVA = "0x1479514", Offset = "0x1479514", VA = "0x1479514")]
		public static bool luaL_dofile(IntPtr luaState, string fileName)
		{
			return default(bool);
		}

		[Token(Token = "0x60024D3")]
		[Address(RVA = "0x14795D4", Offset = "0x14795D4", VA = "0x14795D4")]
		public static bool luaL_dostring(IntPtr luaState, string chunk)
		{
			return default(bool);
		}

		[Token(Token = "0x60024D4")]
		[Address(RVA = "0x1479694", Offset = "0x1479694", VA = "0x1479694")]
		public static void luaL_getmetatable(IntPtr luaState, string meta)
		{
		}

		[Token(Token = "0x60024D5")]
		[Address(RVA = "0x147973C", Offset = "0x147973C", VA = "0x147973C")]
		public static int lua_ref(IntPtr luaState)
		{
			return default(int);
		}

		[Token(Token = "0x60024D6")]
		[Address(RVA = "0x14797D4", Offset = "0x14797D4", VA = "0x14797D4")]
		public static void lua_getref(IntPtr luaState, int reference)
		{
		}

		[Token(Token = "0x60024D7")]
		[Address(RVA = "0x147987C", Offset = "0x147987C", VA = "0x147987C")]
		public static void lua_unref(IntPtr luaState, int reference)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60024D8")]
		[Address(RVA = "0x1479924", Offset = "0x1479924", VA = "0x1479924")]
		public static extern void tolua_openlibs(IntPtr L);

		[PreserveSig]
		[Token(Token = "0x60024D9")]
		[Address(RVA = "0x14799A4", Offset = "0x14799A4", VA = "0x14799A4")]
		public static extern void tolua_openint64(IntPtr L);

		[PreserveSig]
		[Token(Token = "0x60024DA")]
		[Address(RVA = "0x1479A24", Offset = "0x1479A24", VA = "0x1479A24")]
		public static extern int tolua_openlualibs(IntPtr L);

		[PreserveSig]
		[Token(Token = "0x60024DB")]
		[Address(RVA = "0x1479AA4", Offset = "0x1479AA4", VA = "0x1479AA4")]
		public static extern IntPtr tolua_tag();

		[PreserveSig]
		[Token(Token = "0x60024DC")]
		[Address(RVA = "0x1479B18", Offset = "0x1479B18", VA = "0x1479B18")]
		public static extern void tolua_newudata(IntPtr luaState, int val);

		[PreserveSig]
		[Token(Token = "0x60024DD")]
		[Address(RVA = "0x1479BA8", Offset = "0x1479BA8", VA = "0x1479BA8")]
		public static extern int tolua_rawnetobj(IntPtr luaState, int obj);

		[PreserveSig]
		[Token(Token = "0x60024DE")]
		[Address(RVA = "0x1479C38", Offset = "0x1479C38", VA = "0x1479C38")]
		public static extern bool tolua_pushudata(IntPtr L, int index);

		[PreserveSig]
		[Token(Token = "0x60024DF")]
		[Address(RVA = "0x1479CD0", Offset = "0x1479CD0", VA = "0x1479CD0")]
		public static extern bool tolua_pushnewudata(IntPtr L, int metaRef, int index);

		[PreserveSig]
		[Token(Token = "0x60024E0")]
		[Address(RVA = "0x1479D70", Offset = "0x1479D70", VA = "0x1479D70")]
		public static extern int tolua_beginpcall(IntPtr L, int reference);

		[PreserveSig]
		[Token(Token = "0x60024E1")]
		[Address(RVA = "0x1478F08", Offset = "0x1478F08", VA = "0x1478F08")]
		public static extern void tolua_pushtraceback(IntPtr L);

		[PreserveSig]
		[Token(Token = "0x60024E2")]
		[Address(RVA = "0x1479E00", Offset = "0x1479E00", VA = "0x1479E00")]
		public static extern void tolua_getvec2(IntPtr luaState, int stackPos, out float x, out float y);

		[PreserveSig]
		[Token(Token = "0x60024E3")]
		[Address(RVA = "0x1479EA8", Offset = "0x1479EA8", VA = "0x1479EA8")]
		public static extern void tolua_getvec3(IntPtr luaState, int stackPos, out float x, out float y, out float z);

		[PreserveSig]
		[Token(Token = "0x60024E4")]
		[Address(RVA = "0x1479F58", Offset = "0x1479F58", VA = "0x1479F58")]
		public static extern void tolua_getvec4(IntPtr luaState, int stackPos, out float x, out float y, out float z, out float w);

		[PreserveSig]
		[Token(Token = "0x60024E5")]
		[Address(RVA = "0x147A018", Offset = "0x147A018", VA = "0x147A018")]
		public static extern void tolua_getclr(IntPtr luaState, int stackPos, out float r, out float g, out float b, out float a);

		[PreserveSig]
		[Token(Token = "0x60024E6")]
		[Address(RVA = "0x147A0D8", Offset = "0x147A0D8", VA = "0x147A0D8")]
		public static extern void tolua_getquat(IntPtr luaState, int stackPos, out float x, out float y, out float z, out float w);

		[PreserveSig]
		[Token(Token = "0x60024E7")]
		[Address(RVA = "0x147A198", Offset = "0x147A198", VA = "0x147A198")]
		public static extern int tolua_getlayermask(IntPtr luaState, int stackPos);

		[PreserveSig]
		[Token(Token = "0x60024E8")]
		[Address(RVA = "0x147A228", Offset = "0x147A228", VA = "0x147A228")]
		public static extern void tolua_pushvec2(IntPtr luaState, float x, float y);

		[PreserveSig]
		[Token(Token = "0x60024E9")]
		[Address(RVA = "0x147A2C0", Offset = "0x147A2C0", VA = "0x147A2C0")]
		public static extern void tolua_pushvec3(IntPtr luaState, float x, float y, float z);

		[PreserveSig]
		[Token(Token = "0x60024EA")]
		[Address(RVA = "0x147A368", Offset = "0x147A368", VA = "0x147A368")]
		public static extern void tolua_pushvec4(IntPtr luaState, float x, float y, float z, float w);

		[PreserveSig]
		[Token(Token = "0x60024EB")]
		[Address(RVA = "0x147A418", Offset = "0x147A418", VA = "0x147A418")]
		public static extern void tolua_pushquat(IntPtr luaState, float x, float y, float z, float w);

		[PreserveSig]
		[Token(Token = "0x60024EC")]
		[Address(RVA = "0x147A4C8", Offset = "0x147A4C8", VA = "0x147A4C8")]
		public static extern void tolua_pushclr(IntPtr luaState, float r, float g, float b, float a);

		[PreserveSig]
		[Token(Token = "0x60024ED")]
		[Address(RVA = "0x147A578", Offset = "0x147A578", VA = "0x147A578")]
		public static extern void tolua_pushlayermask(IntPtr luaState, int mask);

		[PreserveSig]
		[Token(Token = "0x60024EE")]
		[Address(RVA = "0x147A608", Offset = "0x147A608", VA = "0x147A608")]
		public static extern bool tolua_isint64(IntPtr luaState, int stackPos);

		[PreserveSig]
		[Token(Token = "0x60024EF")]
		[Address(RVA = "0x147A6A0", Offset = "0x147A6A0", VA = "0x147A6A0")]
		public static extern long tolua_toint64(IntPtr luaState, int stackPos);

		[Token(Token = "0x60024F0")]
		[Address(RVA = "0x147A730", Offset = "0x147A730", VA = "0x147A730")]
		public static long tolua_checkint64(IntPtr L, int stackPos)
		{
			return default(long);
		}

		[PreserveSig]
		[Token(Token = "0x60024F1")]
		[Address(RVA = "0x147A810", Offset = "0x147A810", VA = "0x147A810")]
		public static extern void tolua_pushint64(IntPtr luaState, long n);

		[PreserveSig]
		[Token(Token = "0x60024F2")]
		[Address(RVA = "0x147A8A0", Offset = "0x147A8A0", VA = "0x147A8A0")]
		public static extern bool tolua_isuint64(IntPtr luaState, int stackPos);

		[PreserveSig]
		[Token(Token = "0x60024F3")]
		[Address(RVA = "0x147A938", Offset = "0x147A938", VA = "0x147A938")]
		public static extern ulong tolua_touint64(IntPtr luaState, int stackPos);

		[Token(Token = "0x60024F4")]
		[Address(RVA = "0x147A9C8", Offset = "0x147A9C8", VA = "0x147A9C8")]
		public static ulong tolua_checkuint64(IntPtr L, int stackPos)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60024F5")]
		[Address(RVA = "0x147AAA8", Offset = "0x147AAA8", VA = "0x147AAA8")]
		public static extern void tolua_pushuint64(IntPtr luaState, ulong n);

		[PreserveSig]
		[Token(Token = "0x60024F6")]
		[Address(RVA = "0x147AB34", Offset = "0x147AB34", VA = "0x147AB34")]
		public static extern void tolua_setindex(IntPtr L);

		[PreserveSig]
		[Token(Token = "0x60024F7")]
		[Address(RVA = "0x147ABB4", Offset = "0x147ABB4", VA = "0x147ABB4")]
		public static extern void tolua_setnewindex(IntPtr L);

		[PreserveSig]
		[Token(Token = "0x60024F8")]
		[Address(RVA = "0x147AC34", Offset = "0x147AC34", VA = "0x147AC34")]
		public static extern int toluaL_ref(IntPtr L);

		[PreserveSig]
		[Token(Token = "0x60024F9")]
		[Address(RVA = "0x147ACB4", Offset = "0x147ACB4", VA = "0x147ACB4")]
		public static extern void toluaL_unref(IntPtr L, int reference);

		[PreserveSig]
		[Token(Token = "0x60024FA")]
		[Address(RVA = "0x147AD40", Offset = "0x147AD40", VA = "0x147AD40")]
		public static extern IntPtr tolua_getmainstate(IntPtr L);

		[PreserveSig]
		[Token(Token = "0x60024FB")]
		[Address(RVA = "0x147ADC0", Offset = "0x147ADC0", VA = "0x147ADC0")]
		public static extern int tolua_getvaluetype(IntPtr L, int stackPos);

		[PreserveSig]
		[Token(Token = "0x60024FC")]
		[Address(RVA = "0x147AE50", Offset = "0x147AE50", VA = "0x147AE50")]
		public static extern bool tolua_createtable(IntPtr L, string fullPath, int szhint = 0);

		[PreserveSig]
		[Token(Token = "0x60024FD")]
		[Address(RVA = "0x147AF08", Offset = "0x147AF08", VA = "0x147AF08")]
		public static extern bool tolua_pushluatable(IntPtr L, string fullPath);

		[PreserveSig]
		[Token(Token = "0x60024FE")]
		[Address(RVA = "0x147AFB8", Offset = "0x147AFB8", VA = "0x147AFB8")]
		public static extern bool tolua_beginmodule(IntPtr L, string name);

		[PreserveSig]
		[Token(Token = "0x60024FF")]
		[Address(RVA = "0x147B068", Offset = "0x147B068", VA = "0x147B068")]
		public static extern void tolua_endmodule(IntPtr L);

		[PreserveSig]
		[Token(Token = "0x6002500")]
		[Address(RVA = "0x147B0E8", Offset = "0x147B0E8", VA = "0x147B0E8")]
		public static extern bool tolua_beginpremodule(IntPtr L, string fullPath, int szhint = 0);

		[PreserveSig]
		[Token(Token = "0x6002501")]
		[Address(RVA = "0x147B19C", Offset = "0x147B19C", VA = "0x147B19C")]
		public static extern void tolua_endpremodule(IntPtr L, int reference);

		[PreserveSig]
		[Token(Token = "0x6002502")]
		[Address(RVA = "0x147B22C", Offset = "0x147B22C", VA = "0x147B22C")]
		public static extern bool tolua_addpreload(IntPtr L, string path);

		[PreserveSig]
		[Token(Token = "0x6002503")]
		[Address(RVA = "0x147B2D8", Offset = "0x147B2D8", VA = "0x147B2D8")]
		public static extern int tolua_beginclass(IntPtr L, string name, int baseMetaRef, int reference = -1);

		[PreserveSig]
		[Token(Token = "0x6002504")]
		[Address(RVA = "0x147B39C", Offset = "0x147B39C", VA = "0x147B39C")]
		public static extern void tolua_endclass(IntPtr L);

		[PreserveSig]
		[Token(Token = "0x6002505")]
		[Address(RVA = "0x147B41C", Offset = "0x147B41C", VA = "0x147B41C")]
		public static extern void tolua_function(IntPtr L, string name, IntPtr fn);

		[PreserveSig]
		[Token(Token = "0x6002506")]
		[Address(RVA = "0x147B4C8", Offset = "0x147B4C8", VA = "0x147B4C8")]
		public static extern IntPtr tolua_tocbuffer(string name, int sz);

		[PreserveSig]
		[Token(Token = "0x6002507")]
		[Address(RVA = "0x147B570", Offset = "0x147B570", VA = "0x147B570")]
		public static extern void tolua_freebuffer(IntPtr buffer);

		[PreserveSig]
		[Token(Token = "0x6002508")]
		[Address(RVA = "0x147B5F0", Offset = "0x147B5F0", VA = "0x147B5F0")]
		public static extern void tolua_variable(IntPtr L, string name, IntPtr get, IntPtr set);

		[PreserveSig]
		[Token(Token = "0x6002509")]
		[Address(RVA = "0x147B6AC", Offset = "0x147B6AC", VA = "0x147B6AC")]
		public static extern void tolua_constant(IntPtr L, string name, double val);

		[PreserveSig]
		[Token(Token = "0x600250A")]
		[Address(RVA = "0x147B760", Offset = "0x147B760", VA = "0x147B760")]
		public static extern int tolua_beginenum(IntPtr L, string name);

		[PreserveSig]
		[Token(Token = "0x600250B")]
		[Address(RVA = "0x147B80C", Offset = "0x147B80C", VA = "0x147B80C")]
		public static extern void tolua_endenum(IntPtr L);

		[PreserveSig]
		[Token(Token = "0x600250C")]
		[Address(RVA = "0x147B88C", Offset = "0x147B88C", VA = "0x147B88C")]
		public static extern void tolua_beginstaticclass(IntPtr L, string name);

		[PreserveSig]
		[Token(Token = "0x600250D")]
		[Address(RVA = "0x147B930", Offset = "0x147B930", VA = "0x147B930")]
		public static extern void tolua_endstaticclass(IntPtr L);

		[PreserveSig]
		[Token(Token = "0x600250E")]
		[Address(RVA = "0x147B9B0", Offset = "0x147B9B0", VA = "0x147B9B0")]
		public static extern int tolua_require(IntPtr L, string fileName);

		[PreserveSig]
		[Token(Token = "0x600250F")]
		[Address(RVA = "0x147BA5C", Offset = "0x147BA5C", VA = "0x147BA5C")]
		public static extern int tolua_getmetatableref(IntPtr L, int pos);

		[PreserveSig]
		[Token(Token = "0x6002510")]
		[Address(RVA = "0x147BAEC", Offset = "0x147BAEC", VA = "0x147BAEC")]
		public static extern void tolua_setflag(int bit, bool flag);

		[PreserveSig]
		[Token(Token = "0x6002511")]
		[Address(RVA = "0x147BB7C", Offset = "0x147BB7C", VA = "0x147BB7C")]
		public static extern bool tolua_isvptrtable(IntPtr L, int index);

		[Token(Token = "0x6002512")]
		[Address(RVA = "0x1471A58", Offset = "0x1471A58", VA = "0x1471A58")]
		public static int toluaL_exception(IntPtr L, Exception e)
		{
			return default(int);
		}

		[Token(Token = "0x6002513")]
		[Address(RVA = "0x147BCC0", Offset = "0x147BCC0", VA = "0x147BCC0")]
		public static int toluaL_exception(IntPtr L, Exception e, object o, string msg)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002514")]
		[Address(RVA = "0x14791E8", Offset = "0x14791E8", VA = "0x14791E8")]
		public static extern int tolua_loadbuffer(IntPtr luaState, byte[] buff, int size, string name);

		[PreserveSig]
		[Token(Token = "0x6002515")]
		[Address(RVA = "0x1474AC8", Offset = "0x1474AC8", VA = "0x1474AC8")]
		public static extern bool tolua_toboolean(IntPtr luaState, int index);

		[PreserveSig]
		[Token(Token = "0x6002516")]
		[Address(RVA = "0x14749C4", Offset = "0x14749C4", VA = "0x14749C4")]
		public static extern int tolua_tointeger(IntPtr luaState, int idx);

		[PreserveSig]
		[Token(Token = "0x6002517")]
		[Address(RVA = "0x1474BDC", Offset = "0x1474BDC", VA = "0x1474BDC")]
		public static extern IntPtr tolua_tolstring(IntPtr luaState, int index, out int strLen);

		[PreserveSig]
		[Token(Token = "0x6002518")]
		[Address(RVA = "0x1475430", Offset = "0x1475430", VA = "0x1475430")]
		public static extern void tolua_pushlstring(IntPtr luaState, byte[] str, int size);

		[PreserveSig]
		[Token(Token = "0x6002519")]
		[Address(RVA = "0x1474CE8", Offset = "0x1474CE8", VA = "0x1474CE8")]
		public static extern int tolua_objlen(IntPtr luaState, int stackPos);

		[PreserveSig]
		[Token(Token = "0x600251A")]
		[Address(RVA = "0x1475E28", Offset = "0x1475E28", VA = "0x1475E28")]
		public static extern IntPtr tolua_newuserdata(IntPtr luaState, int size);

		[PreserveSig]
		[Token(Token = "0x600251B")]
		[Address(RVA = "0x1478198", Offset = "0x1478198", VA = "0x1478198")]
		public static extern int tolua_argerror(IntPtr luaState, int narg, string extramsg);

		[PreserveSig]
		[Token(Token = "0x600251C")]
		[Address(RVA = "0x147BC14", Offset = "0x147BC14", VA = "0x147BC14")]
		public static extern int tolua_error(IntPtr L, string msg);

		[PreserveSig]
		[Token(Token = "0x600251D")]
		[Address(RVA = "0x1475B40", Offset = "0x1475B40", VA = "0x1475B40")]
		public static extern int tolua_getfield(IntPtr L, int idx, string key);

		[PreserveSig]
		[Token(Token = "0x600251E")]
		[Address(RVA = "0x1476230", Offset = "0x1476230", VA = "0x1476230")]
		public static extern int tolua_setfield(IntPtr L, int idx, string key);

		[PreserveSig]
		[Token(Token = "0x600251F")]
		[Address(RVA = "0x1475904", Offset = "0x1475904", VA = "0x1475904")]
		public static extern int tolua_gettable(IntPtr luaState, int idx);

		[PreserveSig]
		[Token(Token = "0x6002520")]
		[Address(RVA = "0x14760B8", Offset = "0x14760B8", VA = "0x14760B8")]
		public static extern int tolua_settable(IntPtr luaState, int idx);

		[PreserveSig]
		[Token(Token = "0x6002521")]
		[Address(RVA = "0x1477E1C", Offset = "0x1477E1C", VA = "0x1477E1C")]
		public static extern int tolua_getn(IntPtr luaState, int stackPos);

		[PreserveSig]
		[Token(Token = "0x6002522")]
		[Address(RVA = "0x147BDC4", Offset = "0x147BDC4", VA = "0x147BDC4")]
		public static extern int tolua_strlen(IntPtr str);

		[PreserveSig]
		[Token(Token = "0x6002523")]
		[Address(RVA = "0x147BE44", Offset = "0x147BE44", VA = "0x147BE44")]
		public static extern void tolua_pushcfunction(IntPtr L, IntPtr fn);

		[Token(Token = "0x6002524")]
		[Address(RVA = "0x147BED4", Offset = "0x147BED4", VA = "0x147BED4")]
		public static void tolua_pushcfunction(IntPtr luaState, LuaCSFunction func)
		{
		}

		[Token(Token = "0x6002525")]
		[Address(RVA = "0x147BF84", Offset = "0x147BF84", VA = "0x147BF84")]
		public static string tolua_findtable(IntPtr L, int idx, string name, int size = 1)
		{
			return null;
		}

		[Token(Token = "0x6002526")]
		[Address(RVA = "0x147C080", Offset = "0x147C080", VA = "0x147C080")]
		public static IntPtr tolua_atpanic(IntPtr L, LuaCSFunction func)
		{
			return default(IntPtr);
		}

		[PreserveSig]
		[Token(Token = "0x6002527")]
		[Address(RVA = "0x147C130", Offset = "0x147C130", VA = "0x147C130")]
		public static extern IntPtr tolua_buffinit(IntPtr luaState);

		[PreserveSig]
		[Token(Token = "0x6002528")]
		[Address(RVA = "0x147C1B0", Offset = "0x147C1B0", VA = "0x147C1B0")]
		public static extern void tolua_addlstring(IntPtr b, string str, int l);

		[PreserveSig]
		[Token(Token = "0x6002529")]
		[Address(RVA = "0x147C25C", Offset = "0x147C25C", VA = "0x147C25C")]
		public static extern void tolua_addstring(IntPtr b, string s);

		[PreserveSig]
		[Token(Token = "0x600252A")]
		[Address(RVA = "0x147C300", Offset = "0x147C300", VA = "0x147C300")]
		public static extern void tolua_addchar(IntPtr b, byte s);

		[PreserveSig]
		[Token(Token = "0x600252B")]
		[Address(RVA = "0x147C390", Offset = "0x147C390", VA = "0x147C390")]
		public static extern void tolua_pushresult(IntPtr b);

		[PreserveSig]
		[Token(Token = "0x600252C")]
		[Address(RVA = "0x147C410", Offset = "0x147C410", VA = "0x147C410")]
		public static extern int tolua_update(IntPtr L, float deltaTime, float unscaledDelta);

		[PreserveSig]
		[Token(Token = "0x600252D")]
		[Address(RVA = "0x147C4A8", Offset = "0x147C4A8", VA = "0x147C4A8")]
		public static extern int tolua_lateupdate(IntPtr L);

		[PreserveSig]
		[Token(Token = "0x600252E")]
		[Address(RVA = "0x147C528", Offset = "0x147C528", VA = "0x147C528")]
		public static extern int tolua_fixedupdate(IntPtr L, float fixedTime);

		[PreserveSig]
		[Token(Token = "0x600252F")]
		[Address(RVA = "0x147C5B8", Offset = "0x147C5B8", VA = "0x147C5B8")]
		public static extern void tolua_regthis(IntPtr L, IntPtr get, IntPtr set);

		[PreserveSig]
		[Token(Token = "0x6002530")]
		[Address(RVA = "0x147C650", Offset = "0x147C650", VA = "0x147C650")]
		public static extern int tolua_where(IntPtr L, int level);

		[Token(Token = "0x6002531")]
		[Address(RVA = "0x147C6E0", Offset = "0x147C6E0", VA = "0x147C6E0")]
		public static void tolua_bindthis(IntPtr L, LuaCSFunction get, LuaCSFunction set)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6002532")]
		[Address(RVA = "0x147C7D4", Offset = "0x147C7D4", VA = "0x147C7D4")]
		public static extern int tolua_getclassref(IntPtr L, int pos);

		[Token(Token = "0x6002533")]
		[Address(RVA = "0x147C864", Offset = "0x147C864", VA = "0x147C864")]
		public LuaDLL()
		{
		}
	}
	[Token(Token = "0x200029F")]
	public class LuaEvent : IDisposable
	{
		[Token(Token = "0x4000C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected LuaState luaState;

		[Token(Token = "0x4000C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool beDisposed;

		[Token(Token = "0x4000C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LuaTable self;

		[Token(Token = "0x4000C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private LuaFunction _add;

		[Token(Token = "0x4000C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private LuaFunction _remove;

		[Token(Token = "0x6002535")]
		[Address(RVA = "0x147D398", Offset = "0x147D398", VA = "0x147D398")]
		public LuaEvent(LuaTable table)
		{
		}

		[Token(Token = "0x6002536")]
		[Address(RVA = "0x147D454", Offset = "0x147D454", VA = "0x147D454", Slot = "4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6002537")]
		[Address(RVA = "0x147D4C0", Offset = "0x147D4C0", VA = "0x147D4C0")]
		private void Clear()
		{
		}

		[Token(Token = "0x6002538")]
		[Address(RVA = "0x147D4D0", Offset = "0x147D4D0", VA = "0x147D4D0")]
		public void Dispose(bool disposeManagedResources)
		{
		}

		[Token(Token = "0x6002539")]
		[Address(RVA = "0x147D590", Offset = "0x147D590", VA = "0x147D590")]
		public void Add(LuaFunction func, LuaTable obj)
		{
		}

		[Token(Token = "0x600253A")]
		[Address(RVA = "0x147D638", Offset = "0x147D638", VA = "0x147D638")]
		public void Remove(LuaFunction func, LuaTable obj)
		{
		}
	}
	[Token(Token = "0x20002A0")]
	public class LuaException : Exception
	{
		[Token(Token = "0x4000C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Exception luaStack;

		[Token(Token = "0x4000C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string projectFolder;

		[Token(Token = "0x4000C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static int InstantiateCount;

		[Token(Token = "0x4000C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static int SendMsgCount;

		[Token(Token = "0x4000C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static IntPtr L;

		[Token(Token = "0x4000C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected string _stack;

		[Token(Token = "0x17000165")]
		public override string StackTrace
		{
			[Token(Token = "0x600253B")]
			[Address(RVA = "0x147D6E0", Offset = "0x147D6E0", VA = "0x147D6E0", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600253C")]
		[Address(RVA = "0x14751FC", Offset = "0x14751FC", VA = "0x14751FC")]
		public LuaException(string msg, [Optional] Exception e, int skip = 1)
		{
		}

		[Token(Token = "0x600253D")]
		[Address(RVA = "0x147DD3C", Offset = "0x147DD3C", VA = "0x147DD3C")]
		public static Exception GetLastError()
		{
			return null;
		}

		[Token(Token = "0x600253E")]
		[Address(RVA = "0x147D6E8", Offset = "0x147D6E8", VA = "0x147D6E8")]
		public static void ExtractFormattedStackTrace(StackTrace trace, StringBuilder sb, [Optional] StackTrace skip)
		{
		}

		[Token(Token = "0x600253F")]
		[Address(RVA = "0x147DDA8", Offset = "0x147DDA8", VA = "0x147DDA8")]
		public static void Init(IntPtr L0)
		{
		}
	}
	[Token(Token = "0x20002A1")]
	public class LuaFileUtils
	{
		[Token(Token = "0x4000C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool beZip;

		[Token(Token = "0x4000C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected List<string> searchPaths;

		[Token(Token = "0x4000C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Dictionary<string, AssetBundle> zipMap;

		[Token(Token = "0x4000C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static LuaFileUtils instance;

		[Token(Token = "0x17000166")]
		public static LuaFileUtils Instance
		{
			[Token(Token = "0x6002541")]
			[Address(RVA = "0x146F9E8", Offset = "0x146F9E8", VA = "0x146F9E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002542")]
			[Address(RVA = "0x147E844", Offset = "0x147E844", VA = "0x147E844")]
			protected set
			{
			}
		}

		[Token(Token = "0x6002543")]
		[Address(RVA = "0x147E77C", Offset = "0x147E77C", VA = "0x147E77C")]
		public LuaFileUtils()
		{
		}

		[Token(Token = "0x6002544")]
		[Address(RVA = "0x147E8B0", Offset = "0x147E8B0", VA = "0x147E8B0", Slot = "4")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x6002545")]
		[Address(RVA = "0x147EA34", Offset = "0x147EA34", VA = "0x147EA34")]
		public bool AddSearchPath(string path, bool front = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6002546")]
		[Address(RVA = "0x147EAF0", Offset = "0x147EAF0", VA = "0x147EAF0")]
		public bool RemoveSearchPath(string path)
		{
			return default(bool);
		}

		[Token(Token = "0x6002547")]
		[Address(RVA = "0x147EB88", Offset = "0x147EB88", VA = "0x147EB88")]
		public void AddSearchBundle(string name, AssetBundle bundle)
		{
		}

		[Token(Token = "0x6002548")]
		[Address(RVA = "0x147EBF8", Offset = "0x147EBF8", VA = "0x147EBF8")]
		public string FindFile(string fileName)
		{
			return null;
		}

		[Token(Token = "0x6002549")]
		[Address(RVA = "0x147ED94", Offset = "0x147ED94", VA = "0x147ED94", Slot = "5")]
		public virtual byte[] ReadFile(string fileName)
		{
			return null;
		}

		[Token(Token = "0x600254A")]
		[Address(RVA = "0x147EDF8", Offset = "0x147EDF8", VA = "0x147EDF8", Slot = "6")]
		public virtual string FindFileError(string fileName)
		{
			return null;
		}

		[Token(Token = "0x600254B")]
		[Address(RVA = "0x147F274", Offset = "0x147F274", VA = "0x147F274")]
		private byte[] ReadZipFile(string fileName)
		{
			return null;
		}

		[Token(Token = "0x600254C")]
		[Address(RVA = "0x147F5FC", Offset = "0x147F5FC", VA = "0x147F5FC")]
		public static string GetOSDir()
		{
			return null;
		}
	}
	[Token(Token = "0x20002A2")]
	public class LuaFunction : LuaBaseRef
	{
		[Token(Token = "0x2000461")]
		protected struct FuncData
		{
			[Token(Token = "0x4001141")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int oldTop;

			[Token(Token = "0x4001142")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int stackPos;

			[Token(Token = "0x6002EBB")]
			[Address(RVA = "0x147F800", Offset = "0x147F800", VA = "0x147F800")]
			public FuncData(int top, int stack)
			{
			}
		}

		[Token(Token = "0x4000C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected int oldTop;

		[Token(Token = "0x4000C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int argCount;

		[Token(Token = "0x4000C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int stackPos;

		[Token(Token = "0x4000C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Stack<FuncData> stack;

		[Token(Token = "0x600254E")]
		[Address(RVA = "0x147F668", Offset = "0x147F668", VA = "0x147F668")]
		public LuaFunction(int reference, LuaState state)
		{
		}

		[Token(Token = "0x600254F")]
		[Address(RVA = "0x147F6FC", Offset = "0x147F6FC", VA = "0x147F6FC", Slot = "5")]
		public override void Dispose()
		{
		}

		[Token(Token = "0x6002550")]
		public T ToDelegate<T>() where T : class
		{
			return null;
		}

		[Token(Token = "0x6002551")]
		[Address(RVA = "0x147F700", Offset = "0x147F700", VA = "0x147F700", Slot = "8")]
		public virtual int BeginPCall()
		{
			return default(int);
		}

		[Token(Token = "0x6002552")]
		[Address(RVA = "0x14708A0", Offset = "0x14708A0", VA = "0x14708A0")]
		public void PCall()
		{
		}

		[Token(Token = "0x6002553")]
		[Address(RVA = "0x14709B8", Offset = "0x14709B8", VA = "0x14709B8")]
		public void EndPCall()
		{
		}

		[Token(Token = "0x6002554")]
		[Address(RVA = "0x146F7E4", Offset = "0x146F7E4", VA = "0x146F7E4")]
		public void Call()
		{
		}

		[Token(Token = "0x6002555")]
		public void Call<T1>(T1 arg1)
		{
		}

		[Token(Token = "0x6002556")]
		public void Call<T1, T2>(T1 arg1, T2 arg2)
		{
		}

		[Token(Token = "0x6002557")]
		public void Call<T1, T2, T3>(T1 arg1, T2 arg2, T3 arg3)
		{
		}

		[Token(Token = "0x6002558")]
		public void Call<T1, T2, T3, T4>(T1 arg1, T2 arg2, T3 arg3, T4 arg4)
		{
		}

		[Token(Token = "0x6002559")]
		public void Call<T1, T2, T3, T4, T5>(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5)
		{
		}

		[Token(Token = "0x600255A")]
		public void Call<T1, T2, T3, T4, T5, T6>(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6)
		{
		}

		[Token(Token = "0x600255B")]
		public void Call<T1, T2, T3, T4, T5, T6, T7>(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7)
		{
		}

		[Token(Token = "0x600255C")]
		public void Call<T1, T2, T3, T4, T5, T6, T7, T8>(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8)
		{
		}

		[Token(Token = "0x600255D")]
		public void Call<T1, T2, T3, T4, T5, T6, T7, T8, T9>(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9)
		{
		}

		[Token(Token = "0x600255E")]
		public R1 Invoke<R1>()
		{
			return (R1)null;
		}

		[Token(Token = "0x600255F")]
		public R1 Invoke<T1, R1>(T1 arg1)
		{
			return (R1)null;
		}

		[Token(Token = "0x6002560")]
		public R1 Invoke<T1, T2, R1>(T1 arg1, T2 arg2)
		{
			return (R1)null;
		}

		[Token(Token = "0x6002561")]
		public R1 Invoke<T1, T2, T3, R1>(T1 arg1, T2 arg2, T3 arg3)
		{
			return (R1)null;
		}

		[Token(Token = "0x6002562")]
		public R1 Invoke<T1, T2, T3, T4, R1>(T1 arg1, T2 arg2, T3 arg3, T4 arg4)
		{
			return (R1)null;
		}

		[Token(Token = "0x6002563")]
		public R1 Invoke<T1, T2, T3, T4, T5, R1>(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5)
		{
			return (R1)null;
		}

		[Token(Token = "0x6002564")]
		public R1 Invoke<T1, T2, T3, T4, T5, T6, R1>(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6)
		{
			return (R1)null;
		}

		[Token(Token = "0x6002565")]
		public R1 Invoke<T1, T2, T3, T4, T5, T6, T7, R1>(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7)
		{
			return (R1)null;
		}

		[Token(Token = "0x6002566")]
		public R1 Invoke<T1, T2, T3, T4, T5, T6, T7, T8, R1>(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8)
		{
			return (R1)null;
		}

		[Token(Token = "0x6002567")]
		public R1 Invoke<T1, T2, T3, T4, T5, T6, T7, T8, T9, R1>(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9)
		{
			return (R1)null;
		}

		[Token(Token = "0x6002568")]
		[Address(RVA = "0x147F808", Offset = "0x147F808", VA = "0x147F808")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9A81E8", Offset = "0x9A81E8")]
		public object[] LazyCall(params object[] args)
		{
			return null;
		}

		[Token(Token = "0x6002569")]
		[Address(RVA = "0x147F948", Offset = "0x147F948", VA = "0x147F948")]
		public void CheckStack(int args)
		{
		}

		[Token(Token = "0x600256A")]
		[Address(RVA = "0x147F968", Offset = "0x147F968", VA = "0x147F968")]
		public bool IsBegin()
		{
			return default(bool);
		}

		[Token(Token = "0x600256B")]
		[Address(RVA = "0x147F978", Offset = "0x147F978", VA = "0x147F978")]
		public void Push(double num)
		{
		}

		[Token(Token = "0x600256C")]
		[Address(RVA = "0x1470864", Offset = "0x1470864", VA = "0x1470864")]
		public void Push(int n)
		{
		}

		[Token(Token = "0x600256D")]
		[Address(RVA = "0x147F9B4", Offset = "0x147F9B4", VA = "0x147F9B4")]
		public void PushLayerMask(LayerMask n)
		{
		}

		[Token(Token = "0x600256E")]
		[Address(RVA = "0x147F9F4", Offset = "0x147F9F4", VA = "0x147F9F4")]
		public void Push(uint un)
		{
		}

		[Token(Token = "0x600256F")]
		[Address(RVA = "0x147FA30", Offset = "0x147FA30", VA = "0x147FA30")]
		public void Push(long num)
		{
		}

		[Token(Token = "0x6002570")]
		[Address(RVA = "0x147FA6C", Offset = "0x147FA6C", VA = "0x147FA6C")]
		public void Push(ulong un)
		{
		}

		[Token(Token = "0x6002571")]
		[Address(RVA = "0x147FAA8", Offset = "0x147FAA8", VA = "0x147FAA8")]
		public void Push(bool b)
		{
		}

		[Token(Token = "0x6002572")]
		[Address(RVA = "0x147FAE8", Offset = "0x147FAE8", VA = "0x147FAE8")]
		public void Push(string str)
		{
		}

		[Token(Token = "0x6002573")]
		[Address(RVA = "0x147FB24", Offset = "0x147FB24", VA = "0x147FB24")]
		public void Push(IntPtr ptr)
		{
		}

		[Token(Token = "0x6002574")]
		[Address(RVA = "0x1473090", Offset = "0x1473090", VA = "0x1473090")]
		public void Push(LuaBaseRef lbr)
		{
		}

		[Token(Token = "0x6002575")]
		[Address(RVA = "0x147FB60", Offset = "0x147FB60", VA = "0x147FB60")]
		public void Push(object o)
		{
		}

		[Token(Token = "0x6002576")]
		[Address(RVA = "0x147FB9C", Offset = "0x147FB9C", VA = "0x147FB9C")]
		public void Push(UnityEngine.Object o)
		{
		}

		[Token(Token = "0x6002577")]
		[Address(RVA = "0x147FBD8", Offset = "0x147FBD8", VA = "0x147FBD8")]
		public void Push(Type t)
		{
		}

		[Token(Token = "0x6002578")]
		[Address(RVA = "0x147FC14", Offset = "0x147FC14", VA = "0x147FC14")]
		public void Push(Enum e)
		{
		}

		[Token(Token = "0x6002579")]
		[Address(RVA = "0x147FC50", Offset = "0x147FC50", VA = "0x147FC50")]
		public void Push(Array array)
		{
		}

		[Token(Token = "0x600257A")]
		[Address(RVA = "0x147FC8C", Offset = "0x147FC8C", VA = "0x147FC8C")]
		public void Push(Vector3 v3)
		{
		}

		[Token(Token = "0x600257B")]
		[Address(RVA = "0x147FCC8", Offset = "0x147FCC8", VA = "0x147FCC8")]
		public void Push(Vector2 v2)
		{
		}

		[Token(Token = "0x600257C")]
		[Address(RVA = "0x147FD04", Offset = "0x147FD04", VA = "0x147FD04")]
		public void Push(Vector4 v4)
		{
		}

		[Token(Token = "0x600257D")]
		[Address(RVA = "0x147FD40", Offset = "0x147FD40", VA = "0x147FD40")]
		public void Push(Quaternion quat)
		{
		}

		[Token(Token = "0x600257E")]
		[Address(RVA = "0x147FD7C", Offset = "0x147FD7C", VA = "0x147FD7C")]
		public void Push(Color clr)
		{
		}

		[Token(Token = "0x600257F")]
		[Address(RVA = "0x147FDB8", Offset = "0x147FDB8", VA = "0x147FDB8")]
		public void Push(Ray ray)
		{
		}

		[Token(Token = "0x6002580")]
		[Address(RVA = "0x147FED8", Offset = "0x147FED8", VA = "0x147FED8")]
		public void Push(Bounds bounds)
		{
		}

		[Token(Token = "0x6002581")]
		[Address(RVA = "0x147FFF8", Offset = "0x147FFF8", VA = "0x147FFF8")]
		public void Push(RaycastHit hit)
		{
		}

		[Token(Token = "0x6002582")]
		[Address(RVA = "0x1480118", Offset = "0x1480118", VA = "0x1480118")]
		public void Push(Touch t)
		{
		}

		[Token(Token = "0x6002583")]
		[Address(RVA = "0x148023C", Offset = "0x148023C", VA = "0x148023C")]
		public void Push(LuaByteBuffer buffer)
		{
		}

		[Token(Token = "0x6002584")]
		public void PushValue<T>(T value) where T : struct
		{
		}

		[Token(Token = "0x6002585")]
		[Address(RVA = "0x148033C", Offset = "0x148033C", VA = "0x148033C")]
		public void PushObject(object o)
		{
		}

		[Token(Token = "0x6002586")]
		public void PushSealed<T>(T o)
		{
		}

		[Token(Token = "0x6002587")]
		public void PushGeneric<T>(T t)
		{
		}

		[Token(Token = "0x6002588")]
		[Address(RVA = "0x147F910", Offset = "0x147F910", VA = "0x147F910")]
		public void PushArgs(object[] args)
		{
		}

		[Token(Token = "0x6002589")]
		[Address(RVA = "0x1480434", Offset = "0x1480434", VA = "0x1480434")]
		public void PushByteBuffer(byte[] buffer, int len = -1)
		{
		}

		[Token(Token = "0x600258A")]
		[Address(RVA = "0x148054C", Offset = "0x148054C", VA = "0x148054C")]
		public double CheckNumber()
		{
			return default(double);
		}

		[Token(Token = "0x600258B")]
		[Address(RVA = "0x1480640", Offset = "0x1480640", VA = "0x1480640")]
		public bool CheckBoolean()
		{
			return default(bool);
		}

		[Token(Token = "0x600258C")]
		[Address(RVA = "0x1480738", Offset = "0x1480738", VA = "0x1480738")]
		public string CheckString()
		{
			return null;
		}

		[Token(Token = "0x600258D")]
		[Address(RVA = "0x148082C", Offset = "0x148082C", VA = "0x148082C")]
		public Vector3 CheckVector3()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600258E")]
		[Address(RVA = "0x1480920", Offset = "0x1480920", VA = "0x1480920")]
		public Quaternion CheckQuaternion()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600258F")]
		[Address(RVA = "0x1480A14", Offset = "0x1480A14", VA = "0x1480A14")]
		public Vector2 CheckVector2()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002590")]
		[Address(RVA = "0x1480B08", Offset = "0x1480B08", VA = "0x1480B08")]
		public Vector4 CheckVector4()
		{
			return default(Vector4);
		}

		[Token(Token = "0x6002591")]
		[Address(RVA = "0x1480BFC", Offset = "0x1480BFC", VA = "0x1480BFC")]
		public Color CheckColor()
		{
			return default(Color);
		}

		[Token(Token = "0x6002592")]
		[Address(RVA = "0x1480CF0", Offset = "0x1480CF0", VA = "0x1480CF0")]
		public Ray CheckRay()
		{
			return default(Ray);
		}

		[Token(Token = "0x6002593")]
		[Address(RVA = "0x1480E18", Offset = "0x1480E18", VA = "0x1480E18")]
		public Bounds CheckBounds()
		{
			return default(Bounds);
		}

		[Token(Token = "0x6002594")]
		[Address(RVA = "0x1480F40", Offset = "0x1480F40", VA = "0x1480F40")]
		public LayerMask CheckLayerMask()
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6002595")]
		[Address(RVA = "0x1481038", Offset = "0x1481038", VA = "0x1481038")]
		public long CheckLong()
		{
			return default(long);
		}

		[Token(Token = "0x6002596")]
		[Address(RVA = "0x148112C", Offset = "0x148112C", VA = "0x148112C")]
		public ulong CheckULong()
		{
			return default(ulong);
		}

		[Token(Token = "0x6002597")]
		[Address(RVA = "0x1481220", Offset = "0x1481220", VA = "0x1481220")]
		public Delegate CheckDelegate()
		{
			return null;
		}

		[Token(Token = "0x6002598")]
		[Address(RVA = "0x1481314", Offset = "0x1481314", VA = "0x1481314")]
		public object CheckVariant()
		{
			return null;
		}

		[Token(Token = "0x6002599")]
		[Address(RVA = "0x1481340", Offset = "0x1481340", VA = "0x1481340")]
		public char[] CheckCharBuffer()
		{
			return null;
		}

		[Token(Token = "0x600259A")]
		[Address(RVA = "0x1481434", Offset = "0x1481434", VA = "0x1481434")]
		public byte[] CheckByteBuffer()
		{
			return null;
		}

		[Token(Token = "0x600259B")]
		[Address(RVA = "0x1481528", Offset = "0x1481528", VA = "0x1481528")]
		public object CheckObject(Type t)
		{
			return null;
		}

		[Token(Token = "0x600259C")]
		[Address(RVA = "0x1481624", Offset = "0x1481624", VA = "0x1481624")]
		public LuaFunction CheckLuaFunction()
		{
			return null;
		}

		[Token(Token = "0x600259D")]
		[Address(RVA = "0x1481718", Offset = "0x1481718", VA = "0x1481718")]
		public LuaTable CheckLuaTable()
		{
			return null;
		}

		[Token(Token = "0x600259E")]
		[Address(RVA = "0x148180C", Offset = "0x148180C", VA = "0x148180C")]
		public LuaThread CheckLuaThread()
		{
			return null;
		}

		[Token(Token = "0x600259F")]
		public T CheckValue<T>()
		{
			return (T)null;
		}
	}
	[Token(Token = "0x20002A3")]
	public class LuaMatchType
	{
		[Token(Token = "0x4000C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Type monoType;

		[Token(Token = "0x60025A0")]
		[Address(RVA = "0x14820D0", Offset = "0x14820D0", VA = "0x14820D0")]
		public bool CheckNumber(IntPtr L, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60025A1")]
		[Address(RVA = "0x1482150", Offset = "0x1482150", VA = "0x1482150")]
		public bool CheckBool(IntPtr L, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60025A2")]
		[Address(RVA = "0x14821D0", Offset = "0x14821D0", VA = "0x14821D0")]
		public bool CheckLong(IntPtr L, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60025A3")]
		[Address(RVA = "0x1482294", Offset = "0x1482294", VA = "0x1482294")]
		public bool CheckULong(IntPtr L, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60025A4")]
		[Address(RVA = "0x1482380", Offset = "0x1482380", VA = "0x1482380")]
		public bool CheckNullNumber(IntPtr L, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60025A5")]
		[Address(RVA = "0x148240C", Offset = "0x148240C", VA = "0x148240C")]
		public bool CheckNullBool(IntPtr L, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60025A6")]
		[Address(RVA = "0x148248C", Offset = "0x148248C", VA = "0x148248C")]
		public bool CheckNullLong(IntPtr L, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60025A7")]
		[Address(RVA = "0x1482554", Offset = "0x1482554", VA = "0x1482554")]
		public bool CheckNullULong(IntPtr L, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60025A8")]
		[Address(RVA = "0x148261C", Offset = "0x148261C", VA = "0x148261C")]
		public bool CheckString(IntPtr L, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60025A9")]
		[Address(RVA = "0x1482868", Offset = "0x1482868", VA = "0x1482868")]
		public bool CheckByteArray(IntPtr L, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60025AA")]
		[Address(RVA = "0x1482954", Offset = "0x1482954", VA = "0x1482954")]
		public bool CheckCharArray(IntPtr L, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60025AB")]
		[Address(RVA = "0x1482A40", Offset = "0x1482A40", VA = "0x1482A40")]
		public bool CheckArray(Type t, IntPtr L, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60025AC")]
		[Address(RVA = "0x1482AF8", Offset = "0x1482AF8", VA = "0x1482AF8")]
		public bool CheckBoolArray(IntPtr L, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60025AD")]
		[Address(RVA = "0x1482B88", Offset = "0x1482B88", VA = "0x1482B88")]
		public bool CheckSByteArray(IntPtr L, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60025AE")]
		[Address(RVA = "0x1482C18", Offset = "0x1482C18", VA = "0x1482C18")]
		public bool CheckInt16Array(IntPtr L, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60025AF")]
		[Address(RVA = "0x1482CA8", Offset = "0x1482CA8", VA = "0x1482CA8")]
		public bool CheckUInt16Array(IntPtr L, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60025B0")]
		[Address(RVA = "0x1482D38", Offset = "0x1482D38", VA = "0x1482D38")]
		public bool CheckDecimalArray(IntPtr L, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60025B1")]
		[Address(RVA = "0x1482DC8", Offset = "0x1482DC8", VA = "0x1482DC8")]
		public bool CheckSingleArray(IntPtr L, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60025B2")]
		[Address(RVA = "0x1482E58", Offset = "0x1482E58", VA = "0x1482E58")]
		public bool CheckDoubleArray(IntPtr L, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60025B3")]
		[Address(RVA = "0x1482EE8", Offset = "0x1482EE8", VA = "0x1482EE8")]
		public bool CheckInt32Array(IntPtr L, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60025B4")]
		[Address(RVA = "0x1482F78", Offset = "0x1482F78", VA = "0x1482F78")]
		public bool CheckUInt32Array(IntPtr L, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60025B5")]
		[Address(RVA = "0x1483008", Offset = "0x1483008", VA = "0x1483008")]
		public bool CheckInt64Array(IntPtr L, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60025B6")]
		[Address(RVA = "0x1483098", Offset = "0x1483098", VA = "0x1483098")]
		public bool CheckUInt64Array(IntPtr L, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60025B7")]
		[Address(RVA = "0x1483128", Offset = "0x1483128", VA = "0x1483128")]
		public bool CheckStringArray(IntPtr L, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60025B8")]
		[Address(RVA = "0x14831B8", Offset = "0x14831B8", VA = "0x14831B8")]
		public bool CheckTypeArray(IntPtr L, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60025B9")]
		[Address(RVA = "0x1483248", Offset = "0x1483248", VA = "0x1483248")]
		public bool CheckObjectArray(IntPtr L, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60025BA")]
		[Address(RVA = "0x14832D8", Offset = "0x14832D8", VA = "0x14832D8")]
		private bool CheckValueType(IntPtr L, int pos, int valueType, Type nt)
		{
			return default(bool);
		}

		[Token(Token = "0x60025BB")]
		[Address(RVA = "0x1483390", Offset = "0x1483390", VA = "0x1483390")]
		public bool CheckVec3(IntPtr L, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60025BC")]
		[Address(RVA = "0x1483444", Offset = "0x1483444", VA = "0x1483444")]
		public bool CheckQuat(IntPtr L, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60025BD")]
		[Address(RVA = "0x14834F8", Offset = "0x14834F8", VA = "0x14834F8")]
		public bool CheckVec2(IntPtr L, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60025BE")]
		[Address(RVA = "0x14835AC", Offset = "0x14835AC", VA = "0x14835AC")]
		public bool CheckColor(IntPtr L, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60025BF")]
		[Address(RVA = "0x1483660", Offset = "0x1483660", VA = "0x1483660")]
		public bool CheckVec4(IntPtr L, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60025C0")]
		[Address(RVA = "0x1483714", Offset = "0x1483714", VA = "0x1483714")]
		public bool CheckRay(IntPtr L, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60025C1")]
		[Address(RVA = "0x14837C8", Offset = "0x14837C8", VA = "0x14837C8")]
		public bool CheckBounds(IntPtr L, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60025C2")]
		[Address(RVA = "0x148387C", Offset = "0x148387C", VA = "0x148387C")]
		public bool CheckTouch(IntPtr L, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60025C3")]
		[Address(RVA = "0x1483930", Offset = "0x1483930", VA = "0x1483930")]
		public bool CheckLayerMask(IntPtr L, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60025C4")]
		[Address(RVA = "0x14839E4", Offset = "0x14839E4", VA = "0x14839E4")]
		public bool CheckRaycastHit(IntPtr L, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60025C5")]
		[Address(RVA = "0x1483A98", Offset = "0x1483A98", VA = "0x1483A98")]
		public bool CheckNullVec3(IntPtr L, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60025C6")]
		[Address(RVA = "0x1483B58", Offset = "0x1483B58", VA = "0x1483B58")]
		public bool CheckNullQuat(IntPtr L, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60025C7")]
		[Address(RVA = "0x1483C18", Offset = "0x1483C18", VA = "0x1483C18")]
		public bool CheckNullVec2(IntPtr L, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60025C8")]
		[Address(RVA = "0x1483CD8", Offset = "0x1483CD8", VA = "0x1483CD8")]
		public bool CheckNullColor(IntPtr L, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60025C9")]
		[Address(RVA = "0x1483D98", Offset = "0x1483D98", VA = "0x1483D98")]
		public bool CheckNullVec4(IntPtr L, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60025CA")]
		[Address(RVA = "0x1483E58", Offset = "0x1483E58", VA = "0x1483E58")]
		public bool CheckNullRay(IntPtr L, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60025CB")]
		[Address(RVA = "0x1483F18", Offset = "0x1483F18", VA = "0x1483F18")]
		public bool CheckNullBounds(IntPtr L, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60025CC")]
		[Address(RVA = "0x1483FD8", Offset = "0x1483FD8", VA = "0x1483FD8")]
		public bool CheckNullTouch(IntPtr L, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60025CD")]
		[Address(RVA = "0x1484098", Offset = "0x1484098", VA = "0x1484098")]
		public bool CheckNullLayerMask(IntPtr L, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60025CE")]
		[Address(RVA = "0x1484158", Offset = "0x1484158", VA = "0x1484158")]
		public bool CheckNullRaycastHit(IntPtr L, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60025CF")]
		[Address(RVA = "0x1484218", Offset = "0x1484218", VA = "0x1484218")]
		public bool CheckVec3Array(IntPtr L, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60025D0")]
		[Address(RVA = "0x14842A8", Offset = "0x14842A8", VA = "0x14842A8")]
		public bool CheckQuatArray(IntPtr L, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60025D1")]
		[Address(RVA = "0x1484338", Offset = "0x1484338", VA = "0x1484338")]
		public bool CheckVec2Array(IntPtr L, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60025D2")]
		[Address(RVA = "0x14843C8", Offset = "0x14843C8", VA = "0x14843C8")]
		public bool CheckVec4Array(IntPtr L, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60025D3")]
		[Address(RVA = "0x1484458", Offset = "0x1484458", VA = "0x1484458")]
		public bool CheckColorArray(IntPtr L, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60025D4")]
		[Address(RVA = "0x14844E8", Offset = "0x14844E8", VA = "0x14844E8")]
		public bool CheckPtr(IntPtr L, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60025D5")]
		[Address(RVA = "0x148456C", Offset = "0x148456C", VA = "0x148456C")]
		public bool CheckLuaFunc(IntPtr L, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60025D6")]
		[Address(RVA = "0x14845F8", Offset = "0x14845F8", VA = "0x14845F8")]
		public bool CheckLuaTable(IntPtr L, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60025D7")]
		[Address(RVA = "0x1484684", Offset = "0x1484684", VA = "0x1484684")]
		public bool CheckLuaThread(IntPtr L, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60025D8")]
		[Address(RVA = "0x1484708", Offset = "0x1484708", VA = "0x1484708")]
		public bool CheckLuaBaseRef(IntPtr L, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60025D9")]
		[Address(RVA = "0x148479C", Offset = "0x148479C", VA = "0x148479C")]
		public bool CheckByteBuffer(IntPtr L, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60025DA")]
		[Address(RVA = "0x1484820", Offset = "0x1484820", VA = "0x1484820")]
		public bool CheckEventObject(IntPtr L, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60025DB")]
		[Address(RVA = "0x1484904", Offset = "0x1484904", VA = "0x1484904")]
		public bool CheckEnumerator(IntPtr L, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60025DC")]
		[Address(RVA = "0x1484A60", Offset = "0x1484A60", VA = "0x1484A60")]
		private bool CheckFinalType(Type type, IntPtr L, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60025DD")]
		[Address(RVA = "0x1484B10", Offset = "0x1484B10", VA = "0x1484B10")]
		public bool CheckGameObject(IntPtr L, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60025DE")]
		[Address(RVA = "0x1484BA0", Offset = "0x1484BA0", VA = "0x1484BA0")]
		public bool CheckTransform(IntPtr L, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60025DF")]
		[Address(RVA = "0x1484D18", Offset = "0x1484D18", VA = "0x1484D18")]
		public bool CheckMonoType(IntPtr L, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60025E0")]
		[Address(RVA = "0x1484DEC", Offset = "0x1484DEC", VA = "0x1484DEC")]
		public bool CheckVariant(IntPtr L, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60025E1")]
		[Address(RVA = "0x1482708", Offset = "0x1482708", VA = "0x1482708")]
		private bool CheckClassType(Type t, IntPtr L, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60025E2")]
		[Address(RVA = "0x1484DF4", Offset = "0x1484DF4", VA = "0x1484DF4")]
		public LuaMatchType()
		{
		}
	}
	[Token(Token = "0x20002A4")]
	public static class LuaMethodCache
	{
		[Token(Token = "0x4000C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Dictionary<Type, Dictionary<string, List<MethodInfo>>> dict;

		[Token(Token = "0x60025E4")]
		[Address(RVA = "0x1485354", Offset = "0x1485354", VA = "0x1485354")]
		private static MethodInfo GetMethod(Type t, string name, Type[] ts)
		{
			return null;
		}

		[Token(Token = "0x60025E5")]
		[Address(RVA = "0x14856F0", Offset = "0x14856F0", VA = "0x14856F0")]
		public static object CallSingleMethod(string name, object obj, params object[] args)
		{
			return null;
		}

		[Token(Token = "0x60025E6")]
		[Address(RVA = "0x148579C", Offset = "0x148579C", VA = "0x148579C")]
		public static object CallMethod(string name, object obj, params object[] args)
		{
			return null;
		}
	}
	[Token(Token = "0x20002A5")]
	public class GCRef
	{
		[Token(Token = "0x4000C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int reference;

		[Token(Token = "0x4000C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string name;

		[Token(Token = "0x60025E8")]
		[Address(RVA = "0x1472550", Offset = "0x1472550", VA = "0x1472550")]
		public GCRef(int reference, string name)
		{
		}
	}
	[Token(Token = "0x20002A6")]
	public struct LuaByteBuffer
	{
		[Token(Token = "0x4000C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public byte[] buffer;

		[Token(Token = "0x4000C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9428AC", Offset = "0x9428AC")]
		private int <Length>k__BackingField;

		[Token(Token = "0x17000167")]
		public int Length
		{
			[Token(Token = "0x60025EE")]
			[Address(RVA = "0x14732CC", Offset = "0x14732CC", VA = "0x14732CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A8220", Offset = "0x9A8220")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60025EF")]
			[Address(RVA = "0x14732D4", Offset = "0x14732D4", VA = "0x14732D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A8230", Offset = "0x9A8230")]
			private set
			{
			}
		}

		[Token(Token = "0x60025E9")]
		[Address(RVA = "0x1473174", Offset = "0x1473174", VA = "0x1473174")]
		public LuaByteBuffer(IntPtr source, int len)
		{
		}

		[Token(Token = "0x60025EA")]
		[Address(RVA = "0x147321C", Offset = "0x147321C", VA = "0x147321C")]
		public LuaByteBuffer(byte[] buf)
		{
		}

		[Token(Token = "0x60025EB")]
		[Address(RVA = "0x147323C", Offset = "0x147323C", VA = "0x147323C")]
		public LuaByteBuffer(byte[] buf, int len)
		{
		}

		[Token(Token = "0x60025EC")]
		[Address(RVA = "0x1473248", Offset = "0x1473248", VA = "0x1473248")]
		public LuaByteBuffer(MemoryStream stream)
		{
		}

		[Token(Token = "0x60025ED")]
		[Address(RVA = "0x14732A0", Offset = "0x14732A0", VA = "0x14732A0")]
		public static implicit operator LuaByteBuffer(MemoryStream stream)
		{
			return default(LuaByteBuffer);
		}
	}
	[Token(Token = "0x20002A7")]
	public class LuaOut<T>
	{
		[Token(Token = "0x60025F0")]
		public LuaOut()
		{
		}
	}
	[Token(Token = "0x20002A8")]
	public class NullObject
	{
		[Token(Token = "0x60025F1")]
		[Address(RVA = "0x15AD754", Offset = "0x15AD754", VA = "0x15AD754")]
		public NullObject()
		{
		}
	}
	[Token(Token = "0x20002A9")]
	public struct nil
	{
	}
	[Token(Token = "0x20002AA")]
	public class LuaDelegate
	{
		[Token(Token = "0x4000C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LuaFunction func;

		[Token(Token = "0x4000C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LuaTable self;

		[Token(Token = "0x4000C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MethodInfo method;

		[Token(Token = "0x60025F2")]
		[Address(RVA = "0x147CB28", Offset = "0x147CB28", VA = "0x147CB28")]
		public LuaDelegate(LuaFunction func)
		{
		}

		[Token(Token = "0x60025F3")]
		[Address(RVA = "0x147CB54", Offset = "0x147CB54", VA = "0x147CB54")]
		public LuaDelegate(LuaFunction func, LuaTable self)
		{
		}

		[Token(Token = "0x60025F4")]
		[Address(RVA = "0x147CB8C", Offset = "0x147CB8C", VA = "0x147CB8C", Slot = "4")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x60025F5")]
		[Address(RVA = "0x147CC14", Offset = "0x147CC14", VA = "0x147CC14", Slot = "0")]
		public override bool Equals(object o)
		{
			return default(bool);
		}

		[Token(Token = "0x60025F6")]
		[Address(RVA = "0x147CD2C", Offset = "0x147CD2C", VA = "0x147CD2C")]
		private static bool CompareLuaDelegate(LuaDelegate a, LuaDelegate b)
		{
			return default(bool);
		}

		[Token(Token = "0x60025F7")]
		[Address(RVA = "0x147CD28", Offset = "0x147CD28", VA = "0x147CD28")]
		public static bool operator ==(LuaDelegate a, LuaDelegate b)
		{
			return default(bool);
		}

		[Token(Token = "0x60025F8")]
		[Address(RVA = "0x147CDF0", Offset = "0x147CDF0", VA = "0x147CDF0")]
		public static bool operator !=(LuaDelegate a, LuaDelegate b)
		{
			return default(bool);
		}

		[Token(Token = "0x60025F9")]
		[Address(RVA = "0x147CE0C", Offset = "0x147CE0C", VA = "0x147CE0C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x20002AB")]
	[NoToLua]
	public static class LuaMisc
	{
		[Token(Token = "0x60025FA")]
		[Address(RVA = "0x1485970", Offset = "0x1485970", VA = "0x1485970")]
		public static string GetArrayRank(Type t)
		{
			return null;
		}

		[Token(Token = "0x60025FB")]
		[Address(RVA = "0x1485B68", Offset = "0x1485B68", VA = "0x1485B68")]
		public static string GetTypeName(Type t)
		{
			return null;
		}

		[Token(Token = "0x60025FC")]
		[Address(RVA = "0x14864E8", Offset = "0x14864E8", VA = "0x14864E8")]
		public static string[] GetGenericName(Type[] types, int offset, int count)
		{
			return null;
		}

		[Token(Token = "0x60025FD")]
		[Address(RVA = "0x1486640", Offset = "0x1486640", VA = "0x1486640")]
		private static string CombineTypeStr(string space, string name)
		{
			return null;
		}

		[Token(Token = "0x60025FE")]
		[Address(RVA = "0x1485CE0", Offset = "0x1485CE0", VA = "0x1485CE0")]
		private static string GetGenericName(Type t)
		{
			return null;
		}

		[Token(Token = "0x60025FF")]
		[Address(RVA = "0x14866C8", Offset = "0x14866C8", VA = "0x14866C8")]
		public static Delegate GetEventHandler(object obj, Type t, string eventName)
		{
			return null;
		}

		[Token(Token = "0x6002600")]
		[Address(RVA = "0x1485FC4", Offset = "0x1485FC4", VA = "0x1485FC4")]
		public static string GetPrimitiveStr(Type t)
		{
			return null;
		}

		[Token(Token = "0x6002601")]
		[Address(RVA = "0x1486790", Offset = "0x1486790", VA = "0x1486790")]
		public static double ToDouble(object obj)
		{
			return default(double);
		}

		[Token(Token = "0x6002602")]
		[Address(RVA = "0x1486CF8", Offset = "0x1486CF8", VA = "0x1486CF8")]
		public static Type GetExportBaseType(Type t)
		{
			return null;
		}
	}
	[Token(Token = "0x20002AC")]
	public class TouchBits
	{
		[Token(Token = "0x4000C3C")]
		public const int DeltaPosition = 1;

		[Token(Token = "0x4000C3D")]
		public const int Position = 2;

		[Token(Token = "0x4000C3E")]
		public const int RawPosition = 4;

		[Token(Token = "0x4000C3F")]
		public const int ALL = 7;

		[Token(Token = "0x6002603")]
		[Address(RVA = "0x15BACC4", Offset = "0x15BACC4", VA = "0x15BACC4")]
		public TouchBits()
		{
		}
	}
	[Token(Token = "0x20002AD")]
	public class RaycastBits
	{
		[Token(Token = "0x4000C40")]
		public const int Collider = 1;

		[Token(Token = "0x4000C41")]
		public const int Normal = 2;

		[Token(Token = "0x4000C42")]
		public const int Point = 4;

		[Token(Token = "0x4000C43")]
		public const int Rigidbody = 8;

		[Token(Token = "0x4000C44")]
		public const int Transform = 16;

		[Token(Token = "0x4000C45")]
		public const int ALL = 31;

		[Token(Token = "0x6002604")]
		[Address(RVA = "0x15AE428", Offset = "0x15AE428", VA = "0x15AE428")]
		public RaycastBits()
		{
		}
	}
	[Token(Token = "0x20002AE")]
	public enum EventOp
	{
		[Token(Token = "0x4000C47")]
		None,
		[Token(Token = "0x4000C48")]
		Add,
		[Token(Token = "0x4000C49")]
		Sub
	}
	[Token(Token = "0x20002AF")]
	public class EventObject
	{
		[Token(Token = "0x4000C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[NoToLua]
		public EventOp op;

		[Token(Token = "0x4000C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[NoToLua]
		public Delegate func;

		[Token(Token = "0x4000C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[NoToLua]
		public Type type;

		[Token(Token = "0x6002605")]
		[Address(RVA = "0x14724E4", Offset = "0x14724E4", VA = "0x14724E4")]
		[NoToLua]
		public EventObject(Type t)
		{
		}

		[Token(Token = "0x6002606")]
		[Address(RVA = "0x1472510", Offset = "0x1472510", VA = "0x1472510")]
		public static EventObject operator +(EventObject a, Delegate b)
		{
			return null;
		}

		[Token(Token = "0x6002607")]
		[Address(RVA = "0x1472530", Offset = "0x1472530", VA = "0x1472530")]
		public static EventObject operator -(EventObject a, Delegate b)
		{
			return null;
		}
	}
	[Token(Token = "0x20002B0")]
	public class LuaStackOp
	{
		[Token(Token = "0x6002608")]
		[Address(RVA = "0xEFDDFC", Offset = "0xEFDDFC", VA = "0xEFDDFC")]
		public sbyte ToSByte(IntPtr L, int stackPos)
		{
			return default(sbyte);
		}

		[Token(Token = "0x6002609")]
		[Address(RVA = "0xEFDEAC", Offset = "0xEFDEAC", VA = "0xEFDEAC")]
		public byte ToByte(IntPtr L, int stackPos)
		{
			return default(byte);
		}

		[Token(Token = "0x600260A")]
		[Address(RVA = "0xEFDF5C", Offset = "0xEFDF5C", VA = "0xEFDF5C")]
		public short ToInt16(IntPtr L, int stackPos)
		{
			return default(short);
		}

		[Token(Token = "0x600260B")]
		[Address(RVA = "0xEFE00C", Offset = "0xEFE00C", VA = "0xEFE00C")]
		public ushort ToUInt16(IntPtr L, int stackPos)
		{
			return default(ushort);
		}

		[Token(Token = "0x600260C")]
		[Address(RVA = "0xEFE0BC", Offset = "0xEFE0BC", VA = "0xEFE0BC")]
		public char ToChar(IntPtr L, int stackPos)
		{
			return default(char);
		}

		[Token(Token = "0x600260D")]
		[Address(RVA = "0xEFE16C", Offset = "0xEFE16C", VA = "0xEFE16C")]
		public int ToInt32(IntPtr L, int stackPos)
		{
			return default(int);
		}

		[Token(Token = "0x600260E")]
		[Address(RVA = "0xEFE21C", Offset = "0xEFE21C", VA = "0xEFE21C")]
		public uint ToUInt32(IntPtr L, int stackPos)
		{
			return default(uint);
		}

		[Token(Token = "0x600260F")]
		[Address(RVA = "0xEFE2CC", Offset = "0xEFE2CC", VA = "0xEFE2CC")]
		public decimal ToDecimal(IntPtr L, int stackPos)
		{
			return default(decimal);
		}

		[Token(Token = "0x6002610")]
		[Address(RVA = "0xEFE37C", Offset = "0xEFE37C", VA = "0xEFE37C")]
		public float ToFloat(IntPtr L, int stackPos)
		{
			return default(float);
		}

		[Token(Token = "0x6002611")]
		[Address(RVA = "0xEFE42C", Offset = "0xEFE42C", VA = "0xEFE42C")]
		public LuaByteBuffer ToLuaByteBuffer(IntPtr L, int stackPos)
		{
			return default(LuaByteBuffer);
		}

		[Token(Token = "0x6002612")]
		[Address(RVA = "0xEFE4C8", Offset = "0xEFE4C8", VA = "0xEFE4C8")]
		public IEnumerator ToIter(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x6002613")]
		[Address(RVA = "0xEFE570", Offset = "0xEFE570", VA = "0xEFE570")]
		public Type ToType(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x6002614")]
		[Address(RVA = "0xEFE628", Offset = "0xEFE628", VA = "0xEFE628")]
		public EventObject ToEventObject(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x6002615")]
		[Address(RVA = "0xEFE6E0", Offset = "0xEFE6E0", VA = "0xEFE6E0")]
		public Transform ToTransform(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x6002616")]
		[Address(RVA = "0xEFE798", Offset = "0xEFE798", VA = "0xEFE798")]
		public GameObject ToGameObject(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x6002617")]
		[Address(RVA = "0xEFE834", Offset = "0xEFE834", VA = "0xEFE834")]
		public object ToObject(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x6002618")]
		[Address(RVA = "0xEFE8AC", Offset = "0xEFE8AC", VA = "0xEFE8AC")]
		public sbyte CheckSByte(IntPtr L, int stackPos)
		{
			return default(sbyte);
		}

		[Token(Token = "0x6002619")]
		[Address(RVA = "0xEFE95C", Offset = "0xEFE95C", VA = "0xEFE95C")]
		public byte CheckByte(IntPtr L, int stackPos)
		{
			return default(byte);
		}

		[Token(Token = "0x600261A")]
		[Address(RVA = "0xEFEA0C", Offset = "0xEFEA0C", VA = "0xEFEA0C")]
		public short CheckInt16(IntPtr L, int stackPos)
		{
			return default(short);
		}

		[Token(Token = "0x600261B")]
		[Address(RVA = "0xEFEABC", Offset = "0xEFEABC", VA = "0xEFEABC")]
		public ushort CheckUInt16(IntPtr L, int stackPos)
		{
			return default(ushort);
		}

		[Token(Token = "0x600261C")]
		[Address(RVA = "0xEFEB6C", Offset = "0xEFEB6C", VA = "0xEFEB6C")]
		public char CheckChar(IntPtr L, int stackPos)
		{
			return default(char);
		}

		[Token(Token = "0x600261D")]
		[Address(RVA = "0xEFEC1C", Offset = "0xEFEC1C", VA = "0xEFEC1C")]
		public int CheckInt32(IntPtr L, int stackPos)
		{
			return default(int);
		}

		[Token(Token = "0x600261E")]
		[Address(RVA = "0xEFECCC", Offset = "0xEFECCC", VA = "0xEFECCC")]
		public uint CheckUInt32(IntPtr L, int stackPos)
		{
			return default(uint);
		}

		[Token(Token = "0x600261F")]
		[Address(RVA = "0xEFED7C", Offset = "0xEFED7C", VA = "0xEFED7C")]
		public decimal CheckDecimal(IntPtr L, int stackPos)
		{
			return default(decimal);
		}

		[Token(Token = "0x6002620")]
		[Address(RVA = "0xEFEE2C", Offset = "0xEFEE2C", VA = "0xEFEE2C")]
		public float CheckFloat(IntPtr L, int stackPos)
		{
			return default(float);
		}

		[Token(Token = "0x6002621")]
		[Address(RVA = "0xEFEEDC", Offset = "0xEFEEDC", VA = "0xEFEEDC")]
		public IntPtr CheckIntPtr(IntPtr L, int stackPos)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6002622")]
		[Address(RVA = "0xEFEFD0", Offset = "0xEFEFD0", VA = "0xEFEFD0")]
		public UIntPtr CheckUIntPtr(IntPtr L, int stackPos)
		{
			return default(UIntPtr);
		}

		[Token(Token = "0x6002623")]
		[Address(RVA = "0xEFF044", Offset = "0xEFF044", VA = "0xEFF044")]
		public LuaByteBuffer CheckLuaByteBuffer(IntPtr L, int stackPos)
		{
			return default(LuaByteBuffer);
		}

		[Token(Token = "0x6002624")]
		[Address(RVA = "0xEFF0E0", Offset = "0xEFF0E0", VA = "0xEFF0E0")]
		public EventObject CheckEventObject(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x6002625")]
		[Address(RVA = "0xEFF1DC", Offset = "0xEFF1DC", VA = "0xEFF1DC")]
		public Transform CheckTransform(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x6002626")]
		[Address(RVA = "0xEFF2D8", Offset = "0xEFF2D8", VA = "0xEFF2D8")]
		public GameObject CheckGameObject(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x6002627")]
		[Address(RVA = "0xEFF3B8", Offset = "0xEFF3B8", VA = "0xEFF3B8")]
		public void Push(IntPtr L, sbyte n)
		{
		}

		[Token(Token = "0x6002628")]
		[Address(RVA = "0xEFF434", Offset = "0xEFF434", VA = "0xEFF434")]
		public void Push(IntPtr L, byte n)
		{
		}

		[Token(Token = "0x6002629")]
		[Address(RVA = "0xEFF4B0", Offset = "0xEFF4B0", VA = "0xEFF4B0")]
		public void Push(IntPtr L, short n)
		{
		}

		[Token(Token = "0x600262A")]
		[Address(RVA = "0xEFF52C", Offset = "0xEFF52C", VA = "0xEFF52C")]
		public void Push(IntPtr L, ushort n)
		{
		}

		[Token(Token = "0x600262B")]
		[Address(RVA = "0xEFF5A8", Offset = "0xEFF5A8", VA = "0xEFF5A8")]
		public void Push(IntPtr L, char n)
		{
		}

		[Token(Token = "0x600262C")]
		[Address(RVA = "0xEFF624", Offset = "0xEFF624", VA = "0xEFF624")]
		public void Push(IntPtr L, int n)
		{
		}

		[Token(Token = "0x600262D")]
		[Address(RVA = "0xEFF69C", Offset = "0xEFF69C", VA = "0xEFF69C")]
		public void Push(IntPtr L, uint n)
		{
		}

		[Token(Token = "0x600262E")]
		[Address(RVA = "0xEFF714", Offset = "0xEFF714", VA = "0xEFF714")]
		public void Push(IntPtr L, decimal n)
		{
		}

		[Token(Token = "0x600262F")]
		[Address(RVA = "0xEFF7CC", Offset = "0xEFF7CC", VA = "0xEFF7CC")]
		public void Push(IntPtr L, float n)
		{
		}

		[Token(Token = "0x6002630")]
		[Address(RVA = "0xEFF844", Offset = "0xEFF844", VA = "0xEFF844")]
		public void Push(IntPtr L, UIntPtr p)
		{
		}

		[Token(Token = "0x6002631")]
		[Address(RVA = "0xEFF8B8", Offset = "0xEFF8B8", VA = "0xEFF8B8")]
		public void Push(IntPtr L, Delegate ev)
		{
		}

		[Token(Token = "0x6002632")]
		[Address(RVA = "0xEFF930", Offset = "0xEFF930", VA = "0xEFF930")]
		public void Push(IntPtr L, object obj)
		{
		}

		[Token(Token = "0x6002633")]
		[Address(RVA = "0xEFF9A8", Offset = "0xEFF9A8", VA = "0xEFF9A8")]
		public void Push(IntPtr L, GameObject o)
		{
		}

		[Token(Token = "0x6002634")]
		[Address(RVA = "0xEFFB44", Offset = "0xEFFB44", VA = "0xEFFB44")]
		public void Push(IntPtr L, Transform o)
		{
		}

		[Token(Token = "0x6002635")]
		[Address(RVA = "0xEFFDD4", Offset = "0xEFFDD4", VA = "0xEFFDD4")]
		public sbyte? ToNullSByte(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x6002636")]
		[Address(RVA = "0xEFFEE8", Offset = "0xEFFEE8", VA = "0xEFFEE8")]
		public byte? ToNullByte(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x6002637")]
		[Address(RVA = "0xEFFFFC", Offset = "0xEFFFFC", VA = "0xEFFFFC")]
		public short? ToNullInt16(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x6002638")]
		[Address(RVA = "0xF00110", Offset = "0xF00110", VA = "0xF00110")]
		public ushort? ToNullUInt16(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x6002639")]
		[Address(RVA = "0xF00224", Offset = "0xF00224", VA = "0xF00224")]
		public char? ToNullChar(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x600263A")]
		[Address(RVA = "0xF00338", Offset = "0xF00338", VA = "0xF00338")]
		public int? ToNullInt32(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x600263B")]
		[Address(RVA = "0xF0044C", Offset = "0xF0044C", VA = "0xF0044C")]
		public uint? ToNullUInt32(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x600263C")]
		[Address(RVA = "0xF00560", Offset = "0xF00560", VA = "0xF00560")]
		public decimal? ToNullDecimal(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x600263D")]
		[Address(RVA = "0xF00688", Offset = "0xF00688", VA = "0xF00688")]
		public float? ToNullFloat(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x600263E")]
		[Address(RVA = "0xF00798", Offset = "0xF00798", VA = "0xF00798")]
		public double? ToNullNumber(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x600263F")]
		[Address(RVA = "0xF0086C", Offset = "0xF0086C", VA = "0xF0086C")]
		public bool? ToNullBool(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x6002640")]
		[Address(RVA = "0xF00940", Offset = "0xF00940", VA = "0xF00940")]
		public long? ToNullInt64(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x6002641")]
		[Address(RVA = "0xF00A18", Offset = "0xF00A18", VA = "0xF00A18")]
		public ulong? ToNullUInt64(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x6002642")]
		[Address(RVA = "0xF00AF0", Offset = "0xF00AF0", VA = "0xF00AF0")]
		public sbyte[] ToSByteArray(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x6002643")]
		[Address(RVA = "0xF00B70", Offset = "0xF00B70", VA = "0xF00B70")]
		public short[] ToInt16Array(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x6002644")]
		[Address(RVA = "0xF00BF0", Offset = "0xF00BF0", VA = "0xF00BF0")]
		public ushort[] ToUInt16Array(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x6002645")]
		[Address(RVA = "0xF00C70", Offset = "0xF00C70", VA = "0xF00C70")]
		public decimal[] ToDecimalArray(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x6002646")]
		[Address(RVA = "0xF00CF0", Offset = "0xF00CF0", VA = "0xF00CF0")]
		public float[] ToFloatArray(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x6002647")]
		[Address(RVA = "0xF00D70", Offset = "0xF00D70", VA = "0xF00D70")]
		public double[] ToDoubleArray(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x6002648")]
		[Address(RVA = "0xF00DF0", Offset = "0xF00DF0", VA = "0xF00DF0")]
		public int[] ToInt32Array(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x6002649")]
		[Address(RVA = "0xF00E70", Offset = "0xF00E70", VA = "0xF00E70")]
		public uint[] ToUInt32Array(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x600264A")]
		[Address(RVA = "0xF00EF0", Offset = "0xF00EF0", VA = "0xF00EF0")]
		public long[] ToInt64Array(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x600264B")]
		[Address(RVA = "0xF00F70", Offset = "0xF00F70", VA = "0xF00F70")]
		public ulong[] ToUInt64Array(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x600264C")]
		[Address(RVA = "0xF00FF0", Offset = "0xF00FF0", VA = "0xF00FF0")]
		public Vector3? ToNullVec3(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x600264D")]
		[Address(RVA = "0xF01104", Offset = "0xF01104", VA = "0xF01104")]
		public Quaternion? ToNullQuat(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x600264E")]
		[Address(RVA = "0xF0121C", Offset = "0xF0121C", VA = "0xF0121C")]
		public Vector2? ToNullVec2(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x600264F")]
		[Address(RVA = "0xF01320", Offset = "0xF01320", VA = "0xF01320")]
		public Color? ToNullColor(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x6002650")]
		[Address(RVA = "0xF01438", Offset = "0xF01438", VA = "0xF01438")]
		public Vector4? ToNullVec4(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x6002651")]
		[Address(RVA = "0xF01550", Offset = "0xF01550", VA = "0xF01550")]
		public Ray? ToNullRay(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x6002652")]
		[Address(RVA = "0xF01654", Offset = "0xF01654", VA = "0xF01654")]
		public Bounds? ToNullBounds(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x6002653")]
		[Address(RVA = "0xF01758", Offset = "0xF01758", VA = "0xF01758")]
		public LayerMask? ToNullLayerMask(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x6002654")]
		[Address(RVA = "0xF01834", Offset = "0xF01834", VA = "0xF01834")]
		public Vector3[] ToVec3Array(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x6002655")]
		[Address(RVA = "0xF018B4", Offset = "0xF018B4", VA = "0xF018B4")]
		public Quaternion[] ToQuatArray(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x6002656")]
		[Address(RVA = "0xF01934", Offset = "0xF01934", VA = "0xF01934")]
		public Vector2[] ToVec2Array(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x6002657")]
		[Address(RVA = "0xF019B4", Offset = "0xF019B4", VA = "0xF019B4")]
		public Color[] ToColorArray(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x6002658")]
		[Address(RVA = "0xF01A34", Offset = "0xF01A34", VA = "0xF01A34")]
		public Vector4[] ToVec4Array(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x6002659")]
		[Address(RVA = "0xF01AB4", Offset = "0xF01AB4", VA = "0xF01AB4")]
		public Type[] ToTypeArray(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x600265A")]
		[Address(RVA = "0xF01B34", Offset = "0xF01B34", VA = "0xF01B34")]
		public sbyte? CheckNullSByte(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x600265B")]
		[Address(RVA = "0xF01C48", Offset = "0xF01C48", VA = "0xF01C48")]
		public byte? CheckNullByte(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x600265C")]
		[Address(RVA = "0xF01D5C", Offset = "0xF01D5C", VA = "0xF01D5C")]
		public short? CheckNullInt16(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x600265D")]
		[Address(RVA = "0xF01E70", Offset = "0xF01E70", VA = "0xF01E70")]
		public ushort? CheckNullUInt16(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x600265E")]
		[Address(RVA = "0xF01F84", Offset = "0xF01F84", VA = "0xF01F84")]
		public char? CheckNullChar(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x600265F")]
		[Address(RVA = "0xF02098", Offset = "0xF02098", VA = "0xF02098")]
		public int? CheckNullInt32(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x6002660")]
		[Address(RVA = "0xF021AC", Offset = "0xF021AC", VA = "0xF021AC")]
		public uint? CheckNullUInt32(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x6002661")]
		[Address(RVA = "0xF022C0", Offset = "0xF022C0", VA = "0xF022C0")]
		public decimal? CheckNullDecimal(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x6002662")]
		[Address(RVA = "0xF023E8", Offset = "0xF023E8", VA = "0xF023E8")]
		public float? CheckNullFloat(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x6002663")]
		[Address(RVA = "0xF024F8", Offset = "0xF024F8", VA = "0xF024F8")]
		public double? CheckNullNumber(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x6002664")]
		[Address(RVA = "0xF025CC", Offset = "0xF025CC", VA = "0xF025CC")]
		public bool? CheckNullBool(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x6002665")]
		[Address(RVA = "0xF026A0", Offset = "0xF026A0", VA = "0xF026A0")]
		public long? CheckNullInt64(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x6002666")]
		[Address(RVA = "0xF02778", Offset = "0xF02778", VA = "0xF02778")]
		public ulong? CheckNullUInt64(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x6002667")]
		[Address(RVA = "0xF02850", Offset = "0xF02850", VA = "0xF02850")]
		public sbyte[] CheckSByteArray(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x6002668")]
		[Address(RVA = "0xF028D0", Offset = "0xF028D0", VA = "0xF028D0")]
		public short[] CheckInt16Array(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x6002669")]
		[Address(RVA = "0xF02950", Offset = "0xF02950", VA = "0xF02950")]
		public ushort[] CheckUInt16Array(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x600266A")]
		[Address(RVA = "0xF029D0", Offset = "0xF029D0", VA = "0xF029D0")]
		public decimal[] CheckDecimalArray(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x600266B")]
		[Address(RVA = "0xF02A50", Offset = "0xF02A50", VA = "0xF02A50")]
		public float[] CheckFloatArray(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x600266C")]
		[Address(RVA = "0xF02AD0", Offset = "0xF02AD0", VA = "0xF02AD0")]
		public double[] CheckDoubleArray(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x600266D")]
		[Address(RVA = "0xF02B50", Offset = "0xF02B50", VA = "0xF02B50")]
		public int[] CheckInt32Array(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x600266E")]
		[Address(RVA = "0xF02BD0", Offset = "0xF02BD0", VA = "0xF02BD0")]
		public uint[] CheckUInt32Array(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x600266F")]
		[Address(RVA = "0xF02C50", Offset = "0xF02C50", VA = "0xF02C50")]
		public long[] CheckInt64Array(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x6002670")]
		[Address(RVA = "0xF02CD0", Offset = "0xF02CD0", VA = "0xF02CD0")]
		public ulong[] CheckUInt64Array(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x6002671")]
		[Address(RVA = "0xF02D50", Offset = "0xF02D50", VA = "0xF02D50")]
		public Vector3? CheckNullVec3(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x6002672")]
		[Address(RVA = "0xF02E2C", Offset = "0xF02E2C", VA = "0xF02E2C")]
		public Quaternion? CheckNullQuat(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x6002673")]
		[Address(RVA = "0xF02F10", Offset = "0xF02F10", VA = "0xF02F10")]
		public Vector2? CheckNullVec2(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x6002674")]
		[Address(RVA = "0xF02FF8", Offset = "0xF02FF8", VA = "0xF02FF8")]
		public Color? CheckNullColor(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x6002675")]
		[Address(RVA = "0xF030DC", Offset = "0xF030DC", VA = "0xF030DC")]
		public Vector4? CheckNullVec4(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x6002676")]
		[Address(RVA = "0xF031C0", Offset = "0xF031C0", VA = "0xF031C0")]
		public Ray? CheckNullRay(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x6002677")]
		[Address(RVA = "0xF032C4", Offset = "0xF032C4", VA = "0xF032C4")]
		public Bounds? CheckNullBounds(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x6002678")]
		[Address(RVA = "0xF033C8", Offset = "0xF033C8", VA = "0xF033C8")]
		public LayerMask? CheckNullLayerMask(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x6002679")]
		[Address(RVA = "0xF034A4", Offset = "0xF034A4", VA = "0xF034A4")]
		public Vector3[] CheckVec3Array(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x600267A")]
		[Address(RVA = "0xF03524", Offset = "0xF03524", VA = "0xF03524")]
		public Quaternion[] CheckQuatArray(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x600267B")]
		[Address(RVA = "0xF035A4", Offset = "0xF035A4", VA = "0xF035A4")]
		public Vector2[] CheckVec2Array(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x600267C")]
		[Address(RVA = "0xF03624", Offset = "0xF03624", VA = "0xF03624")]
		public Color[] CheckColorArray(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x600267D")]
		[Address(RVA = "0xF036A4", Offset = "0xF036A4", VA = "0xF036A4")]
		public Vector4[] CheckVec4Array(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x600267E")]
		[Address(RVA = "0xF03724", Offset = "0xF03724", VA = "0xF03724")]
		public Type[] CheckTypeArray(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x600267F")]
		[Address(RVA = "0xF037A4", Offset = "0xF037A4", VA = "0xF037A4")]
		public void Push(IntPtr L, sbyte? n)
		{
		}

		[Token(Token = "0x6002680")]
		[Address(RVA = "0xF03888", Offset = "0xF03888", VA = "0xF03888")]
		public void Push(IntPtr L, byte? n)
		{
		}

		[Token(Token = "0x6002681")]
		[Address(RVA = "0xF0396C", Offset = "0xF0396C", VA = "0xF0396C")]
		public void Push(IntPtr L, short? n)
		{
		}

		[Token(Token = "0x6002682")]
		[Address(RVA = "0xF03A4C", Offset = "0xF03A4C", VA = "0xF03A4C")]
		public void Push(IntPtr L, ushort? n)
		{
		}

		[Token(Token = "0x6002683")]
		[Address(RVA = "0xF03B2C", Offset = "0xF03B2C", VA = "0xF03B2C")]
		public void Push(IntPtr L, char? n)
		{
		}

		[Token(Token = "0x6002684")]
		[Address(RVA = "0xF03C0C", Offset = "0xF03C0C", VA = "0xF03C0C")]
		public void Push(IntPtr L, int? n)
		{
		}

		[Token(Token = "0x6002685")]
		[Address(RVA = "0xF03CE8", Offset = "0xF03CE8", VA = "0xF03CE8")]
		public void Push(IntPtr L, uint? n)
		{
		}

		[Token(Token = "0x6002686")]
		[Address(RVA = "0xF03DC4", Offset = "0xF03DC4", VA = "0xF03DC4")]
		public void Push(IntPtr L, decimal? n)
		{
		}

		[Token(Token = "0x6002687")]
		[Address(RVA = "0xF03ED8", Offset = "0xF03ED8", VA = "0xF03ED8")]
		public void Push(IntPtr L, float? n)
		{
		}

		[Token(Token = "0x6002688")]
		[Address(RVA = "0xF03FC8", Offset = "0xF03FC8", VA = "0xF03FC8")]
		public void Push(IntPtr L, double? n)
		{
		}

		[Token(Token = "0x6002689")]
		[Address(RVA = "0xF040B8", Offset = "0xF040B8", VA = "0xF040B8")]
		public void Push(IntPtr L, bool? n)
		{
		}

		[Token(Token = "0x600268A")]
		[Address(RVA = "0xF04198", Offset = "0xF04198", VA = "0xF04198")]
		public void Push(IntPtr L, long? n)
		{
		}

		[Token(Token = "0x600268B")]
		[Address(RVA = "0xF04280", Offset = "0xF04280", VA = "0xF04280")]
		public void Push(IntPtr L, ulong? n)
		{
		}

		[Token(Token = "0x600268C")]
		[Address(RVA = "0xF04368", Offset = "0xF04368", VA = "0xF04368")]
		public void Push(IntPtr L, Vector3? v3)
		{
		}

		[Token(Token = "0x600268D")]
		[Address(RVA = "0xF04474", Offset = "0xF04474", VA = "0xF04474")]
		public void Push(IntPtr L, Quaternion? n)
		{
		}

		[Token(Token = "0x600268E")]
		[Address(RVA = "0xF04574", Offset = "0xF04574", VA = "0xF04574")]
		public void Push(IntPtr L, Vector2? n)
		{
		}

		[Token(Token = "0x600268F")]
		[Address(RVA = "0xF04670", Offset = "0xF04670", VA = "0xF04670")]
		public void Push(IntPtr L, Color? n)
		{
		}

		[Token(Token = "0x6002690")]
		[Address(RVA = "0xF04770", Offset = "0xF04770", VA = "0xF04770")]
		public void Push(IntPtr L, Vector4? n)
		{
		}

		[Token(Token = "0x6002691")]
		[Address(RVA = "0xF04870", Offset = "0xF04870", VA = "0xF04870")]
		public void Push(IntPtr L, Ray? n)
		{
		}

		[Token(Token = "0x6002692")]
		[Address(RVA = "0xF04960", Offset = "0xF04960", VA = "0xF04960")]
		public void Push(IntPtr L, Bounds? n)
		{
		}

		[Token(Token = "0x6002693")]
		[Address(RVA = "0xF04A50", Offset = "0xF04A50", VA = "0xF04A50")]
		public void Push(IntPtr L, LayerMask? n)
		{
		}

		[Token(Token = "0x6002694")]
		[Address(RVA = "0xF04B38", Offset = "0xF04B38", VA = "0xF04B38")]
		public void Push(IntPtr L, Touch? n)
		{
		}

		[Token(Token = "0x6002695")]
		[Address(RVA = "0xF04C28", Offset = "0xF04C28", VA = "0xF04C28")]
		public void Push(IntPtr L, RaycastHit? n)
		{
		}

		[Token(Token = "0x6002696")]
		[Address(RVA = "0xF04D18", Offset = "0xF04D18", VA = "0xF04D18")]
		public LuaStackOp()
		{
		}
	}
	[Token(Token = "0x20002B1")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x93F8F4", Offset = "0x93F8F4")]
	public class LuaState : LuaStatePtr, IDisposable
	{
		[Serializable]
		[Token(Token = "0x2000462")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x940890", Offset = "0x940890")]
		private sealed class <>c
		{
			[Token(Token = "0x4001143")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001144")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__70_0;

			[Token(Token = "0x6002EBD")]
			[Address(RVA = "0xF14A84", Offset = "0xF14A84", VA = "0xF14A84")]
			public <>c()
			{
			}

			[Token(Token = "0x6002EBE")]
			[Address(RVA = "0xF14A8C", Offset = "0xF14A8C", VA = "0xF14A8C")]
			internal void <.ctor>b__70_0()
			{
			}
		}

		[Token(Token = "0x4000C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectTranslator translator;

		[Token(Token = "0x4000C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LuaReflection reflection;

		[Token(Token = "0x4000C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9428EC", Offset = "0x9428EC")]
		private int <ArrayMetatable>k__BackingField;

		[Token(Token = "0x4000C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9428FC", Offset = "0x9428FC")]
		private int <DelegateMetatable>k__BackingField;

		[Token(Token = "0x4000C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x94290C", Offset = "0x94290C")]
		private int <TypeMetatable>k__BackingField;

		[Token(Token = "0x4000C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x94291C", Offset = "0x94291C")]
		private int <EnumMetatable>k__BackingField;

		[Token(Token = "0x4000C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x94292C", Offset = "0x94292C")]
		private int <IterMetatable>k__BackingField;

		[Token(Token = "0x4000C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x94293C", Offset = "0x94293C")]
		private int <EventMetatable>k__BackingField;

		[Token(Token = "0x4000C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x94294C", Offset = "0x94294C")]
		private int <PackBounds>k__BackingField;

		[Token(Token = "0x4000C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x94295C", Offset = "0x94295C")]
		private int <UnpackBounds>k__BackingField;

		[Token(Token = "0x4000C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x94296C", Offset = "0x94296C")]
		private int <PackRay>k__BackingField;

		[Token(Token = "0x4000C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x94297C", Offset = "0x94297C")]
		private int <UnpackRay>k__BackingField;

		[Token(Token = "0x4000C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x94298C", Offset = "0x94298C")]
		private int <PackRaycastHit>k__BackingField;

		[Token(Token = "0x4000C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x94299C", Offset = "0x94299C")]
		private int <PackTouch>k__BackingField;

		[Token(Token = "0x4000C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Action OnDestroy;

		[Token(Token = "0x4000C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Dictionary<string, WeakReference> funcMap;

		[Token(Token = "0x4000C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Dictionary<int, WeakReference> funcRefMap;

		[Token(Token = "0x4000C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Dictionary<long, WeakReference> delegateMap;

		[Token(Token = "0x4000C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private List<GCRef> gcList;

		[Token(Token = "0x4000C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private List<LuaBaseRef> subList;

		[Token(Token = "0x4000C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Dictionary<Type, int> metaMap;

		[Token(Token = "0x4000C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Dictionary<Enum, object> enumMap;

		[Token(Token = "0x4000C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Dictionary<Type, LuaCSFunction> preLoadMap;

		[Token(Token = "0x4000C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Dictionary<int, Type> typeMap;

		[Token(Token = "0x4000C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private HashSet<Type> genericSet;

		[Token(Token = "0x4000C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private HashSet<string> moduleSet;

		[Token(Token = "0x4000C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static LuaState mainState;

		[Token(Token = "0x4000C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<IntPtr, LuaState> stateMap;

		[Token(Token = "0x4000C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private int beginCount;

		[Token(Token = "0x4000C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private bool beLogGC;

		[Token(Token = "0x4000C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private HashSet<Type> missSet;

		[Token(Token = "0x17000168")]
		public int ArrayMetatable
		{
			[Token(Token = "0x6002697")]
			[Address(RVA = "0xF04DD8", Offset = "0xF04DD8", VA = "0xF04DD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A8250", Offset = "0x9A8250")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002698")]
			[Address(RVA = "0xF04DE0", Offset = "0xF04DE0", VA = "0xF04DE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A8260", Offset = "0x9A8260")]
			private set
			{
			}
		}

		[Token(Token = "0x17000169")]
		public int DelegateMetatable
		{
			[Token(Token = "0x6002699")]
			[Address(RVA = "0xF04DE8", Offset = "0xF04DE8", VA = "0xF04DE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A8270", Offset = "0x9A8270")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600269A")]
			[Address(RVA = "0xF04DF0", Offset = "0xF04DF0", VA = "0xF04DF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A8280", Offset = "0x9A8280")]
			private set
			{
			}
		}

		[Token(Token = "0x1700016A")]
		public int TypeMetatable
		{
			[Token(Token = "0x600269B")]
			[Address(RVA = "0xF04DF8", Offset = "0xF04DF8", VA = "0xF04DF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A8290", Offset = "0x9A8290")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600269C")]
			[Address(RVA = "0xF04E00", Offset = "0xF04E00", VA = "0xF04E00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A82A0", Offset = "0x9A82A0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700016B")]
		public int EnumMetatable
		{
			[Token(Token = "0x600269D")]
			[Address(RVA = "0xF04E08", Offset = "0xF04E08", VA = "0xF04E08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A82B0", Offset = "0x9A82B0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600269E")]
			[Address(RVA = "0xF04E10", Offset = "0xF04E10", VA = "0xF04E10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A82C0", Offset = "0x9A82C0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700016C")]
		public int IterMetatable
		{
			[Token(Token = "0x600269F")]
			[Address(RVA = "0xF04E18", Offset = "0xF04E18", VA = "0xF04E18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A82D0", Offset = "0x9A82D0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60026A0")]
			[Address(RVA = "0xF04E20", Offset = "0xF04E20", VA = "0xF04E20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A82E0", Offset = "0x9A82E0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700016D")]
		public int EventMetatable
		{
			[Token(Token = "0x60026A1")]
			[Address(RVA = "0xF04E28", Offset = "0xF04E28", VA = "0xF04E28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A82F0", Offset = "0x9A82F0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60026A2")]
			[Address(RVA = "0xF04E30", Offset = "0xF04E30", VA = "0xF04E30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A8300", Offset = "0x9A8300")]
			private set
			{
			}
		}

		[Token(Token = "0x1700016E")]
		public int PackBounds
		{
			[Token(Token = "0x60026A3")]
			[Address(RVA = "0xF04E38", Offset = "0xF04E38", VA = "0xF04E38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A8310", Offset = "0x9A8310")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60026A4")]
			[Address(RVA = "0xF04E40", Offset = "0xF04E40", VA = "0xF04E40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A8320", Offset = "0x9A8320")]
			private set
			{
			}
		}

		[Token(Token = "0x1700016F")]
		public int UnpackBounds
		{
			[Token(Token = "0x60026A5")]
			[Address(RVA = "0xF04E48", Offset = "0xF04E48", VA = "0xF04E48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A8330", Offset = "0x9A8330")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60026A6")]
			[Address(RVA = "0xF04E50", Offset = "0xF04E50", VA = "0xF04E50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A8340", Offset = "0x9A8340")]
			private set
			{
			}
		}

		[Token(Token = "0x17000170")]
		public int PackRay
		{
			[Token(Token = "0x60026A7")]
			[Address(RVA = "0xF04E58", Offset = "0xF04E58", VA = "0xF04E58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A8350", Offset = "0x9A8350")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60026A8")]
			[Address(RVA = "0xF04E60", Offset = "0xF04E60", VA = "0xF04E60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A8360", Offset = "0x9A8360")]
			private set
			{
			}
		}

		[Token(Token = "0x17000171")]
		public int UnpackRay
		{
			[Token(Token = "0x60026A9")]
			[Address(RVA = "0xF04E68", Offset = "0xF04E68", VA = "0xF04E68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A8370", Offset = "0x9A8370")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60026AA")]
			[Address(RVA = "0xF04E70", Offset = "0xF04E70", VA = "0xF04E70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A8380", Offset = "0x9A8380")]
			private set
			{
			}
		}

		[Token(Token = "0x17000172")]
		public int PackRaycastHit
		{
			[Token(Token = "0x60026AB")]
			[Address(RVA = "0xF04E78", Offset = "0xF04E78", VA = "0xF04E78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A8390", Offset = "0x9A8390")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60026AC")]
			[Address(RVA = "0xF04E80", Offset = "0xF04E80", VA = "0xF04E80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A83A0", Offset = "0x9A83A0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000173")]
		public int PackTouch
		{
			[Token(Token = "0x60026AD")]
			[Address(RVA = "0xF04E88", Offset = "0xF04E88", VA = "0xF04E88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A83B0", Offset = "0x9A83B0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60026AE")]
			[Address(RVA = "0xF04E90", Offset = "0xF04E90", VA = "0xF04E90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A83C0", Offset = "0x9A83C0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000174")]
		public bool LogGC
		{
			[Token(Token = "0x60026AF")]
			[Address(RVA = "0xF04E98", Offset = "0xF04E98", VA = "0xF04E98")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60026B0")]
			[Address(RVA = "0xF04EA0", Offset = "0xF04EA0", VA = "0xF04EA0")]
			set
			{
			}
		}

		[Token(Token = "0x17000175")]
		public object Item
		{
			[Token(Token = "0x6002735")]
			[Address(RVA = "0xF12BD8", Offset = "0xF12BD8", VA = "0xF12BD8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002736")]
			[Address(RVA = "0xF12D3C", Offset = "0xF12D3C", VA = "0xF12D3C")]
			set
			{
			}
		}

		[Token(Token = "0x60026B1")]
		[Address(RVA = "0xF04EC4", Offset = "0xF04EC4", VA = "0xF04EC4")]
		public LuaState()
		{
		}

		[Token(Token = "0x60026B2")]
		[Address(RVA = "0xF0AEC4", Offset = "0xF0AEC4", VA = "0xF0AEC4")]
		private void OpenBaseLibs()
		{
		}

		[Token(Token = "0x60026B3")]
		[Address(RVA = "0xF0B2CC", Offset = "0xF0B2CC", VA = "0xF0B2CC")]
		private void InitLuaPath()
		{
		}

		[Token(Token = "0x60026B4")]
		[Address(RVA = "0xF0B884", Offset = "0xF0B884", VA = "0xF0B884")]
		private void OpenBaseLuaLibs()
		{
		}

		[Token(Token = "0x60026B5")]
		[Address(RVA = "0xF0BC6C", Offset = "0xF0BC6C", VA = "0xF0BC6C")]
		public void Start()
		{
		}

		[Token(Token = "0x60026B6")]
		[Address(RVA = "0xF0BE64", Offset = "0xF0BE64", VA = "0xF0BE64")]
		public int OpenLibs(LuaCSFunction open)
		{
			return default(int);
		}

		[Token(Token = "0x60026B7")]
		[Address(RVA = "0xF0BE88", Offset = "0xF0BE88", VA = "0xF0BE88")]
		public void BeginPreLoad()
		{
		}

		[Token(Token = "0x60026B8")]
		[Address(RVA = "0xF0C01C", Offset = "0xF0C01C", VA = "0xF0C01C")]
		public void EndPreLoad()
		{
		}

		[Token(Token = "0x60026B9")]
		[Address(RVA = "0xF0C0C0", Offset = "0xF0C0C0", VA = "0xF0C0C0")]
		public void AddPreLoad(string name, LuaCSFunction func, Type type)
		{
		}

		[Token(Token = "0x60026BA")]
		[Address(RVA = "0xF0C2C8", Offset = "0xF0C2C8", VA = "0xF0C2C8")]
		public void AddPreLoad(string name, LuaCSFunction func)
		{
		}

		[Token(Token = "0x60026BB")]
		[Address(RVA = "0xF0C358", Offset = "0xF0C358", VA = "0xF0C358")]
		public int BeginPreModule(string name)
		{
			return default(int);
		}

		[Token(Token = "0x60026BC")]
		[Address(RVA = "0xF0C538", Offset = "0xF0C538", VA = "0xF0C538")]
		public void EndPreModule(int reference)
		{
		}

		[Token(Token = "0x60026BD")]
		[Address(RVA = "0xF0C5C0", Offset = "0xF0C5C0", VA = "0xF0C5C0")]
		public void EndPreModule(IntPtr L, int reference)
		{
		}

		[Token(Token = "0x60026BE")]
		[Address(RVA = "0xF0C648", Offset = "0xF0C648", VA = "0xF0C648")]
		public void BindPreModule(Type t, LuaCSFunction func)
		{
		}

		[Token(Token = "0x60026BF")]
		[Address(RVA = "0xF0C6B8", Offset = "0xF0C6B8", VA = "0xF0C6B8")]
		public LuaCSFunction GetPreModule(Type t)
		{
			return null;
		}

		[Token(Token = "0x60026C0")]
		[Address(RVA = "0xF0B414", Offset = "0xF0B414", VA = "0xF0B414")]
		public bool BeginModule(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x60026C1")]
		[Address(RVA = "0xF0B510", Offset = "0xF0B510", VA = "0xF0B510")]
		public void EndModule()
		{
		}

		[Token(Token = "0x60026C2")]
		[Address(RVA = "0xF0C730", Offset = "0xF0C730", VA = "0xF0C730")]
		private void BindTypeRef(int reference, Type t)
		{
		}

		[Token(Token = "0x60026C3")]
		[Address(RVA = "0xF0C808", Offset = "0xF0C808", VA = "0xF0C808")]
		public Type GetClassType(int reference)
		{
			return null;
		}

		[Token(Token = "0x60026C4")]
		[Address(RVA = "0xF04D20", Offset = "0xF04D20", VA = "0xF04D20")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A83D0", Offset = "0x9A83D0")]
		public static int Collect(IntPtr L)
		{
			return default(int);
		}

		[Token(Token = "0x60026C5")]
		[Address(RVA = "0xF0C8F4", Offset = "0xF0C8F4", VA = "0xF0C8F4")]
		private string GetToLuaTypeName(Type t)
		{
			return null;
		}

		[Token(Token = "0x60026C6")]
		[Address(RVA = "0xF0C984", Offset = "0xF0C984", VA = "0xF0C984")]
		public int BeginClass(Type t, Type baseType, [Optional] string name)
		{
			return default(int);
		}

		[Token(Token = "0x60026C7")]
		[Address(RVA = "0xF0CDF8", Offset = "0xF0CDF8", VA = "0xF0CDF8")]
		public void EndClass()
		{
		}

		[Token(Token = "0x60026C8")]
		[Address(RVA = "0xF0CE64", Offset = "0xF0CE64", VA = "0xF0CE64")]
		public int BeginEnum(Type t)
		{
			return default(int);
		}

		[Token(Token = "0x60026C9")]
		[Address(RVA = "0xF0CFB0", Offset = "0xF0CFB0", VA = "0xF0CFB0")]
		public void EndEnum()
		{
		}

		[Token(Token = "0x60026CA")]
		[Address(RVA = "0xF0D01C", Offset = "0xF0D01C", VA = "0xF0D01C")]
		public void BeginStaticLibs(string name)
		{
		}

		[Token(Token = "0x60026CB")]
		[Address(RVA = "0xF0D0E4", Offset = "0xF0D0E4", VA = "0xF0D0E4")]
		public void EndStaticLibs()
		{
		}

		[Token(Token = "0x60026CC")]
		[Address(RVA = "0xF0CD38", Offset = "0xF0CD38", VA = "0xF0CD38")]
		public void RegFunction(string name, LuaCSFunction func)
		{
		}

		[Token(Token = "0x60026CD")]
		[Address(RVA = "0xF0D150", Offset = "0xF0D150", VA = "0xF0D150")]
		public void RegVar(string name, LuaCSFunction get, LuaCSFunction set)
		{
		}

		[Token(Token = "0x60026CE")]
		[Address(RVA = "0xF0D25C", Offset = "0xF0D25C", VA = "0xF0D25C")]
		public void RegConstant(string name, double d)
		{
		}

		[Token(Token = "0x60026CF")]
		[Address(RVA = "0xF0D2E8", Offset = "0xF0D2E8", VA = "0xF0D2E8")]
		public void RegConstant(string name, bool flag)
		{
		}

		[Token(Token = "0x60026D0")]
		[Address(RVA = "0xF0BD78", Offset = "0xF0BD78", VA = "0xF0BD78")]
		private int GetFuncRef(string name)
		{
			return default(int);
		}

		[Token(Token = "0x60026D1")]
		[Address(RVA = "0xF0D698", Offset = "0xF0D698", VA = "0xF0D698")]
		public static LuaState Get(IntPtr ptr)
		{
			return null;
		}

		[Token(Token = "0x60026D2")]
		[Address(RVA = "0xF0C880", Offset = "0xF0C880", VA = "0xF0C880")]
		public static ObjectTranslator GetTranslator(IntPtr ptr)
		{
			return null;
		}

		[Token(Token = "0x60026D3")]
		[Address(RVA = "0xF0D700", Offset = "0xF0D700", VA = "0xF0D700")]
		public static LuaReflection GetReflection(IntPtr ptr)
		{
			return null;
		}

		[Token(Token = "0x60026D4")]
		[Address(RVA = "0xF0D774", Offset = "0xF0D774", VA = "0xF0D774")]
		public void DoString(string chunk, string chunkName = "LuaState.cs")
		{
		}

		[Token(Token = "0x60026D5")]
		public T DoString<T>(string chunk, string chunkName = "LuaState.cs")
		{
			return (T)null;
		}

		[Token(Token = "0x60026D6")]
		[Address(RVA = "0xF0D944", Offset = "0xF0D944", VA = "0xF0D944")]
		private byte[] LoadFileBuffer(string fileName)
		{
			return null;
		}

		[Token(Token = "0x60026D7")]
		[Address(RVA = "0xF0DA80", Offset = "0xF0DA80", VA = "0xF0DA80")]
		private string LuaChunkName(string name)
		{
			return null;
		}

		[Token(Token = "0x60026D8")]
		[Address(RVA = "0xF0B8DC", Offset = "0xF0B8DC", VA = "0xF0B8DC")]
		public void DoFile(string fileName)
		{
		}

		[Token(Token = "0x60026D9")]
		public T DoFile<T>(string fileName)
		{
			return (T)null;
		}

		[Token(Token = "0x60026DA")]
		[Address(RVA = "0xF0DB44", Offset = "0xF0DB44", VA = "0xF0DB44")]
		public void Require(string fileName)
		{
		}

		[Token(Token = "0x60026DB")]
		public T Require<T>(string fileName)
		{
			return (T)null;
		}

		[Token(Token = "0x60026DC")]
		[Address(RVA = "0xF0B5AC", Offset = "0xF0B5AC", VA = "0xF0B5AC")]
		public void InitPackagePath()
		{
		}

		[Token(Token = "0x60026DD")]
		[Address(RVA = "0xF0DDAC", Offset = "0xF0DDAC", VA = "0xF0DDAC")]
		private string ToPackagePath(string path)
		{
			return null;
		}

		[Token(Token = "0x60026DE")]
		[Address(RVA = "0xF0B76C", Offset = "0xF0B76C", VA = "0xF0B76C")]
		public void AddSearchPath(string fullPath)
		{
		}

		[Token(Token = "0x60026DF")]
		[Address(RVA = "0xF0DF9C", Offset = "0xF0DF9C", VA = "0xF0DF9C")]
		public void RemoveSeachPath(string fullPath)
		{
		}

		[Token(Token = "0x60026E0")]
		[Address(RVA = "0xF0E0B0", Offset = "0xF0E0B0", VA = "0xF0E0B0")]
		public int BeginPCall(int reference)
		{
			return default(int);
		}

		[Token(Token = "0x60026E1")]
		[Address(RVA = "0xF0E12C", Offset = "0xF0E12C", VA = "0xF0E12C")]
		public void PCall(int args, int oldTop)
		{
		}

		[Token(Token = "0x60026E2")]
		[Address(RVA = "0xF0E248", Offset = "0xF0E248", VA = "0xF0E248")]
		public void EndPCall(int oldTop)
		{
		}

		[Token(Token = "0x60026E3")]
		[Address(RVA = "0xF0E2C4", Offset = "0xF0E2C4", VA = "0xF0E2C4")]
		public void PushArgs(object[] args)
		{
		}

		[Token(Token = "0x60026E4")]
		[Address(RVA = "0xF0E3B8", Offset = "0xF0E3B8", VA = "0xF0E3B8")]
		private void CheckNull(LuaBaseRef lbr, string fmt, object arg0)
		{
		}

		[Token(Token = "0x60026E5")]
		[Address(RVA = "0xF0E470", Offset = "0xF0E470", VA = "0xF0E470")]
		private bool PushLuaTable(string fullPath, bool checkMap = true)
		{
			return default(bool);
		}

		[Token(Token = "0x60026E6")]
		[Address(RVA = "0xF0D388", Offset = "0xF0D388", VA = "0xF0D388")]
		private bool PushLuaFunction(string fullPath, bool checkMap = true)
		{
			return default(bool);
		}

		[Token(Token = "0x60026E7")]
		[Address(RVA = "0xF0E64C", Offset = "0xF0E64C", VA = "0xF0E64C")]
		private void RemoveFromGCList(int reference)
		{
		}

		[Token(Token = "0x60026E8")]
		[Address(RVA = "0xF0E784", Offset = "0xF0E784", VA = "0xF0E784")]
		public LuaFunction GetFunction(string name, bool beLogMiss = true)
		{
			return null;
		}

		[Token(Token = "0x60026E9")]
		[Address(RVA = "0xF0EBDC", Offset = "0xF0EBDC", VA = "0xF0EBDC")]
		private LuaBaseRef TryGetLuaRef(int reference)
		{
			return null;
		}

		[Token(Token = "0x60026EA")]
		[Address(RVA = "0xF0ED24", Offset = "0xF0ED24", VA = "0xF0ED24")]
		public LuaFunction GetFunction(int reference)
		{
			return null;
		}

		[Token(Token = "0x60026EB")]
		[Address(RVA = "0xF0EEAC", Offset = "0xF0EEAC", VA = "0xF0EEAC")]
		public LuaTable GetTable(string fullPath, bool beLogMiss = true)
		{
			return null;
		}

		[Token(Token = "0x60026EC")]
		[Address(RVA = "0xF0F2AC", Offset = "0xF0F2AC", VA = "0xF0F2AC")]
		public LuaTable GetTable(int reference)
		{
			return null;
		}

		[Token(Token = "0x60026ED")]
		[Address(RVA = "0xF0F3D4", Offset = "0xF0F3D4", VA = "0xF0F3D4")]
		public LuaThread GetLuaThread(int reference)
		{
			return null;
		}

		[Token(Token = "0x60026EE")]
		[Address(RVA = "0xF0F538", Offset = "0xF0F538", VA = "0xF0F538")]
		public LuaDelegate GetLuaDelegate(LuaFunction func)
		{
			return null;
		}

		[Token(Token = "0x60026EF")]
		[Address(RVA = "0xF0F650", Offset = "0xF0F650", VA = "0xF0F650")]
		public LuaDelegate GetLuaDelegate(LuaFunction func, LuaTable self)
		{
			return null;
		}

		[Token(Token = "0x60026F0")]
		[Address(RVA = "0xF0F7AC", Offset = "0xF0F7AC", VA = "0xF0F7AC")]
		public void AddLuaDelegate(LuaDelegate target, LuaFunction func)
		{
		}

		[Token(Token = "0x60026F1")]
		[Address(RVA = "0xF0F870", Offset = "0xF0F870", VA = "0xF0F870")]
		public void AddLuaDelegate(LuaDelegate target, LuaFunction func, LuaTable self)
		{
		}

		[Token(Token = "0x60026F2")]
		[Address(RVA = "0xF0F980", Offset = "0xF0F980", VA = "0xF0F980")]
		public bool CheckTop()
		{
			return default(bool);
		}

		[Token(Token = "0x60026F3")]
		[Address(RVA = "0xF0F99C", Offset = "0xF0F99C", VA = "0xF0F99C")]
		public void Push(bool b)
		{
		}

		[Token(Token = "0x60026F4")]
		[Address(RVA = "0xF0FA18", Offset = "0xF0FA18", VA = "0xF0FA18")]
		public void Push(double d)
		{
		}

		[Token(Token = "0x60026F5")]
		[Address(RVA = "0xF0FA94", Offset = "0xF0FA94", VA = "0xF0FA94")]
		public void Push(uint un)
		{
		}

		[Token(Token = "0x60026F6")]
		[Address(RVA = "0xF0FB10", Offset = "0xF0FB10", VA = "0xF0FB10")]
		public void Push(int n)
		{
		}

		[Token(Token = "0x60026F7")]
		[Address(RVA = "0xF0FB8C", Offset = "0xF0FB8C", VA = "0xF0FB8C")]
		public void Push(short s)
		{
		}

		[Token(Token = "0x60026F8")]
		[Address(RVA = "0xF0FC0C", Offset = "0xF0FC0C", VA = "0xF0FC0C")]
		public void Push(ushort us)
		{
		}

		[Token(Token = "0x60026F9")]
		[Address(RVA = "0xF0FC8C", Offset = "0xF0FC8C", VA = "0xF0FC8C")]
		public void Push(long l)
		{
		}

		[Token(Token = "0x60026FA")]
		[Address(RVA = "0xF0FD08", Offset = "0xF0FD08", VA = "0xF0FD08")]
		public void Push(ulong ul)
		{
		}

		[Token(Token = "0x60026FB")]
		[Address(RVA = "0xF0FD84", Offset = "0xF0FD84", VA = "0xF0FD84")]
		public void Push(string str)
		{
		}

		[Token(Token = "0x60026FC")]
		[Address(RVA = "0xF0FE00", Offset = "0xF0FE00", VA = "0xF0FE00")]
		public void Push(IntPtr p)
		{
		}

		[Token(Token = "0x60026FD")]
		[Address(RVA = "0xF0FE7C", Offset = "0xF0FE7C", VA = "0xF0FE7C")]
		public void Push(Vector3 v3)
		{
		}

		[Token(Token = "0x60026FE")]
		[Address(RVA = "0xF0FF10", Offset = "0xF0FF10", VA = "0xF0FF10")]
		public void Push(Vector2 v2)
		{
		}

		[Token(Token = "0x60026FF")]
		[Address(RVA = "0xF0FF94", Offset = "0xF0FF94", VA = "0xF0FF94")]
		public void Push(Vector4 v4)
		{
		}

		[Token(Token = "0x6002700")]
		[Address(RVA = "0xF10030", Offset = "0xF10030", VA = "0xF10030")]
		public void Push(Color clr)
		{
		}

		[Token(Token = "0x6002701")]
		[Address(RVA = "0xF100CC", Offset = "0xF100CC", VA = "0xF100CC")]
		public void Push(Quaternion q)
		{
		}

		[Token(Token = "0x6002702")]
		[Address(RVA = "0xF10168", Offset = "0xF10168", VA = "0xF10168")]
		public void Push(Ray ray)
		{
		}

		[Token(Token = "0x6002703")]
		[Address(RVA = "0xF10210", Offset = "0xF10210", VA = "0xF10210")]
		public void Push(Bounds bound)
		{
		}

		[Token(Token = "0x6002704")]
		[Address(RVA = "0xF102B8", Offset = "0xF102B8", VA = "0xF102B8")]
		public void Push(RaycastHit hit)
		{
		}

		[Token(Token = "0x6002705")]
		[Address(RVA = "0xF10360", Offset = "0xF10360", VA = "0xF10360")]
		public void Push(Touch touch)
		{
		}

		[Token(Token = "0x6002706")]
		[Address(RVA = "0xF10408", Offset = "0xF10408", VA = "0xF10408")]
		public void PushLayerMask(LayerMask mask)
		{
		}

		[Token(Token = "0x6002707")]
		[Address(RVA = "0xF1049C", Offset = "0xF1049C", VA = "0xF1049C")]
		public void Push(LuaByteBuffer bb)
		{
		}

		[Token(Token = "0x6002708")]
		[Address(RVA = "0xF10520", Offset = "0xF10520", VA = "0xF10520")]
		public void PushByteBuffer(byte[] buffer)
		{
		}

		[Token(Token = "0x6002709")]
		[Address(RVA = "0xF105A8", Offset = "0xF105A8", VA = "0xF105A8")]
		public void PushByteBuffer(byte[] buffer, int len)
		{
		}

		[Token(Token = "0x600270A")]
		[Address(RVA = "0xF0E5E8", Offset = "0xF0E5E8", VA = "0xF0E5E8")]
		public void Push(LuaBaseRef lbr)
		{
		}

		[Token(Token = "0x600270B")]
		[Address(RVA = "0xF10714", Offset = "0xF10714", VA = "0xF10714")]
		private void PushUserData(object o, int reference)
		{
		}

		[Token(Token = "0x600270C")]
		[Address(RVA = "0xF10838", Offset = "0xF10838", VA = "0xF10838")]
		public void Push(Array array)
		{
		}

		[Token(Token = "0x600270D")]
		[Address(RVA = "0xF10848", Offset = "0xF10848", VA = "0xF10848")]
		public void Push(Type t)
		{
		}

		[Token(Token = "0x600270E")]
		[Address(RVA = "0xF108E8", Offset = "0xF108E8", VA = "0xF108E8")]
		public void Push(Delegate ev)
		{
		}

		[Token(Token = "0x600270F")]
		[Address(RVA = "0xF108F8", Offset = "0xF108F8", VA = "0xF108F8")]
		public object GetEnumObj(Enum e)
		{
			return null;
		}

		[Token(Token = "0x6002710")]
		[Address(RVA = "0xF10998", Offset = "0xF10998", VA = "0xF10998")]
		public void Push(Enum e)
		{
		}

		[Token(Token = "0x6002711")]
		[Address(RVA = "0xF109DC", Offset = "0xF109DC", VA = "0xF109DC")]
		public void Push(IEnumerator iter)
		{
		}

		[Token(Token = "0x6002712")]
		[Address(RVA = "0xF10A58", Offset = "0xF10A58", VA = "0xF10A58")]
		public void Push(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x6002713")]
		[Address(RVA = "0xF10AD4", Offset = "0xF10AD4", VA = "0xF10AD4")]
		public void Push(TrackedReference tracker)
		{
		}

		[Token(Token = "0x6002714")]
		[Address(RVA = "0xF0E33C", Offset = "0xF0E33C", VA = "0xF0E33C")]
		public void PushVariant(object obj)
		{
		}

		[Token(Token = "0x6002715")]
		[Address(RVA = "0xF10B50", Offset = "0xF10B50", VA = "0xF10B50")]
		public void PushObject(object obj)
		{
		}

		[Token(Token = "0x6002716")]
		public void PushSealed<T>(T o)
		{
		}

		[Token(Token = "0x6002717")]
		public void PushValue<T>(T v) where T : struct
		{
		}

		[Token(Token = "0x6002718")]
		public void PushGeneric<T>(T o)
		{
		}

		[Token(Token = "0x6002719")]
		[Address(RVA = "0xF10BCC", Offset = "0xF10BCC", VA = "0xF10BCC")]
		private Vector3 ToVector3(int stackPos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600271A")]
		[Address(RVA = "0xF10CA0", Offset = "0xF10CA0", VA = "0xF10CA0")]
		public Vector3 CheckVector3(int stackPos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600271B")]
		[Address(RVA = "0xF10EBC", Offset = "0xF10EBC", VA = "0xF10EBC")]
		public Quaternion CheckQuaternion(int stackPos)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600271C")]
		[Address(RVA = "0xF11048", Offset = "0xF11048", VA = "0xF11048")]
		public Vector2 CheckVector2(int stackPos)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600271D")]
		[Address(RVA = "0xF111B8", Offset = "0xF111B8", VA = "0xF111B8")]
		public Vector4 CheckVector4(int stackPos)
		{
			return default(Vector4);
		}

		[Token(Token = "0x600271E")]
		[Address(RVA = "0xF11344", Offset = "0xF11344", VA = "0xF11344")]
		public Color CheckColor(int stackPos)
		{
			return default(Color);
		}

		[Token(Token = "0x600271F")]
		[Address(RVA = "0xF114B0", Offset = "0xF114B0", VA = "0xF114B0")]
		public Ray CheckRay(int stackPos)
		{
			return default(Ray);
		}

		[Token(Token = "0x6002720")]
		[Address(RVA = "0xF117C4", Offset = "0xF117C4", VA = "0xF117C4")]
		public Bounds CheckBounds(int stackPos)
		{
			return default(Bounds);
		}

		[Token(Token = "0x6002721")]
		[Address(RVA = "0xF11A5C", Offset = "0xF11A5C", VA = "0xF11A5C")]
		public LayerMask CheckLayerMask(int stackPos)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6002722")]
		[Address(RVA = "0xF11B84", Offset = "0xF11B84", VA = "0xF11B84")]
		public long CheckLong(int stackPos)
		{
			return default(long);
		}

		[Token(Token = "0x6002723")]
		[Address(RVA = "0xF11C14", Offset = "0xF11C14", VA = "0xF11C14")]
		public ulong CheckULong(int stackPos)
		{
			return default(ulong);
		}

		[Token(Token = "0x6002724")]
		[Address(RVA = "0xF11CA4", Offset = "0xF11CA4", VA = "0xF11CA4")]
		public string CheckString(int stackPos)
		{
			return null;
		}

		[Token(Token = "0x6002725")]
		[Address(RVA = "0xF11D20", Offset = "0xF11D20", VA = "0xF11D20")]
		public Delegate CheckDelegate(int stackPos)
		{
			return null;
		}

		[Token(Token = "0x6002726")]
		[Address(RVA = "0xF11E84", Offset = "0xF11E84", VA = "0xF11E84")]
		public char[] CheckCharBuffer(int stackPos)
		{
			return null;
		}

		[Token(Token = "0x6002727")]
		[Address(RVA = "0xF11F00", Offset = "0xF11F00", VA = "0xF11F00")]
		public byte[] CheckByteBuffer(int stackPos)
		{
			return null;
		}

		[Token(Token = "0x6002728")]
		public T[] CheckNumberArray<T>(int stackPos) where T : struct
		{
			return null;
		}

		[Token(Token = "0x6002729")]
		[Address(RVA = "0xF11F7C", Offset = "0xF11F7C", VA = "0xF11F7C")]
		public object CheckObject(int stackPos, Type type)
		{
			return null;
		}

		[Token(Token = "0x600272A")]
		[Address(RVA = "0xF12000", Offset = "0xF12000", VA = "0xF12000")]
		public object CheckVarObject(int stackPos, Type type)
		{
			return null;
		}

		[Token(Token = "0x600272B")]
		[Address(RVA = "0xF12084", Offset = "0xF12084", VA = "0xF12084")]
		public object[] CheckObjects(int oldTop)
		{
			return null;
		}

		[Token(Token = "0x600272C")]
		[Address(RVA = "0xF12200", Offset = "0xF12200", VA = "0xF12200")]
		public LuaFunction CheckLuaFunction(int stackPos)
		{
			return null;
		}

		[Token(Token = "0x600272D")]
		[Address(RVA = "0xF1227C", Offset = "0xF1227C", VA = "0xF1227C")]
		public LuaTable CheckLuaTable(int stackPos)
		{
			return null;
		}

		[Token(Token = "0x600272E")]
		[Address(RVA = "0xF122F8", Offset = "0xF122F8", VA = "0xF122F8")]
		public LuaThread CheckLuaThread(int stackPos)
		{
			return null;
		}

		[Token(Token = "0x600272F")]
		public T CheckValue<T>(int stackPos)
		{
			return (T)null;
		}

		[Token(Token = "0x6002730")]
		[Address(RVA = "0xF12184", Offset = "0xF12184", VA = "0xF12184")]
		public object ToVariant(int stackPos)
		{
			return null;
		}

		[Token(Token = "0x6002731")]
		[Address(RVA = "0xF12374", Offset = "0xF12374", VA = "0xF12374")]
		public void CollectRef(int reference, string name, bool isGCThread = false)
		{
		}

		[Token(Token = "0x6002732")]
		[Address(RVA = "0xF127C4", Offset = "0xF127C4", VA = "0xF127C4")]
		public void DelayDispose(LuaBaseRef br)
		{
		}

		[Token(Token = "0x6002733")]
		[Address(RVA = "0xF12850", Offset = "0xF12850", VA = "0xF12850")]
		public int Collect()
		{
			return default(int);
		}

		[Token(Token = "0x6002734")]
		[Address(RVA = "0xF12A74", Offset = "0xF12A74", VA = "0xF12A74")]
		public void RefreshDelegateMap()
		{
		}

		[Token(Token = "0x6002737")]
		[Address(RVA = "0xF130C4", Offset = "0xF130C4", VA = "0xF130C4")]
		public void NewTable(string fullPath)
		{
		}

		[Token(Token = "0x6002738")]
		[Address(RVA = "0xF13320", Offset = "0xF13320", VA = "0xF13320")]
		public LuaTable NewTable(int narr = 0, int nrec = 0)
		{
			return null;
		}

		[Token(Token = "0x6002739")]
		[Address(RVA = "0xF13404", Offset = "0xF13404", VA = "0xF13404")]
		public void ReLoad(string moduleFileName)
		{
		}

		[Token(Token = "0x600273A")]
		[Address(RVA = "0xF135F4", Offset = "0xF135F4", VA = "0xF135F4")]
		public int GetMetaReference(Type t)
		{
			return default(int);
		}

		[Token(Token = "0x600273B")]
		[Address(RVA = "0xF13670", Offset = "0xF13670", VA = "0xF13670")]
		public int GetMissMetaReference(Type t)
		{
			return default(int);
		}

		[Token(Token = "0x600273C")]
		[Address(RVA = "0xF137DC", Offset = "0xF137DC", VA = "0xF137DC")]
		private Type GetBaseType(Type t)
		{
			return null;
		}

		[Token(Token = "0x600273D")]
		[Address(RVA = "0xF13838", Offset = "0xF13838", VA = "0xF13838")]
		private Type GetSpecialGenericType(Type t)
		{
			return null;
		}

		[Token(Token = "0x600273E")]
		[Address(RVA = "0xF13920", Offset = "0xF13920", VA = "0xF13920")]
		private void CloseBaseRef()
		{
		}

		[Token(Token = "0x600273F")]
		[Address(RVA = "0xF139F8", Offset = "0xF139F8", VA = "0xF139F8", Slot = "4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6002740")]
		[Address(RVA = "0xF13F94", Offset = "0xF13F94", VA = "0xF13F94", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6002741")]
		[Address(RVA = "0xF13F9C", Offset = "0xF13F9C", VA = "0xF13F9C", Slot = "0")]
		public override bool Equals(object o)
		{
			return default(bool);
		}

		[Token(Token = "0x6002742")]
		[Address(RVA = "0xF0538C", Offset = "0xF0538C", VA = "0xF0538C")]
		public static bool operator ==(LuaState a, LuaState b)
		{
			return default(bool);
		}

		[Token(Token = "0x6002743")]
		[Address(RVA = "0xF140A4", Offset = "0xF140A4", VA = "0xF140A4")]
		public static bool operator !=(LuaState a, LuaState b)
		{
			return default(bool);
		}

		[Token(Token = "0x6002744")]
		[Address(RVA = "0xF14124", Offset = "0xF14124", VA = "0xF14124")]
		public void PrintTable(string name)
		{
		}

		[Token(Token = "0x6002745")]
		[Address(RVA = "0xF12494", Offset = "0xF12494", VA = "0xF12494")]
		protected void Collect(int reference, string name, bool beThread)
		{
		}

		[Token(Token = "0x6002746")]
		[Address(RVA = "0xF0D7D0", Offset = "0xF0D7D0", VA = "0xF0D7D0")]
		protected void LuaLoadBuffer(byte[] buffer, string chunkName)
		{
		}

		[Token(Token = "0x6002747")]
		protected T LuaLoadBuffer<T>(byte[] buffer, string chunkName)
		{
			return (T)null;
		}

		[Token(Token = "0x6002748")]
		[Address(RVA = "0xF145C0", Offset = "0xF145C0", VA = "0xF145C0")]
		public bool BeginCall(string name, int top, bool beLogMiss)
		{
			return default(bool);
		}

		[Token(Token = "0x6002749")]
		[Address(RVA = "0xF146D4", Offset = "0xF146D4", VA = "0xF146D4")]
		public void Call(int nArgs, int errfunc, int top)
		{
		}

		[Token(Token = "0x600274A")]
		[Address(RVA = "0xF1480C", Offset = "0xF1480C", VA = "0xF1480C")]
		public void Call(string name, bool beLogMiss)
		{
		}

		[Token(Token = "0x600274B")]
		public void Call<T>(string name, T arg1, bool beLogMiss)
		{
		}

		[Token(Token = "0x600274C")]
		public void Call<T1, T2>(string name, T1 arg1, T2 arg2, bool beLogMiss)
		{
		}

		[Token(Token = "0x600274D")]
		public void Call<T1, T2, T3>(string name, T1 arg1, T2 arg2, T3 arg3, bool beLogMiss)
		{
		}

		[Token(Token = "0x600274E")]
		public void Call<T1, T2, T3, T4>(string name, T1 arg1, T2 arg2, T3 arg3, T4 arg4, bool beLogMiss)
		{
		}

		[Token(Token = "0x600274F")]
		public void Call<T1, T2, T3, T4, T5>(string name, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, bool beLogMiss)
		{
		}

		[Token(Token = "0x6002750")]
		public void Call<T1, T2, T3, T4, T5, T6>(string name, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, bool beLogMiss)
		{
		}

		[Token(Token = "0x6002751")]
		public R1 Invoke<R1>(string name, bool beLogMiss)
		{
			return (R1)null;
		}

		[Token(Token = "0x6002752")]
		public R1 Invoke<T1, R1>(string name, T1 arg1, bool beLogMiss)
		{
			return (R1)null;
		}

		[Token(Token = "0x6002753")]
		public R1 Invoke<T1, T2, R1>(string name, T1 arg1, T2 arg2, bool beLogMiss)
		{
			return (R1)null;
		}

		[Token(Token = "0x6002754")]
		public R1 Invoke<T1, T2, T3, R1>(string name, T1 arg1, T2 arg2, T3 arg3, bool beLogMiss)
		{
			return (R1)null;
		}

		[Token(Token = "0x6002755")]
		public R1 Invoke<T1, T2, T3, T4, R1>(string name, T1 arg1, T2 arg2, T3 arg3, T4 arg4, bool beLogMiss)
		{
			return (R1)null;
		}

		[Token(Token = "0x6002756")]
		public R1 Invoke<T1, T2, T3, T4, T5, R1>(string name, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, bool beLogMiss)
		{
			return (R1)null;
		}

		[Token(Token = "0x6002757")]
		public R1 Invoke<T1, T2, T3, T4, T5, T6, R1>(string name, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, bool beLogMiss)
		{
			return (R1)null;
		}

		[Token(Token = "0x6002758")]
		[Address(RVA = "0xF05450", Offset = "0xF05450", VA = "0xF05450")]
		private void InitTypeTraits()
		{
		}

		[Token(Token = "0x6002759")]
		[Address(RVA = "0xF07004", Offset = "0xF07004", VA = "0xF07004")]
		private void InitStackTraits()
		{
		}
	}
	[Token(Token = "0x20002B2")]
	public class LuaStatePtr
	{
		[Token(Token = "0x4000C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected IntPtr L;

		[Token(Token = "0x4000C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string jit;

		[Token(Token = "0x600275B")]
		[Address(RVA = "0xF14A90", Offset = "0xF14A90", VA = "0xF14A90")]
		public int LuaUpValueIndex(int i)
		{
			return default(int);
		}

		[Token(Token = "0x600275C")]
		[Address(RVA = "0xF0ADF0", Offset = "0xF0ADF0", VA = "0xF0ADF0")]
		public IntPtr LuaNewState()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600275D")]
		[Address(RVA = "0xF14B00", Offset = "0xF14B00", VA = "0xF14B00")]
		public void LuaOpenJit()
		{
		}

		[Token(Token = "0x600275E")]
		[Address(RVA = "0xF13F20", Offset = "0xF13F20", VA = "0xF13F20")]
		public void LuaClose()
		{
		}

		[Token(Token = "0x600275F")]
		[Address(RVA = "0xF14C50", Offset = "0xF14C50", VA = "0xF14C50")]
		public IntPtr LuaNewThread()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6002760")]
		[Address(RVA = "0xF14CBC", Offset = "0xF14CBC", VA = "0xF14CBC")]
		public IntPtr LuaAtPanic(IntPtr panic)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6002761")]
		[Address(RVA = "0xF0C4CC", Offset = "0xF0C4CC", VA = "0xF0C4CC")]
		public int LuaGetTop()
		{
			return default(int);
		}

		[Token(Token = "0x6002762")]
		[Address(RVA = "0xF0B250", Offset = "0xF0B250", VA = "0xF0B250")]
		public void LuaSetTop(int newTop)
		{
		}

		[Token(Token = "0x6002763")]
		[Address(RVA = "0xF11748", Offset = "0xF11748", VA = "0xF11748")]
		public void LuaPushValue(int idx)
		{
		}

		[Token(Token = "0x6002764")]
		[Address(RVA = "0xF14D38", Offset = "0xF14D38", VA = "0xF14D38")]
		public void LuaRemove(int index)
		{
		}

		[Token(Token = "0x6002765")]
		[Address(RVA = "0xF14DB4", Offset = "0xF14DB4", VA = "0xF14DB4")]
		public void LuaInsert(int idx)
		{
		}

		[Token(Token = "0x6002766")]
		[Address(RVA = "0xF14E30", Offset = "0xF14E30", VA = "0xF14E30")]
		public void LuaReplace(int idx)
		{
		}

		[Token(Token = "0x6002767")]
		[Address(RVA = "0xF14EAC", Offset = "0xF14EAC", VA = "0xF14EAC")]
		public bool LuaCheckStack(int args)
		{
			return default(bool);
		}

		[Token(Token = "0x6002768")]
		[Address(RVA = "0xF14F34", Offset = "0xF14F34", VA = "0xF14F34")]
		public void LuaXMove(IntPtr to, int n)
		{
		}

		[Token(Token = "0x6002769")]
		[Address(RVA = "0xF14FB8", Offset = "0xF14FB8", VA = "0xF14FB8")]
		public bool LuaIsNumber(int idx)
		{
			return default(bool);
		}

		[Token(Token = "0x600276A")]
		[Address(RVA = "0xF15040", Offset = "0xF15040", VA = "0xF15040")]
		public bool LuaIsString(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x600276B")]
		[Address(RVA = "0xF150C8", Offset = "0xF150C8", VA = "0xF150C8")]
		public bool LuaIsCFunction(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x600276C")]
		[Address(RVA = "0xF15150", Offset = "0xF15150", VA = "0xF15150")]
		public bool LuaIsUserData(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x600276D")]
		[Address(RVA = "0xF13578", Offset = "0xF13578", VA = "0xF13578")]
		public bool LuaIsNil(int n)
		{
			return default(bool);
		}

		[Token(Token = "0x600276E")]
		[Address(RVA = "0xF151D8", Offset = "0xF151D8", VA = "0xF151D8")]
		public LuaTypes LuaType(int index)
		{
			return default(LuaTypes);
		}

		[Token(Token = "0x600276F")]
		[Address(RVA = "0xF15254", Offset = "0xF15254", VA = "0xF15254")]
		public string LuaTypeName(LuaTypes type)
		{
			return null;
		}

		[Token(Token = "0x6002770")]
		[Address(RVA = "0xF152D0", Offset = "0xF152D0", VA = "0xF152D0")]
		public string LuaTypeName(int idx)
		{
			return null;
		}

		[Token(Token = "0x6002771")]
		[Address(RVA = "0xF1534C", Offset = "0xF1534C", VA = "0xF1534C")]
		public bool LuaEqual(int idx1, int idx2)
		{
			return default(bool);
		}

		[Token(Token = "0x6002772")]
		[Address(RVA = "0xF153DC", Offset = "0xF153DC", VA = "0xF153DC")]
		public bool LuaRawEqual(int idx1, int idx2)
		{
			return default(bool);
		}

		[Token(Token = "0x6002773")]
		[Address(RVA = "0xF1546C", Offset = "0xF1546C", VA = "0xF1546C")]
		public bool LuaLessThan(int idx1, int idx2)
		{
			return default(bool);
		}

		[Token(Token = "0x6002774")]
		[Address(RVA = "0xF154FC", Offset = "0xF154FC", VA = "0xF154FC")]
		public double LuaToNumber(int idx)
		{
			return default(double);
		}

		[Token(Token = "0x6002775")]
		[Address(RVA = "0xF15578", Offset = "0xF15578", VA = "0xF15578")]
		public int LuaToInteger(int idx)
		{
			return default(int);
		}

		[Token(Token = "0x6002776")]
		[Address(RVA = "0xF155F4", Offset = "0xF155F4", VA = "0xF155F4")]
		public bool LuaToBoolean(int idx)
		{
			return default(bool);
		}

		[Token(Token = "0x6002777")]
		[Address(RVA = "0xF0DCB4", Offset = "0xF0DCB4", VA = "0xF0DCB4")]
		public string LuaToString(int index)
		{
			return null;
		}

		[Token(Token = "0x6002778")]
		[Address(RVA = "0xF15670", Offset = "0xF15670", VA = "0xF15670")]
		public IntPtr LuaToLString(int index, out int len)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6002779")]
		[Address(RVA = "0xF156F4", Offset = "0xF156F4", VA = "0xF156F4")]
		public IntPtr LuaToCFunction(int idx)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600277A")]
		[Address(RVA = "0xF15770", Offset = "0xF15770", VA = "0xF15770")]
		public IntPtr LuaToUserData(int idx)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600277B")]
		[Address(RVA = "0xF157EC", Offset = "0xF157EC", VA = "0xF157EC")]
		public IntPtr LuaToThread(int idx)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600277C")]
		[Address(RVA = "0xF15868", Offset = "0xF15868", VA = "0xF15868")]
		public IntPtr LuaToPointer(int idx)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600277D")]
		[Address(RVA = "0xF158E4", Offset = "0xF158E4", VA = "0xF158E4")]
		public int LuaObjLen(int index)
		{
			return default(int);
		}

		[Token(Token = "0x600277E")]
		[Address(RVA = "0xF1062C", Offset = "0xF1062C", VA = "0xF1062C")]
		public void LuaPushNil()
		{
		}

		[Token(Token = "0x600277F")]
		[Address(RVA = "0xF15960", Offset = "0xF15960", VA = "0xF15960")]
		public void LuaPushNumber(double number)
		{
		}

		[Token(Token = "0x6002780")]
		[Address(RVA = "0xF159DC", Offset = "0xF159DC", VA = "0xF159DC")]
		public void LuaPushInteger(int n)
		{
		}

		[Token(Token = "0x6002781")]
		[Address(RVA = "0xF15A58", Offset = "0xF15A58", VA = "0xF15A58")]
		public void LuaPushLString(byte[] str, int size)
		{
		}

		[Token(Token = "0x6002782")]
		[Address(RVA = "0xF0DD30", Offset = "0xF0DD30", VA = "0xF0DD30")]
		public void LuaPushString(string str)
		{
		}

		[Token(Token = "0x6002783")]
		[Address(RVA = "0xF15ADC", Offset = "0xF15ADC", VA = "0xF15ADC")]
		public void LuaPushCClosure(IntPtr fn, int n)
		{
		}

		[Token(Token = "0x6002784")]
		[Address(RVA = "0xF15B60", Offset = "0xF15B60", VA = "0xF15B60")]
		public void LuaPushBoolean(bool value)
		{
		}

		[Token(Token = "0x6002785")]
		[Address(RVA = "0xF15BE0", Offset = "0xF15BE0", VA = "0xF15BE0")]
		public void LuaPushLightUserData(IntPtr udata)
		{
		}

		[Token(Token = "0x6002786")]
		[Address(RVA = "0xF15C5C", Offset = "0xF15C5C", VA = "0xF15C5C")]
		public int LuaPushThread()
		{
			return default(int);
		}

		[Token(Token = "0x6002787")]
		[Address(RVA = "0xF134FC", Offset = "0xF134FC", VA = "0xF134FC")]
		public void LuaGetTable(int idx)
		{
		}

		[Token(Token = "0x6002788")]
		[Address(RVA = "0xF0BF98", Offset = "0xF0BF98", VA = "0xF0BF98")]
		public void LuaGetField(int index, string key)
		{
		}

		[Token(Token = "0x6002789")]
		[Address(RVA = "0xF12CC0", Offset = "0xF12CC0", VA = "0xF12CC0")]
		public void LuaRawGet(int idx)
		{
		}

		[Token(Token = "0x600278A")]
		[Address(RVA = "0xF15CC8", Offset = "0xF15CC8", VA = "0xF15CC8")]
		public void LuaRawGetI(int tableIndex, int index)
		{
		}

		[Token(Token = "0x600278B")]
		[Address(RVA = "0xF0CC38", Offset = "0xF0CC38", VA = "0xF0CC38")]
		public void LuaCreateTable(int narr = 0, int nec = 0)
		{
		}

		[Token(Token = "0x600278C")]
		[Address(RVA = "0xF15D4C", Offset = "0xF15D4C", VA = "0xF15D4C")]
		public IntPtr LuaNewUserData(int size)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600278D")]
		[Address(RVA = "0xF15DC8", Offset = "0xF15DC8", VA = "0xF15DC8")]
		public int LuaGetMetaTable(int idx)
		{
			return default(int);
		}

		[Token(Token = "0x600278E")]
		[Address(RVA = "0xF15E44", Offset = "0xF15E44", VA = "0xF15E44")]
		public void LuaGetEnv(int idx)
		{
		}

		[Token(Token = "0x600278F")]
		[Address(RVA = "0xF12FCC", Offset = "0xF12FCC", VA = "0xF12FCC")]
		public void LuaSetTable(int idx)
		{
		}

		[Token(Token = "0x6002790")]
		[Address(RVA = "0xF0C244", Offset = "0xF0C244", VA = "0xF0C244")]
		public void LuaSetField(int idx, string key)
		{
		}

		[Token(Token = "0x6002791")]
		[Address(RVA = "0xF15EC0", Offset = "0xF15EC0", VA = "0xF15EC0")]
		public void LuaRawSet(int idx)
		{
		}

		[Token(Token = "0x6002792")]
		[Address(RVA = "0xF15F3C", Offset = "0xF15F3C", VA = "0xF15F3C")]
		public void LuaRawSetI(int tableIndex, int index)
		{
		}

		[Token(Token = "0x6002793")]
		[Address(RVA = "0xF15FC0", Offset = "0xF15FC0", VA = "0xF15FC0")]
		public void LuaSetMetaTable(int objIndex)
		{
		}

		[Token(Token = "0x6002794")]
		[Address(RVA = "0xF1603C", Offset = "0xF1603C", VA = "0xF1603C")]
		public void LuaSetEnv(int idx)
		{
		}

		[Token(Token = "0x6002795")]
		[Address(RVA = "0xF160B8", Offset = "0xF160B8", VA = "0xF160B8")]
		public void LuaCall(int nArgs, int nResults)
		{
		}

		[Token(Token = "0x6002796")]
		[Address(RVA = "0xF1452C", Offset = "0xF1452C", VA = "0xF1452C")]
		public int LuaPCall(int nArgs, int nResults, int errfunc)
		{
			return default(int);
		}

		[Token(Token = "0x6002797")]
		[Address(RVA = "0xF1613C", Offset = "0xF1613C", VA = "0xF1613C")]
		public int LuaYield(int nresults)
		{
			return default(int);
		}

		[Token(Token = "0x6002798")]
		[Address(RVA = "0xF161B8", Offset = "0xF161B8", VA = "0xF161B8")]
		public int LuaResume(int narg)
		{
			return default(int);
		}

		[Token(Token = "0x6002799")]
		[Address(RVA = "0xF16234", Offset = "0xF16234", VA = "0xF16234")]
		public int LuaStatus()
		{
			return default(int);
		}

		[Token(Token = "0x600279A")]
		[Address(RVA = "0xF162A0", Offset = "0xF162A0", VA = "0xF162A0")]
		public int LuaGC(LuaGCOptions what, int data = 0)
		{
			return default(int);
		}

		[Token(Token = "0x600279B")]
		[Address(RVA = "0xF16324", Offset = "0xF16324", VA = "0xF16324")]
		public bool LuaNext(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x600279C")]
		[Address(RVA = "0xF163AC", Offset = "0xF163AC", VA = "0xF163AC")]
		public void LuaConcat(int n)
		{
		}

		[Token(Token = "0x600279D")]
		[Address(RVA = "0xF0C044", Offset = "0xF0C044", VA = "0xF0C044")]
		public void LuaPop(int amount)
		{
		}

		[Token(Token = "0x600279E")]
		[Address(RVA = "0xF16428", Offset = "0xF16428", VA = "0xF16428")]
		public void LuaNewTable()
		{
		}

		[Token(Token = "0x600279F")]
		[Address(RVA = "0xF1649C", Offset = "0xF1649C", VA = "0xF1649C")]
		public void LuaPushFunction(LuaCSFunction func)
		{
		}

		[Token(Token = "0x60027A0")]
		[Address(RVA = "0xF16558", Offset = "0xF16558", VA = "0xF16558")]
		public bool lua_isfunction(int n)
		{
			return default(bool);
		}

		[Token(Token = "0x60027A1")]
		[Address(RVA = "0xF165E0", Offset = "0xF165E0", VA = "0xF165E0")]
		public bool lua_istable(int n)
		{
			return default(bool);
		}

		[Token(Token = "0x60027A2")]
		[Address(RVA = "0xF16668", Offset = "0xF16668", VA = "0xF16668")]
		public bool lua_islightuserdata(int n)
		{
			return default(bool);
		}

		[Token(Token = "0x60027A3")]
		[Address(RVA = "0xF166F0", Offset = "0xF166F0", VA = "0xF166F0")]
		public bool lua_isnil(int n)
		{
			return default(bool);
		}

		[Token(Token = "0x60027A4")]
		[Address(RVA = "0xF16778", Offset = "0xF16778", VA = "0xF16778")]
		public bool lua_isboolean(int n)
		{
			return default(bool);
		}

		[Token(Token = "0x60027A5")]
		[Address(RVA = "0xF16800", Offset = "0xF16800", VA = "0xF16800")]
		public bool lua_isthread(int n)
		{
			return default(bool);
		}

		[Token(Token = "0x60027A6")]
		[Address(RVA = "0xF16888", Offset = "0xF16888", VA = "0xF16888")]
		public bool lua_isnone(int n)
		{
			return default(bool);
		}

		[Token(Token = "0x60027A7")]
		[Address(RVA = "0xF16910", Offset = "0xF16910", VA = "0xF16910")]
		public bool lua_isnoneornil(int n)
		{
			return default(bool);
		}

		[Token(Token = "0x60027A8")]
		[Address(RVA = "0xF16998", Offset = "0xF16998", VA = "0xF16998")]
		public void LuaRawGlobal(string name)
		{
		}

		[Token(Token = "0x60027A9")]
		[Address(RVA = "0xF13048", Offset = "0xF13048", VA = "0xF13048")]
		public void LuaSetGlobal(string name)
		{
		}

		[Token(Token = "0x60027AA")]
		[Address(RVA = "0xF0BF1C", Offset = "0xF0BF1C", VA = "0xF0BF1C")]
		public void LuaGetGlobal(string name)
		{
		}

		[Token(Token = "0x60027AB")]
		[Address(RVA = "0xF16A50", Offset = "0xF16A50", VA = "0xF16A50")]
		public void LuaOpenLibs()
		{
		}

		[Token(Token = "0x60027AC")]
		[Address(RVA = "0xF16ABC", Offset = "0xF16ABC", VA = "0xF16ABC")]
		public int AbsIndex(int i)
		{
			return default(int);
		}

		[Token(Token = "0x60027AD")]
		[Address(RVA = "0xF16B80", Offset = "0xF16B80", VA = "0xF16B80")]
		public int LuaGetN(int i)
		{
			return default(int);
		}

		[Token(Token = "0x60027AE")]
		[Address(RVA = "0xF16BFC", Offset = "0xF16BFC", VA = "0xF16BFC")]
		public double LuaCheckNumber(int stackPos)
		{
			return default(double);
		}

		[Token(Token = "0x60027AF")]
		[Address(RVA = "0xF16C78", Offset = "0xF16C78", VA = "0xF16C78")]
		public int LuaCheckInteger(int idx)
		{
			return default(int);
		}

		[Token(Token = "0x60027B0")]
		[Address(RVA = "0xF16CF4", Offset = "0xF16CF4", VA = "0xF16CF4")]
		public bool LuaCheckBoolean(int stackPos)
		{
			return default(bool);
		}

		[Token(Token = "0x60027B1")]
		[Address(RVA = "0xF16D70", Offset = "0xF16D70", VA = "0xF16D70")]
		public string LuaCheckLString(int numArg, out int len)
		{
			return null;
		}

		[Token(Token = "0x60027B2")]
		[Address(RVA = "0xF14498", Offset = "0xF14498", VA = "0xF14498")]
		public int LuaLoadBuffer(byte[] buff, int size, string name)
		{
			return default(int);
		}

		[Token(Token = "0x60027B3")]
		[Address(RVA = "0xF12F38", Offset = "0xF12F38", VA = "0xF12F38")]
		public IntPtr LuaFindTable(int idx, string fname, int szhint = 1)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60027B4")]
		[Address(RVA = "0xF10E28", Offset = "0xF10E28", VA = "0xF10E28")]
		public int LuaTypeError(int stackPos, string tname, [Optional] string t2)
		{
			return default(int);
		}

		[Token(Token = "0x60027B5")]
		[Address(RVA = "0xF16DF4", Offset = "0xF16DF4", VA = "0xF16DF4")]
		public bool LuaDoString(string chunk, string chunkName = "@LuaStatePtr.cs")
		{
			return default(bool);
		}

		[Token(Token = "0x60027B6")]
		[Address(RVA = "0xF16F04", Offset = "0xF16F04", VA = "0xF16F04")]
		public bool LuaDoFile(string fileName)
		{
			return default(bool);
		}

		[Token(Token = "0x60027B7")]
		[Address(RVA = "0xF1701C", Offset = "0xF1701C", VA = "0xF1701C")]
		public void LuaGetMetaTable(string meta)
		{
		}

		[Token(Token = "0x60027B8")]
		[Address(RVA = "0xF0CCBC", Offset = "0xF0CCBC", VA = "0xF0CCBC")]
		public int LuaRef(int t)
		{
			return default(int);
		}

		[Token(Token = "0x60027B9")]
		[Address(RVA = "0xF10698", Offset = "0xF10698", VA = "0xF10698")]
		public void LuaGetRef(int reference)
		{
		}

		[Token(Token = "0x60027BA")]
		[Address(RVA = "0xF1397C", Offset = "0xF1397C", VA = "0xF1397C")]
		public void LuaUnRef(int reference)
		{
		}

		[Token(Token = "0x60027BB")]
		[Address(RVA = "0xF0DC38", Offset = "0xF0DC38", VA = "0xF0DC38")]
		public int LuaRequire(string fileName)
		{
			return default(int);
		}

		[Token(Token = "0x60027BC")]
		[Address(RVA = "0xF17098", Offset = "0xF17098", VA = "0xF17098")]
		public void ThrowLuaException(Exception e)
		{
		}

		[Token(Token = "0x60027BD")]
		[Address(RVA = "0xF0EB70", Offset = "0xF0EB70", VA = "0xF0EB70")]
		public int ToLuaRef()
		{
			return default(int);
		}

		[Token(Token = "0x60027BE")]
		[Address(RVA = "0xF17198", Offset = "0xF17198", VA = "0xF17198")]
		public int LuaUpdate(float delta, float unscaled)
		{
			return default(int);
		}

		[Token(Token = "0x60027BF")]
		[Address(RVA = "0xF1721C", Offset = "0xF1721C", VA = "0xF1721C")]
		public int LuaLateUpdate()
		{
			return default(int);
		}

		[Token(Token = "0x60027C0")]
		[Address(RVA = "0xF17288", Offset = "0xF17288", VA = "0xF17288")]
		public int LuaFixedUpdate(float fixedTime)
		{
			return default(int);
		}

		[Token(Token = "0x60027C1")]
		[Address(RVA = "0xF0AE50", Offset = "0xF0AE50", VA = "0xF0AE50")]
		public void OpenToLuaLibs()
		{
		}

		[Token(Token = "0x60027C2")]
		[Address(RVA = "0xF17304", Offset = "0xF17304", VA = "0xF17304")]
		public void ToLuaPushTraceback()
		{
		}

		[Token(Token = "0x60027C3")]
		[Address(RVA = "0xF1441C", Offset = "0xF1441C", VA = "0xF1441C")]
		public void ToLuaUnRef(int reference)
		{
		}

		[Token(Token = "0x60027C4")]
		[Address(RVA = "0xF17370", Offset = "0xF17370", VA = "0xF17370")]
		public int LuaGetStack(int level, ref Lua_Debug ar)
		{
			return default(int);
		}

		[Token(Token = "0x60027C5")]
		[Address(RVA = "0xF173F4", Offset = "0xF173F4", VA = "0xF173F4")]
		public int LuaGetInfo(string what, ref Lua_Debug ar)
		{
			return default(int);
		}

		[Token(Token = "0x60027C6")]
		[Address(RVA = "0xF17478", Offset = "0xF17478", VA = "0xF17478")]
		public string LuaGetLocal(ref Lua_Debug ar, int n)
		{
			return null;
		}

		[Token(Token = "0x60027C7")]
		[Address(RVA = "0xF174FC", Offset = "0xF174FC", VA = "0xF174FC")]
		public string LuaSetLocal(ref Lua_Debug ar, int n)
		{
			return null;
		}

		[Token(Token = "0x60027C8")]
		[Address(RVA = "0xF17580", Offset = "0xF17580", VA = "0xF17580")]
		public string LuaGetUpvalue(int funcindex, int n)
		{
			return null;
		}

		[Token(Token = "0x60027C9")]
		[Address(RVA = "0xF17604", Offset = "0xF17604", VA = "0xF17604")]
		public string LuaSetUpvalue(int funcindex, int n)
		{
			return null;
		}

		[Token(Token = "0x60027CA")]
		[Address(RVA = "0xF17688", Offset = "0xF17688", VA = "0xF17688")]
		public int LuaSetHook(LuaHookFunc func, int mask, int count)
		{
			return default(int);
		}

		[Token(Token = "0x60027CB")]
		[Address(RVA = "0xF1771C", Offset = "0xF1771C", VA = "0xF1771C")]
		public LuaHookFunc LuaGetHook()
		{
			return null;
		}

		[Token(Token = "0x60027CC")]
		[Address(RVA = "0xF17788", Offset = "0xF17788", VA = "0xF17788")]
		public int LuaGetHookMask()
		{
			return default(int);
		}

		[Token(Token = "0x60027CD")]
		[Address(RVA = "0xF177F4", Offset = "0xF177F4", VA = "0xF177F4")]
		public int LuaGetHookCount()
		{
			return default(int);
		}

		[Token(Token = "0x60027CE")]
		[Address(RVA = "0xF05334", Offset = "0xF05334", VA = "0xF05334")]
		public LuaStatePtr()
		{
		}
	}
	[Token(Token = "0x20002B3")]
	public static class LuaStatic
	{
		[Token(Token = "0x60027CF")]
		[Address(RVA = "0xEFFD18", Offset = "0xEFFD18", VA = "0xEFFD18")]
		public static int GetMetaReference(IntPtr L, Type t)
		{
			return default(int);
		}

		[Token(Token = "0x60027D0")]
		[Address(RVA = "0xF17860", Offset = "0xF17860", VA = "0xF17860")]
		public static int GetMissMetaReference(IntPtr L, Type t)
		{
			return default(int);
		}

		[Token(Token = "0x60027D1")]
		[Address(RVA = "0xF1791C", Offset = "0xF1791C", VA = "0xF1791C")]
		public static Type GetClassType(IntPtr L, int reference)
		{
			return null;
		}

		[Token(Token = "0x60027D2")]
		[Address(RVA = "0xF179D8", Offset = "0xF179D8", VA = "0xF179D8")]
		public static LuaFunction GetFunction(IntPtr L, int reference)
		{
			return null;
		}

		[Token(Token = "0x60027D3")]
		[Address(RVA = "0xF17A94", Offset = "0xF17A94", VA = "0xF17A94")]
		public static LuaTable GetTable(IntPtr L, int reference)
		{
			return null;
		}

		[Token(Token = "0x60027D4")]
		[Address(RVA = "0xF17B50", Offset = "0xF17B50", VA = "0xF17B50")]
		public static LuaThread GetLuaThread(IntPtr L, int reference)
		{
			return null;
		}

		[Token(Token = "0x60027D5")]
		[Address(RVA = "0xF17C0C", Offset = "0xF17C0C", VA = "0xF17C0C")]
		public static void GetUnpackRayRef(IntPtr L)
		{
		}

		[Token(Token = "0x60027D6")]
		[Address(RVA = "0xF17CF4", Offset = "0xF17CF4", VA = "0xF17CF4")]
		public static void GetUnpackBounds(IntPtr L)
		{
		}

		[Token(Token = "0x60027D7")]
		[Address(RVA = "0xF17DDC", Offset = "0xF17DDC", VA = "0xF17DDC")]
		public static void GetPackRay(IntPtr L)
		{
		}

		[Token(Token = "0x60027D8")]
		[Address(RVA = "0xF17EC4", Offset = "0xF17EC4", VA = "0xF17EC4")]
		public static void GetPackRaycastHit(IntPtr L)
		{
		}

		[Token(Token = "0x60027D9")]
		[Address(RVA = "0xF17FAC", Offset = "0xF17FAC", VA = "0xF17FAC")]
		public static void GetPackTouch(IntPtr L)
		{
		}

		[Token(Token = "0x60027DA")]
		[Address(RVA = "0xF18094", Offset = "0xF18094", VA = "0xF18094")]
		public static void GetPackBounds(IntPtr L)
		{
		}

		[Token(Token = "0x60027DB")]
		[Address(RVA = "0xF1817C", Offset = "0xF1817C", VA = "0xF1817C")]
		public static int GetArrayMetatable(IntPtr L)
		{
			return default(int);
		}

		[Token(Token = "0x60027DC")]
		[Address(RVA = "0xF1822C", Offset = "0xF1822C", VA = "0xF1822C")]
		public static int GetTypeMetatable(IntPtr L)
		{
			return default(int);
		}

		[Token(Token = "0x60027DD")]
		[Address(RVA = "0xF182DC", Offset = "0xF182DC", VA = "0xF182DC")]
		public static int GetDelegateMetatable(IntPtr L)
		{
			return default(int);
		}

		[Token(Token = "0x60027DE")]
		[Address(RVA = "0xF1838C", Offset = "0xF1838C", VA = "0xF1838C")]
		public static int GetEventMetatable(IntPtr L)
		{
			return default(int);
		}

		[Token(Token = "0x60027DF")]
		[Address(RVA = "0xF1843C", Offset = "0xF1843C", VA = "0xF1843C")]
		public static int GetIterMetatable(IntPtr L)
		{
			return default(int);
		}

		[Token(Token = "0x60027E0")]
		[Address(RVA = "0xF184EC", Offset = "0xF184EC", VA = "0xF184EC")]
		public static int GetEnumObject(IntPtr L, Enum e, out object obj)
		{
			return default(int);
		}

		[Token(Token = "0x60027E1")]
		[Address(RVA = "0xF185BC", Offset = "0xF185BC", VA = "0xF185BC")]
		public static LuaCSFunction GetPreModule(IntPtr L, Type t)
		{
			return null;
		}
	}
	[Token(Token = "0x20002B4")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x93F92C", Offset = "0x93F92C")]
	public class LuaTable : LuaBaseRef
	{
		[Token(Token = "0x17000176")]
		public object Item
		{
			[Token(Token = "0x60027E3")]
			[Address(RVA = "0xF18678", Offset = "0xF18678", VA = "0xF18678")]
			get
			{
				return null;
			}
			[Token(Token = "0x60027E4")]
			[Address(RVA = "0xF187F4", Offset = "0xF187F4", VA = "0xF187F4")]
			set
			{
			}
		}

		[Token(Token = "0x17000177")]
		public object Item
		{
			[Token(Token = "0x60027E5")]
			[Address(RVA = "0xF18968", Offset = "0xF18968", VA = "0xF18968")]
			get
			{
				return null;
			}
			[Token(Token = "0x60027E6")]
			[Address(RVA = "0xF18AD0", Offset = "0xF18AD0", VA = "0xF18AD0")]
			set
			{
			}
		}

		[Token(Token = "0x17000178")]
		public int Length
		{
			[Token(Token = "0x60027E7")]
			[Address(RVA = "0xF18C30", Offset = "0xF18C30", VA = "0xF18C30")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60027E2")]
		[Address(RVA = "0xF0F270", Offset = "0xF0F270", VA = "0xF0F270")]
		public LuaTable(int reference, LuaState state)
		{
		}

		[Token(Token = "0x60027E8")]
		public T RawGetIndex<T>(int index)
		{
			return (T)null;
		}

		[Token(Token = "0x60027E9")]
		public void RawSetIndex<T>(int index, T value)
		{
		}

		[Token(Token = "0x60027EA")]
		public V RawGet<K, V>(K key)
		{
			return (V)null;
		}

		[Token(Token = "0x60027EB")]
		public void RawSet<K, V>(K key, V arg)
		{
		}

		[Token(Token = "0x60027EC")]
		public T GetTable<T>(string key)
		{
			return (T)null;
		}

		[Token(Token = "0x60027ED")]
		public void SetTable<T>(string key, T arg)
		{
		}

		[Token(Token = "0x60027EE")]
		[Address(RVA = "0xF18C8C", Offset = "0xF18C8C", VA = "0xF18C8C")]
		public LuaFunction RawGetLuaFunction(string key)
		{
			return null;
		}

		[Token(Token = "0x60027EF")]
		[Address(RVA = "0xF18E08", Offset = "0xF18E08", VA = "0xF18E08")]
		public LuaFunction GetLuaFunction(string key)
		{
			return null;
		}

		[Token(Token = "0x60027F0")]
		[Address(RVA = "0xF18F84", Offset = "0xF18F84", VA = "0xF18F84")]
		private bool BeginCall(string name, int top)
		{
			return default(bool);
		}

		[Token(Token = "0x60027F1")]
		[Address(RVA = "0xF19008", Offset = "0xF19008", VA = "0xF19008")]
		public void Call(string name)
		{
		}

		[Token(Token = "0x60027F2")]
		public void Call<T1>(string name, T1 arg1)
		{
		}

		[Token(Token = "0x60027F3")]
		public void Call<T1, T2>(string name, T1 arg1, T2 arg2)
		{
		}

		[Token(Token = "0x60027F4")]
		public void Call<T1, T2, T3>(string name, T1 arg1, T2 arg2, T3 arg3)
		{
		}

		[Token(Token = "0x60027F5")]
		public void Call<T1, T2, T3, T4>(string name, T1 arg1, T2 arg2, T3 arg3, T4 arg4)
		{
		}

		[Token(Token = "0x60027F6")]
		public void Call<T1, T2, T3, T4, T5>(string name, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5)
		{
		}

		[Token(Token = "0x60027F7")]
		public void Call<T1, T2, T3, T4, T5, T6>(string name, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6)
		{
		}

		[Token(Token = "0x60027F8")]
		public R1 Invoke<R1>(string name)
		{
			return (R1)null;
		}

		[Token(Token = "0x60027F9")]
		public R1 Invoke<T1, R1>(string name, T1 arg1)
		{
			return (R1)null;
		}

		[Token(Token = "0x60027FA")]
		public R1 Invoke<T1, T2, R1>(string name, T1 arg1, T2 arg2)
		{
			return (R1)null;
		}

		[Token(Token = "0x60027FB")]
		public R1 Invoke<T1, T2, T3, R1>(string name, T1 arg1, T2 arg2, T3 arg3)
		{
			return (R1)null;
		}

		[Token(Token = "0x60027FC")]
		public R1 Invoke<T1, T2, T3, T4, R1>(string name, T1 arg1, T2 arg2, T3 arg3, T4 arg4)
		{
			return (R1)null;
		}

		[Token(Token = "0x60027FD")]
		public R1 Invoke<T1, T2, T3, T4, T5, R1>(string name, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5)
		{
			return (R1)null;
		}

		[Token(Token = "0x60027FE")]
		public R1 Invoke<T1, T2, T3, T4, T5, T6, R1>(string name, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6)
		{
			return (R1)null;
		}

		[Token(Token = "0x60027FF")]
		[Address(RVA = "0xF19148", Offset = "0xF19148", VA = "0xF19148")]
		public string GetStringField(string name)
		{
			return null;
		}

		[Token(Token = "0x6002800")]
		[Address(RVA = "0xF192B0", Offset = "0xF192B0", VA = "0xF192B0")]
		public void AddTable(string name)
		{
		}

		[Token(Token = "0x6002801")]
		[Address(RVA = "0xF19424", Offset = "0xF19424", VA = "0xF19424")]
		public object[] ToArray()
		{
			return null;
		}

		[Token(Token = "0x6002802")]
		[Address(RVA = "0xF19654", Offset = "0xF19654", VA = "0xF19654", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6002803")]
		[Address(RVA = "0xF1970C", Offset = "0xF1970C", VA = "0xF1970C")]
		public string ToTableToString()
		{
			return null;
		}

		[Token(Token = "0x6002804")]
		[Address(RVA = "0xF19B5C", Offset = "0xF19B5C", VA = "0xF19B5C")]
		public LuaArrayTable ToArrayTable()
		{
			return null;
		}

		[Token(Token = "0x6002805")]
		[Address(RVA = "0xF143B8", Offset = "0xF143B8", VA = "0xF143B8")]
		public LuaDictTable ToDictTable()
		{
			return null;
		}

		[Token(Token = "0x6002806")]
		public LuaDictTable<K, V> ToDictTable<K, V>()
		{
			return null;
		}

		[Token(Token = "0x6002807")]
		[Address(RVA = "0xF19BC0", Offset = "0xF19BC0", VA = "0xF19BC0")]
		public LuaTable GetMetaTable()
		{
			return null;
		}

		[Token(Token = "0x6002808")]
		[Address(RVA = "0xF19D30", Offset = "0xF19D30", VA = "0xF19D30")]
		public LuaTable GetTable(string key)
		{
			return null;
		}
	}
	[Token(Token = "0x20002B5")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x93F964", Offset = "0x93F964")]
	public class LuaArrayTable : IDisposable, IEnumerable<object>, IEnumerable
	{
		[Token(Token = "0x2000463")]
		private class Enumerator : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001145")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private LuaState state;

			[Token(Token = "0x4001146")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int index;

			[Token(Token = "0x4001147")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private object current;

			[Token(Token = "0x4001148")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int top;

			[Token(Token = "0x1700023D")]
			public object Current
			{
				[Token(Token = "0x6002EC0")]
				[Address(RVA = "0x1472954", Offset = "0x1472954", VA = "0x1472954", Slot = "7")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002EBF")]
			[Address(RVA = "0x14728E4", Offset = "0x14728E4", VA = "0x14728E4")]
			public Enumerator(LuaArrayTable list)
			{
			}

			[Token(Token = "0x6002EC1")]
			[Address(RVA = "0x147295C", Offset = "0x147295C", VA = "0x147295C", Slot = "6")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002EC2")]
			[Address(RVA = "0x14729DC", Offset = "0x14729DC", VA = "0x14729DC", Slot = "8")]
			public void Reset()
			{
			}

			[Token(Token = "0x6002EC3")]
			[Address(RVA = "0x14729EC", Offset = "0x14729EC", VA = "0x14729EC", Slot = "5")]
			public void Dispose()
			{
			}
		}

		[Token(Token = "0x4000C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private LuaTable table;

		[Token(Token = "0x4000C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private LuaState state;

		[Token(Token = "0x17000179")]
		public int Length
		{
			[Token(Token = "0x600280B")]
			[Address(RVA = "0x1472624", Offset = "0x1472624", VA = "0x1472624")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700017A")]
		public object Item
		{
			[Token(Token = "0x600280C")]
			[Address(RVA = "0x1472640", Offset = "0x1472640", VA = "0x1472640")]
			get
			{
				return null;
			}
			[Token(Token = "0x600280D")]
			[Address(RVA = "0x147265C", Offset = "0x147265C", VA = "0x147265C")]
			set
			{
			}
		}

		[Token(Token = "0x6002809")]
		[Address(RVA = "0x147258C", Offset = "0x147258C", VA = "0x147258C")]
		public LuaArrayTable(LuaTable table)
		{
		}

		[Token(Token = "0x600280A")]
		[Address(RVA = "0x14725E4", Offset = "0x14725E4", VA = "0x14725E4", Slot = "4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x600280E")]
		[Address(RVA = "0x1472678", Offset = "0x1472678", VA = "0x1472678")]
		public void ForEach(Action<object> action)
		{
		}

		[Token(Token = "0x600280F")]
		[Address(RVA = "0x1472884", Offset = "0x1472884", VA = "0x1472884", Slot = "5")]
		public IEnumerator<object> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6002810")]
		[Address(RVA = "0x1472950", Offset = "0x1472950", VA = "0x1472950", Slot = "6")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}
	[Token(Token = "0x20002B6")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x93F99C", Offset = "0x93F99C")]
	public class LuaDictTable : IDisposable, IEnumerable<DictionaryEntry>, IEnumerable
	{
		[Token(Token = "0x2000464")]
		private class Enumerator : IEnumerator<DictionaryEntry>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001149")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private LuaState state;

			[Token(Token = "0x400114A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private DictionaryEntry current;

			[Token(Token = "0x400114B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int top;

			[Token(Token = "0x1700023E")]
			public DictionaryEntry Current
			{
				[Token(Token = "0x6002EC5")]
				[Address(RVA = "0x147D1F4", Offset = "0x147D1F4", VA = "0x147D1F4", Slot = "4")]
				get
				{
					return default(DictionaryEntry);
				}
			}

			[Token(Token = "0x1700023F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002EC6")]
				[Address(RVA = "0x147D200", Offset = "0x147D200", VA = "0x147D200", Slot = "7")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002EC4")]
			[Address(RVA = "0x147D17C", Offset = "0x147D17C", VA = "0x147D17C")]
			public Enumerator(LuaDictTable list)
			{
			}

			[Token(Token = "0x6002EC7")]
			[Address(RVA = "0x147D264", Offset = "0x147D264", VA = "0x147D264", Slot = "6")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002EC8")]
			[Address(RVA = "0x147D2FC", Offset = "0x147D2FC", VA = "0x147D2FC", Slot = "8")]
			public void Reset()
			{
			}

			[Token(Token = "0x6002EC9")]
			[Address(RVA = "0x147D304", Offset = "0x147D304", VA = "0x147D304", Slot = "5")]
			public void Dispose()
			{
			}
		}

		[Token(Token = "0x4000C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private LuaTable table;

		[Token(Token = "0x4000C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private LuaState state;

		[Token(Token = "0x1700017B")]
		public object Item
		{
			[Token(Token = "0x6002813")]
			[Address(RVA = "0x147CE9C", Offset = "0x147CE9C", VA = "0x147CE9C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002814")]
			[Address(RVA = "0x147CEB8", Offset = "0x147CEB8", VA = "0x147CEB8")]
			set
			{
			}
		}

		[Token(Token = "0x6002811")]
		[Address(RVA = "0x147CE14", Offset = "0x147CE14", VA = "0x147CE14")]
		public LuaDictTable(LuaTable table)
		{
		}

		[Token(Token = "0x6002812")]
		[Address(RVA = "0x147CE5C", Offset = "0x147CE5C", VA = "0x147CE5C", Slot = "4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6002815")]
		[Address(RVA = "0x147CED4", Offset = "0x147CED4", VA = "0x147CED4")]
		public Hashtable ToHashtable()
		{
			return null;
		}

		[Token(Token = "0x6002816")]
		[Address(RVA = "0x147D11C", Offset = "0x147D11C", VA = "0x147D11C", Slot = "5")]
		public IEnumerator<DictionaryEntry> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6002817")]
		[Address(RVA = "0x147D1F0", Offset = "0x147D1F0", VA = "0x147D1F0", Slot = "6")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}
	[Token(Token = "0x20002B7")]
	public struct LuaDictEntry<K, V>
	{
		[Token(Token = "0x4000C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9429AC", Offset = "0x9429AC")]
		private K <Key>k__BackingField;

		[Token(Token = "0x4000C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9429BC", Offset = "0x9429BC")]
		private V <Value>k__BackingField;

		[Token(Token = "0x1700017C")]
		public K Key
		{
			[Token(Token = "0x6002819")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A8434", Offset = "0x9A8434")]
			get
			{
				return (K)null;
			}
			[Token(Token = "0x600281A")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A8444", Offset = "0x9A8444")]
			set
			{
			}
		}

		[Token(Token = "0x1700017D")]
		public V Value
		{
			[Token(Token = "0x600281B")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A8454", Offset = "0x9A8454")]
			get
			{
				return (V)null;
			}
			[Token(Token = "0x600281C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A8464", Offset = "0x9A8464")]
			set
			{
			}
		}

		[Token(Token = "0x6002818")]
		public LuaDictEntry(K key, V value)
		{
		}
	}
	[Token(Token = "0x20002B8")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x93F9D4", Offset = "0x93F9D4")]
	public class LuaDictTable<K, V> : IDisposable, IEnumerable<LuaDictEntry<K, V>>, IEnumerable
	{
		[Token(Token = "0x2000465")]
		private class Enumerator : IEnumerator<LuaDictEntry<K, V>>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400114C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private LuaState state;

			[Token(Token = "0x400114D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private LuaDictEntry<K, V> current;

			[Token(Token = "0x400114E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int top;

			[Token(Token = "0x17000240")]
			public LuaDictEntry<K, V> Current
			{
				[Token(Token = "0x6002ECB")]
				get
				{
					return default(LuaDictEntry<K, V>);
				}
			}

			[Token(Token = "0x17000241")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002ECC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002ECA")]
			public Enumerator(LuaDictTable<K, V> list)
			{
			}

			[Token(Token = "0x6002ECD")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002ECE")]
			public void Reset()
			{
			}

			[Token(Token = "0x6002ECF")]
			public void Dispose()
			{
			}
		}

		[Token(Token = "0x4000C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private LuaTable table;

		[Token(Token = "0x4000C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private LuaState state;

		[Token(Token = "0x1700017E")]
		public V Item
		{
			[Token(Token = "0x600281F")]
			get
			{
				return (V)null;
			}
			[Token(Token = "0x6002820")]
			set
			{
			}
		}

		[Token(Token = "0x600281D")]
		public LuaDictTable(LuaTable table)
		{
		}

		[Token(Token = "0x600281E")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6002821")]
		public Dictionary<K, V> ToDictionary()
		{
			return null;
		}

		[Token(Token = "0x6002822")]
		public IEnumerator<LuaDictEntry<K, V>> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6002823")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}
	[Token(Token = "0x20002B9")]
	public class LuaThread : LuaBaseRef
	{
		[Token(Token = "0x6002824")]
		[Address(RVA = "0xF0F4FC", Offset = "0xF0F4FC", VA = "0xF0F4FC")]
		public LuaThread(int reference, LuaState state)
		{
		}

		[Token(Token = "0x6002825")]
		[Address(RVA = "0xF19DC8", Offset = "0xF19DC8", VA = "0xF19DC8")]
		protected int Resume(IntPtr L, int nArgs)
		{
			return default(int);
		}

		[Token(Token = "0x6002826")]
		[Address(RVA = "0xF19F64", Offset = "0xF19F64", VA = "0xF19F64")]
		public int Resume()
		{
			return default(int);
		}

		[Token(Token = "0x6002827")]
		public int Resume<T1>(T1 arg1)
		{
			return default(int);
		}

		[Token(Token = "0x6002828")]
		public int Resume<T1, T2>(T1 arg1, T2 arg2)
		{
			return default(int);
		}

		[Token(Token = "0x6002829")]
		public int Resume<T1, T2, T3>(T1 arg1, T2 arg2, T3 arg3)
		{
			return default(int);
		}

		[Token(Token = "0x600282A")]
		public int Resume<R1>(out R1 ret1)
		{
			return default(int);
		}

		[Token(Token = "0x600282B")]
		public int Resume<T1, R1>(T1 arg1, out R1 ret1)
		{
			return default(int);
		}

		[Token(Token = "0x600282C")]
		public int Resume<T1, T2, R1>(T1 arg1, T2 arg2, out R1 ret1)
		{
			return default(int);
		}

		[Token(Token = "0x600282D")]
		public int Resume<T1, T2, T3, R1>(T1 arg1, T2 arg2, T3 arg3, out R1 ret1)
		{
			return default(int);
		}
	}
	[Token(Token = "0x20002BA")]
	public sealed class LuaUnityLibs
	{
		[Token(Token = "0x600282E")]
		[Address(RVA = "0xF0B588", Offset = "0xF0B588", VA = "0xF0B588")]
		public static void OpenLibs(IntPtr L)
		{
		}

		[Token(Token = "0x600282F")]
		[Address(RVA = "0xF0B920", Offset = "0xF0B920", VA = "0xF0B920")]
		public static void OpenLuaLibs(IntPtr L)
		{
		}

		[Token(Token = "0x6002830")]
		[Address(RVA = "0xF1A7C4", Offset = "0xF1A7C4", VA = "0xF1A7C4")]
		private static void InitMathf(IntPtr L)
		{
		}

		[Token(Token = "0x6002831")]
		[Address(RVA = "0xF1A8AC", Offset = "0xF1A8AC", VA = "0xF1A8AC")]
		private static void InitLayer(IntPtr L)
		{
		}

		[Token(Token = "0x6002832")]
		[Address(RVA = "0xF19FE8", Offset = "0xF19FE8", VA = "0xF19FE8")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A8474", Offset = "0x9A8474")]
		private static int PerlinNoise(IntPtr L)
		{
			return default(int);
		}

		[Token(Token = "0x6002833")]
		[Address(RVA = "0xF1A9C8", Offset = "0xF1A9C8", VA = "0xF1A9C8")]
		private static void SetOutMethods(IntPtr L, string table, [Optional] LuaCSFunction getOutFunc)
		{
		}

		[Token(Token = "0x6002834")]
		[Address(RVA = "0xF1A184", Offset = "0xF1A184", VA = "0xF1A184")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A84D8", Offset = "0x9A84D8")]
		private static int GetOutVector3(IntPtr L)
		{
			return default(int);
		}

		[Token(Token = "0x6002835")]
		[Address(RVA = "0xF1A224", Offset = "0xF1A224", VA = "0xF1A224")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A853C", Offset = "0x9A853C")]
		private static int GetOutVector2(IntPtr L)
		{
			return default(int);
		}

		[Token(Token = "0x6002836")]
		[Address(RVA = "0xF1A2C4", Offset = "0xF1A2C4", VA = "0xF1A2C4")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A85A0", Offset = "0x9A85A0")]
		private static int GetOutVector4(IntPtr L)
		{
			return default(int);
		}

		[Token(Token = "0x6002837")]
		[Address(RVA = "0xF1A364", Offset = "0xF1A364", VA = "0xF1A364")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A8604", Offset = "0x9A8604")]
		private static int GetOutColor(IntPtr L)
		{
			return default(int);
		}

		[Token(Token = "0x6002838")]
		[Address(RVA = "0xF1A404", Offset = "0xF1A404", VA = "0xF1A404")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A8668", Offset = "0x9A8668")]
		private static int GetOutQuaternion(IntPtr L)
		{
			return default(int);
		}

		[Token(Token = "0x6002839")]
		[Address(RVA = "0xF1A4A4", Offset = "0xF1A4A4", VA = "0xF1A4A4")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A86CC", Offset = "0x9A86CC")]
		private static int GetOutRay(IntPtr L)
		{
			return default(int);
		}

		[Token(Token = "0x600283A")]
		[Address(RVA = "0xF1A544", Offset = "0xF1A544", VA = "0xF1A544")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A8730", Offset = "0x9A8730")]
		private static int GetOutBounds(IntPtr L)
		{
			return default(int);
		}

		[Token(Token = "0x600283B")]
		[Address(RVA = "0xF1A5E4", Offset = "0xF1A5E4", VA = "0xF1A5E4")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A8794", Offset = "0x9A8794")]
		private static int GetOutRaycastHit(IntPtr L)
		{
			return default(int);
		}

		[Token(Token = "0x600283C")]
		[Address(RVA = "0xF1A684", Offset = "0xF1A684", VA = "0xF1A684")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A87F8", Offset = "0x9A87F8")]
		private static int GetOutTouch(IntPtr L)
		{
			return default(int);
		}

		[Token(Token = "0x600283D")]
		[Address(RVA = "0xF1A724", Offset = "0xF1A724", VA = "0xF1A724")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A885C", Offset = "0x9A885C")]
		private static int GetOutLayerMask(IntPtr L)
		{
			return default(int);
		}

		[Token(Token = "0x600283E")]
		[Address(RVA = "0xF1AAA8", Offset = "0xF1AAA8", VA = "0xF1AAA8")]
		public LuaUnityLibs()
		{
		}
	}
	[Token(Token = "0x20002BB")]
	public struct LuaValueType
	{
		[Token(Token = "0x4000C76")]
		public const int None = 0;

		[Token(Token = "0x4000C77")]
		public const int Vector3 = 1;

		[Token(Token = "0x4000C78")]
		public const int Quaternion = 2;

		[Token(Token = "0x4000C79")]
		public const int Vector2 = 3;

		[Token(Token = "0x4000C7A")]
		public const int Color = 4;

		[Token(Token = "0x4000C7B")]
		public const int Vector4 = 5;

		[Token(Token = "0x4000C7C")]
		public const int Ray = 6;

		[Token(Token = "0x4000C7D")]
		public const int Bounds = 7;

		[Token(Token = "0x4000C7E")]
		public const int Touch = 8;

		[Token(Token = "0x4000C7F")]
		public const int LayerMask = 9;

		[Token(Token = "0x4000C80")]
		public const int RaycastHit = 10;

		[Token(Token = "0x4000C81")]
		public const int Int64 = 11;

		[Token(Token = "0x4000C82")]
		public const int UInt64 = 12;

		[Token(Token = "0x4000C83")]
		public const int Max = 64;

		[Token(Token = "0x4000C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int type;

		[Token(Token = "0x600283F")]
		[Address(RVA = "0x15AD0B0", Offset = "0x15AD0B0", VA = "0x15AD0B0")]
		public LuaValueType(int value)
		{
		}

		[Token(Token = "0x6002840")]
		[Address(RVA = "0x15AD0B8", Offset = "0x15AD0B8", VA = "0x15AD0B8")]
		public static implicit operator int(LuaValueType mask)
		{
			return default(int);
		}

		[Token(Token = "0x6002841")]
		[Address(RVA = "0x15AD0BC", Offset = "0x15AD0BC", VA = "0x15AD0BC")]
		public static implicit operator LuaValueType(int intVal)
		{
			return default(LuaValueType);
		}

		[Token(Token = "0x6002842")]
		[Address(RVA = "0x15AD0C4", Offset = "0x15AD0C4", VA = "0x15AD0C4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20002BC")]
	public static class LuaValueTypeName
	{
		[Token(Token = "0x4000C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string[] names;

		[Token(Token = "0x6002843")]
		[Address(RVA = "0x15AD218", Offset = "0x15AD218", VA = "0x15AD218")]
		static LuaValueTypeName()
		{
		}

		[Token(Token = "0x6002844")]
		[Address(RVA = "0x15AD12C", Offset = "0x15AD12C", VA = "0x15AD12C")]
		public static string Get(int type)
		{
			return null;
		}
	}
	[Token(Token = "0x20002BD")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x93FA0C", Offset = "0x93FA0C")]
	public class LuaObjectPool
	{
		[Token(Token = "0x2000466")]
		private class PoolNode
		{
			[Token(Token = "0x400114F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int index;

			[Token(Token = "0x4001150")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public object obj;

			[Token(Token = "0x6002ED0")]
			[Address(RVA = "0x1486F44", Offset = "0x1486F44", VA = "0x1486F44")]
			public PoolNode(int index, object obj)
			{
			}
		}

		[Token(Token = "0x4000C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<PoolNode> list;

		[Token(Token = "0x4000C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PoolNode head;

		[Token(Token = "0x4000C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int count;

		[Token(Token = "0x4000C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int collectStep;

		[Token(Token = "0x4000C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int collectedIndex;

		[Token(Token = "0x1700017F")]
		public object Item
		{
			[Token(Token = "0x6002846")]
			[Address(RVA = "0x1486F80", Offset = "0x1486F80", VA = "0x1486F80")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002845")]
		[Address(RVA = "0x1486E28", Offset = "0x1486E28", VA = "0x1486E28")]
		public LuaObjectPool()
		{
		}

		[Token(Token = "0x6002847")]
		[Address(RVA = "0x148701C", Offset = "0x148701C", VA = "0x148701C")]
		public void Clear()
		{
		}

		[Token(Token = "0x6002848")]
		[Address(RVA = "0x1487080", Offset = "0x1487080", VA = "0x1487080")]
		public int Add(object obj)
		{
			return default(int);
		}

		[Token(Token = "0x6002849")]
		[Address(RVA = "0x14871AC", Offset = "0x14871AC", VA = "0x14871AC")]
		public object TryGetValue(int index)
		{
			return null;
		}

		[Token(Token = "0x600284A")]
		[Address(RVA = "0x1487248", Offset = "0x1487248", VA = "0x1487248")]
		public object Remove(int pos)
		{
			return null;
		}

		[Token(Token = "0x600284B")]
		[Address(RVA = "0x148736C", Offset = "0x148736C", VA = "0x148736C")]
		public object Destroy(int pos)
		{
			return null;
		}

		[Token(Token = "0x600284C")]
		[Address(RVA = "0x1487440", Offset = "0x1487440", VA = "0x1487440")]
		public void StepCollect(Action<object, int> collectListener)
		{
		}

		[Token(Token = "0x600284D")]
		[Address(RVA = "0x148757C", Offset = "0x148757C", VA = "0x148757C")]
		public object Replace(int pos, object o)
		{
			return null;
		}
	}
	[Token(Token = "0x20002BE")]
	public class ObjectTranslator
	{
		[Token(Token = "0x2000467")]
		private class DelayGC
		{
			[Token(Token = "0x4001151")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int id;

			[Token(Token = "0x4001152")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UnityEngine.Object obj;

			[Token(Token = "0x4001153")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float time;

			[Token(Token = "0x6002ED1")]
			[Address(RVA = "0x15ADE9C", Offset = "0x15ADE9C", VA = "0x15ADE9C")]
			public DelayGC(int id, UnityEngine.Object obj, float time)
			{
			}
		}

		[Token(Token = "0x2000468")]
		private class CompareObject : IEqualityComparer<object>
		{
			[Token(Token = "0x6002ED2")]
			[Address(RVA = "0x15AE408", Offset = "0x15AE408", VA = "0x15AE408", Slot = "4")]
			public new bool Equals(object x, object y)
			{
				return default(bool);
			}

			[Token(Token = "0x6002ED3")]
			[Address(RVA = "0x15AE414", Offset = "0x15AE414", VA = "0x15AE414", Slot = "5")]
			public int GetHashCode(object obj)
			{
				return default(int);
			}

			[Token(Token = "0x6002ED4")]
			[Address(RVA = "0x15AD8C0", Offset = "0x15AD8C0", VA = "0x15AD8C0")]
			public CompareObject()
			{
			}
		}

		[Token(Token = "0x2000469")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9408A0", Offset = "0x9408A0")]
		private sealed class <>c__DisplayClass22_0
		{
			[Token(Token = "0x4001154")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int id;

			[Token(Token = "0x6002ED5")]
			[Address(RVA = "0x15AE08C", Offset = "0x15AE08C", VA = "0x15AE08C")]
			public <>c__DisplayClass22_0()
			{
			}

			[Token(Token = "0x6002ED6")]
			[Address(RVA = "0x15AE3E4", Offset = "0x15AE3E4", VA = "0x15AE3E4")]
			internal bool <RemoveFromGCList>b__0(DelayGC p)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9429CC", Offset = "0x9429CC")]
		private bool <LogGC>k__BackingField;

		[Token(Token = "0x4000C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly Dictionary<object, int> objectsBackMap;

		[Token(Token = "0x4000C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly LuaObjectPool objects;

		[Token(Token = "0x4000C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<DelayGC> gcList;

		[Token(Token = "0x4000C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Action<object, int> removeInvalidObject;

		[Token(Token = "0x4000C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ObjectTranslator _translator;

		[Token(Token = "0x17000180")]
		public bool LogGC
		{
			[Token(Token = "0x600284E")]
			[Address(RVA = "0x15AD75C", Offset = "0x15AD75C", VA = "0x15AD75C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A88C0", Offset = "0x9A88C0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600284F")]
			[Address(RVA = "0x15AD764", Offset = "0x15AD764", VA = "0x15AD764")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A88D0", Offset = "0x9A88D0")]
			set
			{
			}
		}

		[Token(Token = "0x6002850")]
		[Address(RVA = "0x15AD770", Offset = "0x15AD770", VA = "0x15AD770")]
		public ObjectTranslator()
		{
		}

		[Token(Token = "0x6002851")]
		[Address(RVA = "0x15AD8C8", Offset = "0x15AD8C8", VA = "0x15AD8C8")]
		public int AddObject(object obj)
		{
			return default(int);
		}

		[Token(Token = "0x6002852")]
		[Address(RVA = "0x15AD9E8", Offset = "0x15AD9E8", VA = "0x15AD9E8")]
		public static ObjectTranslator Get(IntPtr L)
		{
			return null;
		}

		[Token(Token = "0x6002853")]
		[Address(RVA = "0x15ADA50", Offset = "0x15ADA50", VA = "0x15ADA50")]
		private void RemoveObject(object o, int udata)
		{
		}

		[Token(Token = "0x6002854")]
		[Address(RVA = "0x15ADB00", Offset = "0x15ADB00", VA = "0x15ADB00")]
		public void RemoveObject(int udata)
		{
		}

		[Token(Token = "0x6002855")]
		[Address(RVA = "0x15ADC24", Offset = "0x15ADC24", VA = "0x15ADC24")]
		public object GetObject(int udata)
		{
			return null;
		}

		[Token(Token = "0x6002856")]
		[Address(RVA = "0x15ADC40", Offset = "0x15ADC40", VA = "0x15ADC40")]
		public void Destroy(int udata)
		{
		}

		[Token(Token = "0x6002857")]
		[Address(RVA = "0x15ADD64", Offset = "0x15ADD64", VA = "0x15ADD64")]
		public void DelayDestroy(int id, float time)
		{
		}

		[Token(Token = "0x6002858")]
		[Address(RVA = "0x15ADEE8", Offset = "0x15ADEE8", VA = "0x15ADEE8")]
		public bool Getudata(object o, out int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6002859")]
		[Address(RVA = "0x15ADF60", Offset = "0x15ADF60", VA = "0x15ADF60")]
		public void Destroyudata(int udata)
		{
		}

		[Token(Token = "0x600285A")]
		[Address(RVA = "0x15ADF7C", Offset = "0x15ADF7C", VA = "0x15ADF7C")]
		public void SetBack(int index, object o)
		{
		}

		[Token(Token = "0x600285B")]
		[Address(RVA = "0x15ADF98", Offset = "0x15ADF98", VA = "0x15ADF98")]
		private bool RemoveFromGCList(int id)
		{
			return default(bool);
		}

		[Token(Token = "0x600285C")]
		[Address(RVA = "0x15AE094", Offset = "0x15AE094", VA = "0x15AE094")]
		private void DestroyUnityObject(int udata, UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x600285D")]
		[Address(RVA = "0x15AE1C4", Offset = "0x15AE1C4", VA = "0x15AE1C4")]
		public void Collect()
		{
		}

		[Token(Token = "0x600285E")]
		[Address(RVA = "0x15AE324", Offset = "0x15AE324", VA = "0x15AE324")]
		public void StepCollect()
		{
		}

		[Token(Token = "0x600285F")]
		[Address(RVA = "0x15AE348", Offset = "0x15AE348", VA = "0x15AE348")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x20002BF")]
	public static class ToLua
	{
		[Token(Token = "0x200046A")]
		public delegate object LuaTableToVar(IntPtr L, int pos);

		[Token(Token = "0x200046B")]
		public delegate void LuaPushVarObject(IntPtr L, object o);

		[Token(Token = "0x4000C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Type monoType;

		[Token(Token = "0x4000C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static LuaTableToVar[] ToVarMap;

		[Token(Token = "0x4000C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Dictionary<Type, LuaPushVarObject> VarPushMap;

		[Token(Token = "0x6002861")]
		[Address(RVA = "0x15AFDC4", Offset = "0x15AFDC4", VA = "0x15AFDC4")]
		static ToLua()
		{
		}

		[Token(Token = "0x6002862")]
		[Address(RVA = "0x15B01C0", Offset = "0x15B01C0", VA = "0x15B01C0")]
		public static void OpenLibs(IntPtr L)
		{
		}

		[Token(Token = "0x6002863")]
		[Address(RVA = "0x15B05D8", Offset = "0x15B05D8", VA = "0x15B05D8")]
		private static void AddLuaLoader(IntPtr L)
		{
		}

		[Token(Token = "0x6002864")]
		[Address(RVA = "0x15AE430", Offset = "0x15AE430", VA = "0x15AE430")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A88E0", Offset = "0x9A88E0")]
		private static int Panic(IntPtr L)
		{
			return default(int);
		}

		[Token(Token = "0x6002865")]
		[Address(RVA = "0x15AE4F4", Offset = "0x15AE4F4", VA = "0x15AE4F4")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A8944", Offset = "0x9A8944")]
		private static int Print(IntPtr L)
		{
			return default(int);
		}

		[Token(Token = "0x6002866")]
		[Address(RVA = "0x15AEA70", Offset = "0x15AEA70", VA = "0x15AEA70")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A89A8", Offset = "0x9A89A8")]
		private static int Loader(IntPtr L)
		{
			return default(int);
		}

		[Token(Token = "0x6002867")]
		[Address(RVA = "0x15AEE0C", Offset = "0x15AEE0C", VA = "0x15AEE0C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A8A0C", Offset = "0x9A8A0C")]
		public static int DoFile(IntPtr L)
		{
			return default(int);
		}

		[Token(Token = "0x6002868")]
		[Address(RVA = "0x15AF23C", Offset = "0x15AF23C", VA = "0x15AF23C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A8A70", Offset = "0x9A8A70")]
		public static int LoadFile(IntPtr L)
		{
			return default(int);
		}

		[Token(Token = "0x6002869")]
		[Address(RVA = "0x15AF4FC", Offset = "0x15AF4FC", VA = "0x15AF4FC")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A8AD4", Offset = "0x9A8AD4")]
		private static int IsNull(IntPtr L)
		{
			return default(int);
		}

		[Token(Token = "0x600286A")]
		[Address(RVA = "0x15AF604", Offset = "0x15AF604", VA = "0x15AF604")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A8B38", Offset = "0x9A8B38")]
		private static int BufferToString(IntPtr L)
		{
			return default(int);
		}

		[Token(Token = "0x600286B")]
		[Address(RVA = "0x15AF924", Offset = "0x15AF924", VA = "0x15AF924")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A8B9C", Offset = "0x9A8B9C")]
		private static int GetClassType(IntPtr L)
		{
			return default(int);
		}

		[Token(Token = "0x600286C")]
		[Address(RVA = "0x15AFAEC", Offset = "0x15AFAEC", VA = "0x15AFAEC")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A8C00", Offset = "0x9A8C00")]
		private static int TableToArray(IntPtr L)
		{
			return default(int);
		}

		[Token(Token = "0x600286D")]
		[Address(RVA = "0x15AFCDC", Offset = "0x15AFCDC", VA = "0x15AFCDC")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A8C64", Offset = "0x9A8C64")]
		public static int op_ToString(IntPtr L)
		{
			return default(int);
		}

		[Token(Token = "0x600286E")]
		[Address(RVA = "0x15B10A8", Offset = "0x15B10A8", VA = "0x15B10A8")]
		public static string ToString(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x600286F")]
		[Address(RVA = "0x15B0768", Offset = "0x15B0768", VA = "0x15B0768")]
		public static object ToObject(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x6002870")]
		[Address(RVA = "0x15B11B8", Offset = "0x15B11B8", VA = "0x15B11B8")]
		public static LuaFunction ToLuaFunction(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x6002871")]
		[Address(RVA = "0x15B129C", Offset = "0x15B129C", VA = "0x15B129C")]
		public static LuaTable ToLuaTable(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x6002872")]
		[Address(RVA = "0x15B1380", Offset = "0x15B1380", VA = "0x15B1380")]
		public static LuaThread ToLuaThread(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x6002873")]
		[Address(RVA = "0x15B1464", Offset = "0x15B1464", VA = "0x15B1464")]
		public static Vector3 ToVector3(IntPtr L, int stackPos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002874")]
		[Address(RVA = "0x15B1520", Offset = "0x15B1520", VA = "0x15B1520")]
		public static Vector4 ToVector4(IntPtr L, int stackPos)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6002875")]
		[Address(RVA = "0x15B15E0", Offset = "0x15B15E0", VA = "0x15B15E0")]
		public static Vector2 ToVector2(IntPtr L, int stackPos)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002876")]
		[Address(RVA = "0x15B1688", Offset = "0x15B1688", VA = "0x15B1688")]
		public static Quaternion ToQuaternion(IntPtr L, int stackPos)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6002877")]
		[Address(RVA = "0x15B1748", Offset = "0x15B1748", VA = "0x15B1748")]
		public static Color ToColor(IntPtr L, int stackPos)
		{
			return default(Color);
		}

		[Token(Token = "0x6002878")]
		[Address(RVA = "0x15B1808", Offset = "0x15B1808", VA = "0x15B1808")]
		public static Ray ToRay(IntPtr L, int stackPos)
		{
			return default(Ray);
		}

		[Token(Token = "0x6002879")]
		[Address(RVA = "0x15B1A74", Offset = "0x15B1A74", VA = "0x15B1A74")]
		public static Bounds ToBounds(IntPtr L, int stackPos)
		{
			return default(Bounds);
		}

		[Token(Token = "0x600287A")]
		[Address(RVA = "0x15B1C74", Offset = "0x15B1C74", VA = "0x15B1C74")]
		public static LayerMask ToLayerMask(IntPtr L, int stackPos)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x600287B")]
		[Address(RVA = "0x15B1CFC", Offset = "0x15B1CFC", VA = "0x15B1CFC")]
		public static object ToVarObject(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x600287C")]
		[Address(RVA = "0x15B2154", Offset = "0x15B2154", VA = "0x15B2154")]
		public static object ToVarObject(IntPtr L, int stackPos, Type t)
		{
			return null;
		}

		[Token(Token = "0x600287D")]
		[Address(RVA = "0x15B2000", Offset = "0x15B2000", VA = "0x15B2000")]
		public static object ToVarTable(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x600287E")]
		public static T? ToNullable<T>(IntPtr L, int stackPos) where T : struct
		{
			return null;
		}

		[Token(Token = "0x600287F")]
		[Address(RVA = "0x15B251C", Offset = "0x15B251C", VA = "0x15B251C")]
		private static object ToObjectVec3(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x6002880")]
		[Address(RVA = "0x15B25B8", Offset = "0x15B25B8", VA = "0x15B25B8")]
		private static object ToObjectQuat(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x6002881")]
		[Address(RVA = "0x15B2658", Offset = "0x15B2658", VA = "0x15B2658")]
		private static object ToObjectColor(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x6002882")]
		[Address(RVA = "0x15B26F8", Offset = "0x15B26F8", VA = "0x15B26F8")]
		private static object ToObjectVec4(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x6002883")]
		[Address(RVA = "0x15B2798", Offset = "0x15B2798", VA = "0x15B2798")]
		private static object ToObjectVec2(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x6002884")]
		[Address(RVA = "0x15B2828", Offset = "0x15B2828", VA = "0x15B2828")]
		private static object ToObjectRay(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x6002885")]
		[Address(RVA = "0x15B28D0", Offset = "0x15B28D0", VA = "0x15B28D0")]
		private static object ToObjectLayerMask(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x6002886")]
		[Address(RVA = "0x15B2964", Offset = "0x15B2964", VA = "0x15B2964")]
		private static object ToObjectBounds(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x6002887")]
		[Address(RVA = "0x15B2A0C", Offset = "0x15B2A0C", VA = "0x15B2A0C")]
		public static LuaFunction CheckLuaFunction(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x6002888")]
		[Address(RVA = "0x15B2B2C", Offset = "0x15B2B2C", VA = "0x15B2B2C")]
		public static LuaTable CheckLuaTable(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x6002889")]
		[Address(RVA = "0x15B2C4C", Offset = "0x15B2C4C", VA = "0x15B2C4C")]
		public static LuaThread CheckLuaThread(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x600288A")]
		[Address(RVA = "0x15B2D6C", Offset = "0x15B2D6C", VA = "0x15B2D6C")]
		public static LuaBaseRef CheckLuaBaseRef(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x600288B")]
		[Address(RVA = "0x15B2F50", Offset = "0x15B2F50", VA = "0x15B2F50")]
		public static string CheckString(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x600288C")]
		[Address(RVA = "0x15B31B0", Offset = "0x15B31B0", VA = "0x15B31B0")]
		public static IntPtr CheckIntPtr(IntPtr L, int stackPos)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600288D")]
		[Address(RVA = "0x15B0DB4", Offset = "0x15B0DB4", VA = "0x15B0DB4")]
		public static Type CheckMonoType(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x600288E")]
		[Address(RVA = "0x15B32A4", Offset = "0x15B32A4", VA = "0x15B32A4")]
		public static IEnumerator CheckIter(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x600288F")]
		[Address(RVA = "0x15B0884", Offset = "0x15B0884", VA = "0x15B0884")]
		public static object CheckObject(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x6002890")]
		[Address(RVA = "0x15B34D8", Offset = "0x15B34D8", VA = "0x15B34D8")]
		public static object CheckObject(IntPtr L, int stackPos, Type type)
		{
			return null;
		}

		[Token(Token = "0x6002891")]
		public static object CheckObject<T>(IntPtr L, int stackPos) where T : class
		{
			return null;
		}

		[Token(Token = "0x6002892")]
		[Address(RVA = "0x15B3758", Offset = "0x15B3758", VA = "0x15B3758")]
		public static Vector3 CheckVector3(IntPtr L, int stackPos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002893")]
		[Address(RVA = "0x15B38E4", Offset = "0x15B38E4", VA = "0x15B38E4")]
		public static Quaternion CheckQuaternion(IntPtr L, int stackPos)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6002894")]
		[Address(RVA = "0x15B3A74", Offset = "0x15B3A74", VA = "0x15B3A74")]
		public static Vector2 CheckVector2(IntPtr L, int stackPos)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002895")]
		[Address(RVA = "0x15B3BE8", Offset = "0x15B3BE8", VA = "0x15B3BE8")]
		public static Vector4 CheckVector4(IntPtr L, int stackPos)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6002896")]
		[Address(RVA = "0x15B3D78", Offset = "0x15B3D78", VA = "0x15B3D78")]
		public static Color CheckColor(IntPtr L, int stackPos)
		{
			return default(Color);
		}

		[Token(Token = "0x6002897")]
		[Address(RVA = "0x15B3EE8", Offset = "0x15B3EE8", VA = "0x15B3EE8")]
		public static Ray CheckRay(IntPtr L, int stackPos)
		{
			return default(Ray);
		}

		[Token(Token = "0x6002898")]
		[Address(RVA = "0x15B402C", Offset = "0x15B402C", VA = "0x15B402C")]
		public static Bounds CheckBounds(IntPtr L, int stackPos)
		{
			return default(Bounds);
		}

		[Token(Token = "0x6002899")]
		[Address(RVA = "0x15B4170", Offset = "0x15B4170", VA = "0x15B4170")]
		public static LayerMask CheckLayerMask(IntPtr L, int stackPos)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x600289A")]
		public static T CheckValue<T>(IntPtr L, int stackPos) where T : struct
		{
			return (T)null;
		}

		[Token(Token = "0x600289B")]
		public static T? CheckNullable<T>(IntPtr L, int stackPos) where T : struct
		{
			return null;
		}

		[Token(Token = "0x600289C")]
		[Address(RVA = "0x15B429C", Offset = "0x15B429C", VA = "0x15B429C")]
		public static object CheckVarObject(IntPtr L, int stackPos, Type t)
		{
			return null;
		}

		[Token(Token = "0x600289D")]
		[Address(RVA = "0x15B4D50", Offset = "0x15B4D50", VA = "0x15B4D50")]
		public static UnityEngine.Object CheckUnityObject(IntPtr L, int stackPos, Type type)
		{
			return null;
		}

		[Token(Token = "0x600289E")]
		[Address(RVA = "0x15B5090", Offset = "0x15B5090", VA = "0x15B5090")]
		public static TrackedReference CheckTrackedReference(IntPtr L, int stackPos, Type type)
		{
			return null;
		}

		[Token(Token = "0x600289F")]
		[Address(RVA = "0x15B0AFC", Offset = "0x15B0AFC", VA = "0x15B0AFC")]
		public static object[] CheckObjectArray(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x60028A0")]
		public static T[] CheckObjectArray<T>(IntPtr L, int stackPos) where T : class
		{
			return null;
		}

		[Token(Token = "0x60028A1")]
		public static T[] CheckStructArray<T>(IntPtr L, int stackPos) where T : struct
		{
			return null;
		}

		[Token(Token = "0x60028A2")]
		[Address(RVA = "0x15B53B8", Offset = "0x15B53B8", VA = "0x15B53B8")]
		public static char[] CheckCharBuffer(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x60028A3")]
		[Address(RVA = "0x15B5564", Offset = "0x15B5564", VA = "0x15B5564")]
		public static byte[] CheckByteBuffer(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x60028A4")]
		public static T[] CheckNumberArray<T>(IntPtr L, int stackPos) where T : struct
		{
			return null;
		}

		[Token(Token = "0x60028A5")]
		[Address(RVA = "0x15B5768", Offset = "0x15B5768", VA = "0x15B5768")]
		public static bool[] CheckBoolArray(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x60028A6")]
		[Address(RVA = "0x15B5A54", Offset = "0x15B5A54", VA = "0x15B5A54")]
		public static string[] CheckStringArray(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x60028A7")]
		[Address(RVA = "0x15B5DD8", Offset = "0x15B5DD8", VA = "0x15B5DD8")]
		public static object CheckGenericObject(IntPtr L, int stackPos, Type type, out Type ArgType)
		{
			return null;
		}

		[Token(Token = "0x60028A8")]
		[Address(RVA = "0x15B5F74", Offset = "0x15B5F74", VA = "0x15B5F74")]
		public static object CheckGenericObject(IntPtr L, int stackPos, Type type, out Type t1, out Type t2)
		{
			return null;
		}

		[Token(Token = "0x60028A9")]
		[Address(RVA = "0x15B612C", Offset = "0x15B612C", VA = "0x15B612C")]
		public static object CheckGenericObject(IntPtr L, int stackPos, Type type)
		{
			return null;
		}

		[Token(Token = "0x60028AA")]
		[Address(RVA = "0x15B6280", Offset = "0x15B6280", VA = "0x15B6280")]
		public static object[] ToParamsObject(IntPtr L, int stackPos, int count)
		{
			return null;
		}

		[Token(Token = "0x60028AB")]
		public static T[] ToParamsObject<T>(IntPtr L, int stackPos, int count)
		{
			return null;
		}

		[Token(Token = "0x60028AC")]
		[Address(RVA = "0x15B63A8", Offset = "0x15B63A8", VA = "0x15B63A8")]
		public static string[] ToParamsString(IntPtr L, int stackPos, int count)
		{
			return null;
		}

		[Token(Token = "0x60028AD")]
		public static T[] ToParamsNumber<T>(IntPtr L, int stackPos, int count) where T : struct
		{
			return null;
		}

		[Token(Token = "0x60028AE")]
		[Address(RVA = "0x15B64D0", Offset = "0x15B64D0", VA = "0x15B64D0")]
		public static char[] ToParamsChar(IntPtr L, int stackPos, int count)
		{
			return null;
		}

		[Token(Token = "0x60028AF")]
		[Address(RVA = "0x15B65D4", Offset = "0x15B65D4", VA = "0x15B65D4")]
		public static bool[] CheckParamsBool(IntPtr L, int stackPos, int count)
		{
			return null;
		}

		[Token(Token = "0x60028B0")]
		public static T[] CheckParamsNumber<T>(IntPtr L, int stackPos, int count) where T : struct
		{
			return null;
		}

		[Token(Token = "0x60028B1")]
		[Address(RVA = "0x15B66DC", Offset = "0x15B66DC", VA = "0x15B66DC")]
		public static char[] CheckParamsChar(IntPtr L, int stackPos, int count)
		{
			return null;
		}

		[Token(Token = "0x60028B2")]
		[Address(RVA = "0x15B67E0", Offset = "0x15B67E0", VA = "0x15B67E0")]
		public static string[] CheckParamsString(IntPtr L, int stackPos, int count)
		{
			return null;
		}

		[Token(Token = "0x60028B3")]
		public static T[] CheckParamsObject<T>(IntPtr L, int stackPos, int count)
		{
			return null;
		}

		[Token(Token = "0x60028B4")]
		[Address(RVA = "0x15B6908", Offset = "0x15B6908", VA = "0x15B6908")]
		public static char[] ToCharBuffer(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x60028B5")]
		[Address(RVA = "0x15B6A34", Offset = "0x15B6A34", VA = "0x15B6A34")]
		public static byte[] ToByteBuffer(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x60028B6")]
		public static T[] ToNumberArray<T>(IntPtr L, int stackPos) where T : struct
		{
			return null;
		}

		[Token(Token = "0x60028B7")]
		[Address(RVA = "0x15B6BC4", Offset = "0x15B6BC4", VA = "0x15B6BC4")]
		public static bool[] ToBoolArray(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x60028B8")]
		[Address(RVA = "0x15B6E34", Offset = "0x15B6E34", VA = "0x15B6E34")]
		public static string[] ToStringArray(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x60028B9")]
		[Address(RVA = "0x15B713C", Offset = "0x15B713C", VA = "0x15B713C")]
		public static object[] ToObjectArray(IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x60028BA")]
		public static T[] ToObjectArray<T>(IntPtr L, int stackPos) where T : class
		{
			return null;
		}

		[Token(Token = "0x60028BB")]
		public static T[] ToStructArray<T>(IntPtr L, int stackPos) where T : struct
		{
			return null;
		}

		[Token(Token = "0x60028BC")]
		[Address(RVA = "0x15B7378", Offset = "0x15B7378", VA = "0x15B7378")]
		public static void Push(IntPtr L, Vector3 v3)
		{
		}

		[Token(Token = "0x60028BD")]
		[Address(RVA = "0x15B7408", Offset = "0x15B7408", VA = "0x15B7408")]
		public static void Push(IntPtr L, Vector2 v2)
		{
		}

		[Token(Token = "0x60028BE")]
		[Address(RVA = "0x15B7488", Offset = "0x15B7488", VA = "0x15B7488")]
		public static void Push(IntPtr L, Vector4 v4)
		{
		}

		[Token(Token = "0x60028BF")]
		[Address(RVA = "0x15B7520", Offset = "0x15B7520", VA = "0x15B7520")]
		public static void Push(IntPtr L, Quaternion q)
		{
		}

		[Token(Token = "0x60028C0")]
		[Address(RVA = "0x15B75B8", Offset = "0x15B75B8", VA = "0x15B75B8")]
		public static void Push(IntPtr L, Color clr)
		{
		}

		[Token(Token = "0x60028C1")]
		[Address(RVA = "0x15B7650", Offset = "0x15B7650", VA = "0x15B7650")]
		public static void Push(IntPtr L, Ray ray)
		{
		}

		[Token(Token = "0x60028C2")]
		[Address(RVA = "0x15B77C0", Offset = "0x15B77C0", VA = "0x15B77C0")]
		public static void Push(IntPtr L, Bounds bound)
		{
		}

		[Token(Token = "0x60028C3")]
		[Address(RVA = "0x15B7930", Offset = "0x15B7930", VA = "0x15B7930")]
		public static void Push(IntPtr L, RaycastHit hit)
		{
		}

		[Token(Token = "0x60028C4")]
		[Address(RVA = "0x15B7BD0", Offset = "0x15B7BD0", VA = "0x15B7BD0")]
		public static void Push(IntPtr L, RaycastHit hit, int flag)
		{
		}

		[Token(Token = "0x60028C5")]
		[Address(RVA = "0x15B7F60", Offset = "0x15B7F60", VA = "0x15B7F60")]
		public static void Push(IntPtr L, Touch t)
		{
		}

		[Token(Token = "0x60028C6")]
		[Address(RVA = "0x15B8004", Offset = "0x15B8004", VA = "0x15B8004")]
		public static void Push(IntPtr L, Touch t, int flag)
		{
		}

		[Token(Token = "0x60028C7")]
		[Address(RVA = "0x15B82FC", Offset = "0x15B82FC", VA = "0x15B82FC")]
		public static void PushLayerMask(IntPtr L, LayerMask l)
		{
		}

		[Token(Token = "0x60028C8")]
		[Address(RVA = "0x15B838C", Offset = "0x15B838C", VA = "0x15B838C")]
		public static void Push(IntPtr L, LuaByteBuffer bb)
		{
		}

		[Token(Token = "0x60028C9")]
		[Address(RVA = "0x15B8410", Offset = "0x15B8410", VA = "0x15B8410")]
		public static void PushByteBuffer(IntPtr L, byte[] buffer)
		{
		}

		[Token(Token = "0x60028CA")]
		[Address(RVA = "0x15B0FE0", Offset = "0x15B0FE0", VA = "0x15B0FE0")]
		public static void Push(IntPtr L, Array array)
		{
		}

		[Token(Token = "0x60028CB")]
		[Address(RVA = "0x15B860C", Offset = "0x15B860C", VA = "0x15B860C")]
		public static void Push(IntPtr L, LuaBaseRef lbr)
		{
		}

		[Token(Token = "0x60028CC")]
		[Address(RVA = "0x15B0A04", Offset = "0x15B0A04", VA = "0x15B0A04")]
		public static void Push(IntPtr L, Type t)
		{
		}

		[Token(Token = "0x60028CD")]
		[Address(RVA = "0x15B86F0", Offset = "0x15B86F0", VA = "0x15B86F0")]
		public static void Push(IntPtr L, Delegate ev)
		{
		}

		[Token(Token = "0x60028CE")]
		[Address(RVA = "0x15B87B8", Offset = "0x15B87B8", VA = "0x15B87B8")]
		public static void Push(IntPtr L, EventObject ev)
		{
		}

		[Token(Token = "0x60028CF")]
		[Address(RVA = "0x15B8880", Offset = "0x15B8880", VA = "0x15B8880")]
		public static void Push(IntPtr L, IEnumerator iter)
		{
		}

		[Token(Token = "0x60028D0")]
		[Address(RVA = "0x15B8990", Offset = "0x15B8990", VA = "0x15B8990")]
		public static void Push(IntPtr L, Enum e)
		{
		}

		[Token(Token = "0x60028D1")]
		public static void PushOut<T>(IntPtr L, LuaOut<T> lo)
		{
		}

		[Token(Token = "0x60028D2")]
		[Address(RVA = "0x15B8A30", Offset = "0x15B8A30", VA = "0x15B8A30")]
		public static void PushStruct(IntPtr L, object o)
		{
		}

		[Token(Token = "0x60028D3")]
		public static void PushValue<T>(IntPtr L, T v) where T : struct
		{
		}

		[Token(Token = "0x60028D4")]
		public static void PusNullable<T>(IntPtr L, T? v) where T : struct
		{
		}

		[Token(Token = "0x60028D5")]
		[Address(RVA = "0x15B8494", Offset = "0x15B8494", VA = "0x15B8494")]
		public static void PushUserData(IntPtr L, object o, int reference)
		{
		}

		[Token(Token = "0x60028D6")]
		[Address(RVA = "0x15B8D34", Offset = "0x15B8D34", VA = "0x15B8D34")]
		private static int LuaPCall(IntPtr L, LuaCSFunction func)
		{
			return default(int);
		}

		[Token(Token = "0x60028D7")]
		[Address(RVA = "0x15B8C8C", Offset = "0x15B8C8C", VA = "0x15B8C8C")]
		public static int LoadPreType(IntPtr L, Type type)
		{
			return default(int);
		}

		[Token(Token = "0x60028D8")]
		[Address(RVA = "0x15B8EBC", Offset = "0x15B8EBC", VA = "0x15B8EBC")]
		private static void PushUserObject(IntPtr L, object o)
		{
		}

		[Token(Token = "0x60028D9")]
		[Address(RVA = "0x15B7AF0", Offset = "0x15B7AF0", VA = "0x15B7AF0")]
		public static void Push(IntPtr L, UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x60028DA")]
		[Address(RVA = "0x15B8F98", Offset = "0x15B8F98", VA = "0x15B8F98")]
		public static void Push(IntPtr L, TrackedReference obj)
		{
		}

		[Token(Token = "0x60028DB")]
		public static void PushSealed<T>(IntPtr L, T o)
		{
		}

		[Token(Token = "0x60028DC")]
		[Address(RVA = "0x15B9058", Offset = "0x15B9058", VA = "0x15B9058")]
		public static void PushObject(IntPtr L, object o)
		{
		}

		[Token(Token = "0x60028DD")]
		[Address(RVA = "0x15B91C8", Offset = "0x15B91C8", VA = "0x15B91C8")]
		public static void Push(IntPtr L, nil obj)
		{
		}

		[Token(Token = "0x60028DE")]
		[Address(RVA = "0x15B9230", Offset = "0x15B9230", VA = "0x15B9230")]
		public static void Push(IntPtr L, object obj)
		{
		}

		[Token(Token = "0x60028DF")]
		[Address(RVA = "0x15BA57C", Offset = "0x15BA57C", VA = "0x15BA57C")]
		public static void SetBack(IntPtr L, int stackPos, object o)
		{
		}

		[Token(Token = "0x60028E0")]
		[Address(RVA = "0x15BA6A0", Offset = "0x15BA6A0", VA = "0x15BA6A0")]
		public static int Destroy(IntPtr L)
		{
			return default(int);
		}

		[Token(Token = "0x60028E1")]
		[Address(RVA = "0x15BA79C", Offset = "0x15BA79C", VA = "0x15BA79C")]
		public static void CheckArgsCount(IntPtr L, string method, int count)
		{
		}

		[Token(Token = "0x60028E2")]
		[Address(RVA = "0x15BA8A8", Offset = "0x15BA8A8", VA = "0x15BA8A8")]
		public static void CheckArgsCount(IntPtr L, int count)
		{
		}

		[Token(Token = "0x60028E3")]
		[Address(RVA = "0x15BA9A4", Offset = "0x15BA9A4", VA = "0x15BA9A4")]
		public static Delegate CheckDelegate(Type t, IntPtr L, int stackPos)
		{
			return null;
		}

		[Token(Token = "0x60028E4")]
		public static Delegate CheckDelegate<T>(IntPtr L, int stackPos)
		{
			return null;
		}
	}
	[Token(Token = "0x20002C0")]
	public static class TypeChecker
	{
		[Token(Token = "0x4000C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Type[] LuaValueTypeMap;

		[Token(Token = "0x4000C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Type monoType;

		[Token(Token = "0x60028E5")]
		[Address(RVA = "0x15BACCC", Offset = "0x15BACCC", VA = "0x15BACCC")]
		static TypeChecker()
		{
		}

		[Token(Token = "0x60028E6")]
		[Address(RVA = "0x15AD998", Offset = "0x15AD998", VA = "0x15AD998")]
		public static bool IsValueType(Type t)
		{
			return default(bool);
		}

		[Token(Token = "0x60028E7")]
		[Address(RVA = "0x15BB17C", Offset = "0x15BB17C", VA = "0x15BB17C")]
		public static bool CheckTypes(IntPtr L, int begin, Type type0)
		{
			return default(bool);
		}

		[Token(Token = "0x60028E8")]
		[Address(RVA = "0x15BB624", Offset = "0x15BB624", VA = "0x15BB624")]
		public static bool CheckTypes(IntPtr L, int begin, Type type0, Type type1)
		{
			return default(bool);
		}

		[Token(Token = "0x60028E9")]
		[Address(RVA = "0x15BB6F0", Offset = "0x15BB6F0", VA = "0x15BB6F0")]
		public static bool CheckTypes(IntPtr L, int begin, Type type0, Type type1, Type type2)
		{
			return default(bool);
		}

		[Token(Token = "0x60028EA")]
		[Address(RVA = "0x15BB7EC", Offset = "0x15BB7EC", VA = "0x15BB7EC")]
		public static bool CheckTypes(IntPtr L, int begin, Type type0, Type type1, Type type2, Type type3)
		{
			return default(bool);
		}

		[Token(Token = "0x60028EB")]
		[Address(RVA = "0x15BB924", Offset = "0x15BB924", VA = "0x15BB924")]
		public static bool CheckTypes(IntPtr L, int begin, Type type0, Type type1, Type type2, Type type3, Type type4)
		{
			return default(bool);
		}

		[Token(Token = "0x60028EC")]
		[Address(RVA = "0x15BBA8C", Offset = "0x15BBA8C", VA = "0x15BBA8C")]
		public static bool CheckTypes(IntPtr L, int begin, Type type0, Type type1, Type type2, Type type3, Type type4, Type type5)
		{
			return default(bool);
		}

		[Token(Token = "0x60028ED")]
		[Address(RVA = "0x15BBC30", Offset = "0x15BBC30", VA = "0x15BBC30")]
		public static bool CheckTypes(IntPtr L, int begin, Type type0, Type type1, Type type2, Type type3, Type type4, Type type5, Type type6)
		{
			return default(bool);
		}

		[Token(Token = "0x60028EE")]
		[Address(RVA = "0x15BBE04", Offset = "0x15BBE04", VA = "0x15BBE04")]
		public static bool CheckTypes(IntPtr L, int begin, Type type0, Type type1, Type type2, Type type3, Type type4, Type type5, Type type6, Type type7)
		{
			return default(bool);
		}

		[Token(Token = "0x60028EF")]
		[Address(RVA = "0x15BC018", Offset = "0x15BC018", VA = "0x15BC018")]
		public static bool CheckTypes(IntPtr L, int begin, Type type0, Type type1, Type type2, Type type3, Type type4, Type type5, Type type6, Type type7, Type type8)
		{
			return default(bool);
		}

		[Token(Token = "0x60028F0")]
		[Address(RVA = "0x15BC260", Offset = "0x15BC260", VA = "0x15BC260")]
		public static bool CheckTypes(IntPtr L, int begin, Type type0, Type type1, Type type2, Type type3, Type type4, Type type5, Type type6, Type type7, Type type8, Type type9)
		{
			return default(bool);
		}

		[Token(Token = "0x60028F1")]
		[Address(RVA = "0x15BC4DC", Offset = "0x15BC4DC", VA = "0x15BC4DC")]
		public static bool CheckTypes(IntPtr L, int begin, params Type[] types)
		{
			return default(bool);
		}

		[Token(Token = "0x60028F2")]
		[Address(RVA = "0x15BC5C8", Offset = "0x15BC5C8", VA = "0x15BC5C8")]
		public static bool CheckParamsType(IntPtr L, Type t, int begin, int count)
		{
			return default(bool);
		}

		[Token(Token = "0x60028F3")]
		[Address(RVA = "0x15BC6D0", Offset = "0x15BC6D0", VA = "0x15BC6D0")]
		private static bool IsNilType(Type t)
		{
			return default(bool);
		}

		[Token(Token = "0x60028F4")]
		[Address(RVA = "0x15B4C7C", Offset = "0x15B4C7C", VA = "0x15B4C7C")]
		public static bool IsNullable(Type t)
		{
			return default(bool);
		}

		[Token(Token = "0x60028F5")]
		[Address(RVA = "0x15BC75C", Offset = "0x15BC75C", VA = "0x15BC75C")]
		public static Type GetNullableType(Type t)
		{
			return null;
		}

		[Token(Token = "0x60028F6")]
		[Address(RVA = "0x15BB1F8", Offset = "0x15BB1F8", VA = "0x15BB1F8")]
		public static bool CheckType(IntPtr L, Type type, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60028F7")]
		public static T ChangeType<T>(object temp, Type type)
		{
			return (T)null;
		}

		[Token(Token = "0x60028F8")]
		[Address(RVA = "0x15BCE7C", Offset = "0x15BCE7C", VA = "0x15BCE7C")]
		public static object ChangeType(object temp, Type type)
		{
			return null;
		}

		[Token(Token = "0x60028F9")]
		[Address(RVA = "0x15BC9A0", Offset = "0x15BC9A0", VA = "0x15BC9A0")]
		private static bool IsMatchUserData(IntPtr L, Type t, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60028FA")]
		[Address(RVA = "0x15BC860", Offset = "0x15BC860", VA = "0x15BC860")]
		public static bool IsNumberType(Type t)
		{
			return default(bool);
		}

		[Token(Token = "0x60028FB")]
		[Address(RVA = "0x15BCC3C", Offset = "0x15BCC3C", VA = "0x15BCC3C")]
		public static bool IsUserTable(Type t, IntPtr L, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60028FC")]
		public static bool CheckTypes<T1>(IntPtr L, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60028FD")]
		public static bool CheckTypes<T1, T2>(IntPtr L, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60028FE")]
		public static bool CheckTypes<T1, T2, T3>(IntPtr L, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60028FF")]
		public static bool CheckTypes<T1, T2, T3, T4>(IntPtr L, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6002900")]
		public static bool CheckTypes<T1, T2, T3, T4, T5>(IntPtr L, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6002901")]
		public static bool CheckTypes<T1, T2, T3, T4, T5, T6>(IntPtr L, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6002902")]
		public static bool CheckTypes<T1, T2, T3, T4, T5, T6, T7>(IntPtr L, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6002903")]
		public static bool CheckTypes<T1, T2, T3, T4, T5, T6, T7, T8>(IntPtr L, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6002904")]
		public static bool CheckTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9>(IntPtr L, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6002905")]
		public static bool CheckTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(IntPtr L, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6002906")]
		public static bool CheckTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(IntPtr L, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6002907")]
		public static bool CheckTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(IntPtr L, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6002908")]
		public static bool CheckParamsType<T>(IntPtr L, int begin, int count)
		{
			return default(bool);
		}

		[Token(Token = "0x6002909")]
		[Address(RVA = "0x15BCFE4", Offset = "0x15BCFE4", VA = "0x15BCFE4")]
		public static bool CheckDelegateType(Type type, IntPtr L, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x600290A")]
		[Address(RVA = "0x15BD184", Offset = "0x15BD184", VA = "0x15BD184")]
		public static bool CheckEnumType(Type type, IntPtr L, int pos)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002C1")]
	public static class TypeTraits<T>
	{
		[Serializable]
		[Token(Token = "0x200046C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9408B0", Offset = "0x9408B0")]
		private sealed class <>c
		{
			[Token(Token = "0x4001155")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001156")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Action <>9__9_0;

			[Token(Token = "0x6002EE0")]
			public <>c()
			{
			}

			[Token(Token = "0x6002EE1")]
			internal void <GetLuaReference>b__9_0()
			{
			}
		}

		[Token(Token = "0x4000C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Func<IntPtr, int, bool> Check;

		[Token(Token = "0x4000C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Type type;

		[Token(Token = "0x4000C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool IsValueType;

		[Token(Token = "0x4000C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool IsArray;

		[Token(Token = "0x4000C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string typeName;

		[Token(Token = "0x4000C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int nilType;

		[Token(Token = "0x4000C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int metaref;

		[Token(Token = "0x600290B")]
		public static void Init(Func<IntPtr, int, bool> check)
		{
		}

		[Token(Token = "0x600290C")]
		public static string GetTypeName()
		{
			return null;
		}

		[Token(Token = "0x600290D")]
		public static int GetLuaReference(IntPtr L)
		{
			return default(int);
		}

		[Token(Token = "0x600290E")]
		private static bool DefaultCheck(IntPtr L, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x600290F")]
		private static bool IsNilType()
		{
			return default(bool);
		}

		[Token(Token = "0x6002910")]
		private static bool IsUserData(IntPtr L, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6002911")]
		private static bool IsUserTable(IntPtr L, int pos)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002C2")]
	public static class DelegateTraits<T>
	{
		[Token(Token = "0x4000C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static DelegateFactory.DelegateCreate _Create;

		[Token(Token = "0x6002913")]
		public static void Init(DelegateFactory.DelegateCreate func)
		{
		}

		[Token(Token = "0x6002914")]
		public static Delegate Create(LuaFunction func)
		{
			return null;
		}

		[Token(Token = "0x6002915")]
		public static Delegate Create(LuaFunction func, LuaTable self)
		{
			return null;
		}
	}
	[Token(Token = "0x20002C3")]
	public static class StackTraits<T>
	{
		[Token(Token = "0x4000C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Action<IntPtr, T> Push;

		[Token(Token = "0x4000C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Func<IntPtr, int, T> Check;

		[Token(Token = "0x4000CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Func<IntPtr, int, T> To;

		[Token(Token = "0x6002917")]
		public static void Init(Action<IntPtr, T> push, Func<IntPtr, int, T> check, Func<IntPtr, int, T> to)
		{
		}

		[Token(Token = "0x6002918")]
		private static Action<IntPtr, T> SelectPush()
		{
			return null;
		}

		[Token(Token = "0x6002919")]
		private static void PushValue(IntPtr L, T o)
		{
		}

		[Token(Token = "0x600291A")]
		private static void PushObject(IntPtr L, T o)
		{
		}

		[Token(Token = "0x600291B")]
		private static void PushArray(IntPtr L, T array)
		{
		}

		[Token(Token = "0x600291C")]
		private static T DefaultTo(IntPtr L, int pos)
		{
			return (T)null;
		}

		[Token(Token = "0x600291D")]
		private static T DefaultCheck(IntPtr L, int stackPos)
		{
			return (T)null;
		}
	}
	[Token(Token = "0x20002C4")]
	[Flags]
	public enum InjectType
	{
		[Token(Token = "0x4000CA2")]
		None = 0,
		[Token(Token = "0x4000CA3")]
		After = 1,
		[Token(Token = "0x4000CA4")]
		Before = 2,
		[Token(Token = "0x4000CA5")]
		Replace = 4,
		[Token(Token = "0x4000CA6")]
		ReplaceWithPreInvokeBase = 8,
		[Token(Token = "0x4000CA7")]
		ReplaceWithPostInvokeBase = 0x10
	}
	[Token(Token = "0x20002C5")]
	public class LuaInjectionStation
	{
		[Token(Token = "0x4000CA8")]
		public const byte NOT_INJECTION_FLAG = 0;

		[Token(Token = "0x4000CA9")]
		public const byte INVALID_INJECTION_FLAG = byte.MaxValue;

		[Token(Token = "0x4000CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int cacheSize;

		[Token(Token = "0x4000CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static byte[] injectionFlagCache;

		[Token(Token = "0x4000CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static LuaFunction[] injectFunctionCache;

		[Token(Token = "0x600291F")]
		[Address(RVA = "0x1481CE0", Offset = "0x1481CE0", VA = "0x1481CE0")]
		static LuaInjectionStation()
		{
		}

		[Token(Token = "0x6002920")]
		[Address(RVA = "0x1481D70", Offset = "0x1481D70", VA = "0x1481D70")]
		[NoToLua]
		public static byte GetInjectFlag(int index)
		{
			return default(byte);
		}

		[Token(Token = "0x6002921")]
		[Address(RVA = "0x1481E0C", Offset = "0x1481E0C", VA = "0x1481E0C")]
		[NoToLua]
		public static LuaFunction GetInjectionFunction(int index)
		{
			return null;
		}

		[Token(Token = "0x6002922")]
		[Address(RVA = "0x1481EA0", Offset = "0x1481EA0", VA = "0x1481EA0")]
		public static void CacheInjectFunction(int index, byte injectFlag, LuaFunction func)
		{
		}

		[Token(Token = "0x6002923")]
		[Address(RVA = "0x1481FC0", Offset = "0x1481FC0", VA = "0x1481FC0")]
		public static void Clear()
		{
		}

		[Token(Token = "0x6002924")]
		[Address(RVA = "0x14820C8", Offset = "0x14820C8", VA = "0x14820C8")]
		public LuaInjectionStation()
		{
		}
	}
	[Token(Token = "0x20002C6")]
	public sealed class LuaConstructor
	{
		[Token(Token = "0x4000CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ConstructorInfo method;

		[Token(Token = "0x4000CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<Type> list;

		[Token(Token = "0x6002925")]
		[Address(RVA = "0x1473600", Offset = "0x1473600", VA = "0x1473600")]
		[NoToLua]
		public LuaConstructor(ConstructorInfo func, Type[] types)
		{
		}

		[Token(Token = "0x6002926")]
		[Address(RVA = "0x1473690", Offset = "0x1473690", VA = "0x1473690")]
		public int Call(IntPtr L)
		{
			return default(int);
		}

		[Token(Token = "0x6002927")]
		[Address(RVA = "0x1473948", Offset = "0x1473948", VA = "0x1473948")]
		public void Destroy()
		{
		}
	}
	[Token(Token = "0x20002C7")]
	public sealed class LuaField
	{
		[Token(Token = "0x4000CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private FieldInfo field;

		[Token(Token = "0x4000CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Type kclass;

		[Token(Token = "0x6002928")]
		[Address(RVA = "0x147DF54", Offset = "0x147DF54", VA = "0x147DF54")]
		[NoToLua]
		public LuaField(FieldInfo info, Type t)
		{
		}

		[Token(Token = "0x6002929")]
		[Address(RVA = "0x147DF8C", Offset = "0x147DF8C", VA = "0x147DF8C")]
		public int Get(IntPtr L)
		{
			return default(int);
		}

		[Token(Token = "0x600292A")]
		[Address(RVA = "0x147E2B4", Offset = "0x147E2B4", VA = "0x147E2B4")]
		public int Set(IntPtr L)
		{
			return default(int);
		}
	}
	[Token(Token = "0x20002C8")]
	public sealed class LuaMethod
	{
		[Token(Token = "0x4000CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private MethodInfo method;

		[Token(Token = "0x4000CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<Type> list;

		[Token(Token = "0x4000CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Type kclass;

		[Token(Token = "0x600292B")]
		[Address(RVA = "0x1484E94", Offset = "0x1484E94", VA = "0x1484E94")]
		[NoToLua]
		public LuaMethod(MethodInfo md, Type t, Type[] types)
		{
		}

		[Token(Token = "0x600292C")]
		[Address(RVA = "0x1484F60", Offset = "0x1484F60", VA = "0x1484F60")]
		public int Call(IntPtr L)
		{
			return default(int);
		}

		[Token(Token = "0x600292D")]
		[Address(RVA = "0x14852F8", Offset = "0x14852F8", VA = "0x14852F8")]
		public void Destroy()
		{
		}
	}
	[Token(Token = "0x20002C9")]
	public sealed class LuaProperty
	{
		[Token(Token = "0x4000CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PropertyInfo property;

		[Token(Token = "0x4000CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Type kclass;

		[Token(Token = "0x600292E")]
		[Address(RVA = "0x1487654", Offset = "0x1487654", VA = "0x1487654")]
		[NoToLua]
		public LuaProperty(PropertyInfo prop, Type t)
		{
		}

		[Token(Token = "0x600292F")]
		[Address(RVA = "0x148768C", Offset = "0x148768C", VA = "0x148768C")]
		public int Get(IntPtr L)
		{
			return default(int);
		}

		[Token(Token = "0x6002930")]
		[Address(RVA = "0x148798C", Offset = "0x148798C", VA = "0x148798C")]
		public int Set(IntPtr L)
		{
			return default(int);
		}
	}
	[Token(Token = "0x20002CA")]
	public class LuaReflection : IDisposable
	{
		[Token(Token = "0x4000CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Assembly> list;

		[Token(Token = "0x4000CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static LuaReflection _reflection;

		[Token(Token = "0x6002931")]
		[Address(RVA = "0x148A9AC", Offset = "0x148A9AC", VA = "0x148A9AC")]
		public LuaReflection()
		{
		}

		[Token(Token = "0x6002932")]
		[Address(RVA = "0x148ABD8", Offset = "0x148ABD8", VA = "0x148ABD8")]
		public static void OpenLibs(IntPtr L)
		{
		}

		[Token(Token = "0x6002933")]
		[Address(RVA = "0x148AF88", Offset = "0x148AF88", VA = "0x148AF88")]
		public static LuaReflection Get(IntPtr L)
		{
			return null;
		}

		[Token(Token = "0x6002934")]
		[Address(RVA = "0x1487DAC", Offset = "0x1487DAC", VA = "0x1487DAC")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A8D28", Offset = "0x9A8D28")]
		private static int OpenReflectionLibs(IntPtr L)
		{
			return default(int);
		}

		[Token(Token = "0x6002935")]
		[Address(RVA = "0x1487F9C", Offset = "0x1487F9C", VA = "0x1487F9C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A8D8C", Offset = "0x9A8D8C")]
		private static int FindType(IntPtr L)
		{
			return default(int);
		}

		[Token(Token = "0x6002936")]
		[Address(RVA = "0x1488168", Offset = "0x1488168", VA = "0x1488168")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A8DF0", Offset = "0x9A8DF0")]
		private static int LoadAssembly(IntPtr L)
		{
			return default(int);
		}

		[Token(Token = "0x6002937")]
		[Address(RVA = "0x148AFF0", Offset = "0x148AFF0", VA = "0x148AFF0")]
		private static void PushLuaMethod(IntPtr L, MethodInfo md, Type t, Type[] types)
		{
		}

		[Token(Token = "0x6002938")]
		[Address(RVA = "0x148834C", Offset = "0x148834C", VA = "0x148834C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A8E54", Offset = "0x9A8E54")]
		private static int GetMethod(IntPtr L)
		{
			return default(int);
		}

		[Token(Token = "0x6002939")]
		[Address(RVA = "0x148B0F0", Offset = "0x148B0F0", VA = "0x148B0F0")]
		private static void PushLuaConstructor(IntPtr L, ConstructorInfo func, Type[] types)
		{
		}

		[Token(Token = "0x600293A")]
		[Address(RVA = "0x14886AC", Offset = "0x14886AC", VA = "0x14886AC")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A8EB8", Offset = "0x9A8EB8")]
		private static int GetConstructor(IntPtr L)
		{
			return default(int);
		}

		[Token(Token = "0x600293B")]
		[Address(RVA = "0x1488A30", Offset = "0x1488A30", VA = "0x1488A30")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A8F1C", Offset = "0x9A8F1C")]
		private static int GetTypeMethod(IntPtr L)
		{
			return default(int);
		}

		[Token(Token = "0x600293C")]
		[Address(RVA = "0x148B1FC", Offset = "0x148B1FC", VA = "0x148B1FC")]
		private static void PushLuaProperty(IntPtr L, PropertyInfo p, Type t)
		{
		}

		[Token(Token = "0x600293D")]
		[Address(RVA = "0x14895C0", Offset = "0x14895C0", VA = "0x14895C0")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A8F80", Offset = "0x9A8F80")]
		private static int GetProperty(IntPtr L)
		{
			return default(int);
		}

		[Token(Token = "0x600293E")]
		[Address(RVA = "0x148B2E8", Offset = "0x148B2E8", VA = "0x148B2E8")]
		private static void PushLuaField(IntPtr L, FieldInfo f, Type t)
		{
		}

		[Token(Token = "0x600293F")]
		[Address(RVA = "0x148A29C", Offset = "0x148A29C", VA = "0x148A29C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A8FE4", Offset = "0x9A8FE4")]
		private static int GetField(IntPtr L)
		{
			return default(int);
		}

		[Token(Token = "0x6002940")]
		[Address(RVA = "0x148A6A4", Offset = "0x148A6A4", VA = "0x148A6A4")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A9048", Offset = "0x9A9048")]
		private static int CreateInstance(IntPtr L)
		{
			return default(int);
		}

		[Token(Token = "0x6002941")]
		[Address(RVA = "0x148AA70", Offset = "0x148AA70", VA = "0x148AA70")]
		private bool LoadAssembly(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6002942")]
		[Address(RVA = "0x148B3D4", Offset = "0x148B3D4", VA = "0x148B3D4", Slot = "4")]
		public void Dispose()
		{
		}
	}
}
namespace UnityEngine.UI
{
	[Token(Token = "0x20002CB")]
	public class CircleRaycastImgageEx : ImageEx
	{
		[Token(Token = "0x4000CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public float Raius;

		[Token(Token = "0x6002944")]
		[Address(RVA = "0xF54568", Offset = "0xF54568", VA = "0xF54568", Slot = "46")]
		public override bool Raycast(Vector2 sp, Camera eventCamera)
		{
			return default(bool);
		}

		[Token(Token = "0x6002945")]
		[Address(RVA = "0xF5471C", Offset = "0xF5471C", VA = "0xF5471C")]
		public void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6002946")]
		[Address(RVA = "0xF546E4", Offset = "0xF546E4", VA = "0xF546E4")]
		public float GetLocalRaius()
		{
			return default(float);
		}

		[Token(Token = "0x6002947")]
		[Address(RVA = "0xF547DC", Offset = "0xF547DC", VA = "0xF547DC")]
		public CircleRaycastImgageEx()
		{
		}
	}
	[Token(Token = "0x20002CC")]
	public class Empty4Raycast : MaskableGraphic
	{
		[Token(Token = "0x6002948")]
		[Address(RVA = "0xF547EC", Offset = "0xF547EC", VA = "0xF547EC")]
		protected Empty4Raycast()
		{
		}

		[Token(Token = "0x6002949")]
		[Address(RVA = "0xF54814", Offset = "0xF54814", VA = "0xF54814", Slot = "44")]
		protected override void OnPopulateMesh(VertexHelper toFill)
		{
		}
	}
	[Token(Token = "0x20002CD")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x93FA54", Offset = "0x93FA54")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x93FA54", Offset = "0x93FA54")]
	public class PolygonImage : BaseMeshEffect
	{
		[Token(Token = "0x4000CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3[] fourCorners;

		[Token(Token = "0x4000CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static UIVertex vertice;

		[Token(Token = "0x4000CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RectTransform rectTransform;

		[Token(Token = "0x4000CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Image image;

		[Token(Token = "0x600294A")]
		[Address(RVA = "0xF54830", Offset = "0xF54830", VA = "0xF54830")]
		protected PolygonImage()
		{
		}

		[Token(Token = "0x600294B")]
		[Address(RVA = "0xF54838", Offset = "0xF54838", VA = "0xF54838", Slot = "20")]
		public override void ModifyMesh(VertexHelper vh)
		{
		}
	}
	[Token(Token = "0x20002CE")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x93FAE0", Offset = "0x93FAE0")]
	[SelectionBase]
	[ExecuteInEditMode]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x93FAE0", Offset = "0x93FAE0")]
	public class ScrollRectEx : ISCVCenter, IInitializePotentialDragHandler, IEventSystemHandler, IBeginDragHandler, IEndDragHandler, IDragHandler, IScrollHandler, ICanvasElement, ILayoutElement, ILayoutGroup, ILayoutController
	{
		[Token(Token = "0x200046D")]
		public enum MovementType
		{
			[Token(Token = "0x4001158")]
			Unrestricted,
			[Token(Token = "0x4001159")]
			Elastic,
			[Token(Token = "0x400115A")]
			Clamped,
			[Token(Token = "0x400115B")]
			Center
		}

		[Token(Token = "0x200046E")]
		public enum ScrollbarVisibility
		{
			[Token(Token = "0x400115D")]
			Permanent,
			[Token(Token = "0x400115E")]
			AutoHide,
			[Token(Token = "0x400115F")]
			AutoHideAndExpandViewport
		}

		[Serializable]
		[Token(Token = "0x200046F")]
		public class ScrollRectEvent : UnityEvent<Vector2>
		{
			[Token(Token = "0x6002EE2")]
			[Address(RVA = "0xF55740", Offset = "0xF55740", VA = "0xF55740")]
			public ScrollRectEvent()
			{
			}
		}

		[Token(Token = "0x2000470")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9408C0", Offset = "0x9408C0")]
		private sealed class <_ScrolllToHorizontalPercent>d__193 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001160")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001161")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001162")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ScrollRectEx <>4__this;

			[Token(Token = "0x4001163")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float endValue;

			[Token(Token = "0x4001164")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float time;

			[Token(Token = "0x4001165")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <start>5__2;

			[Token(Token = "0x4001166")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <curTime>5__3;

			[Token(Token = "0x17000242")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002EE6")]
				[Address(RVA = "0xF59B78", Offset = "0xF59B78", VA = "0xF59B78", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000243")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002EE8")]
				[Address(RVA = "0xF59BE0", Offset = "0xF59BE0", VA = "0xF59BE0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002EE3")]
			[Address(RVA = "0xF59A14", Offset = "0xF59A14", VA = "0xF59A14")]
			[DebuggerHidden]
			public <_ScrolllToHorizontalPercent>d__193(int <>1__state)
			{
			}

			[Token(Token = "0x6002EE4")]
			[Address(RVA = "0xF59A48", Offset = "0xF59A48", VA = "0xF59A48", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002EE5")]
			[Address(RVA = "0xF59A4C", Offset = "0xF59A4C", VA = "0xF59A4C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002EE7")]
			[Address(RVA = "0xF59B80", Offset = "0xF59B80", VA = "0xF59B80", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool mIsEnable;

		[Token(Token = "0x4000CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private RectTransform m_Content;

		[Token(Token = "0x4000CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool m_Horizontal;

		[Token(Token = "0x4000CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		private bool m_Vertical;

		[Token(Token = "0x4000CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private MovementType m_MovementType;

		[Token(Token = "0x4000CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float m_Elasticity;

		[Token(Token = "0x4000CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private bool m_Inertia;

		[Token(Token = "0x4000CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float m_DecelerationRate;

		[Token(Token = "0x4000CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float m_ScrollSensitivity;

		[Token(Token = "0x4000CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private RectTransform m_Viewport;

		[Token(Token = "0x4000CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Scrollbar m_HorizontalScrollbar;

		[Token(Token = "0x4000CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Scrollbar m_VerticalScrollbar;

		[Token(Token = "0x4000CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private ScrollbarVisibility m_HorizontalScrollbarVisibility;

		[Token(Token = "0x4000CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private ScrollbarVisibility m_VerticalScrollbarVisibility;

		[Token(Token = "0x4000CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private float m_HorizontalScrollbarSpacing;

		[Token(Token = "0x4000CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private float m_VerticalScrollbarSpacing;

		[Token(Token = "0x4000CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ScrollRectEvent m_OnValueChanged;

		[Token(Token = "0x4000CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private ScrollRectEvent _onEndDrag;

		[Token(Token = "0x4000CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool m_ContentMoveEnable;

		[Token(Token = "0x4000CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Vector2 m_PointerStartLocalCursor;

		[Token(Token = "0x4000CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector2 m_ContentStartPosition;

		[Token(Token = "0x4000CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private RectTransform m_ViewRect;

		[Token(Token = "0x4000CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Vector2 ElasticLimitRate;

		[Token(Token = "0x4000CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Bounds m_ContentBounds;

		[Token(Token = "0x4000CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Bounds m_ViewBounds;

		[Token(Token = "0x4000CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Vector2 m_Velocity;

		[Token(Token = "0x4000CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool m_Dragging;

		[Token(Token = "0x4000CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private Vector2 m_PrevPosition;

		[Token(Token = "0x4000CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private Bounds m_PrevContentBounds;

		[Token(Token = "0x4000CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private Bounds m_PrevViewBounds;

		[NonSerialized]
		[Token(Token = "0x4000CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private bool m_HasRebuiltLayout;

		[Token(Token = "0x4000CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x115")]
		private bool m_HSliderExpand;

		[Token(Token = "0x4000CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x116")]
		private bool m_VSliderExpand;

		[Token(Token = "0x4000CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private float m_HSliderHeight;

		[Token(Token = "0x4000CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private float m_VSliderWidth;

		[NonSerialized]
		[Token(Token = "0x4000CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private RectTransform m_Rect;

		[Token(Token = "0x4000CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private RectTransform m_HorizontalScrollbarRect;

		[Token(Token = "0x4000CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private RectTransform m_VerticalScrollbarRect;

		[Token(Token = "0x4000CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private DrivenRectTransformTracker m_Tracker;

		[Token(Token = "0x4000CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public GameObject GOArrowLeft;

		[Token(Token = "0x4000CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public GameObject GOArrowRight;

		[Token(Token = "0x4000CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public bool IsBarHideWithAlpha;

		[Token(Token = "0x4000CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x151")]
		public bool IsBarHideWithDrag;

		[Token(Token = "0x4000CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		public float TimeBarHide;

		[Token(Token = "0x4000CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public float ForceBarSizeRate;

		[Token(Token = "0x4000CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private Image[] _vScrollbarImages;

		[Token(Token = "0x4000CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private Color _vScrollbarColor;

		[Token(Token = "0x4000CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private Image[] _hScrollbarImages;

		[Token(Token = "0x4000CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private Color _hScrollbarColor;

		[Token(Token = "0x4000CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private readonly Vector3[] m_Corners;

		[Token(Token = "0x4000CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private WrapPrefabSize config;

		[Token(Token = "0x4000CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private PageViewConfig pageConfig;

		[Token(Token = "0x4000CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x942AFC", Offset = "0x942AFC")]
		private bool <IsDragByOther>k__BackingField;

		[Token(Token = "0x17000181")]
		public override RectTransform content
		{
			[Token(Token = "0x600294E")]
			[Address(RVA = "0xF54EE4", Offset = "0xF54EE4", VA = "0xF54EE4", Slot = "17")]
			get
			{
				return null;
			}
			[Token(Token = "0x600294F")]
			[Address(RVA = "0xF54EEC", Offset = "0xF54EEC", VA = "0xF54EEC", Slot = "18")]
			set
			{
			}
		}

		[Token(Token = "0x17000182")]
		public override bool horizontal
		{
			[Token(Token = "0x6002950")]
			[Address(RVA = "0xF54EF4", Offset = "0xF54EF4", VA = "0xF54EF4", Slot = "23")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002951")]
			[Address(RVA = "0xF54EFC", Offset = "0xF54EFC", VA = "0xF54EFC", Slot = "24")]
			set
			{
			}
		}

		[Token(Token = "0x17000183")]
		public bool vertical
		{
			[Token(Token = "0x6002952")]
			[Address(RVA = "0xF54F08", Offset = "0xF54F08", VA = "0xF54F08")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002953")]
			[Address(RVA = "0xF54F10", Offset = "0xF54F10", VA = "0xF54F10")]
			set
			{
			}
		}

		[Token(Token = "0x17000184")]
		public override MovementType movementType
		{
			[Token(Token = "0x6002954")]
			[Address(RVA = "0xF54F1C", Offset = "0xF54F1C", VA = "0xF54F1C", Slot = "25")]
			get
			{
				return default(MovementType);
			}
			[Token(Token = "0x6002955")]
			[Address(RVA = "0xF54F24", Offset = "0xF54F24", VA = "0xF54F24", Slot = "26")]
			set
			{
			}
		}

		[Token(Token = "0x17000185")]
		public float elasticity
		{
			[Token(Token = "0x6002956")]
			[Address(RVA = "0xF54F2C", Offset = "0xF54F2C", VA = "0xF54F2C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002957")]
			[Address(RVA = "0xF54F34", Offset = "0xF54F34", VA = "0xF54F34")]
			set
			{
			}
		}

		[Token(Token = "0x17000186")]
		public override bool inertia
		{
			[Token(Token = "0x6002958")]
			[Address(RVA = "0xF54F3C", Offset = "0xF54F3C", VA = "0xF54F3C", Slot = "21")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002959")]
			[Address(RVA = "0xF54F44", Offset = "0xF54F44", VA = "0xF54F44", Slot = "22")]
			set
			{
			}
		}

		[Token(Token = "0x17000187")]
		public float decelerationRate
		{
			[Token(Token = "0x600295A")]
			[Address(RVA = "0xF54F50", Offset = "0xF54F50", VA = "0xF54F50")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600295B")]
			[Address(RVA = "0xF54F58", Offset = "0xF54F58", VA = "0xF54F58")]
			set
			{
			}
		}

		[Token(Token = "0x17000188")]
		public float scrollSensitivity
		{
			[Token(Token = "0x600295C")]
			[Address(RVA = "0xF54F60", Offset = "0xF54F60", VA = "0xF54F60")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600295D")]
			[Address(RVA = "0xF54F68", Offset = "0xF54F68", VA = "0xF54F68")]
			set
			{
			}
		}

		[Token(Token = "0x17000189")]
		public RectTransform viewport
		{
			[Token(Token = "0x600295E")]
			[Address(RVA = "0xF54F70", Offset = "0xF54F70", VA = "0xF54F70")]
			get
			{
				return null;
			}
			[Token(Token = "0x600295F")]
			[Address(RVA = "0xF54F78", Offset = "0xF54F78", VA = "0xF54F78")]
			set
			{
			}
		}

		[Token(Token = "0x1700018A")]
		public Scrollbar horizontalScrollbar
		{
			[Token(Token = "0x6002960")]
			[Address(RVA = "0xF55044", Offset = "0xF55044", VA = "0xF55044")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002961")]
			[Address(RVA = "0xF5504C", Offset = "0xF5504C", VA = "0xF5504C")]
			set
			{
			}
		}

		[Token(Token = "0x1700018B")]
		public Scrollbar verticalScrollbar
		{
			[Token(Token = "0x6002962")]
			[Address(RVA = "0xF551C0", Offset = "0xF551C0", VA = "0xF551C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002963")]
			[Address(RVA = "0xF551C8", Offset = "0xF551C8", VA = "0xF551C8")]
			set
			{
			}
		}

		[Token(Token = "0x1700018C")]
		public ScrollbarVisibility horizontalScrollbarVisibility
		{
			[Token(Token = "0x6002964")]
			[Address(RVA = "0xF5533C", Offset = "0xF5533C", VA = "0xF5533C")]
			get
			{
				return default(ScrollbarVisibility);
			}
			[Token(Token = "0x6002965")]
			[Address(RVA = "0xF55344", Offset = "0xF55344", VA = "0xF55344")]
			set
			{
			}
		}

		[Token(Token = "0x1700018D")]
		public ScrollbarVisibility verticalScrollbarVisibility
		{
			[Token(Token = "0x6002966")]
			[Address(RVA = "0xF5534C", Offset = "0xF5534C", VA = "0xF5534C")]
			get
			{
				return default(ScrollbarVisibility);
			}
			[Token(Token = "0x6002967")]
			[Address(RVA = "0xF55354", Offset = "0xF55354", VA = "0xF55354")]
			set
			{
			}
		}

		[Token(Token = "0x1700018E")]
		public float horizontalScrollbarSpacing
		{
			[Token(Token = "0x6002968")]
			[Address(RVA = "0xF5535C", Offset = "0xF5535C", VA = "0xF5535C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002969")]
			[Address(RVA = "0xF55364", Offset = "0xF55364", VA = "0xF55364")]
			set
			{
			}
		}

		[Token(Token = "0x1700018F")]
		public float verticalScrollbarSpacing
		{
			[Token(Token = "0x600296A")]
			[Address(RVA = "0xF55404", Offset = "0xF55404", VA = "0xF55404")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600296B")]
			[Address(RVA = "0xF5540C", Offset = "0xF5540C", VA = "0xF5540C")]
			set
			{
			}
		}

		[Token(Token = "0x17000190")]
		public ScrollRectEvent onValueChanged
		{
			[Token(Token = "0x600296C")]
			[Address(RVA = "0xF55414", Offset = "0xF55414", VA = "0xF55414")]
			get
			{
				return null;
			}
			[Token(Token = "0x600296D")]
			[Address(RVA = "0xF5541C", Offset = "0xF5541C", VA = "0xF5541C")]
			set
			{
			}
		}

		[Token(Token = "0x17000191")]
		public ScrollRectEvent onEndDrag
		{
			[Token(Token = "0x600296E")]
			[Address(RVA = "0xF55424", Offset = "0xF55424", VA = "0xF55424")]
			get
			{
				return null;
			}
			[Token(Token = "0x600296F")]
			[Address(RVA = "0xF5542C", Offset = "0xF5542C", VA = "0xF5542C")]
			set
			{
			}
		}

		[Token(Token = "0x17000192")]
		public bool contentMoveEnable
		{
			[Token(Token = "0x6002970")]
			[Address(RVA = "0xF55434", Offset = "0xF55434", VA = "0xF55434")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002971")]
			[Address(RVA = "0xF5543C", Offset = "0xF5543C", VA = "0xF5543C")]
			set
			{
			}
		}

		[Token(Token = "0x17000193")]
		protected RectTransform viewRect
		{
			[Token(Token = "0x6002972")]
			[Address(RVA = "0xF55448", Offset = "0xF55448", VA = "0xF55448")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000194")]
		public override Vector2 velocity
		{
			[Token(Token = "0x6002973")]
			[Address(RVA = "0xF5553C", Offset = "0xF5553C", VA = "0xF5553C", Slot = "19")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6002974")]
			[Address(RVA = "0xF55544", Offset = "0xF55544", VA = "0xF55544", Slot = "20")]
			set
			{
			}
		}

		[Token(Token = "0x17000195")]
		private RectTransform rectTransform
		{
			[Token(Token = "0x6002975")]
			[Address(RVA = "0xF5554C", Offset = "0xF5554C", VA = "0xF5554C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000196")]
		public Vector2 normalizedPosition
		{
			[Token(Token = "0x600298A")]
			[Address(RVA = "0xF5797C", Offset = "0xF5797C", VA = "0xF5797C")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x600298B")]
			[Address(RVA = "0xF57CCC", Offset = "0xF57CCC", VA = "0xF57CCC")]
			set
			{
			}
		}

		[Token(Token = "0x17000197")]
		public float horizontalNormalizedPosition
		{
			[Token(Token = "0x600298C")]
			[Address(RVA = "0xF579D4", Offset = "0xF579D4", VA = "0xF579D4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600298D")]
			[Address(RVA = "0xF58004", Offset = "0xF58004", VA = "0xF58004")]
			set
			{
			}
		}

		[Token(Token = "0x17000198")]
		public float verticalNormalizedPosition
		{
			[Token(Token = "0x600298E")]
			[Address(RVA = "0xF57A90", Offset = "0xF57A90", VA = "0xF57A90")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600298F")]
			[Address(RVA = "0xF5800C", Offset = "0xF5800C", VA = "0xF5800C")]
			set
			{
			}
		}

		[Token(Token = "0x17000199")]
		private bool hScrollingNeeded
		{
			[Token(Token = "0x6002995")]
			[Address(RVA = "0xF58028", Offset = "0xF58028", VA = "0xF58028")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700019A")]
		private bool vScrollingNeeded
		{
			[Token(Token = "0x6002996")]
			[Address(RVA = "0xF580AC", Offset = "0xF580AC", VA = "0xF580AC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700019B")]
		public virtual float minWidth
		{
			[Token(Token = "0x6002999")]
			[Address(RVA = "0xF58138", Offset = "0xF58138", VA = "0xF58138", Slot = "62")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700019C")]
		public virtual float preferredWidth
		{
			[Token(Token = "0x600299A")]
			[Address(RVA = "0xF58140", Offset = "0xF58140", VA = "0xF58140", Slot = "63")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700019D")]
		public virtual float flexibleWidth
		{
			[Token(Token = "0x600299B")]
			[Address(RVA = "0xF58148", Offset = "0xF58148", VA = "0xF58148", Slot = "64")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700019E")]
		public virtual float minHeight
		{
			[Token(Token = "0x600299C")]
			[Address(RVA = "0xF58150", Offset = "0xF58150", VA = "0xF58150", Slot = "65")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700019F")]
		public virtual float preferredHeight
		{
			[Token(Token = "0x600299D")]
			[Address(RVA = "0xF58158", Offset = "0xF58158", VA = "0xF58158", Slot = "66")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001A0")]
		public virtual float flexibleHeight
		{
			[Token(Token = "0x600299E")]
			[Address(RVA = "0xF58160", Offset = "0xF58160", VA = "0xF58160", Slot = "67")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001A1")]
		public virtual int layoutPriority
		{
			[Token(Token = "0x600299F")]
			[Address(RVA = "0xF58168", Offset = "0xF58168", VA = "0xF58168", Slot = "68")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001A2")]
		public Image[] vScrollbarImages
		{
			[Token(Token = "0x60029A2")]
			[Address(RVA = "0xF58EAC", Offset = "0xF58EAC", VA = "0xF58EAC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A3")]
		public Image[] hScrollbarImages
		{
			[Token(Token = "0x60029A3")]
			[Address(RVA = "0xF58F14", Offset = "0xF58F14", VA = "0xF58F14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A4")]
		public PageViewConfig PageConfig
		{
			[Token(Token = "0x60029AA")]
			[Address(RVA = "0xF59544", Offset = "0xF59544", VA = "0xF59544")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A5")]
		private Vector2 itemSize
		{
			[Token(Token = "0x60029AB")]
			[Address(RVA = "0xF57044", Offset = "0xF57044", VA = "0xF57044")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x170001A6")]
		public bool IsDragByOther
		{
			[Token(Token = "0x60029AC")]
			[Address(RVA = "0xF595D8", Offset = "0xF595D8", VA = "0xF595D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A90AC", Offset = "0x9A90AC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60029AD")]
			[Address(RVA = "0xF595E0", Offset = "0xF595E0", VA = "0xF595E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A90BC", Offset = "0x9A90BC")]
			private set
			{
			}
		}

		[Token(Token = "0x600294D")]
		[Address(RVA = "0xF54ED8", Offset = "0xF54ED8", VA = "0xF54ED8")]
		public void SetEnable(bool enable)
		{
		}

		[Token(Token = "0x6002976")]
		[Address(RVA = "0xF555E4", Offset = "0xF555E4", VA = "0xF555E4")]
		protected ScrollRectEx()
		{
		}

		[Token(Token = "0x6002977")]
		[Address(RVA = "0xF55790", Offset = "0xF55790", VA = "0xF55790", Slot = "50")]
		public virtual void Rebuild(CanvasUpdate executing)
		{
		}

		[Token(Token = "0x6002978")]
		[Address(RVA = "0xF5621C", Offset = "0xF5621C", VA = "0xF5621C", Slot = "51")]
		public virtual void LayoutComplete()
		{
		}

		[Token(Token = "0x6002979")]
		[Address(RVA = "0xF56220", Offset = "0xF56220", VA = "0xF56220", Slot = "52")]
		public virtual void GraphicUpdateComplete()
		{
		}

		[Token(Token = "0x600297A")]
		[Address(RVA = "0xF55844", Offset = "0xF55844", VA = "0xF55844")]
		private void UpdateCachedData()
		{
		}

		[Token(Token = "0x600297B")]
		[Address(RVA = "0xF56224", Offset = "0xF56224", VA = "0xF56224", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x600297C")]
		[Address(RVA = "0xF564E0", Offset = "0xF564E0", VA = "0xF564E0", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x600297D")]
		[Address(RVA = "0xF566F0", Offset = "0xF566F0", VA = "0xF566F0", Slot = "9")]
		public override bool IsActive()
		{
			return default(bool);
		}

		[Token(Token = "0x600297E")]
		[Address(RVA = "0xF56780", Offset = "0xF56780", VA = "0xF56780")]
		private void EnsureLayoutHasRebuilt()
		{
		}

		[Token(Token = "0x600297F")]
		[Address(RVA = "0xF56804", Offset = "0xF56804", VA = "0xF56804", Slot = "27")]
		public override void StopMovement()
		{
		}

		[Token(Token = "0x6002980")]
		[Address(RVA = "0xF56870", Offset = "0xF56870", VA = "0xF56870", Slot = "53")]
		public virtual void OnScroll(PointerEventData data)
		{
		}

		[Token(Token = "0x6002981")]
		[Address(RVA = "0xF56B00", Offset = "0xF56B00", VA = "0xF56B00", Slot = "54")]
		public virtual void OnInitializePotentialDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002982")]
		[Address(RVA = "0xF56B88", Offset = "0xF56B88", VA = "0xF56B88", Slot = "55")]
		public virtual void OnBeginDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002983")]
		[Address(RVA = "0xF56CB8", Offset = "0xF56CB8", VA = "0xF56CB8", Slot = "56")]
		public virtual void OnEndDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002984")]
		[Address(RVA = "0xF56CDC", Offset = "0xF56CDC", VA = "0xF56CDC", Slot = "57")]
		public virtual void OnDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002985")]
		[Address(RVA = "0xF571A8", Offset = "0xF571A8", VA = "0xF571A8", Slot = "58")]
		protected virtual void SetContentAnchoredPosition(Vector2 position)
		{
		}

		[Token(Token = "0x6002986")]
		[Address(RVA = "0xF572C8", Offset = "0xF572C8", VA = "0xF572C8", Slot = "59")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x6002987")]
		[Address(RVA = "0xF563C4", Offset = "0xF563C4", VA = "0xF563C4")]
		private void _updateArrow()
		{
		}

		[Token(Token = "0x6002988")]
		[Address(RVA = "0xF5613C", Offset = "0xF5613C", VA = "0xF5613C")]
		private void UpdatePrevData()
		{
		}

		[Token(Token = "0x6002989")]
		[Address(RVA = "0xF55EEC", Offset = "0xF55EEC", VA = "0xF55EEC")]
		private void UpdateScrollbars(Vector2 offset)
		{
		}

		[Token(Token = "0x6002990")]
		[Address(RVA = "0xF58014", Offset = "0xF58014", VA = "0xF58014")]
		private void SetHorizontalNormalizedPosition(float value)
		{
		}

		[Token(Token = "0x6002991")]
		[Address(RVA = "0xF5801C", Offset = "0xF5801C", VA = "0xF5801C")]
		private void SetVerticalNormalizedPosition(float value)
		{
		}

		[Token(Token = "0x6002992")]
		[Address(RVA = "0xF57D08", Offset = "0xF57D08", VA = "0xF57D08")]
		private void SetNormalizedPosition(float value, int axis)
		{
		}

		[Token(Token = "0x6002993")]
		[Address(RVA = "0xF56F98", Offset = "0xF56F98", VA = "0xF56F98")]
		private static float RubberDelta(float overStretching, float viewSize)
		{
			return default(float);
		}

		[Token(Token = "0x6002994")]
		[Address(RVA = "0xF58024", Offset = "0xF58024", VA = "0xF58024", Slot = "10")]
		protected override void OnRectTransformDimensionsChange()
		{
		}

		[Token(Token = "0x6002997")]
		[Address(RVA = "0xF58130", Offset = "0xF58130", VA = "0xF58130", Slot = "60")]
		public virtual void CalculateLayoutInputHorizontal()
		{
		}

		[Token(Token = "0x6002998")]
		[Address(RVA = "0xF58134", Offset = "0xF58134", VA = "0xF58134", Slot = "61")]
		public virtual void CalculateLayoutInputVertical()
		{
		}

		[Token(Token = "0x60029A0")]
		[Address(RVA = "0xF58170", Offset = "0xF58170", VA = "0xF58170", Slot = "69")]
		public virtual void SetLayoutHorizontal()
		{
		}

		[Token(Token = "0x60029A1")]
		[Address(RVA = "0xF58A28", Offset = "0xF58A28", VA = "0xF58A28", Slot = "70")]
		public virtual void SetLayoutVertical()
		{
		}

		[Token(Token = "0x60029A4")]
		[Address(RVA = "0xF58F7C", Offset = "0xF58F7C", VA = "0xF58F7C")]
		private void _setVercialScollbarVisibility()
		{
		}

		[Token(Token = "0x60029A5")]
		[Address(RVA = "0xF59260", Offset = "0xF59260", VA = "0xF59260")]
		private void _setHorizontalScollbarVisibility()
		{
		}

		[Token(Token = "0x60029A6")]
		[Address(RVA = "0xF57958", Offset = "0xF57958", VA = "0xF57958")]
		private void UpdateScrollbarVisibility()
		{
		}

		[Token(Token = "0x60029A7")]
		[Address(RVA = "0xF58B84", Offset = "0xF58B84", VA = "0xF58B84")]
		private void UpdateScrollbarLayout()
		{
		}

		[Token(Token = "0x60029A8")]
		[Address(RVA = "0xF55C10", Offset = "0xF55C10", VA = "0xF55C10")]
		public void UpdateBounds()
		{
		}

		[Token(Token = "0x60029A9")]
		[Address(RVA = "0xF5877C", Offset = "0xF5877C", VA = "0xF5877C")]
		private Bounds GetBounds()
		{
			return default(Bounds);
		}

		[Token(Token = "0x60029AE")]
		[Address(RVA = "0xF595EC", Offset = "0xF595EC", VA = "0xF595EC", Slot = "28")]
		public override Vector2 CalculateOffset(Vector2 delta)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60029AF")]
		[Address(RVA = "0xF59938", Offset = "0xF59938", VA = "0xF59938")]
		public void ScrolllToHorizontalPercent(float endValue, float time)
		{
		}

		[Token(Token = "0x60029B0")]
		[Address(RVA = "0xF59990", Offset = "0xF59990", VA = "0xF59990")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A90CC", Offset = "0x9A90CC")]
		private IEnumerator _ScrolllToHorizontalPercent(float endValue, float time)
		{
			return null;
		}

		[Token(Token = "0x60029B1")]
		[Address(RVA = "0xF5536C", Offset = "0xF5536C", VA = "0xF5536C")]
		protected void SetDirty()
		{
		}

		[Token(Token = "0x60029B2")]
		[Address(RVA = "0xF54F80", Offset = "0xF54F80", VA = "0xF54F80")]
		protected void SetDirtyCaching()
		{
		}

		[SpecialName]
		[Token(Token = "0x60029B3")]
		[Address(RVA = "0xF59A40", Offset = "0xF59A40", VA = "0xF59A40", Slot = "35")]
		private Transform UnityEngine.UI.ICanvasElement.get_transform()
		{
			return null;
		}
	}
}
namespace UnityEngine.PostProcessing
{
	[Token(Token = "0x20002CF")]
	public sealed class GetSetAttribute : PropertyAttribute
	{
		[Token(Token = "0x4000CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string name;

		[Token(Token = "0x4000CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool dirty;

		[Token(Token = "0x60029B4")]
		[Address(RVA = "0x11B9524", Offset = "0x11B9524", VA = "0x11B9524")]
		public GetSetAttribute(string name)
		{
		}
	}
	[Token(Token = "0x20002D0")]
	public sealed class MinAttribute : PropertyAttribute
	{
		[Token(Token = "0x4000CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly float min;

		[Token(Token = "0x60029B5")]
		[Address(RVA = "0x11BA0A4", Offset = "0x11BA0A4", VA = "0x11BA0A4")]
		public MinAttribute(float min)
		{
		}
	}
	[Token(Token = "0x20002D1")]
	public sealed class TrackballAttribute : PropertyAttribute
	{
		[Token(Token = "0x4000CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string method;

		[Token(Token = "0x60029B6")]
		[Address(RVA = "0xF53C94", Offset = "0xF53C94", VA = "0xF53C94")]
		public TrackballAttribute(string method)
		{
		}
	}
	[Token(Token = "0x20002D2")]
	public sealed class TrackballGroupAttribute : PropertyAttribute
	{
		[Token(Token = "0x60029B7")]
		[Address(RVA = "0xF53CC0", Offset = "0xF53CC0", VA = "0xF53CC0")]
		public TrackballGroupAttribute()
		{
		}
	}
	[Token(Token = "0x20002D3")]
	public sealed class AmbientOcclusionComponent : PostProcessingComponentCommandBuffer<AmbientOcclusionModel>
	{
		[Token(Token = "0x2000471")]
		private static class Uniforms
		{
			[Token(Token = "0x4001167")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _Intensity;

			[Token(Token = "0x4001168")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _Radius;

			[Token(Token = "0x4001169")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _FogParams;

			[Token(Token = "0x400116A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _Downsample;

			[Token(Token = "0x400116B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _SampleCount;

			[Token(Token = "0x400116C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _OcclusionTexture1;

			[Token(Token = "0x400116D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _OcclusionTexture2;

			[Token(Token = "0x400116E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal static readonly int _OcclusionTexture;

			[Token(Token = "0x400116F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly int _MainTex;

			[Token(Token = "0x4001170")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal static readonly int _TempRT;
		}

		[Token(Token = "0x2000472")]
		private enum OcclusionSource
		{
			[Token(Token = "0x4001172")]
			DepthTexture,
			[Token(Token = "0x4001173")]
			DepthNormalsTexture,
			[Token(Token = "0x4001174")]
			GBuffer
		}

		[Token(Token = "0x4000CF6")]
		private const string k_BlitShaderString = "Hidden/Post FX/Blit";

		[Token(Token = "0x4000CF7")]
		private const string k_ShaderString = "Hidden/Post FX/Ambient Occlusion";

		[Token(Token = "0x4000CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly RenderTargetIdentifier[] m_MRT;

		[Token(Token = "0x170001A7")]
		private OcclusionSource occlusionSource
		{
			[Token(Token = "0x60029B8")]
			[Address(RVA = "0x11AFDAC", Offset = "0x11AFDAC", VA = "0x11AFDAC")]
			get
			{
				return default(OcclusionSource);
			}
		}

		[Token(Token = "0x170001A8")]
		private bool ambientOnlySupported
		{
			[Token(Token = "0x60029B9")]
			[Address(RVA = "0x11AFE58", Offset = "0x11AFE58", VA = "0x11AFE58")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A9")]
		public override bool active
		{
			[Token(Token = "0x60029BA")]
			[Address(RVA = "0x11AFEF0", Offset = "0x11AFEF0", VA = "0x11AFEF0", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60029BB")]
		[Address(RVA = "0x11AFF6C", Offset = "0x11AFF6C", VA = "0x11AFF6C", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x60029BC")]
		[Address(RVA = "0x11AFFA8", Offset = "0x11AFFA8", VA = "0x11AFFA8", Slot = "11")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x60029BD")]
		[Address(RVA = "0x11AFFF0", Offset = "0x11AFFF0", VA = "0x11AFFF0", Slot = "10")]
		public override CameraEvent GetCameraEvent()
		{
			return default(CameraEvent);
		}

		[Token(Token = "0x60029BE")]
		[Address(RVA = "0x11B005C", Offset = "0x11B005C", VA = "0x11B005C", Slot = "12")]
		public override void PopulateCommandBuffer(CommandBuffer cb)
		{
		}

		[Token(Token = "0x60029BF")]
		[Address(RVA = "0x11B0F14", Offset = "0x11B0F14", VA = "0x11B0F14")]
		public AmbientOcclusionComponent()
		{
		}
	}
	[Token(Token = "0x20002D4")]
	public sealed class BloomComponent : PostProcessingComponentRenderTexture<BloomModel>
	{
		[Token(Token = "0x2000473")]
		private static class Uniforms
		{
			[Token(Token = "0x4001175")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _AutoExposure;

			[Token(Token = "0x4001176")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _Threshold;

			[Token(Token = "0x4001177")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _Curve;

			[Token(Token = "0x4001178")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _PrefilterOffs;

			[Token(Token = "0x4001179")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _SampleScale;

			[Token(Token = "0x400117A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _BaseTex;

			[Token(Token = "0x400117B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _BloomTex;

			[Token(Token = "0x400117C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal static readonly int _Bloom_Settings;

			[Token(Token = "0x400117D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly int _Bloom_DirtTex;

			[Token(Token = "0x400117E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal static readonly int _Bloom_DirtIntensity;
		}

		[Token(Token = "0x4000CF9")]
		private const int k_MaxPyramidBlurLevel = 16;

		[Token(Token = "0x4000CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly RenderTexture[] m_BlurBuffer1;

		[Token(Token = "0x4000CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly RenderTexture[] m_BlurBuffer2;

		[Token(Token = "0x170001AA")]
		public override bool active
		{
			[Token(Token = "0x60029C0")]
			[Address(RVA = "0x11B1488", Offset = "0x11B1488", VA = "0x11B1488", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60029C1")]
		[Address(RVA = "0x11B1504", Offset = "0x11B1504", VA = "0x11B1504")]
		public void Prepare(RenderTexture source, Material uberMaterial, Texture autoExposure)
		{
		}

		[Token(Token = "0x60029C2")]
		[Address(RVA = "0x11B1F88", Offset = "0x11B1F88", VA = "0x11B1F88")]
		public BloomComponent()
		{
		}
	}
	[Token(Token = "0x20002D5")]
	public sealed class BuiltinDebugViewsComponent : PostProcessingComponentCommandBuffer<BuiltinDebugViewsModel>
	{
		[Token(Token = "0x2000474")]
		private static class Uniforms
		{
			[Token(Token = "0x400117F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _DepthScale;

			[Token(Token = "0x4001180")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _TempRT;

			[Token(Token = "0x4001181")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _Opacity;

			[Token(Token = "0x4001182")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _MainTex;

			[Token(Token = "0x4001183")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _TempRT2;

			[Token(Token = "0x4001184")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _Amplitude;

			[Token(Token = "0x4001185")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _Scale;
		}

		[Token(Token = "0x2000475")]
		private enum Pass
		{
			[Token(Token = "0x4001187")]
			Depth,
			[Token(Token = "0x4001188")]
			Normals,
			[Token(Token = "0x4001189")]
			MovecOpacity,
			[Token(Token = "0x400118A")]
			MovecImaging,
			[Token(Token = "0x400118B")]
			MovecArrows
		}

		[Token(Token = "0x2000476")]
		private class ArrowArray
		{
			[Token(Token = "0x400118C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x942F40", Offset = "0x942F40")]
			private Mesh <mesh>k__BackingField;

			[Token(Token = "0x400118D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x942F50", Offset = "0x942F50")]
			private int <columnCount>k__BackingField;

			[Token(Token = "0x400118E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x942F60", Offset = "0x942F60")]
			private int <rowCount>k__BackingField;

			[Token(Token = "0x17000244")]
			public Mesh mesh
			{
				[Token(Token = "0x6002EEC")]
				[Address(RVA = "0x11B32CC", Offset = "0x11B32CC", VA = "0x11B32CC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AA190", Offset = "0x9AA190")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002EED")]
				[Address(RVA = "0x11B32D4", Offset = "0x11B32D4", VA = "0x11B32D4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AA1A0", Offset = "0x9AA1A0")]
				private set
				{
				}
			}

			[Token(Token = "0x17000245")]
			public int columnCount
			{
				[Token(Token = "0x6002EEE")]
				[Address(RVA = "0x11B32DC", Offset = "0x11B32DC", VA = "0x11B32DC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AA1B0", Offset = "0x9AA1B0")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6002EEF")]
				[Address(RVA = "0x11B32E4", Offset = "0x11B32E4", VA = "0x11B32E4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AA1C0", Offset = "0x9AA1C0")]
				private set
				{
				}
			}

			[Token(Token = "0x17000246")]
			public int rowCount
			{
				[Token(Token = "0x6002EF0")]
				[Address(RVA = "0x11B32EC", Offset = "0x11B32EC", VA = "0x11B32EC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AA1D0", Offset = "0x9AA1D0")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6002EF1")]
				[Address(RVA = "0x11B32F4", Offset = "0x11B32F4", VA = "0x11B32F4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AA1E0", Offset = "0x9AA1E0")]
				private set
				{
				}
			}

			[Token(Token = "0x6002EF2")]
			[Address(RVA = "0x11B2E00", Offset = "0x11B2E00", VA = "0x11B2E00")]
			public void BuildMesh(int columns, int rows)
			{
			}

			[Token(Token = "0x6002EF3")]
			[Address(RVA = "0x11B2DD8", Offset = "0x11B2DD8", VA = "0x11B2DD8")]
			public void Release()
			{
			}

			[Token(Token = "0x6002EF4")]
			[Address(RVA = "0x11B2DD0", Offset = "0x11B2DD0", VA = "0x11B2DD0")]
			public ArrowArray()
			{
			}
		}

		[Token(Token = "0x4000CFC")]
		private const string k_ShaderString = "Hidden/Post FX/Builtin Debug Views";

		[Token(Token = "0x4000CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ArrowArray m_Arrows;

		[Token(Token = "0x170001AB")]
		public override bool active
		{
			[Token(Token = "0x60029C3")]
			[Address(RVA = "0x11B22E0", Offset = "0x11B22E0", VA = "0x11B22E0", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60029C4")]
		[Address(RVA = "0x11B234C", Offset = "0x11B234C", VA = "0x11B234C", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x60029C5")]
		[Address(RVA = "0x11B23BC", Offset = "0x11B23BC", VA = "0x11B23BC", Slot = "10")]
		public override CameraEvent GetCameraEvent()
		{
			return default(CameraEvent);
		}

		[Token(Token = "0x60029C6")]
		[Address(RVA = "0x11B241C", Offset = "0x11B241C", VA = "0x11B241C", Slot = "11")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x60029C7")]
		[Address(RVA = "0x11B2464", Offset = "0x11B2464", VA = "0x11B2464", Slot = "12")]
		public override void PopulateCommandBuffer(CommandBuffer cb)
		{
		}

		[Token(Token = "0x60029C8")]
		[Address(RVA = "0x11B2570", Offset = "0x11B2570", VA = "0x11B2570")]
		private void DepthPass(CommandBuffer cb)
		{
		}

		[Token(Token = "0x60029C9")]
		[Address(RVA = "0x11B2684", Offset = "0x11B2684", VA = "0x11B2684")]
		private void DepthNormalsPass(CommandBuffer cb)
		{
		}

		[Token(Token = "0x60029CA")]
		[Address(RVA = "0x11B2744", Offset = "0x11B2744", VA = "0x11B2744")]
		private void MotionVectorsPass(CommandBuffer cb)
		{
		}

		[Token(Token = "0x60029CB")]
		[Address(RVA = "0x11B2CDC", Offset = "0x11B2CDC", VA = "0x11B2CDC")]
		private void PrepareArrows()
		{
		}

		[Token(Token = "0x60029CC")]
		[Address(RVA = "0x11B3248", Offset = "0x11B3248", VA = "0x11B3248", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x60029CD")]
		[Address(RVA = "0x11B327C", Offset = "0x11B327C", VA = "0x11B327C")]
		public BuiltinDebugViewsComponent()
		{
		}
	}
	[Token(Token = "0x20002D6")]
	public sealed class ChromaticAberrationComponent : PostProcessingComponentRenderTexture<ChromaticAberrationModel>
	{
		[Token(Token = "0x2000477")]
		private static class Uniforms
		{
			[Token(Token = "0x400118F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _ChromaticAberration_Amount;

			[Token(Token = "0x4001190")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _ChromaticAberration_Spectrum;
		}

		[Token(Token = "0x4000CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Texture2D m_SpectrumLut;

		[Token(Token = "0x170001AC")]
		public override bool active
		{
			[Token(Token = "0x60029CE")]
			[Address(RVA = "0x11B35A4", Offset = "0x11B35A4", VA = "0x11B35A4", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60029CF")]
		[Address(RVA = "0x11B3620", Offset = "0x11B3620", VA = "0x11B3620", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x60029D0")]
		[Address(RVA = "0x11B3648", Offset = "0x11B3648", VA = "0x11B3648", Slot = "10")]
		public override void Prepare(Material uberMaterial)
		{
		}

		[Token(Token = "0x60029D1")]
		[Address(RVA = "0x11B3900", Offset = "0x11B3900", VA = "0x11B3900")]
		public ChromaticAberrationComponent()
		{
		}
	}
	[Token(Token = "0x20002D7")]
	public sealed class ColorGradingComponent : PostProcessingComponentRenderTexture<ColorGradingModel>
	{
		[Token(Token = "0x2000478")]
		private static class Uniforms
		{
			[Token(Token = "0x4001191")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _LutParams;

			[Token(Token = "0x4001192")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _NeutralTonemapperParams1;

			[Token(Token = "0x4001193")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _NeutralTonemapperParams2;

			[Token(Token = "0x4001194")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _HueShift;

			[Token(Token = "0x4001195")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _Saturation;

			[Token(Token = "0x4001196")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _Contrast;

			[Token(Token = "0x4001197")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _Balance;

			[Token(Token = "0x4001198")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal static readonly int _Lift;

			[Token(Token = "0x4001199")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly int _InvGamma;

			[Token(Token = "0x400119A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal static readonly int _Gain;

			[Token(Token = "0x400119B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal static readonly int _Slope;

			[Token(Token = "0x400119C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal static readonly int _Power;

			[Token(Token = "0x400119D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal static readonly int _Offset;

			[Token(Token = "0x400119E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			internal static readonly int _ChannelMixerRed;

			[Token(Token = "0x400119F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal static readonly int _ChannelMixerGreen;

			[Token(Token = "0x40011A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			internal static readonly int _ChannelMixerBlue;

			[Token(Token = "0x40011A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal static readonly int _Curves;

			[Token(Token = "0x40011A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			internal static readonly int _LogLut;

			[Token(Token = "0x40011A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			internal static readonly int _LogLut_Params;

			[Token(Token = "0x40011A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			internal static readonly int _ExposureEV;
		}

		[Token(Token = "0x4000CFF")]
		private const int k_InternalLogLutSize = 32;

		[Token(Token = "0x4000D00")]
		private const int k_CurvePrecision = 128;

		[Token(Token = "0x4000D01")]
		private const float k_CurveStep = 1f / 128f;

		[Token(Token = "0x4000D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Texture2D m_GradingCurves;

		[Token(Token = "0x4000D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] m_pixels;

		[Token(Token = "0x170001AD")]
		public override bool active
		{
			[Token(Token = "0x60029D2")]
			[Address(RVA = "0x11B3A1C", Offset = "0x11B3A1C", VA = "0x11B3A1C", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60029D3")]
		[Address(RVA = "0x11B3A8C", Offset = "0x11B3A8C", VA = "0x11B3A8C")]
		private float StandardIlluminantY(float x)
		{
			return default(float);
		}

		[Token(Token = "0x60029D4")]
		[Address(RVA = "0x11B3AB8", Offset = "0x11B3AB8", VA = "0x11B3AB8")]
		private Vector3 CIExyToLMS(float x, float y)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60029D5")]
		[Address(RVA = "0x11B3B78", Offset = "0x11B3B78", VA = "0x11B3B78")]
		private Vector3 CalculateColorBalance(float temperature, float tint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60029D6")]
		[Address(RVA = "0x11B3C6C", Offset = "0x11B3C6C", VA = "0x11B3C6C")]
		private static Color NormalizeColor(Color c)
		{
			return default(Color);
		}

		[Token(Token = "0x60029D7")]
		[Address(RVA = "0x11B3D60", Offset = "0x11B3D60", VA = "0x11B3D60")]
		private static Vector3 ClampVector(Vector3 v, float min, float max)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60029D8")]
		[Address(RVA = "0x11B3E5C", Offset = "0x11B3E5C", VA = "0x11B3E5C")]
		public static Vector3 GetLiftValue(Color lift)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60029D9")]
		[Address(RVA = "0x11B3EE8", Offset = "0x11B3EE8", VA = "0x11B3EE8")]
		public static Vector3 GetGammaValue(Color gamma)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60029DA")]
		[Address(RVA = "0x11B4068", Offset = "0x11B4068", VA = "0x11B4068")]
		public static Vector3 GetGainValue(Color gain)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60029DB")]
		[Address(RVA = "0x11B4198", Offset = "0x11B4198", VA = "0x11B4198")]
		public static void CalculateLiftGammaGain(Color lift, Color gamma, Color gain, out Vector3 outLift, out Vector3 outGamma, out Vector3 outGain)
		{
		}

		[Token(Token = "0x60029DC")]
		[Address(RVA = "0x11B4240", Offset = "0x11B4240", VA = "0x11B4240")]
		public static Vector3 GetSlopeValue(Color slope)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60029DD")]
		[Address(RVA = "0x11B42E4", Offset = "0x11B42E4", VA = "0x11B42E4")]
		public static Vector3 GetPowerValue(Color power)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60029DE")]
		[Address(RVA = "0x11B444C", Offset = "0x11B444C", VA = "0x11B444C")]
		public static Vector3 GetOffsetValue(Color offset)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60029DF")]
		[Address(RVA = "0x11B44E8", Offset = "0x11B44E8", VA = "0x11B44E8")]
		public static void CalculateSlopePowerOffset(Color slope, Color power, Color offset, out Vector3 outSlope, out Vector3 outPower, out Vector3 outOffset)
		{
		}

		[Token(Token = "0x60029E0")]
		[Address(RVA = "0x11B4590", Offset = "0x11B4590", VA = "0x11B4590")]
		private TextureFormat GetCurveFormat()
		{
			return default(TextureFormat);
		}

		[Token(Token = "0x60029E1")]
		[Address(RVA = "0x11B45C4", Offset = "0x11B45C4", VA = "0x11B45C4")]
		private Texture2D GetCurveTexture()
		{
			return null;
		}

		[Token(Token = "0x60029E2")]
		[Address(RVA = "0x11B4B58", Offset = "0x11B4B58", VA = "0x11B4B58")]
		private bool IsLogLutValid(RenderTexture lut)
		{
			return default(bool);
		}

		[Token(Token = "0x60029E3")]
		[Address(RVA = "0x11B4C04", Offset = "0x11B4C04", VA = "0x11B4C04")]
		private RenderTextureFormat GetLutFormat()
		{
			return default(RenderTextureFormat);
		}

		[Token(Token = "0x60029E4")]
		[Address(RVA = "0x11B4C34", Offset = "0x11B4C34", VA = "0x11B4C34")]
		private void GenerateLut()
		{
		}

		[Token(Token = "0x60029E5")]
		[Address(RVA = "0x11B54B0", Offset = "0x11B54B0", VA = "0x11B54B0", Slot = "10")]
		public override void Prepare(Material uberMaterial)
		{
		}

		[Token(Token = "0x60029E6")]
		[Address(RVA = "0x11B56F0", Offset = "0x11B56F0", VA = "0x11B56F0")]
		public void OnGUI()
		{
		}

		[Token(Token = "0x60029E7")]
		[Address(RVA = "0x11B5814", Offset = "0x11B5814", VA = "0x11B5814", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x60029E8")]
		[Address(RVA = "0x11B5880", Offset = "0x11B5880", VA = "0x11B5880")]
		public ColorGradingComponent()
		{
		}
	}
	[Token(Token = "0x20002D8")]
	public sealed class DepthOfFieldComponent : PostProcessingComponentRenderTexture<DepthOfFieldModel>
	{
		[Token(Token = "0x2000479")]
		private static class Uniforms
		{
			[Token(Token = "0x40011A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _DepthOfFieldTex;

			[Token(Token = "0x40011A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _DepthOfFieldCoCTex;

			[Token(Token = "0x40011A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _Distance;

			[Token(Token = "0x40011A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _LensCoeff;

			[Token(Token = "0x40011A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _MaxCoC;

			[Token(Token = "0x40011AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _RcpMaxCoC;

			[Token(Token = "0x40011AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _RcpAspect;

			[Token(Token = "0x40011AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal static readonly int _MainTex;

			[Token(Token = "0x40011AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly int _CoCTex;

			[Token(Token = "0x40011AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal static readonly int _TaaParams;

			[Token(Token = "0x40011AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal static readonly int _DepthOfFieldParams;
		}

		[Token(Token = "0x4000D04")]
		private const string k_ShaderString = "Hidden/Post FX/Depth Of Field";

		[Token(Token = "0x4000D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RenderTexture m_CoCHistory;

		[Token(Token = "0x4000D06")]
		private const float k_FilmHeight = 0.024f;

		[Token(Token = "0x170001AE")]
		public override bool active
		{
			[Token(Token = "0x60029E9")]
			[Address(RVA = "0x11B67DC", Offset = "0x11B67DC", VA = "0x11B67DC", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60029EA")]
		[Address(RVA = "0x11B684C", Offset = "0x11B684C", VA = "0x11B684C", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x60029EB")]
		[Address(RVA = "0x11B6854", Offset = "0x11B6854", VA = "0x11B6854")]
		private float CalculateFocalLength()
		{
			return default(float);
		}

		[Token(Token = "0x60029EC")]
		[Address(RVA = "0x11B6920", Offset = "0x11B6920", VA = "0x11B6920")]
		private float CalculateMaxCoCRadius(int screenHeight)
		{
			return default(float);
		}

		[Token(Token = "0x60029ED")]
		[Address(RVA = "0x11B69CC", Offset = "0x11B69CC", VA = "0x11B69CC")]
		private bool CheckHistory(int width, int height)
		{
			return default(bool);
		}

		[Token(Token = "0x60029EE")]
		[Address(RVA = "0x11B6AAC", Offset = "0x11B6AAC", VA = "0x11B6AAC")]
		private RenderTextureFormat SelectFormat(RenderTextureFormat primary, RenderTextureFormat secondary)
		{
			return default(RenderTextureFormat);
		}

		[Token(Token = "0x60029EF")]
		[Address(RVA = "0x11B6AFC", Offset = "0x11B6AFC", VA = "0x11B6AFC")]
		public void Prepare(RenderTexture source, Material uberMaterial, bool antialiasCoC, Vector2 taaJitter, float taaBlending)
		{
		}

		[Token(Token = "0x60029F0")]
		[Address(RVA = "0x11B72C8", Offset = "0x11B72C8", VA = "0x11B72C8", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x60029F1")]
		[Address(RVA = "0x11B7350", Offset = "0x11B7350", VA = "0x11B7350")]
		public DepthOfFieldComponent()
		{
		}
	}
	[Token(Token = "0x20002D9")]
	public sealed class DitheringComponent : PostProcessingComponentRenderTexture<DitheringModel>
	{
		[Token(Token = "0x200047A")]
		private static class Uniforms
		{
			[Token(Token = "0x40011B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _DitheringTex;

			[Token(Token = "0x40011B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _DitheringCoords;
		}

		[Token(Token = "0x4000D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Texture2D[] noiseTextures;

		[Token(Token = "0x4000D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int textureIndex;

		[Token(Token = "0x4000D09")]
		private const int k_TextureCount = 64;

		[Token(Token = "0x170001AF")]
		public override bool active
		{
			[Token(Token = "0x60029F2")]
			[Address(RVA = "0x11B75F4", Offset = "0x11B75F4", VA = "0x11B75F4", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60029F3")]
		[Address(RVA = "0x11B7664", Offset = "0x11B7664", VA = "0x11B7664", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x60029F4")]
		[Address(RVA = "0x11B766C", Offset = "0x11B766C", VA = "0x11B766C")]
		private void LoadNoiseTextures()
		{
		}

		[Token(Token = "0x60029F5")]
		[Address(RVA = "0x11B77C0", Offset = "0x11B77C0", VA = "0x11B77C0", Slot = "10")]
		public override void Prepare(Material uberMaterial)
		{
		}

		[Token(Token = "0x60029F6")]
		[Address(RVA = "0x11B7990", Offset = "0x11B7990", VA = "0x11B7990")]
		public DitheringComponent()
		{
		}
	}
	[Token(Token = "0x20002DA")]
	public sealed class EyeAdaptationComponent : PostProcessingComponentRenderTexture<EyeAdaptationModel>
	{
		[Token(Token = "0x200047B")]
		private static class Uniforms
		{
			[Token(Token = "0x40011B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _Params;

			[Token(Token = "0x40011B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _Speed;

			[Token(Token = "0x40011B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _ScaleOffsetRes;

			[Token(Token = "0x40011B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _ExposureCompensation;

			[Token(Token = "0x40011B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _AutoExposure;

			[Token(Token = "0x40011B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _DebugWidth;
		}

		[Token(Token = "0x4000D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ComputeShader m_EyeCompute;

		[Token(Token = "0x4000D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ComputeBuffer m_HistogramBuffer;

		[Token(Token = "0x4000D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly RenderTexture[] m_AutoExposurePool;

		[Token(Token = "0x4000D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int m_AutoExposurePingPing;

		[Token(Token = "0x4000D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RenderTexture m_CurrentAutoExposure;

		[Token(Token = "0x4000D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private RenderTexture m_DebugHistogram;

		[Token(Token = "0x4000D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static uint[] s_EmptyHistogramBuffer;

		[Token(Token = "0x4000D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_FirstFrame;

		[Token(Token = "0x4000D12")]
		private const int k_HistogramBins = 64;

		[Token(Token = "0x4000D13")]
		private const int k_HistogramThreadX = 16;

		[Token(Token = "0x4000D14")]
		private const int k_HistogramThreadY = 16;

		[Token(Token = "0x170001B0")]
		public override bool active
		{
			[Token(Token = "0x60029F7")]
			[Address(RVA = "0x11B7A90", Offset = "0x11B7A90", VA = "0x11B7A90", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60029F8")]
		[Address(RVA = "0x11B7B0C", Offset = "0x11B7B0C", VA = "0x11B7B0C")]
		public void ResetHistory()
		{
		}

		[Token(Token = "0x60029F9")]
		[Address(RVA = "0x11B7B18", Offset = "0x11B7B18", VA = "0x11B7B18", Slot = "6")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x60029FA")]
		[Address(RVA = "0x11B7B24", Offset = "0x11B7B24", VA = "0x11B7B24", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x60029FB")]
		[Address(RVA = "0x11B7C1C", Offset = "0x11B7C1C", VA = "0x11B7C1C")]
		private Vector4 GetHistogramScaleOffsetRes()
		{
			return default(Vector4);
		}

		[Token(Token = "0x60029FC")]
		[Address(RVA = "0x11B7D30", Offset = "0x11B7D30", VA = "0x11B7D30")]
		public Texture Prepare(RenderTexture source, Material uberMaterial)
		{
			return null;
		}

		[Token(Token = "0x60029FD")]
		[Address(RVA = "0x11B86BC", Offset = "0x11B86BC", VA = "0x11B86BC")]
		public void OnGUI()
		{
		}

		[Token(Token = "0x60029FE")]
		[Address(RVA = "0x11B8830", Offset = "0x11B8830", VA = "0x11B8830")]
		public EyeAdaptationComponent()
		{
		}
	}
	[Token(Token = "0x20002DB")]
	public sealed class FogComponent : PostProcessingComponentCommandBuffer<FogModel>
	{
		[Token(Token = "0x200047C")]
		private static class Uniforms
		{
			[Token(Token = "0x40011B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _FogColor;

			[Token(Token = "0x40011B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _Density;

			[Token(Token = "0x40011BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _Start;

			[Token(Token = "0x40011BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _End;

			[Token(Token = "0x40011BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _TempRT;
		}

		[Token(Token = "0x4000D15")]
		private const string k_ShaderString = "Hidden/Post FX/Fog";

		[Token(Token = "0x170001B1")]
		public override bool active
		{
			[Token(Token = "0x60029FF")]
			[Address(RVA = "0x11B8AA4", Offset = "0x11B8AA4", VA = "0x11B8AA4", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002A00")]
		[Address(RVA = "0x11B8B34", Offset = "0x11B8B34", VA = "0x11B8B34", Slot = "11")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x6002A01")]
		[Address(RVA = "0x11B8B7C", Offset = "0x11B8B7C", VA = "0x11B8B7C", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x6002A02")]
		[Address(RVA = "0x11B8B84", Offset = "0x11B8B84", VA = "0x11B8B84", Slot = "10")]
		public override CameraEvent GetCameraEvent()
		{
			return default(CameraEvent);
		}

		[Token(Token = "0x6002A03")]
		[Address(RVA = "0x11B8B8C", Offset = "0x11B8B8C", VA = "0x11B8B8C", Slot = "12")]
		public override void PopulateCommandBuffer(CommandBuffer cb)
		{
		}

		[Token(Token = "0x6002A04")]
		[Address(RVA = "0x11B900C", Offset = "0x11B900C", VA = "0x11B900C")]
		public FogComponent()
		{
		}
	}
	[Token(Token = "0x20002DC")]
	public sealed class FxaaComponent : PostProcessingComponentRenderTexture<AntialiasingModel>
	{
		[Token(Token = "0x200047D")]
		private static class Uniforms
		{
			[Token(Token = "0x40011BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _QualitySettings;

			[Token(Token = "0x40011BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _ConsoleSettings;
		}

		[Token(Token = "0x170001B2")]
		public override bool active
		{
			[Token(Token = "0x6002A05")]
			[Address(RVA = "0x11B9174", Offset = "0x11B9174", VA = "0x11B9174", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002A06")]
		[Address(RVA = "0x11B91EC", Offset = "0x11B91EC", VA = "0x11B91EC")]
		public void Render(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6002A07")]
		[Address(RVA = "0x11B9450", Offset = "0x11B9450", VA = "0x11B9450")]
		public FxaaComponent()
		{
		}
	}
	[Token(Token = "0x20002DD")]
	public sealed class GrainComponent : PostProcessingComponentRenderTexture<GrainModel>
	{
		[Token(Token = "0x200047E")]
		private static class Uniforms
		{
			[Token(Token = "0x40011BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _Grain_Params1;

			[Token(Token = "0x40011C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _Grain_Params2;

			[Token(Token = "0x40011C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _GrainTex;

			[Token(Token = "0x40011C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _Phase;
		}

		[Token(Token = "0x4000D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RenderTexture m_GrainLookupRT;

		[Token(Token = "0x170001B3")]
		public override bool active
		{
			[Token(Token = "0x6002A08")]
			[Address(RVA = "0x11B9550", Offset = "0x11B9550", VA = "0x11B9550", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002A09")]
		[Address(RVA = "0x11B95DC", Offset = "0x11B95DC", VA = "0x11B95DC", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x6002A0A")]
		[Address(RVA = "0x11B9604", Offset = "0x11B9604", VA = "0x11B9604", Slot = "10")]
		public override void Prepare(Material uberMaterial)
		{
		}

		[Token(Token = "0x6002A0B")]
		[Address(RVA = "0x11B99B8", Offset = "0x11B99B8", VA = "0x11B99B8")]
		public GrainComponent()
		{
		}
	}
	[Token(Token = "0x20002DE")]
	public sealed class MotionBlurComponent : PostProcessingComponentCommandBuffer<MotionBlurModel>
	{
		[Token(Token = "0x200047F")]
		private static class Uniforms
		{
			[Token(Token = "0x40011C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _VelocityScale;

			[Token(Token = "0x40011C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _MaxBlurRadius;

			[Token(Token = "0x40011C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _RcpMaxBlurRadius;

			[Token(Token = "0x40011C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _VelocityTex;

			[Token(Token = "0x40011C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _MainTex;

			[Token(Token = "0x40011C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _Tile2RT;

			[Token(Token = "0x40011C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _Tile4RT;

			[Token(Token = "0x40011CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal static readonly int _Tile8RT;

			[Token(Token = "0x40011CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly int _TileMaxOffs;

			[Token(Token = "0x40011CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal static readonly int _TileMaxLoop;

			[Token(Token = "0x40011CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal static readonly int _TileVRT;

			[Token(Token = "0x40011CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal static readonly int _NeighborMaxTex;

			[Token(Token = "0x40011CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal static readonly int _LoopCount;

			[Token(Token = "0x40011D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			internal static readonly int _TempRT;

			[Token(Token = "0x40011D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal static readonly int _History1LumaTex;

			[Token(Token = "0x40011D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			internal static readonly int _History2LumaTex;

			[Token(Token = "0x40011D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal static readonly int _History3LumaTex;

			[Token(Token = "0x40011D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			internal static readonly int _History4LumaTex;

			[Token(Token = "0x40011D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			internal static readonly int _History1ChromaTex;

			[Token(Token = "0x40011D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			internal static readonly int _History2ChromaTex;

			[Token(Token = "0x40011D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			internal static readonly int _History3ChromaTex;

			[Token(Token = "0x40011D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			internal static readonly int _History4ChromaTex;

			[Token(Token = "0x40011D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			internal static readonly int _History1Weight;

			[Token(Token = "0x40011DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			internal static readonly int _History2Weight;

			[Token(Token = "0x40011DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			internal static readonly int _History3Weight;

			[Token(Token = "0x40011DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			internal static readonly int _History4Weight;
		}

		[Token(Token = "0x2000480")]
		private enum Pass
		{
			[Token(Token = "0x40011DE")]
			VelocitySetup,
			[Token(Token = "0x40011DF")]
			TileMax1,
			[Token(Token = "0x40011E0")]
			TileMax2,
			[Token(Token = "0x40011E1")]
			TileMaxV,
			[Token(Token = "0x40011E2")]
			NeighborMax,
			[Token(Token = "0x40011E3")]
			Reconstruction,
			[Token(Token = "0x40011E4")]
			FrameCompression,
			[Token(Token = "0x40011E5")]
			FrameBlendingChroma,
			[Token(Token = "0x40011E6")]
			FrameBlendingRaw
		}

		[Token(Token = "0x2000481")]
		public class ReconstructionFilter
		{
			[Token(Token = "0x40011E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private RenderTextureFormat m_VectorRTFormat;

			[Token(Token = "0x40011E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private RenderTextureFormat m_PackedRTFormat;

			[Token(Token = "0x6002EFE")]
			[Address(RVA = "0x11BA140", Offset = "0x11BA140", VA = "0x11BA140")]
			public ReconstructionFilter()
			{
			}

			[Token(Token = "0x6002EFF")]
			[Address(RVA = "0x11BC184", Offset = "0x11BC184", VA = "0x11BC184")]
			private void CheckTextureFormatSupport()
			{
			}

			[Token(Token = "0x6002F00")]
			[Address(RVA = "0x11BA328", Offset = "0x11BA328", VA = "0x11BA328")]
			public bool IsSupported()
			{
				return default(bool);
			}

			[Token(Token = "0x6002F01")]
			[Address(RVA = "0x11BAA18", Offset = "0x11BAA18", VA = "0x11BAA18")]
			public void ProcessImage(PostProcessingContext context, CommandBuffer cb, ref MotionBlurModel.Settings settings, RenderTargetIdentifier source, RenderTargetIdentifier destination, Material material)
			{
			}
		}

		[Token(Token = "0x2000482")]
		public class FrameBlendingFilter
		{
			[Token(Token = "0x20004B9")]
			private struct Frame
			{
				[Token(Token = "0x40012E9")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public RenderTexture lumaTexture;

				[Token(Token = "0x40012EA")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public RenderTexture chromaTexture;

				[Token(Token = "0x40012EB")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private float m_Time;

				[Token(Token = "0x40012EC")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private RenderTargetIdentifier[] m_MRT;

				[Token(Token = "0x6002F2D")]
				[Address(RVA = "0x11BC0A0", Offset = "0x11BC0A0", VA = "0x11BC0A0")]
				public float CalculateWeight(float strength, float currentTime)
				{
					return default(float);
				}

				[Token(Token = "0x6002F2E")]
				[Address(RVA = "0x11BBB3C", Offset = "0x11BBB3C", VA = "0x11BBB3C")]
				public void Release()
				{
				}

				[Token(Token = "0x6002F2F")]
				[Address(RVA = "0x11BBC08", Offset = "0x11BBC08", VA = "0x11BBC08")]
				public void MakeRecord(CommandBuffer cb, RenderTargetIdentifier source, int width, int height, Material material)
				{
				}

				[Token(Token = "0x6002F30")]
				[Address(RVA = "0x11BBEB8", Offset = "0x11BBEB8", VA = "0x11BBEB8")]
				public void MakeRecordRaw(CommandBuffer cb, RenderTargetIdentifier source, int width, int height, RenderTextureFormat format)
				{
				}
			}

			[Token(Token = "0x40011E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private bool m_UseCompression;

			[Token(Token = "0x40011EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private RenderTextureFormat m_RawTextureFormat;

			[Token(Token = "0x40011EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Frame[] m_FrameList;

			[Token(Token = "0x40011EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int m_LastFrameCount;

			[Token(Token = "0x6002F02")]
			[Address(RVA = "0x11BA1EC", Offset = "0x11BA1EC", VA = "0x11BA1EC")]
			public FrameBlendingFilter()
			{
			}

			[Token(Token = "0x6002F03")]
			[Address(RVA = "0x11BA3A4", Offset = "0x11BA3A4", VA = "0x11BA3A4")]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002F04")]
			[Address(RVA = "0x11BB898", Offset = "0x11BB898", VA = "0x11BB898")]
			public void PushFrame(CommandBuffer cb, RenderTargetIdentifier source, int width, int height, Material material)
			{
			}

			[Token(Token = "0x6002F05")]
			[Address(RVA = "0x11BB338", Offset = "0x11BB338", VA = "0x11BB338")]
			public void BlendFrames(CommandBuffer cb, float strength, RenderTargetIdentifier source, RenderTargetIdentifier destination, Material material)
			{
			}

			[Token(Token = "0x6002F06")]
			[Address(RVA = "0x11BBA34", Offset = "0x11BBA34", VA = "0x11BBA34")]
			private static bool CheckSupportCompression()
			{
				return default(bool);
			}

			[Token(Token = "0x6002F07")]
			[Address(RVA = "0x11BBA6C", Offset = "0x11BBA6C", VA = "0x11BBA6C")]
			private static RenderTextureFormat GetPreferredRenderTextureFormat()
			{
				return default(RenderTextureFormat);
			}

			[Token(Token = "0x6002F08")]
			[Address(RVA = "0x11BC028", Offset = "0x11BC028", VA = "0x11BC028")]
			private Frame GetFrameRelative(int offset)
			{
				return default(Frame);
			}
		}

		[Token(Token = "0x4000D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ReconstructionFilter m_ReconstructionFilter;

		[Token(Token = "0x4000D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private FrameBlendingFilter m_FrameBlendingFilter;

		[Token(Token = "0x4000D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_FirstFrame;

		[Token(Token = "0x170001B4")]
		public ReconstructionFilter reconstructionFilter
		{
			[Token(Token = "0x6002A0C")]
			[Address(RVA = "0x11BA0D8", Offset = "0x11BA0D8", VA = "0x11BA0D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B5")]
		public FrameBlendingFilter frameBlendingFilter
		{
			[Token(Token = "0x6002A0D")]
			[Address(RVA = "0x11BA184", Offset = "0x11BA184", VA = "0x11BA184")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B6")]
		public override bool active
		{
			[Token(Token = "0x6002A0E")]
			[Address(RVA = "0x11BA264", Offset = "0x11BA264", VA = "0x11BA264", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002A0F")]
		[Address(RVA = "0x11BA330", Offset = "0x11BA330", VA = "0x11BA330", Slot = "11")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x6002A10")]
		[Address(RVA = "0x11BA378", Offset = "0x11BA378", VA = "0x11BA378")]
		public void ResetHistory()
		{
		}

		[Token(Token = "0x6002A11")]
		[Address(RVA = "0x11BA42C", Offset = "0x11BA42C", VA = "0x11BA42C", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x6002A12")]
		[Address(RVA = "0x11BA434", Offset = "0x11BA434", VA = "0x11BA434", Slot = "10")]
		public override CameraEvent GetCameraEvent()
		{
			return default(CameraEvent);
		}

		[Token(Token = "0x6002A13")]
		[Address(RVA = "0x11BA43C", Offset = "0x11BA43C", VA = "0x11BA43C", Slot = "6")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x6002A14")]
		[Address(RVA = "0x11BA448", Offset = "0x11BA448", VA = "0x11BA448", Slot = "12")]
		public override void PopulateCommandBuffer(CommandBuffer cb)
		{
		}

		[Token(Token = "0x6002A15")]
		[Address(RVA = "0x11BB9CC", Offset = "0x11BB9CC", VA = "0x11BB9CC", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x6002A16")]
		[Address(RVA = "0x11BB9DC", Offset = "0x11BB9DC", VA = "0x11BB9DC")]
		public MotionBlurComponent()
		{
		}
	}
	[Token(Token = "0x20002DF")]
	public sealed class ScreenSpaceReflectionComponent : PostProcessingComponentCommandBuffer<ScreenSpaceReflectionModel>
	{
		[Token(Token = "0x2000483")]
		private static class Uniforms
		{
			[Token(Token = "0x40011ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _RayStepSize;

			[Token(Token = "0x40011EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _AdditiveReflection;

			[Token(Token = "0x40011EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _BilateralUpsampling;

			[Token(Token = "0x40011F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _TreatBackfaceHitAsMiss;

			[Token(Token = "0x40011F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _AllowBackwardsRays;

			[Token(Token = "0x40011F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _TraceBehindObjects;

			[Token(Token = "0x40011F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _MaxSteps;

			[Token(Token = "0x40011F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal static readonly int _FullResolutionFiltering;

			[Token(Token = "0x40011F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly int _HalfResolution;

			[Token(Token = "0x40011F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal static readonly int _HighlightSuppression;

			[Token(Token = "0x40011F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal static readonly int _PixelsPerMeterAtOneMeter;

			[Token(Token = "0x40011F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal static readonly int _ScreenEdgeFading;

			[Token(Token = "0x40011F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal static readonly int _ReflectionBlur;

			[Token(Token = "0x40011FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			internal static readonly int _MaxRayTraceDistance;

			[Token(Token = "0x40011FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal static readonly int _FadeDistance;

			[Token(Token = "0x40011FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			internal static readonly int _LayerThickness;

			[Token(Token = "0x40011FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal static readonly int _SSRMultiplier;

			[Token(Token = "0x40011FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			internal static readonly int _FresnelFade;

			[Token(Token = "0x40011FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			internal static readonly int _FresnelFadePower;

			[Token(Token = "0x4001200")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			internal static readonly int _ReflectionBufferSize;

			[Token(Token = "0x4001201")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			internal static readonly int _ScreenSize;

			[Token(Token = "0x4001202")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			internal static readonly int _InvScreenSize;

			[Token(Token = "0x4001203")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			internal static readonly int _ProjInfo;

			[Token(Token = "0x4001204")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			internal static readonly int _CameraClipInfo;

			[Token(Token = "0x4001205")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			internal static readonly int _ProjectToPixelMatrix;

			[Token(Token = "0x4001206")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			internal static readonly int _WorldToCameraMatrix;

			[Token(Token = "0x4001207")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			internal static readonly int _CameraToWorldMatrix;

			[Token(Token = "0x4001208")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			internal static readonly int _Axis;

			[Token(Token = "0x4001209")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			internal static readonly int _CurrentMipLevel;

			[Token(Token = "0x400120A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			internal static readonly int _NormalAndRoughnessTexture;

			[Token(Token = "0x400120B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			internal static readonly int _HitPointTexture;

			[Token(Token = "0x400120C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			internal static readonly int _BlurTexture;

			[Token(Token = "0x400120D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			internal static readonly int _FilteredReflections;

			[Token(Token = "0x400120E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			internal static readonly int _FinalReflectionTexture;

			[Token(Token = "0x400120F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			internal static readonly int _TempTexture;
		}

		[Token(Token = "0x2000484")]
		private enum PassIndex
		{
			[Token(Token = "0x4001211")]
			RayTraceStep,
			[Token(Token = "0x4001212")]
			CompositeFinal,
			[Token(Token = "0x4001213")]
			Blur,
			[Token(Token = "0x4001214")]
			CompositeSSR,
			[Token(Token = "0x4001215")]
			MinMipGeneration,
			[Token(Token = "0x4001216")]
			HitPointToReflections,
			[Token(Token = "0x4001217")]
			BilateralKeyPack,
			[Token(Token = "0x4001218")]
			BlitDepthAsCSZ,
			[Token(Token = "0x4001219")]
			PoissonBlur
		}

		[Token(Token = "0x4000D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool k_HighlightSuppression;

		[Token(Token = "0x4000D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool k_TraceBehindObjects;

		[Token(Token = "0x4000D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		private bool k_TreatBackfaceHitAsMiss;

		[Token(Token = "0x4000D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		private bool k_BilateralUpsample;

		[Token(Token = "0x4000D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly int[] m_ReflectionTextures;

		[Token(Token = "0x170001B7")]
		public override bool active
		{
			[Token(Token = "0x6002A18")]
			[Address(RVA = "0xF518C0", Offset = "0xF518C0", VA = "0xF518C0", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002A17")]
		[Address(RVA = "0xF518B8", Offset = "0xF518B8", VA = "0xF518B8", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x6002A19")]
		[Address(RVA = "0xF51940", Offset = "0xF51940", VA = "0xF51940", Slot = "6")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x6002A1A")]
		[Address(RVA = "0xF51A68", Offset = "0xF51A68", VA = "0xF51A68", Slot = "11")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x6002A1B")]
		[Address(RVA = "0xF51AB0", Offset = "0xF51AB0", VA = "0xF51AB0", Slot = "10")]
		public override CameraEvent GetCameraEvent()
		{
			return default(CameraEvent);
		}

		[Token(Token = "0x6002A1C")]
		[Address(RVA = "0xF51AB8", Offset = "0xF51AB8", VA = "0xF51AB8", Slot = "12")]
		public override void PopulateCommandBuffer(CommandBuffer cb)
		{
		}

		[Token(Token = "0x6002A1D")]
		[Address(RVA = "0xF4F1C4", Offset = "0xF4F1C4", VA = "0xF4F1C4")]
		public ScreenSpaceReflectionComponent()
		{
		}
	}
	[Token(Token = "0x20002E0")]
	public sealed class TaaComponent : PostProcessingComponentRenderTexture<AntialiasingModel>
	{
		[Token(Token = "0x2000485")]
		private static class Uniforms
		{
			[Token(Token = "0x400121A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static int _Jitter;

			[Token(Token = "0x400121B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static int _SharpenParameters;

			[Token(Token = "0x400121C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static int _FinalBlendParameters;

			[Token(Token = "0x400121D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static int _HistoryTex;

			[Token(Token = "0x400121E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static int _MainTex;
		}

		[Token(Token = "0x4000D1F")]
		private const string k_ShaderString = "Hidden/Post FX/Temporal Anti-aliasing";

		[Token(Token = "0x4000D20")]
		private const int k_SampleCount = 8;

		[Token(Token = "0x4000D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly RenderBuffer[] m_MRT;

		[Token(Token = "0x4000D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int m_SampleIndex;

		[Token(Token = "0x4000D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool m_ResetHistory;

		[Token(Token = "0x4000D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RenderTexture m_HistoryTexture;

		[Token(Token = "0x4000D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x942B0C", Offset = "0x942B0C")]
		private Vector2 <jitterVector>k__BackingField;

		[Token(Token = "0x170001B8")]
		public override bool active
		{
			[Token(Token = "0x6002A1E")]
			[Address(RVA = "0xF53308", Offset = "0xF53308", VA = "0xF53308", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001B9")]
		public Vector2 jitterVector
		{
			[Token(Token = "0x6002A20")]
			[Address(RVA = "0xF533A8", Offset = "0xF533A8", VA = "0xF533A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A9130", Offset = "0x9A9130")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6002A21")]
			[Address(RVA = "0xF533B0", Offset = "0xF533B0", VA = "0xF533B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A9140", Offset = "0x9A9140")]
			private set
			{
			}
		}

		[Token(Token = "0x6002A1F")]
		[Address(RVA = "0xF533A0", Offset = "0xF533A0", VA = "0xF533A0", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x6002A22")]
		[Address(RVA = "0xF51180", Offset = "0xF51180", VA = "0xF51180")]
		public void ResetHistory()
		{
		}

		[Token(Token = "0x6002A23")]
		[Address(RVA = "0xF4FC1C", Offset = "0xF4FC1C", VA = "0xF4FC1C")]
		public void SetProjectionMatrix(Func<Vector2, Matrix4x4> jitteredFunc)
		{
		}

		[Token(Token = "0x6002A24")]
		[Address(RVA = "0xF50744", Offset = "0xF50744", VA = "0xF50744")]
		public void Render(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6002A25")]
		[Address(RVA = "0xF53AD8", Offset = "0xF53AD8", VA = "0xF53AD8")]
		private float GetHaltonValue(int index, int radix)
		{
			return default(float);
		}

		[Token(Token = "0x6002A26")]
		[Address(RVA = "0xF533B8", Offset = "0xF533B8", VA = "0xF533B8")]
		private Vector2 GenerateRandomOffset()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002A27")]
		[Address(RVA = "0xF53480", Offset = "0xF53480", VA = "0xF53480")]
		private Matrix4x4 GetPerspectiveProjectionMatrix(Vector2 offset)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6002A28")]
		[Address(RVA = "0xF53944", Offset = "0xF53944", VA = "0xF53944")]
		private Matrix4x4 GetOrthographicProjectionMatrix(Vector2 offset)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6002A29")]
		[Address(RVA = "0xF53B1C", Offset = "0xF53B1C", VA = "0xF53B1C", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x6002A2A")]
		[Address(RVA = "0xF4F238", Offset = "0xF4F238", VA = "0xF4F238")]
		public TaaComponent()
		{
		}
	}
	[Token(Token = "0x20002E1")]
	public sealed class UserLutComponent : PostProcessingComponentRenderTexture<UserLutModel>
	{
		[Token(Token = "0x2000486")]
		private static class Uniforms
		{
			[Token(Token = "0x400121F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _UserLut;

			[Token(Token = "0x4001220")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _UserLut_Params;
		}

		[Token(Token = "0x170001BA")]
		public override bool active
		{
			[Token(Token = "0x6002A2B")]
			[Address(RVA = "0xF53CC8", Offset = "0xF53CC8", VA = "0xF53CC8", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002A2C")]
		[Address(RVA = "0xF53E10", Offset = "0xF53E10", VA = "0xF53E10", Slot = "10")]
		public override void Prepare(Material uberMaterial)
		{
		}

		[Token(Token = "0x6002A2D")]
		[Address(RVA = "0xF50E2C", Offset = "0xF50E2C", VA = "0xF50E2C")]
		public void OnGUI()
		{
		}

		[Token(Token = "0x6002A2E")]
		[Address(RVA = "0xF4F2A8", Offset = "0xF4F2A8", VA = "0xF4F2A8")]
		public UserLutComponent()
		{
		}
	}
	[Token(Token = "0x20002E2")]
	public sealed class VignetteComponent : PostProcessingComponentRenderTexture<VignetteModel>
	{
		[Token(Token = "0x2000487")]
		private static class Uniforms
		{
			[Token(Token = "0x4001221")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _Vignette_Color;

			[Token(Token = "0x4001222")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _Vignette_Center;

			[Token(Token = "0x4001223")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _Vignette_Settings;

			[Token(Token = "0x4001224")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _Vignette_Mask;

			[Token(Token = "0x4001225")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _Vignette_Opacity;
		}

		[Token(Token = "0x170001BB")]
		public override bool active
		{
			[Token(Token = "0x6002A2F")]
			[Address(RVA = "0xF5401C", Offset = "0xF5401C", VA = "0xF5401C", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002A30")]
		[Address(RVA = "0xF5408C", Offset = "0xF5408C", VA = "0xF5408C", Slot = "10")]
		public override void Prepare(Material uberMaterial)
		{
		}

		[Token(Token = "0x6002A31")]
		[Address(RVA = "0xF4F2F8", Offset = "0xF4F2F8", VA = "0xF4F2F8")]
		public VignetteComponent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002E3")]
	public class AmbientOcclusionModel : PostProcessingModel
	{
		[Token(Token = "0x2000488")]
		public enum SampleCount
		{
			[Token(Token = "0x4001227")]
			Lowest = 3,
			[Token(Token = "0x4001228")]
			Low = 6,
			[Token(Token = "0x4001229")]
			Medium = 10,
			[Token(Token = "0x400122A")]
			High = 16
		}

		[Serializable]
		[Token(Token = "0x2000489")]
		public struct Settings
		{
			[Token(Token = "0x400122B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x942F70", Offset = "0x942F70")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x942F70", Offset = "0x942F70")]
			public float intensity;

			[Token(Token = "0x400122C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x942FC4", Offset = "0x942FC4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x942FC4", Offset = "0x942FC4")]
			public float radius;

			[Token(Token = "0x400122D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x943018", Offset = "0x943018")]
			public SampleCount sampleCount;

			[Token(Token = "0x400122E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x943050", Offset = "0x943050")]
			public bool downsampling;

			[Token(Token = "0x400122F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x943088", Offset = "0x943088")]
			public bool forceForwardCompatibility;

			[Token(Token = "0x4001230")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9430C0", Offset = "0x9430C0")]
			public bool ambientOnly;

			[Token(Token = "0x4001231")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9430F8", Offset = "0x9430F8")]
			public bool highPrecision;

			[Token(Token = "0x17000247")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6002F0D")]
				[Address(RVA = "0x11B11D0", Offset = "0x11B11D0", VA = "0x11B11D0")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4000D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x170001BC")]
		public Settings settings
		{
			[Token(Token = "0x6002A32")]
			[Address(RVA = "0x11B11A4", Offset = "0x11B11A4", VA = "0x11B11A4")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6002A33")]
			[Address(RVA = "0x11B11B4", Offset = "0x11B11B4", VA = "0x11B11B4")]
			set
			{
			}
		}

		[Token(Token = "0x6002A34")]
		[Address(RVA = "0x11B11C0", Offset = "0x11B11C0", VA = "0x11B11C0", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6002A35")]
		[Address(RVA = "0x11B11E8", Offset = "0x11B11E8", VA = "0x11B11E8")]
		public AmbientOcclusionModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002E4")]
	public class AntialiasingModel : PostProcessingModel
	{
		[Token(Token = "0x200048A")]
		public enum Method
		{
			[Token(Token = "0x4001233")]
			Fxaa,
			[Token(Token = "0x4001234")]
			Taa
		}

		[Token(Token = "0x200048B")]
		public enum FxaaPreset
		{
			[Token(Token = "0x4001236")]
			ExtremePerformance,
			[Token(Token = "0x4001237")]
			Performance,
			[Token(Token = "0x4001238")]
			Default,
			[Token(Token = "0x4001239")]
			Quality,
			[Token(Token = "0x400123A")]
			ExtremeQuality
		}

		[Serializable]
		[Token(Token = "0x200048C")]
		public struct FxaaQualitySettings
		{
			[Token(Token = "0x400123B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x943130", Offset = "0x943130")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x943130", Offset = "0x943130")]
			public float subpixelAliasingRemovalAmount;

			[Token(Token = "0x400123C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x943184", Offset = "0x943184")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x943184", Offset = "0x943184")]
			public float edgeDetectionThreshold;

			[Token(Token = "0x400123D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9431E0", Offset = "0x9431E0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9431E0", Offset = "0x9431E0")]
			public float minimumRequiredLuminance;

			[Token(Token = "0x400123E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static FxaaQualitySettings[] presets;
		}

		[Serializable]
		[Token(Token = "0x200048D")]
		public struct FxaaConsoleSettings
		{
			[Token(Token = "0x400123F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x943238", Offset = "0x943238")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x943238", Offset = "0x943238")]
			public float subpixelSpreadAmount;

			[Token(Token = "0x4001240")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x943290", Offset = "0x943290")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x943290", Offset = "0x943290")]
			public float edgeSharpnessAmount;

			[Token(Token = "0x4001241")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9432E4", Offset = "0x9432E4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9432E4", Offset = "0x9432E4")]
			public float edgeDetectionThreshold;

			[Token(Token = "0x4001242")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x943338", Offset = "0x943338")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x943338", Offset = "0x943338")]
			public float minimumRequiredLuminance;

			[Token(Token = "0x4001243")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static FxaaConsoleSettings[] presets;
		}

		[Serializable]
		[Token(Token = "0x200048E")]
		public struct FxaaSettings
		{
			[Token(Token = "0x4001244")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FxaaPreset preset;

			[Token(Token = "0x17000248")]
			public static FxaaSettings defaultSettings
			{
				[Token(Token = "0x6002F10")]
				[Address(RVA = "0x11B1460", Offset = "0x11B1460", VA = "0x11B1460")]
				get
				{
					return default(FxaaSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x200048F")]
		public struct TaaSettings
		{
			[Token(Token = "0x4001245")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x943394", Offset = "0x943394")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x943394", Offset = "0x943394")]
			public float jitterSpread;

			[Token(Token = "0x4001246")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9433EC", Offset = "0x9433EC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9433EC", Offset = "0x9433EC")]
			public float sharpen;

			[Token(Token = "0x4001247")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x943440", Offset = "0x943440")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x943440", Offset = "0x943440")]
			public float stationaryBlending;

			[Token(Token = "0x4001248")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x943498", Offset = "0x943498")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x943498", Offset = "0x943498")]
			public float motionBlending;

			[Token(Token = "0x17000249")]
			public static TaaSettings defaultSettings
			{
				[Token(Token = "0x6002F11")]
				[Address(RVA = "0x11B1468", Offset = "0x11B1468", VA = "0x11B1468")]
				get
				{
					return default(TaaSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000490")]
		public struct Settings
		{
			[Token(Token = "0x4001249")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Method method;

			[Token(Token = "0x400124A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public FxaaSettings fxaaSettings;

			[Token(Token = "0x400124B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public TaaSettings taaSettings;

			[Token(Token = "0x1700024A")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6002F12")]
				[Address(RVA = "0x11B1240", Offset = "0x11B1240", VA = "0x11B1240")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4000D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x170001BD")]
		public Settings settings
		{
			[Token(Token = "0x6002A36")]
			[Address(RVA = "0x11B11FC", Offset = "0x11B11FC", VA = "0x11B11FC")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6002A37")]
			[Address(RVA = "0x11B1210", Offset = "0x11B1210", VA = "0x11B1210")]
			set
			{
			}
		}

		[Token(Token = "0x6002A38")]
		[Address(RVA = "0x11B1224", Offset = "0x11B1224", VA = "0x11B1224", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6002A39")]
		[Address(RVA = "0x11B125C", Offset = "0x11B125C", VA = "0x11B125C")]
		public AntialiasingModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002E5")]
	public class BloomModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x2000491")]
		public struct BloomSettings
		{
			[Token(Token = "0x400124C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x9434F0", Offset = "0x9434F0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9434F0", Offset = "0x9434F0")]
			public float intensity;

			[Token(Token = "0x400124D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x943540", Offset = "0x943540")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x943540", Offset = "0x943540")]
			public float threshold;

			[Token(Token = "0x400124E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x943590", Offset = "0x943590")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x943590", Offset = "0x943590")]
			public float softKnee;

			[Token(Token = "0x400124F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9435E4", Offset = "0x9435E4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9435E4", Offset = "0x9435E4")]
			public float radius;

			[Token(Token = "0x4001250")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x943638", Offset = "0x943638")]
			public bool antiFlicker;

			[Token(Token = "0x1700024B")]
			public float thresholdLinear
			{
				[Token(Token = "0x6002F14")]
				[Address(RVA = "0x11B1F14", Offset = "0x11B1F14", VA = "0x11B1F14")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6002F13")]
				[Address(RVA = "0x11B223C", Offset = "0x11B223C", VA = "0x11B223C")]
				set
				{
				}
			}

			[Token(Token = "0x1700024C")]
			public static BloomSettings defaultSettings
			{
				[Token(Token = "0x6002F15")]
				[Address(RVA = "0x11B22B8", Offset = "0x11B22B8", VA = "0x11B22B8")]
				get
				{
					return default(BloomSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000492")]
		public struct LensDirtSettings
		{
			[Token(Token = "0x4001251")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x943670", Offset = "0x943670")]
			public Texture texture;

			[Token(Token = "0x4001252")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x9436A8", Offset = "0x9436A8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9436A8", Offset = "0x9436A8")]
			public float intensity;

			[Token(Token = "0x1700024D")]
			public static LensDirtSettings defaultSettings
			{
				[Token(Token = "0x6002F16")]
				[Address(RVA = "0x11B22D4", Offset = "0x11B22D4", VA = "0x11B22D4")]
				get
				{
					return default(LensDirtSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000493")]
		public struct Settings
		{
			[Token(Token = "0x4001253")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public BloomSettings bloom;

			[Token(Token = "0x4001254")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LensDirtSettings lensDirt;

			[Token(Token = "0x1700024E")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6002F17")]
				[Address(RVA = "0x11B21E0", Offset = "0x11B21E0", VA = "0x11B21E0")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4000D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x170001BE")]
		public Settings settings
		{
			[Token(Token = "0x6002A3A")]
			[Address(RVA = "0x11B2184", Offset = "0x11B2184", VA = "0x11B2184")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6002A3B")]
			[Address(RVA = "0x11B219C", Offset = "0x11B219C", VA = "0x11B219C")]
			set
			{
			}
		}

		[Token(Token = "0x6002A3C")]
		[Address(RVA = "0x11B21B4", Offset = "0x11B21B4", VA = "0x11B21B4", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6002A3D")]
		[Address(RVA = "0x11B220C", Offset = "0x11B220C", VA = "0x11B220C")]
		public BloomModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002E6")]
	public class BuiltinDebugViewsModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x2000494")]
		public struct DepthSettings
		{
			[Token(Token = "0x4001255")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9436F8", Offset = "0x9436F8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9436F8", Offset = "0x9436F8")]
			public float scale;

			[Token(Token = "0x1700024F")]
			public static DepthSettings defaultSettings
			{
				[Token(Token = "0x6002F18")]
				[Address(RVA = "0x11B3580", Offset = "0x11B3580", VA = "0x11B3580")]
				get
				{
					return default(DepthSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000495")]
		public struct MotionVectorsSettings
		{
			[Token(Token = "0x4001256")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x94374C", Offset = "0x94374C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x94374C", Offset = "0x94374C")]
			public float sourceOpacity;

			[Token(Token = "0x4001257")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9437A0", Offset = "0x9437A0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9437A0", Offset = "0x9437A0")]
			public float motionImageOpacity;

			[Token(Token = "0x4001258")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x9437F4", Offset = "0x9437F4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9437F4", Offset = "0x9437F4")]
			public float motionImageAmplitude;

			[Token(Token = "0x4001259")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x943844", Offset = "0x943844")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x943844", Offset = "0x943844")]
			public float motionVectorsOpacity;

			[Token(Token = "0x400125A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x943898", Offset = "0x943898")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x943898", Offset = "0x943898")]
			public int motionVectorsResolution;

			[Token(Token = "0x400125B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x9438F0", Offset = "0x9438F0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9438F0", Offset = "0x9438F0")]
			public float motionVectorsAmplitude;

			[Token(Token = "0x17000250")]
			public static MotionVectorsSettings defaultSettings
			{
				[Token(Token = "0x6002F19")]
				[Address(RVA = "0x11B3588", Offset = "0x11B3588", VA = "0x11B3588")]
				get
				{
					return default(MotionVectorsSettings);
				}
			}
		}

		[Token(Token = "0x2000496")]
		public enum Mode
		{
			[Token(Token = "0x400125D")]
			None,
			[Token(Token = "0x400125E")]
			Depth,
			[Token(Token = "0x400125F")]
			Normals,
			[Token(Token = "0x4001260")]
			MotionVectors,
			[Token(Token = "0x4001261")]
			AmbientOcclusion,
			[Token(Token = "0x4001262")]
			EyeAdaptation,
			[Token(Token = "0x4001263")]
			FocusPlane,
			[Token(Token = "0x4001264")]
			PreGradingLog,
			[Token(Token = "0x4001265")]
			LogLut,
			[Token(Token = "0x4001266")]
			UserLut
		}

		[Serializable]
		[Token(Token = "0x2000497")]
		public struct Settings
		{
			[Token(Token = "0x4001267")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Mode mode;

			[Token(Token = "0x4001268")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public DepthSettings depth;

			[Token(Token = "0x4001269")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public MotionVectorsSettings motionVectors;

			[Token(Token = "0x17000251")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6002F1A")]
				[Address(RVA = "0x11B352C", Offset = "0x11B352C", VA = "0x11B352C")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4000D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x170001BF")]
		public Settings settings
		{
			[Token(Token = "0x6002A3E")]
			[Address(RVA = "0x11B34C0", Offset = "0x11B34C0", VA = "0x11B34C0")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6002A3F")]
			[Address(RVA = "0x11B34D0", Offset = "0x11B34D0", VA = "0x11B34D0")]
			set
			{
			}
		}

		[Token(Token = "0x170001C0")]
		public bool willInterrupt
		{
			[Token(Token = "0x6002A40")]
			[Address(RVA = "0x11B34E0", Offset = "0x11B34E0", VA = "0x11B34E0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002A41")]
		[Address(RVA = "0x11B3504", Offset = "0x11B3504", VA = "0x11B3504", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6002A42")]
		[Address(RVA = "0x11B004C", Offset = "0x11B004C", VA = "0x11B004C")]
		public bool IsModeActive(Mode mode)
		{
			return default(bool);
		}

		[Token(Token = "0x6002A43")]
		[Address(RVA = "0x11B3554", Offset = "0x11B3554", VA = "0x11B3554")]
		public BuiltinDebugViewsModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002E7")]
	public class ChromaticAberrationModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x2000498")]
		public struct Settings
		{
			[Token(Token = "0x400126A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x943940", Offset = "0x943940")]
			public Texture2D spectralTexture;

			[Token(Token = "0x400126B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x943978", Offset = "0x943978")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x943978", Offset = "0x943978")]
			public float intensity;

			[Token(Token = "0x17000252")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6002F1B")]
				[Address(RVA = "0x11B39F8", Offset = "0x11B39F8", VA = "0x11B39F8")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4000D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x170001C1")]
		public Settings settings
		{
			[Token(Token = "0x6002A44")]
			[Address(RVA = "0x11B39D4", Offset = "0x11B39D4", VA = "0x11B39D4")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6002A45")]
			[Address(RVA = "0x11B39E0", Offset = "0x11B39E0", VA = "0x11B39E0")]
			set
			{
			}
		}

		[Token(Token = "0x6002A46")]
		[Address(RVA = "0x11B39E8", Offset = "0x11B39E8", VA = "0x11B39E8", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6002A47")]
		[Address(RVA = "0x11B3A08", Offset = "0x11B3A08", VA = "0x11B3A08")]
		public ChromaticAberrationModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002E8")]
	public class ColorGradingModel : PostProcessingModel
	{
		[Token(Token = "0x2000499")]
		public enum Tonemapper
		{
			[Token(Token = "0x400126D")]
			None,
			[Token(Token = "0x400126E")]
			ACES,
			[Token(Token = "0x400126F")]
			Neutral
		}

		[Serializable]
		[Token(Token = "0x200049A")]
		public struct TonemappingSettings
		{
			[Token(Token = "0x4001270")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9439CC", Offset = "0x9439CC")]
			public Tonemapper tonemapper;

			[Token(Token = "0x4001271")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x943A04", Offset = "0x943A04")]
			public float neutralBlackIn;

			[Token(Token = "0x4001272")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x943A24", Offset = "0x943A24")]
			public float neutralWhiteIn;

			[Token(Token = "0x4001273")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x943A3C", Offset = "0x943A3C")]
			public float neutralBlackOut;

			[Token(Token = "0x4001274")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x943A5C", Offset = "0x943A5C")]
			public float neutralWhiteOut;

			[Token(Token = "0x4001275")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x943A74", Offset = "0x943A74")]
			public float neutralWhiteLevel;

			[Token(Token = "0x4001276")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x943A90", Offset = "0x943A90")]
			public float neutralWhiteClip;

			[Token(Token = "0x17000253")]
			public static TonemappingSettings defaultSettings
			{
				[Token(Token = "0x6002F1C")]
				[Address(RVA = "0x11B67B4", Offset = "0x11B67B4", VA = "0x11B67B4")]
				get
				{
					return default(TonemappingSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x200049B")]
		public struct BasicSettings
		{
			[Token(Token = "0x4001277")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x943AA8", Offset = "0x943AA8")]
			public float postExposure;

			[Token(Token = "0x4001278")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x943AE0", Offset = "0x943AE0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x943AE0", Offset = "0x943AE0")]
			public float temperature;

			[Token(Token = "0x4001279")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x943B3C", Offset = "0x943B3C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x943B3C", Offset = "0x943B3C")]
			public float tint;

			[Token(Token = "0x400127A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x943B98", Offset = "0x943B98")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x943B98", Offset = "0x943B98")]
			public float hueShift;

			[Token(Token = "0x400127B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x943BF4", Offset = "0x943BF4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x943BF4", Offset = "0x943BF4")]
			public float saturation;

			[Token(Token = "0x400127C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x943C48", Offset = "0x943C48")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x943C48", Offset = "0x943C48")]
			public float contrast;

			[Token(Token = "0x17000254")]
			public static BasicSettings defaultSettings
			{
				[Token(Token = "0x6002F1D")]
				[Address(RVA = "0x11B5E44", Offset = "0x11B5E44", VA = "0x11B5E44")]
				get
				{
					return default(BasicSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x200049C")]
		public struct ChannelMixerSettings
		{
			[Token(Token = "0x400127D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 red;

			[Token(Token = "0x400127E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 green;

			[Token(Token = "0x400127F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 blue;

			[Token(Token = "0x4001280")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[HideInInspector]
			public int currentEditingChannel;

			[Token(Token = "0x17000255")]
			public static ChannelMixerSettings defaultSettings
			{
				[Token(Token = "0x6002F1E")]
				[Address(RVA = "0x11B5E54", Offset = "0x11B5E54", VA = "0x11B5E54")]
				get
				{
					return default(ChannelMixerSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x200049D")]
		public struct LogWheelsSettings
		{
			[Token(Token = "0x4001281")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TrackballAttribute", RVA = "0x943CAC", Offset = "0x943CAC")]
			public Color slope;

			[Token(Token = "0x4001282")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TrackballAttribute", RVA = "0x943CE4", Offset = "0x943CE4")]
			public Color power;

			[Token(Token = "0x4001283")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TrackballAttribute", RVA = "0x943D1C", Offset = "0x943D1C")]
			public Color offset;

			[Token(Token = "0x17000256")]
			public static LogWheelsSettings defaultSettings
			{
				[Token(Token = "0x6002F1F")]
				[Address(RVA = "0x11B5FA0", Offset = "0x11B5FA0", VA = "0x11B5FA0")]
				get
				{
					return default(LogWheelsSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x200049E")]
		public struct LinearWheelsSettings
		{
			[Token(Token = "0x4001284")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TrackballAttribute", RVA = "0x943D54", Offset = "0x943D54")]
			public Color lift;

			[Token(Token = "0x4001285")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TrackballAttribute", RVA = "0x943D8C", Offset = "0x943D8C")]
			public Color gamma;

			[Token(Token = "0x4001286")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TrackballAttribute", RVA = "0x943DC4", Offset = "0x943DC4")]
			public Color gain;

			[Token(Token = "0x17000257")]
			public static LinearWheelsSettings defaultSettings
			{
				[Token(Token = "0x6002F20")]
				[Address(RVA = "0x11B602C", Offset = "0x11B602C", VA = "0x11B602C")]
				get
				{
					return default(LinearWheelsSettings);
				}
			}
		}

		[Token(Token = "0x200049F")]
		public enum ColorWheelMode
		{
			[Token(Token = "0x4001288")]
			Linear,
			[Token(Token = "0x4001289")]
			Log
		}

		[Serializable]
		[Token(Token = "0x20004A0")]
		public struct ColorWheelsSettings
		{
			[Token(Token = "0x400128A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ColorWheelMode mode;

			[Token(Token = "0x400128B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[TrackballGroup]
			public LogWheelsSettings log;

			[Token(Token = "0x400128C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[TrackballGroup]
			public LinearWheelsSettings linear;

			[Token(Token = "0x17000258")]
			public static ColorWheelsSettings defaultSettings
			{
				[Token(Token = "0x6002F21")]
				[Address(RVA = "0x11B5F24", Offset = "0x11B5F24", VA = "0x11B5F24")]
				get
				{
					return default(ColorWheelsSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x20004A1")]
		public struct CurvesSettings
		{
			[Token(Token = "0x400128D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ColorGradingCurve master;

			[Token(Token = "0x400128E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public ColorGradingCurve red;

			[Token(Token = "0x400128F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ColorGradingCurve green;

			[Token(Token = "0x4001290")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ColorGradingCurve blue;

			[Token(Token = "0x4001291")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ColorGradingCurve hueVShue;

			[Token(Token = "0x4001292")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ColorGradingCurve hueVSsat;

			[Token(Token = "0x4001293")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ColorGradingCurve satVSsat;

			[Token(Token = "0x4001294")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public ColorGradingCurve lumVSsat;

			[Token(Token = "0x4001295")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[HideInInspector]
			public int e_CurrentEditingCurve;

			[Token(Token = "0x4001296")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			[HideInInspector]
			public bool e_CurveY;

			[Token(Token = "0x4001297")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
			[HideInInspector]
			public bool e_CurveR;

			[Token(Token = "0x4001298")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
			[HideInInspector]
			public bool e_CurveG;

			[Token(Token = "0x4001299")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x47")]
			[HideInInspector]
			public bool e_CurveB;

			[Token(Token = "0x17000259")]
			public static CurvesSettings defaultSettings
			{
				[Token(Token = "0x6002F22")]
				[Address(RVA = "0x11B60B8", Offset = "0x11B60B8", VA = "0x11B60B8")]
				get
				{
					return default(CurvesSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x20004A2")]
		public struct Settings
		{
			[Token(Token = "0x400129A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TonemappingSettings tonemapping;

			[Token(Token = "0x400129B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public BasicSettings basic;

			[Token(Token = "0x400129C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public ChannelMixerSettings channelMixer;

			[Token(Token = "0x400129D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public ColorWheelsSettings colorWheels;

			[Token(Token = "0x400129E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public CurvesSettings curves;

			[Token(Token = "0x1700025A")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6002F23")]
				[Address(RVA = "0x11B5CC8", Offset = "0x11B5CC8", VA = "0x11B5CC8")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4000D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x4000D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x942B7C", Offset = "0x942B7C")]
		private bool <isDirty>k__BackingField;

		[Token(Token = "0x4000D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x942B8C", Offset = "0x942B8C")]
		private RenderTexture <bakedLut>k__BackingField;

		[Token(Token = "0x170001C2")]
		public Settings settings
		{
			[Token(Token = "0x6002A48")]
			[Address(RVA = "0x11B5C18", Offset = "0x11B5C18", VA = "0x11B5C18")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6002A49")]
			[Address(RVA = "0x11B5C28", Offset = "0x11B5C28", VA = "0x11B5C28")]
			set
			{
			}
		}

		[Token(Token = "0x170001C3")]
		public bool isDirty
		{
			[Token(Token = "0x6002A4A")]
			[Address(RVA = "0x11B5C5C", Offset = "0x11B5C5C", VA = "0x11B5C5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A9150", Offset = "0x9A9150")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002A4B")]
			[Address(RVA = "0x11B5C64", Offset = "0x11B5C64", VA = "0x11B5C64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A9160", Offset = "0x9A9160")]
			internal set
			{
			}
		}

		[Token(Token = "0x170001C4")]
		public RenderTexture bakedLut
		{
			[Token(Token = "0x6002A4C")]
			[Address(RVA = "0x11B5C70", Offset = "0x11B5C70", VA = "0x11B5C70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A9170", Offset = "0x9A9170")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002A4D")]
			[Address(RVA = "0x11B5C78", Offset = "0x11B5C78", VA = "0x11B5C78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A9180", Offset = "0x9A9180")]
			internal set
			{
			}
		}

		[Token(Token = "0x6002A4E")]
		[Address(RVA = "0x11B5C80", Offset = "0x11B5C80", VA = "0x11B5C80", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6002A4F")]
		[Address(RVA = "0x11B5DF4", Offset = "0x11B5DF4", VA = "0x11B5DF4", Slot = "5")]
		public override void OnValidate()
		{
		}

		[Token(Token = "0x6002A50")]
		[Address(RVA = "0x11B5E00", Offset = "0x11B5E00", VA = "0x11B5E00")]
		public ColorGradingModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002E9")]
	public class DepthOfFieldModel : PostProcessingModel
	{
		[Token(Token = "0x20004A3")]
		public enum KernelSize
		{
			[Token(Token = "0x40012A0")]
			Small,
			[Token(Token = "0x40012A1")]
			Medium,
			[Token(Token = "0x40012A2")]
			Large,
			[Token(Token = "0x40012A3")]
			VeryLarge
		}

		[Serializable]
		[Token(Token = "0x20004A4")]
		public struct Settings
		{
			[Token(Token = "0x40012A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x943E6C", Offset = "0x943E6C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x943E6C", Offset = "0x943E6C")]
			public float focusDistance;

			[Token(Token = "0x40012A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x943EC0", Offset = "0x943EC0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x943EC0", Offset = "0x943EC0")]
			public float aperture;

			[Token(Token = "0x40012A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x943F1C", Offset = "0x943F1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x943F1C", Offset = "0x943F1C")]
			public float focalLength;

			[Token(Token = "0x40012A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x943F74", Offset = "0x943F74")]
			public bool useCameraFov;

			[Token(Token = "0x40012A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x943FAC", Offset = "0x943FAC")]
			public KernelSize kernelSize;

			[Token(Token = "0x1700025B")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6002F24")]
				[Address(RVA = "0x11B7598", Offset = "0x11B7598", VA = "0x11B7598")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4000D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x170001C5")]
		public Settings settings
		{
			[Token(Token = "0x6002A51")]
			[Address(RVA = "0x11B7544", Offset = "0x11B7544", VA = "0x11B7544")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6002A52")]
			[Address(RVA = "0x11B7558", Offset = "0x11B7558", VA = "0x11B7558")]
			set
			{
			}
		}

		[Token(Token = "0x6002A53")]
		[Address(RVA = "0x11B756C", Offset = "0x11B756C", VA = "0x11B756C", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6002A54")]
		[Address(RVA = "0x11B75C4", Offset = "0x11B75C4", VA = "0x11B75C4")]
		public DepthOfFieldModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002EA")]
	public class DitheringModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x20004A5")]
		public struct Settings
		{
			[Token(Token = "0x1700025C")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6002F25")]
				[Address(RVA = "0x11B7A7C", Offset = "0x11B7A7C", VA = "0x11B7A7C")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4000D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x170001C6")]
		public Settings settings
		{
			[Token(Token = "0x6002A55")]
			[Address(RVA = "0x11B7A64", Offset = "0x11B7A64", VA = "0x11B7A64")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6002A56")]
			[Address(RVA = "0x11B7A6C", Offset = "0x11B7A6C", VA = "0x11B7A6C")]
			set
			{
			}
		}

		[Token(Token = "0x6002A57")]
		[Address(RVA = "0x11B7A74", Offset = "0x11B7A74", VA = "0x11B7A74", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6002A58")]
		[Address(RVA = "0x11B7A84", Offset = "0x11B7A84", VA = "0x11B7A84")]
		public DitheringModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002EB")]
	public class EyeAdaptationModel : PostProcessingModel
	{
		[Token(Token = "0x20004A6")]
		public enum EyeAdaptationType
		{
			[Token(Token = "0x40012AA")]
			Progressive,
			[Token(Token = "0x40012AB")]
			Fixed
		}

		[Serializable]
		[Token(Token = "0x20004A7")]
		public struct Settings
		{
			[Token(Token = "0x40012AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x943FE4", Offset = "0x943FE4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x943FE4", Offset = "0x943FE4")]
			public float lowPercent;

			[Token(Token = "0x40012AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x94403C", Offset = "0x94403C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x94403C", Offset = "0x94403C")]
			public float highPercent;

			[Token(Token = "0x40012AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x944094", Offset = "0x944094")]
			public float minLuminance;

			[Token(Token = "0x40012AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9440CC", Offset = "0x9440CC")]
			public float maxLuminance;

			[Token(Token = "0x40012B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x944104", Offset = "0x944104")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x944104", Offset = "0x944104")]
			public float keyValue;

			[Token(Token = "0x40012B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x944154", Offset = "0x944154")]
			public bool dynamicKeyValue;

			[Token(Token = "0x40012B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x94418C", Offset = "0x94418C")]
			public EyeAdaptationType adaptationType;

			[Token(Token = "0x40012B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x9441C4", Offset = "0x9441C4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9441C4", Offset = "0x9441C4")]
			public float speedUp;

			[Token(Token = "0x40012B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x944214", Offset = "0x944214")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x944214", Offset = "0x944214")]
			public float speedDown;

			[Token(Token = "0x40012B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x944264", Offset = "0x944264")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x944264", Offset = "0x944264")]
			public int logMin;

			[Token(Token = "0x40012B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9442B8", Offset = "0x9442B8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9442B8", Offset = "0x9442B8")]
			public int logMax;

			[Token(Token = "0x1700025D")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6002F26")]
				[Address(RVA = "0x11B8A1C", Offset = "0x11B8A1C", VA = "0x11B8A1C")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4000D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x170001C7")]
		public Settings settings
		{
			[Token(Token = "0x6002A59")]
			[Address(RVA = "0x11B89A4", Offset = "0x11B89A4", VA = "0x11B89A4")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6002A5A")]
			[Address(RVA = "0x11B89BC", Offset = "0x11B89BC", VA = "0x11B89BC")]
			set
			{
			}
		}

		[Token(Token = "0x6002A5B")]
		[Address(RVA = "0x11B89DC", Offset = "0x11B89DC", VA = "0x11B89DC", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6002A5C")]
		[Address(RVA = "0x11B8A60", Offset = "0x11B8A60", VA = "0x11B8A60")]
		public EyeAdaptationModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002EC")]
	public class FogModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x20004A8")]
		public struct Settings
		{
			[Token(Token = "0x40012B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x94430C", Offset = "0x94430C")]
			public bool excludeSkybox;

			[Token(Token = "0x1700025E")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6002F27")]
				[Address(RVA = "0x11B915C", Offset = "0x11B915C", VA = "0x11B915C")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4000D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x170001C8")]
		public Settings settings
		{
			[Token(Token = "0x6002A5D")]
			[Address(RVA = "0x11B9140", Offset = "0x11B9140", VA = "0x11B9140")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6002A5E")]
			[Address(RVA = "0x11B9148", Offset = "0x11B9148", VA = "0x11B9148")]
			set
			{
			}
		}

		[Token(Token = "0x6002A5F")]
		[Address(RVA = "0x11B9150", Offset = "0x11B9150", VA = "0x11B9150", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6002A60")]
		[Address(RVA = "0x11B9164", Offset = "0x11B9164", VA = "0x11B9164")]
		public FogModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002ED")]
	public class GrainModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x20004A9")]
		public struct Settings
		{
			[Token(Token = "0x40012B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x944344", Offset = "0x944344")]
			public bool colored;

			[Token(Token = "0x40012B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x94437C", Offset = "0x94437C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x94437C", Offset = "0x94437C")]
			public float intensity;

			[Token(Token = "0x40012BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9443D0", Offset = "0x9443D0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9443D0", Offset = "0x9443D0")]
			public float size;

			[Token(Token = "0x40012BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x944428", Offset = "0x944428")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x944428", Offset = "0x944428")]
			public float luminanceContribution;

			[Token(Token = "0x1700025F")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6002F28")]
				[Address(RVA = "0x11B9AF8", Offset = "0x11B9AF8", VA = "0x11B9AF8")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4000D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x170001C9")]
		public Settings settings
		{
			[Token(Token = "0x6002A61")]
			[Address(RVA = "0x11B9ACC", Offset = "0x11B9ACC", VA = "0x11B9ACC")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6002A62")]
			[Address(RVA = "0x11B9ADC", Offset = "0x11B9ADC", VA = "0x11B9ADC")]
			set
			{
			}
		}

		[Token(Token = "0x6002A63")]
		[Address(RVA = "0x11B9AE8", Offset = "0x11B9AE8", VA = "0x11B9AE8", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6002A64")]
		[Address(RVA = "0x11B9B10", Offset = "0x11B9B10", VA = "0x11B9B10")]
		public GrainModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002EE")]
	public class MotionBlurModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x20004AA")]
		public struct Settings
		{
			[Token(Token = "0x40012BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x94447C", Offset = "0x94447C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x94447C", Offset = "0x94447C")]
			public float shutterAngle;

			[Token(Token = "0x40012BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9444D4", Offset = "0x9444D4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9444D4", Offset = "0x9444D4")]
			public int sampleCount;

			[Token(Token = "0x40012BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x94452C", Offset = "0x94452C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x94452C", Offset = "0x94452C")]
			public float frameBlending;

			[Token(Token = "0x17000260")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6002F29")]
				[Address(RVA = "0xF4EBB4", Offset = "0xF4EBB4", VA = "0xF4EBB4")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4000D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x170001CA")]
		public Settings settings
		{
			[Token(Token = "0x6002A65")]
			[Address(RVA = "0xF4EB84", Offset = "0xF4EB84", VA = "0xF4EB84")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6002A66")]
			[Address(RVA = "0xF4EB94", Offset = "0xF4EB94", VA = "0xF4EB94")]
			set
			{
			}
		}

		[Token(Token = "0x6002A67")]
		[Address(RVA = "0xF4EBA0", Offset = "0xF4EBA0", VA = "0xF4EBA0", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6002A68")]
		[Address(RVA = "0xF4EBC4", Offset = "0xF4EBC4", VA = "0xF4EBC4")]
		public MotionBlurModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002EF")]
	public class ScreenSpaceReflectionModel : PostProcessingModel
	{
		[Token(Token = "0x20004AB")]
		public enum SSRResolution
		{
			[Token(Token = "0x40012C0")]
			High = 0,
			[Token(Token = "0x40012C1")]
			Low = 2
		}

		[Token(Token = "0x20004AC")]
		public enum SSRReflectionBlendType
		{
			[Token(Token = "0x40012C3")]
			PhysicallyBased,
			[Token(Token = "0x40012C4")]
			Additive
		}

		[Serializable]
		[Token(Token = "0x20004AD")]
		public struct IntensitySettings
		{
			[Token(Token = "0x40012C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x944580", Offset = "0x944580")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x944580", Offset = "0x944580")]
			public float reflectionMultiplier;

			[Token(Token = "0x40012C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9445D4", Offset = "0x9445D4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9445D4", Offset = "0x9445D4")]
			public float fadeDistance;

			[Token(Token = "0x40012C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x94462C", Offset = "0x94462C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x94462C", Offset = "0x94462C")]
			public float fresnelFade;

			[Token(Token = "0x40012C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x944680", Offset = "0x944680")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x944680", Offset = "0x944680")]
			public float fresnelFadePower;
		}

		[Serializable]
		[Token(Token = "0x20004AE")]
		public struct ReflectionSettings
		{
			[Token(Token = "0x40012C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9446D8", Offset = "0x9446D8")]
			public SSRReflectionBlendType blendType;

			[Token(Token = "0x40012CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x944710", Offset = "0x944710")]
			public SSRResolution reflectionQuality;

			[Token(Token = "0x40012CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x944748", Offset = "0x944748")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x944748", Offset = "0x944748")]
			public float maxDistance;

			[Token(Token = "0x40012CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9447A4", Offset = "0x9447A4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9447A4", Offset = "0x9447A4")]
			public int iterationCount;

			[Token(Token = "0x40012CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9447FC", Offset = "0x9447FC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9447FC", Offset = "0x9447FC")]
			public int stepSize;

			[Token(Token = "0x40012CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x944850", Offset = "0x944850")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x944850", Offset = "0x944850")]
			public float widthModifier;

			[Token(Token = "0x40012CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9448A8", Offset = "0x9448A8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9448A8", Offset = "0x9448A8")]
			public float reflectionBlur;

			[Token(Token = "0x40012D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x944900", Offset = "0x944900")]
			public bool reflectBackfaces;
		}

		[Serializable]
		[Token(Token = "0x20004AF")]
		public struct ScreenEdgeMask
		{
			[Token(Token = "0x40012D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x944938", Offset = "0x944938")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x944938", Offset = "0x944938")]
			public float intensity;
		}

		[Serializable]
		[Token(Token = "0x20004B0")]
		public struct Settings
		{
			[Token(Token = "0x40012D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ReflectionSettings reflection;

			[Token(Token = "0x40012D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IntensitySettings intensity;

			[Token(Token = "0x40012D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ScreenEdgeMask screenEdgeMask;

			[Token(Token = "0x17000261")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6002F2A")]
				[Address(RVA = "0xF532B4", Offset = "0xF532B4", VA = "0xF532B4")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4000D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x170001CB")]
		public Settings settings
		{
			[Token(Token = "0x6002A69")]
			[Address(RVA = "0xF53224", Offset = "0xF53224", VA = "0xF53224")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6002A6A")]
			[Address(RVA = "0xF53244", Offset = "0xF53244", VA = "0xF53244")]
			set
			{
			}
		}

		[Token(Token = "0x6002A6B")]
		[Address(RVA = "0xF53264", Offset = "0xF53264", VA = "0xF53264", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6002A6C")]
		[Address(RVA = "0xF515DC", Offset = "0xF515DC", VA = "0xF515DC")]
		public ScreenSpaceReflectionModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002F0")]
	public class UserLutModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x20004B1")]
		public struct Settings
		{
			[Token(Token = "0x40012D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x94498C", Offset = "0x94498C")]
			public Texture2D lut;

			[Token(Token = "0x40012D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9449C4", Offset = "0x9449C4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9449C4", Offset = "0x9449C4")]
			public float contribution;

			[Token(Token = "0x17000262")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6002F2B")]
				[Address(RVA = "0xF54010", Offset = "0xF54010", VA = "0xF54010")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4000D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x170001CC")]
		public Settings settings
		{
			[Token(Token = "0x6002A6D")]
			[Address(RVA = "0xF53FEC", Offset = "0xF53FEC", VA = "0xF53FEC")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6002A6E")]
			[Address(RVA = "0xF53FF8", Offset = "0xF53FF8", VA = "0xF53FF8")]
			set
			{
			}
		}

		[Token(Token = "0x6002A6F")]
		[Address(RVA = "0xF54000", Offset = "0xF54000", VA = "0xF54000", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6002A70")]
		[Address(RVA = "0xF51630", Offset = "0xF51630", VA = "0xF51630")]
		public UserLutModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002F1")]
	public class VignetteModel : PostProcessingModel
	{
		[Token(Token = "0x20004B2")]
		public enum Mode
		{
			[Token(Token = "0x40012D8")]
			Classic,
			[Token(Token = "0x40012D9")]
			Masked
		}

		[Serializable]
		[Token(Token = "0x20004B3")]
		public struct Settings
		{
			[Token(Token = "0x40012DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x944A18", Offset = "0x944A18")]
			public Mode mode;

			[Token(Token = "0x40012DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x944A50", Offset = "0x944A50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x944A50", Offset = "0x944A50")]
			public Color color;

			[Token(Token = "0x40012DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x944AA0", Offset = "0x944AA0")]
			public Vector2 center;

			[Token(Token = "0x40012DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x944AD8", Offset = "0x944AD8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x944AD8", Offset = "0x944AD8")]
			public float intensity;

			[Token(Token = "0x40012DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x944B2C", Offset = "0x944B2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x944B2C", Offset = "0x944B2C")]
			public float smoothness;

			[Token(Token = "0x40012DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x944B84", Offset = "0x944B84")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x944B84", Offset = "0x944B84")]
			public float roundness;

			[Token(Token = "0x40012E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x944BD8", Offset = "0x944BD8")]
			public Texture mask;

			[Token(Token = "0x40012E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x944C10", Offset = "0x944C10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x944C10", Offset = "0x944C10")]
			public float opacity;

			[Token(Token = "0x40012E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x944C64", Offset = "0x944C64")]
			public bool rounded;

			[Token(Token = "0x17000263")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6002F2C")]
				[Address(RVA = "0xF544C8", Offset = "0xF544C8", VA = "0xF544C8")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4000D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x170001CD")]
		public Settings settings
		{
			[Token(Token = "0x6002A71")]
			[Address(RVA = "0xF5443C", Offset = "0xF5443C", VA = "0xF5443C")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6002A72")]
			[Address(RVA = "0xF5445C", Offset = "0xF5445C", VA = "0xF5445C")]
			set
			{
			}
		}

		[Token(Token = "0x6002A73")]
		[Address(RVA = "0xF5447C", Offset = "0xF5447C", VA = "0xF5447C", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6002A74")]
		[Address(RVA = "0xF51644", Offset = "0xF51644", VA = "0xF51644")]
		public VignetteModel()
		{
		}
	}
	[Token(Token = "0x20002F2")]
	[ImageEffectAllowedInSceneView]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x93FB9C", Offset = "0x93FB9C")]
	[DisallowMultipleComponent]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x93FB9C", Offset = "0x93FB9C")]
	public class PostProcessingBehaviour : MonoBehaviour
	{
		[Token(Token = "0x4000D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PostProcessingProfile profile;

		[Token(Token = "0x4000D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Func<Vector2, Matrix4x4> jitteredMatrixFunc;

		[Token(Token = "0x4000D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<Type, KeyValuePair<CameraEvent, CommandBuffer>> m_CommandBuffers;

		[Token(Token = "0x4000D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<PostProcessingComponentBase> m_Components;

		[Token(Token = "0x4000D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<PostProcessingComponentBase, bool> m_ComponentStates;

		[Token(Token = "0x4000D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private MaterialFactory m_MaterialFactory;

		[Token(Token = "0x4000D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private RenderTextureFactory m_RenderTextureFactory;

		[Token(Token = "0x4000D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private PostProcessingContext m_Context;

		[Token(Token = "0x4000D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Camera m_Camera;

		[Token(Token = "0x4000D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private PostProcessingProfile m_PreviousProfile;

		[Token(Token = "0x4000D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool m_RenderingInSceneView;

		[Token(Token = "0x4000D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private BuiltinDebugViewsComponent m_DebugViews;

		[Token(Token = "0x4000D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private AmbientOcclusionComponent m_AmbientOcclusion;

		[Token(Token = "0x4000D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private ScreenSpaceReflectionComponent m_ScreenSpaceReflection;

		[Token(Token = "0x4000D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private FogComponent m_FogComponent;

		[Token(Token = "0x4000D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private MotionBlurComponent m_MotionBlur;

		[Token(Token = "0x4000D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private TaaComponent m_Taa;

		[Token(Token = "0x4000D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private EyeAdaptationComponent m_EyeAdaptation;

		[Token(Token = "0x4000D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private DepthOfFieldComponent m_DepthOfField;

		[Token(Token = "0x4000D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private BloomComponent m_Bloom;

		[Token(Token = "0x4000D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private ChromaticAberrationComponent m_ChromaticAberration;

		[Token(Token = "0x4000D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private ColorGradingComponent m_ColorGrading;

		[Token(Token = "0x4000D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private UserLutComponent m_UserLut;

		[Token(Token = "0x4000D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private GrainComponent m_Grain;

		[Token(Token = "0x4000D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private VignetteComponent m_Vignette;

		[Token(Token = "0x4000D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private DitheringComponent m_Dithering;

		[Token(Token = "0x4000D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private FxaaComponent m_Fxaa;

		[Token(Token = "0x4000D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private List<PostProcessingComponentBase> m_ComponentsToEnable;

		[Token(Token = "0x4000D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private List<PostProcessingComponentBase> m_ComponentsToDisable;

		[Token(Token = "0x6002A75")]
		[Address(RVA = "0xF4EBE4", Offset = "0xF4EBE4", VA = "0xF4EBE4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002A76")]
		[Address(RVA = "0xF4F348", Offset = "0xF4F348", VA = "0xF4F348")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x6002A77")]
		[Address(RVA = "0xF4FEE8", Offset = "0xF4FEE8", VA = "0xF4FEE8")]
		private void OnPreRender()
		{
		}

		[Token(Token = "0x6002A78")]
		[Address(RVA = "0xF4FFE8", Offset = "0xF4FFE8", VA = "0xF4FFE8")]
		private void OnPostRender()
		{
		}

		[Token(Token = "0x6002A79")]
		[Address(RVA = "0xF500FC", Offset = "0xF500FC", VA = "0xF500FC")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6002A7A")]
		[Address(RVA = "0xF50C64", Offset = "0xF50C64", VA = "0xF50C64")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6002A7B")]
		[Address(RVA = "0xF50F58", Offset = "0xF50F58", VA = "0xF50F58")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002A7C")]
		[Address(RVA = "0xF51134", Offset = "0xF51134", VA = "0xF51134")]
		public void ResetTemporalEffects()
		{
		}

		[Token(Token = "0x6002A7D")]
		[Address(RVA = "0xF4F96C", Offset = "0xF4F96C", VA = "0xF4F96C")]
		private void CheckObservers()
		{
		}

		[Token(Token = "0x6002A7E")]
		[Address(RVA = "0xF4F84C", Offset = "0xF4F84C", VA = "0xF4F84C")]
		private void DisableComponents()
		{
		}

		[Token(Token = "0x6002A7F")]
		private CommandBuffer AddCommandBuffer<T>(CameraEvent evt, string name) where T : PostProcessingModel
		{
			return null;
		}

		[Token(Token = "0x6002A80")]
		private void RemoveCommandBuffer<T>() where T : PostProcessingModel
		{
		}

		[Token(Token = "0x6002A81")]
		private CommandBuffer GetCommandBuffer<T>(CameraEvent evt, string name) where T : PostProcessingModel
		{
			return null;
		}

		[Token(Token = "0x6002A82")]
		private void TryExecuteCommandBuffer<T>(PostProcessingComponentCommandBuffer<T> component) where T : PostProcessingModel
		{
		}

		[Token(Token = "0x6002A83")]
		private bool TryPrepareUberImageEffect<T>(PostProcessingComponentRenderTexture<T> component, Material material) where T : PostProcessingModel
		{
			return default(bool);
		}

		[Token(Token = "0x6002A84")]
		private T AddComponent<T>(T component) where T : PostProcessingComponentBase
		{
			return null;
		}

		[Token(Token = "0x6002A85")]
		[Address(RVA = "0xF5118C", Offset = "0xF5118C", VA = "0xF5118C")]
		public PostProcessingBehaviour()
		{
		}
	}
	[Token(Token = "0x20002F3")]
	public abstract class PostProcessingComponentBase
	{
		[Token(Token = "0x4000D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PostProcessingContext context;

		[Token(Token = "0x170001CE")]
		public abstract bool active
		{
			[Token(Token = "0x6002A87")]
			get;
		}

		[Token(Token = "0x6002A86")]
		[Address(RVA = "0xF5121C", Offset = "0xF5121C", VA = "0xF5121C", Slot = "4")]
		public virtual DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x6002A88")]
		[Address(RVA = "0xF51224", Offset = "0xF51224", VA = "0xF51224", Slot = "6")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x6002A89")]
		[Address(RVA = "0xF51228", Offset = "0xF51228", VA = "0xF51228", Slot = "7")]
		public virtual void OnDisable()
		{
		}

		[Token(Token = "0x6002A8A")]
		public abstract PostProcessingModel GetModel();

		[Token(Token = "0x6002A8B")]
		[Address(RVA = "0xF5122C", Offset = "0xF5122C", VA = "0xF5122C")]
		protected PostProcessingComponentBase()
		{
		}
	}
	[Token(Token = "0x20002F4")]
	public abstract class PostProcessingComponent<T> : PostProcessingComponentBase where T : PostProcessingModel
	{
		[Token(Token = "0x4000D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x942C2C", Offset = "0x942C2C")]
		private T <model>k__BackingField;

		[Token(Token = "0x170001CF")]
		public T model
		{
			[Token(Token = "0x6002A8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A9190", Offset = "0x9A9190")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002A8D")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A91A0", Offset = "0x9A91A0")]
			internal set
			{
			}
		}

		[Token(Token = "0x6002A8E")]
		public virtual void Init(PostProcessingContext pcontext, T pmodel)
		{
		}

		[Token(Token = "0x6002A8F")]
		public override PostProcessingModel GetModel()
		{
			return null;
		}

		[Token(Token = "0x6002A90")]
		protected PostProcessingComponent()
		{
		}
	}
	[Token(Token = "0x20002F5")]
	public abstract class PostProcessingComponentCommandBuffer<T> : PostProcessingComponent<T> where T : PostProcessingModel
	{
		[Token(Token = "0x6002A91")]
		public abstract CameraEvent GetCameraEvent();

		[Token(Token = "0x6002A92")]
		public abstract string GetName();

		[Token(Token = "0x6002A93")]
		public abstract void PopulateCommandBuffer(CommandBuffer cb);

		[Token(Token = "0x6002A94")]
		protected PostProcessingComponentCommandBuffer()
		{
		}
	}
	[Token(Token = "0x20002F6")]
	public abstract class PostProcessingComponentRenderTexture<T> : PostProcessingComponent<T> where T : PostProcessingModel
	{
		[Token(Token = "0x6002A95")]
		public virtual void Prepare(Material material)
		{
		}

		[Token(Token = "0x6002A96")]
		protected PostProcessingComponentRenderTexture()
		{
		}
	}
	[Token(Token = "0x20002F7")]
	public class PostProcessingContext
	{
		[Token(Token = "0x4000D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PostProcessingProfile profile;

		[Token(Token = "0x4000D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera camera;

		[Token(Token = "0x4000D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MaterialFactory materialFactory;

		[Token(Token = "0x4000D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RenderTextureFactory renderTextureFactory;

		[Token(Token = "0x4000D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x942C3C", Offset = "0x942C3C")]
		private bool <interrupted>k__BackingField;

		[Token(Token = "0x170001D0")]
		public bool interrupted
		{
			[Token(Token = "0x6002A97")]
			[Address(RVA = "0xF51234", Offset = "0xF51234", VA = "0xF51234")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A91B0", Offset = "0x9A91B0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002A98")]
			[Address(RVA = "0xF5123C", Offset = "0xF5123C", VA = "0xF5123C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A91C0", Offset = "0x9A91C0")]
			private set
			{
			}
		}

		[Token(Token = "0x170001D1")]
		public bool isGBufferAvailable
		{
			[Token(Token = "0x6002A9B")]
			[Address(RVA = "0xF51254", Offset = "0xF51254", VA = "0xF51254")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001D2")]
		public bool isHdr
		{
			[Token(Token = "0x6002A9C")]
			[Address(RVA = "0xF51280", Offset = "0xF51280", VA = "0xF51280")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001D3")]
		public int width
		{
			[Token(Token = "0x6002A9D")]
			[Address(RVA = "0xF5129C", Offset = "0xF5129C", VA = "0xF5129C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001D4")]
		public int height
		{
			[Token(Token = "0x6002A9E")]
			[Address(RVA = "0xF512B8", Offset = "0xF512B8", VA = "0xF512B8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001D5")]
		public Rect viewport
		{
			[Token(Token = "0x6002A9F")]
			[Address(RVA = "0xF512D4", Offset = "0xF512D4", VA = "0xF512D4")]
			get
			{
				return default(Rect);
			}
		}

		[Token(Token = "0x6002A99")]
		[Address(RVA = "0xF51248", Offset = "0xF51248", VA = "0xF51248")]
		public void Interrupt()
		{
		}

		[Token(Token = "0x6002A9A")]
		[Address(RVA = "0xF4F83C", Offset = "0xF4F83C", VA = "0xF4F83C")]
		public PostProcessingContext Reset()
		{
			return null;
		}

		[Token(Token = "0x6002AA0")]
		[Address(RVA = "0xF4F1BC", Offset = "0xF4F1BC", VA = "0xF4F1BC")]
		public PostProcessingContext()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002F8")]
	public abstract class PostProcessingModel
	{
		[Token(Token = "0x4000D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		[AttributeAttribute(Name = "GetSetAttribute", RVA = "0x942C4C", Offset = "0x942C4C")]
		private bool m_Enabled;

		[Token(Token = "0x170001D6")]
		public bool enabled
		{
			[Token(Token = "0x6002AA1")]
			[Address(RVA = "0xF512F0", Offset = "0xF512F0", VA = "0xF512F0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002AA2")]
			[Address(RVA = "0xF512F8", Offset = "0xF512F8", VA = "0xF512F8")]
			set
			{
			}
		}

		[Token(Token = "0x6002AA3")]
		public abstract void Reset();

		[Token(Token = "0x6002AA4")]
		[Address(RVA = "0xF51314", Offset = "0xF51314", VA = "0xF51314", Slot = "5")]
		public virtual void OnValidate()
		{
		}

		[Token(Token = "0x6002AA5")]
		[Address(RVA = "0xF4EBDC", Offset = "0xF4EBDC", VA = "0xF4EBDC")]
		protected PostProcessingModel()
		{
		}
	}
	[Token(Token = "0x20002F9")]
	public class PostProcessingProfile : ScriptableObject
	{
		[Token(Token = "0x4000D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BuiltinDebugViewsModel debugViews;

		[Token(Token = "0x4000D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FogModel fog;

		[Token(Token = "0x4000D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AntialiasingModel antialiasing;

		[Token(Token = "0x4000D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AmbientOcclusionModel ambientOcclusion;

		[Token(Token = "0x4000D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ScreenSpaceReflectionModel screenSpaceReflection;

		[Token(Token = "0x4000D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public DepthOfFieldModel depthOfField;

		[Token(Token = "0x4000D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public MotionBlurModel motionBlur;

		[Token(Token = "0x4000D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public EyeAdaptationModel eyeAdaptation;

		[Token(Token = "0x4000D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public BloomModel bloom;

		[Token(Token = "0x4000D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public ColorGradingModel colorGrading;

		[Token(Token = "0x4000D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public UserLutModel userLut;

		[Token(Token = "0x4000D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public ChromaticAberrationModel chromaticAberration;

		[Token(Token = "0x4000D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public GrainModel grain;

		[Token(Token = "0x4000D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public VignetteModel vignette;

		[Token(Token = "0x4000D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public DitheringModel dithering;

		[Token(Token = "0x6002AA6")]
		[Address(RVA = "0xF51318", Offset = "0xF51318", VA = "0xF51318")]
		public PostProcessingProfile()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002FA")]
	public sealed class ColorGradingCurve
	{
		[Token(Token = "0x4000D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AnimationCurve curve;

		[Token(Token = "0x4000D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_Loop;

		[Token(Token = "0x4000D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_ZeroValue;

		[Token(Token = "0x4000D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_Range;

		[Token(Token = "0x4000D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AnimationCurve m_InternalLoopingCurve;

		[Token(Token = "0x6002AA7")]
		[Address(RVA = "0x11B5BAC", Offset = "0x11B5BAC", VA = "0x11B5BAC")]
		public ColorGradingCurve(AnimationCurve curve, float zeroValue, bool loop, Vector2 bounds)
		{
		}

		[Token(Token = "0x6002AA8")]
		[Address(RVA = "0x11B48F0", Offset = "0x11B48F0", VA = "0x11B48F0")]
		public void Cache()
		{
		}

		[Token(Token = "0x6002AA9")]
		[Address(RVA = "0x11B4ACC", Offset = "0x11B4ACC", VA = "0x11B4ACC")]
		public float Evaluate(float t)
		{
			return default(float);
		}
	}
	[Token(Token = "0x20002FB")]
	public static class GraphicsUtils
	{
		[Token(Token = "0x4000D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Texture2D s_WhiteTexture;

		[Token(Token = "0x4000D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Mesh s_Quad;

		[Token(Token = "0x170001D7")]
		public static bool isLinearColorSpace
		{
			[Token(Token = "0x6002AAA")]
			[Address(RVA = "0x11B8FEC", Offset = "0x11B8FEC", VA = "0x11B8FEC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001D8")]
		public static bool supportsDX11
		{
			[Token(Token = "0x6002AAB")]
			[Address(RVA = "0x11B9B24", Offset = "0x11B9B24", VA = "0x11B9B24")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001D9")]
		public static Texture2D whiteTexture
		{
			[Token(Token = "0x6002AAC")]
			[Address(RVA = "0x11B9B54", Offset = "0x11B9B54", VA = "0x11B9B54")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DA")]
		public static Mesh quad
		{
			[Token(Token = "0x6002AAD")]
			[Address(RVA = "0x11B0BD8", Offset = "0x11B0BD8", VA = "0x11B0BD8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AAE")]
		[Address(RVA = "0x11B9C8C", Offset = "0x11B9C8C", VA = "0x11B9C8C")]
		public static void Blit(Material material, int pass)
		{
		}

		[Token(Token = "0x6002AAF")]
		[Address(RVA = "0x11B9D90", Offset = "0x11B9D90", VA = "0x11B9D90")]
		public static void ClearAndBlit(Texture source, RenderTexture destination, Material material, int pass, bool clearColor = true, bool clearDepth = false)
		{
		}

		[Token(Token = "0x6002AB0")]
		[Address(RVA = "0x11B32FC", Offset = "0x11B32FC", VA = "0x11B32FC")]
		public static void Destroy(Object obj)
		{
		}

		[Token(Token = "0x6002AB1")]
		[Address(RVA = "0x11B9F2C", Offset = "0x11B9F2C", VA = "0x11B9F2C")]
		public static void Dispose()
		{
		}
	}
	[Token(Token = "0x20002FC")]
	public sealed class MaterialFactory : IDisposable
	{
		[Token(Token = "0x4000D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<string, Material> m_Materials;

		[Token(Token = "0x6002AB2")]
		[Address(RVA = "0x11B9F7C", Offset = "0x11B9F7C", VA = "0x11B9F7C")]
		public MaterialFactory()
		{
		}

		[Token(Token = "0x6002AB3")]
		[Address(RVA = "0x11B0A08", Offset = "0x11B0A08", VA = "0x11B0A08")]
		public Material Get(string shaderName)
		{
			return null;
		}

		[Token(Token = "0x6002AB4")]
		[Address(RVA = "0x11B9FF0", Offset = "0x11B9FF0", VA = "0x11B9FF0", Slot = "4")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x20002FD")]
	public sealed class RenderTextureFactory : IDisposable
	{
		[Token(Token = "0x4000D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private HashSet<RenderTexture> m_TemporaryRTs;

		[Token(Token = "0x6002AB5")]
		[Address(RVA = "0xF4F148", Offset = "0xF4F148", VA = "0xF4F148")]
		public RenderTextureFactory()
		{
		}

		[Token(Token = "0x6002AB6")]
		[Address(RVA = "0xF50624", Offset = "0xF50624", VA = "0xF50624")]
		public RenderTexture Get(RenderTexture baseRenderTexture)
		{
			return null;
		}

		[Token(Token = "0x6002AB7")]
		[Address(RVA = "0xF51698", Offset = "0xF51698", VA = "0xF51698")]
		public RenderTexture Get(int width, int height, int depthBuffer = 0, RenderTextureFormat format = RenderTextureFormat.ARGBHalf, RenderTextureReadWrite rw = RenderTextureReadWrite.Default, FilterMode filterMode = FilterMode.Bilinear, TextureWrapMode wrapMode = TextureWrapMode.Clamp, string name = "FactoryTempTexture")
		{
			return null;
		}

		[Token(Token = "0x6002AB8")]
		[Address(RVA = "0xF5178C", Offset = "0xF5178C", VA = "0xF5178C")]
		public void Release(RenderTexture rt)
		{
		}

		[Token(Token = "0x6002AB9")]
		[Address(RVA = "0xF50BB4", Offset = "0xF50BB4", VA = "0xF50BB4")]
		public void ReleaseAll()
		{
		}

		[Token(Token = "0x6002ABA")]
		[Address(RVA = "0xF51130", Offset = "0xF51130", VA = "0xF51130", Slot = "4")]
		public void Dispose()
		{
		}
	}
}
namespace MirzaBeig.Scripting.Effects
{
	[Token(Token = "0x20002FE")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x93FC58", Offset = "0x93FC58")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x93FC58", Offset = "0x93FC58")]
	public class ParticlePlexus : MonoBehaviour
	{
		[Token(Token = "0x4000D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float maxDistance;

		[Token(Token = "0x4000D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int maxConnections;

		[Token(Token = "0x4000D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int maxLineRenderers;

		[Token(Token = "0x4000D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x942CC8", Offset = "0x942CC8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x942CC8", Offset = "0x942CC8")]
		public float widthFromParticle;

		[Token(Token = "0x4000D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x942D08", Offset = "0x942D08")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x942D08", Offset = "0x942D08")]
		public float colourFromParticle;

		[Token(Token = "0x4000D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x942D48", Offset = "0x942D48")]
		public float alphaFromParticle;

		[Token(Token = "0x4000D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x942D60", Offset = "0x942D60")]
		public AnimationCurve alphaOverNormalizedDistance;

		[Token(Token = "0x4000D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ParticleSystem particleSystem;

		[Token(Token = "0x4000D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ParticleSystem.Particle[] particles;

		[Token(Token = "0x4000D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3[] particlePositions;

		[Token(Token = "0x4000D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Color[] particleColours;

		[Token(Token = "0x4000D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float[] particleSizes;

		[Token(Token = "0x4000D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private ParticleSystem.MainModule particleSystemMainModule;

		[Token(Token = "0x4000D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x942D70", Offset = "0x942D70")]
		public LineRenderer lineRendererTemplate;

		[Token(Token = "0x4000D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<LineRenderer> lineRenderers;

		[Token(Token = "0x4000D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Transform _transform;

		[Token(Token = "0x4000D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x942D80", Offset = "0x942D80")]
		public MeshFilter trianglesMeshFilter;

		[Token(Token = "0x4000D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Mesh trianglesMesh;

		[Token(Token = "0x4000D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private List<int[]> allConnectedParticles;

		[Token(Token = "0x4000D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x942DB8", Offset = "0x942DB8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x942DB8", Offset = "0x942DB8")]
		public float maxDistanceTriangleBias;

		[Token(Token = "0x4000D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x942DF8", Offset = "0x942DF8")]
		public bool trianglesDistanceCheck;

		[Token(Token = "0x4000D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x942E08", Offset = "0x942E08")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x942E08", Offset = "0x942E08")]
		public float triangleColourFromParticle;

		[Token(Token = "0x4000D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x942E48", Offset = "0x942E48")]
		public float triangleAlphaFromParticle;

		[Token(Token = "0x4000D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x942E60", Offset = "0x942E60")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x942E60", Offset = "0x942E60")]
		public float delay;

		[Token(Token = "0x4000D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private float timer;

		[Token(Token = "0x4000D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public bool alwaysUpdate;

		[Token(Token = "0x4000D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
		private bool visible;

		[Token(Token = "0x6002ABB")]
		[Address(RVA = "0x15C5338", Offset = "0x15C5338", VA = "0x15C5338")]
		private void Start()
		{
		}

		[Token(Token = "0x6002ABC")]
		[Address(RVA = "0x15C5424", Offset = "0x15C5424", VA = "0x15C5424")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002ABD")]
		[Address(RVA = "0x15C54C0", Offset = "0x15C54C0", VA = "0x15C54C0")]
		private void OnBecameVisible()
		{
		}

		[Token(Token = "0x6002ABE")]
		[Address(RVA = "0x15C54CC", Offset = "0x15C54CC", VA = "0x15C54CC")]
		private void OnBecameInvisible()
		{
		}

		[Token(Token = "0x6002ABF")]
		[Address(RVA = "0x15C54D4", Offset = "0x15C54D4", VA = "0x15C54D4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6002AC0")]
		[Address(RVA = "0x15C6FA0", Offset = "0x15C6FA0", VA = "0x15C6FA0")]
		public ParticlePlexus()
		{
		}
	}
}
