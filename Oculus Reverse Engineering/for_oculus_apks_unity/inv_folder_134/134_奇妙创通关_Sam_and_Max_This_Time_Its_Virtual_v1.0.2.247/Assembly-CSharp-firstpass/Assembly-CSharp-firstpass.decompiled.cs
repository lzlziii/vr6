using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Linq.Expressions;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Runtime.Serialization;
using System.Runtime.Serialization.Formatters.Binary;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading;
using HoudiniEngineUnity;
using Il2CppDummyDll;
using Language.Lua;
using PixelCrushers.DialogueSystem.ChatMapper;
using PixelCrushers.DialogueSystem.SequencerCommands;
using PixelCrushers.DialogueSystem.UnityGUI;
using RootMotion.Dynamics;
using RootMotion.FinalIK;
using ScreenshotCompanionFramework;
using TMPro;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Playables;
using UnityEngine.Rendering;
using UnityEngine.SceneManagement;
using UnityEngine.Timeline;
using UnityEngine.UI;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public class HEU_ExampleEvergreenQuery
{
	[Token(Token = "0x6000001")]
	[Address(RVA = "0x151DC70", Offset = "0x151DC70", VA = "0x151DC70")]
	public static void StartQuery()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0x151DF10", Offset = "0x151DF10", VA = "0x151DF10")]
	public static HEU_HoudiniAsset QueryHoudiniAsset(GameObject rootGO)
	{
		return null;
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0x151E10C", Offset = "0x151E10C", VA = "0x151E10C")]
	public static void CookAsset(HEU_HoudiniAsset houdiniAsset)
	{
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0x151E134", Offset = "0x151E134", VA = "0x151E134")]
	public static void ChangeParmsAndCook(HEU_HoudiniAsset houdiniAsset)
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0x151E4A8", Offset = "0x151E4A8", VA = "0x151E4A8")]
	public static void QueryObjects(HEU_HoudiniAsset houdiniAsset)
	{
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0x151ED18", Offset = "0x151ED18", VA = "0x151ED18")]
	public static void QueryGeoParts(HEU_SessionBase session, ref HAPI_GeoInfo geoInfo)
	{
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0x151F1C4", Offset = "0x151F1C4", VA = "0x151F1C4")]
	public static void QueryPartAttributeByOwner(HEU_SessionBase session, int geoID, int partID, HAPI_AttributeOwner owner, int count, StringBuilder sb)
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0x151F5B8", Offset = "0x151F5B8", VA = "0x151F5B8")]
	public static void QueryAttributeByStorageType(HEU_SessionBase session, int geoID, int partID, ref HAPI_AttributeInfo attrInfo, string attrName)
	{
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0x151E7E8", Offset = "0x151E7E8", VA = "0x151E7E8")]
	public static void QueryAttribute(HEU_HoudiniAsset houdiniAsset, string objName, string geoName, int partID, string attrName)
	{
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0x151F87C", Offset = "0x151F87C", VA = "0x151F87C")]
	public HEU_ExampleEvergreenQuery()
	{
	}
}
[Token(Token = "0x2000003")]
[ExecuteInEditMode]
public class HEU_ExampleInstanceCustomAttribute : MonoBehaviour
{
	[Token(Token = "0x600000B")]
	[Address(RVA = "0x151F884", Offset = "0x151F884", VA = "0x151F884")]
	private void InstancerCallback()
	{
	}

	[Token(Token = "0x600000C")]
	private static void LogArray<T>(string name, T[] arr, int tupleSize)
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0x151FC08", Offset = "0x151FC08", VA = "0x151FC08")]
	private static void LogAttr(HEU_OutputAttribute outAttr)
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0x151FD70", Offset = "0x151FD70", VA = "0x151FD70")]
	public HEU_ExampleInstanceCustomAttribute()
	{
	}
}
[Token(Token = "0x2000004")]
[ExecuteInEditMode]
public class HEU_ScriptCallbackExample : MonoBehaviour
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string _msg;

	[Token(Token = "0x600000F")]
	[Address(RVA = "0x151FD78", Offset = "0x151FD78", VA = "0x151FD78")]
	private void AssetCallbackWithMsg(string msg)
	{
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0x151FE14", Offset = "0x151FE14", VA = "0x151FE14")]
	private void AssetCallbackNoMsg()
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0x151FE80", Offset = "0x151FE80", VA = "0x151FE80")]
	public HEU_ScriptCallbackExample()
	{
	}
}
[Token(Token = "0x2000005")]
public class HEU_ScriptMeshInputUVLayoutExample
{
	[Token(Token = "0x20004A1")]
	public enum OutputMode
	{
		[Token(Token = "0x4001858")]
		COPY,
		[Token(Token = "0x4001859")]
		REPLACE
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0x151FE88", Offset = "0x151FE88", VA = "0x151FE88")]
	public static void ApplyUVLayoutTo(GameObject[] gameObjects, OutputMode outputMode, string output_name_suffix)
	{
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0x1520720", Offset = "0x1520720", VA = "0x1520720")]
	public HEU_ScriptMeshInputUVLayoutExample()
	{
	}
}
[Token(Token = "0x2000006")]
public class HEU_ScriptParameterExample : MonoBehaviour
{
	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject _evergreenGameObject;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private HEU_HoudiniAsset _evergreenAsset;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float _updateRate;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float _scale;

	[Token(Token = "0x6000014")]
	[Address(RVA = "0x1520728", Offset = "0x1520728", VA = "0x1520728")]
	public void Start()
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0x1520984", Offset = "0x1520984", VA = "0x1520984")]
	private void UpdateGravity()
	{
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0x1520AB4", Offset = "0x1520AB4", VA = "0x1520AB4")]
	public HEU_ScriptParameterExample()
	{
	}
}
[Token(Token = "0x2000007")]
public class HEU_AssetEventReceiverTest : MonoBehaviour
{
	[Token(Token = "0x6000017")]
	[Address(RVA = "0x151D7D0", Offset = "0x151D7D0", VA = "0x151D7D0")]
	public void ReloadCallback(HEU_HoudiniAsset asset, bool success, List<GameObject> outputList)
	{
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0x151D958", Offset = "0x151D958", VA = "0x151D958")]
	public void CookedCallback(HEU_HoudiniAsset asset, bool success, List<GameObject> outputList)
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0x151DAE0", Offset = "0x151DAE0", VA = "0x151DAE0")]
	public void BakedCallback(HEU_HoudiniAsset asset, bool success, List<GameObject> outputList)
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0x151DC68", Offset = "0x151DC68", VA = "0x151DC68")]
	public HEU_AssetEventReceiverTest()
	{
	}
}
[Token(Token = "0x2000008")]
public enum UIVisibility
{
	[Token(Token = "0x4000007")]
	OnlyDuringContent,
	[Token(Token = "0x4000008")]
	UntilSuperceded,
	[Token(Token = "0x4000009")]
	AlwaysOnceShown,
	[Token(Token = "0x400000A")]
	AlwaysFromStart
}
[Token(Token = "0x2000009")]
public class iTween : MonoBehaviour
{
	[Token(Token = "0x20004A2")]
	private delegate float EasingFunction(float start, float end, float Value);

	[Token(Token = "0x20004A3")]
	private delegate void ApplyTween();

	[Token(Token = "0x20004A4")]
	public enum EaseType
	{
		[Token(Token = "0x400185B")]
		easeInQuad,
		[Token(Token = "0x400185C")]
		easeOutQuad,
		[Token(Token = "0x400185D")]
		easeInOutQuad,
		[Token(Token = "0x400185E")]
		easeInCubic,
		[Token(Token = "0x400185F")]
		easeOutCubic,
		[Token(Token = "0x4001860")]
		easeInOutCubic,
		[Token(Token = "0x4001861")]
		easeInQuart,
		[Token(Token = "0x4001862")]
		easeOutQuart,
		[Token(Token = "0x4001863")]
		easeInOutQuart,
		[Token(Token = "0x4001864")]
		easeInQuint,
		[Token(Token = "0x4001865")]
		easeOutQuint,
		[Token(Token = "0x4001866")]
		easeInOutQuint,
		[Token(Token = "0x4001867")]
		easeInSine,
		[Token(Token = "0x4001868")]
		easeOutSine,
		[Token(Token = "0x4001869")]
		easeInOutSine,
		[Token(Token = "0x400186A")]
		easeInExpo,
		[Token(Token = "0x400186B")]
		easeOutExpo,
		[Token(Token = "0x400186C")]
		easeInOutExpo,
		[Token(Token = "0x400186D")]
		easeInCirc,
		[Token(Token = "0x400186E")]
		easeOutCirc,
		[Token(Token = "0x400186F")]
		easeInOutCirc,
		[Token(Token = "0x4001870")]
		linear,
		[Token(Token = "0x4001871")]
		spring,
		[Token(Token = "0x4001872")]
		easeInBounce,
		[Token(Token = "0x4001873")]
		easeOutBounce,
		[Token(Token = "0x4001874")]
		easeInOutBounce,
		[Token(Token = "0x4001875")]
		easeInBack,
		[Token(Token = "0x4001876")]
		easeOutBack,
		[Token(Token = "0x4001877")]
		easeInOutBack,
		[Token(Token = "0x4001878")]
		easeInElastic,
		[Token(Token = "0x4001879")]
		easeOutElastic,
		[Token(Token = "0x400187A")]
		easeInOutElastic,
		[Token(Token = "0x400187B")]
		punch
	}

	[Token(Token = "0x20004A5")]
	public enum LoopType
	{
		[Token(Token = "0x400187D")]
		none,
		[Token(Token = "0x400187E")]
		loop,
		[Token(Token = "0x400187F")]
		pingPong
	}

	[Token(Token = "0x20004A6")]
	public enum NamedValueColor
	{
		[Token(Token = "0x4001881")]
		_Color,
		[Token(Token = "0x4001882")]
		_SpecColor,
		[Token(Token = "0x4001883")]
		_Emission,
		[Token(Token = "0x4001884")]
		_ReflectColor
	}

	[Token(Token = "0x20004A7")]
	public static class Defaults
	{
		[Token(Token = "0x4001885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float time;

		[Token(Token = "0x4001886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static float delay;

		[Token(Token = "0x4001887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static NamedValueColor namedColorValue;

		[Token(Token = "0x4001888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static LoopType loopType;

		[Token(Token = "0x4001889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static EaseType easeType;

		[Token(Token = "0x400188A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static float lookSpeed;

		[Token(Token = "0x400188B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static bool isLocal;

		[Token(Token = "0x400188C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public static Space space;

		[Token(Token = "0x400188D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static bool orientToPath;

		[Token(Token = "0x400188E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public static Color color;

		[Token(Token = "0x400188F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public static float updateTimePercentage;

		[Token(Token = "0x4001890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static float updateTime;

		[Token(Token = "0x4001891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public static float lookAhead;

		[Token(Token = "0x4001892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static bool useRealTime;

		[Token(Token = "0x4001893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public static Vector3 up;
	}

	[Token(Token = "0x20004A8")]
	private class CRSpline
	{
		[Token(Token = "0x4001894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3[] pts;

		[Token(Token = "0x60025AB")]
		[Address(RVA = "0x1DE75F4", Offset = "0x1DE75F4", VA = "0x1DE75F4")]
		public CRSpline(params Vector3[] pts)
		{
		}

		[Token(Token = "0x60025AC")]
		[Address(RVA = "0x1DE767C", Offset = "0x1DE767C", VA = "0x1DE767C")]
		public Vector3 Interp(float t)
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x20004A9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D328", Offset = "0xA0D328")]
	private sealed class <TweenDelay>d__145 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public iTween <>4__this;

		[Token(Token = "0x17000456")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60025B0")]
			[Address(RVA = "0x1DE71B4", Offset = "0x1DE71B4", VA = "0x1DE71B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000457")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60025B2")]
			[Address(RVA = "0x1DE721C", Offset = "0x1DE721C", VA = "0x1DE721C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025AD")]
		[Address(RVA = "0x1DE70B0", Offset = "0x1DE70B0", VA = "0x1DE70B0")]
		[DebuggerHidden]
		public <TweenDelay>d__145(int <>1__state)
		{
		}

		[Token(Token = "0x60025AE")]
		[Address(RVA = "0x1DE70DC", Offset = "0x1DE70DC", VA = "0x1DE70DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60025AF")]
		[Address(RVA = "0x1DE70E0", Offset = "0x1DE70E0", VA = "0x1DE70E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60025B1")]
		[Address(RVA = "0x1DE71BC", Offset = "0x1DE71BC", VA = "0x1DE71BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004AA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D338", Offset = "0xA0D338")]
	private sealed class <TweenRestart>d__147 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400189A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public iTween <>4__this;

		[Token(Token = "0x17000458")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60025B6")]
			[Address(RVA = "0x1DE7330", Offset = "0x1DE7330", VA = "0x1DE7330", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000459")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60025B8")]
			[Address(RVA = "0x1DE7398", Offset = "0x1DE7398", VA = "0x1DE7398", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025B3")]
		[Address(RVA = "0x1DE7224", Offset = "0x1DE7224", VA = "0x1DE7224")]
		[DebuggerHidden]
		public <TweenRestart>d__147(int <>1__state)
		{
		}

		[Token(Token = "0x60025B4")]
		[Address(RVA = "0x1DE7250", Offset = "0x1DE7250", VA = "0x1DE7250", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60025B5")]
		[Address(RVA = "0x1DE7254", Offset = "0x1DE7254", VA = "0x1DE7254", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60025B7")]
		[Address(RVA = "0x1DE7338", Offset = "0x1DE7338", VA = "0x1DE7338", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004AB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D348", Offset = "0xA0D348")]
	private sealed class <Start>d__229 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400189B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400189C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400189D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public iTween <>4__this;

		[Token(Token = "0x1700045A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60025BC")]
			[Address(RVA = "0x1DE7040", Offset = "0x1DE7040", VA = "0x1DE7040", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700045B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60025BE")]
			[Address(RVA = "0x1DE70A8", Offset = "0x1DE70A8", VA = "0x1DE70A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025B9")]
		[Address(RVA = "0x1DE6F64", Offset = "0x1DE6F64", VA = "0x1DE6F64")]
		[DebuggerHidden]
		public <Start>d__229(int <>1__state)
		{
		}

		[Token(Token = "0x60025BA")]
		[Address(RVA = "0x1DE6F90", Offset = "0x1DE6F90", VA = "0x1DE6F90", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60025BB")]
		[Address(RVA = "0x1DE6F94", Offset = "0x1DE6F94", VA = "0x1DE6F94", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60025BD")]
		[Address(RVA = "0x1DE7048", Offset = "0x1DE7048", VA = "0x1DE7048", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<Hashtable> tweens;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string id;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string type;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string method;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public EaseType easeType;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float time;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float delay;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public LoopType loopType;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isRunning;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool isPaused;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string _name;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float runningTime;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float percentage;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float delayStarted;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool kinematic;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	private bool isLocal;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
	private bool loop;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5F")]
	private bool reverse;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool wasPaused;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool physics;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Hashtable tweenArguments;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Space space;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private EasingFunction ease;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private ApplyTween apply;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private AudioSource audioSource;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3[] vector3s;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector2[] vector2s;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Color[,] colors;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float[] floats;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Rect[] rects;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private CRSpline path;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Vector3 preUpdate;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private Vector3 postUpdate;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private NamedValueColor namedcolorvalue;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float lastRealTime;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool useRealTime;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Transform thisTransform;

	[Token(Token = "0x600001B")]
	[Address(RVA = "0x1447FE0", Offset = "0x1447FE0", VA = "0x1447FE0")]
	public static void Init(GameObject target)
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0x1448264", Offset = "0x1448264", VA = "0x1448264")]
	public static void ValueTo(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0x1449234", Offset = "0x1449234", VA = "0x1449234")]
	public static void FadeFrom(GameObject target, float alpha, float time)
	{
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0x1449514", Offset = "0x1449514", VA = "0x1449514")]
	public static void FadeFrom(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0x1449F68", Offset = "0x1449F68", VA = "0x1449F68")]
	public static void FadeTo(GameObject target, float alpha, float time)
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0x144A118", Offset = "0x144A118", VA = "0x144A118")]
	public static void FadeTo(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0x144A678", Offset = "0x144A678", VA = "0x144A678")]
	public static void ColorFrom(GameObject target, Color color, float time)
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0x1449588", Offset = "0x1449588", VA = "0x1449588")]
	public static void ColorFrom(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0x144A854", Offset = "0x144A854", VA = "0x144A854")]
	public static void ColorTo(GameObject target, Color color, float time)
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0x144A18C", Offset = "0x144A18C", VA = "0x144A18C")]
	public static void ColorTo(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0x144AA30", Offset = "0x144AA30", VA = "0x144AA30")]
	public static void AudioFrom(GameObject target, float volume, float pitch, float time)
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0x144AC5C", Offset = "0x144AC5C", VA = "0x144AC5C")]
	public static void AudioFrom(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0x144B064", Offset = "0x144B064", VA = "0x144B064")]
	public static void AudioTo(GameObject target, float volume, float pitch, float time)
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0x144B290", Offset = "0x144B290", VA = "0x144B290")]
	public static void AudioTo(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0x144B3EC", Offset = "0x144B3EC", VA = "0x144B3EC")]
	public static void Stab(GameObject target, AudioClip audioclip, float delay)
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0x144B580", Offset = "0x144B580", VA = "0x144B580")]
	public static void Stab(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0x144B630", Offset = "0x144B630", VA = "0x144B630")]
	public static void LookFrom(GameObject target, Vector3 looktarget, float time)
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0x144B7FC", Offset = "0x144B7FC", VA = "0x144B7FC")]
	public static void LookFrom(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0x144BE5C", Offset = "0x144BE5C", VA = "0x144BE5C")]
	public static void LookTo(GameObject target, Vector3 looktarget, float time)
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0x144C028", Offset = "0x144C028", VA = "0x144C028")]
	public static void LookTo(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0x144C348", Offset = "0x144C348", VA = "0x144C348")]
	public static void MoveTo(GameObject target, Vector3 position, float time)
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0x144C514", Offset = "0x144C514", VA = "0x144C514")]
	public static void MoveTo(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0x144C8B4", Offset = "0x144C8B4", VA = "0x144C8B4")]
	public static void MoveFrom(GameObject target, Vector3 position, float time)
	{
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0x144CA80", Offset = "0x144CA80", VA = "0x144CA80")]
	public static void MoveFrom(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0x144D380", Offset = "0x144D380", VA = "0x144D380")]
	public static void MoveAdd(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0x144D54C", Offset = "0x144D54C", VA = "0x144D54C")]
	public static void MoveAdd(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0x1448098", Offset = "0x1448098", VA = "0x1448098")]
	public static void MoveBy(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0x144D628", Offset = "0x144D628", VA = "0x144D628")]
	public static void MoveBy(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0x144D704", Offset = "0x144D704", VA = "0x144D704")]
	public static void ScaleTo(GameObject target, Vector3 scale, float time)
	{
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0x144D8D0", Offset = "0x144D8D0", VA = "0x144D8D0")]
	public static void ScaleTo(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0x144DC68", Offset = "0x144DC68", VA = "0x144DC68")]
	public static void ScaleFrom(GameObject target, Vector3 scale, float time)
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0x144DE34", Offset = "0x144DE34", VA = "0x144DE34")]
	public static void ScaleFrom(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0x144E2E0", Offset = "0x144E2E0", VA = "0x144E2E0")]
	public static void ScaleAdd(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0x144E4AC", Offset = "0x144E4AC", VA = "0x144E4AC")]
	public static void ScaleAdd(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0x144E588", Offset = "0x144E588", VA = "0x144E588")]
	public static void ScaleBy(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0x144E754", Offset = "0x144E754", VA = "0x144E754")]
	public static void ScaleBy(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0x144E830", Offset = "0x144E830", VA = "0x144E830")]
	public static void RotateTo(GameObject target, Vector3 rotation, float time)
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0x144E9FC", Offset = "0x144E9FC", VA = "0x144E9FC")]
	public static void RotateTo(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0x144ED9C", Offset = "0x144ED9C", VA = "0x144ED9C")]
	public static void RotateFrom(GameObject target, Vector3 rotation, float time)
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0x144EF68", Offset = "0x144EF68", VA = "0x144EF68")]
	public static void RotateFrom(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0x144F4CC", Offset = "0x144F4CC", VA = "0x144F4CC")]
	public static void RotateAdd(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0x144F698", Offset = "0x144F698", VA = "0x144F698")]
	public static void RotateAdd(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0x144F774", Offset = "0x144F774", VA = "0x144F774")]
	public static void RotateBy(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0x144F940", Offset = "0x144F940", VA = "0x144F940")]
	public static void RotateBy(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0x144FA1C", Offset = "0x144FA1C", VA = "0x144FA1C")]
	public static void ShakePosition(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0x144FBE8", Offset = "0x144FBE8", VA = "0x144FBE8")]
	public static void ShakePosition(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0x144FCC4", Offset = "0x144FCC4", VA = "0x144FCC4")]
	public static void ShakeScale(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0x144FE90", Offset = "0x144FE90", VA = "0x144FE90")]
	public static void ShakeScale(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0x144FF6C", Offset = "0x144FF6C", VA = "0x144FF6C")]
	public static void ShakeRotation(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0x1450138", Offset = "0x1450138", VA = "0x1450138")]
	public static void ShakeRotation(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0x1450214", Offset = "0x1450214", VA = "0x1450214")]
	public static void PunchPosition(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0x14503E0", Offset = "0x14503E0", VA = "0x14503E0")]
	public static void PunchPosition(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0x1450500", Offset = "0x1450500", VA = "0x1450500")]
	public static void PunchRotation(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0x14506CC", Offset = "0x14506CC", VA = "0x14506CC")]
	public static void PunchRotation(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0x14507EC", Offset = "0x14507EC", VA = "0x14507EC")]
	public static void PunchScale(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0x14509B8", Offset = "0x14509B8", VA = "0x14509B8")]
	public static void PunchScale(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0x1450AD8", Offset = "0x1450AD8", VA = "0x1450AD8")]
	private void GenerateTargets()
	{
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0x1451B58", Offset = "0x1451B58", VA = "0x1451B58")]
	private void GenerateRectTargets()
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0x14519EC", Offset = "0x14519EC", VA = "0x14519EC")]
	private void GenerateColorTargets()
	{
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0x145178C", Offset = "0x145178C", VA = "0x145178C")]
	private void GenerateVector3Targets()
	{
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0x14514F8", Offset = "0x14514F8", VA = "0x14514F8")]
	private void GenerateVector2Targets()
	{
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0x1451304", Offset = "0x1451304", VA = "0x1451304")]
	private void GenerateFloatTargets()
	{
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0x1451C94", Offset = "0x1451C94", VA = "0x1451C94")]
	private void GenerateColorToTargets()
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0x14525EC", Offset = "0x14525EC", VA = "0x14525EC")]
	private void GenerateAudioToTargets()
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0x1457390", Offset = "0x1457390", VA = "0x1457390")]
	private void GenerateStabTargets()
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0x1456B64", Offset = "0x1456B64", VA = "0x1456B64")]
	private void GenerateLookToTargets()
	{
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0x14528F8", Offset = "0x14528F8", VA = "0x14528F8")]
	private void GenerateMoveToPathTargets()
	{
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0x1453028", Offset = "0x1453028", VA = "0x1453028")]
	private void GenerateMoveToTargets()
	{
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0x1453674", Offset = "0x1453674", VA = "0x1453674")]
	private void GenerateMoveByTargets()
	{
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0x1453C70", Offset = "0x1453C70", VA = "0x1453C70")]
	private void GenerateScaleToTargets()
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0x14541C0", Offset = "0x14541C0", VA = "0x14541C0")]
	private void GenerateScaleByTargets()
	{
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0x1454614", Offset = "0x1454614", VA = "0x1454614")]
	private void GenerateScaleAddTargets()
	{
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0x1454A5C", Offset = "0x1454A5C", VA = "0x1454A5C")]
	private void GenerateRotateToTargets()
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0x145508C", Offset = "0x145508C", VA = "0x145508C")]
	private void GenerateRotateAddTargets()
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0x14554DC", Offset = "0x14554DC", VA = "0x14554DC")]
	private void GenerateRotateByTargets()
	{
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0x1455998", Offset = "0x1455998", VA = "0x1455998")]
	private void GenerateShakePositionTargets()
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0x1455C8C", Offset = "0x1455C8C", VA = "0x1455C8C")]
	private void GenerateShakeScaleTargets()
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0x1455F54", Offset = "0x1455F54", VA = "0x1455F54")]
	private void GenerateShakeRotationTargets()
	{
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0x145621C", Offset = "0x145621C", VA = "0x145621C")]
	private void GeneratePunchPositionTargets()
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0x1456554", Offset = "0x1456554", VA = "0x1456554")]
	private void GeneratePunchRotationTargets()
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0x1456860", Offset = "0x1456860", VA = "0x1456860")]
	private void GeneratePunchScaleTargets()
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0x1457A94", Offset = "0x1457A94", VA = "0x1457A94")]
	private void ApplyRectTargets()
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0x1457D94", Offset = "0x1457D94", VA = "0x1457D94")]
	private void ApplyColorTargets()
	{
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0x1457FC4", Offset = "0x1457FC4", VA = "0x1457FC4")]
	private void ApplyVector3Targets()
	{
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0x14581B8", Offset = "0x14581B8", VA = "0x14581B8")]
	private void ApplyVector2Targets()
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0x1458358", Offset = "0x1458358", VA = "0x1458358")]
	private void ApplyFloatTargets()
	{
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0x14584B0", Offset = "0x14584B0", VA = "0x14584B0")]
	private void ApplyColorToTargets()
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0x1458A10", Offset = "0x1458A10", VA = "0x1458A10")]
	private void ApplyAudioToTargets()
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0x1458B7C", Offset = "0x1458B7C", VA = "0x1458B7C")]
	private void ApplyStabTargets()
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0x1458B80", Offset = "0x1458B80", VA = "0x1458B80")]
	private void ApplyMoveToPathTargets()
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0x1458EE0", Offset = "0x1458EE0", VA = "0x1458EE0")]
	private void ApplyMoveToTargets()
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0x14590EC", Offset = "0x14590EC", VA = "0x14590EC")]
	private void ApplyMoveByTargets()
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0x145942C", Offset = "0x145942C", VA = "0x145942C")]
	private void ApplyScaleToTargets()
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0x1459594", Offset = "0x1459594", VA = "0x1459594")]
	private void ApplyLookToTargets()
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0x145976C", Offset = "0x145976C", VA = "0x145976C")]
	private void ApplyRotateToTargets()
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0x1459A9C", Offset = "0x1459A9C", VA = "0x1459A9C")]
	private void ApplyRotateAddTargets()
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0x1459D30", Offset = "0x1459D30", VA = "0x1459D30")]
	private void ApplyShakePositionTargets()
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0x145A148", Offset = "0x145A148", VA = "0x145A148")]
	private void ApplyShakeScaleTargets()
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0x145A35C", Offset = "0x145A35C", VA = "0x145A35C")]
	private void ApplyShakeRotationTargets()
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0x145A5CC", Offset = "0x145A5CC", VA = "0x145A5CC")]
	private void ApplyPunchPositionTargets()
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0x145AA80", Offset = "0x145AA80", VA = "0x145AA80")]
	private void ApplyPunchRotationTargets()
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0x145ADC8", Offset = "0x145ADC8", VA = "0x145ADC8")]
	private void ApplyPunchScaleTargets()
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0x145B028", Offset = "0x145B028", VA = "0x145B028")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA25D1C", Offset = "0xA25D1C")]
	private IEnumerator TweenDelay()
	{
		return null;
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x145B098", Offset = "0x145B098", VA = "0x145B098")]
	private void TweenStart()
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0x145BA2C", Offset = "0x145BA2C", VA = "0x145BA2C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA25D80", Offset = "0xA25D80")]
	private IEnumerator TweenRestart()
	{
		return null;
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0x145BA9C", Offset = "0x145BA9C", VA = "0x145BA9C")]
	private void TweenUpdate()
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0x145BB80", Offset = "0x145BB80", VA = "0x145BB80")]
	private void TweenComplete()
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0x145BC50", Offset = "0x145BC50", VA = "0x145BC50")]
	private void TweenLoop()
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0x145BCF4", Offset = "0x145BCF4", VA = "0x145BCF4")]
	public static Rect RectUpdate(Rect currentValue, Rect targetValue, float speed)
	{
		return default(Rect);
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0x145BEBC", Offset = "0x145BEBC", VA = "0x145BEBC")]
	public static Vector3 Vector3Update(Vector3 currentValue, Vector3 targetValue, float speed)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0x145BFC8", Offset = "0x145BFC8", VA = "0x145BFC8")]
	public static Vector2 Vector2Update(Vector2 currentValue, Vector2 targetValue, float speed)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0x145BE7C", Offset = "0x145BE7C", VA = "0x145BE7C")]
	public static float FloatUpdate(float currentValue, float targetValue, float speed)
	{
		return default(float);
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0x145C0AC", Offset = "0x145C0AC", VA = "0x145C0AC")]
	public static void FadeUpdate(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0x145CB28", Offset = "0x145CB28", VA = "0x145CB28")]
	public static void FadeUpdate(GameObject target, float alpha, float time)
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0x145C16C", Offset = "0x145C16C", VA = "0x145C16C")]
	public static void ColorUpdate(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0x145CCD8", Offset = "0x145CCD8", VA = "0x145CCD8")]
	public static void ColorUpdate(GameObject target, Color color, float time)
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0x145CEB4", Offset = "0x145CEB4", VA = "0x145CEB4")]
	public static void AudioUpdate(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0x145D364", Offset = "0x145D364", VA = "0x145D364")]
	public static void AudioUpdate(GameObject target, float volume, float pitch, float time)
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0x145D590", Offset = "0x145D590", VA = "0x145D590")]
	public static void RotateUpdate(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0x145DBB8", Offset = "0x145DBB8", VA = "0x145DBB8")]
	public static void RotateUpdate(GameObject target, Vector3 rotation, float time)
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0x145DD84", Offset = "0x145DD84", VA = "0x145DD84")]
	public static void ScaleUpdate(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0x145E36C", Offset = "0x145E36C", VA = "0x145E36C")]
	public static void ScaleUpdate(GameObject target, Vector3 scale, float time)
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0x145E538", Offset = "0x145E538", VA = "0x145E538")]
	public static void MoveUpdate(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0x145F6A8", Offset = "0x145F6A8", VA = "0x145F6A8")]
	public static void MoveUpdate(GameObject target, Vector3 position, float time)
	{
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0x145ED9C", Offset = "0x145ED9C", VA = "0x145ED9C")]
	public static void LookUpdate(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0x145F874", Offset = "0x145F874", VA = "0x145F874")]
	public static void LookUpdate(GameObject target, Vector3 looktarget, float time)
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0x145FA40", Offset = "0x145FA40", VA = "0x145FA40")]
	public static float PathLength(Transform[] path)
	{
		return default(float);
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0x145791C", Offset = "0x145791C", VA = "0x145791C")]
	public static float PathLength(Vector3[] path)
	{
		return default(float);
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0x1460324", Offset = "0x1460324", VA = "0x1460324")]
	public static void PutOnPath(GameObject target, Vector3[] path, float percent)
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0x14603D4", Offset = "0x14603D4", VA = "0x14603D4")]
	public static void PutOnPath(Transform target, Vector3[] path, float percent)
	{
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0x146046C", Offset = "0x146046C", VA = "0x146046C")]
	public static void PutOnPath(GameObject target, Transform[] path, float percent)
	{
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0x14605A4", Offset = "0x14605A4", VA = "0x14605A4")]
	public static void PutOnPath(Transform target, Transform[] path, float percent)
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0x14606C4", Offset = "0x14606C4", VA = "0x14606C4")]
	public static Vector3 PointOnPath(Transform[] path, float percent)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0x14607D0", Offset = "0x14607D0", VA = "0x14607D0")]
	public static void DrawLine(Vector3[] line)
	{
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0x1460A34", Offset = "0x1460A34", VA = "0x1460A34")]
	public static void DrawLine(Vector3[] line, Color color)
	{
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0x1460AF8", Offset = "0x1460AF8", VA = "0x1460AF8")]
	public static void DrawLine(Transform[] line)
	{
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0x1460C6C", Offset = "0x1460C6C", VA = "0x1460C6C")]
	public static void DrawLine(Transform[] line, Color color)
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0x1460DC0", Offset = "0x1460DC0", VA = "0x1460DC0")]
	public static void DrawLineGizmos(Vector3[] line)
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0x1460EA4", Offset = "0x1460EA4", VA = "0x1460EA4")]
	public static void DrawLineGizmos(Vector3[] line, Color color)
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0x1460F68", Offset = "0x1460F68", VA = "0x1460F68")]
	public static void DrawLineGizmos(Transform[] line)
	{
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0x14610DC", Offset = "0x14610DC", VA = "0x14610DC")]
	public static void DrawLineGizmos(Transform[] line, Color color)
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0x1461230", Offset = "0x1461230", VA = "0x1461230")]
	public static void DrawLineHandles(Vector3[] line)
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0x1461314", Offset = "0x1461314", VA = "0x1461314")]
	public static void DrawLineHandles(Vector3[] line, Color color)
	{
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0x14613D8", Offset = "0x14613D8", VA = "0x14613D8")]
	public static void DrawLineHandles(Transform[] line)
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0x146154C", Offset = "0x146154C", VA = "0x146154C")]
	public static void DrawLineHandles(Transform[] line, Color color)
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0x14616A0", Offset = "0x14616A0", VA = "0x14616A0")]
	public static Vector3 PointOnPath(Vector3[] path, float percent)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0x1461718", Offset = "0x1461718", VA = "0x1461718")]
	public static void DrawPath(Vector3[] path)
	{
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0x14619F0", Offset = "0x14619F0", VA = "0x14619F0")]
	public static void DrawPath(Vector3[] path, Color color)
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0x1461AB4", Offset = "0x1461AB4", VA = "0x1461AB4")]
	public static void DrawPath(Transform[] path)
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0x1461C28", Offset = "0x1461C28", VA = "0x1461C28")]
	public static void DrawPath(Transform[] path, Color color)
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x1461D7C", Offset = "0x1461D7C", VA = "0x1461D7C")]
	public static void DrawPathGizmos(Vector3[] path)
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x1461E60", Offset = "0x1461E60", VA = "0x1461E60")]
	public static void DrawPathGizmos(Vector3[] path, Color color)
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x1461F24", Offset = "0x1461F24", VA = "0x1461F24")]
	public static void DrawPathGizmos(Transform[] path)
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0x1462098", Offset = "0x1462098", VA = "0x1462098")]
	public static void DrawPathGizmos(Transform[] path, Color color)
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0x14621EC", Offset = "0x14621EC", VA = "0x14621EC")]
	public static void DrawPathHandles(Vector3[] path)
	{
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0x14622D0", Offset = "0x14622D0", VA = "0x14622D0")]
	public static void DrawPathHandles(Vector3[] path, Color color)
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0x1462394", Offset = "0x1462394", VA = "0x1462394")]
	public static void DrawPathHandles(Transform[] path)
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0x1462508", Offset = "0x1462508", VA = "0x1462508")]
	public static void DrawPathHandles(Transform[] path, Color color)
	{
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0x146265C", Offset = "0x146265C", VA = "0x146265C")]
	public static void Resume(GameObject target)
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0x146274C", Offset = "0x146274C", VA = "0x146274C")]
	public static void Resume(GameObject target, bool includechildren)
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0x14629F8", Offset = "0x14629F8", VA = "0x14629F8")]
	public static void Resume(GameObject target, string type)
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0x1462B50", Offset = "0x1462B50", VA = "0x1462B50")]
	public static void Resume(GameObject target, string type, bool includechildren)
	{
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0x1462EEC", Offset = "0x1462EEC", VA = "0x1462EEC")]
	public static void Resume()
	{
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0x146300C", Offset = "0x146300C", VA = "0x146300C")]
	public static void Resume(string type)
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0x146323C", Offset = "0x146323C", VA = "0x146323C")]
	public static void Pause(GameObject target)
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0x1463388", Offset = "0x1463388", VA = "0x1463388")]
	public static void Pause(GameObject target, bool includechildren)
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0x1463634", Offset = "0x1463634", VA = "0x1463634")]
	public static void Pause(GameObject target, string type)
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0x14637E0", Offset = "0x14637E0", VA = "0x14637E0")]
	public static void Pause(GameObject target, string type, bool includechildren)
	{
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0x1463BD0", Offset = "0x1463BD0", VA = "0x1463BD0")]
	public static void Pause()
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0x1463CF0", Offset = "0x1463CF0", VA = "0x1463CF0")]
	public static void Pause(string type)
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0x1463F20", Offset = "0x1463F20", VA = "0x1463F20")]
	public static int Count()
	{
		return default(int);
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0x1463F94", Offset = "0x1463F94", VA = "0x1463F94")]
	public static int Count(string type)
	{
		return default(int);
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0x1464170", Offset = "0x1464170", VA = "0x1464170")]
	public static int Count(GameObject target)
	{
		return default(int);
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0x14641D4", Offset = "0x14641D4", VA = "0x14641D4")]
	public static int Count(GameObject target, string type)
	{
		return default(int);
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0x1464330", Offset = "0x1464330", VA = "0x1464330")]
	public static void Stop()
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0x1464568", Offset = "0x1464568", VA = "0x1464568")]
	public static void Stop(string type)
	{
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0x14648E8", Offset = "0x14648E8", VA = "0x14648E8")]
	public static void StopByName(string name)
	{
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0x1464480", Offset = "0x1464480", VA = "0x1464480")]
	public static void Stop(GameObject target)
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0x1464C28", Offset = "0x1464C28", VA = "0x1464C28")]
	public static void Stop(GameObject target, bool includechildren)
	{
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0x1464798", Offset = "0x1464798", VA = "0x1464798")]
	public static void Stop(GameObject target, string type)
	{
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0x1464B18", Offset = "0x1464B18", VA = "0x1464B18")]
	public static void StopByName(GameObject target, string name)
	{
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0x1464ED4", Offset = "0x1464ED4", VA = "0x1464ED4")]
	public static void Stop(GameObject target, string type, bool includechildren)
	{
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0x1465268", Offset = "0x1465268", VA = "0x1465268")]
	public static void StopByName(GameObject target, string name, bool includechildren)
	{
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0x14493E4", Offset = "0x14493E4", VA = "0x14493E4")]
	public static Hashtable Hash(params object[] args)
	{
		return null;
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0x14655BC", Offset = "0x14655BC", VA = "0x14655BC")]
	private iTween(Hashtable h)
	{
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0x14655E8", Offset = "0x14655E8", VA = "0x14655E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0x1466654", Offset = "0x1466654", VA = "0x1466654")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA25DE4", Offset = "0xA25DE4")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0x14666C4", Offset = "0x14666C4", VA = "0x14666C4")]
	private void Update()
	{
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0x1466704", Offset = "0x1466704", VA = "0x1466704")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0x1466744", Offset = "0x1466744", VA = "0x1466744")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0x1466858", Offset = "0x1466858", VA = "0x1466858")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0x14668D4", Offset = "0x14668D4", VA = "0x14668D4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0x14608B4", Offset = "0x14608B4", VA = "0x14608B4")]
	private static void DrawLineHelper(Vector3[] line, Color color, string method)
	{
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0x14617FC", Offset = "0x14617FC", VA = "0x14617FC")]
	private static void DrawPathHelper(Vector3[] path, Color color, string method)
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0x145FC34", Offset = "0x145FC34", VA = "0x145FC34")]
	private static Vector3[] PathControlPointGenerator(Vector3[] path)
	{
		return null;
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0x145FEF8", Offset = "0x145FEF8", VA = "0x145FEF8")]
	private static Vector3 Interp(Vector3[] pts, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0x14490E0", Offset = "0x14490E0", VA = "0x14490E0")]
	private static void Launch(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0x1448740", Offset = "0x1448740", VA = "0x1448740")]
	private static Hashtable CleanArgs(Hashtable args)
	{
		return null;
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0x14668D8", Offset = "0x14668D8", VA = "0x14668D8")]
	private static string GenerateID()
	{
		return null;
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0x1465624", Offset = "0x1465624", VA = "0x1465624")]
	private void RetrieveArgs()
	{
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0x1466958", Offset = "0x1466958", VA = "0x1466958")]
	private void GetEasingFunction()
	{
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0x145BB08", Offset = "0x145BB08", VA = "0x145BB08")]
	private void UpdatePercentage()
	{
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0x145B210", Offset = "0x145B210", VA = "0x145B210")]
	private void CallBack(string callbackType)
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0x14576AC", Offset = "0x14576AC", VA = "0x14576AC")]
	private void Dispose()
	{
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0x145B4E8", Offset = "0x145B4E8", VA = "0x145B4E8")]
	private void ConflictCheck()
	{
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0x145BA28", Offset = "0x145BA28", VA = "0x145BA28")]
	private void EnableKinematic()
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0x145BCF0", Offset = "0x145BCF0", VA = "0x145BCF0")]
	private void DisableKinematic()
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0x1466880", Offset = "0x1466880", VA = "0x1466880")]
	private void ResumeDelay()
	{
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0x1466D4C", Offset = "0x1466D4C", VA = "0x1466D4C")]
	private float linear(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0x1457848", Offset = "0x1457848", VA = "0x1457848")]
	private float clerp(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0x1466DD4", Offset = "0x1466DD4", VA = "0x1466DD4")]
	private float spring(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0x1466ED8", Offset = "0x1466ED8", VA = "0x1466ED8")]
	private float easeInQuad(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0x1466EEC", Offset = "0x1466EEC", VA = "0x1466EEC")]
	private float easeOutQuad(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0x1466F08", Offset = "0x1466F08", VA = "0x1466F08")]
	private float easeInOutQuad(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0x1466F5C", Offset = "0x1466F5C", VA = "0x1466F5C")]
	private float easeInCubic(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0x1466F74", Offset = "0x1466F74", VA = "0x1466F74")]
	private float easeOutCubic(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0x1466F9C", Offset = "0x1466F9C", VA = "0x1466F9C")]
	private float easeInOutCubic(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0x1466FF4", Offset = "0x1466FF4", VA = "0x1466FF4")]
	private float easeInQuart(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0x1467010", Offset = "0x1467010", VA = "0x1467010")]
	private float easeOutQuart(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0x1467038", Offset = "0x1467038", VA = "0x1467038")]
	private float easeInOutQuart(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0x1467094", Offset = "0x1467094", VA = "0x1467094")]
	private float easeInQuint(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0x14670B4", Offset = "0x14670B4", VA = "0x14670B4")]
	private float easeOutQuint(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0x14670E4", Offset = "0x14670E4", VA = "0x14670E4")]
	private float easeInOutQuint(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0x146714C", Offset = "0x146714C", VA = "0x146714C")]
	private float easeInSine(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0x14671E4", Offset = "0x14671E4", VA = "0x14671E4")]
	private float easeOutSine(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0x1467278", Offset = "0x1467278", VA = "0x1467278")]
	private float easeInOutSine(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0x146731C", Offset = "0x146731C", VA = "0x146731C")]
	private float easeInExpo(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0x14673B4", Offset = "0x14673B4", VA = "0x14673B4")]
	private float easeOutExpo(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0x146744C", Offset = "0x146744C", VA = "0x146744C")]
	private float easeInOutExpo(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0x146753C", Offset = "0x146753C", VA = "0x146753C")]
	private float easeInCirc(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0x14675E8", Offset = "0x14675E8", VA = "0x14675E8")]
	private float easeOutCirc(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0x1467694", Offset = "0x1467694", VA = "0x1467694")]
	private float easeInOutCirc(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0x146778C", Offset = "0x146778C", VA = "0x146778C")]
	private float easeInBounce(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0x14677C8", Offset = "0x14677C8", VA = "0x14677C8")]
	private float easeOutBounce(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0x1467894", Offset = "0x1467894", VA = "0x1467894")]
	private float easeInOutBounce(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0x1467918", Offset = "0x1467918", VA = "0x1467918")]
	private float easeInBack(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0x1467948", Offset = "0x1467948", VA = "0x1467948")]
	private float easeOutBack(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0x1467988", Offset = "0x1467988", VA = "0x1467988")]
	private float easeInOutBack(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0x145A9C0", Offset = "0x145A9C0", VA = "0x145A9C0")]
	private float punch(float amplitude, float value)
	{
		return default(float);
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0x1467A0C", Offset = "0x1467A0C", VA = "0x1467A0C")]
	private float easeInElastic(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0x1467AF4", Offset = "0x1467AF4", VA = "0x1467AF4")]
	private float easeOutElastic(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0x1467BD8", Offset = "0x1467BD8", VA = "0x1467BD8")]
	private float easeInOutElastic(float start, float end, float value)
	{
		return default(float);
	}
}
[Token(Token = "0x200000A")]
public class Skeleton : MonoBehaviour
{
	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator animator;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PuppetMaster puppetMaster;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ConfigurableJoint[] leftLeg;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ConfigurableJoint[] rightLeg;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool leftLegRemoved;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool rightLegRemoved;

	[Token(Token = "0x600010E")]
	[Address(RVA = "0x1447BF4", Offset = "0x1447BF4", VA = "0x1447BF4")]
	private void Start()
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0x1447CFC", Offset = "0x1447CFC", VA = "0x1447CFC")]
	public void OnRebuild()
	{
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0x1447D88", Offset = "0x1447D88", VA = "0x1447D88")]
	private void OnMuscleDisconnected(Muscle m)
	{
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0x1447E50", Offset = "0x1447E50", VA = "0x1447E50")]
	private bool IsLegMuscle(Muscle m, out bool isLeft)
	{
		return default(bool);
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0x1447FD8", Offset = "0x1447FD8", VA = "0x1447FD8")]
	public Skeleton()
	{
	}
}
[Token(Token = "0x200000B")]
[ExecuteInEditMode]
public class ScreenshotCompanion : MonoBehaviour
{
	[Token(Token = "0x20004AC")]
	public enum FileType
	{
		[Token(Token = "0x400189F")]
		PNG,
		[Token(Token = "0x40018A0")]
		JPG
	}

	[Token(Token = "0x20004AD")]
	public enum CaptureMethod
	{
		[Token(Token = "0x40018A2")]
		CaptureScreenshot,
		[Token(Token = "0x40018A3")]
		RenderTexture,
		[Token(Token = "0x40018A4")]
		Cutout
	}

	[Token(Token = "0x20004AE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D358", Offset = "0xA0D358")]
	private sealed class <CaptureCutout>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40018A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40018A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40018A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScreenshotCompanion <>4__this;

		[Token(Token = "0x40018A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int id;

		[Token(Token = "0x1700045C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60025C2")]
			[Address(RVA = "0x1447ADC", Offset = "0x1447ADC", VA = "0x1447ADC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700045D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60025C4")]
			[Address(RVA = "0x1447B44", Offset = "0x1447B44", VA = "0x1447B44", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025BF")]
		[Address(RVA = "0x1446A48", Offset = "0x1446A48", VA = "0x1446A48")]
		[DebuggerHidden]
		public <CaptureCutout>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x60025C0")]
		[Address(RVA = "0x1447630", Offset = "0x1447630", VA = "0x1447630", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60025C1")]
		[Address(RVA = "0x1447634", Offset = "0x1447634", VA = "0x1447634", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60025C3")]
		[Address(RVA = "0x1447AE4", Offset = "0x1447AE4", VA = "0x1447AE4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<CameraObject> list;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SettingsaObject settings;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public bool foldoutSettings;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[HideInInspector]
	public int lastCamID;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Camera lastCam;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GUIStyle cutoutBoxStyle;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector2 lastP;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector2 lastS;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float timer;

	[Token(Token = "0x6000113")]
	[Address(RVA = "0x14456D8", Offset = "0x14456D8", VA = "0x14456D8")]
	public void Create()
	{
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0x144575C", Offset = "0x144575C", VA = "0x144575C")]
	public void RequestDelete(int id)
	{
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0x14457E0", Offset = "0x14457E0", VA = "0x14457E0")]
	public void Delete(int id)
	{
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0x1445890", Offset = "0x1445890", VA = "0x1445890")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0x1445928", Offset = "0x1445928", VA = "0x1445928")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0x14462C8", Offset = "0x14462C8", VA = "0x14462C8")]
	private void activateCameraID(int id)
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0x144640C", Offset = "0x144640C", VA = "0x144640C")]
	public string getSaveDirectory()
	{
		return null;
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0x14464C4", Offset = "0x14464C4", VA = "0x14464C4")]
	private string checkSaveDirectory()
	{
		return null;
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0x1446500", Offset = "0x1446500", VA = "0x1446500")]
	private void initCutoutBoxStyle()
	{
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0x1446718", Offset = "0x1446718", VA = "0x1446718")]
	private void clampCutoutBox()
	{
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0x144687C", Offset = "0x144687C", VA = "0x144687C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0x14469F0", Offset = "0x14469F0", VA = "0x14469F0")]
	public void CaptureCutoutVoid(int id)
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0x14460C4", Offset = "0x14460C4", VA = "0x14460C4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA25E48", Offset = "0xA25E48")]
	public IEnumerator CaptureCutout(int id)
	{
		return null;
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0x1446A74", Offset = "0x1446A74", VA = "0x1446A74")]
	private void cutoutEmptyCheck()
	{
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0x1445C38", Offset = "0x1445C38", VA = "0x1445C38")]
	public void CaptureScreenshots(int id, bool fallback)
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0x1445D60", Offset = "0x1445D60", VA = "0x1445D60")]
	public void CaptureRenderTexture(Camera attachedCam, int id)
	{
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0x1446D7C", Offset = "0x1446D7C", VA = "0x1446D7C")]
	public string getFileName(int camID)
	{
		return null;
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0x1447194", Offset = "0x1447194", VA = "0x1447194")]
	public string getResolution()
	{
		return null;
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0x1446144", Offset = "0x1446144", VA = "0x1446144")]
	private void DebugLogExtended(string log)
	{
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0x1447168", Offset = "0x1447168", VA = "0x1447168")]
	private void postCapture()
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0x14475C0", Offset = "0x14475C0", VA = "0x14475C0")]
	public ScreenshotCompanion()
	{
	}
}
namespace ScreenshotCompanionFramework
{
	[Serializable]
	[Token(Token = "0x200000C")]
	public class CameraObject
	{
		[Token(Token = "0x400003F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject cam;

		[Token(Token = "0x4000040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public bool deleteQuestion;

		[Token(Token = "0x4000041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public KeyCode hotkey;

		[Token(Token = "0x6000128")]
		[Address(RVA = "0x1445754", Offset = "0x1445754", VA = "0x1445754")]
		public CameraObject()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200000D")]
	public class SettingsaObject
	{
		[Token(Token = "0x4000042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color signatureColor;

		[Token(Token = "0x4000043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string customFileName;

		[Token(Token = "0x4000044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool includeProject;

		[Token(Token = "0x4000045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool includeCamera;

		[Token(Token = "0x4000046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool includeDate;

		[Token(Token = "0x4000047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		public bool includeResolution;

		[Token(Token = "0x4000048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool includeCounter;

		[Token(Token = "0x4000049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int counter;

		[Token(Token = "0x400004A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public ScreenshotCompanion.FileType fileType;

		[Token(Token = "0x400004B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool applicationPath;

		[Token(Token = "0x400004C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string customDirectoryName;

		[Token(Token = "0x400004D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public ScreenshotCompanion.CaptureMethod captureMethod;

		[Token(Token = "0x400004E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool singleCamera;

		[Token(Token = "0x400004F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float renderSizeMultiplier;

		[Token(Token = "0x4000050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int captureSizeMultiplier;

		[Token(Token = "0x4000051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Vector2 cutoutPosition;

		[Token(Token = "0x4000052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vector2 cutoutSize;

		[Token(Token = "0x6000129")]
		[Address(RVA = "0x1447B4C", Offset = "0x1447B4C", VA = "0x1447B4C")]
		public SettingsaObject()
		{
		}
	}
}
namespace RootMotion
{
	[Token(Token = "0x200000E")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xA05BE0", Offset = "0xA05BE0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA05BE0", Offset = "0xA05BE0")]
	public abstract class Baker : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004AF")]
		public enum Mode
		{
			[Token(Token = "0x40018AA")]
			AnimationClips,
			[Token(Token = "0x40018AB")]
			AnimationStates,
			[Token(Token = "0x40018AC")]
			PlayableDirector,
			[Token(Token = "0x40018AD")]
			Realtime
		}

		[Token(Token = "0x4000053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0E158", Offset = "0xA0E158")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0E158", Offset = "0xA0E158")]
		public int frameRate;

		[Token(Token = "0x4000054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0E1B0", Offset = "0xA0E1B0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0E1B0", Offset = "0xA0E1B0")]
		public float keyReductionError;

		[Token(Token = "0x4000055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0E208", Offset = "0xA0E208")]
		public Mode mode;

		[Token(Token = "0x4000056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0E240", Offset = "0xA0E240")]
		public AnimationClip[] animationClips;

		[Token(Token = "0x4000057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0E278", Offset = "0xA0E278")]
		public string[] animationStates;

		[Token(Token = "0x4000058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0E2B0", Offset = "0xA0E2B0")]
		public bool loop;

		[Token(Token = "0x4000059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0E2E8", Offset = "0xA0E2E8")]
		public string saveToFolder;

		[Token(Token = "0x400005A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0E320", Offset = "0xA0E320")]
		public string appendName;

		[Token(Token = "0x400005B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0E358", Offset = "0xA0E358")]
		public string saveName;

		[Token(Token = "0x400005C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0E390", Offset = "0xA0E390")]
		private bool <isBaking>k__BackingField;

		[Token(Token = "0x400005D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0E3A0", Offset = "0xA0E3A0")]
		private float <bakingProgress>k__BackingField;

		[Token(Token = "0x400005E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[HideInInspector]
		public Animator animator;

		[Token(Token = "0x400005F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		[HideInInspector]
		public PlayableDirector director;

		[Token(Token = "0x4000060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0E420", Offset = "0xA0E420")]
		private float <clipLength>k__BackingField;

		[Token(Token = "0x17000001")]
		public bool isBaking
		{
			[Token(Token = "0x600012E")]
			[Address(RVA = "0x13D393C", Offset = "0x13D393C", VA = "0x13D393C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA25F8C", Offset = "0xA25F8C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600012F")]
			[Address(RVA = "0x13D3944", Offset = "0x13D3944", VA = "0x13D3944")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA25F9C", Offset = "0xA25F9C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000002")]
		public float bakingProgress
		{
			[Token(Token = "0x6000130")]
			[Address(RVA = "0x13D3950", Offset = "0x13D3950", VA = "0x13D3950")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA25FAC", Offset = "0xA25FAC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000131")]
			[Address(RVA = "0x13D3958", Offset = "0x13D3958", VA = "0x13D3958")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA25FBC", Offset = "0xA25FBC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000003")]
		protected float clipLength
		{
			[Token(Token = "0x6000137")]
			[Address(RVA = "0x13D3960", Offset = "0x13D3960", VA = "0x13D3960")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA25FCC", Offset = "0xA25FCC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000138")]
			[Address(RVA = "0x13D3968", Offset = "0x13D3968", VA = "0x13D3968")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA25FDC", Offset = "0xA25FDC")]
			private set
			{
			}
		}

		[Token(Token = "0x600012A")]
		[Address(RVA = "0x13D380C", Offset = "0x13D380C", VA = "0x13D380C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA25EAC", Offset = "0xA25EAC")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x600012B")]
		[Address(RVA = "0x13D3858", Offset = "0x13D3858", VA = "0x13D3858")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA25EE4", Offset = "0xA25EE4")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x600012C")]
		[Address(RVA = "0x13D38A4", Offset = "0x13D38A4", VA = "0x13D38A4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA25F1C", Offset = "0xA25F1C")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x600012D")]
		[Address(RVA = "0x13D38F0", Offset = "0x13D38F0", VA = "0x13D38F0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA25F54", Offset = "0xA25F54")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000132")]
		protected abstract Transform GetCharacterRoot();

		[Token(Token = "0x6000133")]
		protected abstract void OnStartBaking();

		[Token(Token = "0x6000134")]
		protected abstract void OnSetLoopFrame(float time);

		[Token(Token = "0x6000135")]
		protected abstract void OnSetCurves(ref AnimationClip clip);

		[Token(Token = "0x6000136")]
		protected abstract void OnSetKeyframes(float time, bool lastFrame);

		[Token(Token = "0x6000139")]
		[Address(RVA = "0x13D3970", Offset = "0x13D3970", VA = "0x13D3970")]
		public void BakeClip()
		{
		}

		[Token(Token = "0x600013A")]
		[Address(RVA = "0x13D3974", Offset = "0x13D3974", VA = "0x13D3974")]
		public void StartBaking()
		{
		}

		[Token(Token = "0x600013B")]
		[Address(RVA = "0x13D3978", Offset = "0x13D3978", VA = "0x13D3978")]
		public void StopBaking()
		{
		}

		[Token(Token = "0x600013C")]
		[Address(RVA = "0x13D397C", Offset = "0x13D397C", VA = "0x13D397C")]
		protected Baker()
		{
		}
	}
	[Token(Token = "0x200000F")]
	public class GenericBaker : Baker
	{
		[Token(Token = "0x4000061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0E430", Offset = "0xA0E430")]
		public bool markAsLegacy;

		[Token(Token = "0x4000062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0E468", Offset = "0xA0E468")]
		public Transform root;

		[Token(Token = "0x4000063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0E4A0", Offset = "0xA0E4A0")]
		public Transform rootNode;

		[Token(Token = "0x4000064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0E4D8", Offset = "0xA0E4D8")]
		public Transform[] ignoreList;

		[Token(Token = "0x4000065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0E510", Offset = "0xA0E510")]
		public Transform[] bakePositionList;

		[Token(Token = "0x4000066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BakerTransform[] children;

		[Token(Token = "0x4000067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private BakerTransform rootChild;

		[Token(Token = "0x4000068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int rootChildIndex;

		[Token(Token = "0x600013D")]
		[Address(RVA = "0x143F150", Offset = "0x143F150", VA = "0x143F150")]
		private void Awake()
		{
		}

		[Token(Token = "0x600013E")]
		[Address(RVA = "0x143F51C", Offset = "0x143F51C", VA = "0x143F51C", Slot = "4")]
		protected override Transform GetCharacterRoot()
		{
			return null;
		}

		[Token(Token = "0x600013F")]
		[Address(RVA = "0x143F524", Offset = "0x143F524", VA = "0x143F524", Slot = "5")]
		protected override void OnStartBaking()
		{
		}

		[Token(Token = "0x6000140")]
		[Address(RVA = "0x143F634", Offset = "0x143F634", VA = "0x143F634", Slot = "6")]
		protected override void OnSetLoopFrame(float time)
		{
		}

		[Token(Token = "0x6000141")]
		[Address(RVA = "0x143F6B0", Offset = "0x143F6B0", VA = "0x143F6B0", Slot = "7")]
		protected override void OnSetCurves(ref AnimationClip clip)
		{
		}

		[Token(Token = "0x6000142")]
		[Address(RVA = "0x143F72C", Offset = "0x143F72C", VA = "0x143F72C", Slot = "8")]
		protected override void OnSetKeyframes(float time, bool lastFrame)
		{
		}

		[Token(Token = "0x6000143")]
		[Address(RVA = "0x143F36C", Offset = "0x143F36C", VA = "0x143F36C")]
		private bool IsIgnored(Transform t)
		{
			return default(bool);
		}

		[Token(Token = "0x6000144")]
		[Address(RVA = "0x143F444", Offset = "0x143F444", VA = "0x143F444")]
		private bool BakePosition(Transform t)
		{
			return default(bool);
		}

		[Token(Token = "0x6000145")]
		[Address(RVA = "0x143F7A8", Offset = "0x143F7A8", VA = "0x143F7A8")]
		public GenericBaker()
		{
		}
	}
	[Token(Token = "0x2000010")]
	public class TQ
	{
		[Token(Token = "0x4000069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 t;

		[Token(Token = "0x400006A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion q;

		[Token(Token = "0x6000146")]
		[Address(RVA = "0x1443E14", Offset = "0x1443E14", VA = "0x1443E14")]
		public TQ(Vector3 translation, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x2000011")]
	public class AvatarUtility
	{
		[Token(Token = "0x6000147")]
		[Address(RVA = "0x13D27F4", Offset = "0x13D27F4", VA = "0x13D27F4")]
		public static Quaternion GetPostRotation(Avatar avatar, AvatarIKGoal avatarIKGoal)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000148")]
		[Address(RVA = "0x13D2A08", Offset = "0x13D2A08", VA = "0x13D2A08")]
		public static TQ GetIKGoalTQ(Avatar avatar, float humanScale, AvatarIKGoal avatarIKGoal, TQ bodyPositionRotation, TQ boneTQ)
		{
			return null;
		}

		[Token(Token = "0x6000149")]
		[Address(RVA = "0x13D29E8", Offset = "0x13D29E8", VA = "0x13D29E8")]
		public static HumanBodyBones HumanIDFromAvatarIKGoal(AvatarIKGoal avatarIKGoal)
		{
			return default(HumanBodyBones);
		}

		[Token(Token = "0x600014A")]
		[Address(RVA = "0x13D3088", Offset = "0x13D3088", VA = "0x13D3088")]
		public AvatarUtility()
		{
		}
	}
	[Token(Token = "0x2000012")]
	public static class BakerUtilities
	{
		[Token(Token = "0x600014B")]
		[Address(RVA = "0x1550FD4", Offset = "0x1550FD4", VA = "0x1550FD4")]
		public static void ReduceKeyframes(AnimationCurve curve, float maxError)
		{
		}

		[Token(Token = "0x600014C")]
		[Address(RVA = "0x1551E00", Offset = "0x1551E00", VA = "0x1551E00")]
		public static Keyframe[] GetReducedKeyframes(AnimationCurve curve, float maxError)
		{
			return null;
		}

		[Token(Token = "0x600014D")]
		[Address(RVA = "0x155106C", Offset = "0x155106C", VA = "0x155106C")]
		public static void SetLoopFrame(float time, AnimationCurve curve)
		{
		}

		[Token(Token = "0x600014E")]
		[Address(RVA = "0x15521E8", Offset = "0x15521E8", VA = "0x15521E8")]
		public static void SetTangentMode(AnimationCurve curve)
		{
		}

		[Token(Token = "0x600014F")]
		[Address(RVA = "0x15521EC", Offset = "0x15521EC", VA = "0x15521EC")]
		public static Quaternion EnsureQuaternionContinuity(Quaternion lastQ, Quaternion q)
		{
			return default(Quaternion);
		}
	}
	[Serializable]
	[Token(Token = "0x2000013")]
	public class BakerHumanoidQT
	{
		[Token(Token = "0x400006B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Transform transform;

		[Token(Token = "0x400006C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string Qx;

		[Token(Token = "0x400006D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string Qy;

		[Token(Token = "0x400006E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string Qz;

		[Token(Token = "0x400006F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string Qw;

		[Token(Token = "0x4000070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string Tx;

		[Token(Token = "0x4000071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string Ty;

		[Token(Token = "0x4000072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string Tz;

		[Token(Token = "0x4000073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AnimationCurve rotX;

		[Token(Token = "0x4000074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AnimationCurve rotY;

		[Token(Token = "0x4000075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AnimationCurve rotZ;

		[Token(Token = "0x4000076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AnimationCurve rotW;

		[Token(Token = "0x4000077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public AnimationCurve posX;

		[Token(Token = "0x4000078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public AnimationCurve posY;

		[Token(Token = "0x4000079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public AnimationCurve posZ;

		[Token(Token = "0x400007A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private AvatarIKGoal goal;

		[Token(Token = "0x400007B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Quaternion lastQ;

		[Token(Token = "0x400007C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private bool lastQSet;

		[Token(Token = "0x6000150")]
		[Address(RVA = "0x13D3A3C", Offset = "0x13D3A3C", VA = "0x13D3A3C")]
		public BakerHumanoidQT(string name)
		{
		}

		[Token(Token = "0x6000151")]
		[Address(RVA = "0x13D3C88", Offset = "0x13D3C88", VA = "0x13D3C88")]
		public BakerHumanoidQT(Transform transform, AvatarIKGoal goal, string name)
		{
		}

		[Token(Token = "0x6000152")]
		[Address(RVA = "0x13D3B5C", Offset = "0x13D3B5C", VA = "0x13D3B5C")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000153")]
		[Address(RVA = "0x13D3DC0", Offset = "0x13D3DC0", VA = "0x13D3DC0")]
		public void SetIKKeyframes(float time, Avatar avatar, float humanScale, Vector3 bodyPosition, Quaternion bodyRotation)
		{
		}

		[Token(Token = "0x6000154")]
		[Address(RVA = "0x13D4010", Offset = "0x13D4010", VA = "0x13D4010")]
		public void SetKeyframes(float time, Vector3 pos, Quaternion rot)
		{
		}

		[Token(Token = "0x6000155")]
		[Address(RVA = "0x13D410C", Offset = "0x13D410C", VA = "0x13D410C")]
		public void MoveLastKeyframes(float time)
		{
		}

		[Token(Token = "0x6000156")]
		[Address(RVA = "0x13D4208", Offset = "0x13D4208", VA = "0x13D4208")]
		public void SetLoopFrame(float time)
		{
		}

		[Token(Token = "0x6000157")]
		[Address(RVA = "0x13D4180", Offset = "0x13D4180", VA = "0x13D4180")]
		private void MoveLastKeyframe(float time, AnimationCurve curve)
		{
		}

		[Token(Token = "0x6000158")]
		[Address(RVA = "0x13D4298", Offset = "0x13D4298", VA = "0x13D4298")]
		public void MultiplyLength(AnimationCurve curve, float mlp)
		{
		}

		[Token(Token = "0x6000159")]
		[Address(RVA = "0x13D434C", Offset = "0x13D434C", VA = "0x13D434C")]
		public void SetCurves(ref AnimationClip clip, float maxError, float lengthMlp)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000014")]
	public class BakerMuscle
	{
		[Token(Token = "0x400007D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AnimationCurve curve;

		[Token(Token = "0x400007E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int muscleIndex;

		[Token(Token = "0x400007F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string propertyName;

		[Token(Token = "0x600015A")]
		[Address(RVA = "0x15506E4", Offset = "0x15506E4", VA = "0x15506E4")]
		public BakerMuscle(int muscleIndex)
		{
		}

		[Token(Token = "0x600015B")]
		[Address(RVA = "0x1550754", Offset = "0x1550754", VA = "0x1550754")]
		private string MuscleNameToPropertyName(string n)
		{
			return null;
		}

		[Token(Token = "0x600015C")]
		[Address(RVA = "0x1550E3C", Offset = "0x1550E3C", VA = "0x1550E3C")]
		public void MultiplyLength(AnimationCurve curve, float mlp)
		{
		}

		[Token(Token = "0x600015D")]
		[Address(RVA = "0x1550EF0", Offset = "0x1550EF0", VA = "0x1550EF0")]
		public void SetCurves(ref AnimationClip clip, float maxError, float lengthMlp)
		{
		}

		[Token(Token = "0x600015E")]
		[Address(RVA = "0x1550DDC", Offset = "0x1550DDC", VA = "0x1550DDC")]
		public void Reset()
		{
		}

		[Token(Token = "0x600015F")]
		[Address(RVA = "0x155101C", Offset = "0x155101C", VA = "0x155101C")]
		public void SetKeyframe(float time, float[] muscles)
		{
		}

		[Token(Token = "0x6000160")]
		[Address(RVA = "0x1551064", Offset = "0x1551064", VA = "0x1551064")]
		public void SetLoopFrame(float time)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000015")]
	public class BakerTransform
	{
		[Token(Token = "0x4000080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform transform;

		[Token(Token = "0x4000081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationCurve posX;

		[Token(Token = "0x4000082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve posY;

		[Token(Token = "0x4000083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve posZ;

		[Token(Token = "0x4000084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve rotX;

		[Token(Token = "0x4000085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AnimationCurve rotY;

		[Token(Token = "0x4000086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AnimationCurve rotZ;

		[Token(Token = "0x4000087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AnimationCurve rotW;

		[Token(Token = "0x4000088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string relativePath;

		[Token(Token = "0x4000089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool recordPosition;

		[Token(Token = "0x400008A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector3 relativePosition;

		[Token(Token = "0x400008B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool isRootNode;

		[Token(Token = "0x400008C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Quaternion relativeRotation;

		[Token(Token = "0x6000161")]
		[Address(RVA = "0x15512B8", Offset = "0x15512B8", VA = "0x15512B8")]
		public BakerTransform(Transform transform, Transform root, bool recordPosition, bool isRootNode)
		{
		}

		[Token(Token = "0x6000162")]
		[Address(RVA = "0x155144C", Offset = "0x155144C", VA = "0x155144C")]
		public void SetRelativeSpace(Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x6000163")]
		[Address(RVA = "0x1551460", Offset = "0x1551460", VA = "0x1551460")]
		public void SetCurves(ref AnimationClip clip)
		{
		}

		[Token(Token = "0x6000164")]
		[Address(RVA = "0x15516F0", Offset = "0x15516F0", VA = "0x15516F0")]
		private void AddRootMotionCurves(ref AnimationClip clip)
		{
		}

		[Token(Token = "0x6000165")]
		[Address(RVA = "0x1551354", Offset = "0x1551354", VA = "0x1551354")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000166")]
		[Address(RVA = "0x155193C", Offset = "0x155193C", VA = "0x155193C")]
		public void ReduceKeyframes(float maxError)
		{
		}

		[Token(Token = "0x6000167")]
		[Address(RVA = "0x15519B0", Offset = "0x15519B0", VA = "0x15519B0")]
		public void SetKeyframes(float time)
		{
		}

		[Token(Token = "0x6000168")]
		[Address(RVA = "0x1551BFC", Offset = "0x1551BFC", VA = "0x1551BFC")]
		public void AddLoopFrame(float time)
		{
		}
	}
	[Token(Token = "0x2000016")]
	public class HumanoidBaker : Baker
	{
		[Token(Token = "0x400008D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0E548", Offset = "0xA0E548")]
		public bool bakeHandIK;

		[Token(Token = "0x400008E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0E580", Offset = "0xA0E580")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0E580", Offset = "0xA0E580")]
		public float IKKeyReductionError;

		[Token(Token = "0x400008F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0E5D8", Offset = "0xA0E5D8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0E5D8", Offset = "0xA0E5D8")]
		public int muscleFrameRateDiv;

		[Token(Token = "0x4000090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private BakerMuscle[] bakerMuscles;

		[Token(Token = "0x4000091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private BakerHumanoidQT rootQT;

		[Token(Token = "0x4000092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private BakerHumanoidQT leftFootQT;

		[Token(Token = "0x4000093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BakerHumanoidQT rightFootQT;

		[Token(Token = "0x4000094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private BakerHumanoidQT leftHandQT;

		[Token(Token = "0x4000095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private BakerHumanoidQT rightHandQT;

		[Token(Token = "0x4000096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float[] muscles;

		[Token(Token = "0x4000097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private HumanPose pose;

		[Token(Token = "0x4000098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private HumanPoseHandler handler;

		[Token(Token = "0x4000099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Vector3 bodyPosition;

		[Token(Token = "0x400009A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private Quaternion bodyRotation;

		[Token(Token = "0x400009B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private int mN;

		[Token(Token = "0x400009C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Quaternion lastBodyRotation;

		[Token(Token = "0x6000169")]
		[Address(RVA = "0x14406E0", Offset = "0x14406E0", VA = "0x14406E0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600016A")]
		[Address(RVA = "0x1440B0C", Offset = "0x1440B0C", VA = "0x1440B0C", Slot = "4")]
		protected override Transform GetCharacterRoot()
		{
			return null;
		}

		[Token(Token = "0x600016B")]
		[Address(RVA = "0x1440B28", Offset = "0x1440B28", VA = "0x1440B28", Slot = "5")]
		protected override void OnStartBaking()
		{
		}

		[Token(Token = "0x600016C")]
		[Address(RVA = "0x1440C48", Offset = "0x1440C48", VA = "0x1440C48", Slot = "6")]
		protected override void OnSetLoopFrame(float time)
		{
		}

		[Token(Token = "0x600016D")]
		[Address(RVA = "0x1440D24", Offset = "0x1440D24", VA = "0x1440D24", Slot = "7")]
		protected override void OnSetCurves(ref AnimationClip clip)
		{
		}

		[Token(Token = "0x600016E")]
		[Address(RVA = "0x1440EF4", Offset = "0x1440EF4", VA = "0x1440EF4", Slot = "8")]
		protected override void OnSetKeyframes(float time, bool lastFrame)
		{
		}

		[Token(Token = "0x600016F")]
		[Address(RVA = "0x144121C", Offset = "0x144121C", VA = "0x144121C")]
		private void UpdateHumanPose()
		{
		}

		[Token(Token = "0x6000170")]
		[Address(RVA = "0x14412F8", Offset = "0x14412F8", VA = "0x14412F8")]
		public HumanoidBaker()
		{
		}
	}
	[Token(Token = "0x2000017")]
	public class CameraController : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004B0")]
		public enum UpdateMode
		{
			[Token(Token = "0x40018AF")]
			Update,
			[Token(Token = "0x40018B0")]
			FixedUpdate,
			[Token(Token = "0x40018B1")]
			LateUpdate,
			[Token(Token = "0x40018B2")]
			FixedLateUpdate
		}

		[Token(Token = "0x400009D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x400009E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform rotationSpace;

		[Token(Token = "0x400009F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UpdateMode updateMode;

		[Token(Token = "0x40000A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool lockCursor;

		[Token(Token = "0x40000A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA0E62C", Offset = "0xA0E62C")]
		public bool smoothFollow;

		[Token(Token = "0x40000A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 offset;

		[Token(Token = "0x40000A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float followSpeed;

		[Token(Token = "0x40000A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA0E664", Offset = "0xA0E664")]
		public float rotationSensitivity;

		[Token(Token = "0x40000A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float yMinLimit;

		[Token(Token = "0x40000A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float yMaxLimit;

		[Token(Token = "0x40000A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool rotateAlways;

		[Token(Token = "0x40000A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		public bool rotateOnLeftButton;

		[Token(Token = "0x40000A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
		public bool rotateOnRightButton;

		[Token(Token = "0x40000AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F")]
		public bool rotateOnMiddleButton;

		[Token(Token = "0x40000AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA0E69C", Offset = "0xA0E69C")]
		public float distance;

		[Token(Token = "0x40000AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float minDistance;

		[Token(Token = "0x40000AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float maxDistance;

		[Token(Token = "0x40000AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float zoomSpeed;

		[Token(Token = "0x40000AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float zoomSensitivity;

		[Token(Token = "0x40000B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA0E6D4", Offset = "0xA0E6D4")]
		public LayerMask blockingLayers;

		[Token(Token = "0x40000B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float blockingRadius;

		[Token(Token = "0x40000B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float blockingSmoothTime;

		[Token(Token = "0x40000B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0E70C", Offset = "0xA0E70C")]
		public float blockedOffset;

		[Token(Token = "0x40000B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0E724", Offset = "0xA0E724")]
		private float <x>k__BackingField;

		[Token(Token = "0x40000B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0E734", Offset = "0xA0E734")]
		private float <y>k__BackingField;

		[Token(Token = "0x40000B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0E744", Offset = "0xA0E744")]
		private float <distanceTarget>k__BackingField;

		[Token(Token = "0x40000B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 targetDistance;

		[Token(Token = "0x40000B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector3 position;

		[Token(Token = "0x40000B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Quaternion rotation;

		[Token(Token = "0x40000BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3 smoothPosition;

		[Token(Token = "0x40000BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Camera cam;

		[Token(Token = "0x40000BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool fixedFrame;

		[Token(Token = "0x40000BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float fixedDeltaTime;

		[Token(Token = "0x40000BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Quaternion r;

		[Token(Token = "0x40000BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Vector3 lastUp;

		[Token(Token = "0x40000C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float blockedDistance;

		[Token(Token = "0x40000C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float blockedDistanceV;

		[Token(Token = "0x17000004")]
		public float x
		{
			[Token(Token = "0x6000171")]
			[Address(RVA = "0x1558BA8", Offset = "0x1558BA8", VA = "0x1558BA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA25FEC", Offset = "0xA25FEC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000172")]
			[Address(RVA = "0x1558BB0", Offset = "0x1558BB0", VA = "0x1558BB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA25FFC", Offset = "0xA25FFC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000005")]
		public float y
		{
			[Token(Token = "0x6000173")]
			[Address(RVA = "0x1558BB8", Offset = "0x1558BB8", VA = "0x1558BB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2600C", Offset = "0xA2600C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000174")]
			[Address(RVA = "0x1558BC0", Offset = "0x1558BC0", VA = "0x1558BC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2601C", Offset = "0xA2601C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000006")]
		public float distanceTarget
		{
			[Token(Token = "0x6000175")]
			[Address(RVA = "0x1558BC8", Offset = "0x1558BC8", VA = "0x1558BC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2602C", Offset = "0xA2602C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000176")]
			[Address(RVA = "0x1558BD0", Offset = "0x1558BD0", VA = "0x1558BD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2603C", Offset = "0xA2603C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000007")]
		private float zoomAdd
		{
			[Token(Token = "0x6000180")]
			[Address(RVA = "0x155967C", Offset = "0x155967C", VA = "0x155967C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000177")]
		[Address(RVA = "0x1558BD8", Offset = "0x1558BD8", VA = "0x1558BD8")]
		public void SetAngles(Quaternion rotation)
		{
		}

		[Token(Token = "0x6000178")]
		[Address(RVA = "0x1558C14", Offset = "0x1558C14", VA = "0x1558C14")]
		public void SetAngles(float yaw, float pitch)
		{
		}

		[Token(Token = "0x6000179")]
		[Address(RVA = "0x1558C1C", Offset = "0x1558C1C", VA = "0x1558C1C", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600017A")]
		[Address(RVA = "0x1558D38", Offset = "0x1558D38", VA = "0x1558D38", Slot = "5")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x600017B")]
		[Address(RVA = "0x1558D94", Offset = "0x1558D94", VA = "0x1558D94", Slot = "6")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x600017C")]
		[Address(RVA = "0x1558DFC", Offset = "0x1558DFC", VA = "0x1558DFC", Slot = "7")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x600017D")]
		[Address(RVA = "0x1558E60", Offset = "0x1558E60", VA = "0x1558E60")]
		public void UpdateInput()
		{
		}

		[Token(Token = "0x600017E")]
		[Address(RVA = "0x1558D6C", Offset = "0x1558D6C", VA = "0x1558D6C")]
		public void UpdateTransform()
		{
		}

		[Token(Token = "0x600017F")]
		[Address(RVA = "0x1558FE0", Offset = "0x1558FE0", VA = "0x1558FE0")]
		public void UpdateTransform(float deltaTime)
		{
		}

		[Token(Token = "0x6000181")]
		[Address(RVA = "0x15595CC", Offset = "0x15595CC", VA = "0x15595CC")]
		private float ClampAngle(float angle, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x6000182")]
		[Address(RVA = "0x15596F0", Offset = "0x15596F0", VA = "0x15596F0")]
		public CameraController()
		{
		}
	}
	[Token(Token = "0x2000018")]
	public class CameraControllerFPS : MonoBehaviour
	{
		[Token(Token = "0x40000C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float rotationSensitivity;

		[Token(Token = "0x40000C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float yMinLimit;

		[Token(Token = "0x40000C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float yMaxLimit;

		[Token(Token = "0x40000C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float x;

		[Token(Token = "0x40000C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float y;

		[Token(Token = "0x6000183")]
		[Address(RVA = "0x1559800", Offset = "0x1559800", VA = "0x1559800")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000184")]
		[Address(RVA = "0x1559838", Offset = "0x1559838", VA = "0x1559838")]
		public void LateUpdate()
		{
		}

		[Token(Token = "0x6000185")]
		[Address(RVA = "0x15599F0", Offset = "0x15599F0", VA = "0x15599F0")]
		private float ClampAngle(float angle, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x6000186")]
		[Address(RVA = "0x1559AA0", Offset = "0x1559AA0", VA = "0x1559AA0")]
		public CameraControllerFPS()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000019")]
	public enum Axis
	{
		[Token(Token = "0x40000C8")]
		X,
		[Token(Token = "0x40000C9")]
		Y,
		[Token(Token = "0x40000CA")]
		Z
	}
	[Token(Token = "0x200001A")]
	public class AxisTools
	{
		[Token(Token = "0x6000187")]
		[Address(RVA = "0x13D3090", Offset = "0x13D3090", VA = "0x13D3090")]
		public static Vector3 ToVector3(Axis axis)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000188")]
		[Address(RVA = "0x13D3148", Offset = "0x13D3148", VA = "0x13D3148")]
		public static Axis ToAxis(Vector3 v)
		{
			return default(Axis);
		}

		[Token(Token = "0x6000189")]
		[Address(RVA = "0x13D31F4", Offset = "0x13D31F4", VA = "0x13D31F4")]
		public static Axis GetAxisToPoint(Transform t, Vector3 worldPosition)
		{
			return default(Axis);
		}

		[Token(Token = "0x600018A")]
		[Address(RVA = "0x13D33D8", Offset = "0x13D33D8", VA = "0x13D33D8")]
		public static Axis GetAxisToDirection(Transform t, Vector3 direction)
		{
			return default(Axis);
		}

		[Token(Token = "0x600018B")]
		[Address(RVA = "0x13D3310", Offset = "0x13D3310", VA = "0x13D3310")]
		public static Vector3 GetAxisVectorToPoint(Transform t, Vector3 worldPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600018C")]
		[Address(RVA = "0x13D34F4", Offset = "0x13D34F4", VA = "0x13D34F4")]
		public static Vector3 GetAxisVectorToDirection(Transform t, Vector3 direction)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600018D")]
		[Address(RVA = "0x13D353C", Offset = "0x13D353C", VA = "0x13D353C")]
		public static Vector3 GetAxisVectorToDirection(Quaternion r, Vector3 direction)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600018E")]
		[Address(RVA = "0x13D3804", Offset = "0x13D3804", VA = "0x13D3804")]
		public AxisTools()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200001B")]
	public class BipedLimbOrientations
	{
		[Serializable]
		[Token(Token = "0x20004B1")]
		public class LimbOrientation
		{
			[Token(Token = "0x40018B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 upperBoneForwardAxis;

			[Token(Token = "0x40018B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 lowerBoneForwardAxis;

			[Token(Token = "0x40018B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 lastBoneLeftAxis;

			[Token(Token = "0x60025C5")]
			[Address(RVA = "0x1552708", Offset = "0x1552708", VA = "0x1552708")]
			public LimbOrientation(Vector3 upperBoneForwardAxis, Vector3 lowerBoneForwardAxis, Vector3 lastBoneLeftAxis)
			{
			}
		}

		[Token(Token = "0x40000CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LimbOrientation leftArm;

		[Token(Token = "0x40000CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LimbOrientation rightArm;

		[Token(Token = "0x40000CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LimbOrientation leftLeg;

		[Token(Token = "0x40000CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LimbOrientation rightLeg;

		[Token(Token = "0x17000008")]
		public static BipedLimbOrientations UMA
		{
			[Token(Token = "0x6000190")]
			[Address(RVA = "0x1552494", Offset = "0x1552494", VA = "0x1552494")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000009")]
		public static BipedLimbOrientations MaxBiped
		{
			[Token(Token = "0x6000191")]
			[Address(RVA = "0x1552780", Offset = "0x1552780", VA = "0x1552780")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600018F")]
		[Address(RVA = "0x1552448", Offset = "0x1552448", VA = "0x1552448")]
		public BipedLimbOrientations(LimbOrientation leftArm, LimbOrientation rightArm, LimbOrientation leftLeg, LimbOrientation rightLeg)
		{
		}
	}
	[Token(Token = "0x200001C")]
	public static class BipedNaming
	{
		[Serializable]
		[Token(Token = "0x20004B2")]
		public enum BoneType
		{
			[Token(Token = "0x40018B7")]
			Unassigned,
			[Token(Token = "0x40018B8")]
			Spine,
			[Token(Token = "0x40018B9")]
			Head,
			[Token(Token = "0x40018BA")]
			Arm,
			[Token(Token = "0x40018BB")]
			Leg,
			[Token(Token = "0x40018BC")]
			Tail,
			[Token(Token = "0x40018BD")]
			Eye
		}

		[Serializable]
		[Token(Token = "0x20004B3")]
		public enum BoneSide
		{
			[Token(Token = "0x40018BF")]
			Center,
			[Token(Token = "0x40018C0")]
			Left,
			[Token(Token = "0x40018C1")]
			Right
		}

		[Token(Token = "0x40000CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string[] typeLeft;

		[Token(Token = "0x40000D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string[] typeRight;

		[Token(Token = "0x40000D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static string[] typeSpine;

		[Token(Token = "0x40000D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static string[] typeHead;

		[Token(Token = "0x40000D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static string[] typeArm;

		[Token(Token = "0x40000D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static string[] typeLeg;

		[Token(Token = "0x40000D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static string[] typeTail;

		[Token(Token = "0x40000D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static string[] typeEye;

		[Token(Token = "0x40000D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static string[] typeExclude;

		[Token(Token = "0x40000D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static string[] typeExcludeSpine;

		[Token(Token = "0x40000D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static string[] typeExcludeHead;

		[Token(Token = "0x40000DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public static string[] typeExcludeArm;

		[Token(Token = "0x40000DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public static string[] typeExcludeLeg;

		[Token(Token = "0x40000DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public static string[] typeExcludeTail;

		[Token(Token = "0x40000DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public static string[] typeExcludeEye;

		[Token(Token = "0x40000DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public static string[] pelvis;

		[Token(Token = "0x40000DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public static string[] hand;

		[Token(Token = "0x40000E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public static string[] foot;

		[Token(Token = "0x6000192")]
		[Address(RVA = "0x15529F4", Offset = "0x15529F4", VA = "0x15529F4")]
		public static Transform[] GetBonesOfType(BoneType boneType, Transform[] bones)
		{
			return null;
		}

		[Token(Token = "0x6000193")]
		[Address(RVA = "0x1552CF4", Offset = "0x1552CF4", VA = "0x1552CF4")]
		public static Transform[] GetBonesOfSide(BoneSide boneSide, Transform[] bones)
		{
			return null;
		}

		[Token(Token = "0x6000194")]
		[Address(RVA = "0x1552F44", Offset = "0x1552F44", VA = "0x1552F44")]
		public static Transform[] GetBonesOfTypeAndSide(BoneType boneType, BoneSide boneSide, Transform[] bones)
		{
			return null;
		}

		[Token(Token = "0x6000195")]
		[Address(RVA = "0x1552FC8", Offset = "0x1552FC8", VA = "0x1552FC8")]
		public static Transform GetFirstBoneOfTypeAndSide(BoneType boneType, BoneSide boneSide, Transform[] bones)
		{
			return null;
		}

		[Token(Token = "0x6000196")]
		[Address(RVA = "0x1553074", Offset = "0x1553074", VA = "0x1553074")]
		public static Transform GetNamingMatch(Transform[] transforms, params string[][] namings)
		{
			return null;
		}

		[Token(Token = "0x6000197")]
		[Address(RVA = "0x1552BA4", Offset = "0x1552BA4", VA = "0x1552BA4")]
		public static BoneType GetBoneType(string boneName)
		{
			return default(BoneType);
		}

		[Token(Token = "0x6000198")]
		[Address(RVA = "0x1552EA4", Offset = "0x1552EA4", VA = "0x1552EA4")]
		public static BoneSide GetBoneSide(string boneName)
		{
			return default(BoneSide);
		}

		[Token(Token = "0x6000199")]
		[Address(RVA = "0x15538B4", Offset = "0x15538B4", VA = "0x15538B4")]
		public static Transform GetBone(Transform[] transforms, BoneType boneType, BoneSide boneSide = BoneSide.Center, params string[][] namings)
		{
			return null;
		}

		[Token(Token = "0x600019A")]
		[Address(RVA = "0x15536CC", Offset = "0x15536CC", VA = "0x15536CC")]
		private static bool isLeft(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x600019B")]
		[Address(RVA = "0x15537C0", Offset = "0x15537C0", VA = "0x15537C0")]
		private static bool isRight(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x600019C")]
		[Address(RVA = "0x1553294", Offset = "0x1553294", VA = "0x1553294")]
		private static bool isSpine(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x600019D")]
		[Address(RVA = "0x1553348", Offset = "0x1553348", VA = "0x1553348")]
		private static bool isHead(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x600019E")]
		[Address(RVA = "0x15533FC", Offset = "0x15533FC", VA = "0x15533FC")]
		private static bool isArm(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x600019F")]
		[Address(RVA = "0x15534B0", Offset = "0x15534B0", VA = "0x15534B0")]
		private static bool isLeg(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x60001A0")]
		[Address(RVA = "0x1553564", Offset = "0x1553564", VA = "0x1553564")]
		private static bool isTail(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x60001A1")]
		[Address(RVA = "0x1553618", Offset = "0x1553618", VA = "0x1553618")]
		private static bool isEye(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x60001A2")]
		[Address(RVA = "0x1553AC8", Offset = "0x1553AC8", VA = "0x1553AC8")]
		private static bool isTypeExclude(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x60001A3")]
		[Address(RVA = "0x15531A8", Offset = "0x15531A8", VA = "0x15531A8")]
		private static bool matchesNaming(string boneName, string[] namingConvention)
		{
			return default(bool);
		}

		[Token(Token = "0x60001A4")]
		[Address(RVA = "0x1553A38", Offset = "0x1553A38", VA = "0x1553A38")]
		private static bool excludesNaming(string boneName, string[] namingConvention)
		{
			return default(bool);
		}

		[Token(Token = "0x60001A5")]
		[Address(RVA = "0x1553B38", Offset = "0x1553B38", VA = "0x1553B38")]
		private static bool matchesLastLetter(string boneName, string[] namingConvention)
		{
			return default(bool);
		}

		[Token(Token = "0x60001A6")]
		[Address(RVA = "0x1553C10", Offset = "0x1553C10", VA = "0x1553C10")]
		private static bool LastLetterIs(string boneName, string letter)
		{
			return default(bool);
		}

		[Token(Token = "0x60001A7")]
		[Address(RVA = "0x15539BC", Offset = "0x15539BC", VA = "0x15539BC")]
		private static string firstLetter(string boneName)
		{
			return null;
		}

		[Token(Token = "0x60001A8")]
		[Address(RVA = "0x1553944", Offset = "0x1553944", VA = "0x1553944")]
		private static string lastLetter(string boneName)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x200001D")]
	public class BipedReferences
	{
		[Token(Token = "0x20004B4")]
		public struct AutoDetectParams
		{
			[Token(Token = "0x40018C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool legsParentInSpine;

			[Token(Token = "0x40018C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
			public bool includeEyes;

			[Token(Token = "0x1700045E")]
			public static AutoDetectParams Default
			{
				[Token(Token = "0x60025C7")]
				[Address(RVA = "0x1558BA0", Offset = "0x1558BA0", VA = "0x1558BA0")]
				get
				{
					return default(AutoDetectParams);
				}
			}

			[Token(Token = "0x60025C6")]
			[Address(RVA = "0xB93598", Offset = "0xB93598", VA = "0xB93598")]
			public AutoDetectParams(bool legsParentInSpine, bool includeEyes)
			{
			}
		}

		[Token(Token = "0x40000E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform root;

		[Token(Token = "0x40000E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform pelvis;

		[Token(Token = "0x40000E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform leftThigh;

		[Token(Token = "0x40000E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform leftCalf;

		[Token(Token = "0x40000E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform leftFoot;

		[Token(Token = "0x40000E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform rightThigh;

		[Token(Token = "0x40000E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform rightCalf;

		[Token(Token = "0x40000E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform rightFoot;

		[Token(Token = "0x40000E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform leftUpperArm;

		[Token(Token = "0x40000EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform leftForearm;

		[Token(Token = "0x40000EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform leftHand;

		[Token(Token = "0x40000EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform rightUpperArm;

		[Token(Token = "0x40000ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform rightForearm;

		[Token(Token = "0x40000EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Transform rightHand;

		[Token(Token = "0x40000EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Transform head;

		[Token(Token = "0x40000F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Transform[] spine;

		[Token(Token = "0x40000F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Transform[] eyes;

		[Token(Token = "0x1700000A")]
		public virtual bool isFilled
		{
			[Token(Token = "0x60001AA")]
			[Address(RVA = "0x1555784", Offset = "0x1555784", VA = "0x1555784", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700000B")]
		public bool isEmpty
		{
			[Token(Token = "0x60001AB")]
			[Address(RVA = "0x1555B70", Offset = "0x1555B70", VA = "0x1555B70")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60001AC")]
		[Address(RVA = "0x1555B80", Offset = "0x1555B80", VA = "0x1555B80", Slot = "5")]
		public virtual bool IsEmpty(bool includeRoot)
		{
			return default(bool);
		}

		[Token(Token = "0x60001AD")]
		[Address(RVA = "0x1555FAC", Offset = "0x1555FAC", VA = "0x1555FAC", Slot = "6")]
		public virtual bool Contains(Transform t, bool ignoreRoot = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60001AE")]
		[Address(RVA = "0x15563E4", Offset = "0x15563E4", VA = "0x15563E4")]
		public static bool AutoDetectReferences(ref BipedReferences references, Transform root, AutoDetectParams autoDetectParams)
		{
			return default(bool);
		}

		[Token(Token = "0x60001AF")]
		[Address(RVA = "0x15569F4", Offset = "0x15569F4", VA = "0x15569F4")]
		public static void DetectReferencesByNaming(ref BipedReferences references, Transform root, AutoDetectParams autoDetectParams)
		{
		}

		[Token(Token = "0x60001B0")]
		[Address(RVA = "0x1556630", Offset = "0x1556630", VA = "0x1556630")]
		public static void AssignHumanoidReferences(ref BipedReferences references, Animator animator, AutoDetectParams autoDetectParams)
		{
		}

		[Token(Token = "0x60001B1")]
		[Address(RVA = "0x15571A4", Offset = "0x15571A4", VA = "0x15571A4")]
		public static bool SetupError(BipedReferences references, ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x60001B2")]
		[Address(RVA = "0x1557298", Offset = "0x1557298", VA = "0x1557298")]
		public static bool SetupWarning(BipedReferences references, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x60001B3")]
		[Address(RVA = "0x15577F0", Offset = "0x15577F0", VA = "0x15577F0")]
		private static bool IsNeckBone(Transform bone, Transform leftUpperArm)
		{
			return default(bool);
		}

		[Token(Token = "0x60001B4")]
		[Address(RVA = "0x15575F4", Offset = "0x15575F4", VA = "0x15575F4")]
		private static bool AddBoneToEyes(Transform bone, ref BipedReferences references, AutoDetectParams autoDetectParams)
		{
			return default(bool);
		}

		[Token(Token = "0x60001B5")]
		[Address(RVA = "0x155746C", Offset = "0x155746C", VA = "0x155746C")]
		private static bool AddBoneToSpine(Transform bone, ref BipedReferences references, AutoDetectParams autoDetectParams)
		{
			return default(bool);
		}

		[Token(Token = "0x60001B6")]
		[Address(RVA = "0x1557338", Offset = "0x1557338", VA = "0x1557338")]
		private static void DetectLimb(BipedNaming.BoneType boneType, BipedNaming.BoneSide boneSide, ref Transform firstBone, ref Transform secondBone, ref Transform lastBone, Transform[] transforms)
		{
		}

		[Token(Token = "0x60001B7")]
		[Address(RVA = "0x15576F8", Offset = "0x15576F8", VA = "0x15576F8")]
		private static void AddBoneToHierarchy(ref Transform[] bones, Transform transform)
		{
		}

		[Token(Token = "0x60001B8")]
		[Address(RVA = "0x15578EC", Offset = "0x15578EC", VA = "0x15578EC")]
		private static bool LimbError(Transform bone1, Transform bone2, Transform bone3, ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x60001B9")]
		[Address(RVA = "0x155838C", Offset = "0x155838C", VA = "0x155838C")]
		private static bool LimbWarning(Transform bone1, Transform bone2, Transform bone3, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x60001BA")]
		[Address(RVA = "0x1557E70", Offset = "0x1557E70", VA = "0x1557E70")]
		private static bool SpineError(BipedReferences references, ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x60001BB")]
		[Address(RVA = "0x1558680", Offset = "0x1558680", VA = "0x1558680")]
		private static bool SpineWarning(BipedReferences references, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x60001BC")]
		[Address(RVA = "0x15581B0", Offset = "0x15581B0", VA = "0x15581B0")]
		private static bool EyesError(BipedReferences references, ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x60001BD")]
		[Address(RVA = "0x1558688", Offset = "0x1558688", VA = "0x1558688")]
		private static bool EyesWarning(BipedReferences references, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x60001BE")]
		[Address(RVA = "0x1558690", Offset = "0x1558690", VA = "0x1558690")]
		private static bool RootHeightWarning(BipedReferences references, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x60001BF")]
		[Address(RVA = "0x1558850", Offset = "0x1558850", VA = "0x1558850")]
		private static bool FacingAxisWarning(BipedReferences references, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x60001C0")]
		[Address(RVA = "0x1558A68", Offset = "0x1558A68", VA = "0x1558A68")]
		private static float GetVerticalOffset(Vector3 p1, Vector3 p2, Quaternion rotation)
		{
			return default(float);
		}

		[Token(Token = "0x60001C1")]
		[Address(RVA = "0x15565C0", Offset = "0x15565C0", VA = "0x15565C0")]
		public BipedReferences()
		{
		}
	}
	[Token(Token = "0x200001E")]
	public class Comments : MonoBehaviour
	{
		[Token(Token = "0x40000F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Multiline]
		public string text;

		[Token(Token = "0x60001C2")]
		[Address(RVA = "0x1559ABC", Offset = "0x1559ABC", VA = "0x1559ABC")]
		public Comments()
		{
		}
	}
	[Token(Token = "0x200001F")]
	public class DemoGUIMessage : MonoBehaviour
	{
		[Token(Token = "0x40000F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string text;

		[Token(Token = "0x40000F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color color;

		[Token(Token = "0x60001C3")]
		[Address(RVA = "0x1559AC4", Offset = "0x1559AC4", VA = "0x1559AC4")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60001C4")]
		[Address(RVA = "0x1559C04", Offset = "0x1559C04", VA = "0x1559C04")]
		public DemoGUIMessage()
		{
		}
	}
	[Token(Token = "0x2000020")]
	public class Hierarchy
	{
		[Token(Token = "0x60001C5")]
		[Address(RVA = "0x143F810", Offset = "0x143F810", VA = "0x143F810")]
		public static bool HierarchyIsValid(Transform[] bones)
		{
			return default(bool);
		}

		[Token(Token = "0x60001C6")]
		[Address(RVA = "0x143FA10", Offset = "0x143FA10", VA = "0x143FA10")]
		public static UnityEngine.Object ContainsDuplicate(UnityEngine.Object[] objects)
		{
			return null;
		}

		[Token(Token = "0x60001C7")]
		[Address(RVA = "0x143F8A8", Offset = "0x143F8A8", VA = "0x143F8A8")]
		public static bool IsAncestor(Transform transform, Transform ancestor)
		{
			return default(bool);
		}

		[Token(Token = "0x60001C8")]
		[Address(RVA = "0x143FB34", Offset = "0x143FB34", VA = "0x143FB34")]
		public static bool ContainsChild(Transform transform, Transform child)
		{
			return default(bool);
		}

		[Token(Token = "0x60001C9")]
		[Address(RVA = "0x143FC58", Offset = "0x143FC58", VA = "0x143FC58")]
		public static void AddAncestors(Transform transform, Transform blocker, ref Transform[] array)
		{
		}

		[Token(Token = "0x60001CA")]
		[Address(RVA = "0x143FF00", Offset = "0x143FF00", VA = "0x143FF00")]
		public static Transform GetAncestor(Transform transform, int minChildCount)
		{
			return null;
		}

		[Token(Token = "0x60001CB")]
		[Address(RVA = "0x144001C", Offset = "0x144001C", VA = "0x144001C")]
		public static Transform GetFirstCommonAncestor(Transform t1, Transform t2)
		{
			return null;
		}

		[Token(Token = "0x60001CC")]
		[Address(RVA = "0x14401A4", Offset = "0x14401A4", VA = "0x14401A4")]
		public static Transform GetFirstCommonAncestor(Transform[] transforms)
		{
			return null;
		}

		[Token(Token = "0x60001CD")]
		[Address(RVA = "0x1440538", Offset = "0x1440538", VA = "0x1440538")]
		public static Transform GetFirstCommonAncestorRecursive(Transform transform, Transform[] transforms)
		{
			return null;
		}

		[Token(Token = "0x60001CE")]
		[Address(RVA = "0x1440324", Offset = "0x1440324", VA = "0x1440324")]
		public static bool IsCommonAncestor(Transform transform, Transform[] transforms)
		{
			return default(bool);
		}

		[Token(Token = "0x60001CF")]
		[Address(RVA = "0x14406D8", Offset = "0x14406D8", VA = "0x14406D8")]
		public Hierarchy()
		{
		}
	}
	[Token(Token = "0x2000021")]
	public class InspectorComment : PropertyAttribute
	{
		[Token(Token = "0x40000F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string name;

		[Token(Token = "0x40000F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string color;

		[Token(Token = "0x60001D0")]
		[Address(RVA = "0x14413AC", Offset = "0x14413AC", VA = "0x14413AC")]
		public InspectorComment(string name)
		{
		}

		[Token(Token = "0x60001D1")]
		[Address(RVA = "0x144141C", Offset = "0x144141C", VA = "0x144141C")]
		public InspectorComment(string name, string color)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000022")]
	public enum InterpolationMode
	{
		[Token(Token = "0x40000F8")]
		None,
		[Token(Token = "0x40000F9")]
		InOutCubic,
		[Token(Token = "0x40000FA")]
		InOutQuintic,
		[Token(Token = "0x40000FB")]
		InOutSine,
		[Token(Token = "0x40000FC")]
		InQuintic,
		[Token(Token = "0x40000FD")]
		InQuartic,
		[Token(Token = "0x40000FE")]
		InCubic,
		[Token(Token = "0x40000FF")]
		InQuadratic,
		[Token(Token = "0x4000100")]
		InElastic,
		[Token(Token = "0x4000101")]
		InElasticSmall,
		[Token(Token = "0x4000102")]
		InElasticBig,
		[Token(Token = "0x4000103")]
		InSine,
		[Token(Token = "0x4000104")]
		InBack,
		[Token(Token = "0x4000105")]
		OutQuintic,
		[Token(Token = "0x4000106")]
		OutQuartic,
		[Token(Token = "0x4000107")]
		OutCubic,
		[Token(Token = "0x4000108")]
		OutInCubic,
		[Token(Token = "0x4000109")]
		OutInQuartic,
		[Token(Token = "0x400010A")]
		OutElastic,
		[Token(Token = "0x400010B")]
		OutElasticSmall,
		[Token(Token = "0x400010C")]
		OutElasticBig,
		[Token(Token = "0x400010D")]
		OutSine,
		[Token(Token = "0x400010E")]
		OutBack,
		[Token(Token = "0x400010F")]
		OutBackCubic,
		[Token(Token = "0x4000110")]
		OutBackQuartic,
		[Token(Token = "0x4000111")]
		BackInCubic,
		[Token(Token = "0x4000112")]
		BackInQuartic
	}
	[Token(Token = "0x2000023")]
	public class Interp
	{
		[Token(Token = "0x60001D2")]
		[Address(RVA = "0x144148C", Offset = "0x144148C", VA = "0x144148C")]
		public static float Float(float t, InterpolationMode mode)
		{
			return default(float);
		}

		[Token(Token = "0x60001D3")]
		[Address(RVA = "0x1441EF4", Offset = "0x1441EF4", VA = "0x1441EF4")]
		public static Vector3 V3(Vector3 v1, Vector3 v2, float t, InterpolationMode mode)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60001D4")]
		[Address(RVA = "0x1441FFC", Offset = "0x1441FFC", VA = "0x1441FFC")]
		public static float LerpValue(float value, float target, float increaseSpeed, float decreaseSpeed)
		{
			return default(float);
		}

		[Token(Token = "0x60001D5")]
		[Address(RVA = "0x14417F8", Offset = "0x14417F8", VA = "0x14417F8")]
		private static float None(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60001D6")]
		[Address(RVA = "0x1441804", Offset = "0x1441804", VA = "0x1441804")]
		private static float InOutCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60001D7")]
		[Address(RVA = "0x1441828", Offset = "0x1441828", VA = "0x1441828")]
		private static float InOutQuintic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60001D8")]
		[Address(RVA = "0x1441864", Offset = "0x1441864", VA = "0x1441864")]
		private static float InQuintic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60001D9")]
		[Address(RVA = "0x144187C", Offset = "0x144187C", VA = "0x144187C")]
		private static float InQuartic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60001DA")]
		[Address(RVA = "0x1441890", Offset = "0x1441890", VA = "0x1441890")]
		private static float InCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60001DB")]
		[Address(RVA = "0x14418A4", Offset = "0x14418A4", VA = "0x14418A4")]
		private static float InQuadratic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60001DC")]
		[Address(RVA = "0x14418B4", Offset = "0x14418B4", VA = "0x14418B4")]
		private static float OutQuintic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60001DD")]
		[Address(RVA = "0x14418FC", Offset = "0x14418FC", VA = "0x14418FC")]
		private static float OutQuartic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60001DE")]
		[Address(RVA = "0x1441934", Offset = "0x1441934", VA = "0x1441934")]
		private static float OutCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60001DF")]
		[Address(RVA = "0x144195C", Offset = "0x144195C", VA = "0x144195C")]
		private static float OutInCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60001E0")]
		[Address(RVA = "0x14420F8", Offset = "0x14420F8", VA = "0x14420F8")]
		private static float OutInQuartic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60001E1")]
		[Address(RVA = "0x1441990", Offset = "0x1441990", VA = "0x1441990")]
		private static float BackInCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60001E2")]
		[Address(RVA = "0x14419B8", Offset = "0x14419B8", VA = "0x14419B8")]
		private static float BackInQuartic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60001E3")]
		[Address(RVA = "0x14419E8", Offset = "0x14419E8", VA = "0x14419E8")]
		private static float OutBackCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60001E4")]
		[Address(RVA = "0x1441A1C", Offset = "0x1441A1C", VA = "0x1441A1C")]
		private static float OutBackQuartic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60001E5")]
		[Address(RVA = "0x1441A60", Offset = "0x1441A60", VA = "0x1441A60")]
		private static float OutElasticSmall(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60001E6")]
		[Address(RVA = "0x1441AC4", Offset = "0x1441AC4", VA = "0x1441AC4")]
		private static float OutElasticBig(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60001E7")]
		[Address(RVA = "0x1441B28", Offset = "0x1441B28", VA = "0x1441B28")]
		private static float InElasticSmall(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60001E8")]
		[Address(RVA = "0x1441B7C", Offset = "0x1441B7C", VA = "0x1441B7C")]
		private static float InElasticBig(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60001E9")]
		[Address(RVA = "0x1441BD0", Offset = "0x1441BD0", VA = "0x1441BD0")]
		private static float InSine(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60001EA")]
		[Address(RVA = "0x1441C68", Offset = "0x1441C68", VA = "0x1441C68")]
		private static float OutSine(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60001EB")]
		[Address(RVA = "0x1441CFC", Offset = "0x1441CFC", VA = "0x1441CFC")]
		private static float InOutSine(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60001EC")]
		[Address(RVA = "0x144212C", Offset = "0x144212C", VA = "0x144212C")]
		private static float InElastic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60001ED")]
		[Address(RVA = "0x1441DA0", Offset = "0x1441DA0", VA = "0x1441DA0")]
		private static float OutElastic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60001EE")]
		[Address(RVA = "0x1441E84", Offset = "0x1441E84", VA = "0x1441E84")]
		private static float InBack(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60001EF")]
		[Address(RVA = "0x1441EB4", Offset = "0x1441EB4", VA = "0x1441EB4")]
		private static float OutBack(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60001F0")]
		[Address(RVA = "0x1442214", Offset = "0x1442214", VA = "0x1442214")]
		public Interp()
		{
		}
	}
	[Token(Token = "0x2000024")]
	public class LargeHeader : PropertyAttribute
	{
		[Token(Token = "0x4000113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string name;

		[Token(Token = "0x4000114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string color;

		[Token(Token = "0x60001F1")]
		[Address(RVA = "0x144221C", Offset = "0x144221C", VA = "0x144221C")]
		public LargeHeader(string name)
		{
		}

		[Token(Token = "0x60001F2")]
		[Address(RVA = "0x144228C", Offset = "0x144228C", VA = "0x144228C")]
		public LargeHeader(string name, string color)
		{
		}
	}
	[Token(Token = "0x2000025")]
	public static class LayerMaskExtensions
	{
		[Token(Token = "0x60001F3")]
		[Address(RVA = "0x14422FC", Offset = "0x14422FC", VA = "0x14422FC")]
		public static bool Contains(LayerMask mask, int layer)
		{
			return default(bool);
		}

		[Token(Token = "0x60001F4")]
		[Address(RVA = "0x1442354", Offset = "0x1442354", VA = "0x1442354")]
		public static LayerMask Create(params string[] layerNames)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x60001F5")]
		[Address(RVA = "0x1442420", Offset = "0x1442420", VA = "0x1442420")]
		public static LayerMask Create(params int[] layerNumbers)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x60001F6")]
		[Address(RVA = "0x144236C", Offset = "0x144236C", VA = "0x144236C")]
		public static LayerMask NamesToMask(params string[] layerNames)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x60001F7")]
		[Address(RVA = "0x1442438", Offset = "0x1442438", VA = "0x1442438")]
		public static LayerMask LayerNumbersToMask(params int[] layerNumbers)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x60001F8")]
		[Address(RVA = "0x14424DC", Offset = "0x14424DC", VA = "0x14424DC")]
		public static LayerMask Inverse(this LayerMask original)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x60001F9")]
		[Address(RVA = "0x1442508", Offset = "0x1442508", VA = "0x1442508")]
		public static LayerMask AddToMask(this LayerMask original, params string[] layerNames)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x60001FA")]
		[Address(RVA = "0x1442558", Offset = "0x1442558", VA = "0x1442558")]
		public static LayerMask RemoveFromMask(this LayerMask original, params string[] layerNames)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x60001FB")]
		[Address(RVA = "0x14425C4", Offset = "0x14425C4", VA = "0x14425C4")]
		public static string[] MaskToNames(this LayerMask original)
		{
			return null;
		}

		[Token(Token = "0x60001FC")]
		[Address(RVA = "0x14426B8", Offset = "0x14426B8", VA = "0x14426B8")]
		public static int[] MaskToNumbers(this LayerMask original)
		{
			return null;
		}

		[Token(Token = "0x60001FD")]
		[Address(RVA = "0x1442790", Offset = "0x1442790", VA = "0x1442790")]
		public static string MaskToString(this LayerMask original)
		{
			return null;
		}

		[Token(Token = "0x60001FE")]
		[Address(RVA = "0x14427F0", Offset = "0x14427F0", VA = "0x14427F0")]
		public static string MaskToString(this LayerMask original, string delimiter)
		{
			return null;
		}
	}
	[Token(Token = "0x2000026")]
	public static class QuaTools
	{
		[Token(Token = "0x60001FF")]
		[Address(RVA = "0x1442820", Offset = "0x1442820", VA = "0x1442820")]
		public static Quaternion Lerp(Quaternion fromRotation, Quaternion toRotation, float weight)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000200")]
		[Address(RVA = "0x144296C", Offset = "0x144296C", VA = "0x144296C")]
		public static Quaternion Slerp(Quaternion fromRotation, Quaternion toRotation, float weight)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000201")]
		[Address(RVA = "0x1442AB8", Offset = "0x1442AB8", VA = "0x1442AB8")]
		public static Quaternion LinearBlend(Quaternion q, float weight)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000202")]
		[Address(RVA = "0x1442BCC", Offset = "0x1442BCC", VA = "0x1442BCC")]
		public static Quaternion SphericalBlend(Quaternion q, float weight)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000203")]
		[Address(RVA = "0x1442CE0", Offset = "0x1442CE0", VA = "0x1442CE0")]
		public static Quaternion FromToAroundAxis(Vector3 fromDirection, Vector3 toDirection, Vector3 axis)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000204")]
		[Address(RVA = "0x1442E6C", Offset = "0x1442E6C", VA = "0x1442E6C")]
		public static Quaternion RotationToLocalSpace(Quaternion space, Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000205")]
		[Address(RVA = "0x1442F3C", Offset = "0x1442F3C", VA = "0x1442F3C")]
		public static Quaternion FromToRotation(Quaternion from, Quaternion to)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000206")]
		[Address(RVA = "0x1443090", Offset = "0x1443090", VA = "0x1443090")]
		public static Vector3 GetAxis(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000207")]
		[Address(RVA = "0x1443314", Offset = "0x1443314", VA = "0x1443314")]
		public static Quaternion ClampRotation(Quaternion rotation, float clampWeight, int clampSmoothing)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000208")]
		[Address(RVA = "0x1443528", Offset = "0x1443528", VA = "0x1443528")]
		public static float ClampAngle(float angle, float clampWeight, int clampSmoothing)
		{
			return default(float);
		}

		[Token(Token = "0x6000209")]
		[Address(RVA = "0x143CCF0", Offset = "0x143CCF0", VA = "0x143CCF0")]
		public static Quaternion MatchRotation(Quaternion targetRotation, Vector3 targetforwardAxis, Vector3 targetUpAxis, Vector3 forwardAxis, Vector3 upAxis)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600020A")]
		[Address(RVA = "0x14436A8", Offset = "0x14436A8", VA = "0x14436A8")]
		public static Vector3 ToBiPolar(Vector3 euler)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600020B")]
		[Address(RVA = "0x14437B8", Offset = "0x14437B8", VA = "0x14437B8")]
		public static float ToBiPolar(float angle)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000027")]
	public abstract class Singleton<T> : MonoBehaviour where T : Singleton<T>
	{
		[Token(Token = "0x4000115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static T sInstance;

		[Token(Token = "0x1700000C")]
		public static T instance
		{
			[Token(Token = "0x600020C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600020D")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600020E")]
		protected Singleton()
		{
		}
	}
	[Token(Token = "0x2000028")]
	public class SolverManager : MonoBehaviour
	{
		[Token(Token = "0x4000116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0E764", Offset = "0xA0E764")]
		public bool fixTransforms;

		[Token(Token = "0x4000117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator animator;

		[Token(Token = "0x4000118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Animation legacy;

		[Token(Token = "0x4000119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool updateFrame;

		[Token(Token = "0x400011A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool componentInitiated;

		[Token(Token = "0x400011B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		private bool skipSolverUpdate;

		[Token(Token = "0x1700000D")]
		private bool animatePhysics
		{
			[Token(Token = "0x6000216")]
			[Address(RVA = "0x144394C", Offset = "0x144394C", VA = "0x144394C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700000E")]
		private bool isAnimated
		{
			[Token(Token = "0x600021A")]
			[Address(RVA = "0x1443C48", Offset = "0x1443C48", VA = "0x1443C48")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000210")]
		[Address(RVA = "0x1443814", Offset = "0x1443814", VA = "0x1443814")]
		public void Disable()
		{
		}

		[Token(Token = "0x6000211")]
		[Address(RVA = "0x14438AC", Offset = "0x14438AC", VA = "0x14438AC", Slot = "4")]
		protected virtual void InitiateSolver()
		{
		}

		[Token(Token = "0x6000212")]
		[Address(RVA = "0x14438B0", Offset = "0x14438B0", VA = "0x14438B0", Slot = "5")]
		protected virtual void UpdateSolver()
		{
		}

		[Token(Token = "0x6000213")]
		[Address(RVA = "0x14438B4", Offset = "0x14438B4", VA = "0x14438B4", Slot = "6")]
		protected virtual void FixTransforms()
		{
		}

		[Token(Token = "0x6000214")]
		[Address(RVA = "0x14438B8", Offset = "0x14438B8", VA = "0x14438B8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000215")]
		[Address(RVA = "0x1443948", Offset = "0x1443948", VA = "0x1443948")]
		private void Start()
		{
		}

		[Token(Token = "0x6000217")]
		[Address(RVA = "0x14438F0", Offset = "0x14438F0", VA = "0x14438F0")]
		private void Initiate()
		{
		}

		[Token(Token = "0x6000218")]
		[Address(RVA = "0x1443BFC", Offset = "0x1443BFC", VA = "0x1443BFC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000219")]
		[Address(RVA = "0x1443A3C", Offset = "0x1443A3C", VA = "0x1443A3C")]
		private void FindAnimatorRecursive(Transform t, bool findInChildren)
		{
		}

		[Token(Token = "0x600021B")]
		[Address(RVA = "0x1443D04", Offset = "0x1443D04", VA = "0x1443D04")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600021C")]
		[Address(RVA = "0x1443D60", Offset = "0x1443D60", VA = "0x1443D60")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600021D")]
		[Address(RVA = "0x1443DBC", Offset = "0x1443DBC", VA = "0x1443DBC")]
		public void UpdateSolverExternal()
		{
		}

		[Token(Token = "0x600021E")]
		[Address(RVA = "0x1443E04", Offset = "0x1443E04", VA = "0x1443E04")]
		public SolverManager()
		{
		}
	}
	[Token(Token = "0x2000029")]
	public class TriggerEventBroadcaster : MonoBehaviour
	{
		[Token(Token = "0x400011C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject target;

		[Token(Token = "0x600021F")]
		[Address(RVA = "0x1443E84", Offset = "0x1443E84", VA = "0x1443E84")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6000220")]
		[Address(RVA = "0x1443F3C", Offset = "0x1443F3C", VA = "0x1443F3C")]
		private void OnTriggerStay(Collider collider)
		{
		}

		[Token(Token = "0x6000221")]
		[Address(RVA = "0x1443FF4", Offset = "0x1443FF4", VA = "0x1443FF4")]
		private void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x6000222")]
		[Address(RVA = "0x14440AC", Offset = "0x14440AC", VA = "0x14440AC")]
		public TriggerEventBroadcaster()
		{
		}
	}
	[Token(Token = "0x200002A")]
	public static class V3Tools
	{
		[Token(Token = "0x6000223")]
		[Address(RVA = "0x14440B4", Offset = "0x14440B4", VA = "0x14440B4")]
		public static Vector3 Lerp(Vector3 fromVector, Vector3 toVector, float weight)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000224")]
		[Address(RVA = "0x14441AC", Offset = "0x14441AC", VA = "0x14441AC")]
		public static Vector3 Slerp(Vector3 fromVector, Vector3 toVector, float weight)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000225")]
		[Address(RVA = "0x14442A4", Offset = "0x14442A4", VA = "0x14442A4")]
		public static Vector3 ExtractVertical(Vector3 v, Vector3 verticalAxis, float weight)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000226")]
		[Address(RVA = "0x144439C", Offset = "0x144439C", VA = "0x144439C")]
		public static Vector3 ExtractHorizontal(Vector3 v, Vector3 normal, float weight)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000227")]
		[Address(RVA = "0x144449C", Offset = "0x144449C", VA = "0x144449C")]
		public static Vector3 ClampDirection(Vector3 direction, Vector3 normalDirection, float clampWeight, int clampSmoothing)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000228")]
		[Address(RVA = "0x14446C0", Offset = "0x14446C0", VA = "0x14446C0")]
		public static Vector3 ClampDirection(Vector3 direction, Vector3 normalDirection, float clampWeight, int clampSmoothing, out bool changed)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000229")]
		[Address(RVA = "0x14448FC", Offset = "0x14448FC", VA = "0x14448FC")]
		public static Vector3 ClampDirection(Vector3 direction, Vector3 normalDirection, float clampWeight, int clampSmoothing, out float clampValue)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600022A")]
		[Address(RVA = "0x1444B4C", Offset = "0x1444B4C", VA = "0x1444B4C")]
		public static Vector3 LineToPlane(Vector3 origin, Vector3 direction, Vector3 planeNormal, Vector3 planePoint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600022B")]
		[Address(RVA = "0x1444D4C", Offset = "0x1444D4C", VA = "0x1444D4C")]
		public static Vector3 PointToPlane(Vector3 point, Vector3 planePosition, Vector3 planeNormal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600022C")]
		[Address(RVA = "0x1444F28", Offset = "0x1444F28", VA = "0x1444F28")]
		public static Vector3 TransformPointUnscaled(Transform t, Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600022D")]
		[Address(RVA = "0x144505C", Offset = "0x144505C", VA = "0x144505C")]
		public static Vector3 InverseTransformPointUnscaled(Transform t, Vector3 point)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x200002B")]
	public static class Warning
	{
		[Token(Token = "0x20004B5")]
		public delegate void Logger(string message);

		[Token(Token = "0x400011D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool logged;

		[Token(Token = "0x600022E")]
		[Address(RVA = "0x14451B4", Offset = "0x14451B4", VA = "0x14451B4")]
		public static void Log(string message, Logger logger, bool logInEditMode = false)
		{
		}

		[Token(Token = "0x600022F")]
		[Address(RVA = "0x14455E0", Offset = "0x14455E0", VA = "0x14455E0")]
		public static void Log(string message, Transform context, bool logInEditMode = false)
		{
		}
	}
}
namespace RootMotion.Dynamics
{
	[Token(Token = "0x200002C")]
	public class AnimationBlocker : MonoBehaviour
	{
		[Token(Token = "0x6000230")]
		[Address(RVA = "0x157953C", Offset = "0x157953C", VA = "0x157953C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000231")]
		[Address(RVA = "0x1579614", Offset = "0x1579614", VA = "0x1579614")]
		public AnimationBlocker()
		{
		}
	}
	[Token(Token = "0x200002D")]
	public abstract class BehaviourBase : MonoBehaviour
	{
		[Token(Token = "0x20004B6")]
		public delegate void BehaviourDelegate();

		[Token(Token = "0x20004B7")]
		public delegate void HitDelegate(MuscleHit hit);

		[Token(Token = "0x20004B8")]
		public delegate void CollisionDelegate(MuscleCollision collision);

		[Serializable]
		[Token(Token = "0x20004B9")]
		public struct PuppetEvent
		{
			[Token(Token = "0x40018C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA20294", Offset = "0xA20294")]
			public string switchToBehaviour;

			[Token(Token = "0x40018C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA202CC", Offset = "0xA202CC")]
			public AnimatorEvent[] animations;

			[Token(Token = "0x40018C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA20304", Offset = "0xA20304")]
			public UnityEvent unityEvent;

			[Token(Token = "0x40018C7")]
			private const string empty = "";

			[Token(Token = "0x1700045F")]
			public bool switchBehaviour
			{
				[Token(Token = "0x60025D8")]
				[Address(RVA = "0xB937A0", Offset = "0xB937A0", VA = "0xB937A0")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x60025D9")]
			[Address(RVA = "0xB937A8", Offset = "0xB937A8", VA = "0xB937A8")]
			public void Trigger(PuppetMaster puppetMaster, bool switchBehaviourEnabled = true)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004BA")]
		public class AnimatorEvent
		{
			[Token(Token = "0x40018C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string animationState;

			[Token(Token = "0x40018C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float crossfadeTime;

			[Token(Token = "0x40018CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int layer;

			[Token(Token = "0x40018CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool resetNormalizedTime;

			[Token(Token = "0x40018CC")]
			private const string empty = "";

			[Token(Token = "0x60025DA")]
			[Address(RVA = "0x157AC9C", Offset = "0x157AC9C", VA = "0x157AC9C")]
			public void Activate(Animator animator, Animation animation)
			{
			}

			[Token(Token = "0x60025DB")]
			[Address(RVA = "0x157AD70", Offset = "0x157AD70", VA = "0x157AD70")]
			private void Activate(Animator animator)
			{
			}

			[Token(Token = "0x60025DC")]
			[Address(RVA = "0x157AE74", Offset = "0x157AE74", VA = "0x157AE74")]
			private void Activate(Animation animation)
			{
			}

			[Token(Token = "0x60025DD")]
			[Address(RVA = "0x157AF54", Offset = "0x157AF54", VA = "0x157AF54")]
			public AnimatorEvent()
			{
			}
		}

		[Token(Token = "0x400011E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public PuppetMaster puppetMaster;

		[Token(Token = "0x400011F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BehaviourDelegate OnPreActivate;

		[Token(Token = "0x4000120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BehaviourDelegate OnPreInitiate;

		[Token(Token = "0x4000121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public BehaviourDelegate OnPreFixedUpdate;

		[Token(Token = "0x4000122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public BehaviourDelegate OnPreUpdate;

		[Token(Token = "0x4000123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public BehaviourDelegate OnPreLateUpdate;

		[Token(Token = "0x4000124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public BehaviourDelegate OnPreDeactivate;

		[Token(Token = "0x4000125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public BehaviourDelegate OnPreFixTransforms;

		[Token(Token = "0x4000126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public BehaviourDelegate OnPreRead;

		[Token(Token = "0x4000127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public BehaviourDelegate OnPreWrite;

		[Token(Token = "0x4000128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public HitDelegate OnPreMuscleHit;

		[Token(Token = "0x4000129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public CollisionDelegate OnPreMuscleCollision;

		[Token(Token = "0x400012A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public CollisionDelegate OnPreMuscleCollisionExit;

		[Token(Token = "0x400012B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BehaviourDelegate OnHierarchyChanged;

		[Token(Token = "0x400012C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public BehaviourDelegate OnPostActivate;

		[Token(Token = "0x400012D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public BehaviourDelegate OnPostInitiate;

		[Token(Token = "0x400012E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public BehaviourDelegate OnPostFixedUpdate;

		[Token(Token = "0x400012F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public BehaviourDelegate OnPostUpdate;

		[Token(Token = "0x4000130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public BehaviourDelegate OnPostLateUpdate;

		[Token(Token = "0x4000131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public BehaviourDelegate OnPostDeactivate;

		[Token(Token = "0x4000132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public BehaviourDelegate OnPostDrawGizmos;

		[Token(Token = "0x4000133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public BehaviourDelegate OnPostFixTransforms;

		[Token(Token = "0x4000134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public BehaviourDelegate OnPostRead;

		[Token(Token = "0x4000135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public BehaviourDelegate OnPostWrite;

		[Token(Token = "0x4000136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public HitDelegate OnPostMuscleHit;

		[Token(Token = "0x4000137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public CollisionDelegate OnPostMuscleCollision;

		[Token(Token = "0x4000138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public CollisionDelegate OnPostMuscleCollisionExit;

		[Token(Token = "0x4000139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[HideInInspector]
		public bool deactivated;

		[Token(Token = "0x400013A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0E7BC", Offset = "0xA0E7BC")]
		private bool <forceActive>k__BackingField;

		[Token(Token = "0x400013B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF2")]
		private bool initiated;

		[Token(Token = "0x1700000F")]
		public bool forceActive
		{
			[Token(Token = "0x600024A")]
			[Address(RVA = "0x157989C", Offset = "0x157989C", VA = "0x157989C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA260BC", Offset = "0xA260BC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600024B")]
			[Address(RVA = "0x15798A4", Offset = "0x15798A4", VA = "0x15798A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA260CC", Offset = "0xA260CC")]
			protected set
			{
			}
		}

		[Token(Token = "0x6000232")]
		public abstract void OnReactivate();

		[Token(Token = "0x6000233")]
		[Address(RVA = "0x157961C", Offset = "0x157961C", VA = "0x157961C", Slot = "5")]
		public virtual void Resurrect()
		{
		}

		[Token(Token = "0x6000234")]
		[Address(RVA = "0x1579620", Offset = "0x1579620", VA = "0x1579620", Slot = "6")]
		public virtual void Freeze()
		{
		}

		[Token(Token = "0x6000235")]
		[Address(RVA = "0x1579624", Offset = "0x1579624", VA = "0x1579624", Slot = "7")]
		public virtual void Unfreeze()
		{
		}

		[Token(Token = "0x6000236")]
		[Address(RVA = "0x1579628", Offset = "0x1579628", VA = "0x1579628", Slot = "8")]
		public virtual void KillStart()
		{
		}

		[Token(Token = "0x6000237")]
		[Address(RVA = "0x157962C", Offset = "0x157962C", VA = "0x157962C", Slot = "9")]
		public virtual void KillEnd()
		{
		}

		[Token(Token = "0x6000238")]
		[Address(RVA = "0x1579630", Offset = "0x1579630", VA = "0x1579630", Slot = "10")]
		public virtual void OnTeleport(Quaternion deltaRotation, Vector3 deltaPosition, Vector3 pivot, bool moveToTarget)
		{
		}

		[Token(Token = "0x6000239")]
		[Address(RVA = "0x1579634", Offset = "0x1579634", VA = "0x1579634", Slot = "11")]
		public virtual void OnMuscleDisconnected(Muscle m)
		{
		}

		[Token(Token = "0x600023A")]
		[Address(RVA = "0x1579638", Offset = "0x1579638", VA = "0x1579638", Slot = "12")]
		public virtual void OnMuscleReconnected(Muscle m)
		{
		}

		[Token(Token = "0x600023B")]
		[Address(RVA = "0x157963C", Offset = "0x157963C", VA = "0x157963C", Slot = "13")]
		public virtual void OnMuscleAdded(Muscle m)
		{
		}

		[Token(Token = "0x600023C")]
		[Address(RVA = "0x1579858", Offset = "0x1579858", VA = "0x1579858", Slot = "14")]
		public virtual void OnMuscleRemoved(Muscle m)
		{
		}

		[Token(Token = "0x600023D")]
		[Address(RVA = "0x1579868", Offset = "0x1579868", VA = "0x1579868", Slot = "15")]
		protected virtual void OnActivate()
		{
		}

		[Token(Token = "0x600023E")]
		[Address(RVA = "0x157986C", Offset = "0x157986C", VA = "0x157986C", Slot = "16")]
		protected virtual void OnDeactivate()
		{
		}

		[Token(Token = "0x600023F")]
		[Address(RVA = "0x1579870", Offset = "0x1579870", VA = "0x1579870", Slot = "17")]
		protected virtual void OnInitiate()
		{
		}

		[Token(Token = "0x6000240")]
		[Address(RVA = "0x1579874", Offset = "0x1579874", VA = "0x1579874", Slot = "18")]
		protected virtual void OnFixedUpdate()
		{
		}

		[Token(Token = "0x6000241")]
		[Address(RVA = "0x1579878", Offset = "0x1579878", VA = "0x1579878", Slot = "19")]
		protected virtual void OnUpdate()
		{
		}

		[Token(Token = "0x6000242")]
		[Address(RVA = "0x157987C", Offset = "0x157987C", VA = "0x157987C", Slot = "20")]
		protected virtual void OnLateUpdate()
		{
		}

		[Token(Token = "0x6000243")]
		[Address(RVA = "0x1579880", Offset = "0x1579880", VA = "0x1579880", Slot = "21")]
		protected virtual void OnDrawGizmosBehaviour()
		{
		}

		[Token(Token = "0x6000244")]
		[Address(RVA = "0x1579884", Offset = "0x1579884", VA = "0x1579884", Slot = "22")]
		protected virtual void OnFixTransformsBehaviour()
		{
		}

		[Token(Token = "0x6000245")]
		[Address(RVA = "0x1579888", Offset = "0x1579888", VA = "0x1579888", Slot = "23")]
		protected virtual void OnReadBehaviour()
		{
		}

		[Token(Token = "0x6000246")]
		[Address(RVA = "0x157988C", Offset = "0x157988C", VA = "0x157988C", Slot = "24")]
		protected virtual void OnWriteBehaviour()
		{
		}

		[Token(Token = "0x6000247")]
		[Address(RVA = "0x1579890", Offset = "0x1579890", VA = "0x1579890", Slot = "25")]
		protected virtual void OnMuscleHitBehaviour(MuscleHit hit)
		{
		}

		[Token(Token = "0x6000248")]
		[Address(RVA = "0x1579894", Offset = "0x1579894", VA = "0x1579894", Slot = "26")]
		protected virtual void OnMuscleCollisionBehaviour(MuscleCollision collision)
		{
		}

		[Token(Token = "0x6000249")]
		[Address(RVA = "0x1579898", Offset = "0x1579898", VA = "0x1579898", Slot = "27")]
		protected virtual void OnMuscleCollisionExitBehaviour(MuscleCollision collision)
		{
		}

		[Token(Token = "0x600024C")]
		[Address(RVA = "0x15798B0", Offset = "0x15798B0", VA = "0x15798B0")]
		public void Initiate()
		{
		}

		[Token(Token = "0x600024D")]
		[Address(RVA = "0x1579908", Offset = "0x1579908", VA = "0x1579908")]
		public void OnFixTransforms()
		{
		}

		[Token(Token = "0x600024E")]
		[Address(RVA = "0x157996C", Offset = "0x157996C", VA = "0x157996C")]
		public void OnRead()
		{
		}

		[Token(Token = "0x600024F")]
		[Address(RVA = "0x15799D0", Offset = "0x15799D0", VA = "0x15799D0")]
		public void OnWrite()
		{
		}

		[Token(Token = "0x6000250")]
		[Address(RVA = "0x1579A34", Offset = "0x1579A34", VA = "0x1579A34")]
		public void OnMuscleHit(MuscleHit hit)
		{
		}

		[Token(Token = "0x6000251")]
		[Address(RVA = "0x1579D84", Offset = "0x1579D84", VA = "0x1579D84")]
		public void OnMuscleCollision(MuscleCollision collision)
		{
		}

		[Token(Token = "0x6000252")]
		[Address(RVA = "0x157A148", Offset = "0x157A148", VA = "0x157A148")]
		public void OnMuscleCollisionExit(MuscleCollision collision)
		{
		}

		[Token(Token = "0x6000253")]
		[Address(RVA = "0x157A1F0", Offset = "0x157A1F0", VA = "0x157A1F0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000254")]
		[Address(RVA = "0x157A200", Offset = "0x157A200", VA = "0x157A200")]
		public void Activate()
		{
		}

		[Token(Token = "0x6000255")]
		[Address(RVA = "0x157A320", Offset = "0x157A320", VA = "0x157A320")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000256")]
		[Address(RVA = "0x157A370", Offset = "0x157A370", VA = "0x157A370")]
		public void FixedUpdateB()
		{
		}

		[Token(Token = "0x6000257")]
		[Address(RVA = "0x157A420", Offset = "0x157A420", VA = "0x157A420")]
		public void UpdateB()
		{
		}

		[Token(Token = "0x6000258")]
		[Address(RVA = "0x157A4D0", Offset = "0x157A4D0", VA = "0x157A4D0")]
		public void LateUpdateB()
		{
		}

		[Token(Token = "0x6000259")]
		[Address(RVA = "0x157A580", Offset = "0x157A580", VA = "0x157A580", Slot = "28")]
		protected virtual void OnDrawGizmos()
		{
		}

		[Token(Token = "0x600025A")]
		[Address(RVA = "0x157A5C0", Offset = "0x157A5C0", VA = "0x157A5C0")]
		protected void RotateTargetToRootMuscle()
		{
		}

		[Token(Token = "0x600025B")]
		[Address(RVA = "0x157A758", Offset = "0x157A758", VA = "0x157A758")]
		protected void TranslateTargetToRootMuscle(float maintainY)
		{
		}

		[Token(Token = "0x600025C")]
		[Address(RVA = "0x157A900", Offset = "0x157A900", VA = "0x157A900")]
		protected void RemovePropMuscles()
		{
		}

		[Token(Token = "0x600025D")]
		[Address(RVA = "0x157AA34", Offset = "0x157AA34", VA = "0x157AA34", Slot = "29")]
		protected virtual void GroundTarget(LayerMask layers)
		{
		}

		[Token(Token = "0x600025E")]
		[Address(RVA = "0x157A9AC", Offset = "0x157A9AC", VA = "0x157A9AC")]
		protected bool ContainsRemovablePropMuscle()
		{
			return default(bool);
		}

		[Token(Token = "0x600025F")]
		[Address(RVA = "0x157AC94", Offset = "0x157AC94", VA = "0x157AC94")]
		protected BehaviourBase()
		{
		}
	}
	[Token(Token = "0x200002E")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xA05C50", Offset = "0xA05C50")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA05C50", Offset = "0xA05C50")]
	public class BehaviourFall : BehaviourBase
	{
		[Token(Token = "0x20004BB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D368", Offset = "0xA0D368")]
		private sealed class <SmoothActivate>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40018CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40018CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40018CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public BehaviourFall <>4__this;

			[Token(Token = "0x40018D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <fader>5__2;

			[Token(Token = "0x17000460")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60025E1")]
				[Address(RVA = "0x157BF54", Offset = "0x157BF54", VA = "0x157BF54", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000461")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60025E3")]
				[Address(RVA = "0x157BFBC", Offset = "0x157BFBC", VA = "0x157BFBC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60025DE")]
			[Address(RVA = "0x157B530", Offset = "0x157B530", VA = "0x157B530")]
			[DebuggerHidden]
			public <SmoothActivate>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x60025DF")]
			[Address(RVA = "0x157BD70", Offset = "0x157BD70", VA = "0x157BD70", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60025E0")]
			[Address(RVA = "0x157BD74", Offset = "0x157BD74", VA = "0x157BD74", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60025E2")]
			[Address(RVA = "0x157BF5C", Offset = "0x157BF5C", VA = "0x157BF5C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400013C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0xA0E7CC", Offset = "0xA0E7CC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0E7CC", Offset = "0xA0E7CC")]
		public string stateName;

		[Token(Token = "0x400013D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0E82C", Offset = "0xA0E82C")]
		public float transitionDuration;

		[Token(Token = "0x400013E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0E864", Offset = "0xA0E864")]
		public int layer;

		[Token(Token = "0x400013F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0E89C", Offset = "0xA0E89C")]
		public float fixedTime;

		[Token(Token = "0x4000140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0xA0E8D4", Offset = "0xA0E8D4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0E8D4", Offset = "0xA0E8D4")]
		public LayerMask raycastLayers;

		[Token(Token = "0x4000141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0E934", Offset = "0xA0E934")]
		public string blendParameter;

		[Token(Token = "0x4000142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0E96C", Offset = "0xA0E96C")]
		public float writheHeight;

		[Token(Token = "0x4000143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0E9A4", Offset = "0xA0E9A4")]
		public float writheYVelocity;

		[Token(Token = "0x4000144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0E9DC", Offset = "0xA0E9DC")]
		public float blendSpeed;

		[Token(Token = "0x4000145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0EA14", Offset = "0xA0EA14")]
		public float blendMappingSpeed;

		[Token(Token = "0x4000146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0xA0EA4C", Offset = "0xA0EA4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0EA4C", Offset = "0xA0EA4C")]
		public bool canEnd;

		[Token(Token = "0x4000147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0EAAC", Offset = "0xA0EAAC")]
		public float minTime;

		[Token(Token = "0x4000148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0EAE4", Offset = "0xA0EAE4")]
		public float maxEndVelocity;

		[Token(Token = "0x4000149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0EB1C", Offset = "0xA0EB1C")]
		public PuppetEvent onEnd;

		[Token(Token = "0x400014A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private float timer;

		[Token(Token = "0x400014B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		private bool endTriggered;

		[Token(Token = "0x6000260")]
		[Address(RVA = "0x157B3D4", Offset = "0x157B3D4", VA = "0x157B3D4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA260DC", Offset = "0xA260DC")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6000261")]
		[Address(RVA = "0x157B420", Offset = "0x157B420", VA = "0x157B420")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA26114", Offset = "0xA26114")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000262")]
		[Address(RVA = "0x157B46C", Offset = "0x157B46C", VA = "0x157B46C", Slot = "15")]
		protected override void OnActivate()
		{
		}

		[Token(Token = "0x6000263")]
		[Address(RVA = "0x157B51C", Offset = "0x157B51C", VA = "0x157B51C", Slot = "16")]
		protected override void OnDeactivate()
		{
		}

		[Token(Token = "0x6000264")]
		[Address(RVA = "0x157B524", Offset = "0x157B524", VA = "0x157B524", Slot = "4")]
		public override void OnReactivate()
		{
		}

		[Token(Token = "0x6000265")]
		[Address(RVA = "0x157B4AC", Offset = "0x157B4AC", VA = "0x157B4AC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA2614C", Offset = "0xA2614C")]
		private IEnumerator SmoothActivate()
		{
			return null;
		}

		[Token(Token = "0x6000266")]
		[Address(RVA = "0x157B55C", Offset = "0x157B55C", VA = "0x157B55C", Slot = "18")]
		protected override void OnFixedUpdate()
		{
		}

		[Token(Token = "0x6000267")]
		[Address(RVA = "0x157BAAC", Offset = "0x157BAAC", VA = "0x157BAAC", Slot = "20")]
		protected override void OnLateUpdate()
		{
		}

		[Token(Token = "0x6000268")]
		[Address(RVA = "0x157BC4C", Offset = "0x157BC4C", VA = "0x157BC4C", Slot = "5")]
		public override void Resurrect()
		{
		}

		[Token(Token = "0x6000269")]
		[Address(RVA = "0x157B8F8", Offset = "0x157B8F8", VA = "0x157B8F8")]
		private float GetBlendTarget(float groundHeight)
		{
			return default(float);
		}

		[Token(Token = "0x600026A")]
		[Address(RVA = "0x157B780", Offset = "0x157B780", VA = "0x157B780")]
		private float GetGroundHeight()
		{
			return default(float);
		}

		[Token(Token = "0x600026B")]
		[Address(RVA = "0x157BCB4", Offset = "0x157BCB4", VA = "0x157BCB4", Slot = "12")]
		public override void OnMuscleReconnected(Muscle m)
		{
		}

		[Token(Token = "0x600026C")]
		[Address(RVA = "0x157BCDC", Offset = "0x157BCDC", VA = "0x157BCDC")]
		public BehaviourFall()
		{
		}
	}
	[Token(Token = "0x200002F")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xA05CB0", Offset = "0xA05CB0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA05CB0", Offset = "0xA05CB0")]
	public class BehaviourPuppet : BehaviourBase
	{
		[Serializable]
		[Token(Token = "0x20004BC")]
		public enum State
		{
			[Token(Token = "0x40018D2")]
			Puppet,
			[Token(Token = "0x40018D3")]
			Unpinned,
			[Token(Token = "0x40018D4")]
			GetUp
		}

		[Serializable]
		[Token(Token = "0x20004BD")]
		public enum NormalMode
		{
			[Token(Token = "0x40018D6")]
			Active,
			[Token(Token = "0x40018D7")]
			Unmapped,
			[Token(Token = "0x40018D8")]
			Kinematic
		}

		[Serializable]
		[Token(Token = "0x20004BE")]
		public class MasterProps
		{
			[Token(Token = "0x40018D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public NormalMode normalMode;

			[Token(Token = "0x40018DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float mappingBlendSpeed;

			[Token(Token = "0x40018DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool activateOnStaticCollisions;

			[Token(Token = "0x40018DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float activateOnImpulse;

			[Token(Token = "0x60025E4")]
			[Address(RVA = "0x157FAC0", Offset = "0x157FAC0", VA = "0x157FAC0")]
			public MasterProps()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004BF")]
		public struct MuscleProps
		{
			[Token(Token = "0x40018DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA2033C", Offset = "0xA2033C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA2033C", Offset = "0xA2033C")]
			public float unpinParents;

			[Token(Token = "0x40018DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA20390", Offset = "0xA20390")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA20390", Offset = "0xA20390")]
			public float unpinChildren;

			[Token(Token = "0x40018DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA203E4", Offset = "0xA203E4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA203E4", Offset = "0xA203E4")]
			public float unpinGroup;

			[Token(Token = "0x40018E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA20438", Offset = "0xA20438")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA20438", Offset = "0xA20438")]
			public float minMappingWeight;

			[Token(Token = "0x40018E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA2048C", Offset = "0xA2048C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA2048C", Offset = "0xA2048C")]
			public float maxMappingWeight;

			[Token(Token = "0x40018E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA204E0", Offset = "0xA204E0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA204E0", Offset = "0xA204E0")]
			public float minPinWeight;

			[Token(Token = "0x40018E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA20534", Offset = "0xA20534")]
			public bool disableColliders;

			[Token(Token = "0x40018E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA2056C", Offset = "0xA2056C")]
			public float regainPinSpeed;

			[Token(Token = "0x40018E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA205A4", Offset = "0xA205A4")]
			public float collisionResistance;

			[Token(Token = "0x40018E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA205DC", Offset = "0xA205DC")]
			public float knockOutDistance;

			[Token(Token = "0x40018E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA20614", Offset = "0xA20614")]
			public PhysicMaterial puppetMaterial;

			[Token(Token = "0x40018E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA2064C", Offset = "0xA2064C")]
			public PhysicMaterial unpinnedMaterial;
		}

		[Serializable]
		[Token(Token = "0x20004C0")]
		public struct MusclePropsGroup
		{
			[Token(Token = "0x40018E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[HideInInspector]
			public string name;

			[Token(Token = "0x40018EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA20694", Offset = "0xA20694")]
			public Muscle.Group[] groups;

			[Token(Token = "0x40018EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA206CC", Offset = "0xA206CC")]
			public MuscleProps props;
		}

		[Serializable]
		[Token(Token = "0x20004C1")]
		public struct CollisionResistanceMultiplier
		{
			[Token(Token = "0x40018EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public LayerMask layers;

			[Token(Token = "0x40018ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA20704", Offset = "0xA20704")]
			public float multiplier;

			[Token(Token = "0x40018EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA2073C", Offset = "0xA2073C")]
			public float collisionThreshold;
		}

		[Token(Token = "0x20004C2")]
		public delegate void CollisionImpulseDelegate(MuscleCollision m, float impulse);

		[Token(Token = "0x400014C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0xA0EB54", Offset = "0xA0EB54")]
		public MasterProps masterProps;

		[Token(Token = "0x400014D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0EB8C", Offset = "0xA0EB8C")]
		public LayerMask groundLayers;

		[Token(Token = "0x400014E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0EBC4", Offset = "0xA0EBC4")]
		public LayerMask collisionLayers;

		[Token(Token = "0x400014F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0EBFC", Offset = "0xA0EBFC")]
		public float collisionThreshold;

		[Token(Token = "0x4000150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public Weight collisionResistance;

		[Token(Token = "0x4000151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0EC34", Offset = "0xA0EC34")]
		public CollisionResistanceMultiplier[] collisionResistanceMultipliers;

		[Token(Token = "0x4000152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0EC6C", Offset = "0xA0EC6C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0EC6C", Offset = "0xA0EC6C")]
		public int maxCollisions;

		[Token(Token = "0x4000153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0ECC0", Offset = "0xA0ECC0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0ECC0", Offset = "0xA0ECC0")]
		public float regainPinSpeed;

		[Token(Token = "0x4000154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0ED18", Offset = "0xA0ED18")]
		public float boostFalloff;

		[Token(Token = "0x4000155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0xA0ED50", Offset = "0xA0ED50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0ED50", Offset = "0xA0ED50")]
		public MuscleProps defaults;

		[Token(Token = "0x4000156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0EDB0", Offset = "0xA0EDB0")]
		public MusclePropsGroup[] groupOverrides;

		[Token(Token = "0x4000157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0xA0EDE8", Offset = "0xA0EDE8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0EDE8", Offset = "0xA0EDE8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0EDE8", Offset = "0xA0EDE8")]
		public float knockOutDistance;

		[Token(Token = "0x4000158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0EE64", Offset = "0xA0EE64")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0EE64", Offset = "0xA0EE64")]
		public float unpinnedMuscleWeightMlp;

		[Token(Token = "0x4000159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0EEB8", Offset = "0xA0EEB8")]
		public float maxRigidbodyVelocity;

		[Token(Token = "0x400015A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0EEF0", Offset = "0xA0EEF0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0EEF0", Offset = "0xA0EEF0")]
		public float pinWeightThreshold;

		[Token(Token = "0x400015B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0EF44", Offset = "0xA0EF44")]
		public bool unpinnedMuscleKnockout;

		[Token(Token = "0x400015C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x181")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0EF7C", Offset = "0xA0EF7C")]
		public bool dropProps;

		[Token(Token = "0x400015D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x182")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0xA0EFB4", Offset = "0xA0EFB4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0EFB4", Offset = "0xA0EFB4")]
		public bool canGetUp;

		[Token(Token = "0x400015E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0F014", Offset = "0xA0F014")]
		public float getUpDelay;

		[Token(Token = "0x400015F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0F04C", Offset = "0xA0F04C")]
		public float blendToAnimationTime;

		[Token(Token = "0x4000160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0F084", Offset = "0xA0F084")]
		public float maxGetUpVelocity;

		[Token(Token = "0x4000161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0F0BC", Offset = "0xA0F0BC")]
		public float minGetUpDuration;

		[Token(Token = "0x4000162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0F0F4", Offset = "0xA0F0F4")]
		public float getUpCollisionResistanceMlp;

		[Token(Token = "0x4000163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0F12C", Offset = "0xA0F12C")]
		public float getUpRegainPinSpeedMlp;

		[Token(Token = "0x4000164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0F164", Offset = "0xA0F164")]
		public float getUpKnockOutDistanceMlp;

		[Token(Token = "0x4000165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0F19C", Offset = "0xA0F19C")]
		public Vector3 getUpOffsetProne;

		[Token(Token = "0x4000166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0F1D4", Offset = "0xA0F1D4")]
		public Vector3 getUpOffsetSupine;

		[Token(Token = "0x4000167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0xA0F20C", Offset = "0xA0F20C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0F20C", Offset = "0xA0F20C")]
		public PuppetEvent onGetUpProne;

		[Token(Token = "0x4000168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0F26C", Offset = "0xA0F26C")]
		public PuppetEvent onGetUpSupine;

		[Token(Token = "0x4000169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0F2A4", Offset = "0xA0F2A4")]
		public PuppetEvent onLoseBalance;

		[Token(Token = "0x400016A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0F2DC", Offset = "0xA0F2DC")]
		public PuppetEvent onLoseBalanceFromPuppet;

		[Token(Token = "0x400016B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0F314", Offset = "0xA0F314")]
		public PuppetEvent onLoseBalanceFromGetUp;

		[Token(Token = "0x400016C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0F34C", Offset = "0xA0F34C")]
		public PuppetEvent onRegainBalance;

		[Token(Token = "0x400016D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		public CollisionDelegate OnCollision;

		[Token(Token = "0x400016E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		public CollisionImpulseDelegate OnCollisionImpulse;

		[Token(Token = "0x400016F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0F384", Offset = "0xA0F384")]
		private State <state>k__BackingField;

		[Token(Token = "0x4000170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
		[HideInInspector]
		public bool canMoveTarget;

		[Token(Token = "0x4000171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		private float unpinnedTimer;

		[Token(Token = "0x4000172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
		private float getUpTimer;

		[Token(Token = "0x4000173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		private Vector3 hipsForward;

		[Token(Token = "0x4000174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
		private Vector3 hipsUp;

		[Token(Token = "0x4000175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		private float getupAnimationBlendWeight;

		[Token(Token = "0x4000176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
		private float getupAnimationBlendWeightV;

		[Token(Token = "0x4000177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		private bool getUpTargetFixed;

		[Token(Token = "0x4000178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
		private NormalMode lastNormalMode;

		[Token(Token = "0x4000179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		private int collisions;

		[Token(Token = "0x400017A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
		private bool eventsEnabled;

		[Token(Token = "0x400017B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		private float lastKnockOutDistance;

		[Token(Token = "0x400017C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
		private float knockOutDistanceSqr;

		[Token(Token = "0x400017D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		private bool getupDisabled;

		[Token(Token = "0x400017E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A1")]
		private bool hasCollidedSinceGetUp;

		[Token(Token = "0x400017F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A2")]
		private bool hasBoosted;

		[Token(Token = "0x4000180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		private MuscleCollisionBroadcaster broadcaster;

		[Token(Token = "0x4000181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		private Vector3 getUpPosition;

		[Token(Token = "0x4000182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
		private bool dropPropFlag;

		[Token(Token = "0x17000010")]
		public State state
		{
			[Token(Token = "0x600026F")]
			[Address(RVA = "0x157C05C", Offset = "0x157C05C", VA = "0x157C05C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA26220", Offset = "0xA26220")]
			get
			{
				return default(State);
			}
			[Token(Token = "0x6000270")]
			[Address(RVA = "0x157C064", Offset = "0x157C064", VA = "0x157C064")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA26230", Offset = "0xA26230")]
			private set
			{
			}
		}

		[Token(Token = "0x600026D")]
		[Address(RVA = "0x157BFC4", Offset = "0x157BFC4", VA = "0x157BFC4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA261B0", Offset = "0xA261B0")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x600026E")]
		[Address(RVA = "0x157C010", Offset = "0x157C010", VA = "0x157C010")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA261E8", Offset = "0xA261E8")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000271")]
		[Address(RVA = "0x157C06C", Offset = "0x157C06C", VA = "0x157C06C", Slot = "4")]
		public override void OnReactivate()
		{
		}

		[Token(Token = "0x6000272")]
		[Address(RVA = "0x157C320", Offset = "0x157C320", VA = "0x157C320")]
		public void Reset(Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x6000273")]
		[Address(RVA = "0x157C38C", Offset = "0x157C38C", VA = "0x157C38C", Slot = "10")]
		public override void OnTeleport(Quaternion deltaRotation, Vector3 deltaPosition, Vector3 pivot, bool moveToTarget)
		{
		}

		[Token(Token = "0x6000274")]
		[Address(RVA = "0x157C4FC", Offset = "0x157C4FC", VA = "0x157C4FC", Slot = "17")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6000275")]
		[Address(RVA = "0x157CA64", Offset = "0x157CA64", VA = "0x157CA64", Slot = "15")]
		protected override void OnActivate()
		{
		}

		[Token(Token = "0x6000276")]
		[Address(RVA = "0x157CB18", Offset = "0x157CB18", VA = "0x157CB18", Slot = "8")]
		public override void KillStart()
		{
		}

		[Token(Token = "0x6000277")]
		[Address(RVA = "0x157CBBC", Offset = "0x157CBBC", VA = "0x157CBBC", Slot = "9")]
		public override void KillEnd()
		{
		}

		[Token(Token = "0x6000278")]
		[Address(RVA = "0x157CBC4", Offset = "0x157CBC4", VA = "0x157CBC4", Slot = "5")]
		public override void Resurrect()
		{
		}

		[Token(Token = "0x6000279")]
		[Address(RVA = "0x157CC50", Offset = "0x157CC50", VA = "0x157CC50", Slot = "16")]
		protected override void OnDeactivate()
		{
		}

		[Token(Token = "0x600027A")]
		[Address(RVA = "0x157CC5C", Offset = "0x157CC5C", VA = "0x157CC5C", Slot = "18")]
		protected override void OnFixedUpdate()
		{
		}

		[Token(Token = "0x600027B")]
		[Address(RVA = "0x157D524", Offset = "0x157D524", VA = "0x157D524", Slot = "20")]
		protected override void OnLateUpdate()
		{
		}

		[Token(Token = "0x600027C")]
		[Address(RVA = "0x157D84C", Offset = "0x157D84C", VA = "0x157D84C")]
		private bool SetKinematic()
		{
			return default(bool);
		}

		[Token(Token = "0x600027D")]
		[Address(RVA = "0x157D934", Offset = "0x157D934", VA = "0x157D934", Slot = "23")]
		protected override void OnReadBehaviour()
		{
		}

		[Token(Token = "0x600027E")]
		[Address(RVA = "0x157D6B4", Offset = "0x157D6B4", VA = "0x157D6B4")]
		private void BlendMuscleMapping(int muscleIndex, ref bool to)
		{
		}

		[Token(Token = "0x600027F")]
		[Address(RVA = "0x157DD38", Offset = "0x157DD38", VA = "0x157DD38", Slot = "13")]
		public override void OnMuscleAdded(Muscle m)
		{
		}

		[Token(Token = "0x6000280")]
		[Address(RVA = "0x157DD78", Offset = "0x157DD78", VA = "0x157DD78", Slot = "14")]
		public override void OnMuscleRemoved(Muscle m)
		{
		}

		[Token(Token = "0x6000281")]
		[Address(RVA = "0x157DD00", Offset = "0x157DD00", VA = "0x157DD00")]
		protected void MoveTarget(Vector3 position)
		{
		}

		[Token(Token = "0x6000282")]
		[Address(RVA = "0x157DDB0", Offset = "0x157DDB0", VA = "0x157DDB0")]
		protected void RotateTarget(Quaternion rotation)
		{
		}

		[Token(Token = "0x6000283")]
		[Address(RVA = "0x157DDE8", Offset = "0x157DDE8", VA = "0x157DDE8", Slot = "29")]
		protected override void GroundTarget(LayerMask layers)
		{
		}

		[Token(Token = "0x6000284")]
		[Address(RVA = "0x157DDFC", Offset = "0x157DDFC", VA = "0x157DDFC")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000285")]
		[Address(RVA = "0x157DFE4", Offset = "0x157DFE4", VA = "0x157DFE4")]
		public void Boost(float immunity, float impulseMlp)
		{
		}

		[Token(Token = "0x6000286")]
		[Address(RVA = "0x157E074", Offset = "0x157E074", VA = "0x157E074")]
		public void Boost(int muscleIndex, float immunity, float impulseMlp)
		{
		}

		[Token(Token = "0x6000287")]
		[Address(RVA = "0x157E25C", Offset = "0x157E25C", VA = "0x157E25C")]
		public void Boost(int muscleIndex, float immunity, float impulseMlp, float boostParents, float boostChildren)
		{
		}

		[Token(Token = "0x6000288")]
		[Address(RVA = "0x157E4A0", Offset = "0x157E4A0", VA = "0x157E4A0")]
		public void BoostImmunity(float immunity)
		{
		}

		[Token(Token = "0x6000289")]
		[Address(RVA = "0x157E0B8", Offset = "0x157E0B8", VA = "0x157E0B8")]
		public void BoostImmunity(int muscleIndex, float immunity)
		{
		}

		[Token(Token = "0x600028A")]
		[Address(RVA = "0x157E518", Offset = "0x157E518", VA = "0x157E518")]
		public void BoostImmunity(int muscleIndex, float immunity, float boostParents, float boostChildren)
		{
		}

		[Token(Token = "0x600028B")]
		[Address(RVA = "0x157E5BC", Offset = "0x157E5BC", VA = "0x157E5BC")]
		public void BoostImpulseMlp(float impulseMlp)
		{
		}

		[Token(Token = "0x600028C")]
		[Address(RVA = "0x157E18C", Offset = "0x157E18C", VA = "0x157E18C")]
		public void BoostImpulseMlp(int muscleIndex, float impulseMlp)
		{
		}

		[Token(Token = "0x600028D")]
		[Address(RVA = "0x157E62C", Offset = "0x157E62C", VA = "0x157E62C")]
		public void BoostImpulseMlp(int muscleIndex, float impulseMlp, float boostParents, float boostChildren)
		{
		}

		[Token(Token = "0x600028E")]
		[Address(RVA = "0x157E6D0", Offset = "0x157E6D0", VA = "0x157E6D0")]
		public void Unpin()
		{
		}

		[Token(Token = "0x600028F")]
		[Address(RVA = "0x157E74C", Offset = "0x157E74C", VA = "0x157E74C", Slot = "25")]
		protected override void OnMuscleHitBehaviour(MuscleHit hit)
		{
		}

		[Token(Token = "0x6000290")]
		[Address(RVA = "0x157E924", Offset = "0x157E924", VA = "0x157E924", Slot = "26")]
		protected override void OnMuscleCollisionBehaviour(MuscleCollision m)
		{
		}

		[Token(Token = "0x6000291")]
		[Address(RVA = "0x157ED44", Offset = "0x157ED44", VA = "0x157ED44")]
		private float GetImpulse(MuscleCollision m, ref float layerThreshold)
		{
			return default(float);
		}

		[Token(Token = "0x6000292")]
		[Address(RVA = "0x157E828", Offset = "0x157E828", VA = "0x157E828")]
		private void UnPin(int muscleIndex, float unpin)
		{
		}

		[Token(Token = "0x6000293")]
		[Address(RVA = "0x157F3F0", Offset = "0x157F3F0", VA = "0x157F3F0")]
		private void UnPinMuscle(int muscleIndex, float unpin)
		{
		}

		[Token(Token = "0x6000294")]
		[Address(RVA = "0x157F208", Offset = "0x157F208", VA = "0x157F208")]
		private bool Activate(Collision collision, float impulse)
		{
			return default(bool);
		}

		[Token(Token = "0x6000295")]
		[Address(RVA = "0x157F63C", Offset = "0x157F63C", VA = "0x157F63C")]
		public bool IsProne()
		{
			return default(bool);
		}

		[Token(Token = "0x6000296")]
		[Address(RVA = "0x157E37C", Offset = "0x157E37C", VA = "0x157E37C")]
		private float GetFalloff(int i, int muscleIndex, float falloffParents, float falloffChildren)
		{
			return default(float);
		}

		[Token(Token = "0x6000297")]
		[Address(RVA = "0x157F2A0", Offset = "0x157F2A0", VA = "0x157F2A0")]
		private float GetFalloff(int i, int muscleIndex, float falloffParents, float falloffChildren, float falloffGroup)
		{
			return default(float);
		}

		[Token(Token = "0x6000298")]
		[Address(RVA = "0x157F7B4", Offset = "0x157F7B4", VA = "0x157F7B4")]
		private bool InGroup(Muscle.Group group1, Muscle.Group group2)
		{
			return default(bool);
		}

		[Token(Token = "0x6000299")]
		[Address(RVA = "0x157D43C", Offset = "0x157D43C", VA = "0x157D43C")]
		private MuscleProps GetProps(Muscle.Group group)
		{
			return default(MuscleProps);
		}

		[Token(Token = "0x600029A")]
		[Address(RVA = "0x157322C", Offset = "0x157322C", VA = "0x157322C")]
		public void SetState(State newState)
		{
		}

		[Token(Token = "0x600029B")]
		[Address(RVA = "0x157F894", Offset = "0x157F894", VA = "0x157F894")]
		public void SetColliders(bool unpinned)
		{
		}

		[Token(Token = "0x600029C")]
		[Address(RVA = "0x157C14C", Offset = "0x157C14C", VA = "0x157C14C")]
		public void SetColliders(Muscle m, bool unpinned)
		{
		}

		[Token(Token = "0x600029D")]
		[Address(RVA = "0x157F924", Offset = "0x157F924", VA = "0x157F924", Slot = "11")]
		public override void OnMuscleDisconnected(Muscle m)
		{
		}

		[Token(Token = "0x600029E")]
		[Address(RVA = "0x157F92C", Offset = "0x157F92C", VA = "0x157F92C", Slot = "12")]
		public override void OnMuscleReconnected(Muscle m)
		{
		}

		[Token(Token = "0x600029F")]
		[Address(RVA = "0x157F9CC", Offset = "0x157F9CC", VA = "0x157F9CC")]
		public BehaviourPuppet()
		{
		}
	}
	[Token(Token = "0x2000030")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA05D10", Offset = "0xA05D10")]
	public class BehaviourTemplate : BehaviourBase
	{
		[Token(Token = "0x4000183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public SubBehaviourCOM centerOfMass;

		[Token(Token = "0x4000184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public LayerMask groundLayers;

		[Token(Token = "0x4000185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public PuppetEvent onLoseBalance;

		[Token(Token = "0x4000186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public float loseBalanceAngle;

		[Token(Token = "0x60002A0")]
		[Address(RVA = "0x157FBA0", Offset = "0x157FBA0", VA = "0x157FBA0", Slot = "17")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x60002A1")]
		[Address(RVA = "0x157FBC4", Offset = "0x157FBC4", VA = "0x157FBC4", Slot = "15")]
		protected override void OnActivate()
		{
		}

		[Token(Token = "0x60002A2")]
		[Address(RVA = "0x157FBC8", Offset = "0x157FBC8", VA = "0x157FBC8", Slot = "4")]
		public override void OnReactivate()
		{
		}

		[Token(Token = "0x60002A3")]
		[Address(RVA = "0x157FBCC", Offset = "0x157FBCC", VA = "0x157FBCC", Slot = "16")]
		protected override void OnDeactivate()
		{
		}

		[Token(Token = "0x60002A4")]
		[Address(RVA = "0x157FBD0", Offset = "0x157FBD0", VA = "0x157FBD0", Slot = "18")]
		protected override void OnFixedUpdate()
		{
		}

		[Token(Token = "0x60002A5")]
		[Address(RVA = "0x157FC08", Offset = "0x157FC08", VA = "0x157FC08", Slot = "20")]
		protected override void OnLateUpdate()
		{
		}

		[Token(Token = "0x60002A6")]
		[Address(RVA = "0x157FC0C", Offset = "0x157FC0C", VA = "0x157FC0C", Slot = "25")]
		protected override void OnMuscleHitBehaviour(MuscleHit hit)
		{
		}

		[Token(Token = "0x60002A7")]
		[Address(RVA = "0x157FC14", Offset = "0x157FC14", VA = "0x157FC14", Slot = "26")]
		protected override void OnMuscleCollisionBehaviour(MuscleCollision m)
		{
		}

		[Token(Token = "0x60002A8")]
		[Address(RVA = "0x157FC1C", Offset = "0x157FC1C", VA = "0x157FC1C")]
		public BehaviourTemplate()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000031")]
	public class SubBehaviourBalancer : SubBehaviourBase
	{
		[Serializable]
		[Token(Token = "0x20004C3")]
		public class Settings
		{
			[Token(Token = "0x40018EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA20774", Offset = "0xA20774")]
			public float damperForSpring;

			[Token(Token = "0x40018F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA207AC", Offset = "0xA207AC")]
			public float maxForceMlp;

			[Token(Token = "0x40018F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA207E4", Offset = "0xA207E4")]
			public float IMlp;

			[Token(Token = "0x40018F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA2081C", Offset = "0xA2081C")]
			public float velocityF;

			[Token(Token = "0x40018F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA20854", Offset = "0xA20854")]
			public Vector3 copOffset;

			[Token(Token = "0x40018F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA2088C", Offset = "0xA2088C")]
			public float torqueMlp;

			[Token(Token = "0x40018F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA208C4", Offset = "0xA208C4")]
			public float maxTorqueMag;

			[Token(Token = "0x60025E9")]
			[Address(RVA = "0x176823C", Offset = "0x176823C", VA = "0x176823C")]
			public Settings()
			{
			}
		}

		[Token(Token = "0x4000187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0F3A4", Offset = "0xA0F3A4")]
		private ConfigurableJoint <joint>k__BackingField;

		[Token(Token = "0x4000188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0F3B4", Offset = "0xA0F3B4")]
		private Vector3 <dir>k__BackingField;

		[Token(Token = "0x4000189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0F3C4", Offset = "0xA0F3C4")]
		private Vector3 <dirVel>k__BackingField;

		[Token(Token = "0x400018A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0F3D4", Offset = "0xA0F3D4")]
		private Vector3 <cop>k__BackingField;

		[Token(Token = "0x400018B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0F3E4", Offset = "0xA0F3E4")]
		private Vector3 <com>k__BackingField;

		[Token(Token = "0x400018C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0F3F4", Offset = "0xA0F3F4")]
		private Vector3 <comV>k__BackingField;

		[Token(Token = "0x400018D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Settings settings;

		[Token(Token = "0x400018E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Rigidbody[] rigidbodies;

		[Token(Token = "0x400018F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Transform[] copPoints;

		[Token(Token = "0x4000190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PressureSensor pressureSensor;

		[Token(Token = "0x4000191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Rigidbody Ibody;

		[Token(Token = "0x4000192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 I;

		[Token(Token = "0x4000193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Quaternion toJointSpace;

		[Token(Token = "0x17000011")]
		public ConfigurableJoint joint
		{
			[Token(Token = "0x60002A9")]
			[Address(RVA = "0x1767A28", Offset = "0x1767A28", VA = "0x1767A28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA26240", Offset = "0xA26240")]
			get
			{
				return null;
			}
			[Token(Token = "0x60002AA")]
			[Address(RVA = "0x1767A30", Offset = "0x1767A30", VA = "0x1767A30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA26250", Offset = "0xA26250")]
			private set
			{
			}
		}

		[Token(Token = "0x17000012")]
		public Vector3 dir
		{
			[Token(Token = "0x60002AB")]
			[Address(RVA = "0x1767A38", Offset = "0x1767A38", VA = "0x1767A38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA26260", Offset = "0xA26260")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60002AC")]
			[Address(RVA = "0x1767A44", Offset = "0x1767A44", VA = "0x1767A44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA26270", Offset = "0xA26270")]
			private set
			{
			}
		}

		[Token(Token = "0x17000013")]
		public Vector3 dirVel
		{
			[Token(Token = "0x60002AD")]
			[Address(RVA = "0x1767A50", Offset = "0x1767A50", VA = "0x1767A50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA26280", Offset = "0xA26280")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60002AE")]
			[Address(RVA = "0x1767A5C", Offset = "0x1767A5C", VA = "0x1767A5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA26290", Offset = "0xA26290")]
			private set
			{
			}
		}

		[Token(Token = "0x17000014")]
		public Vector3 cop
		{
			[Token(Token = "0x60002AF")]
			[Address(RVA = "0x1767A68", Offset = "0x1767A68", VA = "0x1767A68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA262A0", Offset = "0xA262A0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60002B0")]
			[Address(RVA = "0x1767A74", Offset = "0x1767A74", VA = "0x1767A74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA262B0", Offset = "0xA262B0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000015")]
		public Vector3 com
		{
			[Token(Token = "0x60002B1")]
			[Address(RVA = "0x1767A80", Offset = "0x1767A80", VA = "0x1767A80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA262C0", Offset = "0xA262C0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60002B2")]
			[Address(RVA = "0x1767A8C", Offset = "0x1767A8C", VA = "0x1767A8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA262D0", Offset = "0xA262D0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000016")]
		public Vector3 comV
		{
			[Token(Token = "0x60002B3")]
			[Address(RVA = "0x1767A98", Offset = "0x1767A98", VA = "0x1767A98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA262E0", Offset = "0xA262E0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60002B4")]
			[Address(RVA = "0x1767AA4", Offset = "0x1767AA4", VA = "0x1767AA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA262F0", Offset = "0xA262F0")]
			private set
			{
			}
		}

		[Token(Token = "0x60002B5")]
		[Address(RVA = "0x1767AB0", Offset = "0x1767AB0", VA = "0x1767AB0")]
		public void Initiate(BehaviourBase behaviour, Settings settings, Rigidbody Ibody, Rigidbody[] rigidbodies, ConfigurableJoint joint, Transform[] copPoints, PressureSensor pressureSensor)
		{
		}

		[Token(Token = "0x60002B6")]
		[Address(RVA = "0x1767BB4", Offset = "0x1767BB4", VA = "0x1767BB4")]
		private void Solve()
		{
		}

		[Token(Token = "0x60002B7")]
		[Address(RVA = "0x176818C", Offset = "0x176818C", VA = "0x176818C")]
		public SubBehaviourBalancer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000032")]
	public abstract class SubBehaviourBase
	{
		[Token(Token = "0x4000194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected BehaviourBase behaviour;

		[Token(Token = "0x60002B8")]
		[Address(RVA = "0x1768258", Offset = "0x1768258", VA = "0x1768258")]
		protected static Vector2 XZ(Vector3 v)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60002B9")]
		[Address(RVA = "0x1768288", Offset = "0x1768288", VA = "0x1768288")]
		protected static Vector3 XYZ(Vector2 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60002BA")]
		[Address(RVA = "0x17682C4", Offset = "0x17682C4", VA = "0x17682C4")]
		protected static Vector3 Flatten(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60002BB")]
		[Address(RVA = "0x17682FC", Offset = "0x17682FC", VA = "0x17682FC")]
		protected static Vector3 SetY(Vector3 v, float y)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60002BC")]
		[Address(RVA = "0x1768234", Offset = "0x1768234", VA = "0x1768234")]
		protected SubBehaviourBase()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000033")]
	public class SubBehaviourCOM : SubBehaviourBase
	{
		[Serializable]
		[Token(Token = "0x20004C4")]
		public enum Mode
		{
			[Token(Token = "0x40018F7")]
			FeetCentroid,
			[Token(Token = "0x40018F8")]
			CenterOfPressure
		}

		[Token(Token = "0x4000195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Mode mode;

		[Token(Token = "0x4000196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float velocityDamper;

		[Token(Token = "0x4000197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float velocityLerpSpeed;

		[Token(Token = "0x4000198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float velocityMax;

		[Token(Token = "0x4000199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float centerOfPressureSpeed;

		[Token(Token = "0x400019A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 offset;

		[Token(Token = "0x400019B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0F404", Offset = "0xA0F404")]
		private Vector3 <position>k__BackingField;

		[Token(Token = "0x400019C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0F414", Offset = "0xA0F414")]
		private Vector3 <direction>k__BackingField;

		[Token(Token = "0x400019D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0F424", Offset = "0xA0F424")]
		private float <angle>k__BackingField;

		[Token(Token = "0x400019E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0F434", Offset = "0xA0F434")]
		private Vector3 <velocity>k__BackingField;

		[Token(Token = "0x400019F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0F444", Offset = "0xA0F444")]
		private Vector3 <centerOfPressure>k__BackingField;

		[Token(Token = "0x40001A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0F454", Offset = "0xA0F454")]
		private Quaternion <rotation>k__BackingField;

		[Token(Token = "0x40001A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0F464", Offset = "0xA0F464")]
		private Quaternion <inverseRotation>k__BackingField;

		[Token(Token = "0x40001A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0F474", Offset = "0xA0F474")]
		private bool <isGrounded>k__BackingField;

		[Token(Token = "0x40001A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0F484", Offset = "0xA0F484")]
		private float <lastGroundedTime>k__BackingField;

		[Token(Token = "0x40001A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public bool[] groundContacts;

		[Token(Token = "0x40001A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[HideInInspector]
		public Vector3[] groundContactPoints;

		[Token(Token = "0x40001A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private LayerMask groundLayers;

		[Token(Token = "0x17000017")]
		public Vector3 position
		{
			[Token(Token = "0x60002BD")]
			[Address(RVA = "0x1768334", Offset = "0x1768334", VA = "0x1768334")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA26300", Offset = "0xA26300")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60002BE")]
			[Address(RVA = "0x1768340", Offset = "0x1768340", VA = "0x1768340")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA26310", Offset = "0xA26310")]
			private set
			{
			}
		}

		[Token(Token = "0x17000018")]
		public Vector3 direction
		{
			[Token(Token = "0x60002BF")]
			[Address(RVA = "0x176834C", Offset = "0x176834C", VA = "0x176834C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA26320", Offset = "0xA26320")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60002C0")]
			[Address(RVA = "0x1768358", Offset = "0x1768358", VA = "0x1768358")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA26330", Offset = "0xA26330")]
			private set
			{
			}
		}

		[Token(Token = "0x17000019")]
		public float angle
		{
			[Token(Token = "0x60002C1")]
			[Address(RVA = "0x1768364", Offset = "0x1768364", VA = "0x1768364")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA26340", Offset = "0xA26340")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60002C2")]
			[Address(RVA = "0x176836C", Offset = "0x176836C", VA = "0x176836C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA26350", Offset = "0xA26350")]
			private set
			{
			}
		}

		[Token(Token = "0x1700001A")]
		public Vector3 velocity
		{
			[Token(Token = "0x60002C3")]
			[Address(RVA = "0x1768374", Offset = "0x1768374", VA = "0x1768374")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA26360", Offset = "0xA26360")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60002C4")]
			[Address(RVA = "0x1768380", Offset = "0x1768380", VA = "0x1768380")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA26370", Offset = "0xA26370")]
			private set
			{
			}
		}

		[Token(Token = "0x1700001B")]
		public Vector3 centerOfPressure
		{
			[Token(Token = "0x60002C5")]
			[Address(RVA = "0x176838C", Offset = "0x176838C", VA = "0x176838C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA26380", Offset = "0xA26380")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60002C6")]
			[Address(RVA = "0x1768398", Offset = "0x1768398", VA = "0x1768398")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA26390", Offset = "0xA26390")]
			private set
			{
			}
		}

		[Token(Token = "0x1700001C")]
		public Quaternion rotation
		{
			[Token(Token = "0x60002C7")]
			[Address(RVA = "0x17683A4", Offset = "0x17683A4", VA = "0x17683A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA263A0", Offset = "0xA263A0")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x60002C8")]
			[Address(RVA = "0x17683B0", Offset = "0x17683B0", VA = "0x17683B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA263B0", Offset = "0xA263B0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700001D")]
		public Quaternion inverseRotation
		{
			[Token(Token = "0x60002C9")]
			[Address(RVA = "0x17683BC", Offset = "0x17683BC", VA = "0x17683BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA263C0", Offset = "0xA263C0")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x60002CA")]
			[Address(RVA = "0x17683C8", Offset = "0x17683C8", VA = "0x17683C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA263D0", Offset = "0xA263D0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700001E")]
		public bool isGrounded
		{
			[Token(Token = "0x60002CB")]
			[Address(RVA = "0x17683D4", Offset = "0x17683D4", VA = "0x17683D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA263E0", Offset = "0xA263E0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60002CC")]
			[Address(RVA = "0x17683DC", Offset = "0x17683DC", VA = "0x17683DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA263F0", Offset = "0xA263F0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700001F")]
		public float lastGroundedTime
		{
			[Token(Token = "0x60002CD")]
			[Address(RVA = "0x17683E8", Offset = "0x17683E8", VA = "0x17683E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA26400", Offset = "0xA26400")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60002CE")]
			[Address(RVA = "0x17683F0", Offset = "0x17683F0", VA = "0x17683F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA26410", Offset = "0xA26410")]
			private set
			{
			}
		}

		[Token(Token = "0x60002CF")]
		[Address(RVA = "0x17683F8", Offset = "0x17683F8", VA = "0x17683F8")]
		public void Initiate(BehaviourBase behaviour, LayerMask groundLayers)
		{
		}

		[Token(Token = "0x60002D0")]
		[Address(RVA = "0x17686CC", Offset = "0x17686CC", VA = "0x17686CC")]
		private void OnHierarchyChanged()
		{
		}

		[Token(Token = "0x60002D1")]
		[Address(RVA = "0x176876C", Offset = "0x176876C", VA = "0x176876C")]
		private void OnPreMuscleCollision(MuscleCollision c)
		{
		}

		[Token(Token = "0x60002D2")]
		[Address(RVA = "0x1768A04", Offset = "0x1768A04", VA = "0x1768A04")]
		private void OnPreMuscleCollisionExit(MuscleCollision c)
		{
		}

		[Token(Token = "0x60002D3")]
		[Address(RVA = "0x1768B04", Offset = "0x1768B04", VA = "0x1768B04")]
		private void OnPreActivate()
		{
		}

		[Token(Token = "0x60002D4")]
		[Address(RVA = "0x1768F84", Offset = "0x1768F84", VA = "0x1768F84")]
		private void OnPreLateUpdate()
		{
		}

		[Token(Token = "0x60002D5")]
		[Address(RVA = "0x1769740", Offset = "0x1769740", VA = "0x1769740")]
		private void OnPreDeactivate()
		{
		}

		[Token(Token = "0x60002D6")]
		[Address(RVA = "0x1768864", Offset = "0x1768864", VA = "0x1768864")]
		private Vector3 GetCollisionCOP(Collision collision)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60002D7")]
		[Address(RVA = "0x1769318", Offset = "0x1769318", VA = "0x1769318")]
		private bool IsGrounded()
		{
			return default(bool);
		}

		[Token(Token = "0x60002D8")]
		[Address(RVA = "0x1768C20", Offset = "0x1768C20", VA = "0x1768C20")]
		private Vector3 GetCenterOfMass()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60002D9")]
		[Address(RVA = "0x1769500", Offset = "0x1769500", VA = "0x1769500")]
		private Vector3 GetCenterOfMassVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60002DA")]
		[Address(RVA = "0x17697B0", Offset = "0x17697B0", VA = "0x17697B0")]
		private Vector3 GetMomentum()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60002DB")]
		[Address(RVA = "0x176937C", Offset = "0x176937C", VA = "0x176937C")]
		private Vector3 GetCenterOfPressure()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60002DC")]
		[Address(RVA = "0x1768DF0", Offset = "0x1768DF0", VA = "0x1768DF0")]
		private Vector3 GetFeetCentroid()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60002DD")]
		[Address(RVA = "0x1769968", Offset = "0x1769968", VA = "0x1769968")]
		public SubBehaviourCOM()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000034")]
	public class Booster
	{
		[Token(Token = "0x40001A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0F4B4", Offset = "0xA0F4B4")]
		public bool fullBody;

		[Token(Token = "0x40001A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0F4EC", Offset = "0xA0F4EC")]
		public ConfigurableJoint[] muscles;

		[Token(Token = "0x40001A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0F524", Offset = "0xA0F524")]
		public Muscle.Group[] groups;

		[Token(Token = "0x40001AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0F55C", Offset = "0xA0F55C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0F55C", Offset = "0xA0F55C")]
		public float immunity;

		[Token(Token = "0x40001AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0F5B0", Offset = "0xA0F5B0")]
		public float impulseMlp;

		[Token(Token = "0x40001AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0F5E8", Offset = "0xA0F5E8")]
		public float boostParents;

		[Token(Token = "0x40001AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0F620", Offset = "0xA0F620")]
		public float boostChildren;

		[Token(Token = "0x40001AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0F658", Offset = "0xA0F658")]
		public float delay;

		[Token(Token = "0x60002DE")]
		[Address(RVA = "0x190EB78", Offset = "0x190EB78", VA = "0x190EB78")]
		public void Boost(BehaviourPuppet puppet)
		{
		}

		[Token(Token = "0x60002DF")]
		[Address(RVA = "0x190ED90", Offset = "0x190ED90", VA = "0x190ED90")]
		public Booster()
		{
		}
	}
	[Token(Token = "0x2000035")]
	public class JointBreakBroadcaster : MonoBehaviour
	{
		[Token(Token = "0x40001AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[HideInInspector]
		public PuppetMaster puppetMaster;

		[Token(Token = "0x40001B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[HideInInspector]
		public int muscleIndex;

		[Token(Token = "0x60002E0")]
		[Address(RVA = "0x190EE78", Offset = "0x190EE78", VA = "0x190EE78")]
		private void OnJointBreak()
		{
		}

		[Token(Token = "0x60002E1")]
		[Address(RVA = "0x190FC74", Offset = "0x190FC74", VA = "0x190FC74")]
		public JointBreakBroadcaster()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000036")]
	public class Muscle
	{
		[Serializable]
		[Token(Token = "0x20004C5")]
		public enum Group
		{
			[Token(Token = "0x40018FA")]
			Hips,
			[Token(Token = "0x40018FB")]
			Spine,
			[Token(Token = "0x40018FC")]
			Head,
			[Token(Token = "0x40018FD")]
			Arm,
			[Token(Token = "0x40018FE")]
			Hand,
			[Token(Token = "0x40018FF")]
			Leg,
			[Token(Token = "0x4001900")]
			Foot,
			[Token(Token = "0x4001901")]
			Tail,
			[Token(Token = "0x4001902")]
			Prop
		}

		[Serializable]
		[Token(Token = "0x20004C6")]
		public class InternalCollisionIgnoreSettings
		{
			[Token(Token = "0x4001903")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA208FC", Offset = "0xA208FC")]
			public bool ignoreAll;

			[Token(Token = "0x4001904")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA20934", Offset = "0xA20934")]
			public ConfigurableJoint[] muscles;

			[Token(Token = "0x4001905")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA2096C", Offset = "0xA2096C")]
			public Group[] groups;

			[Token(Token = "0x60025EA")]
			[Address(RVA = "0x1915C48", Offset = "0x1915C48", VA = "0x1915C48")]
			public InternalCollisionIgnoreSettings()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004C7")]
		public class Props
		{
			[Token(Token = "0x4001906")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA209A4", Offset = "0xA209A4")]
			public Group group;

			[Token(Token = "0x4001907")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA209DC", Offset = "0xA209DC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA209DC", Offset = "0xA209DC")]
			public float mappingWeight;

			[Token(Token = "0x4001908")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA20A30", Offset = "0xA20A30")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA20A30", Offset = "0xA20A30")]
			public float pinWeight;

			[Token(Token = "0x4001909")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA20A84", Offset = "0xA20A84")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA20A84", Offset = "0xA20A84")]
			public float muscleWeight;

			[Token(Token = "0x400190A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA20AD8", Offset = "0xA20AD8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA20AD8", Offset = "0xA20AD8")]
			public float muscleDamper;

			[Token(Token = "0x400190B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA20B2C", Offset = "0xA20B2C")]
			public bool mapPosition;

			[Token(Token = "0x400190C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA20B64", Offset = "0xA20B64")]
			public InternalCollisionIgnoreSettings internalCollisionIgnores;

			[Token(Token = "0x400190D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA20B9C", Offset = "0xA20B9C")]
			public Transform[] animatedTargetChildren;

			[Token(Token = "0x60025EB")]
			[Address(RVA = "0x1915BAC", Offset = "0x1915BAC", VA = "0x1915BAC")]
			public Props()
			{
			}

			[Token(Token = "0x60025EC")]
			[Address(RVA = "0x1915CC0", Offset = "0x1915CC0", VA = "0x1915CC0")]
			public Props(float pinWeight, float muscleWeight, float mappingWeight, float muscleDamper, bool mapPosition, Group group = Group.Hips)
			{
			}

			[Token(Token = "0x60025ED")]
			[Address(RVA = "0x19142F8", Offset = "0x19142F8", VA = "0x19142F8")]
			public void Clamp()
			{
			}
		}

		[Token(Token = "0x20004C8")]
		public struct State
		{
			[Token(Token = "0x400190E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float mappingWeightMlp;

			[Token(Token = "0x400190F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float pinWeightMlp;

			[Token(Token = "0x4001910")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float muscleWeightMlp;

			[Token(Token = "0x4001911")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float maxForceMlp;

			[Token(Token = "0x4001912")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float muscleDamperMlp;

			[Token(Token = "0x4001913")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float muscleDamperAdd;

			[Token(Token = "0x4001914")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float immunity;

			[Token(Token = "0x4001915")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float impulseMlp;

			[Token(Token = "0x4001916")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 velocity;

			[Token(Token = "0x4001917")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Vector3 angularVelocity;

			[Token(Token = "0x4001918")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool isDisconnected;

			[Token(Token = "0x4001919")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
			public bool resetFlag;

			[Token(Token = "0x17000462")]
			public static State Default
			{
				[Token(Token = "0x60025EE")]
				[Address(RVA = "0x1910E7C", Offset = "0x1910E7C", VA = "0x1910E7C")]
				get
				{
					return default(State);
				}
			}

			[Token(Token = "0x60025EF")]
			[Address(RVA = "0xBA1CA8", Offset = "0xBA1CA8", VA = "0xBA1CA8")]
			public void Clamp()
			{
			}
		}

		[Token(Token = "0x20004C9")]
		public class TargetChild
		{
			[Token(Token = "0x400191A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform t;

			[Token(Token = "0x400191B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 defaultLocalPosition;

			[Token(Token = "0x400191C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Quaternion defaultLocalRotation;

			[Token(Token = "0x60025F0")]
			[Address(RVA = "0x1912B28", Offset = "0x1912B28", VA = "0x1912B28")]
			public TargetChild(Transform t)
			{
			}

			[Token(Token = "0x60025F1")]
			[Address(RVA = "0x191527C", Offset = "0x191527C", VA = "0x191527C")]
			public void Map()
			{
			}
		}

		[Token(Token = "0x40001B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public string name;

		[Token(Token = "0x40001B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ConfigurableJoint joint;

		[Token(Token = "0x40001B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform target;

		[Token(Token = "0x40001B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Props props;

		[Token(Token = "0x40001B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public State state;

		[Token(Token = "0x40001B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public int[] parentIndexes;

		[Token(Token = "0x40001B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public int[] childIndexes;

		[Token(Token = "0x40001B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public bool[] childFlags;

		[Token(Token = "0x40001B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[HideInInspector]
		public int[] kinshipDegrees;

		[Token(Token = "0x40001BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[HideInInspector]
		public MuscleCollisionBroadcaster broadcaster;

		[Token(Token = "0x40001BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public JointBreakBroadcaster jointBreakBroadcaster;

		[Token(Token = "0x40001BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[HideInInspector]
		public Vector3 positionOffset;

		[Token(Token = "0x40001BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0F780", Offset = "0xA0F780")]
		private Transform <transform>k__BackingField;

		[Token(Token = "0x40001BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0F790", Offset = "0xA0F790")]
		private Rigidbody <rigidbody>k__BackingField;

		[Token(Token = "0x40001BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0F7A0", Offset = "0xA0F7A0")]
		private Transform <connectedBodyTarget>k__BackingField;

		[Token(Token = "0x40001C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0F7B0", Offset = "0xA0F7B0")]
		private Vector3 <targetAnimatedPosition>k__BackingField;

		[Token(Token = "0x40001C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0F7C0", Offset = "0xA0F7C0")]
		private Quaternion <targetAnimatedWorldRotation>k__BackingField;

		[Token(Token = "0x40001C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0F7D0", Offset = "0xA0F7D0")]
		private Vector3 <targetVelocity>k__BackingField;

		[Token(Token = "0x40001C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0F7E0", Offset = "0xA0F7E0")]
		private Rigidbody <additionalRigidbody>k__BackingField;

		[Token(Token = "0x40001C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		[HideInInspector]
		public ConfigurableJoint additionalPin;

		[Token(Token = "0x40001C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		[HideInInspector]
		public Transform additionalPinTarget;

		[Token(Token = "0x40001C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		[HideInInspector]
		public float additionalPinWeight;

		[Token(Token = "0x40001C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		[HideInInspector]
		public Vector3 mappedVelocity;

		[Token(Token = "0x40001C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[HideInInspector]
		public Vector3 mappedAngularVelocity;

		[Token(Token = "0x40001C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[HideInInspector]
		public bool isPropMuscle;

		[Token(Token = "0x40001CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		[HideInInspector]
		public int index;

		[Token(Token = "0x40001CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0F900", Offset = "0xA0F900")]
		private Quaternion <targetRotationRelative>k__BackingField;

		[Token(Token = "0x40001CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0F910", Offset = "0xA0F910")]
		private Rigidbody <rebuildConnectedBody>k__BackingField;

		[Token(Token = "0x40001CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0F920", Offset = "0xA0F920")]
		private Transform <rebuildTargetParent>k__BackingField;

		[Token(Token = "0x40001CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0F930", Offset = "0xA0F930")]
		private Vector3 <defaultTargetPosRelToMuscle>k__BackingField;

		[Token(Token = "0x40001CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0F940", Offset = "0xA0F940")]
		private Quaternion <defaultTargetRotRelToMuscle>k__BackingField;

		[Token(Token = "0x40001D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0F950", Offset = "0xA0F950")]
		private Quaternion <defaultMuscleRotRelToTarget>k__BackingField;

		[Token(Token = "0x40001D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private Transform rebuildParent;

		[Token(Token = "0x40001D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private Vector3 rebuildPosition;

		[Token(Token = "0x40001D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		private Quaternion rebuildRotation;

		[Token(Token = "0x40001D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		private Vector3 rebuildTargetPosition;

		[Token(Token = "0x40001D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private Quaternion rebuildTargetRotation;

		[Token(Token = "0x40001D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private ConfigurableJointMotion rebuildAngularXMotion;

		[Token(Token = "0x40001D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		private ConfigurableJointMotion rebuildAngularYMotion;

		[Token(Token = "0x40001D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private ConfigurableJointMotion rebuildAngularZMotion;

		[Token(Token = "0x40001D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		[HideInInspector]
		public Vector3 targetMappedPosition;

		[Token(Token = "0x40001DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[HideInInspector]
		public Quaternion targetMappedRotation;

		[Token(Token = "0x40001DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[HideInInspector]
		public Vector3 targetSampledPosition;

		[Token(Token = "0x40001DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		[HideInInspector]
		public Quaternion targetSampledRotation;

		[Token(Token = "0x40001DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		private JointDrive slerpDrive;

		[Token(Token = "0x40001DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private float lastJointDriveRotationWeight;

		[Token(Token = "0x40001DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		private float lastRotationDamper;

		[Token(Token = "0x40001E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private Vector3 defaultPosition;

		[Token(Token = "0x40001E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
		private Vector3 defaultTargetLocalPosition;

		[Token(Token = "0x40001E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private Vector3 lastMappedPosition;

		[Token(Token = "0x40001E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
		private Quaternion defaultLocalRotation;

		[Token(Token = "0x40001E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
		private Quaternion localRotationConvert;

		[Token(Token = "0x40001E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
		private Quaternion toParentSpace;

		[Token(Token = "0x40001E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
		private Quaternion toJointSpaceInverse;

		[Token(Token = "0x40001E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
		private Quaternion toJointSpaceDefault;

		[Token(Token = "0x40001E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
		private Quaternion targetAnimatedRotation;

		[Token(Token = "0x40001E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
		private Quaternion defaultRotation;

		[Token(Token = "0x40001EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
		private Quaternion rotationRelativeToTarget;

		[Token(Token = "0x40001EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
		private Quaternion defaultTargetLocalRotation;

		[Token(Token = "0x40001EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2CC")]
		private Quaternion lastMappedRotation;

		[Token(Token = "0x40001ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		private Transform targetParent;

		[Token(Token = "0x40001EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		private Transform connectedBodyTransform;

		[Token(Token = "0x40001EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		private ConfigurableJointMotion angularXMotionDefault;

		[Token(Token = "0x40001F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F4")]
		private ConfigurableJointMotion angularYMotionDefault;

		[Token(Token = "0x40001F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
		private ConfigurableJointMotion angularZMotionDefault;

		[Token(Token = "0x40001F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2FC")]
		private bool directTargetParent;

		[Token(Token = "0x40001F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2FD")]
		private bool initiated;

		[Token(Token = "0x40001F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		private Collider[] _colliders;

		[Token(Token = "0x40001F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		private float lastReadTime;

		[Token(Token = "0x40001F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30C")]
		private float lastWriteTime;

		[Token(Token = "0x40001F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		private bool[] disabledColliders;

		[Token(Token = "0x40001F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		private TargetChild[] targetChildren;

		[Token(Token = "0x40001F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		private Vector3 additionalTargetVelocity;

		[Token(Token = "0x40001FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32C")]
		private Vector3 targetAnimatedCenterOfMass;

		[Token(Token = "0x40001FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
		private Vector3 additionalPinTargetAnimatedCenterOfMass;

		[Token(Token = "0x40001FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x344")]
		private Quaternion defaultTargetRotRelToMuscleInverse;

		[Token(Token = "0x17000020")]
		public Transform transform
		{
			[Token(Token = "0x60002E2")]
			[Address(RVA = "0x1910A0C", Offset = "0x1910A0C", VA = "0x1910A0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA26420", Offset = "0xA26420")]
			get
			{
				return null;
			}
			[Token(Token = "0x60002E3")]
			[Address(RVA = "0x1910A14", Offset = "0x1910A14", VA = "0x1910A14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA26430", Offset = "0xA26430")]
			private set
			{
			}
		}

		[Token(Token = "0x17000021")]
		public Rigidbody rigidbody
		{
			[Token(Token = "0x60002E4")]
			[Address(RVA = "0x1910A1C", Offset = "0x1910A1C", VA = "0x1910A1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA26440", Offset = "0xA26440")]
			get
			{
				return null;
			}
			[Token(Token = "0x60002E5")]
			[Address(RVA = "0x1910A24", Offset = "0x1910A24", VA = "0x1910A24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA26450", Offset = "0xA26450")]
			private set
			{
			}
		}

		[Token(Token = "0x17000022")]
		public Transform connectedBodyTarget
		{
			[Token(Token = "0x60002E6")]
			[Address(RVA = "0x1910A2C", Offset = "0x1910A2C", VA = "0x1910A2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA26460", Offset = "0xA26460")]
			get
			{
				return null;
			}
			[Token(Token = "0x60002E7")]
			[Address(RVA = "0x1910A34", Offset = "0x1910A34", VA = "0x1910A34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA26470", Offset = "0xA26470")]
			private set
			{
			}
		}

		[Token(Token = "0x17000023")]
		public Vector3 targetAnimatedPosition
		{
			[Token(Token = "0x60002E8")]
			[Address(RVA = "0x1910A3C", Offset = "0x1910A3C", VA = "0x1910A3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA26480", Offset = "0xA26480")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60002E9")]
			[Address(RVA = "0x1910A48", Offset = "0x1910A48", VA = "0x1910A48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA26490", Offset = "0xA26490")]
			private set
			{
			}
		}

		[Token(Token = "0x17000024")]
		public Quaternion targetAnimatedWorldRotation
		{
			[Token(Token = "0x60002EA")]
			[Address(RVA = "0x1910A54", Offset = "0x1910A54", VA = "0x1910A54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA264A0", Offset = "0xA264A0")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x60002EB")]
			[Address(RVA = "0x1910A60", Offset = "0x1910A60", VA = "0x1910A60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA264B0", Offset = "0xA264B0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000025")]
		public Collider[] colliders
		{
			[Token(Token = "0x60002EC")]
			[Address(RVA = "0x1910A6C", Offset = "0x1910A6C", VA = "0x1910A6C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60002ED")]
			[Address(RVA = "0x1910A74", Offset = "0x1910A74", VA = "0x1910A74")]
			set
			{
			}
		}

		[Token(Token = "0x17000026")]
		public Vector3 targetVelocity
		{
			[Token(Token = "0x60002EE")]
			[Address(RVA = "0x1910A7C", Offset = "0x1910A7C", VA = "0x1910A7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA264C0", Offset = "0xA264C0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60002EF")]
			[Address(RVA = "0x1910A88", Offset = "0x1910A88", VA = "0x1910A88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA264D0", Offset = "0xA264D0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000027")]
		public Rigidbody additionalRigidbody
		{
			[Token(Token = "0x60002F0")]
			[Address(RVA = "0x1910A94", Offset = "0x1910A94", VA = "0x1910A94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA264E0", Offset = "0xA264E0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60002F1")]
			[Address(RVA = "0x1910A9C", Offset = "0x1910A9C", VA = "0x1910A9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA264F0", Offset = "0xA264F0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000028")]
		public Quaternion targetRotationRelative
		{
			[Token(Token = "0x60002F2")]
			[Address(RVA = "0x1910AA4", Offset = "0x1910AA4", VA = "0x1910AA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA26500", Offset = "0xA26500")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x60002F3")]
			[Address(RVA = "0x1910AB8", Offset = "0x1910AB8", VA = "0x1910AB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA26510", Offset = "0xA26510")]
			private set
			{
			}
		}

		[Token(Token = "0x17000029")]
		public Rigidbody rebuildConnectedBody
		{
			[Token(Token = "0x60002F5")]
			[Address(RVA = "0x1910CB0", Offset = "0x1910CB0", VA = "0x1910CB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA26520", Offset = "0xA26520")]
			get
			{
				return null;
			}
			[Token(Token = "0x60002F6")]
			[Address(RVA = "0x1910CB8", Offset = "0x1910CB8", VA = "0x1910CB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA26530", Offset = "0xA26530")]
			private set
			{
			}
		}

		[Token(Token = "0x1700002A")]
		public Transform rebuildTargetParent
		{
			[Token(Token = "0x60002F7")]
			[Address(RVA = "0x1910CC0", Offset = "0x1910CC0", VA = "0x1910CC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA26540", Offset = "0xA26540")]
			get
			{
				return null;
			}
			[Token(Token = "0x60002F8")]
			[Address(RVA = "0x1910CC8", Offset = "0x1910CC8", VA = "0x1910CC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA26550", Offset = "0xA26550")]
			private set
			{
			}
		}

		[Token(Token = "0x1700002B")]
		public Vector3 defaultTargetPosRelToMuscle
		{
			[Token(Token = "0x60002F9")]
			[Address(RVA = "0x1910CD0", Offset = "0x1910CD0", VA = "0x1910CD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA26560", Offset = "0xA26560")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60002FA")]
			[Address(RVA = "0x1910CE0", Offset = "0x1910CE0", VA = "0x1910CE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA26570", Offset = "0xA26570")]
			private set
			{
			}
		}

		[Token(Token = "0x1700002C")]
		public Quaternion defaultTargetRotRelToMuscle
		{
			[Token(Token = "0x60002FB")]
			[Address(RVA = "0x1910CF0", Offset = "0x1910CF0", VA = "0x1910CF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA26580", Offset = "0xA26580")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x60002FC")]
			[Address(RVA = "0x1910D04", Offset = "0x1910D04", VA = "0x1910D04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA26590", Offset = "0xA26590")]
			private set
			{
			}
		}

		[Token(Token = "0x1700002D")]
		public Quaternion defaultMuscleRotRelToTarget
		{
			[Token(Token = "0x60002FD")]
			[Address(RVA = "0x1910D18", Offset = "0x1910D18", VA = "0x1910D18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA265A0", Offset = "0xA265A0")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x60002FE")]
			[Address(RVA = "0x1910D2C", Offset = "0x1910D2C", VA = "0x1910D2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA265B0", Offset = "0xA265B0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700002E")]
		private Quaternion localRotation
		{
			[Token(Token = "0x600031D")]
			[Address(RVA = "0x19123BC", Offset = "0x19123BC", VA = "0x19123BC")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x1700002F")]
		private Quaternion parentRotation
		{
			[Token(Token = "0x600031E")]
			[Address(RVA = "0x191255C", Offset = "0x191255C", VA = "0x191255C")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x17000030")]
		private Quaternion targetParentRotation
		{
			[Token(Token = "0x600031F")]
			[Address(RVA = "0x19124A4", Offset = "0x19124A4", VA = "0x19124A4")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x17000031")]
		private Quaternion targetLocalRotation
		{
			[Token(Token = "0x6000320")]
			[Address(RVA = "0x19126AC", Offset = "0x19126AC", VA = "0x19126AC")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x60002F4")]
		[Address(RVA = "0x1910ACC", Offset = "0x1910ACC", VA = "0x1910ACC")]
		public bool IsValid(bool log)
		{
			return default(bool);
		}

		[Token(Token = "0x60002FF")]
		[Address(RVA = "0x1910D40", Offset = "0x1910D40", VA = "0x1910D40")]
		public void Rebuild()
		{
		}

		[Token(Token = "0x6000300")]
		[Address(RVA = "0x1910E9C", Offset = "0x1910E9C", VA = "0x1910E9C", Slot = "4")]
		public virtual void Initiate(Muscle[] colleagues)
		{
		}

		[Token(Token = "0x6000301")]
		[Address(RVA = "0x1912024", Offset = "0x1912024", VA = "0x1912024")]
		public void InitiateAdditionalPin()
		{
		}

		[Token(Token = "0x6000302")]
		[Address(RVA = "0x1912244", Offset = "0x1912244", VA = "0x1912244")]
		public void UpdateColliders()
		{
		}

		[Token(Token = "0x6000303")]
		[Address(RVA = "0x1912F38", Offset = "0x1912F38", VA = "0x1912F38")]
		public void DisableColliders()
		{
		}

		[Token(Token = "0x6000304")]
		[Address(RVA = "0x1913040", Offset = "0x1913040", VA = "0x1913040")]
		public void EnableColliders()
		{
		}

		[Token(Token = "0x6000305")]
		[Address(RVA = "0x1912BE4", Offset = "0x1912BE4", VA = "0x1912BE4")]
		private void AddColliders(Transform t, ref Collider[] C, bool includeMeshColliders)
		{
		}

		[Token(Token = "0x6000306")]
		[Address(RVA = "0x1912E30", Offset = "0x1912E30", VA = "0x1912E30")]
		private void AddCompoundColliders(Transform t, ref Collider[] colliders)
		{
		}

		[Token(Token = "0x6000307")]
		[Address(RVA = "0x19130EC", Offset = "0x19130EC", VA = "0x19130EC")]
		public void IgnoreInternalCollisions(Muscle m)
		{
		}

		[Token(Token = "0x6000308")]
		[Address(RVA = "0x19132C4", Offset = "0x19132C4", VA = "0x19132C4")]
		public void ResetInternalCollisions(Muscle m, bool useInternalCollisionIgnores)
		{
		}

		[Token(Token = "0x6000309")]
		[Address(RVA = "0x19134C4", Offset = "0x19134C4", VA = "0x19134C4")]
		private bool ForceIgnore(Muscle otherMuscle)
		{
			return default(bool);
		}

		[Token(Token = "0x600030A")]
		[Address(RVA = "0x1913730", Offset = "0x1913730", VA = "0x1913730")]
		public void IgnoreAngularLimits(bool ignore)
		{
		}

		[Token(Token = "0x600030B")]
		[Address(RVA = "0x19137D0", Offset = "0x19137D0", VA = "0x19137D0")]
		public void FixTargetTransforms()
		{
		}

		[Token(Token = "0x600030C")]
		[Address(RVA = "0x191383C", Offset = "0x191383C", VA = "0x191383C")]
		public void Reset()
		{
		}

		[Token(Token = "0x600030D")]
		[Address(RVA = "0x1913A68", Offset = "0x1913A68", VA = "0x1913A68")]
		public void MoveToTarget()
		{
		}

		[Token(Token = "0x600030E")]
		[Address(RVA = "0x1912170", Offset = "0x1912170", VA = "0x1912170")]
		public void SetKinematic(bool to)
		{
		}

		[Token(Token = "0x600030F")]
		[Address(RVA = "0x19127CC", Offset = "0x19127CC", VA = "0x19127CC")]
		public void Read()
		{
		}

		[Token(Token = "0x6000310")]
		[Address(RVA = "0x1913C8C", Offset = "0x1913C8C", VA = "0x1913C8C")]
		public void ClearVelocities()
		{
		}

		[Token(Token = "0x6000311")]
		[Address(RVA = "0x1913E38", Offset = "0x1913E38", VA = "0x1913E38")]
		public void UpdateAnchor(bool supportTranslationAnimation)
		{
		}

		[Token(Token = "0x6000312")]
		[Address(RVA = "0x19141D8", Offset = "0x19141D8", VA = "0x19141D8", Slot = "5")]
		public virtual void Update(float pinWeightMaster, float muscleWeightMaster, float muscleSpring, float muscleDamper, float pinPow, float pinDistanceFalloff, bool rotationTargetChanged, bool angularPinning, float deltaTime)
		{
		}

		[Token(Token = "0x6000313")]
		[Address(RVA = "0x1914A7C", Offset = "0x1914A7C", VA = "0x1914A7C")]
		public void StoreTargetMappedPosition()
		{
		}

		[Token(Token = "0x6000314")]
		[Address(RVA = "0x1914AB8", Offset = "0x1914AB8", VA = "0x1914AB8")]
		public void StoreTargetMappedRotation()
		{
		}

		[Token(Token = "0x6000315")]
		[Address(RVA = "0x1914AF8", Offset = "0x1914AF8", VA = "0x1914AF8")]
		public void Map(float mappingWeightMaster)
		{
		}

		[Token(Token = "0x6000316")]
		[Address(RVA = "0x1914EFC", Offset = "0x1914EFC", VA = "0x1914EFC")]
		public void ResetTargetLocalPosition()
		{
		}

		[Token(Token = "0x6000317")]
		[Address(RVA = "0x1914F28", Offset = "0x1914F28", VA = "0x1914F28")]
		public void CalculateMappedVelocity()
		{
		}

		[Token(Token = "0x6000318")]
		[Address(RVA = "0x1915100", Offset = "0x1915100", VA = "0x1915100")]
		public void MapDisconnected()
		{
		}

		[Token(Token = "0x6000319")]
		[Address(RVA = "0x19144C4", Offset = "0x19144C4", VA = "0x19144C4")]
		private void Pin(float pinWeightMaster, float pinPow, float pinDistanceFalloff, bool angularPinning, float deltaTime)
		{
		}

		[Token(Token = "0x600031A")]
		[Address(RVA = "0x19152C8", Offset = "0x19152C8", VA = "0x19152C8")]
		private void Pin(Rigidbody r, Vector3 posOffset, Vector3 targetVel, float w, float pinDistanceFalloff, float deltaTime)
		{
		}

		[Token(Token = "0x600031B")]
		[Address(RVA = "0x1914898", Offset = "0x1914898", VA = "0x1914898")]
		private void MuscleRotation(float muscleWeightMaster, float muscleSpring, float muscleDamper)
		{
		}

		[Token(Token = "0x600031C")]
		[Address(RVA = "0x191585C", Offset = "0x191585C", VA = "0x191585C")]
		public void SetMuscleRotation(float muscleWeightMaster, float muscleSpring, float muscleDamper)
		{
		}

		[Token(Token = "0x6000321")]
		[Address(RVA = "0x1915768", Offset = "0x1915768", VA = "0x1915768")]
		private Quaternion LocalToJointSpace(Quaternion localRotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000322")]
		[Address(RVA = "0x19140B8", Offset = "0x19140B8", VA = "0x19140B8")]
		private static Vector3 InverseTransformPointUnscaled(Vector3 position, Quaternion rotation, Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000323")]
		[Address(RVA = "0x19159EC", Offset = "0x19159EC", VA = "0x19159EC")]
		public Muscle()
		{
		}
	}
	[Token(Token = "0x2000037")]
	public struct MuscleCollision
	{
		[Token(Token = "0x40001FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int muscleIndex;

		[Token(Token = "0x40001FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Collision collision;

		[Token(Token = "0x40001FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool isStay;

		[Token(Token = "0x6000324")]
		[Address(RVA = "0xBA1CEC", Offset = "0xBA1CEC", VA = "0xBA1CEC")]
		public MuscleCollision(int muscleIndex, Collision collision, bool isStay = false)
		{
		}
	}
	[Token(Token = "0x2000038")]
	public struct MuscleHit
	{
		[Token(Token = "0x4000200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int muscleIndex;

		[Token(Token = "0x4000201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float unPin;

		[Token(Token = "0x4000202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector3 force;

		[Token(Token = "0x4000203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 position;

		[Token(Token = "0x6000325")]
		[Address(RVA = "0xBA1D00", Offset = "0xBA1D00", VA = "0xBA1D00")]
		public MuscleHit(int muscleIndex, float unPin, Vector3 force, Vector3 position)
		{
		}
	}
	[Token(Token = "0x2000039")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA05D48", Offset = "0xA05D48")]
	public class MuscleCollisionBroadcaster : MonoBehaviour
	{
		[Token(Token = "0x4000204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[HideInInspector]
		public PuppetMaster puppetMaster;

		[Token(Token = "0x4000205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[HideInInspector]
		public int muscleIndex;

		[Token(Token = "0x4000206")]
		private const string onMuscleHit = "OnMuscleHit";

		[Token(Token = "0x4000207")]
		private const string onMuscleCollision = "OnMuscleCollision";

		[Token(Token = "0x4000208")]
		private const string onMuscleCollisionExit = "OnMuscleCollisionExit";

		[Token(Token = "0x4000209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private MuscleCollisionBroadcaster otherBroadcaster;

		[Token(Token = "0x6000326")]
		[Address(RVA = "0x1915DA0", Offset = "0x1915DA0", VA = "0x1915DA0")]
		public void Hit(float unPin, Vector3 force, Vector3 position)
		{
		}

		[Token(Token = "0x6000327")]
		[Address(RVA = "0x1915EA4", Offset = "0x1915EA4", VA = "0x1915EA4")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6000328")]
		[Address(RVA = "0x1916088", Offset = "0x1916088", VA = "0x1916088")]
		private void OnCollisionStay(Collision collision)
		{
		}

		[Token(Token = "0x6000329")]
		[Address(RVA = "0x1916300", Offset = "0x1916300", VA = "0x1916300")]
		private void OnCollisionExit(Collision collision)
		{
		}

		[Token(Token = "0x600032A")]
		[Address(RVA = "0x1916574", Offset = "0x1916574", VA = "0x1916574")]
		public MuscleCollisionBroadcaster()
		{
		}
	}
	[Token(Token = "0x200003A")]
	public static class PhysXTools
	{
		[Token(Token = "0x600032B")]
		[Address(RVA = "0x191657C", Offset = "0x191657C", VA = "0x191657C")]
		public static void Predict(Rigidbody r, int steps, out Vector3 position, out Quaternion rotation)
		{
		}

		[Token(Token = "0x600032C")]
		[Address(RVA = "0x1916618", Offset = "0x1916618", VA = "0x1916618")]
		public static void Predict(Rigidbody r, int steps, out Vector3 position, out Quaternion rotation, Vector3 gravity, float drag, float angularDrag)
		{
		}

		[Token(Token = "0x600032D")]
		[Address(RVA = "0x1916718", Offset = "0x1916718", VA = "0x1916718")]
		public static void Predict(ref Vector3 position, ref Quaternion rotation, ref Vector3 velocity, ref Vector3 angularVelocity, Vector3 gravity, float drag, float angularDrag)
		{
		}

		[Token(Token = "0x600032E")]
		[Address(RVA = "0x1916A08", Offset = "0x1916A08", VA = "0x1916A08")]
		public static Vector3 GetCenterOfMass(PuppetMaster puppet)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600032F")]
		[Address(RVA = "0x1916C44", Offset = "0x1916C44", VA = "0x1916C44")]
		public static Vector3 GetCenterOfMass(Rigidbody[] rigidbodies)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000330")]
		[Address(RVA = "0x1916E3C", Offset = "0x1916E3C", VA = "0x1916E3C")]
		public static Vector3 GetCenterOfMassVelocity(Rigidbody[] rigidbodies)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000331")]
		[Address(RVA = "0x1917034", Offset = "0x1917034", VA = "0x1917034")]
		public static void DivByInertia(ref Vector3 v, Quaternion rotation, Vector3 inertiaTensor)
		{
		}

		[Token(Token = "0x6000332")]
		[Address(RVA = "0x1917174", Offset = "0x1917174", VA = "0x1917174")]
		public static void ScaleByInertia(ref Vector3 v, Quaternion rotation, Vector3 inertiaTensor)
		{
		}

		[Token(Token = "0x6000333")]
		[Address(RVA = "0x19172B0", Offset = "0x19172B0", VA = "0x19172B0")]
		public static Vector3 GetFromToAcceleration(Vector3 fromV, Vector3 toV)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000334")]
		[Address(RVA = "0x19154DC", Offset = "0x19154DC", VA = "0x19154DC")]
		public static Vector3 GetAngularAcceleration(Quaternion fromR, Quaternion toR)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000335")]
		[Address(RVA = "0x1917414", Offset = "0x1917414", VA = "0x1917414")]
		public static void AddFromToTorque(Rigidbody r, Quaternion toR, ForceMode forceMode)
		{
		}

		[Token(Token = "0x6000336")]
		[Address(RVA = "0x19176C4", Offset = "0x19176C4", VA = "0x19176C4")]
		public static void AddFromToTorque(Rigidbody r, Vector3 fromV, Vector3 toV, ForceMode forceMode)
		{
		}

		[Token(Token = "0x6000337")]
		[Address(RVA = "0x1917978", Offset = "0x1917978", VA = "0x1917978")]
		public static void AddFromToForce(Rigidbody r, Vector3 fromV, Vector3 toV, ForceMode forceMode)
		{
		}

		[Token(Token = "0x6000338")]
		[Address(RVA = "0x1917BE4", Offset = "0x1917BE4", VA = "0x1917BE4")]
		public static Vector3 GetLinearAcceleration(Vector3 fromPoint, Vector3 toPoint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000339")]
		[Address(RVA = "0x1917CB8", Offset = "0x1917CB8", VA = "0x1917CB8")]
		public static Quaternion ToJointSpace(ConfigurableJoint joint)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600033A")]
		[Address(RVA = "0x1912358", Offset = "0x1912358", VA = "0x1912358")]
		public static Vector3 CalculateInertiaTensorCuboid(Vector3 size, float mass)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600033B")]
		[Address(RVA = "0x1917134", Offset = "0x1917134", VA = "0x1917134")]
		public static Vector3 Div(Vector3 v, Vector3 v2)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x200003B")]
	public class PressureSensor : MonoBehaviour
	{
		[Token(Token = "0x400020A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool visualize;

		[Token(Token = "0x400020B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public LayerMask layers;

		[Token(Token = "0x400020C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0FA10", Offset = "0xA0FA10")]
		private Vector3 <center>k__BackingField;

		[Token(Token = "0x400020D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0FA20", Offset = "0xA0FA20")]
		private bool <inContact>k__BackingField;

		[Token(Token = "0x400020E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0FA30", Offset = "0xA0FA30")]
		private Vector3 <bottom>k__BackingField;

		[Token(Token = "0x400020F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0FA40", Offset = "0xA0FA40")]
		private Rigidbody <r>k__BackingField;

		[Token(Token = "0x4000210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool fixedFrame;

		[Token(Token = "0x4000211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 P;

		[Token(Token = "0x4000212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int count;

		[Token(Token = "0x17000032")]
		public Vector3 center
		{
			[Token(Token = "0x600033C")]
			[Address(RVA = "0x1917E08", Offset = "0x1917E08", VA = "0x1917E08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA265C0", Offset = "0xA265C0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600033D")]
			[Address(RVA = "0x1917E14", Offset = "0x1917E14", VA = "0x1917E14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA265D0", Offset = "0xA265D0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000033")]
		public bool inContact
		{
			[Token(Token = "0x600033E")]
			[Address(RVA = "0x1917E20", Offset = "0x1917E20", VA = "0x1917E20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA265E0", Offset = "0xA265E0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600033F")]
			[Address(RVA = "0x1917E28", Offset = "0x1917E28", VA = "0x1917E28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA265F0", Offset = "0xA265F0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000034")]
		public Vector3 bottom
		{
			[Token(Token = "0x6000340")]
			[Address(RVA = "0x1917E34", Offset = "0x1917E34", VA = "0x1917E34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA26600", Offset = "0xA26600")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000341")]
			[Address(RVA = "0x1917E40", Offset = "0x1917E40", VA = "0x1917E40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA26610", Offset = "0xA26610")]
			private set
			{
			}
		}

		[Token(Token = "0x17000035")]
		public Rigidbody r
		{
			[Token(Token = "0x6000342")]
			[Address(RVA = "0x1917E4C", Offset = "0x1917E4C", VA = "0x1917E4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA26620", Offset = "0xA26620")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000343")]
			[Address(RVA = "0x1917E54", Offset = "0x1917E54", VA = "0x1917E54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA26630", Offset = "0xA26630")]
			private set
			{
			}
		}

		[Token(Token = "0x6000344")]
		[Address(RVA = "0x1917E5C", Offset = "0x1917E5C", VA = "0x1917E5C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000345")]
		[Address(RVA = "0x1917ED8", Offset = "0x1917ED8", VA = "0x1917ED8")]
		private void OnCollisionEnter(Collision c)
		{
		}

		[Token(Token = "0x6000346")]
		[Address(RVA = "0x19180F8", Offset = "0x19180F8", VA = "0x19180F8")]
		private void OnCollisionStay(Collision c)
		{
		}

		[Token(Token = "0x6000347")]
		[Address(RVA = "0x19180FC", Offset = "0x19180FC", VA = "0x19180FC")]
		private void OnCollisionExit(Collision c)
		{
		}

		[Token(Token = "0x6000348")]
		[Address(RVA = "0x1918104", Offset = "0x1918104", VA = "0x1918104")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000349")]
		[Address(RVA = "0x1918198", Offset = "0x1918198", VA = "0x1918198")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600034A")]
		[Address(RVA = "0x1917EDC", Offset = "0x1917EDC", VA = "0x1917EDC")]
		private void ProcessCollision(Collision c)
		{
		}

		[Token(Token = "0x600034B")]
		[Address(RVA = "0x1918248", Offset = "0x1918248", VA = "0x1918248")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x600034C")]
		[Address(RVA = "0x191826C", Offset = "0x191826C", VA = "0x191826C")]
		public PressureSensor()
		{
		}
	}
	[Token(Token = "0x200003C")]
	public abstract class Prop : MonoBehaviour
	{
		[Token(Token = "0x4000213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0FA50", Offset = "0xA0FA50")]
		public int propType;

		[Token(Token = "0x4000214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0xA0FA88", Offset = "0xA0FA88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0FA88", Offset = "0xA0FA88")]
		public ConfigurableJoint muscle;

		[Token(Token = "0x4000215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0FAE8", Offset = "0xA0FAE8")]
		public Muscle.Props muscleProps;

		[Token(Token = "0x4000216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0FB20", Offset = "0xA0FB20")]
		public bool forceLayers;

		[Token(Token = "0x4000217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0xA0FB58", Offset = "0xA0FB58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0FB58", Offset = "0xA0FB58")]
		public ConfigurableJoint additionalPin;

		[Token(Token = "0x4000218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0FBB8", Offset = "0xA0FBB8")]
		public Transform additionalPinTarget;

		[Token(Token = "0x4000219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0FBF0", Offset = "0xA0FBF0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0FBF0", Offset = "0xA0FBF0")]
		public float additionalPinWeight;

		[Token(Token = "0x400021A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0xA0FC44", Offset = "0xA0FC44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0FC44", Offset = "0xA0FC44")]
		public PhysicMaterial pickedUpMaterial;

		[Token(Token = "0x400021B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0FCA4", Offset = "0xA0FCA4")]
		public PhysicMaterial droppedMaterial;

		[Token(Token = "0x400021C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0FCDC", Offset = "0xA0FCDC")]
		private PropRoot <propRoot>k__BackingField;

		[Token(Token = "0x400021D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0FCEC", Offset = "0xA0FCEC")]
		private bool <initiated>k__BackingField;

		[Token(Token = "0x400021E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private ConfigurableJointMotion xMotion;

		[Token(Token = "0x400021F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private ConfigurableJointMotion yMotion;

		[Token(Token = "0x4000220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private ConfigurableJointMotion zMotion;

		[Token(Token = "0x4000221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private ConfigurableJointMotion angularXMotion;

		[Token(Token = "0x4000222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private ConfigurableJointMotion angularYMotion;

		[Token(Token = "0x4000223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private ConfigurableJointMotion angularZMotion;

		[Token(Token = "0x4000224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] colliders;

		[Token(Token = "0x17000036")]
		public bool isPickedUp
		{
			[Token(Token = "0x600034D")]
			[Address(RVA = "0x1918274", Offset = "0x1918274", VA = "0x1918274")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000037")]
		public PropRoot propRoot
		{
			[Token(Token = "0x600034E")]
			[Address(RVA = "0x19182E4", Offset = "0x19182E4", VA = "0x19182E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA26640", Offset = "0xA26640")]
			get
			{
				return null;
			}
			[Token(Token = "0x600034F")]
			[Address(RVA = "0x19182EC", Offset = "0x19182EC", VA = "0x19182EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA26650", Offset = "0xA26650")]
			private set
			{
			}
		}

		[Token(Token = "0x17000038")]
		public bool initiated
		{
			[Token(Token = "0x6000353")]
			[Address(RVA = "0x19185B8", Offset = "0x19185B8", VA = "0x19185B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA26660", Offset = "0xA26660")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000354")]
			[Address(RVA = "0x19185C0", Offset = "0x19185C0", VA = "0x19185C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA26670", Offset = "0xA26670")]
			private set
			{
			}
		}

		[Token(Token = "0x6000350")]
		[Address(RVA = "0x19182F4", Offset = "0x19182F4", VA = "0x19182F4")]
		public void PickUp(PropRoot propRoot)
		{
		}

		[Token(Token = "0x6000351")]
		[Address(RVA = "0x191857C", Offset = "0x191857C", VA = "0x191857C")]
		public void Drop()
		{
		}

		[Token(Token = "0x6000352")]
		[Address(RVA = "0x19185B0", Offset = "0x19185B0", VA = "0x19185B0")]
		public void StartPickedUp(PropRoot propRoot)
		{
		}

		[Token(Token = "0x6000355")]
		[Address(RVA = "0x19185CC", Offset = "0x19185CC", VA = "0x19185CC", Slot = "4")]
		protected virtual void OnPickUp(PropRoot propRoot)
		{
		}

		[Token(Token = "0x6000356")]
		[Address(RVA = "0x19185D0", Offset = "0x19185D0", VA = "0x19185D0", Slot = "5")]
		protected virtual void OnDrop()
		{
		}

		[Token(Token = "0x6000357")]
		[Address(RVA = "0x19185D4", Offset = "0x19185D4", VA = "0x19185D4", Slot = "6")]
		protected virtual void OnStart()
		{
		}

		[Token(Token = "0x6000358")]
		[Address(RVA = "0x19185D8", Offset = "0x19185D8", VA = "0x19185D8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000359")]
		[Address(RVA = "0x1918834", Offset = "0x1918834", VA = "0x1918834")]
		private void ReleaseJoint()
		{
		}

		[Token(Token = "0x600035A")]
		[Address(RVA = "0x19184A4", Offset = "0x19184A4", VA = "0x19184A4")]
		private void SetMaterial(PhysicMaterial material)
		{
		}

		[Token(Token = "0x600035B")]
		[Address(RVA = "0x1918980", Offset = "0x1918980", VA = "0x1918980")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x600035C")]
		[Address(RVA = "0x1918B30", Offset = "0x1918B30", VA = "0x1918B30")]
		protected Prop()
		{
		}
	}
	[Token(Token = "0x200003D")]
	public class PropMuscle : MonoBehaviour
	{
		[Token(Token = "0x20004CA")]
		public delegate void PropDelegate(PuppetMasterProp prop);

		[Token(Token = "0x4000225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[HideInInspector]
		public PuppetMaster puppetMaster;

		[Token(Token = "0x4000226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0FD34", Offset = "0xA0FD34")]
		public PuppetMasterProp currentProp;

		[Token(Token = "0x4000227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0xA0FD6C", Offset = "0xA0FD6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0FD6C", Offset = "0xA0FD6C")]
		public Vector3 additionalPinOffset;

		[Token(Token = "0x4000228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0FDCC", Offset = "0xA0FDCC")]
		private PuppetMasterProp <activeProp>k__BackingField;

		[Token(Token = "0x4000229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public PropDelegate OnPickUpProp;

		[Token(Token = "0x400022A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public PropDelegate OnDropProp;

		[Token(Token = "0x400022B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Muscle _muscle;

		[Token(Token = "0x400022C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private PuppetMasterProp lastProp;

		[Token(Token = "0x400022D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 targetDefaultLocalPos;

		[Token(Token = "0x400022E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 lastAdditionalPinOffset;

		[Token(Token = "0x17000039")]
		public Muscle muscle
		{
			[Token(Token = "0x600035D")]
			[Address(RVA = "0x1918BBC", Offset = "0x1918BBC", VA = "0x1918BBC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003A")]
		public PuppetMasterProp activeProp
		{
			[Token(Token = "0x600035E")]
			[Address(RVA = "0x1918C90", Offset = "0x1918C90", VA = "0x1918C90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA26680", Offset = "0xA26680")]
			get
			{
				return null;
			}
			[Token(Token = "0x600035F")]
			[Address(RVA = "0x1918C98", Offset = "0x1918C98", VA = "0x1918C98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA26690", Offset = "0xA26690")]
			private set
			{
			}
		}

		[Token(Token = "0x6000360")]
		[Address(RVA = "0x1918CA0", Offset = "0x1918CA0", VA = "0x1918CA0")]
		public bool AddAdditionalPin()
		{
			return default(bool);
		}

		[Token(Token = "0x6000361")]
		[Address(RVA = "0x19190DC", Offset = "0x19190DC", VA = "0x19190DC")]
		public bool RemoveAdditionalPin()
		{
			return default(bool);
		}

		[Token(Token = "0x6000362")]
		[Address(RVA = "0x1919264", Offset = "0x1919264", VA = "0x1919264")]
		public void OnInitiate()
		{
		}

		[Token(Token = "0x6000363")]
		[Address(RVA = "0x19194C4", Offset = "0x19194C4", VA = "0x19194C4")]
		public void TakeOver()
		{
		}

		[Token(Token = "0x6000364")]
		[Address(RVA = "0x191950C", Offset = "0x191950C", VA = "0x191950C")]
		public void OnUpdate()
		{
		}

		[Token(Token = "0x6000365")]
		[Address(RVA = "0x191A0D0", Offset = "0x191A0D0", VA = "0x191A0D0")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000366")]
		[Address(RVA = "0x191A388", Offset = "0x191A388", VA = "0x191A388")]
		public PropMuscle()
		{
		}
	}
	[Token(Token = "0x200003E")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xA05D80", Offset = "0xA05D80")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA05D80", Offset = "0xA05D80")]
	public class PropRoot : MonoBehaviour
	{
		[Token(Token = "0x400022F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0FDDC", Offset = "0xA0FDDC")]
		public PuppetMaster puppetMaster;

		[Token(Token = "0x4000230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0FE14", Offset = "0xA0FE14")]
		public Rigidbody connectTo;

		[Token(Token = "0x4000231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0FE4C", Offset = "0xA0FE4C")]
		public Prop currentProp;

		[Token(Token = "0x4000232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Prop lastProp;

		[Token(Token = "0x4000233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool fixedUpdateCalled;

		[Token(Token = "0x6000367")]
		[Address(RVA = "0x191A440", Offset = "0x191A440", VA = "0x191A440")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA266A0", Offset = "0xA266A0")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6000368")]
		[Address(RVA = "0x191A48C", Offset = "0x191A48C", VA = "0x191A48C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA266D8", Offset = "0xA266D8")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000369")]
		[Address(RVA = "0x191A4D8", Offset = "0x191A4D8", VA = "0x191A4D8")]
		public void DropImmediate()
		{
		}

		[Token(Token = "0x600036A")]
		[Address(RVA = "0x191A5A4", Offset = "0x191A5A4", VA = "0x191A5A4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600036B")]
		[Address(RVA = "0x191A678", Offset = "0x191A678", VA = "0x191A678")]
		private void Update()
		{
		}

		[Token(Token = "0x600036C")]
		[Address(RVA = "0x191A7B0", Offset = "0x191A7B0", VA = "0x191A7B0")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600036D")]
		[Address(RVA = "0x191A9C8", Offset = "0x191A9C8", VA = "0x191A9C8")]
		private void AttachProp(Prop prop)
		{
		}

		[Token(Token = "0x600036E")]
		[Address(RVA = "0x191B540", Offset = "0x191B540", VA = "0x191B540")]
		public PropRoot()
		{
		}
	}
	[Token(Token = "0x200003F")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xA05DE0", Offset = "0xA05DE0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA05DE0", Offset = "0xA05DE0")]
	public class PropTemplate : Prop
	{
		[Token(Token = "0x600036F")]
		[Address(RVA = "0x191B548", Offset = "0x191B548", VA = "0x191B548", Slot = "6")]
		protected override void OnStart()
		{
		}

		[Token(Token = "0x6000370")]
		[Address(RVA = "0x191B54C", Offset = "0x191B54C", VA = "0x191B54C", Slot = "4")]
		protected override void OnPickUp(PropRoot propRoot)
		{
		}

		[Token(Token = "0x6000371")]
		[Address(RVA = "0x191B550", Offset = "0x191B550", VA = "0x191B550", Slot = "5")]
		protected override void OnDrop()
		{
		}

		[Token(Token = "0x6000372")]
		[Address(RVA = "0x191B554", Offset = "0x191B554", VA = "0x191B554")]
		public PropTemplate()
		{
		}
	}
	[Token(Token = "0x2000040")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xA05E40", Offset = "0xA05E40")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA05E40", Offset = "0xA05E40")]
	public class PuppetMaster : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004CB")]
		public enum Mode
		{
			[Token(Token = "0x400191E")]
			Active,
			[Token(Token = "0x400191F")]
			Kinematic,
			[Token(Token = "0x4001920")]
			Disabled
		}

		[Token(Token = "0x20004CC")]
		public delegate void UpdateDelegate();

		[Token(Token = "0x20004CD")]
		public delegate void MuscleDelegate(Muscle muscle);

		[Serializable]
		[Token(Token = "0x20004CE")]
		public enum UpdateMode
		{
			[Token(Token = "0x4001922")]
			Normal,
			[Token(Token = "0x4001923")]
			AnimatePhysics,
			[Token(Token = "0x4001924")]
			FixedUpdate
		}

		[Serializable]
		[Token(Token = "0x20004CF")]
		public enum State
		{
			[Token(Token = "0x4001926")]
			Alive,
			[Token(Token = "0x4001927")]
			Dead,
			[Token(Token = "0x4001928")]
			Frozen
		}

		[Serializable]
		[Token(Token = "0x20004D0")]
		public struct StateSettings
		{
			[Token(Token = "0x4001929")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA20BD4", Offset = "0xA20BD4")]
			public float killDuration;

			[Token(Token = "0x400192A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA20C0C", Offset = "0xA20C0C")]
			public float deadMuscleWeight;

			[Token(Token = "0x400192B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA20C44", Offset = "0xA20C44")]
			public float deadMuscleDamper;

			[Token(Token = "0x400192C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA20C7C", Offset = "0xA20C7C")]
			public float maxFreezeSqrVelocity;

			[Token(Token = "0x400192D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA20CB4", Offset = "0xA20CB4")]
			public bool freezePermanently;

			[Token(Token = "0x400192E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA20CEC", Offset = "0xA20CEC")]
			public bool enableAngularLimitsOnKill;

			[Token(Token = "0x400192F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA20D24", Offset = "0xA20D24")]
			public bool enableInternalCollisionsOnKill;

			[Token(Token = "0x17000463")]
			public static StateSettings Default
			{
				[Token(Token = "0x60025FF")]
				[Address(RVA = "0x1762E30", Offset = "0x1762E30", VA = "0x1762E30")]
				get
				{
					return default(StateSettings);
				}
			}

			[Token(Token = "0x60025FE")]
			[Address(RVA = "0xB9AD58", Offset = "0xB9AD58", VA = "0xB9AD58")]
			public StateSettings(float killDuration, float deadMuscleWeight = 0.01f, float deadMuscleDamper = 2f, float maxFreezeSqrVelocity = 0.02f, bool freezePermanently = false, bool enableAngularLimitsOnKill = true, bool enableInternalCollisionsOnKill = true)
			{
			}
		}

		[Token(Token = "0x20004D1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D378", Offset = "0xA0D378")]
		private sealed class <DisabledToActive>d__174 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001930")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001931")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001932")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PuppetMaster <>4__this;

			[Token(Token = "0x17000464")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002603")]
				[Address(RVA = "0x1762700", Offset = "0x1762700", VA = "0x1762700", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000465")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002605")]
				[Address(RVA = "0x1762768", Offset = "0x1762768", VA = "0x1762768", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002600")]
			[Address(RVA = "0x1762430", Offset = "0x1762430", VA = "0x1762430")]
			[DebuggerHidden]
			public <DisabledToActive>d__174(int <>1__state)
			{
			}

			[Token(Token = "0x6002601")]
			[Address(RVA = "0x176245C", Offset = "0x176245C", VA = "0x176245C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002602")]
			[Address(RVA = "0x1762460", Offset = "0x1762460", VA = "0x1762460", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002604")]
			[Address(RVA = "0x1762708", Offset = "0x1762708", VA = "0x1762708", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004D2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D388", Offset = "0xA0D388")]
		private sealed class <KinematicToActive>d__176 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001933")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001934")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001935")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PuppetMaster <>4__this;

			[Token(Token = "0x17000466")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002609")]
				[Address(RVA = "0x17629C8", Offset = "0x17629C8", VA = "0x17629C8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000467")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600260B")]
				[Address(RVA = "0x1762A30", Offset = "0x1762A30", VA = "0x1762A30", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002606")]
			[Address(RVA = "0x1762770", Offset = "0x1762770", VA = "0x1762770")]
			[DebuggerHidden]
			public <KinematicToActive>d__176(int <>1__state)
			{
			}

			[Token(Token = "0x6002607")]
			[Address(RVA = "0x176279C", Offset = "0x176279C", VA = "0x176279C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002608")]
			[Address(RVA = "0x17627A0", Offset = "0x17627A0", VA = "0x17627A0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600260A")]
			[Address(RVA = "0x17629D0", Offset = "0x17629D0", VA = "0x17629D0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004D3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D398", Offset = "0xA0D398")]
		private sealed class <ActiveToDisabled>d__177 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001936")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001937")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001938")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PuppetMaster <>4__this;

			[Token(Token = "0x17000468")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600260F")]
				[Address(RVA = "0x1761B14", Offset = "0x1761B14", VA = "0x1761B14", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000469")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002611")]
				[Address(RVA = "0x1761B7C", Offset = "0x1761B7C", VA = "0x1761B7C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600260C")]
			[Address(RVA = "0x176195C", Offset = "0x176195C", VA = "0x176195C")]
			[DebuggerHidden]
			public <ActiveToDisabled>d__177(int <>1__state)
			{
			}

			[Token(Token = "0x600260D")]
			[Address(RVA = "0x1761988", Offset = "0x1761988", VA = "0x1761988", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600260E")]
			[Address(RVA = "0x176198C", Offset = "0x176198C", VA = "0x176198C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002610")]
			[Address(RVA = "0x1761B1C", Offset = "0x1761B1C", VA = "0x1761B1C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D3A8", Offset = "0xA0D3A8")]
		private sealed class <ActiveToKinematic>d__178 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001939")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400193A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400193B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PuppetMaster <>4__this;

			[Token(Token = "0x1700046A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002615")]
				[Address(RVA = "0x1761D74", Offset = "0x1761D74", VA = "0x1761D74", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700046B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002617")]
				[Address(RVA = "0x1761DDC", Offset = "0x1761DDC", VA = "0x1761DDC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002612")]
			[Address(RVA = "0x1761B84", Offset = "0x1761B84", VA = "0x1761B84")]
			[DebuggerHidden]
			public <ActiveToKinematic>d__178(int <>1__state)
			{
			}

			[Token(Token = "0x6002613")]
			[Address(RVA = "0x1761BB0", Offset = "0x1761BB0", VA = "0x1761BB0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002614")]
			[Address(RVA = "0x1761BB4", Offset = "0x1761BB4", VA = "0x1761BB4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002616")]
			[Address(RVA = "0x1761D7C", Offset = "0x1761D7C", VA = "0x1761D7C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004D5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D3B8", Offset = "0xA0D3B8")]
		private sealed class <AliveToDead>d__229 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400193C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400193D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400193E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PuppetMaster <>4__this;

			[Token(Token = "0x400193F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool freeze;

			[Token(Token = "0x4001940")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <range>5__2;

			[Token(Token = "0x4001941")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <mW>5__3;

			[Token(Token = "0x1700046C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600261B")]
				[Address(RVA = "0x17623C0", Offset = "0x17623C0", VA = "0x17623C0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700046D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600261D")]
				[Address(RVA = "0x1762428", Offset = "0x1762428", VA = "0x1762428", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002618")]
			[Address(RVA = "0x1761DE4", Offset = "0x1761DE4", VA = "0x1761DE4")]
			[DebuggerHidden]
			public <AliveToDead>d__229(int <>1__state)
			{
			}

			[Token(Token = "0x6002619")]
			[Address(RVA = "0x1761E10", Offset = "0x1761E10", VA = "0x1761E10", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600261A")]
			[Address(RVA = "0x1761E14", Offset = "0x1761E14", VA = "0x1761E14", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600261C")]
			[Address(RVA = "0x17623C8", Offset = "0x17623C8", VA = "0x17623C8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0FE84", Offset = "0xA0FE84")]
		public PuppetMasterHumanoidConfig humanoidConfig;

		[Token(Token = "0x4000235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform targetRoot;

		[Token(Token = "0x4000236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0xA0FEBC", Offset = "0xA0FEBC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0FEBC", Offset = "0xA0FEBC")]
		public State state;

		[Token(Token = "0x4000237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool isResurrecting;

		[Token(Token = "0x4000238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "ContextMenuItemAttribute", RVA = "0xA0FF1C", Offset = "0xA0FF1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0FF1C", Offset = "0xA0FF1C")]
		public StateSettings stateSettings;

		[Token(Token = "0x4000239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0FF98", Offset = "0xA0FF98")]
		public Mode mode;

		[Token(Token = "0x400023A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0FFD0", Offset = "0xA0FFD0")]
		public float blendTime;

		[Token(Token = "0x400023B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA10008", Offset = "0xA10008")]
		public bool fixTargetTransforms;

		[Token(Token = "0x400023C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA10040", Offset = "0xA10040")]
		public int solverIterationCount;

		[Token(Token = "0x400023D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA10078", Offset = "0xA10078")]
		public bool visualizeTargetPose;

		[Token(Token = "0x400023E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0xA100B0", Offset = "0xA100B0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA100B0", Offset = "0xA100B0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA100B0", Offset = "0xA100B0")]
		public float mappingWeight;

		[Token(Token = "0x400023F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA10128", Offset = "0xA10128")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA10128", Offset = "0xA10128")]
		public float pinWeight;

		[Token(Token = "0x4000240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1017C", Offset = "0xA1017C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA1017C", Offset = "0xA1017C")]
		public float muscleWeight;

		[Token(Token = "0x4000241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0xA101D0", Offset = "0xA101D0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA101D0", Offset = "0xA101D0")]
		public float muscleSpring;

		[Token(Token = "0x4000242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA10230", Offset = "0xA10230")]
		public float muscleDamper;

		[Token(Token = "0x4000243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA10268", Offset = "0xA10268")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA10268", Offset = "0xA10268")]
		public float pinPow;

		[Token(Token = "0x4000244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA102BC", Offset = "0xA102BC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA102BC", Offset = "0xA102BC")]
		public float pinDistanceFalloff;

		[Token(Token = "0x4000245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA10314", Offset = "0xA10314")]
		public bool angularPinning;

		[Token(Token = "0x4000246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1034C", Offset = "0xA1034C")]
		public bool updateJointAnchors;

		[Token(Token = "0x4000247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x76")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA10384", Offset = "0xA10384")]
		public bool supportTranslationAnimation;

		[Token(Token = "0x4000248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x77")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA103BC", Offset = "0xA103BC")]
		public bool angularLimits;

		[Token(Token = "0x4000249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA103F4", Offset = "0xA103F4")]
		public bool internalCollisions;

		[Token(Token = "0x400024A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0xA1042C", Offset = "0xA1042C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1042C", Offset = "0xA1042C")]
		public Muscle[] muscles;

		[Token(Token = "0x400024B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		[HideInInspector]
		public PropMuscle[] propMuscles;

		[Token(Token = "0x400024C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public UpdateDelegate OnPostInitiate;

		[Token(Token = "0x400024D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public UpdateDelegate OnRead;

		[Token(Token = "0x400024E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public UpdateDelegate OnWrite;

		[Token(Token = "0x400024F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public UpdateDelegate OnPostLateUpdate;

		[Token(Token = "0x4000250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public UpdateDelegate OnFixTransforms;

		[Token(Token = "0x4000251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public UpdateDelegate OnHierarchyChanged;

		[Token(Token = "0x4000252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public MuscleDelegate OnMuscleRemoved;

		[Token(Token = "0x4000253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public MuscleDelegate OnMuscleDisconnected;

		[Token(Token = "0x4000254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public MuscleDelegate OnMuscleReconnected;

		[Token(Token = "0x4000255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Animator _targetAnimator;

		[Token(Token = "0x4000256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA104C4", Offset = "0xA104C4")]
		private Animation <targetAnimation>k__BackingField;

		[Token(Token = "0x4000257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA104D4", Offset = "0xA104D4")]
		private BehaviourBase[] <behaviours>k__BackingField;

		[Token(Token = "0x4000258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA104E4", Offset = "0xA104E4")]
		private bool <initiated>k__BackingField;

		[Token(Token = "0x4000259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[HideInInspector]
		public List<SolverManager> solvers;

		[NonSerialized]
		[Token(Token = "0x400025A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[HideInInspector]
		public bool manualInternalCollisionControl;

		[NonSerialized]
		[Token(Token = "0x400025B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
		[HideInInspector]
		public bool manualAngularLimitControl;

		[Token(Token = "0x400025C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x102")]
		[SerializeField]
		[HideInInspector]
		public bool mapDisconnectedMuscles;

		[Token(Token = "0x400025D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x103")]
		private bool internalCollisionsEnabled;

		[Token(Token = "0x400025E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private bool angularLimitsEnabled;

		[Token(Token = "0x400025F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x105")]
		private bool fixedFrame;

		[Token(Token = "0x4000260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private int lastSolverIterationCount;

		[Token(Token = "0x4000261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private bool isLegacy;

		[Token(Token = "0x4000262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10D")]
		private bool animatorDisabled;

		[Token(Token = "0x4000263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10E")]
		private bool awakeFailed;

		[Token(Token = "0x4000264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10F")]
		private bool interpolated;

		[Token(Token = "0x4000265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private bool freezeFlag;

		[Token(Token = "0x4000266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x111")]
		private bool hasBeenDisabled;

		[Token(Token = "0x4000267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x112")]
		private bool hierarchyIsFlat;

		[Token(Token = "0x4000268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x113")]
		private bool teleport;

		[Token(Token = "0x4000269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private Vector3 teleportPosition;

		[Token(Token = "0x400026A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Quaternion teleportRotation;

		[Token(Token = "0x400026B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private bool teleportMoveToTarget;

		[Token(Token = "0x400026C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x131")]
		private bool rebuildFlag;

		[Token(Token = "0x400026D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x132")]
		private bool onPostRebuildFlag;

		[Token(Token = "0x400026E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private bool[] disconnectMuscleFlags;

		[Token(Token = "0x400026F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private MuscleDisconnectMode[] muscleDisconnectModes;

		[Token(Token = "0x4000270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private bool[] disconnectDeactivateFlags;

		[Token(Token = "0x4000271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private bool[] reconnectMuscleFlags;

		[Token(Token = "0x4000272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private Muscle[] defaultMuscles;

		[Token(Token = "0x4000273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private Vector3 rebuildPelvisPos;

		[Token(Token = "0x4000274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		private Quaternion rebuildPelvisRot;

		[Token(Token = "0x4000275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		private bool readInFixedUpdate;

		[Token(Token = "0x4000276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1055C", Offset = "0xA1055C")]
		private bool <isSwitchingMode>k__BackingField;

		[Token(Token = "0x4000277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private Mode activeMode;

		[Token(Token = "0x4000278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		private Mode lastMode;

		[Token(Token = "0x4000279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private float mappingBlend;

		[Token(Token = "0x400027A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1056C", Offset = "0xA1056C")]
		private bool <isKilling>k__BackingField;

		[Token(Token = "0x400027B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public UpdateDelegate OnFreeze;

		[Token(Token = "0x400027C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public UpdateDelegate OnUnfreeze;

		[Token(Token = "0x400027D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public UpdateDelegate OnDeath;

		[Token(Token = "0x400027E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public UpdateDelegate OnResurrection;

		[Token(Token = "0x400027F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private State activeState;

		[Token(Token = "0x4000280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
		private State lastState;

		[Token(Token = "0x4000281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private bool angularLimitsEnabledOnKill;

		[Token(Token = "0x4000282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B9")]
		private bool internalCollisionsEnabledOnKill;

		[Token(Token = "0x4000283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BA")]
		private bool animationDisabledbyStates;

		[Token(Token = "0x4000284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BB")]
		[HideInInspector]
		public bool storeTargetMappedState;

		[Token(Token = "0x4000285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		private bool targetMappedStateStored;

		[Token(Token = "0x4000286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BD")]
		private bool targetMappedStateSampled;

		[Token(Token = "0x4000287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BE")]
		private bool sampleTargetMappedState;

		[Token(Token = "0x4000288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BF")]
		private bool hasProp;

		[Token(Token = "0x1700003B")]
		public Animator targetAnimator
		{
			[Token(Token = "0x600037A")]
			[Address(RVA = "0x191B760", Offset = "0x191B760", VA = "0x191B760")]
			get
			{
				return null;
			}
			[Token(Token = "0x600037B")]
			[Address(RVA = "0x191B8A8", Offset = "0x191B8A8", VA = "0x191B8A8")]
			set
			{
			}
		}

		[Token(Token = "0x1700003C")]
		public Animation targetAnimation
		{
			[Token(Token = "0x600037C")]
			[Address(RVA = "0x191B8B0", Offset = "0x191B8B0", VA = "0x191B8B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA26860", Offset = "0xA26860")]
			get
			{
				return null;
			}
			[Token(Token = "0x600037D")]
			[Address(RVA = "0x191B8B8", Offset = "0x191B8B8", VA = "0x191B8B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA26870", Offset = "0xA26870")]
			private set
			{
			}
		}

		[Token(Token = "0x1700003D")]
		public BehaviourBase[] behaviours
		{
			[Token(Token = "0x600037E")]
			[Address(RVA = "0x191B8C0", Offset = "0x191B8C0", VA = "0x191B8C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA26880", Offset = "0xA26880")]
			get
			{
				return null;
			}
			[Token(Token = "0x600037F")]
			[Address(RVA = "0x191B8C8", Offset = "0x191B8C8", VA = "0x191B8C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA26890", Offset = "0xA26890")]
			private set
			{
			}
		}

		[Token(Token = "0x1700003E")]
		public bool isActive
		{
			[Token(Token = "0x6000380")]
			[Address(RVA = "0x191B8D0", Offset = "0x191B8D0", VA = "0x191B8D0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700003F")]
		public bool initiated
		{
			[Token(Token = "0x6000381")]
			[Address(RVA = "0x191B964", Offset = "0x191B964", VA = "0x191B964")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA268A0", Offset = "0xA268A0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000382")]
			[Address(RVA = "0x191B96C", Offset = "0x191B96C", VA = "0x191B96C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA268B0", Offset = "0xA268B0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000040")]
		public UpdateMode updateMode
		{
			[Token(Token = "0x6000383")]
			[Address(RVA = "0x191B978", Offset = "0x191B978", VA = "0x191B978")]
			get
			{
				return default(UpdateMode);
			}
		}

		[Token(Token = "0x17000041")]
		public bool controlsAnimator
		{
			[Token(Token = "0x6000384")]
			[Address(RVA = "0x191BAB4", Offset = "0x191BAB4", VA = "0x191BAB4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000042")]
		public bool isBlending
		{
			[Token(Token = "0x6000385")]
			[Address(RVA = "0x191B940", Offset = "0x191B940", VA = "0x191B940")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000043")]
		private bool autoSimulate
		{
			[Token(Token = "0x6000389")]
			[Address(RVA = "0x191C544", Offset = "0x191C544", VA = "0x191C544")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000044")]
		private AnimatorUpdateMode targetUpdateMode
		{
			[Token(Token = "0x600039D")]
			[Address(RVA = "0x191B9B8", Offset = "0x191B9B8", VA = "0x191B9B8")]
			get
			{
				return default(AnimatorUpdateMode);
			}
		}

		[Token(Token = "0x17000045")]
		public bool isSwitchingMode
		{
			[Token(Token = "0x60003C7")]
			[Address(RVA = "0x19236E0", Offset = "0x19236E0", VA = "0x19236E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA269A0", Offset = "0xA269A0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60003C8")]
			[Address(RVA = "0x19236E8", Offset = "0x19236E8", VA = "0x19236E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA269B0", Offset = "0xA269B0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000046")]
		public bool isSwitchingState
		{
			[Token(Token = "0x60003E8")]
			[Address(RVA = "0x191BB14", Offset = "0x191BB14", VA = "0x191BB14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000047")]
		public bool isKilling
		{
			[Token(Token = "0x60003E9")]
			[Address(RVA = "0x1926CF4", Offset = "0x1926CF4", VA = "0x1926CF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA26B50", Offset = "0xA26B50")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60003EA")]
			[Address(RVA = "0x1926CFC", Offset = "0x1926CFC", VA = "0x1926CFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA26B60", Offset = "0xA26B60")]
			private set
			{
			}
		}

		[Token(Token = "0x17000048")]
		public bool isAlive
		{
			[Token(Token = "0x60003EB")]
			[Address(RVA = "0x1920AD4", Offset = "0x1920AD4", VA = "0x1920AD4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000049")]
		public bool isFrozen
		{
			[Token(Token = "0x60003EC")]
			[Address(RVA = "0x191F738", Offset = "0x191F738", VA = "0x191F738")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000373")]
		[Address(RVA = "0x191B558", Offset = "0x191B558", VA = "0x191B558")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA26710", Offset = "0xA26710")]
		private void OpenUserManualSetup()
		{
		}

		[Token(Token = "0x6000374")]
		[Address(RVA = "0x191B5A4", Offset = "0x191B5A4", VA = "0x191B5A4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA26748", Offset = "0xA26748")]
		private void OpenUserManualComponent()
		{
		}

		[Token(Token = "0x6000375")]
		[Address(RVA = "0x191B5F0", Offset = "0x191B5F0", VA = "0x191B5F0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA26780", Offset = "0xA26780")]
		private void OpenUserManualPerformance()
		{
		}

		[Token(Token = "0x6000376")]
		[Address(RVA = "0x191B63C", Offset = "0x191B63C", VA = "0x191B63C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA267B8", Offset = "0xA267B8")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000377")]
		[Address(RVA = "0x191B688", Offset = "0x191B688", VA = "0x191B688")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA267F0", Offset = "0xA267F0")]
		private void OpenSetupTutorial()
		{
		}

		[Token(Token = "0x6000378")]
		[Address(RVA = "0x191B6D4", Offset = "0x191B6D4", VA = "0x191B6D4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA26828", Offset = "0xA26828")]
		private void OpenComponentTutorial()
		{
		}

		[Token(Token = "0x6000379")]
		[Address(RVA = "0x191B720", Offset = "0x191B720", VA = "0x191B720")]
		private void ResetStateSettings()
		{
		}

		[Token(Token = "0x6000386")]
		[Address(RVA = "0x191BB28", Offset = "0x191BB28", VA = "0x191BB28")]
		public void Teleport(Vector3 position, Quaternion rotation, bool moveToTarget)
		{
		}

		[Token(Token = "0x6000387")]
		[Address(RVA = "0x191C3DC", Offset = "0x191C3DC", VA = "0x191C3DC")]
		public void SetInternalCollisionsManual(bool collide, bool useInternalCollisionIgnores)
		{
		}

		[Token(Token = "0x6000388")]
		[Address(RVA = "0x191C4C0", Offset = "0x191C4C0", VA = "0x191C4C0")]
		public void SetAngularLimitsManual(bool limited)
		{
		}

		[Token(Token = "0x600038A")]
		[Address(RVA = "0x191C54C", Offset = "0x191C54C", VA = "0x191C54C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600038B")]
		[Address(RVA = "0x191C5F4", Offset = "0x191C5F4", VA = "0x191C5F4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600038C")]
		[Address(RVA = "0x191CD70", Offset = "0x191CD70", VA = "0x191CD70")]
		private void Awake()
		{
		}

		[Token(Token = "0x600038D")]
		[Address(RVA = "0x191D794", Offset = "0x191D794", VA = "0x191D794")]
		public void Start()
		{
		}

		[Token(Token = "0x600038E")]
		[Address(RVA = "0x191D83C", Offset = "0x191D83C", VA = "0x191D83C")]
		public Transform FindTargetRootRecursive(Transform t)
		{
			return null;
		}

		[Token(Token = "0x600038F")]
		[Address(RVA = "0x191CDB4", Offset = "0x191CDB4", VA = "0x191CDB4")]
		private void Initiate()
		{
		}

		[Token(Token = "0x6000390")]
		[Address(RVA = "0x191E980", Offset = "0x191E980", VA = "0x191E980")]
		private void ActivateBehaviour(BehaviourBase behaviour)
		{
		}

		[Token(Token = "0x6000391")]
		[Address(RVA = "0x191EA7C", Offset = "0x191EA7C", VA = "0x191EA7C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000392")]
		[Address(RVA = "0x191EB70", Offset = "0x191EB70", VA = "0x191EB70")]
		private bool IsInterpolated()
		{
			return default(bool);
		}

		[Token(Token = "0x6000393")]
		[Address(RVA = "0x191EBFC", Offset = "0x191EBFC", VA = "0x191EBFC")]
		private void OnRebuild()
		{
		}

		[Token(Token = "0x6000394")]
		[Address(RVA = "0x191EF2C", Offset = "0x191EF2C", VA = "0x191EF2C")]
		public void OnPreSimulate(float deltaTime)
		{
		}

		[Token(Token = "0x6000395")]
		[Address(RVA = "0x191F82C", Offset = "0x191F82C", VA = "0x191F82C")]
		public void OnPostSimulate()
		{
		}

		[Token(Token = "0x6000396")]
		[Address(RVA = "0x191FFB8", Offset = "0x191FFB8", VA = "0x191FFB8", Slot = "4")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6000397")]
		[Address(RVA = "0x1920538", Offset = "0x1920538", VA = "0x1920538", Slot = "5")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000398")]
		[Address(RVA = "0x192061C", Offset = "0x192061C", VA = "0x192061C", Slot = "6")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x6000399")]
		[Address(RVA = "0x19207A0", Offset = "0x19207A0", VA = "0x19207A0", Slot = "7")]
		protected virtual void OnLateUpdate()
		{
		}

		[Token(Token = "0x600039A")]
		[Address(RVA = "0x191FB9C", Offset = "0x191FB9C", VA = "0x191FB9C")]
		private void MoveToTarget()
		{
		}

		[Token(Token = "0x600039B")]
		[Address(RVA = "0x191BB68", Offset = "0x191BB68", VA = "0x191BB68")]
		private void Read()
		{
		}

		[Token(Token = "0x600039C")]
		[Address(RVA = "0x191F5A8", Offset = "0x191F5A8", VA = "0x191F5A8")]
		private void FixTargetTransforms()
		{
		}

		[Token(Token = "0x600039E")]
		[Address(RVA = "0x1920AE4", Offset = "0x1920AE4", VA = "0x1920AE4")]
		private void VisualizeTargetPose()
		{
		}

		[Token(Token = "0x600039F")]
		[Address(RVA = "0x1920D8C", Offset = "0x1920D8C", VA = "0x1920D8C")]
		private void VisualizeHierarchy(Transform t, Color color)
		{
		}

		[Token(Token = "0x60003A0")]
		[Address(RVA = "0x191E894", Offset = "0x191E894", VA = "0x191E894")]
		public void FlagInternalCollisionsForUpdate()
		{
		}

		[Token(Token = "0x60003A1")]
		[Address(RVA = "0x191F748", Offset = "0x191F748", VA = "0x191F748")]
		private void UpdateInternalCollisions()
		{
		}

		[Token(Token = "0x60003A2")]
		[Address(RVA = "0x19210BC", Offset = "0x19210BC", VA = "0x19210BC")]
		public void UpdateInternalCollisions(Muscle m)
		{
		}

		[Token(Token = "0x60003A3")]
		[Address(RVA = "0x1920FE8", Offset = "0x1920FE8", VA = "0x1920FE8")]
		private void IgnoreInternalCollisions()
		{
		}

		[Token(Token = "0x60003A4")]
		[Address(RVA = "0x192116C", Offset = "0x192116C", VA = "0x192116C")]
		public void IgnoreInternalCollisions(Muscle m)
		{
		}

		[Token(Token = "0x60003A5")]
		[Address(RVA = "0x1920F0C", Offset = "0x1920F0C", VA = "0x1920F0C")]
		private void ResetInternalCollisions()
		{
		}

		[Token(Token = "0x60003A6")]
		[Address(RVA = "0x19211F8", Offset = "0x19211F8", VA = "0x19211F8")]
		public void ResetInternalCollisions(Muscle m, bool useInternalCollisionIgnores)
		{
		}

		[Token(Token = "0x60003A7")]
		[Address(RVA = "0x191E8B0", Offset = "0x191E8B0", VA = "0x191E8B0")]
		public void FlagAngularLimitsForUpdate()
		{
		}

		[Token(Token = "0x60003A8")]
		[Address(RVA = "0x191F780", Offset = "0x191F780", VA = "0x191F780")]
		private void UpdateAngularLimits()
		{
		}

		[Token(Token = "0x60003A9")]
		[Address(RVA = "0x1921294", Offset = "0x1921294", VA = "0x1921294")]
		public bool AddPropMuscle(ConfigurableJoint addPropMuscleTo, Vector3 position, Quaternion rotation, Vector3 additionalPinOffset, [Optional] Transform targetParent, [Optional] PuppetMasterProp initiateWithProp)
		{
			return default(bool);
		}

		[Token(Token = "0x60003AA")]
		[Address(RVA = "0x1919AAC", Offset = "0x1919AAC", VA = "0x1919AAC")]
		public bool IsDisconnecting(int muscleIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x60003AB")]
		[Address(RVA = "0x1919AE8", Offset = "0x1919AE8", VA = "0x1919AE8")]
		public bool IsReconnecting(int muscleIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x60003AC")]
		[Address(RVA = "0x1919360", Offset = "0x1919360", VA = "0x1919360")]
		public void DisconnectMuscleRecursive(int index, MuscleDisconnectMode disconnectMode = MuscleDisconnectMode.Sever, bool deactivate = false)
		{
		}

		[Token(Token = "0x60003AD")]
		[Address(RVA = "0x1919EB8", Offset = "0x1919EB8", VA = "0x1919EB8")]
		public void ReconnectMuscleRecursive(int index)
		{
		}

		[Token(Token = "0x60003AE")]
		[Address(RVA = "0x191AC04", Offset = "0x191AC04", VA = "0x191AC04")]
		public void AddMuscle(ConfigurableJoint joint, Transform target, Rigidbody connectTo, Transform targetParent, [Optional] Muscle.Props muscleProps, bool forceTreeHierarchy = false, bool forceLayers = true)
		{
		}

		[Token(Token = "0x60003AF")]
		[Address(RVA = "0x1921D88", Offset = "0x1921D88", VA = "0x1921D88")]
		public void Rebuild()
		{
		}

		[Token(Token = "0x60003B0")]
		[Address(RVA = "0x190EEF8", Offset = "0x190EEF8", VA = "0x190EEF8")]
		public void RemoveMuscleRecursive(ConfigurableJoint joint, bool attachTarget, bool blockTargetAnimation = false, MuscleRemoveMode removeMode = MuscleRemoveMode.Sever)
		{
		}

		[Token(Token = "0x60003B1")]
		[Address(RVA = "0x19220F0", Offset = "0x19220F0", VA = "0x19220F0")]
		public void ReplaceMuscle(ConfigurableJoint oldJoint, ConfigurableJoint newJoint)
		{
		}

		[Token(Token = "0x60003B2")]
		[Address(RVA = "0x1922190", Offset = "0x1922190", VA = "0x1922190")]
		public void SetMuscles(Muscle[] newMuscles)
		{
		}

		[Token(Token = "0x60003B3")]
		[Address(RVA = "0x1922230", Offset = "0x1922230", VA = "0x1922230")]
		public void DisableMuscleRecursive(ConfigurableJoint joint)
		{
		}

		[Token(Token = "0x60003B4")]
		[Address(RVA = "0x19222D0", Offset = "0x19222D0", VA = "0x19222D0")]
		public void EnableMuscleRecursive(ConfigurableJoint joint)
		{
		}

		[Token(Token = "0x60003B5")]
		[Address(RVA = "0x1922370", Offset = "0x1922370", VA = "0x1922370")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA268C0", Offset = "0xA268C0")]
		public void FlattenHierarchy()
		{
		}

		[Token(Token = "0x60003B6")]
		[Address(RVA = "0x1922480", Offset = "0x1922480", VA = "0x1922480")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA268F8", Offset = "0xA268F8")]
		public void TreeHierarchy()
		{
		}

		[Token(Token = "0x60003B7")]
		[Address(RVA = "0x19225F4", Offset = "0x19225F4", VA = "0x19225F4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA26930", Offset = "0xA26930")]
		public void FixMusclePositions()
		{
		}

		[Token(Token = "0x60003B8")]
		[Address(RVA = "0x1922730", Offset = "0x1922730", VA = "0x1922730")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA26968", Offset = "0xA26968")]
		public void FixMusclePositionsAndRotations()
		{
		}

		[Token(Token = "0x60003B9")]
		[Address(RVA = "0x191E784", Offset = "0x191E784", VA = "0x191E784")]
		public bool HierarchyIsFlat()
		{
			return default(bool);
		}

		[Token(Token = "0x60003BA")]
		[Address(RVA = "0x1921934", Offset = "0x1921934", VA = "0x1921934")]
		private int GetHighestDisconnectedParentIndex(int index)
		{
			return default(int);
		}

		[Token(Token = "0x60003BB")]
		[Address(RVA = "0x191F404", Offset = "0x191F404", VA = "0x191F404")]
		private void ProcessDisconnects()
		{
		}

		[Token(Token = "0x60003BC")]
		[Address(RVA = "0x191F500", Offset = "0x191F500", VA = "0x191F500")]
		private void ProcessReconnects()
		{
		}

		[Token(Token = "0x60003BD")]
		[Address(RVA = "0x19228A4", Offset = "0x19228A4", VA = "0x19228A4")]
		private void OnDisconnectMuscleRecursive(int index, MuscleDisconnectMode disconnectMode = MuscleDisconnectMode.Sever, bool deactivate = false)
		{
		}

		[Token(Token = "0x60003BE")]
		[Address(RVA = "0x1922CE8", Offset = "0x1922CE8", VA = "0x1922CE8")]
		private void DisconnectMuscle(Muscle m, bool sever, bool deactivate)
		{
		}

		[Token(Token = "0x60003BF")]
		[Address(RVA = "0x1922B68", Offset = "0x1922B68", VA = "0x1922B68")]
		private void OnReconnectMuscleRecursive(int index)
		{
		}

		[Token(Token = "0x60003C0")]
		[Address(RVA = "0x1923178", Offset = "0x1923178", VA = "0x1923178")]
		private void ReconnectMuscle(Muscle m)
		{
		}

		[Token(Token = "0x60003C1")]
		[Address(RVA = "0x1923550", Offset = "0x1923550", VA = "0x1923550")]
		private void AddIndexesRecursive(int index, ref int[] indexes)
		{
		}

		[Token(Token = "0x60003C2")]
		[Address(RVA = "0x1921F60", Offset = "0x1921F60", VA = "0x1921F60")]
		private void DisconnectJoint(ConfigurableJoint joint)
		{
		}

		[Token(Token = "0x60003C3")]
		[Address(RVA = "0x1922028", Offset = "0x1922028", VA = "0x1922028")]
		private void KillJoint(ConfigurableJoint joint)
		{
		}

		[Token(Token = "0x60003C4")]
		[Address(RVA = "0x19236C0", Offset = "0x19236C0", VA = "0x19236C0")]
		public void SwitchToActiveMode()
		{
		}

		[Token(Token = "0x60003C5")]
		[Address(RVA = "0x19236C8", Offset = "0x19236C8", VA = "0x19236C8")]
		public void SwitchToKinematicMode()
		{
		}

		[Token(Token = "0x60003C6")]
		[Address(RVA = "0x19236D4", Offset = "0x19236D4", VA = "0x19236D4")]
		public void SwitchToDisabledMode()
		{
		}

		[Token(Token = "0x60003C9")]
		[Address(RVA = "0x19236F4", Offset = "0x19236F4", VA = "0x19236F4")]
		public void DisableImmediately()
		{
		}

		[Token(Token = "0x60003CA")]
		[Address(RVA = "0x1923790", Offset = "0x1923790", VA = "0x1923790", Slot = "8")]
		protected virtual void SwitchModes()
		{
		}

		[Token(Token = "0x60003CB")]
		[Address(RVA = "0x19238F4", Offset = "0x19238F4", VA = "0x19238F4")]
		private void DisabledToKinematic()
		{
		}

		[Token(Token = "0x60003CC")]
		[Address(RVA = "0x1923A48", Offset = "0x1923A48", VA = "0x1923A48")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA269C0", Offset = "0xA269C0")]
		private IEnumerator DisabledToActive()
		{
			return null;
		}

		[Token(Token = "0x60003CD")]
		[Address(RVA = "0x1923AB8", Offset = "0x1923AB8", VA = "0x1923AB8")]
		private void KinematicToDisabled()
		{
		}

		[Token(Token = "0x60003CE")]
		[Address(RVA = "0x1923B5C", Offset = "0x1923B5C", VA = "0x1923B5C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA26A24", Offset = "0xA26A24")]
		private IEnumerator KinematicToActive()
		{
			return null;
		}

		[Token(Token = "0x60003CF")]
		[Address(RVA = "0x1923BCC", Offset = "0x1923BCC", VA = "0x1923BCC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA26A88", Offset = "0xA26A88")]
		private IEnumerator ActiveToDisabled()
		{
			return null;
		}

		[Token(Token = "0x60003D0")]
		[Address(RVA = "0x1923C3C", Offset = "0x1923C3C", VA = "0x1923C3C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA26AEC", Offset = "0xA26AEC")]
		private IEnumerator ActiveToKinematic()
		{
			return null;
		}

		[Token(Token = "0x60003D1")]
		[Address(RVA = "0x1923CAC", Offset = "0x1923CAC", VA = "0x1923CAC")]
		public void SetMuscleWeights(Muscle.Group group, float muscleWeight, float pinWeight = 1f, float mappingWeight = 1f, float muscleDamper = 1f)
		{
		}

		[Token(Token = "0x60003D2")]
		[Address(RVA = "0x1923D7C", Offset = "0x1923D7C", VA = "0x1923D7C")]
		public void SetMuscleWeights(Transform target, float muscleWeight, float pinWeight = 1f, float mappingWeight = 1f, float muscleDamper = 1f)
		{
		}

		[Token(Token = "0x60003D3")]
		[Address(RVA = "0x19241B0", Offset = "0x19241B0", VA = "0x19241B0")]
		public void SetMuscleWeights(HumanBodyBones humanBodyBone, float muscleWeight, float pinWeight = 1f, float mappingWeight = 1f, float muscleDamper = 1f)
		{
		}

		[Token(Token = "0x60003D4")]
		[Address(RVA = "0x1924464", Offset = "0x1924464", VA = "0x1924464")]
		public void SetMuscleWeightsRecursive(Transform target, float muscleWeight, float pinWeight = 1f, float mappingWeight = 1f, float muscleDamper = 1f)
		{
		}

		[Token(Token = "0x60003D5")]
		[Address(RVA = "0x1924598", Offset = "0x1924598", VA = "0x1924598")]
		public void SetMuscleWeightsRecursive(int muscleIndex, float muscleWeight, float pinWeight = 1f, float mappingWeight = 1f, float muscleDamper = 1f)
		{
		}

		[Token(Token = "0x60003D6")]
		[Address(RVA = "0x1924684", Offset = "0x1924684", VA = "0x1924684")]
		public void SetMuscleWeightsRecursive(HumanBodyBones humanBodyBone, float muscleWeight, float pinWeight = 1f, float mappingWeight = 1f, float muscleDamper = 1f)
		{
		}

		[Token(Token = "0x60003D7")]
		[Address(RVA = "0x1923FDC", Offset = "0x1923FDC", VA = "0x1923FDC")]
		public void SetMuscleWeights(int muscleIndex, float muscleWeight, float pinWeight, float mappingWeight, float muscleDamper)
		{
		}

		[Token(Token = "0x60003D8")]
		[Address(RVA = "0x192470C", Offset = "0x192470C", VA = "0x192470C")]
		public Muscle GetMuscle(Transform target)
		{
			return null;
		}

		[Token(Token = "0x60003D9")]
		[Address(RVA = "0x1921A54", Offset = "0x1921A54", VA = "0x1921A54")]
		public Muscle GetMuscle(Rigidbody rigidbody)
		{
			return null;
		}

		[Token(Token = "0x60003DA")]
		[Address(RVA = "0x1918C34", Offset = "0x1918C34", VA = "0x1918C34")]
		public Muscle GetMuscle(ConfigurableJoint joint)
		{
			return null;
		}

		[Token(Token = "0x60003DB")]
		[Address(RVA = "0x191EE3C", Offset = "0x191EE3C", VA = "0x191EE3C")]
		public bool ContainsJoint(ConfigurableJoint joint)
		{
			return default(bool);
		}

		[Token(Token = "0x60003DC")]
		[Address(RVA = "0x1924238", Offset = "0x1924238", VA = "0x1924238")]
		public int GetMuscleIndex(HumanBodyBones humanBodyBone)
		{
			return default(int);
		}

		[Token(Token = "0x60003DD")]
		[Address(RVA = "0x1923E04", Offset = "0x1923E04", VA = "0x1923E04")]
		public int GetMuscleIndex(Transform target)
		{
			return default(int);
		}

		[Token(Token = "0x60003DE")]
		[Address(RVA = "0x1924768", Offset = "0x1924768", VA = "0x1924768")]
		public int GetMuscleIndex(Rigidbody rigidbody)
		{
			return default(int);
		}

		[Token(Token = "0x60003DF")]
		[Address(RVA = "0x1921D94", Offset = "0x1921D94", VA = "0x1921D94")]
		public int GetMuscleIndex(ConfigurableJoint joint)
		{
			return default(int);
		}

		[Token(Token = "0x60003E0")]
		[Address(RVA = "0x1924940", Offset = "0x1924940", VA = "0x1924940")]
		public static PuppetMaster SetUp(Transform target, Transform ragdoll, int characterControllerLayer, int ragdollLayer)
		{
			return null;
		}

		[Token(Token = "0x60003E1")]
		[Address(RVA = "0x1925508", Offset = "0x1925508", VA = "0x1925508")]
		public static PuppetMaster SetUp(Transform target, int characterControllerLayer, int ragdollLayer)
		{
			return null;
		}

		[Token(Token = "0x60003E2")]
		[Address(RVA = "0x1924A34", Offset = "0x1924A34", VA = "0x1924A34")]
		public void SetUpTo(Transform setUpTo, int characterControllerLayer, int ragdollLayer)
		{
		}

		[Token(Token = "0x60003E3")]
		[Address(RVA = "0x1925668", Offset = "0x1925668", VA = "0x1925668")]
		public static void RemoveRagdollComponents(Transform target, int characterControllerLayer)
		{
		}

		[Token(Token = "0x60003E4")]
		[Address(RVA = "0x1925E64", Offset = "0x1925E64", VA = "0x1925E64")]
		private void SetUpMuscles(Transform setUpTo)
		{
		}

		[Token(Token = "0x60003E5")]
		[Address(RVA = "0x192684C", Offset = "0x192684C", VA = "0x192684C")]
		private static Muscle.Group FindGroup(Animator animator, Transform t)
		{
			return default(Muscle.Group);
		}

		[Token(Token = "0x60003E6")]
		[Address(RVA = "0x1925A90", Offset = "0x1925A90", VA = "0x1925A90")]
		private void RemoveUnnecessaryBones()
		{
		}

		[Token(Token = "0x60003E7")]
		[Address(RVA = "0x1926538", Offset = "0x1926538", VA = "0x1926538")]
		private static bool IsClothCollider(Collider collider, Cloth[] cloths)
		{
			return default(bool);
		}

		[Token(Token = "0x60003ED")]
		[Address(RVA = "0x1926D08", Offset = "0x1926D08", VA = "0x1926D08")]
		public void Kill()
		{
		}

		[Token(Token = "0x60003EE")]
		[Address(RVA = "0x1926D14", Offset = "0x1926D14", VA = "0x1926D14")]
		public void Kill(StateSettings stateSettings)
		{
		}

		[Token(Token = "0x60003EF")]
		[Address(RVA = "0x1926D30", Offset = "0x1926D30", VA = "0x1926D30")]
		public void Freeze()
		{
		}

		[Token(Token = "0x60003F0")]
		[Address(RVA = "0x1926D3C", Offset = "0x1926D3C", VA = "0x1926D3C")]
		public void Freeze(StateSettings stateSettings)
		{
		}

		[Token(Token = "0x60003F1")]
		[Address(RVA = "0x1926D58", Offset = "0x1926D58", VA = "0x1926D58")]
		public void Resurrect()
		{
		}

		[Token(Token = "0x60003F2")]
		[Address(RVA = "0x1926D68", Offset = "0x1926D68", VA = "0x1926D68", Slot = "9")]
		protected virtual void SwitchStates()
		{
		}

		[Token(Token = "0x60003F3")]
		[Address(RVA = "0x1926E68", Offset = "0x1926E68", VA = "0x1926E68")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA26B70", Offset = "0xA26B70")]
		private IEnumerator AliveToDead(bool freeze)
		{
			return null;
		}

		[Token(Token = "0x60003F4")]
		[Address(RVA = "0x191FD34", Offset = "0x191FD34", VA = "0x191FD34")]
		private void OnFreezeFlag()
		{
		}

		[Token(Token = "0x60003F5")]
		[Address(RVA = "0x1926EEC", Offset = "0x1926EEC", VA = "0x1926EEC")]
		private void DeadToAlive()
		{
		}

		[Token(Token = "0x60003F6")]
		[Address(RVA = "0x191CA90", Offset = "0x191CA90", VA = "0x191CA90")]
		private void SetAnimationEnabled(bool to)
		{
		}

		[Token(Token = "0x60003F7")]
		[Address(RVA = "0x1926FF4", Offset = "0x1926FF4", VA = "0x1926FF4")]
		private void DeadToFrozen()
		{
		}

		[Token(Token = "0x60003F8")]
		[Address(RVA = "0x1927000", Offset = "0x1927000", VA = "0x1927000")]
		private void FrozenToAlive()
		{
		}

		[Token(Token = "0x60003F9")]
		[Address(RVA = "0x1927220", Offset = "0x1927220", VA = "0x1927220")]
		private void FrozenToDead()
		{
		}

		[Token(Token = "0x60003FA")]
		[Address(RVA = "0x191CB90", Offset = "0x191CB90", VA = "0x191CB90")]
		private void ActivateRagdoll(bool kinematic = false)
		{
		}

		[Token(Token = "0x60003FB")]
		[Address(RVA = "0x19272F4", Offset = "0x19272F4", VA = "0x19272F4")]
		private bool CanFreeze()
		{
			return default(bool);
		}

		[Token(Token = "0x60003FC")]
		[Address(RVA = "0x19273B0", Offset = "0x19273B0", VA = "0x19273B0")]
		public void SampleTargetMappedState()
		{
		}

		[Token(Token = "0x60003FD")]
		[Address(RVA = "0x192747C", Offset = "0x192747C", VA = "0x192747C")]
		public void FixTargetToSampledState(float weight)
		{
		}

		[Token(Token = "0x60003FE")]
		[Address(RVA = "0x191E8CC", Offset = "0x191E8CC", VA = "0x191E8CC")]
		public void StoreTargetMappedState()
		{
		}

		[Token(Token = "0x60003FF")]
		[Address(RVA = "0x191E508", Offset = "0x191E508", VA = "0x191E508")]
		private void UpdateHierarchies()
		{
		}

		[Token(Token = "0x6000400")]
		[Address(RVA = "0x1927CDC", Offset = "0x1927CDC", VA = "0x1927CDC")]
		private bool HasProp()
		{
			return default(bool);
		}

		[Token(Token = "0x6000401")]
		[Address(RVA = "0x1927B70", Offset = "0x1927B70", VA = "0x1927B70")]
		private void UpdateBroadcasterMuscleIndexes()
		{
		}

		[Token(Token = "0x6000402")]
		[Address(RVA = "0x192776C", Offset = "0x192776C", VA = "0x192776C")]
		private void AssignParentAndChildIndexes()
		{
		}

		[Token(Token = "0x6000403")]
		[Address(RVA = "0x1927D54", Offset = "0x1927D54", VA = "0x1927D54")]
		private void AddToParentsRecursive(ConfigurableJoint joint, ref int[] indexes)
		{
		}

		[Token(Token = "0x6000404")]
		[Address(RVA = "0x1927ECC", Offset = "0x1927ECC", VA = "0x1927ECC")]
		private void AddToChildrenRecursive(ConfigurableJoint joint, ref int[] indexes, ref bool[] childFlags)
		{
		}

		[Token(Token = "0x6000405")]
		[Address(RVA = "0x1927A64", Offset = "0x1927A64", VA = "0x1927A64")]
		private void AssignKinshipDegrees()
		{
		}

		[Token(Token = "0x6000406")]
		[Address(RVA = "0x19281AC", Offset = "0x19281AC", VA = "0x19281AC")]
		private void AssignKinshipsDownRecursive(ref int[] kinshipDegrees, int degree, int index)
		{
		}

		[Token(Token = "0x6000407")]
		[Address(RVA = "0x1928310", Offset = "0x1928310", VA = "0x1928310")]
		private void AssignKinshipsUpRecursive(ref int[] kinshipDegrees, int degree, int index)
		{
		}

		[Token(Token = "0x6000408")]
		[Address(RVA = "0x19280D0", Offset = "0x19280D0", VA = "0x19280D0")]
		private int GetMuscleIndexLowLevel(ConfigurableJoint joint)
		{
			return default(int);
		}

		[Token(Token = "0x6000409")]
		[Address(RVA = "0x191DBB0", Offset = "0x191DBB0", VA = "0x191DBB0")]
		public bool IsValid(bool log)
		{
			return default(bool);
		}

		[Token(Token = "0x600040A")]
		[Address(RVA = "0x1921AB0", Offset = "0x1921AB0", VA = "0x1921AB0")]
		private bool CheckMassVariation(float threshold, bool log)
		{
			return default(bool);
		}

		[Token(Token = "0x600040B")]
		[Address(RVA = "0x19219C4", Offset = "0x19219C4", VA = "0x19219C4")]
		private bool CheckIfInitiated()
		{
			return default(bool);
		}

		[Token(Token = "0x600040C")]
		[Address(RVA = "0x1928574", Offset = "0x1928574", VA = "0x1928574")]
		public PuppetMaster()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000041")]
	public enum MuscleRemoveMode
	{
		[Token(Token = "0x400028A")]
		Sever,
		[Token(Token = "0x400028B")]
		Explode,
		[Token(Token = "0x400028C")]
		Numb
	}
	[Serializable]
	[Token(Token = "0x2000042")]
	public enum MuscleDisconnectMode
	{
		[Token(Token = "0x400028E")]
		Sever,
		[Token(Token = "0x400028F")]
		Explode
	}
	[Token(Token = "0x2000043")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xA05EA0", Offset = "0xA05EA0")]
	public class PuppetMasterHumanoidConfig : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x20004D6")]
		public class HumanoidMuscle
		{
			[Token(Token = "0x4001942")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			[HideInInspector]
			public string name;

			[Token(Token = "0x4001943")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public HumanBodyBones bone;

			[Token(Token = "0x4001944")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Muscle.Props props;

			[Token(Token = "0x600261E")]
			[Address(RVA = "0x176340C", Offset = "0x176340C", VA = "0x176340C")]
			public HumanoidMuscle()
			{
			}
		}

		[Token(Token = "0x4000290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0xA1058C", Offset = "0xA1058C")]
		public PuppetMaster.State state;

		[Token(Token = "0x4000291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public PuppetMaster.StateSettings stateSettings;

		[Token(Token = "0x4000292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PuppetMaster.Mode mode;

		[Token(Token = "0x4000293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float blendTime;

		[Token(Token = "0x4000294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool fixTargetTransforms;

		[Token(Token = "0x4000295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int solverIterationCount;

		[Token(Token = "0x4000296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool visualizeTargetPose;

		[Token(Token = "0x4000297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0xA105C4", Offset = "0xA105C4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA105C4", Offset = "0xA105C4")]
		public float mappingWeight;

		[Token(Token = "0x4000298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA10618", Offset = "0xA10618")]
		public float pinWeight;

		[Token(Token = "0x4000299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA10630", Offset = "0xA10630")]
		public float muscleWeight;

		[Token(Token = "0x400029A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0xA10648", Offset = "0xA10648")]
		public float muscleSpring;

		[Token(Token = "0x400029B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float muscleDamper;

		[Token(Token = "0x400029C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA10680", Offset = "0xA10680")]
		public float pinPow;

		[Token(Token = "0x400029D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA10698", Offset = "0xA10698")]
		public float pinDistanceFalloff;

		[Token(Token = "0x400029E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool angularPinning;

		[Token(Token = "0x400029F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		public bool updateJointAnchors;

		[Token(Token = "0x40002A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		public bool supportTranslationAnimation;

		[Token(Token = "0x40002A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		public bool angularLimits;

		[Token(Token = "0x40002A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public bool internalCollisions;

		[Token(Token = "0x40002A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0xA106B4", Offset = "0xA106B4")]
		public HumanoidMuscle[] muscles;

		[Token(Token = "0x600040D")]
		[Address(RVA = "0x1762EA0", Offset = "0x1762EA0", VA = "0x1762EA0")]
		public void ApplyTo(PuppetMaster p)
		{
		}

		[Token(Token = "0x600040E")]
		[Address(RVA = "0x1763224", Offset = "0x1763224", VA = "0x1763224")]
		private Muscle GetMuscle(HumanBodyBones boneId, Animator animator, PuppetMaster puppetMaster)
		{
			return null;
		}

		[Token(Token = "0x600040F")]
		[Address(RVA = "0x1763358", Offset = "0x1763358", VA = "0x1763358")]
		public PuppetMasterHumanoidConfig()
		{
		}
	}
	[Token(Token = "0x2000044")]
	public class PuppetMasterProp : MonoBehaviour
	{
		[Token(Token = "0x40002A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA106EC", Offset = "0xA106EC")]
		public Transform meshRoot;

		[Token(Token = "0x40002A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA10724", Offset = "0xA10724")]
		public Muscle.Props muscleProps;

		[Token(Token = "0x40002A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1075C", Offset = "0xA1075C")]
		public bool forceLayers;

		[Token(Token = "0x40002A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA10794", Offset = "0xA10794")]
		public float mass;

		[Token(Token = "0x40002A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA107CC", Offset = "0xA107CC")]
		public int propType;

		[Token(Token = "0x40002A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0xA10804", Offset = "0xA10804")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA10804", Offset = "0xA10804")]
		public PhysicMaterial pickedUpMaterial;

		[Token(Token = "0x40002AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0xA10864", Offset = "0xA10864")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA10864", Offset = "0xA10864")]
		public Vector3 additionalPinOffsetAdd;

		[Token(Token = "0x40002AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA108C4", Offset = "0xA108C4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA108C4", Offset = "0xA108C4")]
		public float additionalPinWeight;

		[Token(Token = "0x40002AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA10918", Offset = "0xA10918")]
		public float additionalPinMass;

		[Token(Token = "0x40002AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA10950", Offset = "0xA10950")]
		private bool <isPickedUp>k__BackingField;

		[Token(Token = "0x40002AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA10960", Offset = "0xA10960")]
		private Muscle <propMuscle>k__BackingField;

		[Token(Token = "0x40002AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int defaultLayer;

		[Token(Token = "0x40002B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform defaultParent;

		[Token(Token = "0x40002B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Collider[] colliders;

		[Token(Token = "0x40002B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PhysicMaterial[] droppedMaterials;

		[Token(Token = "0x40002B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Rigidbody r;

		[Token(Token = "0x40002B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float _mass;

		[Token(Token = "0x40002B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float _drag;

		[Token(Token = "0x40002B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float _angularDrag;

		[Token(Token = "0x40002B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private bool _useGravity;

		[Token(Token = "0x40002B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
		private bool _isKinematic;

		[Token(Token = "0x40002B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private RigidbodyInterpolation _interpolation;

		[Token(Token = "0x40002BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private CollisionDetectionMode _collisionDetectionMode;

		[Token(Token = "0x40002BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RigidbodyConstraints _constraints;

		[Token(Token = "0x40002BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] emptyColliders;

		[Token(Token = "0x1700004A")]
		public bool isPickedUp
		{
			[Token(Token = "0x6000410")]
			[Address(RVA = "0x1763414", Offset = "0x1763414", VA = "0x1763414")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA26BD4", Offset = "0xA26BD4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000411")]
			[Address(RVA = "0x176341C", Offset = "0x176341C", VA = "0x176341C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA26BE4", Offset = "0xA26BE4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700004B")]
		protected Muscle propMuscle
		{
			[Token(Token = "0x6000415")]
			[Address(RVA = "0x17634D8", Offset = "0x17634D8", VA = "0x17634D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA26BF4", Offset = "0xA26BF4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000416")]
			[Address(RVA = "0x17634E0", Offset = "0x17634E0", VA = "0x17634E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA26C04", Offset = "0xA26C04")]
			private set
			{
			}
		}

		[Token(Token = "0x6000412")]
		[Address(RVA = "0x1763428", Offset = "0x1763428", VA = "0x1763428")]
		public Rigidbody GetRigidbody()
		{
			return null;
		}

		[Token(Token = "0x6000413")]
		[Address(RVA = "0x17634D0", Offset = "0x17634D0", VA = "0x17634D0", Slot = "4")]
		protected virtual void OnPickUp(PuppetMaster puppetMaster, int propMuscleIndex)
		{
		}

		[Token(Token = "0x6000414")]
		[Address(RVA = "0x17634D4", Offset = "0x17634D4", VA = "0x17634D4", Slot = "5")]
		protected virtual void OnDrop(PuppetMaster puppetMaster, int propMuscleIndex)
		{
		}

		[Token(Token = "0x6000417")]
		[Address(RVA = "0x17634E8", Offset = "0x17634E8", VA = "0x17634E8")]
		public void PickUp(PuppetMaster puppetMaster, int propMuscleIndex)
		{
		}

		[Token(Token = "0x6000418")]
		[Address(RVA = "0x1763A48", Offset = "0x1763A48", VA = "0x1763A48")]
		public void Drop(PuppetMaster puppetMaster, int propMuscleIndex)
		{
		}

		[Token(Token = "0x6000419")]
		[Address(RVA = "0x1763FC4", Offset = "0x1763FC4", VA = "0x1763FC4", Slot = "6")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600041A")]
		[Address(RVA = "0x1764110", Offset = "0x1764110", VA = "0x1764110", Slot = "7")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x600041B")]
		[Address(RVA = "0x1764324", Offset = "0x1764324", VA = "0x1764324", Slot = "8")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x600041C")]
		[Address(RVA = "0x17638D8", Offset = "0x17638D8", VA = "0x17638D8")]
		private void RemoveRigidbody()
		{
		}

		[Token(Token = "0x600041D")]
		[Address(RVA = "0x1763E80", Offset = "0x1763E80", VA = "0x1763E80")]
		private void ReattachRigidbody()
		{
		}

		[Token(Token = "0x600041E")]
		[Address(RVA = "0x1764410", Offset = "0x1764410", VA = "0x1764410")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x600041F")]
		[Address(RVA = "0x176457C", Offset = "0x176457C", VA = "0x176457C")]
		public PuppetMasterProp()
		{
		}
	}
	[Token(Token = "0x2000045")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA05EF4", Offset = "0xA05EF4")]
	public class PuppetMasterSettings : Singleton<PuppetMasterSettings>
	{
		[Serializable]
		[Token(Token = "0x20004D7")]
		public class PuppetUpdateLimit
		{
			[Token(Token = "0x4001945")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA20D94", Offset = "0xA20D94")]
			public int puppetsPerFrame;

			[Token(Token = "0x4001946")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private int index;

			[Token(Token = "0x600261F")]
			[Address(RVA = "0x1764C5C", Offset = "0x1764C5C", VA = "0x1764C5C")]
			public PuppetUpdateLimit()
			{
			}

			[Token(Token = "0x6002620")]
			[Address(RVA = "0x1764AC8", Offset = "0x1764AC8", VA = "0x1764AC8")]
			public void Step(int puppetCount)
			{
			}

			[Token(Token = "0x6002621")]
			[Address(RVA = "0x1764778", Offset = "0x1764778", VA = "0x1764778")]
			public bool Update(List<PuppetMaster> puppets, PuppetMaster puppetMaster)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40002BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA10970", Offset = "0xA10970")]
		public PuppetUpdateLimit kinematicCollidersUpdateLimit;

		[Token(Token = "0x40002BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PuppetUpdateLimit freeUpdateLimit;

		[Token(Token = "0x40002BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PuppetUpdateLimit fixedUpdateLimit;

		[Token(Token = "0x40002C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool collisionStayMessages;

		[Token(Token = "0x40002C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool collisionExitMessages;

		[Token(Token = "0x40002C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float activePuppetCollisionThresholdMlp;

		[Token(Token = "0x40002C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA109A8", Offset = "0xA109A8")]
		private int <currentlyActivePuppets>k__BackingField;

		[Token(Token = "0x40002C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA109B8", Offset = "0xA109B8")]
		private int <currentlyKinematicPuppets>k__BackingField;

		[Token(Token = "0x40002C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA109C8", Offset = "0xA109C8")]
		private int <currentlyDisabledPuppets>k__BackingField;

		[Token(Token = "0x40002C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<PuppetMaster> _puppets;

		[Token(Token = "0x1700004C")]
		public int currentlyActivePuppets
		{
			[Token(Token = "0x6000420")]
			[Address(RVA = "0x176461C", Offset = "0x176461C", VA = "0x176461C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA26C14", Offset = "0xA26C14")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000421")]
			[Address(RVA = "0x1764624", Offset = "0x1764624", VA = "0x1764624")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA26C24", Offset = "0xA26C24")]
			private set
			{
			}
		}

		[Token(Token = "0x1700004D")]
		public int currentlyKinematicPuppets
		{
			[Token(Token = "0x6000422")]
			[Address(RVA = "0x176462C", Offset = "0x176462C", VA = "0x176462C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA26C34", Offset = "0xA26C34")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000423")]
			[Address(RVA = "0x1764634", Offset = "0x1764634", VA = "0x1764634")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA26C44", Offset = "0xA26C44")]
			private set
			{
			}
		}

		[Token(Token = "0x1700004E")]
		public int currentlyDisabledPuppets
		{
			[Token(Token = "0x6000424")]
			[Address(RVA = "0x176463C", Offset = "0x176463C", VA = "0x176463C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA26C54", Offset = "0xA26C54")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000425")]
			[Address(RVA = "0x1764644", Offset = "0x1764644", VA = "0x1764644")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA26C64", Offset = "0xA26C64")]
			private set
			{
			}
		}

		[Token(Token = "0x1700004F")]
		public List<PuppetMaster> puppets
		{
			[Token(Token = "0x6000426")]
			[Address(RVA = "0x176464C", Offset = "0x176464C", VA = "0x176464C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000427")]
		[Address(RVA = "0x1764654", Offset = "0x1764654", VA = "0x1764654")]
		public void Register(PuppetMaster puppetMaster)
		{
		}

		[Token(Token = "0x6000428")]
		[Address(RVA = "0x17646EC", Offset = "0x17646EC", VA = "0x17646EC")]
		public void Unregister(PuppetMaster puppetMaster)
		{
		}

		[Token(Token = "0x6000429")]
		[Address(RVA = "0x1764754", Offset = "0x1764754", VA = "0x1764754")]
		public bool UpdateMoveToTarget(PuppetMaster puppetMaster)
		{
			return default(bool);
		}

		[Token(Token = "0x600042A")]
		[Address(RVA = "0x1764890", Offset = "0x1764890", VA = "0x1764890")]
		public bool UpdateFree(PuppetMaster puppetMaster)
		{
			return default(bool);
		}

		[Token(Token = "0x600042B")]
		[Address(RVA = "0x17648B4", Offset = "0x17648B4", VA = "0x17648B4")]
		public bool UpdateFixed(PuppetMaster puppetMaster)
		{
			return default(bool);
		}

		[Token(Token = "0x600042C")]
		[Address(RVA = "0x17648D8", Offset = "0x17648D8", VA = "0x17648D8")]
		private void Update()
		{
		}

		[Token(Token = "0x600042D")]
		[Address(RVA = "0x1764AE4", Offset = "0x1764AE4", VA = "0x1764AE4")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600042E")]
		[Address(RVA = "0x1764B54", Offset = "0x1764B54", VA = "0x1764B54")]
		public PuppetMasterSettings()
		{
		}
	}
	[Token(Token = "0x2000046")]
	public static class PuppetMasterTools
	{
		[Token(Token = "0x600042F")]
		[Address(RVA = "0x1764C88", Offset = "0x1764C88", VA = "0x1764C88")]
		public static void PositionRagdoll(PuppetMaster puppetMaster)
		{
		}

		[Token(Token = "0x6000430")]
		[Address(RVA = "0x1765310", Offset = "0x1765310", VA = "0x1765310")]
		public static void RealignRagdoll(PuppetMaster puppetMaster)
		{
		}

		[Token(Token = "0x6000431")]
		[Address(RVA = "0x1765BFC", Offset = "0x1765BFC", VA = "0x1765BFC")]
		private static Vector3 DirectionIntToVector3(int dir)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000432")]
		[Address(RVA = "0x1765CB4", Offset = "0x1765CB4", VA = "0x1765CB4")]
		private static int DirectionVector3ToInt(Vector3 dir)
		{
			return default(int);
		}
	}
	[Serializable]
	[Token(Token = "0x2000047")]
	public class Weight
	{
		[Serializable]
		[Token(Token = "0x20004D8")]
		public enum Mode
		{
			[Token(Token = "0x4001948")]
			Float,
			[Token(Token = "0x4001949")]
			Curve
		}

		[Token(Token = "0x40002C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mode mode;

		[Token(Token = "0x40002C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float floatValue;

		[Token(Token = "0x40002C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationCurve curve;

		[Token(Token = "0x40002CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string tooltip;

		[Token(Token = "0x6000433")]
		[Address(RVA = "0x176997C", Offset = "0x176997C", VA = "0x176997C")]
		public Weight(float floatValue)
		{
		}

		[Token(Token = "0x6000434")]
		[Address(RVA = "0x17699E8", Offset = "0x17699E8", VA = "0x17699E8")]
		public Weight(float floatValue, string tooltip)
		{
		}

		[Token(Token = "0x6000435")]
		[Address(RVA = "0x1769A64", Offset = "0x1769A64", VA = "0x1769A64")]
		public float GetValue(float param)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000048")]
	public class InitialVelocity : MonoBehaviour
	{
		[Token(Token = "0x40002CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 initialVelocity;

		[Token(Token = "0x6000436")]
		[Address(RVA = "0x190EE08", Offset = "0x190EE08", VA = "0x190EE08")]
		private void Start()
		{
		}

		[Token(Token = "0x6000437")]
		[Address(RVA = "0x190EE70", Offset = "0x190EE70", VA = "0x190EE70")]
		public InitialVelocity()
		{
		}
	}
	[Token(Token = "0x2000049")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xA05F2C", Offset = "0xA05F2C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA05F2C", Offset = "0xA05F2C")]
	public class BipedRagdollCreator : RagdollCreator
	{
		[Serializable]
		[Token(Token = "0x20004D9")]
		public struct Options
		{
			[Token(Token = "0x400194A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float weight;

			[Token(Token = "0x400194B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA20DB0", Offset = "0xA20DB0")]
			public bool spine;

			[Token(Token = "0x400194C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
			public bool chest;

			[Token(Token = "0x400194D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
			public bool hands;

			[Token(Token = "0x400194E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7")]
			public bool feet;

			[Token(Token = "0x400194F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA20DE8", Offset = "0xA20DE8")]
			public JointType joints;

			[Token(Token = "0x4001950")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float jointRange;

			[Token(Token = "0x4001951")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA20E20", Offset = "0xA20E20")]
			public float colliderLengthOverlap;

			[Token(Token = "0x4001952")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public ColliderType torsoColliders;

			[Token(Token = "0x4001953")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ColliderType headCollider;

			[Token(Token = "0x4001954")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public ColliderType armColliders;

			[Token(Token = "0x4001955")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ColliderType handColliders;

			[Token(Token = "0x4001956")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public ColliderType legColliders;

			[Token(Token = "0x4001957")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ColliderType footColliders;

			[Token(Token = "0x1700046E")]
			public static Options Default
			{
				[Token(Token = "0x6002622")]
				[Address(RVA = "0x157FF40", Offset = "0x157FF40", VA = "0x157FF40")]
				get
				{
					return default(Options);
				}
			}
		}

		[Token(Token = "0x40002CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool canBuild;

		[Token(Token = "0x40002CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BipedRagdollReferences references;

		[Token(Token = "0x40002CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Options options;

		[Token(Token = "0x6000438")]
		[Address(RVA = "0x157FC2C", Offset = "0x157FC2C", VA = "0x157FC2C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA26C74", Offset = "0xA26C74")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6000439")]
		[Address(RVA = "0x157FC78", Offset = "0x157FC78", VA = "0x157FC78")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA26CAC", Offset = "0xA26CAC")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x600043A")]
		[Address(RVA = "0x157FCC4", Offset = "0x157FCC4", VA = "0x157FCC4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA26CE4", Offset = "0xA26CE4")]
		private void OpenTutorial()
		{
		}

		[Token(Token = "0x600043B")]
		[Address(RVA = "0x157FD10", Offset = "0x157FD10", VA = "0x157FD10")]
		public static Options AutodetectOptions(BipedRagdollReferences r)
		{
			return default(Options);
		}

		[Token(Token = "0x600043C")]
		[Address(RVA = "0x158004C", Offset = "0x158004C", VA = "0x158004C")]
		public static void Create(BipedRagdollReferences r, Options options)
		{
		}

		[Token(Token = "0x600043D")]
		[Address(RVA = "0x1580960", Offset = "0x1580960", VA = "0x1580960")]
		private static void CreateColliders(BipedRagdollReferences r, Options options)
		{
		}

		[Token(Token = "0x600043E")]
		[Address(RVA = "0x1582308", Offset = "0x1582308", VA = "0x1582308")]
		private static void CreateHandCollider(Transform hand, Transform lowerArm, Transform root, Options options)
		{
		}

		[Token(Token = "0x600043F")]
		[Address(RVA = "0x1582600", Offset = "0x1582600", VA = "0x1582600")]
		private static void CreateFootCollider(Transform foot, Transform lowerLeg, Transform upperLeg, Transform root, Options options)
		{
		}

		[Token(Token = "0x6000440")]
		[Address(RVA = "0x1582C34", Offset = "0x1582C34", VA = "0x1582C34")]
		private static Vector3 GetChildCentroid(Transform t, Vector3 fallback)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000441")]
		[Address(RVA = "0x158159C", Offset = "0x158159C", VA = "0x158159C")]
		private static void MassDistribution(BipedRagdollReferences r, Options o)
		{
		}

		[Token(Token = "0x6000442")]
		[Address(RVA = "0x1581A00", Offset = "0x1581A00", VA = "0x1581A00")]
		private static void CreateJoints(BipedRagdollReferences r, Options o)
		{
		}

		[Token(Token = "0x6000443")]
		[Address(RVA = "0x1582DE4", Offset = "0x1582DE4", VA = "0x1582DE4")]
		private static void CreateLimbJoints(Transform connectedBone, Transform bone1, Transform bone2, Transform bone3, Transform root, Vector3 defaultWorldDirection, JointType jointType, CreateJointParams.Limits limits1, CreateJointParams.Limits limits2, CreateJointParams.Limits limits3)
		{
		}

		[Token(Token = "0x6000444")]
		[Address(RVA = "0x15834E8", Offset = "0x15834E8", VA = "0x15834E8")]
		public static void ClearBipedRagdoll(BipedRagdollReferences r)
		{
		}

		[Token(Token = "0x6000445")]
		[Address(RVA = "0x15838A0", Offset = "0x15838A0", VA = "0x15838A0")]
		public static bool IsClear(BipedRagdollReferences r)
		{
			return default(bool);
		}

		[Token(Token = "0x6000446")]
		[Address(RVA = "0x1582224", Offset = "0x1582224", VA = "0x1582224")]
		private static Vector3 GetUpperArmToHeadCentroid(BipedRagdollReferences r)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000447")]
		[Address(RVA = "0x157FF78", Offset = "0x157FF78", VA = "0x157FF78")]
		private static Vector3 GetUpperArmCentroid(BipedRagdollReferences r)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000448")]
		[Address(RVA = "0x158399C", Offset = "0x158399C", VA = "0x158399C")]
		public BipedRagdollCreator()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200004A")]
	public struct BipedRagdollReferences
	{
		[Token(Token = "0x40002CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform root;

		[Token(Token = "0x40002D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Transform hips;

		[Token(Token = "0x40002D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform spine;

		[Token(Token = "0x40002D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform chest;

		[Token(Token = "0x40002D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform head;

		[Token(Token = "0x40002D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform leftUpperLeg;

		[Token(Token = "0x40002D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform leftLowerLeg;

		[Token(Token = "0x40002D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform leftFoot;

		[Token(Token = "0x40002D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform rightUpperLeg;

		[Token(Token = "0x40002D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform rightLowerLeg;

		[Token(Token = "0x40002D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform rightFoot;

		[Token(Token = "0x40002DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform leftUpperArm;

		[Token(Token = "0x40002DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform leftLowerArm;

		[Token(Token = "0x40002DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform leftHand;

		[Token(Token = "0x40002DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform rightUpperArm;

		[Token(Token = "0x40002DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Transform rightLowerArm;

		[Token(Token = "0x40002DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Transform rightHand;

		[Token(Token = "0x6000449")]
		[Address(RVA = "0xB93974", Offset = "0xB93974", VA = "0xB93974")]
		public bool IsValid(ref string msg)
		{
			return default(bool);
		}

		[Token(Token = "0x600044A")]
		[Address(RVA = "0xB9397C", Offset = "0xB9397C", VA = "0xB9397C")]
		private bool IsChildRecursive(Transform t, Transform parent)
		{
			return default(bool);
		}

		[Token(Token = "0x600044B")]
		[Address(RVA = "0xB93984", Offset = "0xB93984", VA = "0xB93984")]
		public bool IsEmpty(bool considerRoot)
		{
			return default(bool);
		}

		[Token(Token = "0x600044C")]
		[Address(RVA = "0xB93990", Offset = "0xB93990", VA = "0xB93990")]
		public bool Contains(Transform t, bool ignoreRoot = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600044D")]
		[Address(RVA = "0xB9399C", Offset = "0xB9399C", VA = "0xB9399C")]
		public Transform[] GetRagdollTransforms()
		{
			return null;
		}

		[Token(Token = "0x600044E")]
		[Address(RVA = "0x1584224", Offset = "0x1584224", VA = "0x1584224")]
		public static BipedRagdollReferences FromAvatar(Animator animator)
		{
			return default(BipedRagdollReferences);
		}

		[Token(Token = "0x600044F")]
		[Address(RVA = "0x1584440", Offset = "0x1584440", VA = "0x1584440")]
		public static BipedRagdollReferences FromBipedReferences(BipedReferences biped)
		{
			return default(BipedRagdollReferences);
		}
	}
	[Token(Token = "0x200004B")]
	public static class JointConverter
	{
		[Token(Token = "0x6000450")]
		[Address(RVA = "0x190FC7C", Offset = "0x190FC7C", VA = "0x190FC7C")]
		public static void ToConfigurable(GameObject root)
		{
		}

		[Token(Token = "0x6000451")]
		[Address(RVA = "0x1910158", Offset = "0x1910158", VA = "0x1910158")]
		public static void HingeToConfigurable(HingeJoint src)
		{
		}

		[Token(Token = "0x6000452")]
		[Address(RVA = "0x191040C", Offset = "0x191040C", VA = "0x191040C")]
		public static void FixedToConfigurable(FixedJoint src)
		{
		}

		[Token(Token = "0x6000453")]
		[Address(RVA = "0x1910558", Offset = "0x1910558", VA = "0x1910558")]
		public static void SpringToConfigurable(SpringJoint src)
		{
		}

		[Token(Token = "0x6000454")]
		[Address(RVA = "0x190FF18", Offset = "0x190FF18", VA = "0x190FF18")]
		public static void CharacterToConfigurable(CharacterJoint src)
		{
		}

		[Token(Token = "0x6000455")]
		[Address(RVA = "0x1910700", Offset = "0x1910700", VA = "0x1910700")]
		private static void ConvertJoint(ref ConfigurableJoint conf, Joint src)
		{
		}

		[Token(Token = "0x6000456")]
		[Address(RVA = "0x1910838", Offset = "0x1910838", VA = "0x1910838")]
		private static SoftJointLimit ConvertToHighSoftJointLimit(JointLimits src, JointSpring spring, bool useSpring)
		{
			return default(SoftJointLimit);
		}

		[Token(Token = "0x6000457")]
		[Address(RVA = "0x19108F4", Offset = "0x19108F4", VA = "0x19108F4")]
		private static SoftJointLimit ConvertToLowSoftJointLimit(JointLimits src, JointSpring spring, bool useSpring)
		{
			return default(SoftJointLimit);
		}

		[Token(Token = "0x6000458")]
		[Address(RVA = "0x191089C", Offset = "0x191089C", VA = "0x191089C")]
		private static SoftJointLimitSpring ConvertToSoftJointLimitSpring(JointLimits src, JointSpring spring, bool useSpring)
		{
			return default(SoftJointLimitSpring);
		}

		[Token(Token = "0x6000459")]
		[Address(RVA = "0x1910958", Offset = "0x1910958", VA = "0x1910958")]
		private static SoftJointLimit CopyLimit(SoftJointLimit src)
		{
			return default(SoftJointLimit);
		}

		[Token(Token = "0x600045A")]
		[Address(RVA = "0x19109B8", Offset = "0x19109B8", VA = "0x19109B8")]
		private static SoftJointLimitSpring CopyLimitSpring(SoftJointLimitSpring src)
		{
			return default(SoftJointLimitSpring);
		}
	}
	[Token(Token = "0x200004C")]
	public abstract class RagdollCreator : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004DA")]
		public enum ColliderType
		{
			[Token(Token = "0x4001959")]
			Box,
			[Token(Token = "0x400195A")]
			Capsule
		}

		[Serializable]
		[Token(Token = "0x20004DB")]
		public enum JointType
		{
			[Token(Token = "0x400195C")]
			Configurable,
			[Token(Token = "0x400195D")]
			Character
		}

		[Serializable]
		[Token(Token = "0x20004DC")]
		public enum Direction
		{
			[Token(Token = "0x400195F")]
			X,
			[Token(Token = "0x4001960")]
			Y,
			[Token(Token = "0x4001961")]
			Z
		}

		[Token(Token = "0x20004DD")]
		public struct CreateJointParams
		{
			[Token(Token = "0x20006C1")]
			public struct Limits
			{
				[Token(Token = "0x4002100")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public float minSwing;

				[Token(Token = "0x4002101")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
				public float maxSwing;

				[Token(Token = "0x4002102")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public float swing2;

				[Token(Token = "0x4002103")]
				[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
				public float twist;

				[Token(Token = "0x6002C87")]
				[Address(RVA = "0xB9ADE4", Offset = "0xB9ADE4", VA = "0xB9ADE4")]
				public Limits(float minSwing, float maxSwing, float swing2, float twist)
				{
				}
			}

			[Token(Token = "0x4001962")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Rigidbody rigidbody;

			[Token(Token = "0x4001963")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Rigidbody connectedBody;

			[Token(Token = "0x4001964")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform child;

			[Token(Token = "0x4001965")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 worldSwingAxis;

			[Token(Token = "0x4001966")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Limits limits;

			[Token(Token = "0x4001967")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public JointType type;

			[Token(Token = "0x6002623")]
			[Address(RVA = "0xB9ADC4", Offset = "0xB9ADC4", VA = "0xB9ADC4")]
			public CreateJointParams(Rigidbody rigidbody, Rigidbody connectedBody, Transform child, Vector3 worldSwingAxis, Limits limits, JointType type)
			{
			}
		}

		[Token(Token = "0x600045B")]
		[Address(RVA = "0x1765E0C", Offset = "0x1765E0C", VA = "0x1765E0C")]
		public static void ClearAll(Transform root)
		{
		}

		[Token(Token = "0x600045C")]
		[Address(RVA = "0x176600C", Offset = "0x176600C", VA = "0x176600C")]
		protected static void ClearTransform(Transform transform)
		{
		}

		[Token(Token = "0x600045D")]
		[Address(RVA = "0x1766240", Offset = "0x1766240", VA = "0x1766240")]
		protected static void CreateCollider(Transform t, Vector3 startPoint, Vector3 endPoint, ColliderType colliderType, float lengthOverlap, float width)
		{
		}

		[Token(Token = "0x600045E")]
		[Address(RVA = "0x17667BC", Offset = "0x17667BC", VA = "0x17667BC")]
		protected static void CreateCollider(Transform t, Vector3 startPoint, Vector3 endPoint, ColliderType colliderType, float lengthOverlap, float width, float proportionAspect, Vector3 widthDirection)
		{
		}

		[Token(Token = "0x600045F")]
		[Address(RVA = "0x1766634", Offset = "0x1766634", VA = "0x1766634")]
		protected static float GetScaleF(Transform t)
		{
			return default(float);
		}

		[Token(Token = "0x6000460")]
		[Address(RVA = "0x1766BB4", Offset = "0x1766BB4", VA = "0x1766BB4")]
		protected static Vector3 Abs(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000461")]
		[Address(RVA = "0x1766BE4", Offset = "0x1766BE4", VA = "0x1766BE4")]
		protected static void Vector3Abs(ref Vector3 v)
		{
		}

		[Token(Token = "0x6000462")]
		[Address(RVA = "0x1766C64", Offset = "0x1766C64", VA = "0x1766C64")]
		protected static Vector3 DirectionIntToVector3(int dir)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000463")]
		[Address(RVA = "0x1766D1C", Offset = "0x1766D1C", VA = "0x1766D1C")]
		protected static Vector3 DirectionToVector3(Direction dir)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000464")]
		[Address(RVA = "0x1766664", Offset = "0x1766664", VA = "0x1766664")]
		protected static int DirectionVector3ToInt(Vector3 dir)
		{
			return default(int);
		}

		[Token(Token = "0x6000465")]
		[Address(RVA = "0x1766DD4", Offset = "0x1766DD4", VA = "0x1766DD4")]
		protected static Vector3 GetLocalOrthoDirection(Transform transform, Vector3 worldDir)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000466")]
		[Address(RVA = "0x17670EC", Offset = "0x17670EC", VA = "0x17670EC")]
		protected static Rigidbody GetConnectedBody(Transform bone, ref Transform[] bones)
		{
			return null;
		}

		[Token(Token = "0x6000467")]
		[Address(RVA = "0x17672AC", Offset = "0x17672AC", VA = "0x17672AC")]
		protected static void CreateJoint(CreateJointParams p)
		{
		}

		[Token(Token = "0x6000468")]
		[Address(RVA = "0x17678CC", Offset = "0x17678CC", VA = "0x17678CC")]
		private static SoftJointLimit ToSoftJointLimit(float limit)
		{
			return default(SoftJointLimit);
		}

		[Token(Token = "0x6000469")]
		[Address(RVA = "0x1767900", Offset = "0x1767900", VA = "0x1767900")]
		protected RagdollCreator()
		{
		}
	}
	[Token(Token = "0x200004D")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xA05F8C", Offset = "0xA05F8C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA05F8C", Offset = "0xA05F8C")]
	public class RagdollEditor : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004DE")]
		public enum Mode
		{
			[Token(Token = "0x4001969")]
			Colliders,
			[Token(Token = "0x400196A")]
			Joints
		}

		[Token(Token = "0x40002E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public Rigidbody selectedRigidbody;

		[Token(Token = "0x40002E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public Collider selectedCollider;

		[Token(Token = "0x40002E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public bool symmetry;

		[Token(Token = "0x40002E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[HideInInspector]
		public Mode mode;

		[Token(Token = "0x600046A")]
		[Address(RVA = "0x1767934", Offset = "0x1767934", VA = "0x1767934")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA26D1C", Offset = "0xA26D1C")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x600046B")]
		[Address(RVA = "0x1767980", Offset = "0x1767980", VA = "0x1767980")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA26D54", Offset = "0xA26D54")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x600046C")]
		[Address(RVA = "0x17679CC", Offset = "0x17679CC", VA = "0x17679CC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA26D8C", Offset = "0xA26D8C")]
		private void OpenTutorial()
		{
		}

		[Token(Token = "0x600046D")]
		[Address(RVA = "0x1767A18", Offset = "0x1767A18", VA = "0x1767A18")]
		public RagdollEditor()
		{
		}
	}
}
namespace RootMotion.FinalIK
{
	[Token(Token = "0x200004E")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xA05FEC", Offset = "0xA05FEC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA05FEC", Offset = "0xA05FEC")]
	public class BipedIK : SolverManager
	{
		[Token(Token = "0x40002E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public BipedReferences references;

		[Token(Token = "0x40002E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public BipedIKSolvers solvers;

		[Token(Token = "0x600046E")]
		[Address(RVA = "0x176B9F8", Offset = "0x176B9F8", VA = "0x176B9F8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA26DC4", Offset = "0xA26DC4")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x600046F")]
		[Address(RVA = "0x176BA44", Offset = "0x176BA44", VA = "0x176BA44")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA26DFC", Offset = "0xA26DFC")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000470")]
		[Address(RVA = "0x176BA90", Offset = "0x176BA90", VA = "0x176BA90")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA26E34", Offset = "0xA26E34")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000471")]
		[Address(RVA = "0x176BADC", Offset = "0x176BADC", VA = "0x176BADC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA26E6C", Offset = "0xA26E6C")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000472")]
		[Address(RVA = "0x176BB28", Offset = "0x176BB28", VA = "0x176BB28")]
		public float GetIKPositionWeight(AvatarIKGoal goal)
		{
			return default(float);
		}

		[Token(Token = "0x6000473")]
		[Address(RVA = "0x176BBC4", Offset = "0x176BBC4", VA = "0x176BBC4")]
		public float GetIKRotationWeight(AvatarIKGoal goal)
		{
			return default(float);
		}

		[Token(Token = "0x6000474")]
		[Address(RVA = "0x176BBE4", Offset = "0x176BBE4", VA = "0x176BBE4")]
		public void SetIKPositionWeight(AvatarIKGoal goal, float weight)
		{
		}

		[Token(Token = "0x6000475")]
		[Address(RVA = "0x176BC14", Offset = "0x176BC14", VA = "0x176BC14")]
		public void SetIKRotationWeight(AvatarIKGoal goal, float weight)
		{
		}

		[Token(Token = "0x6000476")]
		[Address(RVA = "0x176BC44", Offset = "0x176BC44", VA = "0x176BC44")]
		public void SetIKPosition(AvatarIKGoal goal, Vector3 IKPosition)
		{
		}

		[Token(Token = "0x6000477")]
		[Address(RVA = "0x176BC84", Offset = "0x176BC84", VA = "0x176BC84")]
		public void SetIKRotation(AvatarIKGoal goal, Quaternion IKRotation)
		{
		}

		[Token(Token = "0x6000478")]
		[Address(RVA = "0x176BCC8", Offset = "0x176BCC8", VA = "0x176BCC8")]
		public Vector3 GetIKPosition(AvatarIKGoal goal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000479")]
		[Address(RVA = "0x176BCEC", Offset = "0x176BCEC", VA = "0x176BCEC")]
		public Quaternion GetIKRotation(AvatarIKGoal goal)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600047A")]
		[Address(RVA = "0x176BD10", Offset = "0x176BD10", VA = "0x176BD10")]
		public void SetLookAtWeight(float weight, float bodyWeight, float headWeight, float eyesWeight, float clampWeight, float clampWeightHead, float clampWeightEyes)
		{
		}

		[Token(Token = "0x600047B")]
		[Address(RVA = "0x176BD38", Offset = "0x176BD38", VA = "0x176BD38")]
		public void SetLookAtPosition(Vector3 lookAtPosition)
		{
		}

		[Token(Token = "0x600047C")]
		[Address(RVA = "0x176BD64", Offset = "0x176BD64", VA = "0x176BD64")]
		public void SetSpinePosition(Vector3 spinePosition)
		{
		}

		[Token(Token = "0x600047D")]
		[Address(RVA = "0x176BD90", Offset = "0x176BD90", VA = "0x176BD90")]
		public void SetSpineWeight(float weight)
		{
		}

		[Token(Token = "0x600047E")]
		[Address(RVA = "0x176BB48", Offset = "0x176BB48", VA = "0x176BB48")]
		public IKSolverLimb GetGoalIK(AvatarIKGoal goal)
		{
			return null;
		}

		[Token(Token = "0x600047F")]
		[Address(RVA = "0x176BDB8", Offset = "0x176BDB8", VA = "0x176BDB8")]
		public void InitiateBipedIK()
		{
		}

		[Token(Token = "0x6000480")]
		[Address(RVA = "0x176BDC4", Offset = "0x176BDC4", VA = "0x176BDC4")]
		public void UpdateBipedIK()
		{
		}

		[Token(Token = "0x6000481")]
		[Address(RVA = "0x176BDD0", Offset = "0x176BDD0", VA = "0x176BDD0")]
		public void SetToDefaults()
		{
		}

		[Token(Token = "0x6000482")]
		[Address(RVA = "0x176C0B8", Offset = "0x176C0B8", VA = "0x176C0B8", Slot = "6")]
		protected override void FixTransforms()
		{
		}

		[Token(Token = "0x6000483")]
		[Address(RVA = "0x176C160", Offset = "0x176C160", VA = "0x176C160", Slot = "4")]
		protected override void InitiateSolver()
		{
		}

		[Token(Token = "0x6000484")]
		[Address(RVA = "0x176C4A8", Offset = "0x176C4A8", VA = "0x176C4A8", Slot = "5")]
		protected override void UpdateSolver()
		{
		}

		[Token(Token = "0x6000485")]
		[Address(RVA = "0x176C990", Offset = "0x176C990", VA = "0x176C990")]
		public void LogWarning(string message)
		{
		}

		[Token(Token = "0x6000486")]
		[Address(RVA = "0x176C9C4", Offset = "0x176C9C4", VA = "0x176C9C4")]
		public BipedIK()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200004F")]
	public class BipedIKSolvers
	{
		[Token(Token = "0x40002E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IKSolverLimb leftFoot;

		[Token(Token = "0x40002E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IKSolverLimb rightFoot;

		[Token(Token = "0x40002E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IKSolverLimb leftHand;

		[Token(Token = "0x40002E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IKSolverLimb rightHand;

		[Token(Token = "0x40002EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public IKSolverFABRIK spine;

		[Token(Token = "0x40002EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverLookAt lookAt;

		[Token(Token = "0x40002EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public IKSolverAim aim;

		[Token(Token = "0x40002ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Constraints pelvis;

		[Token(Token = "0x40002EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private IKSolverLimb[] _limbs;

		[Token(Token = "0x40002EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private IKSolver[] _ikSolvers;

		[Token(Token = "0x17000050")]
		public IKSolverLimb[] limbs
		{
			[Token(Token = "0x6000487")]
			[Address(RVA = "0x176BF70", Offset = "0x176BF70", VA = "0x176BF70")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000051")]
		public IKSolver[] ikSolvers
		{
			[Token(Token = "0x6000488")]
			[Address(RVA = "0x176CB90", Offset = "0x176CB90", VA = "0x176CB90")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000489")]
		[Address(RVA = "0x176C330", Offset = "0x176C330", VA = "0x176C330")]
		public void AssignReferences(BipedReferences references)
		{
		}

		[Token(Token = "0x600048A")]
		[Address(RVA = "0x176CA48", Offset = "0x176CA48", VA = "0x176CA48")]
		public BipedIKSolvers()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000050")]
	public abstract class Constraint
	{
		[Token(Token = "0x40002F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform transform;

		[Token(Token = "0x40002F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float weight;

		[Token(Token = "0x17000052")]
		public bool isValid
		{
			[Token(Token = "0x600048B")]
			[Address(RVA = "0x176D190", Offset = "0x176D190", VA = "0x176D190")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600048C")]
		public abstract void UpdateConstraint();

		[Token(Token = "0x600048D")]
		[Address(RVA = "0x176D200", Offset = "0x176D200", VA = "0x176D200")]
		protected Constraint()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000051")]
	public class ConstraintPosition : Constraint
	{
		[Token(Token = "0x40002F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 position;

		[Token(Token = "0x600048E")]
		[Address(RVA = "0x176D208", Offset = "0x176D208", VA = "0x176D208", Slot = "4")]
		public override void UpdateConstraint()
		{
		}

		[Token(Token = "0x600048F")]
		[Address(RVA = "0x176D314", Offset = "0x176D314", VA = "0x176D314")]
		public ConstraintPosition()
		{
		}

		[Token(Token = "0x6000490")]
		[Address(RVA = "0x176D31C", Offset = "0x176D31C", VA = "0x176D31C")]
		public ConstraintPosition(Transform transform)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000052")]
	public class ConstraintPositionOffset : Constraint
	{
		[Token(Token = "0x40002F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 offset;

		[Token(Token = "0x40002F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 defaultLocalPosition;

		[Token(Token = "0x40002F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 lastLocalPosition;

		[Token(Token = "0x40002F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool initiated;

		[Token(Token = "0x17000053")]
		private bool positionChanged
		{
			[Token(Token = "0x6000494")]
			[Address(RVA = "0x176D4E4", Offset = "0x176D4E4", VA = "0x176D4E4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000491")]
		[Address(RVA = "0x176D348", Offset = "0x176D348", VA = "0x176D348", Slot = "4")]
		public override void UpdateConstraint()
		{
		}

		[Token(Token = "0x6000492")]
		[Address(RVA = "0x176D5A0", Offset = "0x176D5A0", VA = "0x176D5A0")]
		public ConstraintPositionOffset()
		{
		}

		[Token(Token = "0x6000493")]
		[Address(RVA = "0x176D5A8", Offset = "0x176D5A8", VA = "0x176D5A8")]
		public ConstraintPositionOffset(Transform transform)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000053")]
	public class ConstraintRotation : Constraint
	{
		[Token(Token = "0x40002F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion rotation;

		[Token(Token = "0x6000495")]
		[Address(RVA = "0x176D5D4", Offset = "0x176D5D4", VA = "0x176D5D4", Slot = "4")]
		public override void UpdateConstraint()
		{
		}

		[Token(Token = "0x6000496")]
		[Address(RVA = "0x176D6FC", Offset = "0x176D6FC", VA = "0x176D6FC")]
		public ConstraintRotation()
		{
		}

		[Token(Token = "0x6000497")]
		[Address(RVA = "0x176D704", Offset = "0x176D704", VA = "0x176D704")]
		public ConstraintRotation(Transform transform)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000054")]
	public class ConstraintRotationOffset : Constraint
	{
		[Token(Token = "0x40002F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion offset;

		[Token(Token = "0x40002F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Quaternion defaultRotation;

		[Token(Token = "0x40002FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion defaultLocalRotation;

		[Token(Token = "0x40002FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Quaternion lastLocalRotation;

		[Token(Token = "0x40002FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Quaternion defaultTargetLocalRotation;

		[Token(Token = "0x40002FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool initiated;

		[Token(Token = "0x17000054")]
		private bool rotationChanged
		{
			[Token(Token = "0x600049B")]
			[Address(RVA = "0x176D8D0", Offset = "0x176D8D0", VA = "0x176D8D0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000498")]
		[Address(RVA = "0x176D730", Offset = "0x176D730", VA = "0x176D730", Slot = "4")]
		public override void UpdateConstraint()
		{
		}

		[Token(Token = "0x6000499")]
		[Address(RVA = "0x176D9A0", Offset = "0x176D9A0", VA = "0x176D9A0")]
		public ConstraintRotationOffset()
		{
		}

		[Token(Token = "0x600049A")]
		[Address(RVA = "0x176D9A8", Offset = "0x176D9A8", VA = "0x176D9A8")]
		public ConstraintRotationOffset(Transform transform)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000055")]
	public class Constraints
	{
		[Token(Token = "0x40002FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform transform;

		[Token(Token = "0x40002FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x4000300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 positionOffset;

		[Token(Token = "0x4000301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 position;

		[Token(Token = "0x4000302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA10A18", Offset = "0xA10A18")]
		public float positionWeight;

		[Token(Token = "0x4000303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 rotationOffset;

		[Token(Token = "0x4000304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 rotation;

		[Token(Token = "0x4000305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA10A30", Offset = "0xA10A30")]
		public float rotationWeight;

		[Token(Token = "0x600049C")]
		[Address(RVA = "0x176D9D4", Offset = "0x176D9D4", VA = "0x176D9D4")]
		public bool IsValid()
		{
			return default(bool);
		}

		[Token(Token = "0x600049D")]
		[Address(RVA = "0x176C454", Offset = "0x176C454", VA = "0x176C454")]
		public void Initiate(Transform transform)
		{
		}

		[Token(Token = "0x600049E")]
		[Address(RVA = "0x176C630", Offset = "0x176C630", VA = "0x176C630")]
		public void Update()
		{
		}

		[Token(Token = "0x600049F")]
		[Address(RVA = "0x176CD5C", Offset = "0x176CD5C", VA = "0x176CD5C")]
		public Constraints()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000056")]
	public class Finger
	{
		[Serializable]
		[Token(Token = "0x20004DF")]
		public enum DOF
		{
			[Token(Token = "0x400196C")]
			One,
			[Token(Token = "0x400196D")]
			Three
		}

		[Token(Token = "0x4000306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA10A48", Offset = "0xA10A48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA10A48", Offset = "0xA10A48")]
		public float weight;

		[Token(Token = "0x4000307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA10A9C", Offset = "0xA10A9C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA10A9C", Offset = "0xA10A9C")]
		public float rotationWeight;

		[Token(Token = "0x4000308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA10AF0", Offset = "0xA10AF0")]
		public DOF rotationDOF;

		[Token(Token = "0x4000309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA10B28", Offset = "0xA10B28")]
		public bool fixBone1Twist;

		[Token(Token = "0x400030A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA10B60", Offset = "0xA10B60")]
		public Transform bone1;

		[Token(Token = "0x400030B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA10B98", Offset = "0xA10B98")]
		public Transform bone2;

		[Token(Token = "0x400030C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA10BD0", Offset = "0xA10BD0")]
		public Transform bone3;

		[Token(Token = "0x400030D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA10C08", Offset = "0xA10C08")]
		public Transform tip;

		[Token(Token = "0x400030E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA10C40", Offset = "0xA10C40")]
		public Transform target;

		[Token(Token = "0x400030F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA10C78", Offset = "0xA10C78")]
		private bool <initiated>k__BackingField;

		[Token(Token = "0x4000310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private IKSolverLimb solver;

		[Token(Token = "0x4000311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Quaternion bone3RelativeToTarget;

		[Token(Token = "0x4000312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 bone3DefaultLocalPosition;

		[Token(Token = "0x4000313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Quaternion bone3DefaultLocalRotation;

		[Token(Token = "0x4000314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector3 bone1Axis;

		[Token(Token = "0x4000315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 tipAxis;

		[Token(Token = "0x4000316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Vector3 bone1TwistAxis;

		[Token(Token = "0x17000055")]
		public bool initiated
		{
			[Token(Token = "0x60004A0")]
			[Address(RVA = "0x1774D0C", Offset = "0x1774D0C", VA = "0x1774D0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA26EA4", Offset = "0xA26EA4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60004A1")]
			[Address(RVA = "0x1774D14", Offset = "0x1774D14", VA = "0x1774D14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA26EB4", Offset = "0xA26EB4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000056")]
		public Vector3 IKPosition
		{
			[Token(Token = "0x60004A2")]
			[Address(RVA = "0x1774D20", Offset = "0x1774D20", VA = "0x1774D20")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60004A3")]
			[Address(RVA = "0x1774D40", Offset = "0x1774D40", VA = "0x1774D40")]
			set
			{
			}
		}

		[Token(Token = "0x17000057")]
		public Quaternion IKRotation
		{
			[Token(Token = "0x60004A4")]
			[Address(RVA = "0x1774D60", Offset = "0x1774D60", VA = "0x1774D60")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x60004A5")]
			[Address(RVA = "0x1774D80", Offset = "0x1774D80", VA = "0x1774D80")]
			set
			{
			}
		}

		[Token(Token = "0x60004A6")]
		[Address(RVA = "0x1774DA0", Offset = "0x1774DA0", VA = "0x1774DA0")]
		public bool IsValid(ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x60004A7")]
		[Address(RVA = "0x1774EA0", Offset = "0x1774EA0", VA = "0x1774EA0")]
		public void Initiate(Transform hand, int index)
		{
		}

		[Token(Token = "0x60004A8")]
		[Address(RVA = "0x1775434", Offset = "0x1775434", VA = "0x1775434")]
		public void FixTransforms()
		{
		}

		[Token(Token = "0x60004A9")]
		[Address(RVA = "0x1775510", Offset = "0x1775510", VA = "0x1775510")]
		public void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x60004AA")]
		[Address(RVA = "0x17755D8", Offset = "0x17755D8", VA = "0x17755D8")]
		public void Update(float masterWeight)
		{
		}

		[Token(Token = "0x60004AB")]
		[Address(RVA = "0x1775D1C", Offset = "0x1775D1C", VA = "0x1775D1C")]
		public Finger()
		{
		}
	}
	[Token(Token = "0x2000057")]
	public class FingerRig : SolverManager
	{
		[Token(Token = "0x4000317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA10C88", Offset = "0xA10C88")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA10C88", Offset = "0xA10C88")]
		public float weight;

		[Token(Token = "0x4000318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Finger[] fingers;

		[Token(Token = "0x4000319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA10CDC", Offset = "0xA10CDC")]
		private bool <initiated>k__BackingField;

		[Token(Token = "0x17000058")]
		public bool initiated
		{
			[Token(Token = "0x60004AC")]
			[Address(RVA = "0x1775D2C", Offset = "0x1775D2C", VA = "0x1775D2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA26EC4", Offset = "0xA26EC4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60004AD")]
			[Address(RVA = "0x1775D34", Offset = "0x1775D34", VA = "0x1775D34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA26ED4", Offset = "0xA26ED4")]
			private set
			{
			}
		}

		[Token(Token = "0x60004AE")]
		[Address(RVA = "0x1775D40", Offset = "0x1775D40", VA = "0x1775D40")]
		public bool IsValid(ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x60004AF")]
		[Address(RVA = "0x1775DC8", Offset = "0x1775DC8", VA = "0x1775DC8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA26EE4", Offset = "0xA26EE4")]
		public void AutoDetect()
		{
		}

		[Token(Token = "0x60004B0")]
		[Address(RVA = "0x17760EC", Offset = "0x17760EC", VA = "0x17760EC")]
		public void AddFinger(Transform bone1, Transform bone2, Transform bone3, Transform tip, [Optional] Transform target)
		{
		}

		[Token(Token = "0x60004B1")]
		[Address(RVA = "0x177625C", Offset = "0x177625C", VA = "0x177625C")]
		public void RemoveFinger(int index)
		{
		}

		[Token(Token = "0x60004B2")]
		[Address(RVA = "0x1775FE4", Offset = "0x1775FE4", VA = "0x1775FE4")]
		private void AddChildrenRecursive(Transform parent, ref Transform[] array)
		{
		}

		[Token(Token = "0x60004B3")]
		[Address(RVA = "0x17763C4", Offset = "0x17763C4", VA = "0x17763C4", Slot = "4")]
		protected override void InitiateSolver()
		{
		}

		[Token(Token = "0x60004B4")]
		[Address(RVA = "0x1776484", Offset = "0x1776484", VA = "0x1776484")]
		public void UpdateFingerSolvers()
		{
		}

		[Token(Token = "0x60004B5")]
		[Address(RVA = "0x17764FC", Offset = "0x17764FC", VA = "0x17764FC")]
		public void FixFingerTransforms()
		{
		}

		[Token(Token = "0x60004B6")]
		[Address(RVA = "0x1776570", Offset = "0x1776570", VA = "0x1776570")]
		public void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x60004B7")]
		[Address(RVA = "0x17765D8", Offset = "0x17765D8", VA = "0x17765D8", Slot = "5")]
		protected override void UpdateSolver()
		{
		}

		[Token(Token = "0x60004B8")]
		[Address(RVA = "0x17765DC", Offset = "0x17765DC", VA = "0x17765DC", Slot = "6")]
		protected override void FixTransforms()
		{
		}

		[Token(Token = "0x60004B9")]
		[Address(RVA = "0x17765F0", Offset = "0x17765F0", VA = "0x17765F0")]
		public FingerRig()
		{
		}
	}
	[Token(Token = "0x2000058")]
	public abstract class Grounder : MonoBehaviour
	{
		[Token(Token = "0x20004E0")]
		public delegate void GrounderDelegate();

		[Token(Token = "0x400031A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA10CEC", Offset = "0xA10CEC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA10CEC", Offset = "0xA10CEC")]
		public float weight;

		[Token(Token = "0x400031B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA10D40", Offset = "0xA10D40")]
		public Grounding solver;

		[Token(Token = "0x400031C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GrounderDelegate OnPreGrounder;

		[Token(Token = "0x400031D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GrounderDelegate OnPostGrounder;

		[Token(Token = "0x400031E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA10D78", Offset = "0xA10D78")]
		private bool <initiated>k__BackingField;

		[Token(Token = "0x17000059")]
		public bool initiated
		{
			[Token(Token = "0x60004BB")]
			[Address(RVA = "0x1777624", Offset = "0x1777624", VA = "0x1777624")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA26F1C", Offset = "0xA26F1C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60004BC")]
			[Address(RVA = "0x177762C", Offset = "0x177762C", VA = "0x177762C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA26F2C", Offset = "0xA26F2C")]
			protected set
			{
			}
		}

		[Token(Token = "0x60004BA")]
		public abstract void ResetPosition();

		[Token(Token = "0x60004BD")]
		[Address(RVA = "0x1777638", Offset = "0x1777638", VA = "0x1777638")]
		protected Vector3 GetSpineOffsetTarget()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60004BE")]
		[Address(RVA = "0x177790C", Offset = "0x177790C", VA = "0x177790C")]
		protected void LogWarning(string message)
		{
		}

		[Token(Token = "0x60004BF")]
		[Address(RVA = "0x177777C", Offset = "0x177777C", VA = "0x177777C")]
		private Vector3 GetLegSpineBendVector(Grounding.Leg leg)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60004C0")]
		[Address(RVA = "0x1777940", Offset = "0x1777940", VA = "0x1777940")]
		private Vector3 GetLegSpineTangent(Grounding.Leg leg)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60004C1")]
		protected abstract void OpenUserManual();

		[Token(Token = "0x60004C2")]
		protected abstract void OpenScriptReference();

		[Token(Token = "0x60004C3")]
		[Address(RVA = "0x1777B48", Offset = "0x1777B48", VA = "0x1777B48")]
		protected Grounder()
		{
		}
	}
	[Token(Token = "0x2000059")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xA0604C", Offset = "0xA0604C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0604C", Offset = "0xA0604C")]
	public class GrounderBipedIK : Grounder
	{
		[Token(Token = "0x400031F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA10D88", Offset = "0xA10D88")]
		public BipedIK ik;

		[Token(Token = "0x4000320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA10DC0", Offset = "0xA10DC0")]
		public float spineBend;

		[Token(Token = "0x4000321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA10DF8", Offset = "0xA10DF8")]
		public float spineSpeed;

		[Token(Token = "0x4000322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform[] feet;

		[Token(Token = "0x4000323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Quaternion[] footRotations;

		[Token(Token = "0x4000324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 animatedPelvisLocalPosition;

		[Token(Token = "0x4000325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 solvedPelvisLocalPosition;

		[Token(Token = "0x4000326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 spineOffset;

		[Token(Token = "0x4000327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float lastWeight;

		[Token(Token = "0x60004C4")]
		[Address(RVA = "0x1777E0C", Offset = "0x1777E0C", VA = "0x1777E0C", Slot = "5")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA26F3C", Offset = "0xA26F3C")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x60004C5")]
		[Address(RVA = "0x1777E58", Offset = "0x1777E58", VA = "0x1777E58", Slot = "6")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA26F74", Offset = "0xA26F74")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x60004C6")]
		[Address(RVA = "0x1777EA4", Offset = "0x1777EA4", VA = "0x1777EA4", Slot = "4")]
		public override void ResetPosition()
		{
		}

		[Token(Token = "0x60004C7")]
		[Address(RVA = "0x1777F28", Offset = "0x1777F28", VA = "0x1777F28")]
		private bool IsReadyToInitiate()
		{
			return default(bool);
		}

		[Token(Token = "0x60004C8")]
		[Address(RVA = "0x1777FD8", Offset = "0x1777FD8", VA = "0x1777FD8")]
		private void Update()
		{
		}

		[Token(Token = "0x60004C9")]
		[Address(RVA = "0x177808C", Offset = "0x177808C", VA = "0x177808C")]
		private void Initiate()
		{
		}

		[Token(Token = "0x60004CA")]
		[Address(RVA = "0x1778344", Offset = "0x1778344", VA = "0x1778344")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60004CB")]
		[Address(RVA = "0x1778398", Offset = "0x1778398", VA = "0x1778398")]
		private void OnSolverUpdate()
		{
		}

		[Token(Token = "0x60004CC")]
		[Address(RVA = "0x17788EC", Offset = "0x17788EC", VA = "0x17788EC")]
		private void SetLegIK(IKSolverLimb limb, int index)
		{
		}

		[Token(Token = "0x60004CD")]
		[Address(RVA = "0x17789C0", Offset = "0x17789C0", VA = "0x17789C0")]
		private void OnPostSolverUpdate()
		{
		}

		[Token(Token = "0x60004CE")]
		[Address(RVA = "0x1778B50", Offset = "0x1778B50", VA = "0x1778B50")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60004CF")]
		[Address(RVA = "0x1778CC0", Offset = "0x1778CC0", VA = "0x1778CC0")]
		public GrounderBipedIK()
		{
		}
	}
	[Token(Token = "0x200005A")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xA060AC", Offset = "0xA060AC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA060AC", Offset = "0xA060AC")]
	public class GrounderFBBIK : Grounder
	{
		[Serializable]
		[Token(Token = "0x20004E1")]
		public class SpineEffector
		{
			[Token(Token = "0x400196E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA20E58", Offset = "0xA20E58")]
			public FullBodyBipedEffector effectorType;

			[Token(Token = "0x400196F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA20E90", Offset = "0xA20E90")]
			public float horizontalWeight;

			[Token(Token = "0x4001970")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA20EC8", Offset = "0xA20EC8")]
			public float verticalWeight;

			[Token(Token = "0x6002628")]
			[Address(RVA = "0x19C991C", Offset = "0x19C991C", VA = "0x19C991C")]
			public SpineEffector()
			{
			}

			[Token(Token = "0x6002629")]
			[Address(RVA = "0x19C992C", Offset = "0x19C992C", VA = "0x19C992C")]
			public SpineEffector(FullBodyBipedEffector effectorType, float horizontalWeight, float verticalWeight)
			{
			}
		}

		[Token(Token = "0x4000328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA10E30", Offset = "0xA10E30")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x4000329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA10E68", Offset = "0xA10E68")]
		public float spineBend;

		[Token(Token = "0x400032A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA10EA0", Offset = "0xA10EA0")]
		public float spineSpeed;

		[Token(Token = "0x400032B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public SpineEffector[] spine;

		[Token(Token = "0x400032C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform[] feet;

		[Token(Token = "0x400032D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 spineOffset;

		[Token(Token = "0x400032E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool firstSolve;

		[Token(Token = "0x60004D0")]
		[Address(RVA = "0x1778D40", Offset = "0x1778D40", VA = "0x1778D40")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA26FAC", Offset = "0xA26FAC")]
		private void OpenTutorial()
		{
		}

		[Token(Token = "0x60004D1")]
		[Address(RVA = "0x1778D8C", Offset = "0x1778D8C", VA = "0x1778D8C", Slot = "5")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA26FE4", Offset = "0xA26FE4")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x60004D2")]
		[Address(RVA = "0x1778DD8", Offset = "0x1778DD8", VA = "0x1778DD8", Slot = "6")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA2701C", Offset = "0xA2701C")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x60004D3")]
		[Address(RVA = "0x1778E24", Offset = "0x1778E24", VA = "0x1778E24", Slot = "4")]
		public override void ResetPosition()
		{
		}

		[Token(Token = "0x60004D4")]
		[Address(RVA = "0x1778EA8", Offset = "0x1778EA8", VA = "0x1778EA8")]
		private bool IsReadyToInitiate()
		{
			return default(bool);
		}

		[Token(Token = "0x60004D5")]
		[Address(RVA = "0x1778F40", Offset = "0x1778F40", VA = "0x1778F40")]
		private void Update()
		{
		}

		[Token(Token = "0x60004D6")]
		[Address(RVA = "0x1779200", Offset = "0x1779200", VA = "0x1779200")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60004D7")]
		[Address(RVA = "0x177920C", Offset = "0x177920C", VA = "0x177920C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60004D8")]
		[Address(RVA = "0x1778FFC", Offset = "0x1778FFC", VA = "0x1778FFC")]
		private void Initiate()
		{
		}

		[Token(Token = "0x60004D9")]
		[Address(RVA = "0x1779218", Offset = "0x1779218", VA = "0x1779218")]
		private void OnSolverUpdate()
		{
		}

		[Token(Token = "0x60004DA")]
		[Address(RVA = "0x17796BC", Offset = "0x17796BC", VA = "0x17796BC")]
		private void SetLegIK(IKEffector effector, Grounding.Leg leg)
		{
		}

		[Token(Token = "0x60004DB")]
		[Address(RVA = "0x177987C", Offset = "0x177987C", VA = "0x177987C")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60004DC")]
		[Address(RVA = "0x17799B4", Offset = "0x17799B4", VA = "0x17799B4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60004DD")]
		[Address(RVA = "0x1779AB4", Offset = "0x1779AB4", VA = "0x1779AB4")]
		public GrounderFBBIK()
		{
		}
	}
	[Token(Token = "0x200005B")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xA0610C", Offset = "0xA0610C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0610C", Offset = "0xA0610C")]
	public class GrounderIK : Grounder
	{
		[Token(Token = "0x400032F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public IK[] legs;

		[Token(Token = "0x4000330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA10ED8", Offset = "0xA10ED8")]
		public Transform pelvis;

		[Token(Token = "0x4000331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA10F10", Offset = "0xA10F10")]
		public Transform characterRoot;

		[Token(Token = "0x4000332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA10F48", Offset = "0xA10F48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA10F48", Offset = "0xA10F48")]
		public float rootRotationWeight;

		[Token(Token = "0x4000333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA10F9C", Offset = "0xA10F9C")]
		public float rootRotationSpeed;

		[Token(Token = "0x4000334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA10FD4", Offset = "0xA10FD4")]
		public float maxRootRotationAngle;

		[Token(Token = "0x4000335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform[] feet;

		[Token(Token = "0x4000336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Quaternion[] footRotations;

		[Token(Token = "0x4000337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 animatedPelvisLocalPosition;

		[Token(Token = "0x4000338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector3 solvedPelvisLocalPosition;

		[Token(Token = "0x4000339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int solvedFeet;

		[Token(Token = "0x400033A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private bool solved;

		[Token(Token = "0x400033B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float lastWeight;

		[Token(Token = "0x400033C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Rigidbody characterRootRigidbody;

		[Token(Token = "0x60004DE")]
		[Address(RVA = "0x19C9974", Offset = "0x19C9974", VA = "0x19C9974", Slot = "5")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA27054", Offset = "0xA27054")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x60004DF")]
		[Address(RVA = "0x19C99C0", Offset = "0x19C99C0", VA = "0x19C99C0", Slot = "6")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA2708C", Offset = "0xA2708C")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x60004E0")]
		[Address(RVA = "0x19C9A0C", Offset = "0x19C9A0C", VA = "0x19C9A0C", Slot = "4")]
		public override void ResetPosition()
		{
		}

		[Token(Token = "0x60004E1")]
		[Address(RVA = "0x19C9AA8", Offset = "0x19C9AA8", VA = "0x19C9AA8")]
		private bool IsReadyToInitiate()
		{
			return default(bool);
		}

		[Token(Token = "0x60004E2")]
		[Address(RVA = "0x19C9C84", Offset = "0x19C9C84", VA = "0x19C9C84")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60004E3")]
		[Address(RVA = "0x19C9D84", Offset = "0x19C9D84", VA = "0x19C9D84")]
		private void Update()
		{
		}

		[Token(Token = "0x60004E4")]
		[Address(RVA = "0x19CA4CC", Offset = "0x19CA4CC", VA = "0x19CA4CC")]
		private void Initiate()
		{
		}

		[Token(Token = "0x60004E5")]
		[Address(RVA = "0x19CAB18", Offset = "0x19CAB18", VA = "0x19CAB18")]
		private void OnSolverUpdate()
		{
		}

		[Token(Token = "0x60004E6")]
		[Address(RVA = "0x19CAFF8", Offset = "0x19CAFF8", VA = "0x19CAFF8")]
		private void SetLegIK(int index)
		{
		}

		[Token(Token = "0x60004E7")]
		[Address(RVA = "0x19CB318", Offset = "0x19CB318", VA = "0x19CB318")]
		private void OnPostSolverUpdate()
		{
		}

		[Token(Token = "0x60004E8")]
		[Address(RVA = "0x19CB4B4", Offset = "0x19CB4B4", VA = "0x19CB4B4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60004E9")]
		[Address(RVA = "0x19CB674", Offset = "0x19CB674", VA = "0x19CB674")]
		public GrounderIK()
		{
		}
	}
	[Token(Token = "0x200005C")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xA0616C", Offset = "0xA0616C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0616C", Offset = "0xA0616C")]
	public class GrounderQuadruped : Grounder
	{
		[Token(Token = "0x20004E2")]
		public struct Foot
		{
			[Token(Token = "0x4001971")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IKSolver solver;

			[Token(Token = "0x4001972")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Transform transform;

			[Token(Token = "0x4001973")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Quaternion rotation;

			[Token(Token = "0x4001974")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Grounding.Leg leg;

			[Token(Token = "0x600262A")]
			[Address(RVA = "0xBA1F28", Offset = "0xBA1F28", VA = "0xBA1F28")]
			public Foot(IKSolver solver, Transform transform)
			{
			}
		}

		[Token(Token = "0x400033D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1100C", Offset = "0xA1100C")]
		public Grounding forelegSolver;

		[Token(Token = "0x400033E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA11044", Offset = "0xA11044")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA11044", Offset = "0xA11044")]
		public float rootRotationWeight;

		[Token(Token = "0x400033F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA11098", Offset = "0xA11098")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA11098", Offset = "0xA11098")]
		public float minRootRotation;

		[Token(Token = "0x4000340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA110F0", Offset = "0xA110F0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA110F0", Offset = "0xA110F0")]
		public float maxRootRotation;

		[Token(Token = "0x4000341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA11148", Offset = "0xA11148")]
		public float rootRotationSpeed;

		[Token(Token = "0x4000342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA11180", Offset = "0xA11180")]
		public float maxLegOffset;

		[Token(Token = "0x4000343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA111B8", Offset = "0xA111B8")]
		public float maxForeLegOffset;

		[Token(Token = "0x4000344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA111F0", Offset = "0xA111F0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA111F0", Offset = "0xA111F0")]
		public float maintainHeadRotationWeight;

		[Token(Token = "0x4000345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA11244", Offset = "0xA11244")]
		public Transform characterRoot;

		[Token(Token = "0x4000346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1127C", Offset = "0xA1127C")]
		public Transform pelvis;

		[Token(Token = "0x4000347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA112B4", Offset = "0xA112B4")]
		public Transform lastSpineBone;

		[Token(Token = "0x4000348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA112EC", Offset = "0xA112EC")]
		public Transform head;

		[Token(Token = "0x4000349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public IK[] legs;

		[Token(Token = "0x400034A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public IK[] forelegs;

		[Token(Token = "0x400034B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public Vector3 gravity;

		[Token(Token = "0x400034C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Foot[] feet;

		[Token(Token = "0x400034D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 animatedPelvisLocalPosition;

		[Token(Token = "0x400034E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private Quaternion animatedPelvisLocalRotation;

		[Token(Token = "0x400034F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private Quaternion animatedHeadLocalRotation;

		[Token(Token = "0x4000350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private Vector3 solvedPelvisLocalPosition;

		[Token(Token = "0x4000351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Quaternion solvedPelvisLocalRotation;

		[Token(Token = "0x4000352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Quaternion solvedHeadLocalRotation;

		[Token(Token = "0x4000353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private int solvedFeet;

		[Token(Token = "0x4000354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private bool solved;

		[Token(Token = "0x4000355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private float angle;

		[Token(Token = "0x4000356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Transform forefeetRoot;

		[Token(Token = "0x4000357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Quaternion headRotation;

		[Token(Token = "0x4000358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private float lastWeight;

		[Token(Token = "0x4000359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private Rigidbody characterRootRigidbody;

		[Token(Token = "0x60004EA")]
		[Address(RVA = "0x19CB6F8", Offset = "0x19CB6F8", VA = "0x19CB6F8", Slot = "5")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA270C4", Offset = "0xA270C4")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x60004EB")]
		[Address(RVA = "0x19CB744", Offset = "0x19CB744", VA = "0x19CB744", Slot = "6")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA270FC", Offset = "0xA270FC")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x60004EC")]
		[Address(RVA = "0x19CB790", Offset = "0x19CB790", VA = "0x19CB790", Slot = "4")]
		public override void ResetPosition()
		{
		}

		[Token(Token = "0x60004ED")]
		[Address(RVA = "0x19CB7C4", Offset = "0x19CB7C4", VA = "0x19CB7C4")]
		private bool IsReadyToInitiate()
		{
			return default(bool);
		}

		[Token(Token = "0x60004EE")]
		[Address(RVA = "0x19CB8F4", Offset = "0x19CB8F4", VA = "0x19CB8F4")]
		private bool IsReadyToInitiateLegs(IK[] ikComponents)
		{
			return default(bool);
		}

		[Token(Token = "0x60004EF")]
		[Address(RVA = "0x19CBAA0", Offset = "0x19CBAA0", VA = "0x19CBAA0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60004F0")]
		[Address(RVA = "0x19CBB08", Offset = "0x19CBB08", VA = "0x19CBB08")]
		private void Update()
		{
		}

		[Token(Token = "0x60004F1")]
		[Address(RVA = "0x19CBBC0", Offset = "0x19CBBC0", VA = "0x19CBBC0")]
		private void Initiate()
		{
		}

		[Token(Token = "0x60004F2")]
		[Address(RVA = "0x19CBEC0", Offset = "0x19CBEC0", VA = "0x19CBEC0")]
		private Transform[] InitiateFeet(IK[] ikComponents, ref Foot[] f, int indexOffset)
		{
			return null;
		}

		[Token(Token = "0x60004F3")]
		[Address(RVA = "0x19CC204", Offset = "0x19CC204", VA = "0x19CC204")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60004F4")]
		[Address(RVA = "0x19CC350", Offset = "0x19CC350", VA = "0x19CC350")]
		private void RootRotation()
		{
		}

		[Token(Token = "0x60004F5")]
		[Address(RVA = "0x19CC7F4", Offset = "0x19CC7F4", VA = "0x19CC7F4")]
		private void OnSolverUpdate()
		{
		}

		[Token(Token = "0x60004F6")]
		[Address(RVA = "0x19CCFEC", Offset = "0x19CCFEC", VA = "0x19CCFEC")]
		private void UpdateForefeetRoot()
		{
		}

		[Token(Token = "0x60004F7")]
		[Address(RVA = "0x19CD2AC", Offset = "0x19CD2AC", VA = "0x19CD2AC")]
		private void SetFootIK(Foot foot, float maxOffset)
		{
		}

		[Token(Token = "0x60004F8")]
		[Address(RVA = "0x19CD40C", Offset = "0x19CD40C", VA = "0x19CD40C")]
		private void OnPostSolverUpdate()
		{
		}

		[Token(Token = "0x60004F9")]
		[Address(RVA = "0x19CD6E8", Offset = "0x19CD6E8", VA = "0x19CD6E8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60004FA")]
		[Address(RVA = "0x19CD720", Offset = "0x19CD720", VA = "0x19CD720")]
		private void DestroyLegs(IK[] ikComponents)
		{
		}

		[Token(Token = "0x60004FB")]
		[Address(RVA = "0x19CD8D8", Offset = "0x19CD8D8", VA = "0x19CD8D8")]
		public GrounderQuadruped()
		{
		}
	}
	[Token(Token = "0x200005D")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xA061CC", Offset = "0xA061CC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA061CC", Offset = "0xA061CC")]
	public class GrounderVRIK : Grounder
	{
		[Token(Token = "0x400035A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA11334", Offset = "0xA11334")]
		public VRIK ik;

		[Token(Token = "0x400035B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform[] feet;

		[Token(Token = "0x60004FC")]
		[Address(RVA = "0x19CDA48", Offset = "0x19CDA48", VA = "0x19CDA48")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA27134", Offset = "0xA27134")]
		private void OpenTutorial()
		{
		}

		[Token(Token = "0x60004FD")]
		[Address(RVA = "0x19CDA94", Offset = "0x19CDA94", VA = "0x19CDA94", Slot = "5")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA2716C", Offset = "0xA2716C")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x60004FE")]
		[Address(RVA = "0x19CDAE0", Offset = "0x19CDAE0", VA = "0x19CDAE0", Slot = "6")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA271A4", Offset = "0xA271A4")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x60004FF")]
		[Address(RVA = "0x19CDB2C", Offset = "0x19CDB2C", VA = "0x19CDB2C", Slot = "4")]
		public override void ResetPosition()
		{
		}

		[Token(Token = "0x6000500")]
		[Address(RVA = "0x19CDB44", Offset = "0x19CDB44", VA = "0x19CDB44")]
		private bool IsReadyToInitiate()
		{
			return default(bool);
		}

		[Token(Token = "0x6000501")]
		[Address(RVA = "0x19CDBDC", Offset = "0x19CDBDC", VA = "0x19CDBDC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000502")]
		[Address(RVA = "0x19CDC90", Offset = "0x19CDC90", VA = "0x19CDC90")]
		private void Initiate()
		{
		}

		[Token(Token = "0x6000503")]
		[Address(RVA = "0x19CDE80", Offset = "0x19CDE80", VA = "0x19CDE80")]
		private void OnSolverUpdate()
		{
		}

		[Token(Token = "0x6000504")]
		[Address(RVA = "0x19CE11C", Offset = "0x19CE11C", VA = "0x19CE11C")]
		private void SetLegIK(IKSolverVR.PositionOffset positionOffset, Transform bone, Grounding.Leg leg)
		{
		}

		[Token(Token = "0x6000505")]
		[Address(RVA = "0x19CE224", Offset = "0x19CE224", VA = "0x19CE224")]
		private void OnPostSolverUpdate()
		{
		}

		[Token(Token = "0x6000506")]
		[Address(RVA = "0x19CE424", Offset = "0x19CE424", VA = "0x19CE424")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000507")]
		[Address(RVA = "0x19CE55C", Offset = "0x19CE55C", VA = "0x19CE55C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000508")]
		[Address(RVA = "0x19CE6AC", Offset = "0x19CE6AC", VA = "0x19CE6AC")]
		public GrounderVRIK()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200005E")]
	public class Grounding
	{
		[Serializable]
		[Token(Token = "0x20004E3")]
		public enum Quality
		{
			[Token(Token = "0x4001976")]
			Fastest,
			[Token(Token = "0x4001977")]
			Simple,
			[Token(Token = "0x4001978")]
			Best
		}

		[Token(Token = "0x20004E4")]
		public class Leg
		{
			[Token(Token = "0x4001979")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA20F00", Offset = "0xA20F00")]
			private bool <isGrounded>k__BackingField;

			[Token(Token = "0x400197A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA20F10", Offset = "0xA20F10")]
			private Vector3 <IKPosition>k__BackingField;

			[Token(Token = "0x400197B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Quaternion rotationOffset;

			[Token(Token = "0x400197C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA20F20", Offset = "0xA20F20")]
			private bool <initiated>k__BackingField;

			[Token(Token = "0x400197D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA20F30", Offset = "0xA20F30")]
			private float <heightFromGround>k__BackingField;

			[Token(Token = "0x400197E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA20F40", Offset = "0xA20F40")]
			private Vector3 <velocity>k__BackingField;

			[Token(Token = "0x400197F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA20F50", Offset = "0xA20F50")]
			private Transform <transform>k__BackingField;

			[Token(Token = "0x4001980")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA20F60", Offset = "0xA20F60")]
			private float <IKOffset>k__BackingField;

			[Token(Token = "0x4001981")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public bool invertFootCenter;

			[Token(Token = "0x4001982")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA20F70", Offset = "0xA20F70")]
			private RaycastHit <heelHit>k__BackingField;

			[Token(Token = "0x4001983")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA20F80", Offset = "0xA20F80")]
			private RaycastHit <capsuleHit>k__BackingField;

			[Token(Token = "0x4001984")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			private Grounding grounding;

			[Token(Token = "0x4001985")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			private float lastTime;

			[Token(Token = "0x4001986")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
			private float deltaTime;

			[Token(Token = "0x4001987")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			private Vector3 lastPosition;

			[Token(Token = "0x4001988")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
			private Quaternion toHitNormal;

			[Token(Token = "0x4001989")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
			private Quaternion r;

			[Token(Token = "0x400198A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
			private Vector3 up;

			[Token(Token = "0x400198B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			private bool doOverrideFootPosition;

			[Token(Token = "0x400198C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
			private Vector3 overrideFootPosition;

			[Token(Token = "0x400198D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
			private Vector3 transformPosition;

			[Token(Token = "0x1700046F")]
			public bool isGrounded
			{
				[Token(Token = "0x600262B")]
				[Address(RVA = "0x19CFFB0", Offset = "0x19CFFB0", VA = "0x19CFFB0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2EF70", Offset = "0xA2EF70")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x600262C")]
				[Address(RVA = "0x19CFFB8", Offset = "0x19CFFB8", VA = "0x19CFFB8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2EF80", Offset = "0xA2EF80")]
				private set
				{
				}
			}

			[Token(Token = "0x17000470")]
			public Vector3 IKPosition
			{
				[Token(Token = "0x600262D")]
				[Address(RVA = "0x19CFFC4", Offset = "0x19CFFC4", VA = "0x19CFFC4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2EF90", Offset = "0xA2EF90")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x600262E")]
				[Address(RVA = "0x19CFFD0", Offset = "0x19CFFD0", VA = "0x19CFFD0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2EFA0", Offset = "0xA2EFA0")]
				private set
				{
				}
			}

			[Token(Token = "0x17000471")]
			public bool initiated
			{
				[Token(Token = "0x600262F")]
				[Address(RVA = "0x19CFFDC", Offset = "0x19CFFDC", VA = "0x19CFFDC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2EFB0", Offset = "0xA2EFB0")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6002630")]
				[Address(RVA = "0x19CFFE4", Offset = "0x19CFFE4", VA = "0x19CFFE4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2EFC0", Offset = "0xA2EFC0")]
				private set
				{
				}
			}

			[Token(Token = "0x17000472")]
			public float heightFromGround
			{
				[Token(Token = "0x6002631")]
				[Address(RVA = "0x19CFFF0", Offset = "0x19CFFF0", VA = "0x19CFFF0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2EFD0", Offset = "0xA2EFD0")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6002632")]
				[Address(RVA = "0x19CFFF8", Offset = "0x19CFFF8", VA = "0x19CFFF8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2EFE0", Offset = "0xA2EFE0")]
				private set
				{
				}
			}

			[Token(Token = "0x17000473")]
			public Vector3 velocity
			{
				[Token(Token = "0x6002633")]
				[Address(RVA = "0x19D0000", Offset = "0x19D0000", VA = "0x19D0000")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2EFF0", Offset = "0xA2EFF0")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6002634")]
				[Address(RVA = "0x19D000C", Offset = "0x19D000C", VA = "0x19D000C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2F000", Offset = "0xA2F000")]
				private set
				{
				}
			}

			[Token(Token = "0x17000474")]
			public Transform transform
			{
				[Token(Token = "0x6002635")]
				[Address(RVA = "0x19D0018", Offset = "0x19D0018", VA = "0x19D0018")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2F010", Offset = "0xA2F010")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002636")]
				[Address(RVA = "0x19D0020", Offset = "0x19D0020", VA = "0x19D0020")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2F020", Offset = "0xA2F020")]
				private set
				{
				}
			}

			[Token(Token = "0x17000475")]
			public float IKOffset
			{
				[Token(Token = "0x6002637")]
				[Address(RVA = "0x19D0028", Offset = "0x19D0028", VA = "0x19D0028")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2F030", Offset = "0xA2F030")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6002638")]
				[Address(RVA = "0x19D0030", Offset = "0x19D0030", VA = "0x19D0030")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2F040", Offset = "0xA2F040")]
				private set
				{
				}
			}

			[Token(Token = "0x17000476")]
			public RaycastHit heelHit
			{
				[Token(Token = "0x6002639")]
				[Address(RVA = "0x19D0038", Offset = "0x19D0038", VA = "0x19D0038")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2F050", Offset = "0xA2F050")]
				get
				{
					return default(RaycastHit);
				}
				[Token(Token = "0x600263A")]
				[Address(RVA = "0x19D0050", Offset = "0x19D0050", VA = "0x19D0050")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2F060", Offset = "0xA2F060")]
				private set
				{
				}
			}

			[Token(Token = "0x17000477")]
			public RaycastHit capsuleHit
			{
				[Token(Token = "0x600263B")]
				[Address(RVA = "0x19D0070", Offset = "0x19D0070", VA = "0x19D0070")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2F070", Offset = "0xA2F070")]
				get
				{
					return default(RaycastHit);
				}
				[Token(Token = "0x600263C")]
				[Address(RVA = "0x19D0088", Offset = "0x19D0088", VA = "0x19D0088")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2F080", Offset = "0xA2F080")]
				private set
				{
				}
			}

			[Token(Token = "0x17000478")]
			public RaycastHit GetHitPoint
			{
				[Token(Token = "0x600263D")]
				[Address(RVA = "0x19D00A8", Offset = "0x19D00A8", VA = "0x19D00A8")]
				get
				{
					return default(RaycastHit);
				}
			}

			[Token(Token = "0x17000479")]
			public float stepHeightFromGround
			{
				[Token(Token = "0x6002643")]
				[Address(RVA = "0x19D0E64", Offset = "0x19D0E64", VA = "0x19D0E64")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x1700047A")]
			private float rootYOffset
			{
				[Token(Token = "0x600264C")]
				[Address(RVA = "0x19D113C", Offset = "0x19D113C", VA = "0x19D113C")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x600263E")]
			[Address(RVA = "0x19D00F0", Offset = "0x19D00F0", VA = "0x19D00F0")]
			public void SetFootPosition(Vector3 position)
			{
			}

			[Token(Token = "0x600263F")]
			[Address(RVA = "0x19CEDD4", Offset = "0x19CEDD4", VA = "0x19CEDD4")]
			public void Initiate(Grounding grounding, Transform transform)
			{
			}

			[Token(Token = "0x6002640")]
			[Address(RVA = "0x19D0104", Offset = "0x19D0104", VA = "0x19D0104")]
			public void OnEnable()
			{
			}

			[Token(Token = "0x6002641")]
			[Address(RVA = "0x19CFAD0", Offset = "0x19CFAD0", VA = "0x19CFAD0")]
			public void Reset()
			{
			}

			[Token(Token = "0x6002642")]
			[Address(RVA = "0x19CEEE0", Offset = "0x19CEEE0", VA = "0x19CEEE0")]
			public void Process()
			{
			}

			[Token(Token = "0x6002644")]
			[Address(RVA = "0x19D08DC", Offset = "0x19D08DC", VA = "0x19D08DC")]
			private RaycastHit GetCapsuleHit(Vector3 offsetFromHeel)
			{
				return default(RaycastHit);
			}

			[Token(Token = "0x6002645")]
			[Address(RVA = "0x19D0150", Offset = "0x19D0150", VA = "0x19D0150")]
			private RaycastHit GetRaycastHit(Vector3 offsetFromHeel)
			{
				return default(RaycastHit);
			}

			[Token(Token = "0x6002646")]
			[Address(RVA = "0x19D0FE4", Offset = "0x19D0FE4", VA = "0x19D0FE4")]
			private Vector3 RotateNormal(Vector3 normal)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002647")]
			[Address(RVA = "0x19D0588", Offset = "0x19D0588", VA = "0x19D0588")]
			private void SetFootToPoint(Vector3 normal, Vector3 point)
			{
			}

			[Token(Token = "0x6002648")]
			[Address(RVA = "0x19D0690", Offset = "0x19D0690", VA = "0x19D0690")]
			private void SetFootToPlane(Vector3 planeNormal, Vector3 planePoint, Vector3 heelHitPoint)
			{
			}

			[Token(Token = "0x6002649")]
			[Address(RVA = "0x19D10E0", Offset = "0x19D10E0", VA = "0x19D10E0")]
			private float GetHeightFromGround(Vector3 hitPoint)
			{
				return default(float);
			}

			[Token(Token = "0x600264A")]
			[Address(RVA = "0x19D0EF0", Offset = "0x19D0EF0", VA = "0x19D0EF0")]
			private void RotateFoot()
			{
			}

			[Token(Token = "0x600264B")]
			[Address(RVA = "0x19D1264", Offset = "0x19D1264", VA = "0x19D1264")]
			private Quaternion GetRotationOffsetTarget()
			{
				return default(Quaternion);
			}

			[Token(Token = "0x600264D")]
			[Address(RVA = "0x19CED24", Offset = "0x19CED24", VA = "0x19CED24")]
			public Leg()
			{
			}
		}

		[Token(Token = "0x20004E5")]
		public class Pelvis
		{
			[Token(Token = "0x400198E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA20F90", Offset = "0xA20F90")]
			private Vector3 <IKOffset>k__BackingField;

			[Token(Token = "0x400198F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA20FA0", Offset = "0xA20FA0")]
			private float <heightOffset>k__BackingField;

			[Token(Token = "0x4001990")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Grounding grounding;

			[Token(Token = "0x4001991")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 lastRootPosition;

			[Token(Token = "0x4001992")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float damperF;

			[Token(Token = "0x4001993")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private bool initiated;

			[Token(Token = "0x4001994")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float lastTime;

			[Token(Token = "0x1700047B")]
			public Vector3 IKOffset
			{
				[Token(Token = "0x600264E")]
				[Address(RVA = "0x19D1354", Offset = "0x19D1354", VA = "0x19D1354")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2F090", Offset = "0xA2F090")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x600264F")]
				[Address(RVA = "0x19D1360", Offset = "0x19D1360", VA = "0x19D1360")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2F0A0", Offset = "0xA2F0A0")]
				private set
				{
				}
			}

			[Token(Token = "0x1700047C")]
			public float heightOffset
			{
				[Token(Token = "0x6002650")]
				[Address(RVA = "0x19D136C", Offset = "0x19D136C", VA = "0x19D136C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2F0B0", Offset = "0xA2F0B0")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6002651")]
				[Address(RVA = "0x19D1374", Offset = "0x19D1374", VA = "0x19D1374")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2F0C0", Offset = "0xA2F0C0")]
				private set
				{
				}
			}

			[Token(Token = "0x6002652")]
			[Address(RVA = "0x19CEEB8", Offset = "0x19CEEB8", VA = "0x19CEEB8")]
			public void Initiate(Grounding grounding)
			{
			}

			[Token(Token = "0x6002653")]
			[Address(RVA = "0x19CFA20", Offset = "0x19CFA20", VA = "0x19CFA20")]
			public void Reset()
			{
			}

			[Token(Token = "0x6002654")]
			[Address(RVA = "0x19D137C", Offset = "0x19D137C", VA = "0x19D137C")]
			public void OnEnable()
			{
			}

			[Token(Token = "0x6002655")]
			[Address(RVA = "0x19CF7B4", Offset = "0x19CF7B4", VA = "0x19CF7B4")]
			public void Process(float lowestOffset, float highestOffset, bool isGrounded)
			{
			}

			[Token(Token = "0x6002656")]
			[Address(RVA = "0x19CEDCC", Offset = "0x19CEDCC", VA = "0x19CEDCC")]
			public Pelvis()
			{
			}
		}

		[Token(Token = "0x400035C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1136C", Offset = "0xA1136C")]
		public LayerMask layers;

		[Token(Token = "0x400035D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA113A4", Offset = "0xA113A4")]
		public float maxStep;

		[Token(Token = "0x400035E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA113DC", Offset = "0xA113DC")]
		public float heightOffset;

		[Token(Token = "0x400035F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA11414", Offset = "0xA11414")]
		public float footSpeed;

		[Token(Token = "0x4000360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1144C", Offset = "0xA1144C")]
		public float footRadius;

		[Token(Token = "0x4000361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA11484", Offset = "0xA11484")]
		[HideInInspector]
		public float footCenterOffset;

		[Token(Token = "0x4000362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA114D0", Offset = "0xA114D0")]
		public float prediction;

		[Token(Token = "0x4000363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA11508", Offset = "0xA11508")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA11508", Offset = "0xA11508")]
		public float footRotationWeight;

		[Token(Token = "0x4000364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1155C", Offset = "0xA1155C")]
		public float footRotationSpeed;

		[Token(Token = "0x4000365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA11594", Offset = "0xA11594")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA11594", Offset = "0xA11594")]
		public float maxFootRotationAngle;

		[Token(Token = "0x4000366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA115EC", Offset = "0xA115EC")]
		public bool rotateSolver;

		[Token(Token = "0x4000367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA11624", Offset = "0xA11624")]
		public float pelvisSpeed;

		[Token(Token = "0x4000368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1165C", Offset = "0xA1165C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA1165C", Offset = "0xA1165C")]
		public float pelvisDamper;

		[Token(Token = "0x4000369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA116B0", Offset = "0xA116B0")]
		public float lowerPelvisWeight;

		[Token(Token = "0x400036A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA116E8", Offset = "0xA116E8")]
		public float liftPelvisWeight;

		[Token(Token = "0x400036B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA11720", Offset = "0xA11720")]
		public float rootSphereCastRadius;

		[Token(Token = "0x400036C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA11758", Offset = "0xA11758")]
		public bool overstepFallsDown;

		[Token(Token = "0x400036D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA11790", Offset = "0xA11790")]
		public Quality quality;

		[Token(Token = "0x400036E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA117C8", Offset = "0xA117C8")]
		private Leg[] <legs>k__BackingField;

		[Token(Token = "0x400036F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA117D8", Offset = "0xA117D8")]
		private Pelvis <pelvis>k__BackingField;

		[Token(Token = "0x4000370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA117E8", Offset = "0xA117E8")]
		private bool <isGrounded>k__BackingField;

		[Token(Token = "0x4000371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA117F8", Offset = "0xA117F8")]
		private Transform <root>k__BackingField;

		[Token(Token = "0x4000372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA11808", Offset = "0xA11808")]
		private RaycastHit <rootHit>k__BackingField;

		[Token(Token = "0x4000373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool initiated;

		[Token(Token = "0x1700005A")]
		public Leg[] legs
		{
			[Token(Token = "0x6000509")]
			[Address(RVA = "0x19CE70C", Offset = "0x19CE70C", VA = "0x19CE70C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA271DC", Offset = "0xA271DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600050A")]
			[Address(RVA = "0x19CE714", Offset = "0x19CE714", VA = "0x19CE714")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA271EC", Offset = "0xA271EC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700005B")]
		public Pelvis pelvis
		{
			[Token(Token = "0x600050B")]
			[Address(RVA = "0x19CE71C", Offset = "0x19CE71C", VA = "0x19CE71C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA271FC", Offset = "0xA271FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600050C")]
			[Address(RVA = "0x19CE724", Offset = "0x19CE724", VA = "0x19CE724")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2720C", Offset = "0xA2720C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700005C")]
		public bool isGrounded
		{
			[Token(Token = "0x600050D")]
			[Address(RVA = "0x19CE72C", Offset = "0x19CE72C", VA = "0x19CE72C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2721C", Offset = "0xA2721C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600050E")]
			[Address(RVA = "0x19CE734", Offset = "0x19CE734", VA = "0x19CE734")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2722C", Offset = "0xA2722C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700005D")]
		public Transform root
		{
			[Token(Token = "0x600050F")]
			[Address(RVA = "0x19CE740", Offset = "0x19CE740", VA = "0x19CE740")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2723C", Offset = "0xA2723C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000510")]
			[Address(RVA = "0x19CE748", Offset = "0x19CE748", VA = "0x19CE748")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2724C", Offset = "0xA2724C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700005E")]
		public RaycastHit rootHit
		{
			[Token(Token = "0x6000511")]
			[Address(RVA = "0x19CE750", Offset = "0x19CE750", VA = "0x19CE750")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2725C", Offset = "0xA2725C")]
			get
			{
				return default(RaycastHit);
			}
			[Token(Token = "0x6000512")]
			[Address(RVA = "0x19CE768", Offset = "0x19CE768", VA = "0x19CE768")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2726C", Offset = "0xA2726C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700005F")]
		public bool rootGrounded
		{
			[Token(Token = "0x6000513")]
			[Address(RVA = "0x19CE788", Offset = "0x19CE788", VA = "0x19CE788")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000060")]
		public Vector3 up
		{
			[Token(Token = "0x600051B")]
			[Address(RVA = "0x19CEBBC", Offset = "0x19CEBBC", VA = "0x19CEBBC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000061")]
		private bool useRootRotation
		{
			[Token(Token = "0x600051E")]
			[Address(RVA = "0x19CFB84", Offset = "0x19CFB84", VA = "0x19CFB84")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000514")]
		[Address(RVA = "0x19CE7DC", Offset = "0x19CE7DC", VA = "0x19CE7DC")]
		public RaycastHit GetRootHit(float maxDistanceMlp = 10f)
		{
			return default(RaycastHit);
		}

		[Token(Token = "0x6000515")]
		[Address(RVA = "0x19CEC48", Offset = "0x19CEC48", VA = "0x19CEC48")]
		public bool IsValid(ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000516")]
		[Address(RVA = "0x19CA8B8", Offset = "0x19CA8B8", VA = "0x19CA8B8")]
		public void Initiate(Transform root, Transform[] feet)
		{
		}

		[Token(Token = "0x6000517")]
		[Address(RVA = "0x19CAD90", Offset = "0x19CAD90", VA = "0x19CAD90")]
		public void Update()
		{
		}

		[Token(Token = "0x6000518")]
		[Address(RVA = "0x19CA2B4", Offset = "0x19CA2B4", VA = "0x19CA2B4")]
		public Vector3 GetLegsPlaneNormal()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000519")]
		[Address(RVA = "0x19C9A24", Offset = "0x19C9A24", VA = "0x19C9A24")]
		public void Reset()
		{
		}

		[Token(Token = "0x600051A")]
		[Address(RVA = "0x19CEEC8", Offset = "0x19CEEC8", VA = "0x19CEEC8")]
		public void LogWarning(string message)
		{
		}

		[Token(Token = "0x600051C")]
		[Address(RVA = "0x19CFC54", Offset = "0x19CFC54", VA = "0x19CFC54")]
		public float GetVerticalOffset(Vector3 p1, Vector3 p2)
		{
			return default(float);
		}

		[Token(Token = "0x600051D")]
		[Address(RVA = "0x19CFDBC", Offset = "0x19CFDBC", VA = "0x19CFDBC")]
		public Vector3 Flatten(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600051F")]
		[Address(RVA = "0x19CFEC0", Offset = "0x19CFEC0", VA = "0x19CFEC0")]
		public Vector3 GetFootCenterOffset()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000520")]
		[Address(RVA = "0x19CD9F4", Offset = "0x19CD9F4", VA = "0x19CD9F4")]
		public Grounding()
		{
		}
	}
	[Token(Token = "0x200005F")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xA0622C", Offset = "0xA0622C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0622C", Offset = "0xA0622C")]
	public class AimIK : IK
	{
		[Token(Token = "0x4000374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverAim solver;

		[Token(Token = "0x6000521")]
		[Address(RVA = "0x176AC24", Offset = "0x176AC24", VA = "0x176AC24", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA2727C", Offset = "0xA2727C")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000522")]
		[Address(RVA = "0x176AC70", Offset = "0x176AC70", VA = "0x176AC70", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA272B4", Offset = "0xA272B4")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000523")]
		[Address(RVA = "0x176ACBC", Offset = "0x176ACBC", VA = "0x176ACBC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA272EC", Offset = "0xA272EC")]
		private void OpenSetupTutorial()
		{
		}

		[Token(Token = "0x6000524")]
		[Address(RVA = "0x176AD08", Offset = "0x176AD08", VA = "0x176AD08")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA27324", Offset = "0xA27324")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000525")]
		[Address(RVA = "0x176AD54", Offset = "0x176AD54", VA = "0x176AD54")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA2735C", Offset = "0xA2735C")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000526")]
		[Address(RVA = "0x176ADA0", Offset = "0x176ADA0", VA = "0x176ADA0", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x6000527")]
		[Address(RVA = "0x176ADA8", Offset = "0x176ADA8", VA = "0x176ADA8")]
		public AimIK()
		{
		}
	}
	[Token(Token = "0x2000060")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xA0628C", Offset = "0xA0628C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0628C", Offset = "0xA0628C")]
	public class ArmIK : IK
	{
		[Token(Token = "0x4000375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverArm solver;

		[Token(Token = "0x6000528")]
		[Address(RVA = "0x176B858", Offset = "0x176B858", VA = "0x176B858", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA27394", Offset = "0xA27394")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000529")]
		[Address(RVA = "0x176B8A4", Offset = "0x176B8A4", VA = "0x176B8A4", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA273CC", Offset = "0xA273CC")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x600052A")]
		[Address(RVA = "0x176B8F0", Offset = "0x176B8F0", VA = "0x176B8F0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA27404", Offset = "0xA27404")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x600052B")]
		[Address(RVA = "0x176B93C", Offset = "0x176B93C", VA = "0x176B93C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA2743C", Offset = "0xA2743C")]
		private void ASThread()
		{
		}

		[Token(Token = "0x600052C")]
		[Address(RVA = "0x176B988", Offset = "0x176B988", VA = "0x176B988", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x600052D")]
		[Address(RVA = "0x176B990", Offset = "0x176B990", VA = "0x176B990")]
		public ArmIK()
		{
		}
	}
	[Token(Token = "0x2000061")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xA062EC", Offset = "0xA062EC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA062EC", Offset = "0xA062EC")]
	public class CCDIK : IK
	{
		[Token(Token = "0x4000376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverCCD solver;

		[Token(Token = "0x600052E")]
		[Address(RVA = "0x176CFF0", Offset = "0x176CFF0", VA = "0x176CFF0", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA27474", Offset = "0xA27474")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x600052F")]
		[Address(RVA = "0x176D03C", Offset = "0x176D03C", VA = "0x176D03C", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA274AC", Offset = "0xA274AC")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000530")]
		[Address(RVA = "0x176D088", Offset = "0x176D088", VA = "0x176D088")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA274E4", Offset = "0xA274E4")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000531")]
		[Address(RVA = "0x176D0D4", Offset = "0x176D0D4", VA = "0x176D0D4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA2751C", Offset = "0xA2751C")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000532")]
		[Address(RVA = "0x176D120", Offset = "0x176D120", VA = "0x176D120", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x6000533")]
		[Address(RVA = "0x176D128", Offset = "0x176D128", VA = "0x176D128")]
		public CCDIK()
		{
		}
	}
	[Token(Token = "0x2000062")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xA0634C", Offset = "0xA0634C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0634C", Offset = "0xA0634C")]
	public class FABRIK : IK
	{
		[Token(Token = "0x4000377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverFABRIK solver;

		[Token(Token = "0x6000534")]
		[Address(RVA = "0x176DBB0", Offset = "0x176DBB0", VA = "0x176DBB0", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA27554", Offset = "0xA27554")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000535")]
		[Address(RVA = "0x176DBFC", Offset = "0x176DBFC", VA = "0x176DBFC", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA2758C", Offset = "0xA2758C")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000536")]
		[Address(RVA = "0x176DC48", Offset = "0x176DC48", VA = "0x176DC48")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA275C4", Offset = "0xA275C4")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000537")]
		[Address(RVA = "0x176DC94", Offset = "0x176DC94", VA = "0x176DC94")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA275FC", Offset = "0xA275FC")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000538")]
		[Address(RVA = "0x176DCE0", Offset = "0x176DCE0", VA = "0x176DCE0", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x6000539")]
		[Address(RVA = "0x176DCE8", Offset = "0x176DCE8", VA = "0x176DCE8")]
		public FABRIK()
		{
		}
	}
	[Token(Token = "0x2000063")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xA063AC", Offset = "0xA063AC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA063AC", Offset = "0xA063AC")]
	public class FABRIKRoot : IK
	{
		[Token(Token = "0x4000378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverFABRIKRoot solver;

		[Token(Token = "0x600053A")]
		[Address(RVA = "0x176E368", Offset = "0x176E368", VA = "0x176E368", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA27634", Offset = "0xA27634")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x600053B")]
		[Address(RVA = "0x176E3B4", Offset = "0x176E3B4", VA = "0x176E3B4", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA2766C", Offset = "0xA2766C")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x600053C")]
		[Address(RVA = "0x176E400", Offset = "0x176E400", VA = "0x176E400")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA276A4", Offset = "0xA276A4")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x600053D")]
		[Address(RVA = "0x176E44C", Offset = "0x176E44C", VA = "0x176E44C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA276DC", Offset = "0xA276DC")]
		private void ASThread()
		{
		}

		[Token(Token = "0x600053E")]
		[Address(RVA = "0x176E498", Offset = "0x176E498", VA = "0x176E498", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x600053F")]
		[Address(RVA = "0x176E4A0", Offset = "0x176E4A0", VA = "0x176E4A0")]
		public FABRIKRoot()
		{
		}
	}
	[Token(Token = "0x2000064")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xA0640C", Offset = "0xA0640C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0640C", Offset = "0xA0640C")]
	public class FullBodyBipedIK : IK
	{
		[Token(Token = "0x4000379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public BipedReferences references;

		[Token(Token = "0x400037A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public IKSolverFullBodyBiped solver;

		[Token(Token = "0x6000540")]
		[Address(RVA = "0x1776658", Offset = "0x1776658", VA = "0x1776658", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA27714", Offset = "0xA27714")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000541")]
		[Address(RVA = "0x17766A4", Offset = "0x17766A4", VA = "0x17766A4", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA2774C", Offset = "0xA2774C")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000542")]
		[Address(RVA = "0x17766F0", Offset = "0x17766F0", VA = "0x17766F0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA27784", Offset = "0xA27784")]
		private void OpenSetupTutorial()
		{
		}

		[Token(Token = "0x6000543")]
		[Address(RVA = "0x177673C", Offset = "0x177673C", VA = "0x177673C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA277BC", Offset = "0xA277BC")]
		private void OpenInspectorTutorial()
		{
		}

		[Token(Token = "0x6000544")]
		[Address(RVA = "0x1776788", Offset = "0x1776788", VA = "0x1776788")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA277F4", Offset = "0xA277F4")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000545")]
		[Address(RVA = "0x17767D4", Offset = "0x17767D4", VA = "0x17767D4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA2782C", Offset = "0xA2782C")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000546")]
		[Address(RVA = "0x1776820", Offset = "0x1776820", VA = "0x1776820")]
		public void SetReferences(BipedReferences references, Transform rootNode)
		{
		}

		[Token(Token = "0x6000547")]
		[Address(RVA = "0x1776844", Offset = "0x1776844", VA = "0x1776844", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x6000548")]
		[Address(RVA = "0x177684C", Offset = "0x177684C", VA = "0x177684C")]
		public bool ReferencesError(ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000549")]
		[Address(RVA = "0x1776A08", Offset = "0x1776A08", VA = "0x1776A08")]
		public bool ReferencesWarning(ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x600054A")]
		[Address(RVA = "0x1776D5C", Offset = "0x1776D5C", VA = "0x1776D5C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA27864", Offset = "0xA27864")]
		private void Reinitiate()
		{
		}

		[Token(Token = "0x600054B")]
		[Address(RVA = "0x1776D7C", Offset = "0x1776D7C", VA = "0x1776D7C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA2789C", Offset = "0xA2789C")]
		private void AutoDetectReferences()
		{
		}

		[Token(Token = "0x600054C")]
		[Address(RVA = "0x1776E58", Offset = "0x1776E58", VA = "0x1776E58")]
		public FullBodyBipedIK()
		{
		}
	}
	[Token(Token = "0x2000065")]
	public abstract class IK : SolverManager
	{
		[Token(Token = "0x600054D")]
		public abstract IKSolver GetIKSolver();

		[Token(Token = "0x600054E")]
		[Address(RVA = "0x19D3E64", Offset = "0x19D3E64", VA = "0x19D3E64", Slot = "5")]
		protected override void UpdateSolver()
		{
		}

		[Token(Token = "0x600054F")]
		[Address(RVA = "0x19D3F50", Offset = "0x19D3F50", VA = "0x19D3F50", Slot = "4")]
		protected override void InitiateSolver()
		{
		}

		[Token(Token = "0x6000550")]
		[Address(RVA = "0x19D410C", Offset = "0x19D410C", VA = "0x19D410C", Slot = "6")]
		protected override void FixTransforms()
		{
		}

		[Token(Token = "0x6000551")]
		protected abstract void OpenUserManual();

		[Token(Token = "0x6000552")]
		protected abstract void OpenScriptReference();

		[Token(Token = "0x6000553")]
		[Address(RVA = "0x19D416C", Offset = "0x19D416C", VA = "0x19D416C")]
		protected IK()
		{
		}
	}
	[Token(Token = "0x2000066")]
	public class IKExecutionOrder : MonoBehaviour
	{
		[Token(Token = "0x400037B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA11818", Offset = "0xA11818")]
		public IK[] IKComponents;

		[Token(Token = "0x400037C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA11850", Offset = "0xA11850")]
		public Animator animator;

		[Token(Token = "0x400037D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool fixedFrame;

		[Token(Token = "0x17000062")]
		private bool animatePhysics
		{
			[Token(Token = "0x6000554")]
			[Address(RVA = "0x19D70B4", Offset = "0x19D70B4", VA = "0x19D70B4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000555")]
		[Address(RVA = "0x19D7150", Offset = "0x19D7150", VA = "0x19D7150")]
		private void Start()
		{
		}

		[Token(Token = "0x6000556")]
		[Address(RVA = "0x19D71C0", Offset = "0x19D71C0", VA = "0x19D71C0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000557")]
		[Address(RVA = "0x19D727C", Offset = "0x19D727C", VA = "0x19D727C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000558")]
		[Address(RVA = "0x19D72B8", Offset = "0x19D72B8", VA = "0x19D72B8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000559")]
		[Address(RVA = "0x19D71F4", Offset = "0x19D71F4", VA = "0x19D71F4")]
		private void FixTransforms()
		{
		}

		[Token(Token = "0x600055A")]
		[Address(RVA = "0x19D7344", Offset = "0x19D7344", VA = "0x19D7344")]
		public IKExecutionOrder()
		{
		}
	}
	[Token(Token = "0x2000067")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xA0646C", Offset = "0xA0646C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0646C", Offset = "0xA0646C")]
	public class LegIK : IK
	{
		[Token(Token = "0x400037E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverLeg solver;

		[Token(Token = "0x600055B")]
		[Address(RVA = "0x1867C4C", Offset = "0x1867C4C", VA = "0x1867C4C", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA278D4", Offset = "0xA278D4")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x600055C")]
		[Address(RVA = "0x1867C98", Offset = "0x1867C98", VA = "0x1867C98", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA2790C", Offset = "0xA2790C")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x600055D")]
		[Address(RVA = "0x1867CE4", Offset = "0x1867CE4", VA = "0x1867CE4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA27944", Offset = "0xA27944")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x600055E")]
		[Address(RVA = "0x1867D30", Offset = "0x1867D30", VA = "0x1867D30")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA2797C", Offset = "0xA2797C")]
		private void ASThread()
		{
		}

		[Token(Token = "0x600055F")]
		[Address(RVA = "0x1867D7C", Offset = "0x1867D7C", VA = "0x1867D7C", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x6000560")]
		[Address(RVA = "0x1867D84", Offset = "0x1867D84", VA = "0x1867D84")]
		public LegIK()
		{
		}
	}
	[Token(Token = "0x2000068")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xA064CC", Offset = "0xA064CC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA064CC", Offset = "0xA064CC")]
	public class LimbIK : IK
	{
		[Token(Token = "0x400037F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverLimb solver;

		[Token(Token = "0x6000561")]
		[Address(RVA = "0x1867DEC", Offset = "0x1867DEC", VA = "0x1867DEC", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA279B4", Offset = "0xA279B4")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000562")]
		[Address(RVA = "0x1867E38", Offset = "0x1867E38", VA = "0x1867E38", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA279EC", Offset = "0xA279EC")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000563")]
		[Address(RVA = "0x1867E84", Offset = "0x1867E84", VA = "0x1867E84")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA27A24", Offset = "0xA27A24")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000564")]
		[Address(RVA = "0x1867ED0", Offset = "0x1867ED0", VA = "0x1867ED0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA27A5C", Offset = "0xA27A5C")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000565")]
		[Address(RVA = "0x1867F1C", Offset = "0x1867F1C", VA = "0x1867F1C", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x6000566")]
		[Address(RVA = "0x1867F24", Offset = "0x1867F24", VA = "0x1867F24")]
		public LimbIK()
		{
		}
	}
	[Token(Token = "0x2000069")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xA0652C", Offset = "0xA0652C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0652C", Offset = "0xA0652C")]
	public class LookAtIK : IK
	{
		[Token(Token = "0x4000380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverLookAt solver;

		[Token(Token = "0x6000567")]
		[Address(RVA = "0x1868DE0", Offset = "0x1868DE0", VA = "0x1868DE0", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA27A94", Offset = "0xA27A94")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000568")]
		[Address(RVA = "0x1868E2C", Offset = "0x1868E2C", VA = "0x1868E2C", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA27ACC", Offset = "0xA27ACC")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000569")]
		[Address(RVA = "0x1868E78", Offset = "0x1868E78", VA = "0x1868E78")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA27B04", Offset = "0xA27B04")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x600056A")]
		[Address(RVA = "0x1868EC4", Offset = "0x1868EC4", VA = "0x1868EC4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA27B3C", Offset = "0xA27B3C")]
		private void ASThread()
		{
		}

		[Token(Token = "0x600056B")]
		[Address(RVA = "0x1868F10", Offset = "0x1868F10", VA = "0x1868F10", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x600056C")]
		[Address(RVA = "0x1868F18", Offset = "0x1868F18", VA = "0x1868F18")]
		public LookAtIK()
		{
		}
	}
	[Token(Token = "0x200006A")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xA0658C", Offset = "0xA0658C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0658C", Offset = "0xA0658C")]
	public class TrigonometricIK : IK
	{
		[Token(Token = "0x4000381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverTrigonometric solver;

		[Token(Token = "0x600056D")]
		[Address(RVA = "0x1871648", Offset = "0x1871648", VA = "0x1871648", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA27B74", Offset = "0xA27B74")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x600056E")]
		[Address(RVA = "0x1871694", Offset = "0x1871694", VA = "0x1871694", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA27BAC", Offset = "0xA27BAC")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x600056F")]
		[Address(RVA = "0x18716E0", Offset = "0x18716E0", VA = "0x18716E0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA27BE4", Offset = "0xA27BE4")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000570")]
		[Address(RVA = "0x187172C", Offset = "0x187172C", VA = "0x187172C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA27C1C", Offset = "0xA27C1C")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000571")]
		[Address(RVA = "0x1871778", Offset = "0x1871778", VA = "0x1871778", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x6000572")]
		[Address(RVA = "0x1871780", Offset = "0x1871780", VA = "0x1871780")]
		public TrigonometricIK()
		{
		}
	}
	[Token(Token = "0x200006B")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA065EC", Offset = "0xA065EC")]
	public class VRIK : IK
	{
		[Serializable]
		[Token(Token = "0x20004E6")]
		public class References
		{
			[Token(Token = "0x4001995")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform root;

			[Token(Token = "0x4001996")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform pelvis;

			[Token(Token = "0x4001997")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform spine;

			[Token(Token = "0x4001998")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA20FB0", Offset = "0xA20FB0")]
			public Transform chest;

			[Token(Token = "0x4001999")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA20FE8", Offset = "0xA20FE8")]
			public Transform neck;

			[Token(Token = "0x400199A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Transform head;

			[Token(Token = "0x400199B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA21020", Offset = "0xA21020")]
			public Transform leftShoulder;

			[Token(Token = "0x400199C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Transform leftUpperArm;

			[Token(Token = "0x400199D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Transform leftForearm;

			[Token(Token = "0x400199E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Transform leftHand;

			[Token(Token = "0x400199F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA21058", Offset = "0xA21058")]
			public Transform rightShoulder;

			[Token(Token = "0x40019A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Transform rightUpperArm;

			[Token(Token = "0x40019A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public Transform rightForearm;

			[Token(Token = "0x40019A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public Transform rightHand;

			[Token(Token = "0x40019A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA21090", Offset = "0xA21090")]
			public Transform leftThigh;

			[Token(Token = "0x40019A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA210C8", Offset = "0xA210C8")]
			public Transform leftCalf;

			[Token(Token = "0x40019A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA21100", Offset = "0xA21100")]
			public Transform leftFoot;

			[Token(Token = "0x40019A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA21138", Offset = "0xA21138")]
			public Transform leftToes;

			[Token(Token = "0x40019A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA21170", Offset = "0xA21170")]
			public Transform rightThigh;

			[Token(Token = "0x40019A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA211A8", Offset = "0xA211A8")]
			public Transform rightCalf;

			[Token(Token = "0x40019A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA211E0", Offset = "0xA211E0")]
			public Transform rightFoot;

			[Token(Token = "0x40019AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA21218", Offset = "0xA21218")]
			public Transform rightToes;

			[Token(Token = "0x1700047D")]
			public bool isFilled
			{
				[Token(Token = "0x6002658")]
				[Address(RVA = "0x1872C80", Offset = "0x1872C80", VA = "0x1872C80")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x1700047E")]
			public bool isEmpty
			{
				[Token(Token = "0x6002659")]
				[Address(RVA = "0x1872804", Offset = "0x1872804", VA = "0x1872804")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6002657")]
			[Address(RVA = "0x1873304", Offset = "0x1873304", VA = "0x1873304")]
			public Transform[] GetTransforms()
			{
				return null;
			}

			[Token(Token = "0x600265A")]
			[Address(RVA = "0x18723F0", Offset = "0x18723F0", VA = "0x18723F0")]
			public static bool AutoDetectReferences(Transform root, out References references)
			{
				return default(bool);
			}

			[Token(Token = "0x600265B")]
			[Address(RVA = "0x18732FC", Offset = "0x18732FC", VA = "0x18732FC")]
			public References()
			{
			}
		}

		[Token(Token = "0x4000382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "ContextMenuItemAttribute", RVA = "0xA11888", Offset = "0xA11888")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA11888", Offset = "0xA11888")]
		public References references;

		[Token(Token = "0x4000383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA11904", Offset = "0xA11904")]
		public IKSolverVR solver;

		[Token(Token = "0x6000573")]
		[Address(RVA = "0x18722E4", Offset = "0x18722E4", VA = "0x18722E4", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA27C54", Offset = "0xA27C54")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000574")]
		[Address(RVA = "0x1872330", Offset = "0x1872330", VA = "0x1872330", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA27C8C", Offset = "0xA27C8C")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000575")]
		[Address(RVA = "0x187237C", Offset = "0x187237C", VA = "0x187237C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA27CC4", Offset = "0xA27CC4")]
		private void OpenSetupTutorial()
		{
		}

		[Token(Token = "0x6000576")]
		[Address(RVA = "0x18723C8", Offset = "0x18723C8", VA = "0x18723C8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA27CFC", Offset = "0xA27CFC")]
		public void AutoDetectReferences()
		{
		}

		[Token(Token = "0x6000577")]
		[Address(RVA = "0x1872760", Offset = "0x1872760", VA = "0x1872760")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA27D34", Offset = "0xA27D34")]
		public void GuessHandOrientations()
		{
		}

		[Token(Token = "0x6000578")]
		[Address(RVA = "0x1872788", Offset = "0x1872788", VA = "0x1872788", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x6000579")]
		[Address(RVA = "0x1872790", Offset = "0x1872790", VA = "0x1872790", Slot = "4")]
		protected override void InitiateSolver()
		{
		}

		[Token(Token = "0x600057A")]
		[Address(RVA = "0x18730FC", Offset = "0x18730FC", VA = "0x18730FC", Slot = "5")]
		protected override void UpdateSolver()
		{
		}

		[Token(Token = "0x600057B")]
		[Address(RVA = "0x1873274", Offset = "0x1873274", VA = "0x1873274")]
		public VRIK()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200006C")]
	public class FABRIKChain
	{
		[Token(Token = "0x4000384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FABRIK ik;

		[Token(Token = "0x4000385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA1193C", Offset = "0xA1193C")]
		public float pull;

		[Token(Token = "0x4000386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA11954", Offset = "0xA11954")]
		public float pin;

		[Token(Token = "0x4000387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int[] children;

		[Token(Token = "0x600057C")]
		[Address(RVA = "0x176DD50", Offset = "0x176DD50", VA = "0x176DD50")]
		public bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x600057D")]
		[Address(RVA = "0x176DE18", Offset = "0x176DE18", VA = "0x176DE18")]
		public void Initiate()
		{
		}

		[Token(Token = "0x600057E")]
		[Address(RVA = "0x176DE38", Offset = "0x176DE38", VA = "0x176DE38")]
		public void Stage1(FABRIKChain[] chain)
		{
		}

		[Token(Token = "0x600057F")]
		[Address(RVA = "0x176E208", Offset = "0x176E208", VA = "0x176E208")]
		public void Stage2(Vector3 rootPosition, FABRIKChain[] chain)
		{
		}

		[Token(Token = "0x6000580")]
		[Address(RVA = "0x176DF0C", Offset = "0x176DF0C", VA = "0x176DF0C")]
		private Vector3 GetCentroid(FABRIKChain[] chain)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000581")]
		[Address(RVA = "0x176E300", Offset = "0x176E300", VA = "0x176E300")]
		public FABRIKChain()
		{
		}
	}
	[Token(Token = "0x200006D")]
	public class FBBIKArmBending : MonoBehaviour
	{
		[Token(Token = "0x4000388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x4000389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 bendDirectionOffsetLeft;

		[Token(Token = "0x400038A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 bendDirectionOffsetRight;

		[Token(Token = "0x400038B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 characterSpaceBendOffsetLeft;

		[Token(Token = "0x400038C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 characterSpaceBendOffsetRight;

		[Token(Token = "0x400038D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion leftHandTargetRotation;

		[Token(Token = "0x400038E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Quaternion rightHandTargetRotation;

		[Token(Token = "0x400038F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool initiated;

		[Token(Token = "0x6000582")]
		[Address(RVA = "0x176E508", Offset = "0x176E508", VA = "0x176E508")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000583")]
		[Address(RVA = "0x176EA70", Offset = "0x176EA70", VA = "0x176EA70")]
		private void OnPostFBBIK()
		{
		}

		[Token(Token = "0x6000584")]
		[Address(RVA = "0x176EC30", Offset = "0x176EC30", VA = "0x176EC30")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000585")]
		[Address(RVA = "0x176ED28", Offset = "0x176ED28", VA = "0x176ED28")]
		public FBBIKArmBending()
		{
		}
	}
	[Token(Token = "0x200006E")]
	public class FBBIKHeadEffector : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004E7")]
		public class BendBone
		{
			[Token(Token = "0x40019AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA21250", Offset = "0xA21250")]
			public Transform transform;

			[Token(Token = "0x40019AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA21288", Offset = "0xA21288")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA21288", Offset = "0xA21288")]
			public float weight;

			[Token(Token = "0x40019AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private Quaternion defaultLocalRotation;

			[Token(Token = "0x600265C")]
			[Address(RVA = "0x1771D58", Offset = "0x1771D58", VA = "0x1771D58")]
			public BendBone()
			{
			}

			[Token(Token = "0x600265D")]
			[Address(RVA = "0x1771DD8", Offset = "0x1771DD8", VA = "0x1771DD8")]
			public BendBone(Transform transform, float weight)
			{
			}

			[Token(Token = "0x600265E")]
			[Address(RVA = "0x176F4E8", Offset = "0x176F4E8", VA = "0x176F4E8")]
			public void StoreDefaultLocalState()
			{
			}

			[Token(Token = "0x600265F")]
			[Address(RVA = "0x176F8EC", Offset = "0x176F8EC", VA = "0x176F8EC")]
			public void FixTransforms()
			{
			}
		}

		[Token(Token = "0x4000390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1196C", Offset = "0xA1196C")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x4000391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0xA119A4", Offset = "0xA119A4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA119A4", Offset = "0xA119A4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA119A4", Offset = "0xA119A4")]
		public float positionWeight;

		[Token(Token = "0x4000392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA11A1C", Offset = "0xA11A1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA11A1C", Offset = "0xA11A1C")]
		public float bodyWeight;

		[Token(Token = "0x4000393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA11A70", Offset = "0xA11A70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA11A70", Offset = "0xA11A70")]
		public float thighWeight;

		[Token(Token = "0x4000394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA11AC4", Offset = "0xA11AC4")]
		public bool handsPullBody;

		[Token(Token = "0x4000395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0xA11AFC", Offset = "0xA11AFC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA11AFC", Offset = "0xA11AFC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA11AFC", Offset = "0xA11AFC")]
		public float rotationWeight;

		[Token(Token = "0x4000396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA11B74", Offset = "0xA11B74")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA11B74", Offset = "0xA11B74")]
		public float bodyClampWeight;

		[Token(Token = "0x4000397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA11BC8", Offset = "0xA11BC8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA11BC8", Offset = "0xA11BC8")]
		public float headClampWeight;

		[Token(Token = "0x4000398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA11C1C", Offset = "0xA11C1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA11C1C", Offset = "0xA11C1C")]
		public float bendWeight;

		[Token(Token = "0x4000399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA11C70", Offset = "0xA11C70")]
		public BendBone[] bendBones;

		[Token(Token = "0x400039A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0xA11CA8", Offset = "0xA11CA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA11CA8", Offset = "0xA11CA8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA11CA8", Offset = "0xA11CA8")]
		public float CCDWeight;

		[Token(Token = "0x400039B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA11D20", Offset = "0xA11D20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA11D20", Offset = "0xA11D20")]
		public float roll;

		[Token(Token = "0x400039C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA11D74", Offset = "0xA11D74")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA11D74", Offset = "0xA11D74")]
		public float damper;

		[Token(Token = "0x400039D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA11DCC", Offset = "0xA11DCC")]
		public Transform[] CCDBones;

		[Token(Token = "0x400039E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0xA11E04", Offset = "0xA11E04")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA11E04", Offset = "0xA11E04")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA11E04", Offset = "0xA11E04")]
		public float postStretchWeight;

		[Token(Token = "0x400039F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA11E7C", Offset = "0xA11E7C")]
		public float maxStretch;

		[Token(Token = "0x40003A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA11EB4", Offset = "0xA11EB4")]
		public float stretchDamper;

		[Token(Token = "0x40003A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA11EEC", Offset = "0xA11EEC")]
		public bool fixHead;

		[Token(Token = "0x40003A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA11F24", Offset = "0xA11F24")]
		public Transform[] stretchBones;

		[Token(Token = "0x40003A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0xA11F5C", Offset = "0xA11F5C")]
		public Vector3 chestDirection;

		[Token(Token = "0x40003A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA11F94", Offset = "0xA11F94")]
		public float chestDirectionWeight;

		[Token(Token = "0x40003A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Transform[] chestBones;

		[Token(Token = "0x40003A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public IKSolver.UpdateDelegate OnPostHeadEffectorFK;

		[Token(Token = "0x40003A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 offset;

		[Token(Token = "0x40003A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Vector3 headToBody;

		[Token(Token = "0x40003A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 shoulderCenterToHead;

		[Token(Token = "0x40003AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private Vector3 headToLeftThigh;

		[Token(Token = "0x40003AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Vector3 headToRightThigh;

		[Token(Token = "0x40003AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private Vector3 leftShoulderPos;

		[Token(Token = "0x40003AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Vector3 rightShoulderPos;

		[Token(Token = "0x40003AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float shoulderDist;

		[Token(Token = "0x40003AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private float leftShoulderDist;

		[Token(Token = "0x40003B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private float rightShoulderDist;

		[Token(Token = "0x40003B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Quaternion chestRotation;

		[Token(Token = "0x40003B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Quaternion headRotationRelativeToRoot;

		[Token(Token = "0x40003B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Quaternion[] ccdDefaultLocalRotations;

		[Token(Token = "0x40003B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Vector3 headLocalPosition;

		[Token(Token = "0x40003B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private Quaternion headLocalRotation;

		[Token(Token = "0x40003B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private Vector3[] stretchLocalPositions;

		[Token(Token = "0x40003B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private Quaternion[] stretchLocalRotations;

		[Token(Token = "0x40003B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private Vector3[] chestLocalPositions;

		[Token(Token = "0x40003B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private Quaternion[] chestLocalRotations;

		[Token(Token = "0x40003BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private int bendBonesCount;

		[Token(Token = "0x40003BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private int ccdBonesCount;

		[Token(Token = "0x40003BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private int stretchBonesCount;

		[Token(Token = "0x40003BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		private int chestBonesCount;

		[Token(Token = "0x6000586")]
		[Address(RVA = "0x176ED30", Offset = "0x176ED30", VA = "0x176ED30")]
		private void Start()
		{
		}

		[Token(Token = "0x6000587")]
		[Address(RVA = "0x176F060", Offset = "0x176F060", VA = "0x176F060")]
		private void OnStoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000588")]
		[Address(RVA = "0x176F520", Offset = "0x176F520", VA = "0x176F520")]
		private void OnFixTransforms()
		{
		}

		[Token(Token = "0x6000589")]
		[Address(RVA = "0x176F914", Offset = "0x176F914", VA = "0x176F914")]
		private void OnPreRead()
		{
		}

		[Token(Token = "0x600058A")]
		[Address(RVA = "0x177028C", Offset = "0x177028C", VA = "0x177028C")]
		private void SpineBend()
		{
		}

		[Token(Token = "0x600058B")]
		[Address(RVA = "0x17705D8", Offset = "0x17705D8", VA = "0x17705D8")]
		private void CCDPass()
		{
		}

		[Token(Token = "0x600058C")]
		[Address(RVA = "0x1770974", Offset = "0x1770974", VA = "0x1770974")]
		private void Iterate(int iteration)
		{
		}

		[Token(Token = "0x600058D")]
		[Address(RVA = "0x17713E0", Offset = "0x17713E0", VA = "0x17713E0")]
		private void OnPostUpdate()
		{
		}

		[Token(Token = "0x600058E")]
		[Address(RVA = "0x176FFB8", Offset = "0x176FFB8", VA = "0x176FFB8")]
		private void ChestDirection()
		{
		}

		[Token(Token = "0x600058F")]
		[Address(RVA = "0x17715F0", Offset = "0x17715F0", VA = "0x17715F0")]
		private void PostStretching()
		{
		}

		[Token(Token = "0x6000590")]
		[Address(RVA = "0x177129C", Offset = "0x177129C", VA = "0x177129C")]
		private void LerpSolverPosition(IKEffector effector, Vector3 position, float weight, Vector3 offset)
		{
		}

		[Token(Token = "0x6000591")]
		[Address(RVA = "0x1771100", Offset = "0x1771100", VA = "0x1771100")]
		private void Solve(ref Vector3 pos1, ref Vector3 pos2, float nominalDistance)
		{
		}

		[Token(Token = "0x6000592")]
		[Address(RVA = "0x177195C", Offset = "0x177195C", VA = "0x177195C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000593")]
		[Address(RVA = "0x1771BDC", Offset = "0x1771BDC", VA = "0x1771BDC")]
		public FBBIKHeadEffector()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200006F")]
	public class FBIKChain
	{
		[Serializable]
		[Token(Token = "0x20004E8")]
		public class ChildConstraint
		{
			[Token(Token = "0x40019AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float pushElasticity;

			[Token(Token = "0x40019AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float pullElasticity;

			[Token(Token = "0x40019B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private Transform bone1;

			[Token(Token = "0x40019B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private Transform bone2;

			[Token(Token = "0x40019B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA212FC", Offset = "0xA212FC")]
			private float <nominalDistance>k__BackingField;

			[Token(Token = "0x40019B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2130C", Offset = "0xA2130C")]
			private bool <isRigid>k__BackingField;

			[Token(Token = "0x40019B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float crossFade;

			[Token(Token = "0x40019B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float inverseCrossFade;

			[Token(Token = "0x40019B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int chain1Index;

			[Token(Token = "0x40019B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private int chain2Index;

			[Token(Token = "0x1700047F")]
			public float nominalDistance
			{
				[Token(Token = "0x6002660")]
				[Address(RVA = "0x1774C9C", Offset = "0x1774C9C", VA = "0x1774C9C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2F0D0", Offset = "0xA2F0D0")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6002661")]
				[Address(RVA = "0x1774CA4", Offset = "0x1774CA4", VA = "0x1774CA4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2F0E0", Offset = "0xA2F0E0")]
				private set
				{
				}
			}

			[Token(Token = "0x17000480")]
			public bool isRigid
			{
				[Token(Token = "0x6002662")]
				[Address(RVA = "0x1774CAC", Offset = "0x1774CAC", VA = "0x1774CAC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2F0F0", Offset = "0xA2F0F0")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6002663")]
				[Address(RVA = "0x1774CB4", Offset = "0x1774CB4", VA = "0x1774CB4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2F100", Offset = "0xA2F100")]
				private set
				{
				}
			}

			[Token(Token = "0x6002664")]
			[Address(RVA = "0x1774CC0", Offset = "0x1774CC0", VA = "0x1774CC0")]
			public ChildConstraint(Transform bone1, Transform bone2, float pushElasticity = 0f, float pullElasticity = 0f)
			{
			}

			[Token(Token = "0x6002665")]
			[Address(RVA = "0x1772A20", Offset = "0x1772A20", VA = "0x1772A20")]
			public void Initiate(IKSolverFullBody solver)
			{
			}

			[Token(Token = "0x6002666")]
			[Address(RVA = "0x1772F60", Offset = "0x1772F60", VA = "0x1772F60")]
			public void OnPreSolve(IKSolverFullBody solver)
			{
			}

			[Token(Token = "0x6002667")]
			[Address(RVA = "0x1774998", Offset = "0x1774998", VA = "0x1774998")]
			public void Solve(IKSolverFullBody solver)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004E9")]
		public enum Smoothing
		{
			[Token(Token = "0x40019B9")]
			None,
			[Token(Token = "0x40019BA")]
			Exponential,
			[Token(Token = "0x40019BB")]
			Cubic
		}

		[Token(Token = "0x40003BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA11FAC", Offset = "0xA11FAC")]
		public float pin;

		[Token(Token = "0x40003BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA11FC4", Offset = "0xA11FC4")]
		public float pull;

		[Token(Token = "0x40003C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA11FDC", Offset = "0xA11FDC")]
		public float push;

		[Token(Token = "0x40003C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA11FF4", Offset = "0xA11FF4")]
		public float pushParent;

		[Token(Token = "0x40003C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA1200C", Offset = "0xA1200C")]
		public float reach;

		[Token(Token = "0x40003C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Smoothing reachSmoothing;

		[Token(Token = "0x40003C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Smoothing pushSmoothing;

		[Token(Token = "0x40003C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public IKSolver.Node[] nodes;

		[Token(Token = "0x40003C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int[] children;

		[Token(Token = "0x40003C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ChildConstraint[] childConstraints;

		[Token(Token = "0x40003C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public IKConstraintBend bendConstraint;

		[Token(Token = "0x40003C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float rootLength;

		[Token(Token = "0x40003CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool initiated;

		[Token(Token = "0x40003CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float length;

		[Token(Token = "0x40003CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float distance;

		[Token(Token = "0x40003CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private IKSolver.Point p;

		[Token(Token = "0x40003CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float reachForce;

		[Token(Token = "0x40003CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float pullParentSum;

		[Token(Token = "0x40003D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float[] crossFades;

		[Token(Token = "0x40003D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float sqrMag1;

		[Token(Token = "0x40003D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float sqrMag2;

		[Token(Token = "0x40003D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float sqrMagDif;

		[Token(Token = "0x40003D4")]
		private const float maxLimbLength = 0.99999f;

		[Token(Token = "0x6000594")]
		[Address(RVA = "0x1771E7C", Offset = "0x1771E7C", VA = "0x1771E7C")]
		public FBIKChain()
		{
		}

		[Token(Token = "0x6000595")]
		[Address(RVA = "0x1771F48", Offset = "0x1771F48", VA = "0x1771F48")]
		public FBIKChain(float pin, float pull, params Transform[] nodeTransforms)
		{
		}

		[Token(Token = "0x6000596")]
		[Address(RVA = "0x1772054", Offset = "0x1772054", VA = "0x1772054")]
		public void SetNodes(params Transform[] boneTransforms)
		{
		}

		[Token(Token = "0x6000597")]
		[Address(RVA = "0x1772178", Offset = "0x1772178", VA = "0x1772178")]
		public int GetNodeIndex(Transform boneTransform)
		{
			return default(int);
		}

		[Token(Token = "0x6000598")]
		[Address(RVA = "0x1772254", Offset = "0x1772254", VA = "0x1772254")]
		public bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000599")]
		[Address(RVA = "0x1772358", Offset = "0x1772358", VA = "0x1772358")]
		public void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x600059A")]
		[Address(RVA = "0x1772A78", Offset = "0x1772A78", VA = "0x1772A78")]
		public void ReadPose(IKSolverFullBody solver, bool fullBody)
		{
		}

		[Token(Token = "0x600059B")]
		[Address(RVA = "0x17724E8", Offset = "0x17724E8", VA = "0x17724E8")]
		private void CalculateBoneLengths(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x600059C")]
		[Address(RVA = "0x1773164", Offset = "0x1773164", VA = "0x1773164")]
		public void Reach(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x600059D")]
		[Address(RVA = "0x1773508", Offset = "0x1773508", VA = "0x1773508")]
		public Vector3 Push(IKSolverFullBody solver)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600059E")]
		[Address(RVA = "0x17738EC", Offset = "0x17738EC", VA = "0x17738EC")]
		public void SolveTrigonometric(IKSolverFullBody solver, bool calculateBendDirection = false)
		{
		}

		[Token(Token = "0x600059F")]
		[Address(RVA = "0x1773E70", Offset = "0x1773E70", VA = "0x1773E70")]
		public void Stage1(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x60005A0")]
		[Address(RVA = "0x1774440", Offset = "0x1774440", VA = "0x1774440")]
		public void Stage2(IKSolverFullBody solver, Vector3 position)
		{
		}

		[Token(Token = "0x60005A1")]
		[Address(RVA = "0x17746D8", Offset = "0x17746D8", VA = "0x17746D8")]
		public void SolveConstraintSystems(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x60005A2")]
		[Address(RVA = "0x1774338", Offset = "0x1774338", VA = "0x1774338")]
		private Vector3 SolveFABRIKJoint(Vector3 pos1, Vector3 pos2, float length)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60005A3")]
		[Address(RVA = "0x1773C58", Offset = "0x1773C58", VA = "0x1773C58")]
		protected Vector3 GetDirToBendPoint(Vector3 direction, Vector3 bendDirection, float directionMagnitude)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60005A4")]
		[Address(RVA = "0x17742C0", Offset = "0x17742C0", VA = "0x17742C0")]
		private void SolveChildConstraints(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x60005A5")]
		[Address(RVA = "0x17747C0", Offset = "0x17747C0", VA = "0x17747C0")]
		private void SolveLinearConstraint(IKSolver.Node node1, IKSolver.Node node2, float crossFade, float distance)
		{
		}

		[Token(Token = "0x60005A6")]
		[Address(RVA = "0x17741E0", Offset = "0x17741E0", VA = "0x17741E0")]
		public void ForwardReach(Vector3 position)
		{
		}

		[Token(Token = "0x60005A7")]
		[Address(RVA = "0x17745C0", Offset = "0x17745C0", VA = "0x17745C0")]
		private void BackwardReach(Vector3 position)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000070")]
	public class IKConstraintBend
	{
		[Token(Token = "0x40003D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform bone1;

		[Token(Token = "0x40003D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform bone2;

		[Token(Token = "0x40003D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform bone3;

		[Token(Token = "0x40003D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform bendGoal;

		[Token(Token = "0x40003D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 direction;

		[Token(Token = "0x40003DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Quaternion rotationOffset;

		[Token(Token = "0x40003DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA12024", Offset = "0xA12024")]
		public float weight;

		[Token(Token = "0x40003DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Vector3 defaultLocalDirection;

		[Token(Token = "0x40003DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Vector3 defaultChildDirection;

		[NonSerialized]
		[Token(Token = "0x40003DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float clampF;

		[Token(Token = "0x40003DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int chainIndex1;

		[Token(Token = "0x40003E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int nodeIndex1;

		[Token(Token = "0x40003E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int chainIndex2;

		[Token(Token = "0x40003E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int nodeIndex2;

		[Token(Token = "0x40003E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int chainIndex3;

		[Token(Token = "0x40003E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int nodeIndex3;

		[Token(Token = "0x40003E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1203C", Offset = "0xA1203C")]
		private bool <initiated>k__BackingField;

		[Token(Token = "0x40003E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
		private bool limbOrientationsSet;

		[Token(Token = "0x17000063")]
		public bool initiated
		{
			[Token(Token = "0x60005A9")]
			[Address(RVA = "0x19D433C", Offset = "0x19D433C", VA = "0x19D433C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA27D6C", Offset = "0xA27D6C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60005AA")]
			[Address(RVA = "0x19D4344", Offset = "0x19D4344", VA = "0x19D4344")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA27D7C", Offset = "0xA27D7C")]
			private set
			{
			}
		}

		[Token(Token = "0x60005A8")]
		[Address(RVA = "0x19D4174", Offset = "0x19D4174", VA = "0x19D4174")]
		public bool IsValid(IKSolverFullBody solver, Warning.Logger logger)
		{
			return default(bool);
		}

		[Token(Token = "0x60005AB")]
		[Address(RVA = "0x19D4350", Offset = "0x19D4350", VA = "0x19D4350")]
		public IKConstraintBend()
		{
		}

		[Token(Token = "0x60005AC")]
		[Address(RVA = "0x19D43D4", Offset = "0x19D43D4", VA = "0x19D43D4")]
		public IKConstraintBend(Transform bone1, Transform bone2, Transform bone3)
		{
		}

		[Token(Token = "0x60005AD")]
		[Address(RVA = "0x19D4480", Offset = "0x19D4480", VA = "0x19D4480")]
		public void SetBones(Transform bone1, Transform bone2, Transform bone3)
		{
		}

		[Token(Token = "0x60005AE")]
		[Address(RVA = "0x19D448C", Offset = "0x19D448C", VA = "0x19D448C")]
		public void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x60005AF")]
		[Address(RVA = "0x19D497C", Offset = "0x19D497C", VA = "0x19D497C")]
		public void SetLimbOrientation(Vector3 upper, Vector3 lower, Vector3 last)
		{
		}

		[Token(Token = "0x60005B0")]
		[Address(RVA = "0x19D4BB4", Offset = "0x19D4BB4", VA = "0x19D4BB4")]
		public void LimitBend(float solverWeight, float positionWeight)
		{
		}

		[Token(Token = "0x60005B1")]
		[Address(RVA = "0x19D5050", Offset = "0x19D5050", VA = "0x19D5050")]
		public Vector3 GetDir(IKSolverFullBody solver)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60005B2")]
		[Address(RVA = "0x19D473C", Offset = "0x19D473C", VA = "0x19D473C")]
		private Vector3 OrthoToLimb(IKSolverFullBody solver, Vector3 tangent)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60005B3")]
		[Address(RVA = "0x19D485C", Offset = "0x19D485C", VA = "0x19D485C")]
		private Vector3 OrthoToBone1(IKSolverFullBody solver, Vector3 tangent)
		{
			return default(Vector3);
		}
	}
	[Serializable]
	[Token(Token = "0x2000071")]
	public class IKEffector
	{
		[Token(Token = "0x40003E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform bone;

		[Token(Token = "0x40003E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x40003E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA1204C", Offset = "0xA1204C")]
		public float positionWeight;

		[Token(Token = "0x40003EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA12064", Offset = "0xA12064")]
		public float rotationWeight;

		[Token(Token = "0x40003EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 position;

		[Token(Token = "0x40003EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Quaternion rotation;

		[Token(Token = "0x40003ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 positionOffset;

		[Token(Token = "0x40003EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1207C", Offset = "0xA1207C")]
		private bool <isEndEffector>k__BackingField;

		[Token(Token = "0x40003EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool effectChildNodes;

		[Token(Token = "0x40003F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA1208C", Offset = "0xA1208C")]
		public float maintainRelativePositionWeight;

		[Token(Token = "0x40003F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform[] childBones;

		[Token(Token = "0x40003F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform planeBone1;

		[Token(Token = "0x40003F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform planeBone2;

		[Token(Token = "0x40003F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform planeBone3;

		[Token(Token = "0x40003F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Quaternion planeRotationOffset;

		[Token(Token = "0x40003F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float posW;

		[Token(Token = "0x40003F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float rotW;

		[Token(Token = "0x40003F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3[] localPositions;

		[Token(Token = "0x40003F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool usePlaneNodes;

		[Token(Token = "0x40003FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Quaternion animatedPlaneRotation;

		[Token(Token = "0x40003FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private Vector3 animatedPosition;

		[Token(Token = "0x40003FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool firstUpdate;

		[Token(Token = "0x40003FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private int chainIndex;

		[Token(Token = "0x40003FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private int nodeIndex;

		[Token(Token = "0x40003FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private int plane1ChainIndex;

		[Token(Token = "0x4000400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private int plane1NodeIndex;

		[Token(Token = "0x4000401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private int plane2ChainIndex;

		[Token(Token = "0x4000402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private int plane2NodeIndex;

		[Token(Token = "0x4000403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private int plane3ChainIndex;

		[Token(Token = "0x4000404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private int plane3NodeIndex;

		[Token(Token = "0x4000405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private int[] childChainIndexes;

		[Token(Token = "0x4000406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private int[] childNodeIndexes;

		[Token(Token = "0x17000064")]
		public bool isEndEffector
		{
			[Token(Token = "0x60005B5")]
			[Address(RVA = "0x19D56BC", Offset = "0x19D56BC", VA = "0x19D56BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA27D8C", Offset = "0xA27D8C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60005B6")]
			[Address(RVA = "0x19D56C4", Offset = "0x19D56C4", VA = "0x19D56C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA27D9C", Offset = "0xA27D9C")]
			private set
			{
			}
		}

		[Token(Token = "0x60005B4")]
		[Address(RVA = "0x19D5654", Offset = "0x19D5654", VA = "0x19D5654")]
		public IKSolver.Node GetNode(IKSolverFullBody solver)
		{
			return null;
		}

		[Token(Token = "0x60005B7")]
		[Address(RVA = "0x19D56D0", Offset = "0x19D56D0", VA = "0x19D56D0")]
		public void PinToBone(float positionWeight, float rotationWeight)
		{
		}

		[Token(Token = "0x60005B8")]
		[Address(RVA = "0x19D57A4", Offset = "0x19D57A4", VA = "0x19D57A4")]
		public IKEffector()
		{
		}

		[Token(Token = "0x60005B9")]
		[Address(RVA = "0x19D58E0", Offset = "0x19D58E0", VA = "0x19D58E0")]
		public IKEffector(Transform bone, Transform[] childBones)
		{
		}

		[Token(Token = "0x60005BA")]
		[Address(RVA = "0x19D5A38", Offset = "0x19D5A38", VA = "0x19D5A38")]
		public bool IsValid(IKSolver solver, ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x60005BB")]
		[Address(RVA = "0x19D5D28", Offset = "0x19D5D28", VA = "0x19D5D28")]
		public void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x60005BC")]
		[Address(RVA = "0x19D5FC8", Offset = "0x19D5FC8", VA = "0x19D5FC8")]
		public void ResetOffset(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x60005BD")]
		[Address(RVA = "0x19D6108", Offset = "0x19D6108", VA = "0x19D6108")]
		public void SetToTarget()
		{
		}

		[Token(Token = "0x60005BE")]
		[Address(RVA = "0x19D61B4", Offset = "0x19D61B4", VA = "0x19D61B4")]
		public void OnPreSolve(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x60005BF")]
		[Address(RVA = "0x19D6808", Offset = "0x19D6808", VA = "0x19D6808")]
		public void OnPostWrite()
		{
		}

		[Token(Token = "0x60005C0")]
		[Address(RVA = "0x19D6878", Offset = "0x19D6878", VA = "0x19D6878")]
		private Quaternion GetPlaneRotation(IKSolverFullBody solver)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60005C1")]
		[Address(RVA = "0x19D6A90", Offset = "0x19D6A90", VA = "0x19D6A90")]
		public void Update(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x60005C2")]
		[Address(RVA = "0x19D6DD8", Offset = "0x19D6DD8", VA = "0x19D6DD8")]
		private Vector3 GetPosition(IKSolverFullBody solver, out Quaternion planeRotationOffset)
		{
			return default(Vector3);
		}
	}
	[Serializable]
	[Token(Token = "0x2000072")]
	public class IKMapping
	{
		[Serializable]
		[Token(Token = "0x20004EA")]
		public class BoneMap
		{
			[Token(Token = "0x40019BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform transform;

			[Token(Token = "0x40019BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int chainIndex;

			[Token(Token = "0x40019BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int nodeIndex;

			[Token(Token = "0x40019BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 defaultLocalPosition;

			[Token(Token = "0x40019C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Quaternion defaultLocalRotation;

			[Token(Token = "0x40019C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public Vector3 localSwingAxis;

			[Token(Token = "0x40019C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Vector3 localTwistAxis;

			[Token(Token = "0x40019C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public Vector3 planePosition;

			[Token(Token = "0x40019C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public Vector3 ikPosition;

			[Token(Token = "0x40019C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			public Quaternion defaultLocalTargetRotation;

			[Token(Token = "0x40019C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			private Quaternion maintainRotation;

			[Token(Token = "0x40019C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			public float length;

			[Token(Token = "0x40019C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public Quaternion animatedRotation;

			[Token(Token = "0x40019C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			private Transform planeBone1;

			[Token(Token = "0x40019CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			private Transform planeBone2;

			[Token(Token = "0x40019CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			private Transform planeBone3;

			[Token(Token = "0x40019CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			private int plane1ChainIndex;

			[Token(Token = "0x40019CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
			private int plane1NodeIndex;

			[Token(Token = "0x40019CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			private int plane2ChainIndex;

			[Token(Token = "0x40019CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
			private int plane2NodeIndex;

			[Token(Token = "0x40019D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			private int plane3ChainIndex;

			[Token(Token = "0x40019D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
			private int plane3NodeIndex;

			[Token(Token = "0x17000481")]
			public Vector3 swingDirection
			{
				[Token(Token = "0x6002669")]
				[Address(RVA = "0x19D75B8", Offset = "0x19D75B8", VA = "0x19D75B8")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x17000482")]
			public bool isNodeBone
			{
				[Token(Token = "0x600266C")]
				[Address(RVA = "0x19D7724", Offset = "0x19D7724", VA = "0x19D7724")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000483")]
			private Quaternion lastAnimatedTargetRotation
			{
				[Token(Token = "0x6002680")]
				[Address(RVA = "0x19D7D08", Offset = "0x19D7D08", VA = "0x19D7D08")]
				get
				{
					return default(Quaternion);
				}
			}

			[Token(Token = "0x6002668")]
			[Address(RVA = "0x19D758C", Offset = "0x19D758C", VA = "0x19D758C")]
			public void Initiate(Transform transform, IKSolverFullBody solver)
			{
			}

			[Token(Token = "0x600266A")]
			[Address(RVA = "0x19D7684", Offset = "0x19D7684", VA = "0x19D7684")]
			public void StoreDefaultLocalState()
			{
			}

			[Token(Token = "0x600266B")]
			[Address(RVA = "0x19D76D4", Offset = "0x19D76D4", VA = "0x19D76D4")]
			public void FixTransform(bool position)
			{
			}

			[Token(Token = "0x600266D")]
			[Address(RVA = "0x19D7734", Offset = "0x19D7734", VA = "0x19D7734")]
			public void SetLength(BoneMap nextBone)
			{
			}

			[Token(Token = "0x600266E")]
			[Address(RVA = "0x19D781C", Offset = "0x19D781C", VA = "0x19D781C")]
			public void SetLocalSwingAxis(BoneMap swingTarget)
			{
			}

			[Token(Token = "0x600266F")]
			[Address(RVA = "0x19D7824", Offset = "0x19D7824", VA = "0x19D7824")]
			public void SetLocalSwingAxis(BoneMap bone1, BoneMap bone2)
			{
			}

			[Token(Token = "0x6002670")]
			[Address(RVA = "0x19D79B4", Offset = "0x19D79B4", VA = "0x19D79B4")]
			public void SetLocalTwistAxis(Vector3 twistDirection, Vector3 normalDirection)
			{
			}

			[Token(Token = "0x6002671")]
			[Address(RVA = "0x19D7AC0", Offset = "0x19D7AC0", VA = "0x19D7AC0")]
			public void SetPlane(IKSolverFullBody solver, Transform planeBone1, Transform planeBone2, Transform planeBone3)
			{
			}

			[Token(Token = "0x6002672")]
			[Address(RVA = "0x19D7B58", Offset = "0x19D7B58", VA = "0x19D7B58")]
			public void UpdatePlane(bool rotation, bool position)
			{
			}

			[Token(Token = "0x6002673")]
			[Address(RVA = "0x19D7F2C", Offset = "0x19D7F2C", VA = "0x19D7F2C")]
			public void SetIKPosition()
			{
			}

			[Token(Token = "0x6002674")]
			[Address(RVA = "0x19D7F64", Offset = "0x19D7F64", VA = "0x19D7F64")]
			public void MaintainRotation()
			{
			}

			[Token(Token = "0x6002675")]
			[Address(RVA = "0x19D7F9C", Offset = "0x19D7F9C", VA = "0x19D7F9C")]
			public void SetToIKPosition()
			{
			}

			[Token(Token = "0x6002676")]
			[Address(RVA = "0x19D7FC4", Offset = "0x19D7FC4", VA = "0x19D7FC4")]
			public void FixToNode(IKSolverFullBody solver, float weight, [Optional] IKSolver.Node fixNode)
			{
			}

			[Token(Token = "0x6002677")]
			[Address(RVA = "0x19D80F0", Offset = "0x19D80F0", VA = "0x19D80F0")]
			public Vector3 GetPlanePosition(IKSolverFullBody solver)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002678")]
			[Address(RVA = "0x19D8438", Offset = "0x19D8438", VA = "0x19D8438")]
			public void PositionToPlane(IKSolverFullBody solver)
			{
			}

			[Token(Token = "0x6002679")]
			[Address(RVA = "0x19D8468", Offset = "0x19D8468", VA = "0x19D8468")]
			public void RotateToPlane(IKSolverFullBody solver, float weight)
			{
			}

			[Token(Token = "0x600267A")]
			[Address(RVA = "0x19D8600", Offset = "0x19D8600", VA = "0x19D8600")]
			public void Swing(Vector3 swingTarget, float weight)
			{
			}

			[Token(Token = "0x600267B")]
			[Address(RVA = "0x19D8670", Offset = "0x19D8670", VA = "0x19D8670")]
			public void Swing(Vector3 pos1, Vector3 pos2, float weight)
			{
			}

			[Token(Token = "0x600267C")]
			[Address(RVA = "0x19D88B4", Offset = "0x19D88B4", VA = "0x19D88B4")]
			public void Twist(Vector3 twistDirection, Vector3 normalDirection, float weight)
			{
			}

			[Token(Token = "0x600267D")]
			[Address(RVA = "0x19D8ADC", Offset = "0x19D8ADC", VA = "0x19D8ADC")]
			public void RotateToMaintain(float weight)
			{
			}

			[Token(Token = "0x600267E")]
			[Address(RVA = "0x19D8BF4", Offset = "0x19D8BF4", VA = "0x19D8BF4")]
			public void RotateToEffector(IKSolverFullBody solver, float weight)
			{
			}

			[Token(Token = "0x600267F")]
			[Address(RVA = "0x19D8234", Offset = "0x19D8234", VA = "0x19D8234")]
			private Quaternion GetTargetRotation(IKSolverFullBody solver)
			{
				return default(Quaternion);
			}

			[Token(Token = "0x6002681")]
			[Address(RVA = "0x19D8D90", Offset = "0x19D8D90", VA = "0x19D8D90")]
			public BoneMap()
			{
			}
		}

		[Token(Token = "0x60005C3")]
		[Address(RVA = "0x19D734C", Offset = "0x19D734C", VA = "0x19D734C", Slot = "4")]
		public virtual bool IsValid(IKSolver solver, ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x60005C4")]
		[Address(RVA = "0x19D7354", Offset = "0x19D7354", VA = "0x19D7354", Slot = "5")]
		public virtual void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x60005C5")]
		[Address(RVA = "0x19D7358", Offset = "0x19D7358", VA = "0x19D7358")]
		protected bool BoneIsValid(Transform bone, IKSolver solver, ref string message, [Optional] Warning.Logger logger)
		{
			return default(bool);
		}

		[Token(Token = "0x60005C6")]
		[Address(RVA = "0x19D747C", Offset = "0x19D747C", VA = "0x19D747C")]
		protected Vector3 SolveFABRIKJoint(Vector3 pos1, Vector3 pos2, float length)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60005C7")]
		[Address(RVA = "0x19D7584", Offset = "0x19D7584", VA = "0x19D7584")]
		public IKMapping()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000073")]
	public class IKMappingBone : IKMapping
	{
		[Token(Token = "0x4000407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform bone;

		[Token(Token = "0x4000408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA120A4", Offset = "0xA120A4")]
		public float maintainRotationWeight;

		[Token(Token = "0x4000409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private BoneMap boneMap;

		[Token(Token = "0x60005C8")]
		[Address(RVA = "0x19D8DAC", Offset = "0x19D8DAC", VA = "0x19D8DAC", Slot = "4")]
		public override bool IsValid(IKSolver solver, ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x60005C9")]
		[Address(RVA = "0x19D8E4C", Offset = "0x19D8E4C", VA = "0x19D8E4C")]
		public IKMappingBone()
		{
		}

		[Token(Token = "0x60005CA")]
		[Address(RVA = "0x19D8ED0", Offset = "0x19D8ED0", VA = "0x19D8ED0")]
		public IKMappingBone(Transform bone)
		{
		}

		[Token(Token = "0x60005CB")]
		[Address(RVA = "0x19D8F68", Offset = "0x19D8F68", VA = "0x19D8F68")]
		public void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x60005CC")]
		[Address(RVA = "0x19D8F80", Offset = "0x19D8F80", VA = "0x19D8F80")]
		public void FixTransforms()
		{
		}

		[Token(Token = "0x60005CD")]
		[Address(RVA = "0x19D8F9C", Offset = "0x19D8F9C", VA = "0x19D8F9C", Slot = "5")]
		public override void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x60005CE")]
		[Address(RVA = "0x19D9038", Offset = "0x19D9038", VA = "0x19D9038")]
		public void ReadPose()
		{
		}

		[Token(Token = "0x60005CF")]
		[Address(RVA = "0x19D9050", Offset = "0x19D9050", VA = "0x19D9050")]
		public void WritePose(float solverWeight)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000074")]
	public class IKMappingLimb : IKMapping
	{
		[Serializable]
		[Token(Token = "0x20004EB")]
		public enum BoneMapType
		{
			[Token(Token = "0x40019D3")]
			Parent,
			[Token(Token = "0x40019D4")]
			Bone1,
			[Token(Token = "0x40019D5")]
			Bone2,
			[Token(Token = "0x40019D6")]
			Bone3
		}

		[Token(Token = "0x400040A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform parentBone;

		[Token(Token = "0x400040B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform bone1;

		[Token(Token = "0x400040C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform bone2;

		[Token(Token = "0x400040D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform bone3;

		[Token(Token = "0x400040E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA120BC", Offset = "0xA120BC")]
		public float maintainRotationWeight;

		[Token(Token = "0x400040F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA120D4", Offset = "0xA120D4")]
		public float weight;

		[NonSerialized]
		[Token(Token = "0x4000410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool updatePlaneRotations;

		[Token(Token = "0x4000411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private BoneMap boneMapParent;

		[Token(Token = "0x4000412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private BoneMap boneMap1;

		[Token(Token = "0x4000413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private BoneMap boneMap2;

		[Token(Token = "0x4000414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private BoneMap boneMap3;

		[Token(Token = "0x60005D0")]
		[Address(RVA = "0x19D9074", Offset = "0x19D9074", VA = "0x19D9074", Slot = "4")]
		public override bool IsValid(IKSolver solver, ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x60005D1")]
		[Address(RVA = "0x19D90F8", Offset = "0x19D90F8", VA = "0x19D90F8")]
		public BoneMap GetBoneMap(BoneMapType boneMap)
		{
			return null;
		}

		[Token(Token = "0x60005D2")]
		[Address(RVA = "0x19D91CC", Offset = "0x19D91CC", VA = "0x19D91CC")]
		public void SetLimbOrientation(Vector3 upper, Vector3 lower)
		{
		}

		[Token(Token = "0x60005D3")]
		[Address(RVA = "0x19D9520", Offset = "0x19D9520", VA = "0x19D9520")]
		public IKMappingLimb()
		{
		}

		[Token(Token = "0x60005D4")]
		[Address(RVA = "0x19D9628", Offset = "0x19D9628", VA = "0x19D9628")]
		public IKMappingLimb(Transform bone1, Transform bone2, Transform bone3, [Optional] Transform parentBone)
		{
		}

		[Token(Token = "0x60005D5")]
		[Address(RVA = "0x19D975C", Offset = "0x19D975C", VA = "0x19D975C")]
		public void SetBones(Transform bone1, Transform bone2, Transform bone3, [Optional] Transform parentBone)
		{
		}

		[Token(Token = "0x60005D6")]
		[Address(RVA = "0x19D9768", Offset = "0x19D9768", VA = "0x19D9768")]
		public void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x60005D7")]
		[Address(RVA = "0x19D9810", Offset = "0x19D9810", VA = "0x19D9810")]
		public void FixTransforms()
		{
		}

		[Token(Token = "0x60005D8")]
		[Address(RVA = "0x19D98C8", Offset = "0x19D98C8", VA = "0x19D98C8", Slot = "5")]
		public override void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x60005D9")]
		[Address(RVA = "0x19D9B38", Offset = "0x19D9B38", VA = "0x19D9B38")]
		public void ReadPose()
		{
		}

		[Token(Token = "0x60005DA")]
		[Address(RVA = "0x19D9BF0", Offset = "0x19D9BF0", VA = "0x19D9BF0")]
		public void WritePose(IKSolverFullBody solver, bool fullBody)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000075")]
	public class IKMappingSpine : IKMapping
	{
		[Token(Token = "0x4000415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform[] spineBones;

		[Token(Token = "0x4000416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform leftUpperArmBone;

		[Token(Token = "0x4000417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform rightUpperArmBone;

		[Token(Token = "0x4000418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform leftThighBone;

		[Token(Token = "0x4000419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform rightThighBone;

		[Token(Token = "0x400041A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA120EC", Offset = "0xA120EC")]
		public int iterations;

		[Token(Token = "0x400041B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA12104", Offset = "0xA12104")]
		public float twistWeight;

		[Token(Token = "0x400041C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int rootNodeIndex;

		[Token(Token = "0x400041D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private BoneMap[] spine;

		[Token(Token = "0x400041E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private BoneMap leftUpperArm;

		[Token(Token = "0x400041F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private BoneMap rightUpperArm;

		[Token(Token = "0x4000420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private BoneMap leftThigh;

		[Token(Token = "0x4000421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private BoneMap rightThigh;

		[Token(Token = "0x4000422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool useFABRIK;

		[Token(Token = "0x60005DB")]
		[Address(RVA = "0x19D9D5C", Offset = "0x19D9D5C", VA = "0x19D9D5C", Slot = "4")]
		public override bool IsValid(IKSolver solver, ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x60005DC")]
		[Address(RVA = "0x19DA04C", Offset = "0x19DA04C", VA = "0x19DA04C")]
		public IKMappingSpine()
		{
		}

		[Token(Token = "0x60005DD")]
		[Address(RVA = "0x19DA168", Offset = "0x19DA168", VA = "0x19DA168")]
		public IKMappingSpine(Transform[] spineBones, Transform leftUpperArmBone, Transform rightUpperArmBone, Transform leftThighBone, Transform rightThighBone)
		{
		}

		[Token(Token = "0x60005DE")]
		[Address(RVA = "0x19DA2C0", Offset = "0x19DA2C0", VA = "0x19DA2C0")]
		public void SetBones(Transform[] spineBones, Transform leftUpperArmBone, Transform rightUpperArmBone, Transform leftThighBone, Transform rightThighBone)
		{
		}

		[Token(Token = "0x60005DF")]
		[Address(RVA = "0x19DA2D0", Offset = "0x19DA2D0", VA = "0x19DA2D0")]
		public void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x60005E0")]
		[Address(RVA = "0x19DA338", Offset = "0x19DA338", VA = "0x19DA338")]
		public void FixTransforms()
		{
		}

		[Token(Token = "0x60005E1")]
		[Address(RVA = "0x19DA3B8", Offset = "0x19DA3B8", VA = "0x19DA3B8", Slot = "5")]
		public override void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x60005E2")]
		[Address(RVA = "0x19DAA0C", Offset = "0x19DAA0C", VA = "0x19DAA0C")]
		private bool UseFABRIK()
		{
			return default(bool);
		}

		[Token(Token = "0x60005E3")]
		[Address(RVA = "0x19DAA44", Offset = "0x19DAA44", VA = "0x19DAA44")]
		public void ReadPose()
		{
		}

		[Token(Token = "0x60005E4")]
		[Address(RVA = "0x19DAD24", Offset = "0x19DAD24", VA = "0x19DAD24")]
		public void WritePose(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x60005E5")]
		[Address(RVA = "0x19DB0D8", Offset = "0x19DB0D8", VA = "0x19DB0D8")]
		public void ForwardReach(Vector3 position)
		{
		}

		[Token(Token = "0x60005E6")]
		[Address(RVA = "0x19DB1C4", Offset = "0x19DB1C4", VA = "0x19DB1C4")]
		private void BackwardReach(Vector3 position)
		{
		}

		[Token(Token = "0x60005E7")]
		[Address(RVA = "0x19DB28C", Offset = "0x19DB28C", VA = "0x19DB28C")]
		private void MapToSolverPositions(IKSolverFullBody solver)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000076")]
	public abstract class IKSolver
	{
		[Serializable]
		[Token(Token = "0x20004EC")]
		public class Point
		{
			[Token(Token = "0x40019D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform transform;

			[Token(Token = "0x40019D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA2131C", Offset = "0xA2131C")]
			public float weight;

			[Token(Token = "0x40019D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 solverPosition;

			[Token(Token = "0x40019DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Quaternion solverRotation;

			[Token(Token = "0x40019DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Vector3 defaultLocalPosition;

			[Token(Token = "0x40019DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public Quaternion defaultLocalRotation;

			[Token(Token = "0x6002682")]
			[Address(RVA = "0x19DCDB4", Offset = "0x19DCDB4", VA = "0x19DCDB4")]
			public void StoreDefaultLocalState()
			{
			}

			[Token(Token = "0x6002683")]
			[Address(RVA = "0x19DCE04", Offset = "0x19DCE04", VA = "0x19DCE04")]
			public void FixTransform()
			{
			}

			[Token(Token = "0x6002684")]
			[Address(RVA = "0x19DCF8C", Offset = "0x19DCF8C", VA = "0x19DCF8C")]
			public void UpdateSolverPosition()
			{
			}

			[Token(Token = "0x6002685")]
			[Address(RVA = "0x19DCFC4", Offset = "0x19DCFC4", VA = "0x19DCFC4")]
			public void UpdateSolverLocalPosition()
			{
			}

			[Token(Token = "0x6002686")]
			[Address(RVA = "0x19DCFFC", Offset = "0x19DCFFC", VA = "0x19DCFFC")]
			public void UpdateSolverState()
			{
			}

			[Token(Token = "0x6002687")]
			[Address(RVA = "0x19DD04C", Offset = "0x19DD04C", VA = "0x19DD04C")]
			public void UpdateSolverLocalState()
			{
			}

			[Token(Token = "0x6002688")]
			[Address(RVA = "0x19DC888", Offset = "0x19DC888", VA = "0x19DC888")]
			public Point()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004ED")]
		public class Bone : Point
		{
			[Token(Token = "0x40019DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public float length;

			[Token(Token = "0x40019DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public float sqrMag;

			[Token(Token = "0x40019DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public Vector3 axis;

			[Token(Token = "0x40019E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private RotationLimit _rotationLimit;

			[Token(Token = "0x40019E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private bool isLimited;

			[Token(Token = "0x17000484")]
			public RotationLimit rotationLimit
			{
				[Token(Token = "0x6002689")]
				[Address(RVA = "0x19DBE58", Offset = "0x19DBE58", VA = "0x19DBE58")]
				get
				{
					return null;
				}
				[Token(Token = "0x600268A")]
				[Address(RVA = "0x19DBF4C", Offset = "0x19DBF4C", VA = "0x19DBF4C")]
				set
				{
				}
			}

			[Token(Token = "0x600268B")]
			[Address(RVA = "0x19DBFD4", Offset = "0x19DBFD4", VA = "0x19DBFD4")]
			public void Swing(Vector3 swingTarget, float weight = 1f)
			{
			}

			[Token(Token = "0x600268C")]
			[Address(RVA = "0x19DC294", Offset = "0x19DC294", VA = "0x19DC294")]
			public static void SolverSwing(Bone[] bones, int index, Vector3 swingTarget, float weight = 1f)
			{
			}

			[Token(Token = "0x600268D")]
			[Address(RVA = "0x19DC574", Offset = "0x19DC574", VA = "0x19DC574")]
			public void Swing2D(Vector3 swingTarget, float weight = 1f)
			{
			}

			[Token(Token = "0x600268E")]
			[Address(RVA = "0x19DC7DC", Offset = "0x19DC7DC", VA = "0x19DC7DC")]
			public void SetToSolverPosition()
			{
			}

			[Token(Token = "0x600268F")]
			[Address(RVA = "0x19DC804", Offset = "0x19DC804", VA = "0x19DC804")]
			public Bone()
			{
			}

			[Token(Token = "0x6002690")]
			[Address(RVA = "0x19DC908", Offset = "0x19DC908", VA = "0x19DC908")]
			public Bone(Transform transform)
			{
			}

			[Token(Token = "0x6002691")]
			[Address(RVA = "0x19DC9A0", Offset = "0x19DC9A0", VA = "0x19DC9A0")]
			public Bone(Transform transform, float weight)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004EE")]
		public class Node : Point
		{
			[Token(Token = "0x40019E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public float length;

			[Token(Token = "0x40019E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public float effectorPositionWeight;

			[Token(Token = "0x40019E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public float effectorRotationWeight;

			[Token(Token = "0x40019E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public Vector3 offset;

			[Token(Token = "0x6002692")]
			[Address(RVA = "0x19DCD50", Offset = "0x19DCD50", VA = "0x19DCD50")]
			public Node()
			{
			}

			[Token(Token = "0x6002693")]
			[Address(RVA = "0x19DCD54", Offset = "0x19DCD54", VA = "0x19DCD54")]
			public Node(Transform transform)
			{
			}

			[Token(Token = "0x6002694")]
			[Address(RVA = "0x19DCD7C", Offset = "0x19DCD7C", VA = "0x19DCD7C")]
			public Node(Transform transform, float weight)
			{
			}
		}

		[Token(Token = "0x20004EF")]
		public delegate void UpdateDelegate();

		[Token(Token = "0x20004F0")]
		public delegate void IterationDelegate(int i);

		[Token(Token = "0x4000423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public Vector3 IKPosition;

		[Token(Token = "0x4000424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1212C", Offset = "0xA1212C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA1212C", Offset = "0xA1212C")]
		public float IKPositionWeight;

		[Token(Token = "0x4000425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA12180", Offset = "0xA12180")]
		private bool <initiated>k__BackingField;

		[Token(Token = "0x4000426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UpdateDelegate OnPreInitiate;

		[Token(Token = "0x4000427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UpdateDelegate OnPostInitiate;

		[Token(Token = "0x4000428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UpdateDelegate OnPreUpdate;

		[Token(Token = "0x4000429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UpdateDelegate OnPostUpdate;

		[Token(Token = "0x400042A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected bool firstInitiation;

		[Token(Token = "0x400042B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[HideInInspector]
		protected Transform root;

		[Token(Token = "0x17000065")]
		public bool initiated
		{
			[Token(Token = "0x60005F1")]
			[Address(RVA = "0x19DB8A8", Offset = "0x19DB8A8", VA = "0x19DB8A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA27DAC", Offset = "0xA27DAC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60005F2")]
			[Address(RVA = "0x19DB8B0", Offset = "0x19DB8B0", VA = "0x19DB8B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA27DBC", Offset = "0xA27DBC")]
			private set
			{
			}
		}

		[Token(Token = "0x60005E8")]
		[Address(RVA = "0x19DB574", Offset = "0x19DB574", VA = "0x19DB574")]
		public bool IsValid()
		{
			return default(bool);
		}

		[Token(Token = "0x60005E9")]
		public abstract bool IsValid(ref string message);

		[Token(Token = "0x60005EA")]
		[Address(RVA = "0x19D3FC0", Offset = "0x19D3FC0", VA = "0x19D3FC0")]
		public void Initiate(Transform root)
		{
		}

		[Token(Token = "0x60005EB")]
		[Address(RVA = "0x19D3EE8", Offset = "0x19D3EE8", VA = "0x19D3EE8")]
		public void Update()
		{
		}

		[Token(Token = "0x60005EC")]
		[Address(RVA = "0x19DB7FC", Offset = "0x19DB7FC", VA = "0x19DB7FC", Slot = "5")]
		public virtual Vector3 GetIKPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60005ED")]
		[Address(RVA = "0x19DB808", Offset = "0x19DB808", VA = "0x19DB808")]
		public void SetIKPosition(Vector3 position)
		{
		}

		[Token(Token = "0x60005EE")]
		[Address(RVA = "0x19DB814", Offset = "0x19DB814", VA = "0x19DB814")]
		public float GetIKPositionWeight()
		{
			return default(float);
		}

		[Token(Token = "0x60005EF")]
		[Address(RVA = "0x19DB81C", Offset = "0x19DB81C", VA = "0x19DB81C")]
		public void SetIKPositionWeight(float weight)
		{
		}

		[Token(Token = "0x60005F0")]
		[Address(RVA = "0x19DB8A0", Offset = "0x19DB8A0", VA = "0x19DB8A0")]
		public Transform GetRoot()
		{
			return null;
		}

		[Token(Token = "0x60005F3")]
		public abstract Point[] GetPoints();

		[Token(Token = "0x60005F4")]
		public abstract Point GetPoint(Transform transform);

		[Token(Token = "0x60005F5")]
		public abstract void FixTransforms();

		[Token(Token = "0x60005F6")]
		public abstract void StoreDefaultLocalState();

		[Token(Token = "0x60005F7")]
		protected abstract void OnInitiate();

		[Token(Token = "0x60005F8")]
		protected abstract void OnUpdate();

		[Token(Token = "0x60005F9")]
		[Address(RVA = "0x19DB8BC", Offset = "0x19DB8BC", VA = "0x19DB8BC")]
		protected void LogWarning(string message)
		{
		}

		[Token(Token = "0x60005FA")]
		[Address(RVA = "0x19DB8D4", Offset = "0x19DB8D4", VA = "0x19DB8D4")]
		public static Transform ContainsDuplicateBone(Bone[] bones)
		{
			return null;
		}

		[Token(Token = "0x60005FB")]
		[Address(RVA = "0x19DBA10", Offset = "0x19DBA10", VA = "0x19DBA10")]
		public static bool HierarchyIsValid(Bone[] bones)
		{
			return default(bool);
		}

		[Token(Token = "0x60005FC")]
		[Address(RVA = "0x19DBABC", Offset = "0x19DBABC", VA = "0x19DBABC")]
		protected static float PreSolveBones(ref Bone[] bones)
		{
			return default(float);
		}

		[Token(Token = "0x60005FD")]
		[Address(RVA = "0x19DBE40", Offset = "0x19DBE40", VA = "0x19DBE40")]
		protected IKSolver()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000077")]
	public class IKSolverAim : IKSolverHeuristic
	{
		[Token(Token = "0x400042C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Transform transform;

		[Token(Token = "0x400042D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Vector3 axis;

		[Token(Token = "0x400042E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public Vector3 poleAxis;

		[Token(Token = "0x400042F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Vector3 polePosition;

		[Token(Token = "0x4000430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA121C8", Offset = "0xA121C8")]
		public float poleWeight;

		[Token(Token = "0x4000431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Transform poleTarget;

		[Token(Token = "0x4000432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA121E0", Offset = "0xA121E0")]
		public float clampWeight;

		[Token(Token = "0x4000433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA121F8", Offset = "0xA121F8")]
		public int clampSmoothing;

		[Token(Token = "0x4000434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public IterationDelegate OnPreIteration;

		[Token(Token = "0x4000435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float step;

		[Token(Token = "0x4000436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private Vector3 clampedIKPosition;

		[Token(Token = "0x4000437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private RotationLimit transformLimit;

		[Token(Token = "0x4000438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Transform lastTransform;

		[Token(Token = "0x17000066")]
		public Vector3 transformAxis
		{
			[Token(Token = "0x60005FF")]
			[Address(RVA = "0x19DD1D4", Offset = "0x19DD1D4", VA = "0x19DD1D4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000067")]
		public Vector3 transformPoleAxis
		{
			[Token(Token = "0x6000600")]
			[Address(RVA = "0x19DD2A0", Offset = "0x19DD2A0", VA = "0x19DD2A0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000068")]
		protected override int minBones
		{
			[Token(Token = "0x6000603")]
			[Address(RVA = "0x19DE010", Offset = "0x19DE010", VA = "0x19DE010", Slot = "12")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000069")]
		protected override Vector3 localDirection
		{
			[Token(Token = "0x6000607")]
			[Address(RVA = "0x19DE5B4", Offset = "0x19DE5B4", VA = "0x19DE5B4", Slot = "15")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x60005FE")]
		[Address(RVA = "0x19DD0D4", Offset = "0x19DD0D4", VA = "0x19DD0D4")]
		public float GetAngle()
		{
			return default(float);
		}

		[Token(Token = "0x6000601")]
		[Address(RVA = "0x19DD36C", Offset = "0x19DD36C", VA = "0x19DD36C", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6000602")]
		[Address(RVA = "0x19DD5EC", Offset = "0x19DD5EC", VA = "0x19DD5EC", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6000604")]
		[Address(RVA = "0x19DDF5C", Offset = "0x19DDF5C", VA = "0x19DDF5C")]
		private void Solve()
		{
		}

		[Token(Token = "0x6000605")]
		[Address(RVA = "0x19DDB84", Offset = "0x19DDB84", VA = "0x19DDB84")]
		private Vector3 GetClampedIKPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000606")]
		[Address(RVA = "0x19DE018", Offset = "0x19DE018", VA = "0x19DE018")]
		private void RotateToTarget(Vector3 targetPosition, Bone bone, float weight)
		{
		}

		[Token(Token = "0x6000608")]
		[Address(RVA = "0x19DE628", Offset = "0x19DE628", VA = "0x19DE628")]
		public IKSolverAim()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000078")]
	public class IKSolverArm : IKSolver
	{
		[Token(Token = "0x4000439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA12210", Offset = "0xA12210")]
		public float IKRotationWeight;

		[Token(Token = "0x400043A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Quaternion IKRotation;

		[Token(Token = "0x400043B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Point chest;

		[Token(Token = "0x400043C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Point shoulder;

		[Token(Token = "0x400043D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Point upperArm;

		[Token(Token = "0x400043E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Point forearm;

		[Token(Token = "0x400043F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Point hand;

		[Token(Token = "0x4000440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool isLeft;

		[Token(Token = "0x4000441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public IKSolverVR.Arm arm;

		[Token(Token = "0x4000442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3[] positions;

		[Token(Token = "0x4000443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Quaternion[] rotations;

		[Token(Token = "0x6000609")]
		[Address(RVA = "0x19DE6C0", Offset = "0x19DE6C0", VA = "0x19DE6C0", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x600060A")]
		[Address(RVA = "0x19DEA34", Offset = "0x19DEA34", VA = "0x19DEA34")]
		public bool SetChain(Transform chest, Transform shoulder, Transform upperArm, Transform forearm, Transform hand, Transform root)
		{
			return default(bool);
		}

		[Token(Token = "0x600060B")]
		[Address(RVA = "0x19DEAA0", Offset = "0x19DEAA0", VA = "0x19DEAA0", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x600060C")]
		[Address(RVA = "0x19DEBFC", Offset = "0x19DEBFC", VA = "0x19DEBFC", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x600060D")]
		[Address(RVA = "0x19DED94", Offset = "0x19DED94", VA = "0x19DED94", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x600060E")]
		[Address(RVA = "0x19DEDE0", Offset = "0x19DEDE0", VA = "0x19DEDE0", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x600060F")]
		[Address(RVA = "0x19DEE40", Offset = "0x19DEE40", VA = "0x19DEE40", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6000610")]
		[Address(RVA = "0x19DF1B0", Offset = "0x19DF1B0", VA = "0x19DF1B0", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6000611")]
		[Address(RVA = "0x19DF1DC", Offset = "0x19DF1DC", VA = "0x19DF1DC")]
		private void Solve()
		{
		}

		[Token(Token = "0x6000612")]
		[Address(RVA = "0x19DEEA4", Offset = "0x19DEEA4", VA = "0x19DEEA4")]
		private void Read()
		{
		}

		[Token(Token = "0x6000613")]
		[Address(RVA = "0x19DF248", Offset = "0x19DF248", VA = "0x19DF248")]
		private void Write()
		{
		}

		[Token(Token = "0x6000614")]
		[Address(RVA = "0x19DF3D4", Offset = "0x19DF3D4", VA = "0x19DF3D4")]
		public IKSolverArm()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000079")]
	public class IKSolverCCD : IKSolverHeuristic
	{
		[Token(Token = "0x4000444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public IterationDelegate OnPreIteration;

		[Token(Token = "0x6000615")]
		[Address(RVA = "0x19DF524", Offset = "0x19DF524", VA = "0x19DF524")]
		public void FadeOutBoneWeights()
		{
		}

		[Token(Token = "0x6000616")]
		[Address(RVA = "0x19DF5D4", Offset = "0x19DF5D4", VA = "0x19DF5D4", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6000617")]
		[Address(RVA = "0x19DF658", Offset = "0x19DF658", VA = "0x19DF658", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6000618")]
		[Address(RVA = "0x19DF954", Offset = "0x19DF954", VA = "0x19DF954")]
		protected void Solve(Vector3 targetPosition)
		{
		}

		[Token(Token = "0x6000619")]
		[Address(RVA = "0x19E00A8", Offset = "0x19E00A8", VA = "0x19E00A8")]
		public IKSolverCCD()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200007A")]
	public class IKSolverFABRIK : IKSolverHeuristic
	{
		[Token(Token = "0x4000445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public IterationDelegate OnPreIteration;

		[Token(Token = "0x4000446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool[] limitedBones;

		[Token(Token = "0x4000447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3[] solverLocalPositions;

		[Token(Token = "0x1700006A")]
		protected override bool boneLengthCanBeZero
		{
			[Token(Token = "0x600061F")]
			[Address(RVA = "0x19E12D8", Offset = "0x19E12D8", VA = "0x19E12D8", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600061A")]
		[Address(RVA = "0x19E00B0", Offset = "0x19E00B0", VA = "0x19E00B0")]
		public void SolveForward(Vector3 position)
		{
		}

		[Token(Token = "0x600061B")]
		[Address(RVA = "0x19E07F8", Offset = "0x19E07F8", VA = "0x19E07F8")]
		public void SolveBackward(Vector3 position)
		{
		}

		[Token(Token = "0x600061C")]
		[Address(RVA = "0x19E0930", Offset = "0x19E0930", VA = "0x19E0930", Slot = "5")]
		public override Vector3 GetIKPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600061D")]
		[Address(RVA = "0x19E09C8", Offset = "0x19E09C8", VA = "0x19E09C8", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x600061E")]
		[Address(RVA = "0x19E0F70", Offset = "0x19E0F70", VA = "0x19E0F70", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6000620")]
		[Address(RVA = "0x19E12E0", Offset = "0x19E12E0", VA = "0x19E12E0")]
		private Vector3 SolveJoint(Vector3 pos1, Vector3 pos2, float length)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000621")]
		[Address(RVA = "0x19E0184", Offset = "0x19E0184", VA = "0x19E0184")]
		private void OnPreSolve()
		{
		}

		[Token(Token = "0x6000622")]
		[Address(RVA = "0x19E08DC", Offset = "0x19E08DC", VA = "0x19E08DC")]
		private void OnPostSolve()
		{
		}

		[Token(Token = "0x6000623")]
		[Address(RVA = "0x19E127C", Offset = "0x19E127C", VA = "0x19E127C")]
		private void Solve(Vector3 targetPosition)
		{
		}

		[Token(Token = "0x6000624")]
		[Address(RVA = "0x19E0620", Offset = "0x19E0620", VA = "0x19E0620")]
		private void ForwardReach(Vector3 position)
		{
		}

		[Token(Token = "0x6000625")]
		[Address(RVA = "0x19E1B20", Offset = "0x19E1B20", VA = "0x19E1B20")]
		private void SolverMove(int index, Vector3 offset)
		{
		}

		[Token(Token = "0x6000626")]
		[Address(RVA = "0x19E1C30", Offset = "0x19E1C30", VA = "0x19E1C30")]
		private void SolverRotate(int index, Quaternion rotation, bool recursive)
		{
		}

		[Token(Token = "0x6000627")]
		[Address(RVA = "0x19E1D5C", Offset = "0x19E1D5C", VA = "0x19E1D5C")]
		private void SolverRotateChildren(int index, Quaternion rotation)
		{
		}

		[Token(Token = "0x6000628")]
		[Address(RVA = "0x19E1E74", Offset = "0x19E1E74", VA = "0x19E1E74")]
		private void SolverMoveChildrenAroundPoint(int index, Quaternion rotation)
		{
		}

		[Token(Token = "0x6000629")]
		[Address(RVA = "0x19E0CD8", Offset = "0x19E0CD8", VA = "0x19E0CD8")]
		private Quaternion GetParentSolverRotation(int index)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600062A")]
		[Address(RVA = "0x19E0E24", Offset = "0x19E0E24", VA = "0x19E0E24")]
		private Vector3 GetParentSolverPosition(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600062B")]
		[Address(RVA = "0x19E2060", Offset = "0x19E2060", VA = "0x19E2060")]
		private Quaternion GetLimitedRotation(int index, Quaternion q, out bool changed)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600062C")]
		[Address(RVA = "0x19E1598", Offset = "0x19E1598", VA = "0x19E1598")]
		private void LimitForward(int rotateBone, int limitBone)
		{
		}

		[Token(Token = "0x600062D")]
		[Address(RVA = "0x19E08CC", Offset = "0x19E08CC", VA = "0x19E08CC")]
		private void BackwardReach(Vector3 position)
		{
		}

		[Token(Token = "0x600062E")]
		[Address(RVA = "0x19E27C8", Offset = "0x19E27C8", VA = "0x19E27C8")]
		private void BackwardReachUnlimited(Vector3 position)
		{
		}

		[Token(Token = "0x600062F")]
		[Address(RVA = "0x19E2234", Offset = "0x19E2234", VA = "0x19E2234")]
		private void BackwardReachLimited(Vector3 position)
		{
		}

		[Token(Token = "0x6000630")]
		[Address(RVA = "0x19E13F8", Offset = "0x19E13F8", VA = "0x19E13F8")]
		private void MapToSolverPositions()
		{
		}

		[Token(Token = "0x6000631")]
		[Address(RVA = "0x19E14D4", Offset = "0x19E14D4", VA = "0x19E14D4")]
		private void MapToSolverPositionsLimited()
		{
		}

		[Token(Token = "0x6000632")]
		[Address(RVA = "0x19E2894", Offset = "0x19E2894", VA = "0x19E2894")]
		public IKSolverFABRIK()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200007B")]
	public class IKSolverFABRIKRoot : IKSolver
	{
		[Token(Token = "0x4000448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int iterations;

		[Token(Token = "0x4000449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA12228", Offset = "0xA12228")]
		public float rootPin;

		[Token(Token = "0x400044A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public FABRIKChain[] chains;

		[Token(Token = "0x400044B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool zeroWeightApplied;

		[Token(Token = "0x400044C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool[] isRoot;

		[Token(Token = "0x400044D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 rootDefaultPosition;

		[Token(Token = "0x6000633")]
		[Address(RVA = "0x19E290C", Offset = "0x19E290C", VA = "0x19E290C", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000634")]
		[Address(RVA = "0x19E31D8", Offset = "0x19E31D8", VA = "0x19E31D8", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000635")]
		[Address(RVA = "0x19E3270", Offset = "0x19E3270", VA = "0x19E3270", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x6000636")]
		[Address(RVA = "0x19E3310", Offset = "0x19E3310", VA = "0x19E3310", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6000637")]
		[Address(RVA = "0x19E3410", Offset = "0x19E3410", VA = "0x19E3410")]
		private bool IsRoot(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000638")]
		[Address(RVA = "0x19E34AC", Offset = "0x19E34AC", VA = "0x19E34AC", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6000639")]
		[Address(RVA = "0x19E3A14", Offset = "0x19E3A14", VA = "0x19E3A14", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x600063A")]
		[Address(RVA = "0x19E3C14", Offset = "0x19E3C14", VA = "0x19E3C14", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x600063B")]
		[Address(RVA = "0x19E3AC4", Offset = "0x19E3AC4", VA = "0x19E3AC4")]
		private void AddPointsToArray(ref Point[] array, FABRIKChain chain)
		{
		}

		[Token(Token = "0x600063C")]
		[Address(RVA = "0x19E36E0", Offset = "0x19E36E0", VA = "0x19E36E0")]
		private Vector3 GetCentroid()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600063D")]
		[Address(RVA = "0x19E3CAC", Offset = "0x19E3CAC", VA = "0x19E3CAC")]
		public IKSolverFABRIKRoot()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200007C")]
	public class IKSolverFullBody : IKSolver
	{
		[Token(Token = "0x400044E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA12240", Offset = "0xA12240")]
		public int iterations;

		[Token(Token = "0x400044F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public FBIKChain[] chain;

		[Token(Token = "0x4000450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public IKEffector[] effectors;

		[Token(Token = "0x4000451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public IKMappingSpine spineMapping;

		[Token(Token = "0x4000452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public IKMappingBone[] boneMappings;

		[Token(Token = "0x4000453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public IKMappingLimb[] limbMappings;

		[Token(Token = "0x4000454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool FABRIKPass;

		[Token(Token = "0x4000455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public UpdateDelegate OnPreRead;

		[Token(Token = "0x4000456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public UpdateDelegate OnPreSolve;

		[Token(Token = "0x4000457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public IterationDelegate OnPreIteration;

		[Token(Token = "0x4000458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public IterationDelegate OnPostIteration;

		[Token(Token = "0x4000459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public UpdateDelegate OnPreBend;

		[Token(Token = "0x400045A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public UpdateDelegate OnPostSolve;

		[Token(Token = "0x400045B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public UpdateDelegate OnStoreDefaultLocalState;

		[Token(Token = "0x400045C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public UpdateDelegate OnFixTransforms;

		[Token(Token = "0x600063E")]
		[Address(RVA = "0x1A2C358", Offset = "0x1A2C358", VA = "0x1A2C358")]
		public IKEffector GetEffector(Transform t)
		{
			return null;
		}

		[Token(Token = "0x600063F")]
		[Address(RVA = "0x1A2C44C", Offset = "0x1A2C44C", VA = "0x1A2C44C")]
		public FBIKChain GetChain(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x6000640")]
		[Address(RVA = "0x1A2C4A8", Offset = "0x1A2C4A8", VA = "0x1A2C4A8")]
		public int GetChainIndex(Transform transform)
		{
			return default(int);
		}

		[Token(Token = "0x6000641")]
		[Address(RVA = "0x1A2C5DC", Offset = "0x1A2C5DC", VA = "0x1A2C5DC")]
		public Node GetNode(int chainIndex, int nodeIndex)
		{
			return null;
		}

		[Token(Token = "0x6000642")]
		[Address(RVA = "0x1A2C638", Offset = "0x1A2C638", VA = "0x1A2C638")]
		public void GetChainAndNodeIndexes(Transform transform, out int chainIndex, out int nodeIndex)
		{
		}

		[Token(Token = "0x6000643")]
		[Address(RVA = "0x1A2C6B8", Offset = "0x1A2C6B8", VA = "0x1A2C6B8", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x6000644")]
		[Address(RVA = "0x1A2C860", Offset = "0x1A2C860", VA = "0x1A2C860", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x6000645")]
		[Address(RVA = "0x1A2C9D4", Offset = "0x1A2C9D4", VA = "0x1A2C9D4", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000646")]
		[Address(RVA = "0x1A2CBD8", Offset = "0x1A2CBD8", VA = "0x1A2CBD8", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000647")]
		[Address(RVA = "0x1A2CCB0", Offset = "0x1A2CCB0", VA = "0x1A2CCB0", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x6000648")]
		[Address(RVA = "0x1A2CD9C", Offset = "0x1A2CD9C", VA = "0x1A2CD9C", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6000649")]
		[Address(RVA = "0x1A2CF10", Offset = "0x1A2CF10", VA = "0x1A2CF10", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x600064A")]
		[Address(RVA = "0x1A2D0D8", Offset = "0x1A2D0D8", VA = "0x1A2D0D8", Slot = "12")]
		protected virtual void ReadPose()
		{
		}

		[Token(Token = "0x600064B")]
		[Address(RVA = "0x1A2D324", Offset = "0x1A2D324", VA = "0x1A2D324", Slot = "13")]
		protected virtual void Solve()
		{
		}

		[Token(Token = "0x600064C")]
		[Address(RVA = "0x1A2D600", Offset = "0x1A2D600", VA = "0x1A2D600", Slot = "14")]
		protected virtual void ApplyBendConstraints()
		{
		}

		[Token(Token = "0x600064D")]
		[Address(RVA = "0x1A2D644", Offset = "0x1A2D644", VA = "0x1A2D644", Slot = "15")]
		protected virtual void WritePose()
		{
		}

		[Token(Token = "0x600064E")]
		[Address(RVA = "0x1A2D734", Offset = "0x1A2D734", VA = "0x1A2D734")]
		public IKSolverFullBody()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200007D")]
	public enum FullBodyBipedEffector
	{
		[Token(Token = "0x400045E")]
		Body,
		[Token(Token = "0x400045F")]
		LeftShoulder,
		[Token(Token = "0x4000460")]
		RightShoulder,
		[Token(Token = "0x4000461")]
		LeftThigh,
		[Token(Token = "0x4000462")]
		RightThigh,
		[Token(Token = "0x4000463")]
		LeftHand,
		[Token(Token = "0x4000464")]
		RightHand,
		[Token(Token = "0x4000465")]
		LeftFoot,
		[Token(Token = "0x4000466")]
		RightFoot
	}
	[Serializable]
	[Token(Token = "0x200007E")]
	public enum FullBodyBipedChain
	{
		[Token(Token = "0x4000468")]
		LeftArm,
		[Token(Token = "0x4000469")]
		RightArm,
		[Token(Token = "0x400046A")]
		LeftLeg,
		[Token(Token = "0x400046B")]
		RightLeg
	}
	[Serializable]
	[Token(Token = "0x200007F")]
	public class IKSolverFullBodyBiped : IKSolverFullBody
	{
		[Token(Token = "0x400046C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Transform rootNode;

		[Token(Token = "0x400046D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA12258", Offset = "0xA12258")]
		public float spineStiffness;

		[Token(Token = "0x400046E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA12270", Offset = "0xA12270")]
		public float pullBodyVertical;

		[Token(Token = "0x400046F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA12288", Offset = "0xA12288")]
		public float pullBodyHorizontal;

		[Token(Token = "0x4000470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA122A0", Offset = "0xA122A0")]
		private Vector3 <pullBodyOffset>k__BackingField;

		[Token(Token = "0x4000471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Vector3 offset;

		[Token(Token = "0x1700006B")]
		public IKEffector bodyEffector
		{
			[Token(Token = "0x600064F")]
			[Address(RVA = "0x1A2D80C", Offset = "0x1A2D80C", VA = "0x1A2D80C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006C")]
		public IKEffector leftShoulderEffector
		{
			[Token(Token = "0x6000650")]
			[Address(RVA = "0x1A2D954", Offset = "0x1A2D954", VA = "0x1A2D954")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006D")]
		public IKEffector rightShoulderEffector
		{
			[Token(Token = "0x6000651")]
			[Address(RVA = "0x1A2D95C", Offset = "0x1A2D95C", VA = "0x1A2D95C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006E")]
		public IKEffector leftThighEffector
		{
			[Token(Token = "0x6000652")]
			[Address(RVA = "0x1A2D964", Offset = "0x1A2D964", VA = "0x1A2D964")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006F")]
		public IKEffector rightThighEffector
		{
			[Token(Token = "0x6000653")]
			[Address(RVA = "0x1A2D96C", Offset = "0x1A2D96C", VA = "0x1A2D96C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000070")]
		public IKEffector leftHandEffector
		{
			[Token(Token = "0x6000654")]
			[Address(RVA = "0x1A2D974", Offset = "0x1A2D974", VA = "0x1A2D974")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000071")]
		public IKEffector rightHandEffector
		{
			[Token(Token = "0x6000655")]
			[Address(RVA = "0x1A2D97C", Offset = "0x1A2D97C", VA = "0x1A2D97C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000072")]
		public IKEffector leftFootEffector
		{
			[Token(Token = "0x6000656")]
			[Address(RVA = "0x1A2D984", Offset = "0x1A2D984", VA = "0x1A2D984")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000073")]
		public IKEffector rightFootEffector
		{
			[Token(Token = "0x6000657")]
			[Address(RVA = "0x1A2D98C", Offset = "0x1A2D98C", VA = "0x1A2D98C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000074")]
		public FBIKChain leftArmChain
		{
			[Token(Token = "0x6000658")]
			[Address(RVA = "0x1A2D994", Offset = "0x1A2D994", VA = "0x1A2D994")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000075")]
		public FBIKChain rightArmChain
		{
			[Token(Token = "0x6000659")]
			[Address(RVA = "0x1A2D9CC", Offset = "0x1A2D9CC", VA = "0x1A2D9CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000076")]
		public FBIKChain leftLegChain
		{
			[Token(Token = "0x600065A")]
			[Address(RVA = "0x1A2DA04", Offset = "0x1A2DA04", VA = "0x1A2DA04")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000077")]
		public FBIKChain rightLegChain
		{
			[Token(Token = "0x600065B")]
			[Address(RVA = "0x1A2DA3C", Offset = "0x1A2DA3C", VA = "0x1A2DA3C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000078")]
		public IKMappingLimb leftArmMapping
		{
			[Token(Token = "0x600065C")]
			[Address(RVA = "0x1A2DA74", Offset = "0x1A2DA74", VA = "0x1A2DA74")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000079")]
		public IKMappingLimb rightArmMapping
		{
			[Token(Token = "0x600065D")]
			[Address(RVA = "0x1A2DAA8", Offset = "0x1A2DAA8", VA = "0x1A2DAA8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007A")]
		public IKMappingLimb leftLegMapping
		{
			[Token(Token = "0x600065E")]
			[Address(RVA = "0x1A2DAE0", Offset = "0x1A2DAE0", VA = "0x1A2DAE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007B")]
		public IKMappingLimb rightLegMapping
		{
			[Token(Token = "0x600065F")]
			[Address(RVA = "0x1A2DB18", Offset = "0x1A2DB18", VA = "0x1A2DB18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007C")]
		public IKMappingBone headMapping
		{
			[Token(Token = "0x6000660")]
			[Address(RVA = "0x1A2DB50", Offset = "0x1A2DB50", VA = "0x1A2DB50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007D")]
		public Vector3 pullBodyOffset
		{
			[Token(Token = "0x6000670")]
			[Address(RVA = "0x1A2FB14", Offset = "0x1A2FB14", VA = "0x1A2FB14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA27DCC", Offset = "0xA27DCC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000671")]
			[Address(RVA = "0x1A2FB20", Offset = "0x1A2FB20", VA = "0x1A2FB20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA27DDC", Offset = "0xA27DDC")]
			private set
			{
			}
		}

		[Token(Token = "0x6000661")]
		[Address(RVA = "0x1A2DB84", Offset = "0x1A2DB84", VA = "0x1A2DB84")]
		public void SetChainWeights(FullBodyBipedChain c, float pull, float reach = 0f)
		{
		}

		[Token(Token = "0x6000662")]
		[Address(RVA = "0x1A2DC90", Offset = "0x1A2DC90", VA = "0x1A2DC90")]
		public void SetEffectorWeights(FullBodyBipedEffector effector, float positionWeight, float rotationWeight)
		{
		}

		[Token(Token = "0x6000663")]
		[Address(RVA = "0x1A2DBD8", Offset = "0x1A2DBD8", VA = "0x1A2DBD8")]
		public FBIKChain GetChain(FullBodyBipedChain c)
		{
			return null;
		}

		[Token(Token = "0x6000664")]
		[Address(RVA = "0x1A2DD6C", Offset = "0x1A2DD6C", VA = "0x1A2DD6C")]
		public FBIKChain GetChain(FullBodyBipedEffector effector)
		{
			return null;
		}

		[Token(Token = "0x6000665")]
		[Address(RVA = "0x1A2D814", Offset = "0x1A2D814", VA = "0x1A2D814")]
		public IKEffector GetEffector(FullBodyBipedEffector effector)
		{
			return null;
		}

		[Token(Token = "0x6000666")]
		[Address(RVA = "0x1A2DE3C", Offset = "0x1A2DE3C", VA = "0x1A2DE3C")]
		public IKEffector GetEndEffector(FullBodyBipedChain c)
		{
			return null;
		}

		[Token(Token = "0x6000667")]
		[Address(RVA = "0x1A2DEF4", Offset = "0x1A2DEF4", VA = "0x1A2DEF4")]
		public IKMappingLimb GetLimbMapping(FullBodyBipedChain chain)
		{
			return null;
		}

		[Token(Token = "0x6000668")]
		[Address(RVA = "0x1A2DFA8", Offset = "0x1A2DFA8", VA = "0x1A2DFA8")]
		public IKMappingLimb GetLimbMapping(FullBodyBipedEffector effector)
		{
			return null;
		}

		[Token(Token = "0x6000669")]
		[Address(RVA = "0x1A2E05C", Offset = "0x1A2E05C", VA = "0x1A2E05C")]
		public IKMappingSpine GetSpineMapping()
		{
			return null;
		}

		[Token(Token = "0x600066A")]
		[Address(RVA = "0x1A2E064", Offset = "0x1A2E064", VA = "0x1A2E064")]
		public IKMappingBone GetHeadMapping()
		{
			return null;
		}

		[Token(Token = "0x600066B")]
		[Address(RVA = "0x1A2E098", Offset = "0x1A2E098", VA = "0x1A2E098")]
		public IKConstraintBend GetBendConstraint(FullBodyBipedChain limb)
		{
			return null;
		}

		[Token(Token = "0x600066C")]
		[Address(RVA = "0x1A2E160", Offset = "0x1A2E160", VA = "0x1A2E160", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x600066D")]
		[Address(RVA = "0x1A2E2F0", Offset = "0x1A2E2F0", VA = "0x1A2E2F0")]
		public void SetToReferences(BipedReferences references, [Optional] Transform rootNode)
		{
		}

		[Token(Token = "0x600066E")]
		[Address(RVA = "0x1A2F42C", Offset = "0x1A2F42C", VA = "0x1A2F42C")]
		public static Transform DetectRootNodeBone(BipedReferences references)
		{
			return null;
		}

		[Token(Token = "0x600066F")]
		[Address(RVA = "0x1A2F8C0", Offset = "0x1A2F8C0", VA = "0x1A2F8C0")]
		public void SetLimbOrientations(BipedLimbOrientations o)
		{
		}

		[Token(Token = "0x6000672")]
		[Address(RVA = "0x1A2F920", Offset = "0x1A2F920", VA = "0x1A2F920")]
		private void SetLimbOrientation(FullBodyBipedChain chain, BipedLimbOrientations.LimbOrientation limbOrientation)
		{
		}

		[Token(Token = "0x6000673")]
		[Address(RVA = "0x1A2F740", Offset = "0x1A2F740", VA = "0x1A2F740")]
		private static Transform GetLeftClavicle(BipedReferences references)
		{
			return null;
		}

		[Token(Token = "0x6000674")]
		[Address(RVA = "0x1A2F800", Offset = "0x1A2F800", VA = "0x1A2F800")]
		private static Transform GetRightClavicle(BipedReferences references)
		{
			return null;
		}

		[Token(Token = "0x6000675")]
		[Address(RVA = "0x1A2FB2C", Offset = "0x1A2FB2C", VA = "0x1A2FB2C")]
		private static bool Contains(Transform[] array, Transform transform)
		{
			return default(bool);
		}

		[Token(Token = "0x6000676")]
		[Address(RVA = "0x1A2FC08", Offset = "0x1A2FC08", VA = "0x1A2FC08", Slot = "12")]
		protected override void ReadPose()
		{
		}

		[Token(Token = "0x6000677")]
		[Address(RVA = "0x1A2FD50", Offset = "0x1A2FD50", VA = "0x1A2FD50")]
		private void PullBody()
		{
		}

		[Token(Token = "0x6000678")]
		[Address(RVA = "0x1A2FEE0", Offset = "0x1A2FEE0", VA = "0x1A2FEE0")]
		private Vector3 GetBodyOffset()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000679")]
		[Address(RVA = "0x1A300E0", Offset = "0x1A300E0", VA = "0x1A300E0")]
		private Vector3 GetHandBodyPull(IKEffector effector, FBIKChain arm, Vector3 offset)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600067A")]
		[Address(RVA = "0x1A302E0", Offset = "0x1A302E0", VA = "0x1A302E0", Slot = "14")]
		protected override void ApplyBendConstraints()
		{
		}

		[Token(Token = "0x600067B")]
		[Address(RVA = "0x1A30614", Offset = "0x1A30614", VA = "0x1A30614", Slot = "15")]
		protected override void WritePose()
		{
		}

		[Token(Token = "0x600067C")]
		[Address(RVA = "0x1A30714", Offset = "0x1A30714", VA = "0x1A30714")]
		public IKSolverFullBodyBiped()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000080")]
	public class IKSolverHeuristic : IKSolver
	{
		[Token(Token = "0x4000472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform target;

		[Token(Token = "0x4000473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float tolerance;

		[Token(Token = "0x4000474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int maxIterations;

		[Token(Token = "0x4000475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool useRotationLimits;

		[Token(Token = "0x4000476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		public bool XY;

		[Token(Token = "0x4000477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Bone[] bones;

		[Token(Token = "0x4000478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Vector3 lastLocalDirection;

		[Token(Token = "0x4000479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		protected float chainLength;

		[Token(Token = "0x1700007E")]
		protected virtual int minBones
		{
			[Token(Token = "0x6000684")]
			[Address(RVA = "0x1A30F64", Offset = "0x1A30F64", VA = "0x1A30F64", Slot = "12")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700007F")]
		protected virtual bool boneLengthCanBeZero
		{
			[Token(Token = "0x6000685")]
			[Address(RVA = "0x1A30F6C", Offset = "0x1A30F6C", VA = "0x1A30F6C", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000080")]
		protected virtual bool allowCommonParent
		{
			[Token(Token = "0x6000686")]
			[Address(RVA = "0x1A30F74", Offset = "0x1A30F74", VA = "0x1A30F74", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000081")]
		protected virtual Vector3 localDirection
		{
			[Token(Token = "0x600068A")]
			[Address(RVA = "0x1A31504", Offset = "0x1A31504", VA = "0x1A31504", Slot = "15")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000082")]
		protected float positionOffset
		{
			[Token(Token = "0x600068B")]
			[Address(RVA = "0x1A31638", Offset = "0x1A31638", VA = "0x1A31638")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600067D")]
		[Address(RVA = "0x1A30720", Offset = "0x1A30720", VA = "0x1A30720")]
		public bool SetChain(Transform[] hierarchy, Transform root)
		{
			return default(bool);
		}

		[Token(Token = "0x600067E")]
		[Address(RVA = "0x1A308B4", Offset = "0x1A308B4", VA = "0x1A308B4")]
		public void AddBone(Transform bone)
		{
		}

		[Token(Token = "0x600067F")]
		[Address(RVA = "0x1A309F0", Offset = "0x1A309F0", VA = "0x1A309F0", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000680")]
		[Address(RVA = "0x1A30A5C", Offset = "0x1A30A5C", VA = "0x1A30A5C", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x6000681")]
		[Address(RVA = "0x1A30ADC", Offset = "0x1A30ADC", VA = "0x1A30ADC", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000682")]
		[Address(RVA = "0x1A30E68", Offset = "0x1A30E68", VA = "0x1A30E68", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x6000683")]
		[Address(RVA = "0x1A30E70", Offset = "0x1A30E70", VA = "0x1A30E70", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x6000687")]
		[Address(RVA = "0x1A30F7C", Offset = "0x1A30F7C", VA = "0x1A30F7C", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6000688")]
		[Address(RVA = "0x1A30F80", Offset = "0x1A30F80", VA = "0x1A30F80", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6000689")]
		[Address(RVA = "0x1A30F84", Offset = "0x1A30F84", VA = "0x1A30F84")]
		protected void InitiateBones()
		{
		}

		[Token(Token = "0x600068C")]
		[Address(RVA = "0x1A316FC", Offset = "0x1A316FC", VA = "0x1A316FC")]
		protected Vector3 GetSingularityOffset()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600068D")]
		[Address(RVA = "0x1A31AA0", Offset = "0x1A31AA0", VA = "0x1A31AA0")]
		private bool SingularityDetected()
		{
			return default(bool);
		}

		[Token(Token = "0x600068E")]
		[Address(RVA = "0x1A31D54", Offset = "0x1A31D54", VA = "0x1A31D54")]
		public IKSolverHeuristic()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000081")]
	public class IKSolverLeg : IKSolver
	{
		[Token(Token = "0x400047A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA122B0", Offset = "0xA122B0")]
		public float IKRotationWeight;

		[Token(Token = "0x400047B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Quaternion IKRotation;

		[Token(Token = "0x400047C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Point pelvis;

		[Token(Token = "0x400047D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Point thigh;

		[Token(Token = "0x400047E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Point calf;

		[Token(Token = "0x400047F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Point foot;

		[Token(Token = "0x4000480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Point toe;

		[Token(Token = "0x4000481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public IKSolverVR.Leg leg;

		[Token(Token = "0x4000482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Vector3 heelOffset;

		[Token(Token = "0x4000483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3[] positions;

		[Token(Token = "0x4000484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Quaternion[] rotations;

		[Token(Token = "0x600068F")]
		[Address(RVA = "0x1A31DC4", Offset = "0x1A31DC4", VA = "0x1A31DC4", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000690")]
		[Address(RVA = "0x1A32138", Offset = "0x1A32138", VA = "0x1A32138")]
		public bool SetChain(Transform pelvis, Transform thigh, Transform calf, Transform foot, Transform toe, Transform root)
		{
			return default(bool);
		}

		[Token(Token = "0x6000691")]
		[Address(RVA = "0x1A321A8", Offset = "0x1A321A8", VA = "0x1A321A8", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x6000692")]
		[Address(RVA = "0x1A32304", Offset = "0x1A32304", VA = "0x1A32304", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x6000693")]
		[Address(RVA = "0x1A3249C", Offset = "0x1A3249C", VA = "0x1A3249C", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000694")]
		[Address(RVA = "0x1A324F8", Offset = "0x1A324F8", VA = "0x1A324F8", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x6000695")]
		[Address(RVA = "0x1A32568", Offset = "0x1A32568", VA = "0x1A32568", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6000696")]
		[Address(RVA = "0x1A328D4", Offset = "0x1A328D4", VA = "0x1A328D4", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6000697")]
		[Address(RVA = "0x1A32900", Offset = "0x1A32900", VA = "0x1A32900")]
		private void Solve()
		{
		}

		[Token(Token = "0x6000698")]
		[Address(RVA = "0x1A325CC", Offset = "0x1A325CC", VA = "0x1A325CC")]
		private void Read()
		{
		}

		[Token(Token = "0x6000699")]
		[Address(RVA = "0x1A32A04", Offset = "0x1A32A04", VA = "0x1A32A04")]
		private void Write()
		{
		}

		[Token(Token = "0x600069A")]
		[Address(RVA = "0x1A32E8C", Offset = "0x1A32E8C", VA = "0x1A32E8C")]
		public IKSolverLeg()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000082")]
	public class IKSolverLimb : IKSolverTrigonometric
	{
		[Serializable]
		[Token(Token = "0x20004F1")]
		public enum BendModifier
		{
			[Token(Token = "0x40019E7")]
			Animation,
			[Token(Token = "0x40019E8")]
			Target,
			[Token(Token = "0x40019E9")]
			Parent,
			[Token(Token = "0x40019EA")]
			Arm,
			[Token(Token = "0x40019EB")]
			Goal
		}

		[Serializable]
		[Token(Token = "0x20004F2")]
		public struct AxisDirection
		{
			[Token(Token = "0x40019EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 direction;

			[Token(Token = "0x40019ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 axis;

			[Token(Token = "0x40019EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float dot;

			[Token(Token = "0x600269D")]
			[Address(RVA = "0xBA2780", Offset = "0xBA2780", VA = "0xBA2780")]
			public AxisDirection(Vector3 direction, Vector3 axis)
			{
			}
		}

		[Token(Token = "0x4000485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public AvatarIKGoal goal;

		[Token(Token = "0x4000486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public BendModifier bendModifier;

		[Token(Token = "0x4000487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA122C8", Offset = "0xA122C8")]
		public float maintainRotationWeight;

		[Token(Token = "0x4000488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA122E0", Offset = "0xA122E0")]
		public float bendModifierWeight;

		[Token(Token = "0x4000489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Transform bendGoal;

		[Token(Token = "0x400048A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool maintainBendFor1Frame;

		[Token(Token = "0x400048B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
		private bool maintainRotationFor1Frame;

		[Token(Token = "0x400048C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private Quaternion defaultRootRotation;

		[Token(Token = "0x400048D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private Quaternion parentDefaultRotation;

		[Token(Token = "0x400048E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private Quaternion bone3RotationBeforeSolve;

		[Token(Token = "0x400048F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private Quaternion maintainRotation;

		[Token(Token = "0x4000490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private Quaternion bone3DefaultRotation;

		[Token(Token = "0x4000491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private Vector3 _bendNormal;

		[Token(Token = "0x4000492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Vector3 animationNormal;

		[Token(Token = "0x4000493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private AxisDirection[] axisDirectionsLeft;

		[Token(Token = "0x4000494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private AxisDirection[] axisDirectionsRight;

		[Token(Token = "0x17000083")]
		private AxisDirection[] axisDirections
		{
			[Token(Token = "0x60006A2")]
			[Address(RVA = "0x1A347D8", Offset = "0x1A347D8", VA = "0x1A347D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600069B")]
		[Address(RVA = "0x1A330D4", Offset = "0x1A330D4", VA = "0x1A330D4")]
		public void MaintainRotation()
		{
		}

		[Token(Token = "0x600069C")]
		[Address(RVA = "0x1A33124", Offset = "0x1A33124", VA = "0x1A33124")]
		public void MaintainBend()
		{
		}

		[Token(Token = "0x600069D")]
		[Address(RVA = "0x1A33238", Offset = "0x1A33238", VA = "0x1A33238", Slot = "12")]
		protected override void OnInitiateVirtual()
		{
		}

		[Token(Token = "0x600069E")]
		[Address(RVA = "0x1A338A8", Offset = "0x1A338A8", VA = "0x1A338A8", Slot = "13")]
		protected override void OnUpdateVirtual()
		{
		}

		[Token(Token = "0x600069F")]
		[Address(RVA = "0x1A34484", Offset = "0x1A34484", VA = "0x1A34484", Slot = "14")]
		protected override void OnPostSolveVirtual()
		{
		}

		[Token(Token = "0x60006A0")]
		[Address(RVA = "0x1A345CC", Offset = "0x1A345CC", VA = "0x1A345CC")]
		public IKSolverLimb()
		{
		}

		[Token(Token = "0x60006A1")]
		[Address(RVA = "0x1A34750", Offset = "0x1A34750", VA = "0x1A34750")]
		public IKSolverLimb(AvatarIKGoal goal)
		{
		}

		[Token(Token = "0x60006A3")]
		[Address(RVA = "0x1A335B4", Offset = "0x1A335B4", VA = "0x1A335B4")]
		private void StoreAxisDirections(ref AxisDirection[] axisDirections)
		{
		}

		[Token(Token = "0x60006A4")]
		[Address(RVA = "0x1A339D4", Offset = "0x1A339D4", VA = "0x1A339D4")]
		private Vector3 GetModifiedBendNormal()
		{
			return default(Vector3);
		}
	}
	[Serializable]
	[Token(Token = "0x2000083")]
	public class IKSolverLookAt : IKSolver
	{
		[Serializable]
		[Token(Token = "0x20004F3")]
		public class LookAtBone : Bone
		{
			[Token(Token = "0x40019EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			public Vector3 baseForwardOffsetEuler;

			[Token(Token = "0x17000485")]
			public Vector3 forward
			{
				[Token(Token = "0x60026A2")]
				[Address(RVA = "0x1A36894", Offset = "0x1A36894", VA = "0x1A36894")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x600269E")]
			[Address(RVA = "0x1A36FE0", Offset = "0x1A36FE0", VA = "0x1A36FE0")]
			public LookAtBone()
			{
			}

			[Token(Token = "0x600269F")]
			[Address(RVA = "0x1A35A30", Offset = "0x1A35A30", VA = "0x1A35A30")]
			public LookAtBone(Transform transform)
			{
			}

			[Token(Token = "0x60026A0")]
			[Address(RVA = "0x1A35D6C", Offset = "0x1A35D6C", VA = "0x1A35D6C")]
			public void Initiate(Transform root)
			{
			}

			[Token(Token = "0x60026A1")]
			[Address(RVA = "0x1A36C98", Offset = "0x1A36C98", VA = "0x1A36C98")]
			public void LookAt(Vector3 direction, float weight)
			{
			}
		}

		[Token(Token = "0x4000495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform target;

		[Token(Token = "0x4000496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public LookAtBone[] spine;

		[Token(Token = "0x4000497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public LookAtBone head;

		[Token(Token = "0x4000498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public LookAtBone[] eyes;

		[Token(Token = "0x4000499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA122F8", Offset = "0xA122F8")]
		public float bodyWeight;

		[Token(Token = "0x400049A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA12310", Offset = "0xA12310")]
		public float headWeight;

		[Token(Token = "0x400049B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA12328", Offset = "0xA12328")]
		public float eyesWeight;

		[Token(Token = "0x400049C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA12340", Offset = "0xA12340")]
		public float clampWeight;

		[Token(Token = "0x400049D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA12358", Offset = "0xA12358")]
		public float clampWeightHead;

		[Token(Token = "0x400049E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA12370", Offset = "0xA12370")]
		public float clampWeightEyes;

		[Token(Token = "0x400049F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA12388", Offset = "0xA12388")]
		public int clampSmoothing;

		[Token(Token = "0x40004A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public AnimationCurve spineWeightCurve;

		[Token(Token = "0x40004A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Vector3 spineTargetOffset;

		[Token(Token = "0x40004A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected Vector3[] spineForwards;

		[Token(Token = "0x40004A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected Vector3[] headForwards;

		[Token(Token = "0x40004A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected Vector3[] eyeForward;

		[Token(Token = "0x17000084")]
		protected bool spineIsValid
		{
			[Token(Token = "0x60006B3")]
			[Address(RVA = "0x1A35194", Offset = "0x1A35194", VA = "0x1A35194")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000085")]
		protected bool spineIsEmpty
		{
			[Token(Token = "0x60006B4")]
			[Address(RVA = "0x1A3536C", Offset = "0x1A3536C", VA = "0x1A3536C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000086")]
		protected bool headIsValid
		{
			[Token(Token = "0x60006B6")]
			[Address(RVA = "0x1A35278", Offset = "0x1A35278", VA = "0x1A35278")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000087")]
		protected bool headIsEmpty
		{
			[Token(Token = "0x60006B7")]
			[Address(RVA = "0x1A35390", Offset = "0x1A35390", VA = "0x1A35390")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000088")]
		protected bool eyesIsValid
		{
			[Token(Token = "0x60006B9")]
			[Address(RVA = "0x1A35288", Offset = "0x1A35288", VA = "0x1A35288")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000089")]
		protected bool eyesIsEmpty
		{
			[Token(Token = "0x60006BA")]
			[Address(RVA = "0x1A3540C", Offset = "0x1A3540C", VA = "0x1A3540C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60006A5")]
		[Address(RVA = "0x1A34854", Offset = "0x1A34854", VA = "0x1A34854")]
		public void SetLookAtWeight(float weight)
		{
		}

		[Token(Token = "0x60006A6")]
		[Address(RVA = "0x1A348D8", Offset = "0x1A348D8", VA = "0x1A348D8")]
		public void SetLookAtWeight(float weight, float bodyWeight)
		{
		}

		[Token(Token = "0x60006A7")]
		[Address(RVA = "0x1A34984", Offset = "0x1A34984", VA = "0x1A34984")]
		public void SetLookAtWeight(float weight, float bodyWeight, float headWeight)
		{
		}

		[Token(Token = "0x60006A8")]
		[Address(RVA = "0x1A34A4C", Offset = "0x1A34A4C", VA = "0x1A34A4C")]
		public void SetLookAtWeight(float weight, float bodyWeight, float headWeight, float eyesWeight)
		{
		}

		[Token(Token = "0x60006A9")]
		[Address(RVA = "0x1A34B38", Offset = "0x1A34B38", VA = "0x1A34B38")]
		public void SetLookAtWeight(float weight, float bodyWeight, float headWeight, float eyesWeight, float clampWeight)
		{
		}

		[Token(Token = "0x60006AA")]
		[Address(RVA = "0x1A34C44", Offset = "0x1A34C44", VA = "0x1A34C44")]
		public void SetLookAtWeight(float weight, float bodyWeight = 0f, float headWeight = 1f, float eyesWeight = 0.5f, float clampWeight = 0.5f, float clampWeightHead = 0.5f, float clampWeightEyes = 0.3f)
		{
		}

		[Token(Token = "0x60006AB")]
		[Address(RVA = "0x1A34D8C", Offset = "0x1A34D8C", VA = "0x1A34D8C", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x60006AC")]
		[Address(RVA = "0x1A34EBC", Offset = "0x1A34EBC", VA = "0x1A34EBC", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x60006AD")]
		[Address(RVA = "0x1A35000", Offset = "0x1A35000", VA = "0x1A35000", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x60006AE")]
		[Address(RVA = "0x1A35430", Offset = "0x1A35430", VA = "0x1A35430", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x60006AF")]
		[Address(RVA = "0x1A35668", Offset = "0x1A35668", VA = "0x1A35668", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x60006B0")]
		[Address(RVA = "0x1A35808", Offset = "0x1A35808", VA = "0x1A35808")]
		public bool SetChain(Transform[] spine, Transform head, Transform[] eyes, Transform root)
		{
			return default(bool);
		}

		[Token(Token = "0x60006B1")]
		[Address(RVA = "0x1A35A5C", Offset = "0x1A35A5C", VA = "0x1A35A5C", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x60006B2")]
		[Address(RVA = "0x1A35EA8", Offset = "0x1A35EA8", VA = "0x1A35EA8", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x60006B5")]
		[Address(RVA = "0x1A35FAC", Offset = "0x1A35FAC", VA = "0x1A35FAC")]
		protected void SolveSpine()
		{
		}

		[Token(Token = "0x60006B8")]
		[Address(RVA = "0x1A361D8", Offset = "0x1A361D8", VA = "0x1A361D8")]
		protected void SolveHead()
		{
		}

		[Token(Token = "0x60006BB")]
		[Address(RVA = "0x1A36434", Offset = "0x1A36434", VA = "0x1A36434")]
		protected void SolveEyes()
		{
		}

		[Token(Token = "0x60006BC")]
		[Address(RVA = "0x1A36960", Offset = "0x1A36960", VA = "0x1A36960")]
		protected Vector3[] GetForwards(ref Vector3[] forwards, Vector3 baseForward, Vector3 targetForward, int bones, float clamp)
		{
			return null;
		}

		[Token(Token = "0x60006BD")]
		[Address(RVA = "0x1A358B8", Offset = "0x1A358B8", VA = "0x1A358B8")]
		protected void SetBones(Transform[] array, ref LookAtBone[] bones)
		{
		}

		[Token(Token = "0x60006BE")]
		[Address(RVA = "0x1A36E00", Offset = "0x1A36E00", VA = "0x1A36E00")]
		public IKSolverLookAt()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000084")]
	public class IKSolverTrigonometric : IKSolver
	{
		[Serializable]
		[Token(Token = "0x20004F4")]
		public class TrigonometricBone : Bone
		{
			[Token(Token = "0x40019F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			private Quaternion targetToLocalSpace;

			[Token(Token = "0x40019F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			private Vector3 defaultLocalBendNormal;

			[Token(Token = "0x60026A3")]
			[Address(RVA = "0x1A385B8", Offset = "0x1A385B8", VA = "0x1A385B8")]
			public void Initiate(Vector3 childPosition, Vector3 bendNormal)
			{
			}

			[Token(Token = "0x60026A4")]
			[Address(RVA = "0x1A39170", Offset = "0x1A39170", VA = "0x1A39170")]
			public Quaternion GetRotation(Vector3 direction, Vector3 bendNormal)
			{
				return default(Quaternion);
			}

			[Token(Token = "0x60026A5")]
			[Address(RVA = "0x1A3316C", Offset = "0x1A3316C", VA = "0x1A3316C")]
			public Vector3 GetBendNormalFromCurrentRotation()
			{
				return default(Vector3);
			}

			[Token(Token = "0x60026A6")]
			[Address(RVA = "0x1A39238", Offset = "0x1A39238", VA = "0x1A39238")]
			public TrigonometricBone()
			{
			}
		}

		[Token(Token = "0x40004A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform target;

		[Token(Token = "0x40004A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA123A0", Offset = "0xA123A0")]
		public float IKRotationWeight;

		[Token(Token = "0x40004A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Quaternion IKRotation;

		[Token(Token = "0x40004A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public Vector3 bendNormal;

		[Token(Token = "0x40004A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public TrigonometricBone bone1;

		[Token(Token = "0x40004AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public TrigonometricBone bone2;

		[Token(Token = "0x40004AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public TrigonometricBone bone3;

		[Token(Token = "0x40004AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected Vector3 weightIKPosition;

		[Token(Token = "0x40004AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		protected bool directHierarchy;

		[Token(Token = "0x60006BF")]
		[Address(RVA = "0x1A36FE8", Offset = "0x1A36FE8", VA = "0x1A36FE8")]
		public void SetBendGoalPosition(Vector3 goalPosition, float weight)
		{
		}

		[Token(Token = "0x60006C0")]
		[Address(RVA = "0x1A371D8", Offset = "0x1A371D8", VA = "0x1A371D8")]
		public void SetBendPlaneToCurrent()
		{
		}

		[Token(Token = "0x60006C1")]
		[Address(RVA = "0x1A3738C", Offset = "0x1A3738C", VA = "0x1A3738C")]
		public void SetIKRotation(Quaternion rotation)
		{
		}

		[Token(Token = "0x60006C2")]
		[Address(RVA = "0x1A37398", Offset = "0x1A37398", VA = "0x1A37398")]
		public void SetIKRotationWeight(float weight)
		{
		}

		[Token(Token = "0x60006C3")]
		[Address(RVA = "0x1A3741C", Offset = "0x1A3741C", VA = "0x1A3741C")]
		public Quaternion GetIKRotation()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60006C4")]
		[Address(RVA = "0x1A37428", Offset = "0x1A37428", VA = "0x1A37428")]
		public float GetIKRotationWeight()
		{
			return default(float);
		}

		[Token(Token = "0x60006C5")]
		[Address(RVA = "0x1A37430", Offset = "0x1A37430", VA = "0x1A37430", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x60006C6")]
		[Address(RVA = "0x1A37534", Offset = "0x1A37534", VA = "0x1A37534", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x60006C7")]
		[Address(RVA = "0x1A37654", Offset = "0x1A37654", VA = "0x1A37654", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x60006C8")]
		[Address(RVA = "0x1A376A0", Offset = "0x1A376A0", VA = "0x1A376A0", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x60006C9")]
		[Address(RVA = "0x1A37700", Offset = "0x1A37700", VA = "0x1A37700", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x60006CA")]
		[Address(RVA = "0x1A37ADC", Offset = "0x1A37ADC", VA = "0x1A37ADC")]
		public bool SetChain(Transform bone1, Transform bone2, Transform bone3, Transform root)
		{
			return default(bool);
		}

		[Token(Token = "0x60006CB")]
		[Address(RVA = "0x1A37B34", Offset = "0x1A37B34", VA = "0x1A37B34")]
		public static void Solve(Transform bone1, Transform bone2, Transform bone3, Vector3 targetPosition, Vector3 bendNormal, float weight)
		{
		}

		[Token(Token = "0x60006CC")]
		[Address(RVA = "0x1A380DC", Offset = "0x1A380DC", VA = "0x1A380DC")]
		private static Vector3 GetDirectionToBendPoint(Vector3 direction, float directionMag, Vector3 bendDirection, float sqrMag1, float sqrMag2)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60006CD")]
		[Address(RVA = "0x1A382F4", Offset = "0x1A382F4", VA = "0x1A382F4", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x60006CE")]
		[Address(RVA = "0x1A384B0", Offset = "0x1A384B0", VA = "0x1A384B0")]
		private bool IsDirectHierarchy()
		{
			return default(bool);
		}

		[Token(Token = "0x60006CF")]
		[Address(RVA = "0x1A3842C", Offset = "0x1A3842C", VA = "0x1A3842C")]
		private void InitiateBones()
		{
		}

		[Token(Token = "0x60006D0")]
		[Address(RVA = "0x1A38758", Offset = "0x1A38758", VA = "0x1A38758", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x60006D1")]
		[Address(RVA = "0x1A3922C", Offset = "0x1A3922C", VA = "0x1A3922C", Slot = "12")]
		protected virtual void OnInitiateVirtual()
		{
		}

		[Token(Token = "0x60006D2")]
		[Address(RVA = "0x1A39230", Offset = "0x1A39230", VA = "0x1A39230", Slot = "13")]
		protected virtual void OnUpdateVirtual()
		{
		}

		[Token(Token = "0x60006D3")]
		[Address(RVA = "0x1A39234", Offset = "0x1A39234", VA = "0x1A39234", Slot = "14")]
		protected virtual void OnPostSolveVirtual()
		{
		}

		[Token(Token = "0x60006D4")]
		[Address(RVA = "0x1A38E64", Offset = "0x1A38E64", VA = "0x1A38E64")]
		protected Vector3 GetBendDirection(Vector3 IKPosition, Vector3 bendNormal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60006D5")]
		[Address(RVA = "0x1A34640", Offset = "0x1A34640", VA = "0x1A34640")]
		public IKSolverTrigonometric()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000085")]
	public class IKSolverVR : IKSolver
	{
		[Serializable]
		[Token(Token = "0x20004F5")]
		public class Arm : BodyPart
		{
			[Serializable]
			[Token(Token = "0x20006C2")]
			public enum ShoulderRotationMode
			{
				[Token(Token = "0x4002105")]
				YawPitch,
				[Token(Token = "0x4002106")]
				FromTo
			}

			[Token(Token = "0x40019F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA21334", Offset = "0xA21334")]
			public Transform target;

			[Token(Token = "0x40019F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA2136C", Offset = "0xA2136C")]
			public Transform bendGoal;

			[Token(Token = "0x40019F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA213A4", Offset = "0xA213A4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA213A4", Offset = "0xA213A4")]
			public float positionWeight;

			[Token(Token = "0x40019F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA213F8", Offset = "0xA213F8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA213F8", Offset = "0xA213F8")]
			public float rotationWeight;

			[Token(Token = "0x40019F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA2144C", Offset = "0xA2144C")]
			public ShoulderRotationMode shoulderRotationMode;

			[Token(Token = "0x40019F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA21484", Offset = "0xA21484")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA21484", Offset = "0xA21484")]
			public float shoulderRotationWeight;

			[Token(Token = "0x40019F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA214D8", Offset = "0xA214D8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA214D8", Offset = "0xA214D8")]
			public float shoulderTwistWeight;

			[Token(Token = "0x40019F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA2152C", Offset = "0xA2152C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA2152C", Offset = "0xA2152C")]
			public float bendGoalWeight;

			[Token(Token = "0x40019FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA21580", Offset = "0xA21580")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA21580", Offset = "0xA21580")]
			public float swivelOffset;

			[Token(Token = "0x40019FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA215DC", Offset = "0xA215DC")]
			public Vector3 wristToPalmAxis;

			[Token(Token = "0x40019FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA21614", Offset = "0xA21614")]
			public Vector3 palmToThumbAxis;

			[Token(Token = "0x40019FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA2164C", Offset = "0xA2164C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA2164C", Offset = "0xA2164C")]
			public float armLengthMlp;

			[Token(Token = "0x40019FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA216A4", Offset = "0xA216A4")]
			public AnimationCurve stretchCurve;

			[NonSerialized]
			[Token(Token = "0x40019FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			[HideInInspector]
			public Vector3 IKPosition;

			[NonSerialized]
			[Token(Token = "0x4001A00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
			[HideInInspector]
			public Quaternion IKRotation;

			[NonSerialized]
			[Token(Token = "0x4001A01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
			[HideInInspector]
			public Vector3 bendDirection;

			[NonSerialized]
			[Token(Token = "0x4001A02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			[HideInInspector]
			public Vector3 handPositionOffset;

			[Token(Token = "0x4001A03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2171C", Offset = "0xA2171C")]
			private Vector3 <position>k__BackingField;

			[Token(Token = "0x4001A04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2172C", Offset = "0xA2172C")]
			private Quaternion <rotation>k__BackingField;

			[Token(Token = "0x4001A05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			private bool hasShoulder;

			[Token(Token = "0x4001A06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
			private Vector3 chestForwardAxis;

			[Token(Token = "0x4001A07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			private Vector3 chestUpAxis;

			[Token(Token = "0x4001A08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
			private Quaternion chestRotation;

			[Token(Token = "0x4001A09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
			private Vector3 chestForward;

			[Token(Token = "0x4001A0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
			private Vector3 chestUp;

			[Token(Token = "0x4001A0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
			private Quaternion forearmRelToUpperArm;

			[Token(Token = "0x4001A0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
			private Vector3 upperArmBendAxis;

			[Token(Token = "0x4001A0D")]
			private const float yawOffsetAngle = 45f;

			[Token(Token = "0x4001A0E")]
			private const float pitchOffsetAngle = -30f;

			[Token(Token = "0x17000486")]
			public Vector3 position
			{
				[Token(Token = "0x60026A7")]
				[Address(RVA = "0x1A415E0", Offset = "0x1A415E0", VA = "0x1A415E0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2F110", Offset = "0xA2F110")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x60026A8")]
				[Address(RVA = "0x1A415EC", Offset = "0x1A415EC", VA = "0x1A415EC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2F120", Offset = "0xA2F120")]
				private set
				{
				}
			}

			[Token(Token = "0x17000487")]
			public Quaternion rotation
			{
				[Token(Token = "0x60026A9")]
				[Address(RVA = "0x1A415F8", Offset = "0x1A415F8", VA = "0x1A415F8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2F130", Offset = "0xA2F130")]
				get
				{
					return default(Quaternion);
				}
				[Token(Token = "0x60026AA")]
				[Address(RVA = "0x1A41604", Offset = "0x1A41604", VA = "0x1A41604")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2F140", Offset = "0xA2F140")]
				private set
				{
				}
			}

			[Token(Token = "0x17000488")]
			private VirtualBone shoulder
			{
				[Token(Token = "0x60026AB")]
				[Address(RVA = "0x1A41610", Offset = "0x1A41610", VA = "0x1A41610")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000489")]
			private VirtualBone upperArm
			{
				[Token(Token = "0x60026AC")]
				[Address(RVA = "0x1A41644", Offset = "0x1A41644", VA = "0x1A41644")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700048A")]
			private VirtualBone forearm
			{
				[Token(Token = "0x60026AD")]
				[Address(RVA = "0x1A41684", Offset = "0x1A41684", VA = "0x1A41684")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700048B")]
			private VirtualBone hand
			{
				[Token(Token = "0x60026AE")]
				[Address(RVA = "0x1A416D0", Offset = "0x1A416D0", VA = "0x1A416D0")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60026AF")]
			[Address(RVA = "0x1A4171C", Offset = "0x1A4171C", VA = "0x1A4171C", Slot = "4")]
			protected override void OnRead(Vector3[] positions, Quaternion[] rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs, int rootIndex, int index)
			{
			}

			[Token(Token = "0x60026B0")]
			[Address(RVA = "0x1A4201C", Offset = "0x1A4201C", VA = "0x1A4201C", Slot = "5")]
			public override void PreSolve()
			{
			}

			[Token(Token = "0x60026B1")]
			[Address(RVA = "0x1A42210", Offset = "0x1A42210", VA = "0x1A42210", Slot = "7")]
			public override void ApplyOffsets()
			{
			}

			[Token(Token = "0x60026B2")]
			[Address(RVA = "0x1A422BC", Offset = "0x1A422BC", VA = "0x1A422BC")]
			private void Stretching()
			{
			}

			[Token(Token = "0x60026B3")]
			[Address(RVA = "0x1A3F6AC", Offset = "0x1A3F6AC", VA = "0x1A3F6AC")]
			public void Solve(bool isLeft)
			{
			}

			[Token(Token = "0x60026B4")]
			[Address(RVA = "0x1A42F08", Offset = "0x1A42F08", VA = "0x1A42F08", Slot = "8")]
			public override void ResetOffsets()
			{
			}

			[Token(Token = "0x60026B5")]
			[Address(RVA = "0x1A42F78", Offset = "0x1A42F78", VA = "0x1A42F78", Slot = "6")]
			public override void Write(ref Vector3[] solvedPositions, ref Quaternion[] solvedRotations)
			{
			}

			[Token(Token = "0x60026B6")]
			[Address(RVA = "0x1A426D4", Offset = "0x1A426D4", VA = "0x1A426D4")]
			private float DamperValue(float value, float min, float max, float weight = 1f)
			{
				return default(float);
			}

			[Token(Token = "0x60026B7")]
			[Address(RVA = "0x1A427AC", Offset = "0x1A427AC", VA = "0x1A427AC")]
			private Vector3 GetBendNormal(Vector3 dir)
			{
				return default(Vector3);
			}

			[Token(Token = "0x60026B8")]
			[Address(RVA = "0x1A43198", Offset = "0x1A43198", VA = "0x1A43198")]
			private void Visualize(VirtualBone bone1, VirtualBone bone2, VirtualBone bone3, Color color)
			{
			}

			[Token(Token = "0x60026B9")]
			[Address(RVA = "0x1A413D4", Offset = "0x1A413D4", VA = "0x1A413D4")]
			public Arm()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004F6")]
		public abstract class BodyPart
		{
			[Token(Token = "0x4001A0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2173C", Offset = "0xA2173C")]
			private float <sqrMag>k__BackingField;

			[Token(Token = "0x4001A10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2174C", Offset = "0xA2174C")]
			private float <mag>k__BackingField;

			[Token(Token = "0x4001A11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[HideInInspector]
			public VirtualBone[] bones;

			[Token(Token = "0x4001A12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			protected bool initiated;

			[Token(Token = "0x4001A13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			protected Vector3 rootPosition;

			[Token(Token = "0x4001A14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			protected Quaternion rootRotation;

			[Token(Token = "0x4001A15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			protected int index;

			[Token(Token = "0x4001A16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			protected int LOD;

			[Token(Token = "0x1700048C")]
			public float sqrMag
			{
				[Token(Token = "0x60026BF")]
				[Address(RVA = "0x1A43358", Offset = "0x1A43358", VA = "0x1A43358")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2F150", Offset = "0xA2F150")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x60026C0")]
				[Address(RVA = "0x1A43360", Offset = "0x1A43360", VA = "0x1A43360")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2F160", Offset = "0xA2F160")]
				private set
				{
				}
			}

			[Token(Token = "0x1700048D")]
			public float mag
			{
				[Token(Token = "0x60026C1")]
				[Address(RVA = "0x1A43368", Offset = "0x1A43368", VA = "0x1A43368")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2F170", Offset = "0xA2F170")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x60026C2")]
				[Address(RVA = "0x1A43370", Offset = "0x1A43370", VA = "0x1A43370")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2F180", Offset = "0xA2F180")]
				private set
				{
				}
			}

			[Token(Token = "0x60026BA")]
			protected abstract void OnRead(Vector3[] positions, Quaternion[] rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs, int rootIndex, int index);

			[Token(Token = "0x60026BB")]
			public abstract void PreSolve();

			[Token(Token = "0x60026BC")]
			public abstract void Write(ref Vector3[] solvedPositions, ref Quaternion[] solvedRotations);

			[Token(Token = "0x60026BD")]
			public abstract void ApplyOffsets();

			[Token(Token = "0x60026BE")]
			public abstract void ResetOffsets();

			[Token(Token = "0x60026C3")]
			[Address(RVA = "0x1A43378", Offset = "0x1A43378", VA = "0x1A43378")]
			public void SetLOD(int LOD)
			{
			}

			[Token(Token = "0x60026C4")]
			[Address(RVA = "0x1A32DB8", Offset = "0x1A32DB8", VA = "0x1A32DB8")]
			public void Read(Vector3[] positions, Quaternion[] rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs, int rootIndex, int index)
			{
			}

			[Token(Token = "0x60026C5")]
			[Address(RVA = "0x1A43380", Offset = "0x1A43380", VA = "0x1A43380")]
			public void MovePosition(Vector3 position)
			{
			}

			[Token(Token = "0x60026C6")]
			[Address(RVA = "0x1A434EC", Offset = "0x1A434EC", VA = "0x1A434EC")]
			public void MoveRotation(Quaternion rotation)
			{
			}

			[Token(Token = "0x60026C7")]
			[Address(RVA = "0x1A43598", Offset = "0x1A43598", VA = "0x1A43598")]
			public void Translate(Vector3 position, Quaternion rotation)
			{
			}

			[Token(Token = "0x60026C8")]
			[Address(RVA = "0x1A3F4BC", Offset = "0x1A3F4BC", VA = "0x1A3F4BC")]
			public void TranslateRoot(Vector3 newRootPos, Quaternion newRootRot)
			{
			}

			[Token(Token = "0x60026C9")]
			[Address(RVA = "0x1A42D64", Offset = "0x1A42D64", VA = "0x1A42D64")]
			public void RotateTo(VirtualBone bone, Quaternion rotation, float weight = 1f)
			{
			}

			[Token(Token = "0x60026CA")]
			[Address(RVA = "0x1A435EC", Offset = "0x1A435EC", VA = "0x1A435EC")]
			public void Visualize(Color color)
			{
			}

			[Token(Token = "0x60026CB")]
			[Address(RVA = "0x1A43730", Offset = "0x1A43730", VA = "0x1A43730")]
			public void Visualize()
			{
			}

			[Token(Token = "0x60026CC")]
			[Address(RVA = "0x1A432C0", Offset = "0x1A432C0", VA = "0x1A432C0")]
			protected BodyPart()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004F7")]
		public class Footstep
		{
			[Token(Token = "0x4001A17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float stepSpeed;

			[Token(Token = "0x4001A18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 characterSpaceOffset;

			[Token(Token = "0x4001A19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 position;

			[Token(Token = "0x4001A1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Quaternion rotation;

			[Token(Token = "0x4001A1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public Quaternion stepToRootRot;

			[Token(Token = "0x4001A1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public bool isSupportLeg;

			[Token(Token = "0x4001A1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2176C", Offset = "0xA2176C")]
			private float <stepProgress>k__BackingField;

			[Token(Token = "0x4001A1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public Vector3 stepFrom;

			[Token(Token = "0x4001A1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public Vector3 stepTo;

			[Token(Token = "0x4001A20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			public Quaternion stepFromRot;

			[Token(Token = "0x4001A21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			public Quaternion stepToRot;

			[Token(Token = "0x4001A22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			private Quaternion footRelativeToRoot;

			[Token(Token = "0x4001A23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
			private float supportLegW;

			[Token(Token = "0x4001A24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			private float supportLegWV;

			[Token(Token = "0x1700048E")]
			public bool isStepping
			{
				[Token(Token = "0x60026CD")]
				[Address(RVA = "0x1A43758", Offset = "0x1A43758", VA = "0x1A43758")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x1700048F")]
			public float stepProgress
			{
				[Token(Token = "0x60026CE")]
				[Address(RVA = "0x1A4376C", Offset = "0x1A4376C", VA = "0x1A4376C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2F190", Offset = "0xA2F190")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x60026CF")]
				[Address(RVA = "0x1A43774", Offset = "0x1A43774", VA = "0x1A43774")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2F1A0", Offset = "0xA2F1A0")]
				private set
				{
				}
			}

			[Token(Token = "0x60026D0")]
			[Address(RVA = "0x1A4377C", Offset = "0x1A4377C", VA = "0x1A4377C")]
			public Footstep(Quaternion rootRotation, Vector3 footPosition, Quaternion footRotation, Vector3 characterSpaceOffset)
			{
			}

			[Token(Token = "0x60026D1")]
			[Address(RVA = "0x1A4390C", Offset = "0x1A4390C", VA = "0x1A4390C")]
			public void Reset(Quaternion rootRotation, Vector3 footPosition, Quaternion footRotation)
			{
			}

			[Token(Token = "0x60026D2")]
			[Address(RVA = "0x1A43954", Offset = "0x1A43954", VA = "0x1A43954")]
			public void StepTo(Vector3 p, Quaternion rootRotation, float stepThreshold)
			{
			}

			[Token(Token = "0x60026D3")]
			[Address(RVA = "0x1A43B14", Offset = "0x1A43B14", VA = "0x1A43B14")]
			public void UpdateStepping(Vector3 p, Quaternion rootRotation, float speed)
			{
			}

			[Token(Token = "0x60026D4")]
			[Address(RVA = "0x1A43CEC", Offset = "0x1A43CEC", VA = "0x1A43CEC")]
			public void UpdateStanding(Quaternion rootRotation, float minAngle, float speed)
			{
			}

			[Token(Token = "0x60026D5")]
			[Address(RVA = "0x1A43ED8", Offset = "0x1A43ED8", VA = "0x1A43ED8")]
			public void Update(InterpolationMode interpolation, UnityEvent onStep)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004F8")]
		public class Leg : BodyPart
		{
			[Token(Token = "0x4001A25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA2177C", Offset = "0xA2177C")]
			public Transform target;

			[Token(Token = "0x4001A26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA217B4", Offset = "0xA217B4")]
			public Transform bendGoal;

			[Token(Token = "0x4001A27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA217EC", Offset = "0xA217EC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA217EC", Offset = "0xA217EC")]
			public float positionWeight;

			[Token(Token = "0x4001A28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA21840", Offset = "0xA21840")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA21840", Offset = "0xA21840")]
			public float rotationWeight;

			[Token(Token = "0x4001A29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA21894", Offset = "0xA21894")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA21894", Offset = "0xA21894")]
			public float bendGoalWeight;

			[Token(Token = "0x4001A2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA218E8", Offset = "0xA218E8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA218E8", Offset = "0xA218E8")]
			public float swivelOffset;

			[Token(Token = "0x4001A2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA21944", Offset = "0xA21944")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA21944", Offset = "0xA21944")]
			public float bendToTargetWeight;

			[Token(Token = "0x4001A2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA21998", Offset = "0xA21998")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA21998", Offset = "0xA21998")]
			public float legLengthMlp;

			[Token(Token = "0x4001A2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA219F0", Offset = "0xA219F0")]
			public AnimationCurve stretchCurve;

			[NonSerialized]
			[Token(Token = "0x4001A2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			[HideInInspector]
			public Vector3 IKPosition;

			[NonSerialized]
			[Token(Token = "0x4001A2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			[HideInInspector]
			public Quaternion IKRotation;

			[NonSerialized]
			[Token(Token = "0x4001A30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
			[HideInInspector]
			public Vector3 footPositionOffset;

			[NonSerialized]
			[Token(Token = "0x4001A31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			[HideInInspector]
			public Vector3 heelPositionOffset;

			[NonSerialized]
			[Token(Token = "0x4001A32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
			[HideInInspector]
			public Quaternion footRotationOffset;

			[NonSerialized]
			[Token(Token = "0x4001A33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
			[HideInInspector]
			public float currentMag;

			[Token(Token = "0x4001A34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			[HideInInspector]
			public bool useAnimatedBendNormal;

			[Token(Token = "0x4001A35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA21A98", Offset = "0xA21A98")]
			private Vector3 <position>k__BackingField;

			[Token(Token = "0x4001A36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA21AA8", Offset = "0xA21AA8")]
			private Quaternion <rotation>k__BackingField;

			[Token(Token = "0x4001A37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA21AB8", Offset = "0xA21AB8")]
			private bool <hasToes>k__BackingField;

			[Token(Token = "0x4001A38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA21AC8", Offset = "0xA21AC8")]
			private Vector3 <thighRelativeToPelvis>k__BackingField;

			[Token(Token = "0x4001A39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
			private Vector3 footPosition;

			[Token(Token = "0x4001A3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
			private Quaternion footRotation;

			[Token(Token = "0x4001A3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
			private Vector3 bendNormal;

			[Token(Token = "0x4001A3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
			private Quaternion calfRelToThigh;

			[Token(Token = "0x4001A3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
			private Quaternion thighRelToFoot;

			[Token(Token = "0x4001A3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
			private Vector3 bendNormalRelToPelvis;

			[Token(Token = "0x4001A3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
			private Vector3 bendNormalRelToTarget;

			[Token(Token = "0x17000490")]
			public Vector3 position
			{
				[Token(Token = "0x60026D6")]
				[Address(RVA = "0x1A440F4", Offset = "0x1A440F4", VA = "0x1A440F4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2F1B0", Offset = "0xA2F1B0")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x60026D7")]
				[Address(RVA = "0x1A44100", Offset = "0x1A44100", VA = "0x1A44100")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2F1C0", Offset = "0xA2F1C0")]
				private set
				{
				}
			}

			[Token(Token = "0x17000491")]
			public Quaternion rotation
			{
				[Token(Token = "0x60026D8")]
				[Address(RVA = "0x1A4410C", Offset = "0x1A4410C", VA = "0x1A4410C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2F1D0", Offset = "0xA2F1D0")]
				get
				{
					return default(Quaternion);
				}
				[Token(Token = "0x60026D9")]
				[Address(RVA = "0x1A44118", Offset = "0x1A44118", VA = "0x1A44118")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2F1E0", Offset = "0xA2F1E0")]
				private set
				{
				}
			}

			[Token(Token = "0x17000492")]
			public bool hasToes
			{
				[Token(Token = "0x60026DA")]
				[Address(RVA = "0x1A44124", Offset = "0x1A44124", VA = "0x1A44124")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2F1F0", Offset = "0xA2F1F0")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x60026DB")]
				[Address(RVA = "0x1A4412C", Offset = "0x1A4412C", VA = "0x1A4412C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2F200", Offset = "0xA2F200")]
				private set
				{
				}
			}

			[Token(Token = "0x17000493")]
			public VirtualBone thigh
			{
				[Token(Token = "0x60026DC")]
				[Address(RVA = "0x1A44138", Offset = "0x1A44138", VA = "0x1A44138")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000494")]
			private VirtualBone calf
			{
				[Token(Token = "0x60026DD")]
				[Address(RVA = "0x1A4416C", Offset = "0x1A4416C", VA = "0x1A4416C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000495")]
			private VirtualBone foot
			{
				[Token(Token = "0x60026DE")]
				[Address(RVA = "0x1A441A4", Offset = "0x1A441A4", VA = "0x1A441A4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000496")]
			private VirtualBone toes
			{
				[Token(Token = "0x60026DF")]
				[Address(RVA = "0x1A441DC", Offset = "0x1A441DC", VA = "0x1A441DC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000497")]
			public VirtualBone lastBone
			{
				[Token(Token = "0x60026E0")]
				[Address(RVA = "0x1A3F47C", Offset = "0x1A3F47C", VA = "0x1A3F47C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000498")]
			public Vector3 thighRelativeToPelvis
			{
				[Token(Token = "0x60026E1")]
				[Address(RVA = "0x1A44214", Offset = "0x1A44214", VA = "0x1A44214")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2F210", Offset = "0xA2F210")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x60026E2")]
				[Address(RVA = "0x1A44220", Offset = "0x1A44220", VA = "0x1A44220")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2F220", Offset = "0xA2F220")]
				private set
				{
				}
			}

			[Token(Token = "0x60026E3")]
			[Address(RVA = "0x1A4422C", Offset = "0x1A4422C", VA = "0x1A4422C", Slot = "4")]
			protected override void OnRead(Vector3[] positions, Quaternion[] rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs, int rootIndex, int index)
			{
			}

			[Token(Token = "0x60026E4")]
			[Address(RVA = "0x1A44870", Offset = "0x1A44870", VA = "0x1A44870", Slot = "5")]
			public override void PreSolve()
			{
			}

			[Token(Token = "0x60026E5")]
			[Address(RVA = "0x1A45158", Offset = "0x1A45158", VA = "0x1A45158", Slot = "7")]
			public override void ApplyOffsets()
			{
			}

			[Token(Token = "0x60026E6")]
			[Address(RVA = "0x1A45054", Offset = "0x1A45054", VA = "0x1A45054")]
			private void ApplyPositionOffset(Vector3 offset, float weight)
			{
			}

			[Token(Token = "0x60026E7")]
			[Address(RVA = "0x1A44E1C", Offset = "0x1A44E1C", VA = "0x1A44E1C")]
			private void ApplyRotationOffset(Quaternion offset, float weight)
			{
			}

			[Token(Token = "0x60026E8")]
			[Address(RVA = "0x1A32B90", Offset = "0x1A32B90", VA = "0x1A32B90")]
			public void Solve(bool stretch)
			{
			}

			[Token(Token = "0x60026E9")]
			[Address(RVA = "0x1A45C3C", Offset = "0x1A45C3C", VA = "0x1A45C3C")]
			private void FixTwistRotations()
			{
			}

			[Token(Token = "0x60026EA")]
			[Address(RVA = "0x1A45710", Offset = "0x1A45710", VA = "0x1A45710")]
			private void Stretching()
			{
			}

			[Token(Token = "0x60026EB")]
			[Address(RVA = "0x1A460A4", Offset = "0x1A460A4", VA = "0x1A460A4", Slot = "6")]
			public override void Write(ref Vector3[] solvedPositions, ref Quaternion[] solvedRotations)
			{
			}

			[Token(Token = "0x60026EC")]
			[Address(RVA = "0x1A462C0", Offset = "0x1A462C0", VA = "0x1A462C0", Slot = "8")]
			public override void ResetOffsets()
			{
			}

			[Token(Token = "0x60026ED")]
			[Address(RVA = "0x1A32FE0", Offset = "0x1A32FE0", VA = "0x1A32FE0")]
			public Leg()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004F9")]
		public class Locomotion
		{
			[Token(Token = "0x4001A40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA21AD8", Offset = "0xA21AD8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA21AD8", Offset = "0xA21AD8")]
			public float weight;

			[Token(Token = "0x4001A41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA21B2C", Offset = "0xA21B2C")]
			public float footDistance;

			[Token(Token = "0x4001A42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA21B64", Offset = "0xA21B64")]
			public float stepThreshold;

			[Token(Token = "0x4001A43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA21B9C", Offset = "0xA21B9C")]
			public float angleThreshold;

			[Token(Token = "0x4001A44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA21BD4", Offset = "0xA21BD4")]
			public float comAngleMlp;

			[Token(Token = "0x4001A45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA21C0C", Offset = "0xA21C0C")]
			public float maxVelocity;

			[Token(Token = "0x4001A46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA21C44", Offset = "0xA21C44")]
			public float velocityFactor;

			[Token(Token = "0x4001A47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA21C7C", Offset = "0xA21C7C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA21C7C", Offset = "0xA21C7C")]
			public float maxLegStretch;

			[Token(Token = "0x4001A48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA21CD4", Offset = "0xA21CD4")]
			public float rootSpeed;

			[Token(Token = "0x4001A49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA21D0C", Offset = "0xA21D0C")]
			public float stepSpeed;

			[Token(Token = "0x4001A4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA21D44", Offset = "0xA21D44")]
			public AnimationCurve stepHeight;

			[Token(Token = "0x4001A4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA21D7C", Offset = "0xA21D7C")]
			public AnimationCurve heelHeight;

			[Token(Token = "0x4001A4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA21DB4", Offset = "0xA21DB4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA21DB4", Offset = "0xA21DB4")]
			public float relaxLegTwistMinAngle;

			[Token(Token = "0x4001A4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA21E0C", Offset = "0xA21E0C")]
			public float relaxLegTwistSpeed;

			[Token(Token = "0x4001A4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA21E44", Offset = "0xA21E44")]
			public InterpolationMode stepInterpolation;

			[Token(Token = "0x4001A4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA21E7C", Offset = "0xA21E7C")]
			public Vector3 offset;

			[Token(Token = "0x4001A50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[HideInInspector]
			public bool blockingEnabled;

			[Token(Token = "0x4001A51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			[HideInInspector]
			public LayerMask blockingLayers;

			[Token(Token = "0x4001A52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[HideInInspector]
			public float raycastRadius;

			[Token(Token = "0x4001A53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			[HideInInspector]
			public float raycastHeight;

			[Token(Token = "0x4001A54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA21EF4", Offset = "0xA21EF4")]
			public UnityEvent onLeftFootstep;

			[Token(Token = "0x4001A55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA21F2C", Offset = "0xA21F2C")]
			public UnityEvent onRightFootstep;

			[Token(Token = "0x4001A56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA21F64", Offset = "0xA21F64")]
			private Vector3 <centerOfMass>k__BackingField;

			[Token(Token = "0x4001A57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private Footstep[] footsteps;

			[Token(Token = "0x4001A58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			private Vector3 lastComPosition;

			[Token(Token = "0x4001A59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
			private Vector3 comVelocity;

			[Token(Token = "0x4001A5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			private int leftFootIndex;

			[Token(Token = "0x4001A5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
			private int rightFootIndex;

			[Token(Token = "0x17000499")]
			public Vector3 centerOfMass
			{
				[Token(Token = "0x60026EE")]
				[Address(RVA = "0x1A46370", Offset = "0x1A46370", VA = "0x1A46370")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2F230", Offset = "0xA2F230")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x60026EF")]
				[Address(RVA = "0x1A4637C", Offset = "0x1A4637C", VA = "0x1A4637C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2F240", Offset = "0xA2F240")]
				private set
				{
				}
			}

			[Token(Token = "0x1700049A")]
			public Vector3 leftFootstepPosition
			{
				[Token(Token = "0x60026F5")]
				[Address(RVA = "0x1A4677C", Offset = "0x1A4677C", VA = "0x1A4677C")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x1700049B")]
			public Vector3 rightFootstepPosition
			{
				[Token(Token = "0x60026F6")]
				[Address(RVA = "0x1A467BC", Offset = "0x1A467BC", VA = "0x1A467BC")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x1700049C")]
			public Quaternion leftFootstepRotation
			{
				[Token(Token = "0x60026F7")]
				[Address(RVA = "0x1A46800", Offset = "0x1A46800", VA = "0x1A46800")]
				get
				{
					return default(Quaternion);
				}
			}

			[Token(Token = "0x1700049D")]
			public Quaternion rightFootstepRotation
			{
				[Token(Token = "0x60026F8")]
				[Address(RVA = "0x1A46840", Offset = "0x1A46840", VA = "0x1A46840")]
				get
				{
					return default(Quaternion);
				}
			}

			[Token(Token = "0x60026F0")]
			[Address(RVA = "0x1A3DC00", Offset = "0x1A3DC00", VA = "0x1A3DC00")]
			public void Initiate(Vector3[] positions, Quaternion[] rotations, bool hasToes)
			{
			}

			[Token(Token = "0x60026F1")]
			[Address(RVA = "0x1A3B490", Offset = "0x1A3B490", VA = "0x1A3B490")]
			public void Reset(Vector3[] positions, Quaternion[] rotations)
			{
			}

			[Token(Token = "0x60026F2")]
			[Address(RVA = "0x1A3A8B0", Offset = "0x1A3A8B0", VA = "0x1A3A8B0")]
			public void AddDeltaRotation(Quaternion delta, Vector3 pivot)
			{
			}

			[Token(Token = "0x60026F3")]
			[Address(RVA = "0x1A3A700", Offset = "0x1A3A700", VA = "0x1A3A700")]
			public void AddDeltaPosition(Vector3 delta)
			{
			}

			[Token(Token = "0x60026F4")]
			[Address(RVA = "0x1A3DEF8", Offset = "0x1A3DEF8", VA = "0x1A3DEF8")]
			public void Solve(VirtualBone rootBone, Spine spine, Leg leftLeg, Leg rightLeg, Arm leftArm, Arm rightArm, int supportLegIndex, out Vector3 leftFootPosition, out Vector3 rightFootPosition, out Quaternion leftFootRotation, out Quaternion rightFootRotation, out float leftFootOffset, out float rightFootOffset, out float leftHeelOffset, out float rightHeelOffset)
			{
			}

			[Token(Token = "0x60026F9")]
			[Address(RVA = "0x1A46388", Offset = "0x1A46388", VA = "0x1A46388")]
			private bool StepBlocked(Vector3 fromPosition, Vector3 toPosition, Vector3 rootPosition)
			{
				return default(bool);
			}

			[Token(Token = "0x60026FA")]
			[Address(RVA = "0x1A4652C", Offset = "0x1A4652C", VA = "0x1A4652C")]
			private bool CanStep()
			{
				return default(bool);
			}

			[Token(Token = "0x60026FB")]
			[Address(RVA = "0x1A465B0", Offset = "0x1A465B0", VA = "0x1A465B0")]
			private static bool GetLineSphereCollision(Vector3 lineStart, Vector3 lineEnd, Vector3 sphereCenter, float sphereRadius)
			{
				return default(bool);
			}

			[Token(Token = "0x60026FC")]
			[Address(RVA = "0x1A414FC", Offset = "0x1A414FC", VA = "0x1A414FC")]
			public Locomotion()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004FA")]
		public class Spine : BodyPart
		{
			[Token(Token = "0x4001A5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA21F74", Offset = "0xA21F74")]
			public Transform headTarget;

			[Token(Token = "0x4001A5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA21FAC", Offset = "0xA21FAC")]
			public Transform pelvisTarget;

			[Token(Token = "0x4001A5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA21FE4", Offset = "0xA21FE4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA21FE4", Offset = "0xA21FE4")]
			public float positionWeight;

			[Token(Token = "0x4001A5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA22038", Offset = "0xA22038")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA22038", Offset = "0xA22038")]
			public float rotationWeight;

			[Token(Token = "0x4001A60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA2208C", Offset = "0xA2208C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA2208C", Offset = "0xA2208C")]
			public float pelvisPositionWeight;

			[Token(Token = "0x4001A61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA220E0", Offset = "0xA220E0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA220E0", Offset = "0xA220E0")]
			public float pelvisRotationWeight;

			[Token(Token = "0x4001A62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA22134", Offset = "0xA22134")]
			public Transform chestGoal;

			[Token(Token = "0x4001A63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA2216C", Offset = "0xA2216C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA2216C", Offset = "0xA2216C")]
			public float chestGoalWeight;

			[Token(Token = "0x4001A64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA221C0", Offset = "0xA221C0")]
			public float minHeadHeight;

			[Token(Token = "0x4001A65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA221F8", Offset = "0xA221F8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA221F8", Offset = "0xA221F8")]
			public float bodyPosStiffness;

			[Token(Token = "0x4001A66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA2224C", Offset = "0xA2224C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA2224C", Offset = "0xA2224C")]
			public float bodyRotStiffness;

			[Token(Token = "0x4001A67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA222A0", Offset = "0xA222A0")]
			[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA222A0", Offset = "0xA222A0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA222A0", Offset = "0xA222A0")]
			public float neckStiffness;

			[Token(Token = "0x4001A68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA22318", Offset = "0xA22318")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA22318", Offset = "0xA22318")]
			public float rotateChestByHands;

			[Token(Token = "0x4001A69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA2236C", Offset = "0xA2236C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA2236C", Offset = "0xA2236C")]
			public float chestClampWeight;

			[Token(Token = "0x4001A6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA223C0", Offset = "0xA223C0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA223C0", Offset = "0xA223C0")]
			public float headClampWeight;

			[Token(Token = "0x4001A6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA22414", Offset = "0xA22414")]
			public float moveBodyBackWhenCrouching;

			[Token(Token = "0x4001A6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA2244C", Offset = "0xA2244C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA2244C", Offset = "0xA2244C")]
			public float maintainPelvisPosition;

			[Token(Token = "0x4001A6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA224A0", Offset = "0xA224A0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA224A0", Offset = "0xA224A0")]
			public float maxRootAngle;

			[Token(Token = "0x4001A6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA224F8", Offset = "0xA224F8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA224F8", Offset = "0xA224F8")]
			public float rootHeadingOffset;

			[NonSerialized]
			[Token(Token = "0x4001A6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			[HideInInspector]
			public Vector3 IKPositionHead;

			[NonSerialized]
			[Token(Token = "0x4001A70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
			[HideInInspector]
			public Quaternion IKRotationHead;

			[NonSerialized]
			[Token(Token = "0x4001A71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
			[HideInInspector]
			public Vector3 IKPositionPelvis;

			[NonSerialized]
			[Token(Token = "0x4001A72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			[HideInInspector]
			public Quaternion IKRotationPelvis;

			[NonSerialized]
			[Token(Token = "0x4001A73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			[HideInInspector]
			public Vector3 goalPositionChest;

			[NonSerialized]
			[Token(Token = "0x4001A74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
			[HideInInspector]
			public Vector3 pelvisPositionOffset;

			[NonSerialized]
			[Token(Token = "0x4001A75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
			[HideInInspector]
			public Vector3 chestPositionOffset;

			[NonSerialized]
			[Token(Token = "0x4001A76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
			[HideInInspector]
			public Vector3 headPositionOffset;

			[NonSerialized]
			[Token(Token = "0x4001A77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
			[HideInInspector]
			public Quaternion pelvisRotationOffset;

			[NonSerialized]
			[Token(Token = "0x4001A78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
			[HideInInspector]
			public Quaternion chestRotationOffset;

			[NonSerialized]
			[Token(Token = "0x4001A79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
			[HideInInspector]
			public Quaternion headRotationOffset;

			[NonSerialized]
			[Token(Token = "0x4001A7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
			[HideInInspector]
			public Vector3 faceDirection;

			[NonSerialized]
			[Token(Token = "0x4001A7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
			[HideInInspector]
			public Vector3 locomotionHeadPositionOffset;

			[NonSerialized]
			[Token(Token = "0x4001A7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
			[HideInInspector]
			public Vector3 headPosition;

			[Token(Token = "0x4001A7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA22634", Offset = "0xA22634")]
			private Quaternion <anchorRotation>k__BackingField;

			[Token(Token = "0x4001A7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA22644", Offset = "0xA22644")]
			private Quaternion <anchorRelativeToHead>k__BackingField;

			[Token(Token = "0x4001A7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
			private Quaternion headRotation;

			[Token(Token = "0x4001A80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
			private Quaternion pelvisRotation;

			[Token(Token = "0x4001A81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
			private Quaternion anchorRelativeToPelvis;

			[Token(Token = "0x4001A82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
			private Quaternion pelvisRelativeRotation;

			[Token(Token = "0x4001A83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
			private Quaternion chestRelativeRotation;

			[Token(Token = "0x4001A84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
			private Vector3 headDeltaPosition;

			[Token(Token = "0x4001A85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
			private Quaternion pelvisDeltaRotation;

			[Token(Token = "0x4001A86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
			private Quaternion chestTargetRotation;

			[Token(Token = "0x4001A87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
			private int pelvisIndex;

			[Token(Token = "0x4001A88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
			private int spineIndex;

			[Token(Token = "0x4001A89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
			private int chestIndex;

			[Token(Token = "0x4001A8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
			private int neckIndex;

			[Token(Token = "0x4001A8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
			private int headIndex;

			[Token(Token = "0x4001A8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
			private float length;

			[Token(Token = "0x4001A8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
			private bool hasChest;

			[Token(Token = "0x4001A8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x211")]
			private bool hasNeck;

			[Token(Token = "0x4001A8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x212")]
			private bool hasLegs;

			[Token(Token = "0x4001A90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
			private float headHeight;

			[Token(Token = "0x4001A91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
			private float sizeMlp;

			[Token(Token = "0x4001A92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
			private Vector3 chestForward;

			[Token(Token = "0x1700049E")]
			public VirtualBone pelvis
			{
				[Token(Token = "0x60026FD")]
				[Address(RVA = "0x1858880", Offset = "0x1858880", VA = "0x1858880")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700049F")]
			public VirtualBone firstSpineBone
			{
				[Token(Token = "0x60026FE")]
				[Address(RVA = "0x18588C0", Offset = "0x18588C0", VA = "0x18588C0")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004A0")]
			public VirtualBone chest
			{
				[Token(Token = "0x60026FF")]
				[Address(RVA = "0x1858900", Offset = "0x1858900", VA = "0x1858900")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004A1")]
			private VirtualBone neck
			{
				[Token(Token = "0x6002700")]
				[Address(RVA = "0x1858954", Offset = "0x1858954", VA = "0x1858954")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004A2")]
			public VirtualBone head
			{
				[Token(Token = "0x6002701")]
				[Address(RVA = "0x1858994", Offset = "0x1858994", VA = "0x1858994")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004A3")]
			public Quaternion anchorRotation
			{
				[Token(Token = "0x6002702")]
				[Address(RVA = "0x18589D4", Offset = "0x18589D4", VA = "0x18589D4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2F250", Offset = "0xA2F250")]
				get
				{
					return default(Quaternion);
				}
				[Token(Token = "0x6002703")]
				[Address(RVA = "0x18589E8", Offset = "0x18589E8", VA = "0x18589E8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2F260", Offset = "0xA2F260")]
				private set
				{
				}
			}

			[Token(Token = "0x170004A4")]
			public Quaternion anchorRelativeToHead
			{
				[Token(Token = "0x6002704")]
				[Address(RVA = "0x18589FC", Offset = "0x18589FC", VA = "0x18589FC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2F270", Offset = "0xA2F270")]
				get
				{
					return default(Quaternion);
				}
				[Token(Token = "0x6002705")]
				[Address(RVA = "0x1858A10", Offset = "0x1858A10", VA = "0x1858A10")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2F280", Offset = "0xA2F280")]
				private set
				{
				}
			}

			[Token(Token = "0x6002706")]
			[Address(RVA = "0x1858A24", Offset = "0x1858A24", VA = "0x1858A24", Slot = "4")]
			protected override void OnRead(Vector3[] positions, Quaternion[] rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs, int rootIndex, int index)
			{
			}

			[Token(Token = "0x6002707")]
			[Address(RVA = "0x185958C", Offset = "0x185958C", VA = "0x185958C", Slot = "5")]
			public override void PreSolve()
			{
			}

			[Token(Token = "0x6002708")]
			[Address(RVA = "0x185979C", Offset = "0x185979C", VA = "0x185979C", Slot = "7")]
			public override void ApplyOffsets()
			{
			}

			[Token(Token = "0x6002709")]
			[Address(RVA = "0x1859E14", Offset = "0x1859E14", VA = "0x1859E14")]
			private void CalculateChestTargetRotation(VirtualBone rootBone, Arm[] arms)
			{
			}

			[Token(Token = "0x600270A")]
			[Address(RVA = "0x185A3D4", Offset = "0x185A3D4", VA = "0x185A3D4")]
			public void Solve(VirtualBone rootBone, Leg[] legs, Arm[] arms)
			{
			}

			[Token(Token = "0x600270B")]
			[Address(RVA = "0x185AE18", Offset = "0x185AE18", VA = "0x185AE18")]
			private void FABRIKPass(Vector3 animatedPelvisPos, Vector3 rootUp, float weight)
			{
			}

			[Token(Token = "0x600270C")]
			[Address(RVA = "0x185B648", Offset = "0x185B648", VA = "0x185B648")]
			private void SolvePelvis()
			{
			}

			[Token(Token = "0x600270D")]
			[Address(RVA = "0x185C3DC", Offset = "0x185C3DC", VA = "0x185C3DC", Slot = "6")]
			public override void Write(ref Vector3[] solvedPositions, ref Quaternion[] solvedRotations)
			{
			}

			[Token(Token = "0x600270E")]
			[Address(RVA = "0x185C5B8", Offset = "0x185C5B8", VA = "0x185C5B8", Slot = "8")]
			public override void ResetOffsets()
			{
			}

			[Token(Token = "0x600270F")]
			[Address(RVA = "0x185A044", Offset = "0x185A044", VA = "0x185A044")]
			private void AdjustChestByHands(ref Quaternion chestTargetRotation, Arm[] arms)
			{
			}

			[Token(Token = "0x6002710")]
			[Address(RVA = "0x185B28C", Offset = "0x185B28C", VA = "0x185B28C")]
			public void InverseTranslateToHead(Leg[] legs, bool limited, bool useCurrentLegMag, Vector3 offset, float w)
			{
			}

			[Token(Token = "0x6002711")]
			[Address(RVA = "0x185A9F8", Offset = "0x185A9F8", VA = "0x185A9F8")]
			private void TranslatePelvis(Leg[] legs, Vector3 deltaPosition, Quaternion deltaRotation)
			{
			}

			[Token(Token = "0x6002712")]
			[Address(RVA = "0x185C6B4", Offset = "0x185C6B4", VA = "0x185C6B4")]
			private Vector3 LimitPelvisPosition(Leg[] legs, Vector3 pelvisPosition, bool useCurrentLegMag, int it = 2)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002713")]
			[Address(RVA = "0x185B3FC", Offset = "0x185B3FC", VA = "0x185B3FC")]
			private void Bend(VirtualBone[] bones, int firstIndex, int lastIndex, Quaternion targetRotation, float clampWeight, bool uniformWeight, float w)
			{
			}

			[Token(Token = "0x6002714")]
			[Address(RVA = "0x185AFD8", Offset = "0x185AFD8", VA = "0x185AFD8")]
			private void Bend(VirtualBone[] bones, int firstIndex, int lastIndex, Quaternion targetRotation, Quaternion rotationOffset, float clampWeight, bool uniformWeight, float w)
			{
			}

			[Token(Token = "0x6002715")]
			[Address(RVA = "0x185CBD0", Offset = "0x185CBD0", VA = "0x185CBD0")]
			public Spine()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004FB")]
		public enum PositionOffset
		{
			[Token(Token = "0x4001A94")]
			Pelvis,
			[Token(Token = "0x4001A95")]
			Chest,
			[Token(Token = "0x4001A96")]
			Head,
			[Token(Token = "0x4001A97")]
			LeftHand,
			[Token(Token = "0x4001A98")]
			RightHand,
			[Token(Token = "0x4001A99")]
			LeftFoot,
			[Token(Token = "0x4001A9A")]
			RightFoot,
			[Token(Token = "0x4001A9B")]
			LeftHeel,
			[Token(Token = "0x4001A9C")]
			RightHeel
		}

		[Serializable]
		[Token(Token = "0x20004FC")]
		public enum RotationOffset
		{
			[Token(Token = "0x4001A9E")]
			Pelvis,
			[Token(Token = "0x4001A9F")]
			Chest,
			[Token(Token = "0x4001AA0")]
			Head
		}

		[Serializable]
		[Token(Token = "0x20004FD")]
		public class VirtualBone
		{
			[Token(Token = "0x4001AA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 readPosition;

			[Token(Token = "0x4001AA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Quaternion readRotation;

			[Token(Token = "0x4001AA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Vector3 solverPosition;

			[Token(Token = "0x4001AA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Quaternion solverRotation;

			[Token(Token = "0x4001AA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public float length;

			[Token(Token = "0x4001AA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public float sqrMag;

			[Token(Token = "0x4001AA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Vector3 axis;

			[Token(Token = "0x6002716")]
			[Address(RVA = "0x18594F0", Offset = "0x18594F0", VA = "0x18594F0")]
			public VirtualBone(Vector3 position, Quaternion rotation)
			{
			}

			[Token(Token = "0x6002717")]
			[Address(RVA = "0x185956C", Offset = "0x185956C", VA = "0x185956C")]
			public void Read(Vector3 position, Quaternion rotation)
			{
			}

			[Token(Token = "0x6002718")]
			[Address(RVA = "0x185CD88", Offset = "0x185CD88", VA = "0x185CD88")]
			public static void SwingRotation(VirtualBone[] bones, int index, Vector3 swingTarget, float weight = 1f)
			{
			}

			[Token(Token = "0x6002719")]
			[Address(RVA = "0x185D018", Offset = "0x185D018", VA = "0x185D018")]
			public static float PreSolve(ref VirtualBone[] bones)
			{
				return default(float);
			}

			[Token(Token = "0x600271A")]
			[Address(RVA = "0x185C9E8", Offset = "0x185C9E8", VA = "0x185C9E8")]
			public static void RotateAroundPoint(VirtualBone[] bones, int index, Vector3 point, Quaternion rotation)
			{
			}

			[Token(Token = "0x600271B")]
			[Address(RVA = "0x185D304", Offset = "0x185D304", VA = "0x185D304")]
			public static void RotateBy(VirtualBone[] bones, int index, Quaternion rotation)
			{
			}

			[Token(Token = "0x600271C")]
			[Address(RVA = "0x185D53C", Offset = "0x185D53C", VA = "0x185D53C")]
			public static void RotateBy(VirtualBone[] bones, Quaternion rotation)
			{
			}

			[Token(Token = "0x600271D")]
			[Address(RVA = "0x185D770", Offset = "0x185D770", VA = "0x185D770")]
			public static void RotateTo(VirtualBone[] bones, int index, Quaternion rotation)
			{
			}

			[Token(Token = "0x600271E")]
			[Address(RVA = "0x185BE30", Offset = "0x185BE30", VA = "0x185BE30")]
			public static void SolveTrigonometric(VirtualBone[] bones, int first, int second, int third, Vector3 targetPosition, Vector3 bendNormal, float weight)
			{
			}

			[Token(Token = "0x600271F")]
			[Address(RVA = "0x185D828", Offset = "0x185D828", VA = "0x185D828")]
			private static Vector3 GetDirectionToBendPoint(Vector3 direction, float directionMag, Vector3 bendDirection, float sqrMag1, float sqrMag2)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002720")]
			[Address(RVA = "0x185B9D0", Offset = "0x185B9D0", VA = "0x185B9D0")]
			public static void SolveFABRIK(VirtualBone[] bones, Vector3 startPosition, Vector3 targetPosition, float weight, float minNormalizedTargetDistance, int iterations, float length, Vector3 startOffset)
			{
			}

			[Token(Token = "0x6002721")]
			[Address(RVA = "0x185DA40", Offset = "0x185DA40", VA = "0x185DA40")]
			private static Vector3 SolveFABRIKJoint(Vector3 pos1, Vector3 pos2, float length)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002722")]
			[Address(RVA = "0x185DB48", Offset = "0x185DB48", VA = "0x185DB48")]
			public static void SolveCCD(VirtualBone[] bones, Vector3 targetPosition, float weight, int iterations)
			{
			}
		}

		[Token(Token = "0x40004AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform[] solverTransforms;

		[Token(Token = "0x40004AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool hasChest;

		[Token(Token = "0x40004B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool hasNeck;

		[Token(Token = "0x40004B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		private bool hasShoulders;

		[Token(Token = "0x40004B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		private bool hasToes;

		[Token(Token = "0x40004B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool hasLegs;

		[Token(Token = "0x40004B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3[] readPositions;

		[Token(Token = "0x40004B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Quaternion[] readRotations;

		[Token(Token = "0x40004B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] solvedPositions;

		[Token(Token = "0x40004B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Quaternion[] solvedRotations;

		[Token(Token = "0x40004B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Quaternion[] defaultLocalRotations;

		[Token(Token = "0x40004B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3[] defaultLocalPositions;

		[Token(Token = "0x40004BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 rootV;

		[Token(Token = "0x40004BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Vector3 rootVelocity;

		[Token(Token = "0x40004BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 bodyOffset;

		[Token(Token = "0x40004BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private int supportLegIndex;

		[Token(Token = "0x40004BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private int lastLOD;

		[Token(Token = "0x40004BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA123B8", Offset = "0xA123B8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA123B8", Offset = "0xA123B8")]
		public int LOD;

		[Token(Token = "0x40004C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1240C", Offset = "0xA1240C")]
		public bool plantFeet;

		[Token(Token = "0x40004C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA12444", Offset = "0xA12444")]
		private VirtualBone <rootBone>k__BackingField;

		[Token(Token = "0x40004C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA12454", Offset = "0xA12454")]
		public Spine spine;

		[Token(Token = "0x40004C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1248C", Offset = "0xA1248C")]
		public Arm leftArm;

		[Token(Token = "0x40004C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA124C4", Offset = "0xA124C4")]
		public Arm rightArm;

		[Token(Token = "0x40004C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA124FC", Offset = "0xA124FC")]
		public Leg leftLeg;

		[Token(Token = "0x40004C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA12534", Offset = "0xA12534")]
		public Leg rightLeg;

		[Token(Token = "0x40004C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1256C", Offset = "0xA1256C")]
		public Locomotion locomotion;

		[Token(Token = "0x40004C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Leg[] legs;

		[Token(Token = "0x40004C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Arm[] arms;

		[Token(Token = "0x40004CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Vector3 headPosition;

		[Token(Token = "0x40004CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private Vector3 headDeltaPosition;

		[Token(Token = "0x40004CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private Vector3 raycastOriginPelvis;

		[Token(Token = "0x40004CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private Vector3 lastOffset;

		[Token(Token = "0x40004CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private Vector3 debugPos1;

		[Token(Token = "0x40004CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		private Vector3 debugPos2;

		[Token(Token = "0x40004D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private Vector3 debugPos3;

		[Token(Token = "0x40004D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		private Vector3 debugPos4;

		[Token(Token = "0x1700008A")]
		[HideInInspector]
		public VirtualBone rootBone
		{
			[Token(Token = "0x60006EF")]
			[Address(RVA = "0x1A41218", Offset = "0x1A41218", VA = "0x1A41218")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA27DEC", Offset = "0xA27DEC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60006F0")]
			[Address(RVA = "0x1A41220", Offset = "0x1A41220", VA = "0x1A41220")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA27DFC", Offset = "0xA27DFC")]
			private set
			{
			}
		}

		[Token(Token = "0x60006D6")]
		[Address(RVA = "0x1A39240", Offset = "0x1A39240", VA = "0x1A39240")]
		public void SetToReferences(VRIK.References references)
		{
		}

		[Token(Token = "0x60006D7")]
		[Address(RVA = "0x1A3967C", Offset = "0x1A3967C", VA = "0x1A3967C")]
		public void GuessHandOrientations(VRIK.References references, bool onlyIfZero)
		{
		}

		[Token(Token = "0x60006D8")]
		[Address(RVA = "0x1A39524", Offset = "0x1A39524", VA = "0x1A39524")]
		public void DefaultAnimationCurves()
		{
		}

		[Token(Token = "0x60006D9")]
		[Address(RVA = "0x1A3A068", Offset = "0x1A3A068", VA = "0x1A3A068")]
		public void AddPositionOffset(PositionOffset positionOffset, Vector3 value)
		{
		}

		[Token(Token = "0x60006DA")]
		[Address(RVA = "0x1A3A344", Offset = "0x1A3A344", VA = "0x1A3A344")]
		public void AddRotationOffset(RotationOffset rotationOffset, Vector3 value)
		{
		}

		[Token(Token = "0x60006DB")]
		[Address(RVA = "0x1A3A3E8", Offset = "0x1A3A3E8", VA = "0x1A3A3E8")]
		public void AddRotationOffset(RotationOffset rotationOffset, Quaternion value)
		{
		}

		[Token(Token = "0x60006DC")]
		[Address(RVA = "0x1A3A57C", Offset = "0x1A3A57C", VA = "0x1A3A57C")]
		public void AddPlatformMotion(Vector3 deltaPosition, Quaternion deltaRotation, Vector3 platformPivot)
		{
		}

		[Token(Token = "0x60006DD")]
		[Address(RVA = "0x1A3AC88", Offset = "0x1A3AC88", VA = "0x1A3AC88")]
		public void Reset()
		{
		}

		[Token(Token = "0x60006DE")]
		[Address(RVA = "0x1A3B704", Offset = "0x1A3B704", VA = "0x1A3B704", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x60006DF")]
		[Address(RVA = "0x1A3B878", Offset = "0x1A3B878", VA = "0x1A3B878", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x60006E0")]
		[Address(RVA = "0x1A3BA80", Offset = "0x1A3BA80", VA = "0x1A3BA80", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x60006E1")]
		[Address(RVA = "0x1A3BAF4", Offset = "0x1A3BAF4", VA = "0x1A3BAF4", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x60006E2")]
		[Address(RVA = "0x1A3BB68", Offset = "0x1A3BB68", VA = "0x1A3BB68", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x60006E3")]
		[Address(RVA = "0x1A3BD7C", Offset = "0x1A3BD7C", VA = "0x1A3BD7C")]
		private Vector3 GetNormal(Transform[] transforms)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60006E4")]
		[Address(RVA = "0x1A3991C", Offset = "0x1A3991C", VA = "0x1A3991C")]
		private Vector3 GuessWristToPalmAxis(Transform hand, Transform forearm)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60006E5")]
		[Address(RVA = "0x1A39AF4", Offset = "0x1A39AF4", VA = "0x1A39AF4")]
		private Vector3 GuessPalmToThumbAxis(Transform hand, Transform forearm)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60006E6")]
		[Address(RVA = "0x1A39F44", Offset = "0x1A39F44", VA = "0x1A39F44")]
		private static Keyframe[] GetSineKeyframes(float mag)
		{
			return null;
		}

		[Token(Token = "0x60006E7")]
		[Address(RVA = "0x1A3ADFC", Offset = "0x1A3ADFC", VA = "0x1A3ADFC")]
		private void UpdateSolverTransforms()
		{
		}

		[Token(Token = "0x60006E8")]
		[Address(RVA = "0x1A3C05C", Offset = "0x1A3C05C", VA = "0x1A3C05C", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x60006E9")]
		[Address(RVA = "0x1A3C0A4", Offset = "0x1A3C0A4", VA = "0x1A3C0A4", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x60006EA")]
		[Address(RVA = "0x1A3D788", Offset = "0x1A3D788", VA = "0x1A3D788")]
		private void WriteTransforms()
		{
		}

		[Token(Token = "0x60006EB")]
		[Address(RVA = "0x1A3AF64", Offset = "0x1A3AF64", VA = "0x1A3AF64")]
		private void Read(Vector3[] positions, Quaternion[] rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs)
		{
		}

		[Token(Token = "0x60006EC")]
		[Address(RVA = "0x1A3C568", Offset = "0x1A3C568", VA = "0x1A3C568")]
		private void Solve()
		{
		}

		[Token(Token = "0x60006ED")]
		[Address(RVA = "0x1A3DB74", Offset = "0x1A3DB74", VA = "0x1A3DB74")]
		private Vector3 GetPosition(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60006EE")]
		[Address(RVA = "0x1A3DBBC", Offset = "0x1A3DBBC", VA = "0x1A3DBBC")]
		private Quaternion GetRotation(int index)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60006F1")]
		[Address(RVA = "0x1A3D638", Offset = "0x1A3D638", VA = "0x1A3D638")]
		private void Write()
		{
		}

		[Token(Token = "0x60006F2")]
		[Address(RVA = "0x1A40C18", Offset = "0x1A40C18", VA = "0x1A40C18")]
		private Vector3 GetPelvisOffset()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60006F3")]
		[Address(RVA = "0x1A41228", Offset = "0x1A41228", VA = "0x1A41228")]
		public IKSolverVR()
		{
		}
	}
	[Token(Token = "0x2000086")]
	public class TwistRelaxer : MonoBehaviour
	{
		[Token(Token = "0x40004D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IK ik;

		[Token(Token = "0x40004D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA125A4", Offset = "0xA125A4")]
		public Transform parent;

		[Token(Token = "0x40004D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA125DC", Offset = "0xA125DC")]
		public Transform child;

		[Token(Token = "0x40004D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA12614", Offset = "0xA12614")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA12614", Offset = "0xA12614")]
		public float weight;

		[Token(Token = "0x40004D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA12668", Offset = "0xA12668")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA12668", Offset = "0xA12668")]
		public float parentChildCrossfade;

		[Token(Token = "0x40004D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA126BC", Offset = "0xA126BC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA126BC", Offset = "0xA126BC")]
		public float twistAngleOffset;

		[Token(Token = "0x40004D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 twistAxis;

		[Token(Token = "0x40004D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 axis;

		[Token(Token = "0x40004DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 axisRelativeToParentDefault;

		[Token(Token = "0x40004DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 axisRelativeToChildDefault;

		[Token(Token = "0x60006F4")]
		[Address(RVA = "0x18717E8", Offset = "0x18717E8", VA = "0x18717E8")]
		public void Relax()
		{
		}

		[Token(Token = "0x60006F5")]
		[Address(RVA = "0x1871BC8", Offset = "0x1871BC8", VA = "0x1871BC8")]
		private void Start()
		{
		}

		[Token(Token = "0x60006F6")]
		[Address(RVA = "0x187203C", Offset = "0x187203C", VA = "0x187203C")]
		private void OnPostUpdate()
		{
		}

		[Token(Token = "0x60006F7")]
		[Address(RVA = "0x18720C4", Offset = "0x18720C4", VA = "0x18720C4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60006F8")]
		[Address(RVA = "0x187214C", Offset = "0x187214C", VA = "0x187214C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60006F9")]
		[Address(RVA = "0x1872250", Offset = "0x1872250", VA = "0x1872250")]
		public TwistRelaxer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000087")]
	public class InteractionEffector
	{
		[Token(Token = "0x40004DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA12718", Offset = "0xA12718")]
		private FullBodyBipedEffector <effectorType>k__BackingField;

		[Token(Token = "0x40004DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA12728", Offset = "0xA12728")]
		private bool <isPaused>k__BackingField;

		[Token(Token = "0x40004DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA12738", Offset = "0xA12738")]
		private InteractionObject <interactionObject>k__BackingField;

		[Token(Token = "0x40004DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Poser poser;

		[Token(Token = "0x40004E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private IKEffector effector;

		[Token(Token = "0x40004E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float timer;

		[Token(Token = "0x40004E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float length;

		[Token(Token = "0x40004E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float weight;

		[Token(Token = "0x40004E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float fadeInSpeed;

		[Token(Token = "0x40004E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float defaultPositionWeight;

		[Token(Token = "0x40004E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float defaultRotationWeight;

		[Token(Token = "0x40004E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float defaultPull;

		[Token(Token = "0x40004E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float defaultReach;

		[Token(Token = "0x40004E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float defaultPush;

		[Token(Token = "0x40004EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float defaultPushParent;

		[Token(Token = "0x40004EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float defaultBendGoalWeight;

		[Token(Token = "0x40004EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float resetTimer;

		[Token(Token = "0x40004ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool positionWeightUsed;

		[Token(Token = "0x40004EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool rotationWeightUsed;

		[Token(Token = "0x40004EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		private bool pullUsed;

		[Token(Token = "0x40004F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		private bool reachUsed;

		[Token(Token = "0x40004F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool pushUsed;

		[Token(Token = "0x40004F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
		private bool pushParentUsed;

		[Token(Token = "0x40004F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
		private bool bendGoalWeightUsed;

		[Token(Token = "0x40004F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x67")]
		private bool pickedUp;

		[Token(Token = "0x40004F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool defaults;

		[Token(Token = "0x40004F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		private bool pickUpOnPostFBBIK;

		[Token(Token = "0x40004F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 pickUpPosition;

		[Token(Token = "0x40004F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 pausePositionRelative;

		[Token(Token = "0x40004F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Quaternion pickUpRotation;

		[Token(Token = "0x40004FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Quaternion pauseRotationRelative;

		[Token(Token = "0x40004FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private InteractionTarget interactionTarget;

		[Token(Token = "0x40004FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Transform target;

		[Token(Token = "0x40004FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private List<bool> triggered;

		[Token(Token = "0x40004FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private InteractionSystem interactionSystem;

		[Token(Token = "0x40004FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private bool started;

		[Token(Token = "0x1700008B")]
		public FullBodyBipedEffector effectorType
		{
			[Token(Token = "0x60006FA")]
			[Address(RVA = "0x185E46C", Offset = "0x185E46C", VA = "0x185E46C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA27E0C", Offset = "0xA27E0C")]
			get
			{
				return default(FullBodyBipedEffector);
			}
			[Token(Token = "0x60006FB")]
			[Address(RVA = "0x185E474", Offset = "0x185E474", VA = "0x185E474")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA27E1C", Offset = "0xA27E1C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700008C")]
		public bool isPaused
		{
			[Token(Token = "0x60006FC")]
			[Address(RVA = "0x185E47C", Offset = "0x185E47C", VA = "0x185E47C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA27E2C", Offset = "0xA27E2C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60006FD")]
			[Address(RVA = "0x185E484", Offset = "0x185E484", VA = "0x185E484")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA27E3C", Offset = "0xA27E3C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700008D")]
		public InteractionObject interactionObject
		{
			[Token(Token = "0x60006FE")]
			[Address(RVA = "0x185E490", Offset = "0x185E490", VA = "0x185E490")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA27E4C", Offset = "0xA27E4C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60006FF")]
			[Address(RVA = "0x185E498", Offset = "0x185E498", VA = "0x185E498")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA27E5C", Offset = "0xA27E5C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700008E")]
		public bool inInteraction
		{
			[Token(Token = "0x6000700")]
			[Address(RVA = "0x185E4A0", Offset = "0x185E4A0", VA = "0x185E4A0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700008F")]
		public float progress
		{
			[Token(Token = "0x6000709")]
			[Address(RVA = "0x1860E60", Offset = "0x1860E60", VA = "0x1860E60")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000701")]
		[Address(RVA = "0x185E510", Offset = "0x185E510", VA = "0x185E510")]
		public InteractionEffector(FullBodyBipedEffector effectorType)
		{
		}

		[Token(Token = "0x6000702")]
		[Address(RVA = "0x185E594", Offset = "0x185E594", VA = "0x185E594")]
		public void Initiate(InteractionSystem interactionSystem)
		{
		}

		[Token(Token = "0x6000703")]
		[Address(RVA = "0x185E638", Offset = "0x185E638", VA = "0x185E638")]
		private void StoreDefaults()
		{
		}

		[Token(Token = "0x6000704")]
		[Address(RVA = "0x185E7B0", Offset = "0x185E7B0", VA = "0x185E7B0")]
		public bool ResetToDefaults(float speed)
		{
			return default(bool);
		}

		[Token(Token = "0x6000705")]
		[Address(RVA = "0x185EC60", Offset = "0x185EC60", VA = "0x185EC60")]
		public bool Pause()
		{
			return default(bool);
		}

		[Token(Token = "0x6000706")]
		[Address(RVA = "0x185F020", Offset = "0x185F020", VA = "0x185F020")]
		public bool Resume()
		{
			return default(bool);
		}

		[Token(Token = "0x6000707")]
		[Address(RVA = "0x185F074", Offset = "0x185F074", VA = "0x185F074")]
		public bool Start(InteractionObject interactionObject, string tag, float fadeInTime, bool interrupt)
		{
			return default(bool);
		}

		[Token(Token = "0x6000708")]
		[Address(RVA = "0x185FBC8", Offset = "0x185FBC8", VA = "0x185FBC8")]
		public void Update(Transform root, float speed)
		{
		}

		[Token(Token = "0x600070A")]
		[Address(RVA = "0x18606A8", Offset = "0x18606A8", VA = "0x18606A8")]
		private void TriggerUntriggeredEvents(bool checkTime, out bool pickUp, out bool pause)
		{
		}

		[Token(Token = "0x600070B")]
		[Address(RVA = "0x18608D0", Offset = "0x18608D0", VA = "0x18608D0")]
		private void PickUp(Transform root)
		{
		}

		[Token(Token = "0x600070C")]
		[Address(RVA = "0x1860D0C", Offset = "0x1860D0C", VA = "0x1860D0C")]
		public bool Stop()
		{
			return default(bool);
		}

		[Token(Token = "0x600070D")]
		[Address(RVA = "0x1861348", Offset = "0x1861348", VA = "0x1861348")]
		public void OnPostFBBIK()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000088")]
	public class InteractionLookAt
	{
		[Token(Token = "0x4000500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA12748", Offset = "0xA12748")]
		public LookAtIK ik;

		[Token(Token = "0x4000501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA12780", Offset = "0xA12780")]
		public float lerpSpeed;

		[Token(Token = "0x4000502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA127B8", Offset = "0xA127B8")]
		public float weightSpeed;

		[Token(Token = "0x4000503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public bool isPaused;

		[Token(Token = "0x4000504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform lookAtTarget;

		[Token(Token = "0x4000505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float stopLookTime;

		[Token(Token = "0x4000506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float weight;

		[Token(Token = "0x4000507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool firstFBBIKSolve;

		[Token(Token = "0x600070E")]
		[Address(RVA = "0x18615AC", Offset = "0x18615AC", VA = "0x18615AC")]
		public void Look(Transform target, float time)
		{
		}

		[Token(Token = "0x600070F")]
		[Address(RVA = "0x1861724", Offset = "0x1861724", VA = "0x1861724")]
		public void OnFixTransforms()
		{
		}

		[Token(Token = "0x6000710")]
		[Address(RVA = "0x18617CC", Offset = "0x18617CC", VA = "0x18617CC")]
		public void Update()
		{
		}

		[Token(Token = "0x6000711")]
		[Address(RVA = "0x1861A10", Offset = "0x1861A10", VA = "0x1861A10")]
		public void SolveSpine()
		{
		}

		[Token(Token = "0x6000712")]
		[Address(RVA = "0x1861B08", Offset = "0x1861B08", VA = "0x1861B08")]
		public void SolveHead()
		{
		}

		[Token(Token = "0x6000713")]
		[Address(RVA = "0x1861BD4", Offset = "0x1861BD4", VA = "0x1861BD4")]
		public InteractionLookAt()
		{
		}
	}
	[Token(Token = "0x2000089")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xA06624", Offset = "0xA06624")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA06624", Offset = "0xA06624")]
	public class InteractionObject : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004FE")]
		public class InteractionEvent
		{
			[Token(Token = "0x4001AA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA22654", Offset = "0xA22654")]
			public float time;

			[Token(Token = "0x4001AA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA2268C", Offset = "0xA2268C")]
			public bool pause;

			[Token(Token = "0x4001AAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA226C4", Offset = "0xA226C4")]
			public bool pickUp;

			[Token(Token = "0x4001AAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA226FC", Offset = "0xA226FC")]
			public AnimatorEvent[] animations;

			[Token(Token = "0x4001AAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA22734", Offset = "0xA22734")]
			public Message[] messages;

			[Token(Token = "0x4001AAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA2276C", Offset = "0xA2276C")]
			public UnityEvent unityEvent;

			[Token(Token = "0x6002723")]
			[Address(RVA = "0x1860E9C", Offset = "0x1860E9C", VA = "0x1860E9C")]
			public void Activate(Transform t)
			{
			}

			[Token(Token = "0x6002724")]
			[Address(RVA = "0x1862EF0", Offset = "0x1862EF0", VA = "0x1862EF0")]
			public InteractionEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004FF")]
		public class Message
		{
			[Token(Token = "0x4001AAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA227A4", Offset = "0xA227A4")]
			public string function;

			[Token(Token = "0x4001AAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA227DC", Offset = "0xA227DC")]
			public GameObject recipient;

			[Token(Token = "0x4001AB0")]
			private const string empty = "";

			[Token(Token = "0x6002725")]
			[Address(RVA = "0x1862E00", Offset = "0x1862E00", VA = "0x1862E00")]
			public void Send(Transform t)
			{
			}

			[Token(Token = "0x6002726")]
			[Address(RVA = "0x1862EF8", Offset = "0x1862EF8", VA = "0x1862EF8")]
			public Message()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000500")]
		public class AnimatorEvent
		{
			[Token(Token = "0x4001AB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA22814", Offset = "0xA22814")]
			public Animator animator;

			[Token(Token = "0x4001AB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA2284C", Offset = "0xA2284C")]
			public Animation animation;

			[Token(Token = "0x4001AB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA22884", Offset = "0xA22884")]
			public string animationState;

			[Token(Token = "0x4001AB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA228BC", Offset = "0xA228BC")]
			public float crossfadeTime;

			[Token(Token = "0x4001AB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA228F4", Offset = "0xA228F4")]
			public int layer;

			[Token(Token = "0x4001AB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA2292C", Offset = "0xA2292C")]
			public bool resetNormalizedTime;

			[Token(Token = "0x4001AB7")]
			private const string empty = "";

			[Token(Token = "0x6002727")]
			[Address(RVA = "0x1862B60", Offset = "0x1862B60", VA = "0x1862B60")]
			public void Activate(bool pickUp)
			{
			}

			[Token(Token = "0x6002728")]
			[Address(RVA = "0x1862C54", Offset = "0x1862C54", VA = "0x1862C54")]
			private void Activate(Animator animator)
			{
			}

			[Token(Token = "0x6002729")]
			[Address(RVA = "0x1862D0C", Offset = "0x1862D0C", VA = "0x1862D0C")]
			private void Activate(Animation animation)
			{
			}

			[Token(Token = "0x600272A")]
			[Address(RVA = "0x1862DEC", Offset = "0x1862DEC", VA = "0x1862DEC")]
			public AnimatorEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000501")]
		public class WeightCurve
		{
			[Serializable]
			[Token(Token = "0x20006C3")]
			public enum Type
			{
				[Token(Token = "0x4002108")]
				PositionWeight,
				[Token(Token = "0x4002109")]
				RotationWeight,
				[Token(Token = "0x400210A")]
				PositionOffsetX,
				[Token(Token = "0x400210B")]
				PositionOffsetY,
				[Token(Token = "0x400210C")]
				PositionOffsetZ,
				[Token(Token = "0x400210D")]
				Pull,
				[Token(Token = "0x400210E")]
				Reach,
				[Token(Token = "0x400210F")]
				RotateBoneWeight,
				[Token(Token = "0x4002110")]
				Push,
				[Token(Token = "0x4002111")]
				PushParent,
				[Token(Token = "0x4002112")]
				PoserWeight,
				[Token(Token = "0x4002113")]
				BendGoalWeight
			}

			[Token(Token = "0x4001AB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA22964", Offset = "0xA22964")]
			public Type type;

			[Token(Token = "0x4001AB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA2299C", Offset = "0xA2299C")]
			public AnimationCurve curve;

			[Token(Token = "0x600272B")]
			[Address(RVA = "0x1862378", Offset = "0x1862378", VA = "0x1862378")]
			public float GetValue(float timer)
			{
				return default(float);
			}

			[Token(Token = "0x600272C")]
			[Address(RVA = "0x1862F10", Offset = "0x1862F10", VA = "0x1862F10")]
			public WeightCurve()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000502")]
		public class Multiplier
		{
			[Token(Token = "0x4001ABA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA229D4", Offset = "0xA229D4")]
			public WeightCurve.Type curve;

			[Token(Token = "0x4001ABB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA22A0C", Offset = "0xA22A0C")]
			public float multiplier;

			[Token(Token = "0x4001ABC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA22A44", Offset = "0xA22A44")]
			public WeightCurve.Type result;

			[Token(Token = "0x600272D")]
			[Address(RVA = "0x1862A58", Offset = "0x1862A58", VA = "0x1862A58")]
			public float GetValue(WeightCurve weightCurve, float timer)
			{
				return default(float);
			}

			[Token(Token = "0x600272E")]
			[Address(RVA = "0x1862F00", Offset = "0x1862F00", VA = "0x1862F00")]
			public Multiplier()
			{
			}
		}

		[Token(Token = "0x4000508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA12800", Offset = "0xA12800")]
		public Transform otherLookAtTarget;

		[Token(Token = "0x4000509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA12838", Offset = "0xA12838")]
		public Transform otherTargetsRoot;

		[Token(Token = "0x400050A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA12870", Offset = "0xA12870")]
		public Transform positionOffsetSpace;

		[Token(Token = "0x400050B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public WeightCurve[] weightCurves;

		[Token(Token = "0x400050C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Multiplier[] multipliers;

		[Token(Token = "0x400050D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public InteractionEvent[] events;

		[Token(Token = "0x400050E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA128A8", Offset = "0xA128A8")]
		private float <length>k__BackingField;

		[Token(Token = "0x400050F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA128B8", Offset = "0xA128B8")]
		private InteractionSystem <lastUsedInteractionSystem>k__BackingField;

		[Token(Token = "0x4000510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private InteractionTarget[] targets;

		[Token(Token = "0x17000090")]
		public float length
		{
			[Token(Token = "0x600071C")]
			[Address(RVA = "0x1861E48", Offset = "0x1861E48", VA = "0x1861E48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2802C", Offset = "0xA2802C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600071D")]
			[Address(RVA = "0x1861E50", Offset = "0x1861E50", VA = "0x1861E50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2803C", Offset = "0xA2803C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000091")]
		public InteractionSystem lastUsedInteractionSystem
		{
			[Token(Token = "0x600071E")]
			[Address(RVA = "0x1861E58", Offset = "0x1861E58", VA = "0x1861E58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2804C", Offset = "0xA2804C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600071F")]
			[Address(RVA = "0x1861E60", Offset = "0x1861E60", VA = "0x1861E60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2805C", Offset = "0xA2805C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000092")]
		public Transform lookAtTarget
		{
			[Token(Token = "0x6000721")]
			[Address(RVA = "0x186207C", Offset = "0x186207C", VA = "0x186207C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000093")]
		public Transform targetsRoot
		{
			[Token(Token = "0x6000729")]
			[Address(RVA = "0x186121C", Offset = "0x186121C", VA = "0x186121C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000714")]
		[Address(RVA = "0x1861BE8", Offset = "0x1861BE8", VA = "0x1861BE8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA27E6C", Offset = "0xA27E6C")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6000715")]
		[Address(RVA = "0x1861C34", Offset = "0x1861C34", VA = "0x1861C34")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA27EA4", Offset = "0xA27EA4")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000716")]
		[Address(RVA = "0x1861C80", Offset = "0x1861C80", VA = "0x1861C80")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA27EDC", Offset = "0xA27EDC")]
		private void OpenTutorial1()
		{
		}

		[Token(Token = "0x6000717")]
		[Address(RVA = "0x1861CCC", Offset = "0x1861CCC", VA = "0x1861CCC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA27F14", Offset = "0xA27F14")]
		private void OpenTutorial2()
		{
		}

		[Token(Token = "0x6000718")]
		[Address(RVA = "0x1861D18", Offset = "0x1861D18", VA = "0x1861D18")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA27F4C", Offset = "0xA27F4C")]
		private void OpenTutorial3()
		{
		}

		[Token(Token = "0x6000719")]
		[Address(RVA = "0x1861D64", Offset = "0x1861D64", VA = "0x1861D64")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA27F84", Offset = "0xA27F84")]
		private void OpenTutorial4()
		{
		}

		[Token(Token = "0x600071A")]
		[Address(RVA = "0x1861DB0", Offset = "0x1861DB0", VA = "0x1861DB0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA27FBC", Offset = "0xA27FBC")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x600071B")]
		[Address(RVA = "0x1861DFC", Offset = "0x1861DFC", VA = "0x1861DFC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA27FF4", Offset = "0xA27FF4")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000720")]
		[Address(RVA = "0x1861E68", Offset = "0x1861E68", VA = "0x1861E68")]
		public void Initiate()
		{
		}

		[Token(Token = "0x6000722")]
		[Address(RVA = "0x186210C", Offset = "0x186210C", VA = "0x186210C")]
		public InteractionTarget GetTarget(FullBodyBipedEffector effectorType, InteractionSystem interactionSystem)
		{
			return null;
		}

		[Token(Token = "0x6000723")]
		[Address(RVA = "0x185F5F0", Offset = "0x185F5F0", VA = "0x185F5F0")]
		public bool CurveUsed(WeightCurve.Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000724")]
		[Address(RVA = "0x1862290", Offset = "0x1862290", VA = "0x1862290")]
		public InteractionTarget[] GetTargets()
		{
			return null;
		}

		[Token(Token = "0x6000725")]
		[Address(RVA = "0x185F4A4", Offset = "0x185F4A4", VA = "0x185F4A4")]
		public Transform GetTarget(FullBodyBipedEffector effectorType, string tag)
		{
			return null;
		}

		[Token(Token = "0x6000726")]
		[Address(RVA = "0x185F5E8", Offset = "0x185F5E8", VA = "0x185F5E8")]
		public void OnStartInteraction(InteractionSystem interactionSystem)
		{
		}

		[Token(Token = "0x6000727")]
		[Address(RVA = "0x186028C", Offset = "0x186028C", VA = "0x186028C")]
		public void Apply(IKSolverFullBodyBiped solver, FullBodyBipedEffector effector, InteractionTarget target, float timer, float weight)
		{
		}

		[Token(Token = "0x6000728")]
		[Address(RVA = "0x1860AE4", Offset = "0x1860AE4", VA = "0x1860AE4")]
		public float GetValue(WeightCurve.Type weightCurveType, InteractionTarget target, float timer)
		{
			return default(float);
		}

		[Token(Token = "0x600072A")]
		[Address(RVA = "0x1862A94", Offset = "0x1862A94", VA = "0x1862A94")]
		private void Start()
		{
		}

		[Token(Token = "0x600072B")]
		[Address(RVA = "0x1862394", Offset = "0x1862394", VA = "0x1862394")]
		private void Apply(IKSolverFullBodyBiped solver, FullBodyBipedEffector effector, WeightCurve.Type type, float value, float weight)
		{
		}

		[Token(Token = "0x600072C")]
		[Address(RVA = "0x1862298", Offset = "0x1862298", VA = "0x1862298")]
		private Transform GetTarget(FullBodyBipedEffector effectorType)
		{
			return null;
		}

		[Token(Token = "0x600072D")]
		[Address(RVA = "0x18629F0", Offset = "0x18629F0", VA = "0x18629F0")]
		private int GetWeightCurveIndex(WeightCurve.Type weightCurveType)
		{
			return default(int);
		}

		[Token(Token = "0x600072E")]
		[Address(RVA = "0x1862A98", Offset = "0x1862A98", VA = "0x1862A98")]
		private int GetMultiplierIndex(WeightCurve.Type weightCurveType)
		{
			return default(int);
		}

		[Token(Token = "0x600072F")]
		[Address(RVA = "0x1862B00", Offset = "0x1862B00", VA = "0x1862B00")]
		public InteractionObject()
		{
		}
	}
	[Token(Token = "0x200008A")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xA06684", Offset = "0xA06684")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA06684", Offset = "0xA06684")]
	public class InteractionSystem : MonoBehaviour
	{
		[Token(Token = "0x2000503")]
		public delegate void InteractionDelegate(FullBodyBipedEffector effectorType, InteractionObject interactionObject);

		[Token(Token = "0x2000504")]
		public delegate void InteractionEventDelegate(FullBodyBipedEffector effectorType, InteractionObject interactionObject, InteractionObject.InteractionEvent interactionEvent);

		[Token(Token = "0x4000511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA128C8", Offset = "0xA128C8")]
		public string targetTag;

		[Token(Token = "0x4000512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA12900", Offset = "0xA12900")]
		public float fadeInTime;

		[Token(Token = "0x4000513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA12938", Offset = "0xA12938")]
		public float speed;

		[Token(Token = "0x4000514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA12970", Offset = "0xA12970")]
		public float resetToDefaultsSpeed;

		[Token(Token = "0x4000515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA129A8", Offset = "0xA129A8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA129A8", Offset = "0xA129A8")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA129A8", Offset = "0xA129A8")]
		public Collider characterCollider;

		[Token(Token = "0x4000516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA12A2C", Offset = "0xA12A2C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA12A2C", Offset = "0xA12A2C")]
		public Transform FPSCamera;

		[Token(Token = "0x4000517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA12A8C", Offset = "0xA12A8C")]
		public LayerMask camRaycastLayers;

		[Token(Token = "0x4000518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA12AC4", Offset = "0xA12AC4")]
		public float camRaycastDistance;

		[Token(Token = "0x4000519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA12AFC", Offset = "0xA12AFC")]
		private List<InteractionTrigger> <triggersInRange>k__BackingField;

		[Token(Token = "0x400051A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<InteractionTrigger> inContact;

		[Token(Token = "0x400051B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<int> bestRangeIndexes;

		[Token(Token = "0x400051C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public InteractionDelegate OnInteractionStart;

		[Token(Token = "0x400051D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public InteractionDelegate OnInteractionPause;

		[Token(Token = "0x400051E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public InteractionDelegate OnInteractionPickUp;

		[Token(Token = "0x400051F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public InteractionDelegate OnInteractionResume;

		[Token(Token = "0x4000520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public InteractionDelegate OnInteractionStop;

		[Token(Token = "0x4000521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public InteractionEventDelegate OnInteractionEvent;

		[Token(Token = "0x4000522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public RaycastHit raycastHit;

		[Token(Token = "0x4000523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xA12B0C", Offset = "0xA12B0C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA12B0C", Offset = "0xA12B0C")]
		[SerializeField]
		private FullBodyBipedIK fullBody;

		[Token(Token = "0x4000524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA12B6C", Offset = "0xA12B6C")]
		public InteractionLookAt lookAt;

		[Token(Token = "0x4000525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private InteractionEffector[] interactionEffectors;

		[Token(Token = "0x4000526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool initiated;

		[Token(Token = "0x4000527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Collider lastCollider;

		[Token(Token = "0x4000528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Collider c;

		[Token(Token = "0x17000094")]
		public bool inInteraction
		{
			[Token(Token = "0x6000738")]
			[Address(RVA = "0x1863178", Offset = "0x1863178", VA = "0x1863178")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000095")]
		public FullBodyBipedIK ik
		{
			[Token(Token = "0x6000752")]
			[Address(RVA = "0x1864D90", Offset = "0x1864D90", VA = "0x1864D90")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000753")]
			[Address(RVA = "0x1864D98", Offset = "0x1864D98", VA = "0x1864D98")]
			set
			{
			}
		}

		[Token(Token = "0x17000096")]
		public List<InteractionTrigger> triggersInRange
		{
			[Token(Token = "0x6000754")]
			[Address(RVA = "0x1864DA0", Offset = "0x1864DA0", VA = "0x1864DA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2822C", Offset = "0xA2822C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000755")]
			[Address(RVA = "0x1864DA8", Offset = "0x1864DA8", VA = "0x1864DA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2823C", Offset = "0xA2823C")]
			private set
			{
			}
		}

		[Token(Token = "0x6000730")]
		[Address(RVA = "0x1862F18", Offset = "0x1862F18", VA = "0x1862F18")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA2806C", Offset = "0xA2806C")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6000731")]
		[Address(RVA = "0x1862F64", Offset = "0x1862F64", VA = "0x1862F64")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA280A4", Offset = "0xA280A4")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000732")]
		[Address(RVA = "0x1862FB0", Offset = "0x1862FB0", VA = "0x1862FB0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA280DC", Offset = "0xA280DC")]
		private void OpenTutorial1()
		{
		}

		[Token(Token = "0x6000733")]
		[Address(RVA = "0x1862FFC", Offset = "0x1862FFC", VA = "0x1862FFC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA28114", Offset = "0xA28114")]
		private void OpenTutorial2()
		{
		}

		[Token(Token = "0x6000734")]
		[Address(RVA = "0x1863048", Offset = "0x1863048", VA = "0x1863048")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA2814C", Offset = "0xA2814C")]
		private void OpenTutorial3()
		{
		}

		[Token(Token = "0x6000735")]
		[Address(RVA = "0x1863094", Offset = "0x1863094", VA = "0x1863094")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA28184", Offset = "0xA28184")]
		private void OpenTutorial4()
		{
		}

		[Token(Token = "0x6000736")]
		[Address(RVA = "0x18630E0", Offset = "0x18630E0", VA = "0x18630E0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA281BC", Offset = "0xA281BC")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000737")]
		[Address(RVA = "0x186312C", Offset = "0x186312C", VA = "0x186312C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA281F4", Offset = "0xA281F4")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000739")]
		[Address(RVA = "0x1863308", Offset = "0x1863308", VA = "0x1863308")]
		public bool IsInInteraction(FullBodyBipedEffector effectorType)
		{
			return default(bool);
		}

		[Token(Token = "0x600073A")]
		[Address(RVA = "0x18633D4", Offset = "0x18633D4", VA = "0x18633D4")]
		public bool IsPaused(FullBodyBipedEffector effectorType)
		{
			return default(bool);
		}

		[Token(Token = "0x600073B")]
		[Address(RVA = "0x18634A0", Offset = "0x18634A0", VA = "0x18634A0")]
		public bool IsPaused()
		{
			return default(bool);
		}

		[Token(Token = "0x600073C")]
		[Address(RVA = "0x186354C", Offset = "0x186354C", VA = "0x186354C")]
		public bool IsInSync()
		{
			return default(bool);
		}

		[Token(Token = "0x600073D")]
		[Address(RVA = "0x1863644", Offset = "0x1863644", VA = "0x1863644")]
		public bool StartInteraction(FullBodyBipedEffector effectorType, InteractionObject interactionObject, bool interrupt)
		{
			return default(bool);
		}

		[Token(Token = "0x600073E")]
		[Address(RVA = "0x1863760", Offset = "0x1863760", VA = "0x1863760")]
		public bool PauseInteraction(FullBodyBipedEffector effectorType)
		{
			return default(bool);
		}

		[Token(Token = "0x600073F")]
		[Address(RVA = "0x18637F0", Offset = "0x18637F0", VA = "0x18637F0")]
		public bool ResumeInteraction(FullBodyBipedEffector effectorType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000740")]
		[Address(RVA = "0x1863880", Offset = "0x1863880", VA = "0x1863880")]
		public bool StopInteraction(FullBodyBipedEffector effectorType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000741")]
		[Address(RVA = "0x1863910", Offset = "0x1863910", VA = "0x1863910")]
		public void PauseAll()
		{
		}

		[Token(Token = "0x6000742")]
		[Address(RVA = "0x1863984", Offset = "0x1863984", VA = "0x1863984")]
		public void ResumeAll()
		{
		}

		[Token(Token = "0x6000743")]
		[Address(RVA = "0x18639F8", Offset = "0x18639F8", VA = "0x18639F8")]
		public void StopAll()
		{
		}

		[Token(Token = "0x6000744")]
		[Address(RVA = "0x1863A60", Offset = "0x1863A60", VA = "0x1863A60")]
		public InteractionObject GetInteractionObject(FullBodyBipedEffector effectorType)
		{
			return null;
		}

		[Token(Token = "0x6000745")]
		[Address(RVA = "0x1863AEC", Offset = "0x1863AEC", VA = "0x1863AEC")]
		public float GetProgress(FullBodyBipedEffector effectorType)
		{
			return default(float);
		}

		[Token(Token = "0x6000746")]
		[Address(RVA = "0x1863BA0", Offset = "0x1863BA0", VA = "0x1863BA0")]
		public float GetMinActiveProgress()
		{
			return default(float);
		}

		[Token(Token = "0x6000747")]
		[Address(RVA = "0x1863C84", Offset = "0x1863C84", VA = "0x1863C84")]
		public bool TriggerInteraction(int index, bool interrupt)
		{
			return default(bool);
		}

		[Token(Token = "0x6000748")]
		[Address(RVA = "0x1863F28", Offset = "0x1863F28", VA = "0x1863F28")]
		public bool TriggerInteraction(int index, bool interrupt, out InteractionObject interactionObject)
		{
			return default(bool);
		}

		[Token(Token = "0x6000749")]
		[Address(RVA = "0x1864100", Offset = "0x1864100", VA = "0x1864100")]
		public bool TriggerInteraction(int index, bool interrupt, out InteractionTarget interactionTarget)
		{
			return default(bool);
		}

		[Token(Token = "0x600074A")]
		[Address(RVA = "0x1864374", Offset = "0x1864374", VA = "0x1864374")]
		public InteractionTrigger.Range GetClosestInteractionRange()
		{
			return null;
		}

		[Token(Token = "0x600074B")]
		[Address(RVA = "0x1864668", Offset = "0x1864668", VA = "0x1864668")]
		public InteractionObject GetClosestInteractionObjectInRange()
		{
			return null;
		}

		[Token(Token = "0x600074C")]
		[Address(RVA = "0x18646AC", Offset = "0x18646AC", VA = "0x18646AC")]
		public InteractionTarget GetClosestInteractionTargetInRange()
		{
			return null;
		}

		[Token(Token = "0x600074D")]
		[Address(RVA = "0x1864724", Offset = "0x1864724", VA = "0x1864724")]
		public InteractionObject[] GetClosestInteractionObjectsInRange()
		{
			return null;
		}

		[Token(Token = "0x600074E")]
		[Address(RVA = "0x1864844", Offset = "0x1864844", VA = "0x1864844")]
		public InteractionTarget[] GetClosestInteractionTargetsInRange()
		{
			return null;
		}

		[Token(Token = "0x600074F")]
		[Address(RVA = "0x18649BC", Offset = "0x18649BC", VA = "0x18649BC")]
		public bool TriggerEffectorsReady(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000750")]
		[Address(RVA = "0x1864C64", Offset = "0x1864C64", VA = "0x1864C64")]
		public InteractionTrigger.Range GetTriggerRange(int index)
		{
			return null;
		}

		[Token(Token = "0x6000751")]
		[Address(RVA = "0x1864474", Offset = "0x1864474", VA = "0x1864474")]
		public int GetClosestTriggerIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6000756")]
		[Address(RVA = "0x1864DB0", Offset = "0x1864DB0", VA = "0x1864DB0")]
		public void Start()
		{
		}

		[Token(Token = "0x6000757")]
		[Address(RVA = "0x1865464", Offset = "0x1865464", VA = "0x1865464")]
		private void InteractionPause(FullBodyBipedEffector effector, InteractionObject interactionObject)
		{
		}

		[Token(Token = "0x6000758")]
		[Address(RVA = "0x1865484", Offset = "0x1865484", VA = "0x1865484")]
		private void InteractionResume(FullBodyBipedEffector effector, InteractionObject interactionObject)
		{
		}

		[Token(Token = "0x6000759")]
		[Address(RVA = "0x18654A0", Offset = "0x18654A0", VA = "0x18654A0")]
		private void InteractionStop(FullBodyBipedEffector effector, InteractionObject interactionObject)
		{
		}

		[Token(Token = "0x600075A")]
		[Address(RVA = "0x18654BC", Offset = "0x18654BC", VA = "0x18654BC")]
		private void LookAtInteraction(FullBodyBipedEffector effector, InteractionObject interactionObject)
		{
		}

		[Token(Token = "0x600075B")]
		[Address(RVA = "0x186551C", Offset = "0x186551C", VA = "0x186551C")]
		public void OnTriggerEnter(Collider c)
		{
		}

		[Token(Token = "0x600075C")]
		[Address(RVA = "0x1865638", Offset = "0x1865638", VA = "0x1865638")]
		public void OnTriggerExit(Collider c)
		{
		}

		[Token(Token = "0x600075D")]
		[Address(RVA = "0x1865734", Offset = "0x1865734", VA = "0x1865734")]
		private bool ContactIsInRange(int index, out int bestRangeIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x600075E")]
		[Address(RVA = "0x1865A94", Offset = "0x1865A94", VA = "0x1865A94")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x600075F")]
		[Address(RVA = "0x1865B80", Offset = "0x1865B80", VA = "0x1865B80")]
		public void Update()
		{
		}

		[Token(Token = "0x6000760")]
		[Address(RVA = "0x1865DCC", Offset = "0x1865DCC", VA = "0x1865DCC")]
		private void Raycasting()
		{
		}

		[Token(Token = "0x6000761")]
		[Address(RVA = "0x18651DC", Offset = "0x18651DC", VA = "0x18651DC")]
		private void UpdateTriggerEventBroadcasting()
		{
		}

		[Token(Token = "0x6000762")]
		[Address(RVA = "0x1865F0C", Offset = "0x1865F0C", VA = "0x1865F0C")]
		private void UpdateEffectors()
		{
		}

		[Token(Token = "0x6000763")]
		[Address(RVA = "0x1866038", Offset = "0x1866038", VA = "0x1866038")]
		private void OnPreFBBIK()
		{
		}

		[Token(Token = "0x6000764")]
		[Address(RVA = "0x18660D0", Offset = "0x18660D0", VA = "0x18660D0")]
		private void OnPostFBBIK()
		{
		}

		[Token(Token = "0x6000765")]
		[Address(RVA = "0x18661A8", Offset = "0x18661A8", VA = "0x18661A8")]
		private void OnFixTransforms()
		{
		}

		[Token(Token = "0x6000766")]
		[Address(RVA = "0x18661C0", Offset = "0x18661C0", VA = "0x18661C0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000767")]
		[Address(RVA = "0x1863224", Offset = "0x1863224", VA = "0x1863224")]
		private bool IsValid(bool log)
		{
			return default(bool);
		}

		[Token(Token = "0x6000768")]
		[Address(RVA = "0x1863E24", Offset = "0x1863E24", VA = "0x1863E24")]
		private bool TriggerIndexIsValid(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000769")]
		[Address(RVA = "0x18664B0", Offset = "0x18664B0", VA = "0x18664B0")]
		public InteractionSystem()
		{
		}
	}
	[Token(Token = "0x200008B")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xA066E4", Offset = "0xA066E4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA066E4", Offset = "0xA066E4")]
	public class InteractionTarget : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000505")]
		public class Multiplier
		{
			[Token(Token = "0x4001ABD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA22A7C", Offset = "0xA22A7C")]
			public InteractionObject.WeightCurve.Type curve;

			[Token(Token = "0x4001ABE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA22AB4", Offset = "0xA22AB4")]
			public float multiplier;

			[Token(Token = "0x6002737")]
			[Address(RVA = "0x1866C50", Offset = "0x1866C50", VA = "0x1866C50")]
			public Multiplier()
			{
			}
		}

		[Token(Token = "0x4000529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA12BA4", Offset = "0xA12BA4")]
		public FullBodyBipedEffector effectorType;

		[Token(Token = "0x400052A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA12BDC", Offset = "0xA12BDC")]
		public Multiplier[] multipliers;

		[Token(Token = "0x400052B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA12C14", Offset = "0xA12C14")]
		public float interactionSpeedMlp;

		[Token(Token = "0x400052C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA12C4C", Offset = "0xA12C4C")]
		public Transform pivot;

		[Token(Token = "0x400052D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA12C84", Offset = "0xA12C84")]
		public Vector3 twistAxis;

		[Token(Token = "0x400052E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA12CBC", Offset = "0xA12CBC")]
		public float twistWeight;

		[Token(Token = "0x400052F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA12CF4", Offset = "0xA12CF4")]
		public float swingWeight;

		[Token(Token = "0x4000530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA12D2C", Offset = "0xA12D2C")]
		public bool rotateOnce;

		[Token(Token = "0x4000531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion defaultLocalRotation;

		[Token(Token = "0x4000532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform lastPivot;

		[Token(Token = "0x600076A")]
		[Address(RVA = "0x1866964", Offset = "0x1866964", VA = "0x1866964")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA2824C", Offset = "0xA2824C")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x600076B")]
		[Address(RVA = "0x18669B0", Offset = "0x18669B0", VA = "0x18669B0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA28284", Offset = "0xA28284")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x600076C")]
		[Address(RVA = "0x18669FC", Offset = "0x18669FC", VA = "0x18669FC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA282BC", Offset = "0xA282BC")]
		private void OpenTutorial1()
		{
		}

		[Token(Token = "0x600076D")]
		[Address(RVA = "0x1866A48", Offset = "0x1866A48", VA = "0x1866A48")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA282F4", Offset = "0xA282F4")]
		private void OpenTutorial2()
		{
		}

		[Token(Token = "0x600076E")]
		[Address(RVA = "0x1866A94", Offset = "0x1866A94", VA = "0x1866A94")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA2832C", Offset = "0xA2832C")]
		private void OpenTutorial3()
		{
		}

		[Token(Token = "0x600076F")]
		[Address(RVA = "0x1866AE0", Offset = "0x1866AE0", VA = "0x1866AE0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA28364", Offset = "0xA28364")]
		private void OpenTutorial4()
		{
		}

		[Token(Token = "0x6000770")]
		[Address(RVA = "0x1866B2C", Offset = "0x1866B2C", VA = "0x1866B2C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA2839C", Offset = "0xA2839C")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000771")]
		[Address(RVA = "0x1866B78", Offset = "0x1866B78", VA = "0x1866B78")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA283D4", Offset = "0xA283D4")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000772")]
		[Address(RVA = "0x1862308", Offset = "0x1862308", VA = "0x1862308")]
		public float GetValue(InteractionObject.WeightCurve.Type curveType)
		{
			return default(float);
		}

		[Token(Token = "0x6000773")]
		[Address(RVA = "0x18612AC", Offset = "0x18612AC", VA = "0x18612AC")]
		public void ResetRotation()
		{
		}

		[Token(Token = "0x6000774")]
		[Address(RVA = "0x185F6A4", Offset = "0x185F6A4", VA = "0x185F6A4")]
		public void RotateTo(Vector3 position)
		{
		}

		[Token(Token = "0x6000775")]
		[Address(RVA = "0x1866BC4", Offset = "0x1866BC4", VA = "0x1866BC4")]
		public InteractionTarget()
		{
		}
	}
	[Token(Token = "0x200008C")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xA06744", Offset = "0xA06744")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA06744", Offset = "0xA06744")]
	public class InteractionTrigger : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000506")]
		public class CharacterPosition
		{
			[Token(Token = "0x4001ABF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA22AEC", Offset = "0xA22AEC")]
			public bool use;

			[Token(Token = "0x4001AC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA22B24", Offset = "0xA22B24")]
			public Vector2 offset;

			[Token(Token = "0x4001AC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA22B5C", Offset = "0xA22B5C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA22B5C", Offset = "0xA22B5C")]
			public float angleOffset;

			[Token(Token = "0x4001AC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA22BB8", Offset = "0xA22BB8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA22BB8", Offset = "0xA22BB8")]
			public float maxAngle;

			[Token(Token = "0x4001AC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA22C10", Offset = "0xA22C10")]
			public float radius;

			[Token(Token = "0x4001AC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA22C48", Offset = "0xA22C48")]
			public bool orbit;

			[Token(Token = "0x4001AC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA22C80", Offset = "0xA22C80")]
			public bool fixYAxis;

			[Token(Token = "0x170004A5")]
			public Vector3 offset3D
			{
				[Token(Token = "0x6002738")]
				[Address(RVA = "0x1867470", Offset = "0x1867470", VA = "0x1867470")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x170004A6")]
			public Vector3 direction3D
			{
				[Token(Token = "0x6002739")]
				[Address(RVA = "0x18674AC", Offset = "0x18674AC", VA = "0x18674AC")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x600273A")]
			[Address(RVA = "0x18675A4", Offset = "0x18675A4", VA = "0x18675A4")]
			public bool IsInRange(Transform character, Transform trigger, out float error)
			{
				return default(bool);
			}

			[Token(Token = "0x600273B")]
			[Address(RVA = "0x1867C20", Offset = "0x1867C20", VA = "0x1867C20")]
			public CharacterPosition()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000507")]
		public class CameraPosition
		{
			[Token(Token = "0x4001AC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA22CB8", Offset = "0xA22CB8")]
			public Collider lookAtTarget;

			[Token(Token = "0x4001AC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA22CF0", Offset = "0xA22CF0")]
			public Vector3 direction;

			[Token(Token = "0x4001AC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA22D28", Offset = "0xA22D28")]
			public float maxDistance;

			[Token(Token = "0x4001AC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA22D60", Offset = "0xA22D60")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA22D60", Offset = "0xA22D60")]
			public float maxAngle;

			[Token(Token = "0x4001ACA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA22DB8", Offset = "0xA22DB8")]
			public bool fixYAxis;

			[Token(Token = "0x600273C")]
			[Address(RVA = "0x1866F5C", Offset = "0x1866F5C", VA = "0x1866F5C")]
			public Quaternion GetRotation()
			{
				return default(Quaternion);
			}

			[Token(Token = "0x600273D")]
			[Address(RVA = "0x1867104", Offset = "0x1867104", VA = "0x1867104")]
			public bool IsInRange(Transform raycastFrom, RaycastHit hit, Transform trigger, out float error)
			{
				return default(bool);
			}

			[Token(Token = "0x600273E")]
			[Address(RVA = "0x18673E4", Offset = "0x18673E4", VA = "0x18673E4")]
			public CameraPosition()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000508")]
		public class Range
		{
			[Serializable]
			[Token(Token = "0x20006C4")]
			public class Interaction
			{
				[Token(Token = "0x4002114")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA258F4", Offset = "0xA258F4")]
				public InteractionObject interactionObject;

				[Token(Token = "0x4002115")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA2592C", Offset = "0xA2592C")]
				public FullBodyBipedEffector[] effectors;

				[Token(Token = "0x6002C88")]
				[Address(RVA = "0x1867C44", Offset = "0x1867C44", VA = "0x1867C44")]
				public Interaction()
				{
				}
			}

			[Token(Token = "0x4001ACB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[HideInInspector]
			[SerializeField]
			public string name;

			[Token(Token = "0x4001ACC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[HideInInspector]
			[SerializeField]
			public bool show;

			[Token(Token = "0x4001ACD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA22E60", Offset = "0xA22E60")]
			public CharacterPosition characterPosition;

			[Token(Token = "0x4001ACE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA22E98", Offset = "0xA22E98")]
			public CameraPosition cameraPosition;

			[Token(Token = "0x4001ACF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA22ED0", Offset = "0xA22ED0")]
			public Interaction[] interactions;

			[Token(Token = "0x600273F")]
			[Address(RVA = "0x1866DD8", Offset = "0x1866DD8", VA = "0x1866DD8")]
			public bool IsInRange(Transform character, Transform raycastFrom, RaycastHit raycastHit, Transform trigger, out float maxError)
			{
				return default(bool);
			}

			[Token(Token = "0x6002740")]
			[Address(RVA = "0x1867C34", Offset = "0x1867C34", VA = "0x1867C34")]
			public Range()
			{
			}
		}

		[Token(Token = "0x4000533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA12D64", Offset = "0xA12D64")]
		public Range[] ranges;

		[Token(Token = "0x6000776")]
		[Address(RVA = "0x1866C58", Offset = "0x1866C58", VA = "0x1866C58")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA2840C", Offset = "0xA2840C")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6000777")]
		[Address(RVA = "0x1866CA4", Offset = "0x1866CA4", VA = "0x1866CA4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA28444", Offset = "0xA28444")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000778")]
		[Address(RVA = "0x1866CF0", Offset = "0x1866CF0", VA = "0x1866CF0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA2847C", Offset = "0xA2847C")]
		private void OpenTutorial4()
		{
		}

		[Token(Token = "0x6000779")]
		[Address(RVA = "0x1866D3C", Offset = "0x1866D3C", VA = "0x1866D3C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA284B4", Offset = "0xA284B4")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x600077A")]
		[Address(RVA = "0x1866D88", Offset = "0x1866D88", VA = "0x1866D88")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA284EC", Offset = "0xA284EC")]
		private void ASThread()
		{
		}

		[Token(Token = "0x600077B")]
		[Address(RVA = "0x1866DD4", Offset = "0x1866DD4", VA = "0x1866DD4")]
		private void Start()
		{
		}

		[Token(Token = "0x600077C")]
		[Address(RVA = "0x18658D8", Offset = "0x18658D8", VA = "0x18658D8")]
		public int GetBestRangeIndex(Transform character, Transform raycastFrom, RaycastHit raycastHit)
		{
			return default(int);
		}

		[Token(Token = "0x600077D")]
		[Address(RVA = "0x1866EFC", Offset = "0x1866EFC", VA = "0x1866EFC")]
		public InteractionTrigger()
		{
		}
	}
	[Token(Token = "0x200008D")]
	public class GenericPoser : Poser
	{
		[Serializable]
		[Token(Token = "0x2000509")]
		public class Map
		{
			[Token(Token = "0x4001AD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform bone;

			[Token(Token = "0x4001AD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform target;

			[Token(Token = "0x4001AD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Vector3 defaultLocalPosition;

			[Token(Token = "0x4001AD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private Quaternion defaultLocalRotation;

			[Token(Token = "0x6002741")]
			[Address(RVA = "0x17771C8", Offset = "0x17771C8", VA = "0x17771C8")]
			public Map(Transform bone, Transform target)
			{
			}

			[Token(Token = "0x6002742")]
			[Address(RVA = "0x17775CC", Offset = "0x17775CC", VA = "0x17775CC")]
			public void StoreDefaultState()
			{
			}

			[Token(Token = "0x6002743")]
			[Address(RVA = "0x1777580", Offset = "0x1777580", VA = "0x1777580")]
			public void FixTransform()
			{
			}

			[Token(Token = "0x6002744")]
			[Address(RVA = "0x1777378", Offset = "0x1777378", VA = "0x1777378")]
			public void Update(float localRotationWeight, float localPositionWeight)
			{
			}
		}

		[Token(Token = "0x4000534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Map[] maps;

		[Token(Token = "0x600077E")]
		[Address(RVA = "0x1776EE0", Offset = "0x1776EE0", VA = "0x1776EE0", Slot = "7")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA28524", Offset = "0xA28524")]
		public override void AutoMapping()
		{
		}

		[Token(Token = "0x600077F")]
		[Address(RVA = "0x177726C", Offset = "0x177726C", VA = "0x177726C", Slot = "8")]
		protected override void InitiatePoser()
		{
		}

		[Token(Token = "0x6000780")]
		[Address(RVA = "0x1777270", Offset = "0x1777270", VA = "0x1777270", Slot = "9")]
		protected override void UpdatePoser()
		{
		}

		[Token(Token = "0x6000781")]
		[Address(RVA = "0x1777518", Offset = "0x1777518", VA = "0x1777518", Slot = "10")]
		protected override void FixPoserTransforms()
		{
		}

		[Token(Token = "0x6000782")]
		[Address(RVA = "0x1777204", Offset = "0x1777204", VA = "0x1777204")]
		private void StoreDefaultState()
		{
		}

		[Token(Token = "0x6000783")]
		[Address(RVA = "0x1777128", Offset = "0x1777128", VA = "0x1777128")]
		private Transform GetTargetNamed(string tName, Transform[] array)
		{
			return null;
		}

		[Token(Token = "0x6000784")]
		[Address(RVA = "0x177761C", Offset = "0x177761C", VA = "0x177761C")]
		public GenericPoser()
		{
		}
	}
	[Token(Token = "0x200008E")]
	public class HandPoser : Poser
	{
		[Token(Token = "0x4000535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Transform[] children;

		[Token(Token = "0x4000536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform _poseRoot;

		[Token(Token = "0x4000537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform[] poseChildren;

		[Token(Token = "0x4000538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3[] defaultLocalPositions;

		[Token(Token = "0x4000539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Quaternion[] defaultLocalRotations;

		[Token(Token = "0x6000785")]
		[Address(RVA = "0x19D13DC", Offset = "0x19D13DC", VA = "0x19D13DC", Slot = "7")]
		public override void AutoMapping()
		{
		}

		[Token(Token = "0x6000786")]
		[Address(RVA = "0x19D1490", Offset = "0x19D1490", VA = "0x19D1490", Slot = "8")]
		protected override void InitiatePoser()
		{
		}

		[Token(Token = "0x6000787")]
		[Address(RVA = "0x19D1648", Offset = "0x19D1648", VA = "0x19D1648", Slot = "10")]
		protected override void FixPoserTransforms()
		{
		}

		[Token(Token = "0x6000788")]
		[Address(RVA = "0x19D1744", Offset = "0x19D1744", VA = "0x19D1744", Slot = "9")]
		protected override void UpdatePoser()
		{
		}

		[Token(Token = "0x6000789")]
		[Address(RVA = "0x19D14EC", Offset = "0x19D14EC", VA = "0x19D14EC")]
		protected void StoreDefaultState()
		{
		}

		[Token(Token = "0x600078A")]
		[Address(RVA = "0x19D1AF4", Offset = "0x19D1AF4", VA = "0x19D1AF4")]
		public HandPoser()
		{
		}
	}
	[Token(Token = "0x200008F")]
	public abstract class Poser : SolverManager
	{
		[Token(Token = "0x400053A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform poseRoot;

		[Token(Token = "0x400053B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA12D9C", Offset = "0xA12D9C")]
		public float weight;

		[Token(Token = "0x400053C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA12DB4", Offset = "0xA12DB4")]
		public float localRotationWeight;

		[Token(Token = "0x400053D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA12DCC", Offset = "0xA12DCC")]
		public float localPositionWeight;

		[Token(Token = "0x400053E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool initiated;

		[Token(Token = "0x600078B")]
		public abstract void AutoMapping();

		[Token(Token = "0x600078C")]
		[Address(RVA = "0x186A7F4", Offset = "0x186A7F4", VA = "0x186A7F4")]
		public void UpdateManual()
		{
		}

		[Token(Token = "0x600078D")]
		protected abstract void InitiatePoser();

		[Token(Token = "0x600078E")]
		protected abstract void UpdatePoser();

		[Token(Token = "0x600078F")]
		protected abstract void FixPoserTransforms();

		[Token(Token = "0x6000790")]
		[Address(RVA = "0x186A800", Offset = "0x186A800", VA = "0x186A800", Slot = "5")]
		protected override void UpdateSolver()
		{
		}

		[Token(Token = "0x6000791")]
		[Address(RVA = "0x186A854", Offset = "0x186A854", VA = "0x186A854", Slot = "4")]
		protected override void InitiateSolver()
		{
		}

		[Token(Token = "0x6000792")]
		[Address(RVA = "0x186A890", Offset = "0x186A890", VA = "0x186A890", Slot = "6")]
		protected override void FixTransforms()
		{
		}

		[Token(Token = "0x6000793")]
		[Address(RVA = "0x186A8A8", Offset = "0x186A8A8", VA = "0x186A8A8")]
		protected Poser()
		{
		}
	}
	[Token(Token = "0x2000090")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA067A4", Offset = "0xA067A4")]
	public class RagdollUtility : MonoBehaviour
	{
		[Token(Token = "0x200050A")]
		public class Rigidbone
		{
			[Token(Token = "0x4001AD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody r;

			[Token(Token = "0x4001AD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform t;

			[Token(Token = "0x4001AD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Collider collider;

			[Token(Token = "0x4001AD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Joint joint;

			[Token(Token = "0x4001AD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Rigidbody c;

			[Token(Token = "0x4001AD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool updateAnchor;

			[Token(Token = "0x4001ADA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public Vector3 deltaPosition;

			[Token(Token = "0x4001ADB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Quaternion deltaRotation;

			[Token(Token = "0x4001ADC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public float deltaTime;

			[Token(Token = "0x4001ADD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public Vector3 lastPosition;

			[Token(Token = "0x4001ADE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Quaternion lastRotation;

			[Token(Token = "0x6002745")]
			[Address(RVA = "0x186AE2C", Offset = "0x186AE2C", VA = "0x186AE2C")]
			public Rigidbone(Rigidbody r)
			{
			}

			[Token(Token = "0x6002746")]
			[Address(RVA = "0x186BA38", Offset = "0x186BA38", VA = "0x186BA38")]
			public void RecordVelocity()
			{
			}

			[Token(Token = "0x6002747")]
			[Address(RVA = "0x186B81C", Offset = "0x186B81C", VA = "0x186B81C")]
			public void WakeUp(float velocityWeight, float angularVelocityWeight)
			{
			}
		}

		[Token(Token = "0x200050B")]
		public class Child
		{
			[Token(Token = "0x4001ADF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform t;

			[Token(Token = "0x4001AE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 localPosition;

			[Token(Token = "0x4001AE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Quaternion localRotation;

			[Token(Token = "0x6002748")]
			[Address(RVA = "0x186AF88", Offset = "0x186AF88", VA = "0x186AF88")]
			public Child(Transform transform)
			{
			}

			[Token(Token = "0x6002749")]
			[Address(RVA = "0x186BBD4", Offset = "0x186BBD4", VA = "0x186BBD4")]
			public void FixTransform(float weight)
			{
			}

			[Token(Token = "0x600274A")]
			[Address(RVA = "0x186BB84", Offset = "0x186BB84", VA = "0x186BB84")]
			public void StoreLocalState()
			{
			}
		}

		[Token(Token = "0x200050C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D3C8", Offset = "0xA0D3C8")]
		private sealed class <DisableRagdollSmooth>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001AE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001AE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001AE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RagdollUtility <>4__this;

			[Token(Token = "0x170004A7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600274E")]
				[Address(RVA = "0x186C1B4", Offset = "0x186C1B4", VA = "0x186C1B4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004A8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002750")]
				[Address(RVA = "0x186C21C", Offset = "0x186C21C", VA = "0x186C21C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600274B")]
			[Address(RVA = "0x186AFE8", Offset = "0x186AFE8", VA = "0x186AFE8")]
			[DebuggerHidden]
			public <DisableRagdollSmooth>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x600274C")]
			[Address(RVA = "0x186BF6C", Offset = "0x186BF6C", VA = "0x186BF6C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600274D")]
			[Address(RVA = "0x186BF70", Offset = "0x186BF70", VA = "0x186BF70", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600274F")]
			[Address(RVA = "0x186C1BC", Offset = "0x186C1BC", VA = "0x186C1BC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400053F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA12DE4", Offset = "0xA12DE4")]
		public IK ik;

		[Token(Token = "0x4000540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA12E1C", Offset = "0xA12E1C")]
		public float ragdollToAnimationTime;

		[Token(Token = "0x4000541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA12E54", Offset = "0xA12E54")]
		public bool applyIkOnRagdoll;

		[Token(Token = "0x4000542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA12E8C", Offset = "0xA12E8C")]
		public float applyVelocity;

		[Token(Token = "0x4000543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA12EC4", Offset = "0xA12EC4")]
		public float applyAngularVelocity;

		[Token(Token = "0x4000544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Animator animator;

		[Token(Token = "0x4000545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Rigidbone[] rigidbones;

		[Token(Token = "0x4000546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Child[] children;

		[Token(Token = "0x4000547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool enableRagdollFlag;

		[Token(Token = "0x4000548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private AnimatorUpdateMode animatorUpdateMode;

		[Token(Token = "0x4000549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private IK[] allIKComponents;

		[Token(Token = "0x400054A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool[] fixTransforms;

		[Token(Token = "0x400054B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float ragdollWeight;

		[Token(Token = "0x400054C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float ragdollWeightV;

		[Token(Token = "0x400054D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool fixedFrame;

		[Token(Token = "0x400054E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool[] disabledIKComponents;

		[Token(Token = "0x17000097")]
		private bool isRagdoll
		{
			[Token(Token = "0x600079F")]
			[Address(RVA = "0x186A8F0", Offset = "0x186A8F0", VA = "0x186A8F0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000098")]
		private bool ikUsed
		{
			[Token(Token = "0x60007A1")]
			[Address(RVA = "0x186B3D4", Offset = "0x186B3D4", VA = "0x186B3D4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000794")]
		[Address(RVA = "0x186A8B8", Offset = "0x186A8B8", VA = "0x186A8B8")]
		public void EnableRagdoll()
		{
		}

		[Token(Token = "0x6000795")]
		[Address(RVA = "0x186A968", Offset = "0x186A968", VA = "0x186A968")]
		public void DisableRagdoll()
		{
		}

		[Token(Token = "0x6000796")]
		[Address(RVA = "0x186AA98", Offset = "0x186AA98", VA = "0x186AA98")]
		public void Start()
		{
		}

		[Token(Token = "0x6000797")]
		[Address(RVA = "0x186AA28", Offset = "0x186AA28", VA = "0x186AA28")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA2855C", Offset = "0xA2855C")]
		private IEnumerator DisableRagdollSmooth()
		{
			return null;
		}

		[Token(Token = "0x6000798")]
		[Address(RVA = "0x186B014", Offset = "0x186B014", VA = "0x186B014")]
		private void Update()
		{
		}

		[Token(Token = "0x6000799")]
		[Address(RVA = "0x186B260", Offset = "0x186B260", VA = "0x186B260")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600079A")]
		[Address(RVA = "0x186B318", Offset = "0x186B318", VA = "0x186B318")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600079B")]
		[Address(RVA = "0x186B558", Offset = "0x186B558", VA = "0x186B558")]
		private void AfterLastIK()
		{
		}

		[Token(Token = "0x600079C")]
		[Address(RVA = "0x186B398", Offset = "0x186B398", VA = "0x186B398")]
		private void AfterAnimation()
		{
		}

		[Token(Token = "0x600079D")]
		[Address(RVA = "0x186B514", Offset = "0x186B514", VA = "0x186B514")]
		private void OnFinalPose()
		{
		}

		[Token(Token = "0x600079E")]
		[Address(RVA = "0x186B5F4", Offset = "0x186B5F4", VA = "0x186B5F4")]
		private void RagdollEnabler()
		{
		}

		[Token(Token = "0x60007A0")]
		[Address(RVA = "0x186B58C", Offset = "0x186B58C", VA = "0x186B58C")]
		private void RecordVelocities()
		{
		}

		[Token(Token = "0x60007A2")]
		[Address(RVA = "0x186A9C0", Offset = "0x186A9C0", VA = "0x186A9C0")]
		private void StoreLocalState()
		{
		}

		[Token(Token = "0x60007A3")]
		[Address(RVA = "0x186B2A0", Offset = "0x186B2A0", VA = "0x186B2A0")]
		private void FixTransforms(float weight)
		{
		}

		[Token(Token = "0x60007A4")]
		[Address(RVA = "0x186BD9C", Offset = "0x186BD9C", VA = "0x186BD9C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60007A5")]
		[Address(RVA = "0x186BEA0", Offset = "0x186BEA0", VA = "0x186BEA0")]
		public RagdollUtility()
		{
		}
	}
	[Token(Token = "0x2000091")]
	public abstract class RotationLimit : MonoBehaviour
	{
		[Token(Token = "0x400054F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 axis;

		[Token(Token = "0x4000550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[HideInInspector]
		public Quaternion defaultLocalRotation;

		[Token(Token = "0x4000551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA12F0C", Offset = "0xA12F0C")]
		private bool <defaultLocalRotationOverride>k__BackingField;

		[Token(Token = "0x4000552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		private bool initiated;

		[Token(Token = "0x4000553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
		private bool applicationQuit;

		[Token(Token = "0x4000554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x37")]
		private bool defaultLocalRotationSet;

		[Token(Token = "0x17000099")]
		public Vector3 secondaryAxis
		{
			[Token(Token = "0x60007AB")]
			[Address(RVA = "0x186DAA8", Offset = "0x186DAA8", VA = "0x186DAA8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700009A")]
		public Vector3 crossAxis
		{
			[Token(Token = "0x60007AC")]
			[Address(RVA = "0x186DAE4", Offset = "0x186DAE4", VA = "0x186DAE4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700009B")]
		public bool defaultLocalRotationOverride
		{
			[Token(Token = "0x60007AD")]
			[Address(RVA = "0x186DBB4", Offset = "0x186DBB4", VA = "0x186DBB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA285C0", Offset = "0xA285C0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60007AE")]
			[Address(RVA = "0x186DBBC", Offset = "0x186DBBC", VA = "0x186DBBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA285D0", Offset = "0xA285D0")]
			private set
			{
			}
		}

		[Token(Token = "0x60007A6")]
		[Address(RVA = "0x186D70C", Offset = "0x186D70C", VA = "0x186D70C")]
		public void SetDefaultLocalRotation()
		{
		}

		[Token(Token = "0x60007A7")]
		[Address(RVA = "0x186D754", Offset = "0x186D754", VA = "0x186D754")]
		public void SetDefaultLocalRotation(Quaternion localRotation)
		{
		}

		[Token(Token = "0x60007A8")]
		[Address(RVA = "0x186D76C", Offset = "0x186D76C", VA = "0x186D76C")]
		public Quaternion GetLimitedLocalRotation(Quaternion localRotation, out bool changed)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60007A9")]
		[Address(RVA = "0x186DA00", Offset = "0x186DA00", VA = "0x186DA00")]
		public bool Apply()
		{
			return default(bool);
		}

		[Token(Token = "0x60007AA")]
		[Address(RVA = "0x186DA70", Offset = "0x186DA70", VA = "0x186DA70")]
		public void Disable()
		{
		}

		[Token(Token = "0x60007AF")]
		protected abstract Quaternion LimitRotation(Quaternion rotation);

		[Token(Token = "0x60007B0")]
		[Address(RVA = "0x186D910", Offset = "0x186D910", VA = "0x186D910")]
		private void Awake()
		{
		}

		[Token(Token = "0x60007B1")]
		[Address(RVA = "0x186DBC8", Offset = "0x186DBC8", VA = "0x186DBC8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60007B2")]
		[Address(RVA = "0x186DBCC", Offset = "0x186DBCC", VA = "0x186DBCC")]
		public void LogWarning(string message)
		{
		}

		[Token(Token = "0x60007B3")]
		[Address(RVA = "0x186DC00", Offset = "0x186DC00", VA = "0x186DC00")]
		protected static Quaternion Limit1DOF(Quaternion rotation, Vector3 axis)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60007B4")]
		[Address(RVA = "0x186DCE4", Offset = "0x186DCE4", VA = "0x186DCE4")]
		protected static Quaternion LimitTwist(Quaternion rotation, Vector3 axis, Vector3 orthoAxis, float twistLimit)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60007B5")]
		[Address(RVA = "0x186DF60", Offset = "0x186DF60", VA = "0x186DF60")]
		protected static float GetOrthogonalAngle(Vector3 v1, Vector3 v2, Vector3 normal)
		{
			return default(float);
		}

		[Token(Token = "0x60007B6")]
		[Address(RVA = "0x186E01C", Offset = "0x186E01C", VA = "0x186E01C")]
		protected RotationLimit()
		{
		}
	}
	[Token(Token = "0x2000092")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xA06808", Offset = "0xA06808")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA06808", Offset = "0xA06808")]
	public class RotationLimitAngle : RotationLimit
	{
		[Token(Token = "0x4000555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA12F1C", Offset = "0xA12F1C")]
		public float limit;

		[Token(Token = "0x4000556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA12F38", Offset = "0xA12F38")]
		public float twistLimit;

		[Token(Token = "0x60007B7")]
		[Address(RVA = "0x186E094", Offset = "0x186E094", VA = "0x186E094")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA285E0", Offset = "0xA285E0")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x60007B8")]
		[Address(RVA = "0x186E0E0", Offset = "0x186E0E0", VA = "0x186E0E0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA28618", Offset = "0xA28618")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x60007B9")]
		[Address(RVA = "0x186E12C", Offset = "0x186E12C", VA = "0x186E12C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA28650", Offset = "0xA28650")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x60007BA")]
		[Address(RVA = "0x186E178", Offset = "0x186E178", VA = "0x186E178")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA28688", Offset = "0xA28688")]
		private void ASThread()
		{
		}

		[Token(Token = "0x60007BB")]
		[Address(RVA = "0x186E1C4", Offset = "0x186E1C4", VA = "0x186E1C4", Slot = "4")]
		protected override Quaternion LimitRotation(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60007BC")]
		[Address(RVA = "0x186E27C", Offset = "0x186E27C", VA = "0x186E27C")]
		private Quaternion LimitSwing(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60007BD")]
		[Address(RVA = "0x186E4C4", Offset = "0x186E4C4", VA = "0x186E4C4")]
		public RotationLimitAngle()
		{
		}
	}
	[Token(Token = "0x2000093")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xA06868", Offset = "0xA06868")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA06868", Offset = "0xA06868")]
	public class RotationLimitHinge : RotationLimit
	{
		[Token(Token = "0x4000557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool useLimits;

		[Token(Token = "0x4000558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float min;

		[Token(Token = "0x4000559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float max;

		[Token(Token = "0x400055A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[HideInInspector]
		public float zeroAxisDisplayOffset;

		[Token(Token = "0x400055B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Quaternion lastRotation;

		[Token(Token = "0x400055C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float lastAngle;

		[Token(Token = "0x60007BE")]
		[Address(RVA = "0x186E4D4", Offset = "0x186E4D4", VA = "0x186E4D4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA286C0", Offset = "0xA286C0")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x60007BF")]
		[Address(RVA = "0x186E520", Offset = "0x186E520", VA = "0x186E520")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA286F8", Offset = "0xA286F8")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x60007C0")]
		[Address(RVA = "0x186E56C", Offset = "0x186E56C", VA = "0x186E56C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA28730", Offset = "0xA28730")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x60007C1")]
		[Address(RVA = "0x186E5B8", Offset = "0x186E5B8", VA = "0x186E5B8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA28768", Offset = "0xA28768")]
		private void ASThread()
		{
		}

		[Token(Token = "0x60007C2")]
		[Address(RVA = "0x186E604", Offset = "0x186E604", VA = "0x186E604", Slot = "4")]
		protected override Quaternion LimitRotation(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60007C3")]
		[Address(RVA = "0x186E62C", Offset = "0x186E62C", VA = "0x186E62C")]
		private Quaternion LimitHinge(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60007C4")]
		[Address(RVA = "0x186E92C", Offset = "0x186E92C", VA = "0x186E92C")]
		public RotationLimitHinge()
		{
		}
	}
	[Token(Token = "0x2000094")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xA068C8", Offset = "0xA068C8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA068C8", Offset = "0xA068C8")]
	public class RotationLimitPolygonal : RotationLimit
	{
		[Serializable]
		[Token(Token = "0x200050D")]
		public class ReachCone
		{
			[Token(Token = "0x4001AE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3[] tetrahedron;

			[Token(Token = "0x4001AE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float volume;

			[Token(Token = "0x4001AE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 S;

			[Token(Token = "0x4001AE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 B;

			[Token(Token = "0x170004A9")]
			public Vector3 o
			{
				[Token(Token = "0x6002751")]
				[Address(RVA = "0x18708D4", Offset = "0x18708D4", VA = "0x18708D4")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x170004AA")]
			public Vector3 a
			{
				[Token(Token = "0x6002752")]
				[Address(RVA = "0x187090C", Offset = "0x187090C", VA = "0x187090C")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x170004AB")]
			public Vector3 b
			{
				[Token(Token = "0x6002753")]
				[Address(RVA = "0x1870948", Offset = "0x1870948", VA = "0x1870948")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x170004AC")]
			public Vector3 c
			{
				[Token(Token = "0x6002754")]
				[Address(RVA = "0x1870984", Offset = "0x1870984", VA = "0x1870984")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x170004AD")]
			public bool isValid
			{
				[Token(Token = "0x6002756")]
				[Address(RVA = "0x186FA38", Offset = "0x186FA38", VA = "0x186FA38")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6002755")]
			[Address(RVA = "0x1870084", Offset = "0x1870084", VA = "0x1870084")]
			public ReachCone(Vector3 _o, Vector3 _a, Vector3 _b, Vector3 _c)
			{
			}

			[Token(Token = "0x6002757")]
			[Address(RVA = "0x18701E4", Offset = "0x18701E4", VA = "0x18701E4")]
			public void Calculate()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200050E")]
		public class LimitPoint
		{
			[Token(Token = "0x4001AE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 point;

			[Token(Token = "0x4001AEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float tangentWeight;

			[Token(Token = "0x6002758")]
			[Address(RVA = "0x186FA48", Offset = "0x186FA48", VA = "0x186FA48")]
			public LimitPoint()
			{
			}
		}

		[Token(Token = "0x400055D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA12F64", Offset = "0xA12F64")]
		public float twistLimit;

		[Token(Token = "0x400055E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA12F80", Offset = "0xA12F80")]
		public int smoothIterations;

		[Token(Token = "0x400055F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[HideInInspector]
		public LimitPoint[] points;

		[Token(Token = "0x4000560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[HideInInspector]
		public Vector3[] P;

		[Token(Token = "0x4000561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[HideInInspector]
		public ReachCone[] reachCones;

		[Token(Token = "0x60007C5")]
		[Address(RVA = "0x186E9B4", Offset = "0x186E9B4", VA = "0x186E9B4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA287A0", Offset = "0xA287A0")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x60007C6")]
		[Address(RVA = "0x186EA00", Offset = "0x186EA00", VA = "0x186EA00")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA287D8", Offset = "0xA287D8")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x60007C7")]
		[Address(RVA = "0x186EA4C", Offset = "0x186EA4C", VA = "0x186EA4C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA28810", Offset = "0xA28810")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x60007C8")]
		[Address(RVA = "0x186EA98", Offset = "0x186EA98", VA = "0x186EA98")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA28848", Offset = "0xA28848")]
		private void ASThread()
		{
		}

		[Token(Token = "0x60007C9")]
		[Address(RVA = "0x186EAE4", Offset = "0x186EAE4", VA = "0x186EAE4")]
		public void SetLimitPoints(LimitPoint[] points)
		{
		}

		[Token(Token = "0x60007CA")]
		[Address(RVA = "0x186EFCC", Offset = "0x186EFCC", VA = "0x186EFCC", Slot = "4")]
		protected override Quaternion LimitRotation(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60007CB")]
		[Address(RVA = "0x186F0C4", Offset = "0x186F0C4", VA = "0x186F0C4")]
		private void Start()
		{
		}

		[Token(Token = "0x60007CC")]
		[Address(RVA = "0x186F684", Offset = "0x186F684", VA = "0x186F684")]
		public void ResetToDefault()
		{
		}

		[Token(Token = "0x60007CD")]
		[Address(RVA = "0x186EB84", Offset = "0x186EB84", VA = "0x186EB84")]
		public void BuildReachCones()
		{
		}

		[Token(Token = "0x60007CE")]
		[Address(RVA = "0x186FACC", Offset = "0x186FACC", VA = "0x186FACC")]
		private Vector3[] SmoothPoints()
		{
			return null;
		}

		[Token(Token = "0x60007CF")]
		[Address(RVA = "0x18703A4", Offset = "0x18703A4", VA = "0x18703A4")]
		private float GetScalar(int k)
		{
			return default(float);
		}

		[Token(Token = "0x60007D0")]
		[Address(RVA = "0x18703E8", Offset = "0x18703E8", VA = "0x18703E8")]
		private Vector3 PointToTangentPlane(Vector3 p, float r)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60007D1")]
		[Address(RVA = "0x1870530", Offset = "0x1870530", VA = "0x1870530")]
		private Vector3 TangentPointToSphere(Vector3 q, float r)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60007D2")]
		[Address(RVA = "0x186F348", Offset = "0x186F348", VA = "0x186F348")]
		private Quaternion LimitSwing(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60007D3")]
		[Address(RVA = "0x18706C0", Offset = "0x18706C0", VA = "0x18706C0")]
		private int GetReachCone(Vector3 L)
		{
			return default(int);
		}

		[Token(Token = "0x60007D4")]
		[Address(RVA = "0x1870870", Offset = "0x1870870", VA = "0x1870870")]
		public RotationLimitPolygonal()
		{
		}
	}
	[Token(Token = "0x2000095")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xA06928", Offset = "0xA06928")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA06928", Offset = "0xA06928")]
	public class RotationLimitSpline : RotationLimit
	{
		[Token(Token = "0x4000562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA13040", Offset = "0xA13040")]
		public float twistLimit;

		[Token(Token = "0x4000563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[HideInInspector]
		public AnimationCurve spline;

		[Token(Token = "0x60007D5")]
		[Address(RVA = "0x18709C0", Offset = "0x18709C0", VA = "0x18709C0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA28880", Offset = "0xA28880")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x60007D6")]
		[Address(RVA = "0x1870A0C", Offset = "0x1870A0C", VA = "0x1870A0C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA288B8", Offset = "0xA288B8")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x60007D7")]
		[Address(RVA = "0x1870A58", Offset = "0x1870A58", VA = "0x1870A58")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA288F0", Offset = "0xA288F0")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x60007D8")]
		[Address(RVA = "0x1870AA4", Offset = "0x1870AA4", VA = "0x1870AA4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA28928", Offset = "0xA28928")]
		private void ASThread()
		{
		}

		[Token(Token = "0x60007D9")]
		[Address(RVA = "0x1870AF0", Offset = "0x1870AF0", VA = "0x1870AF0")]
		public void SetSpline(Keyframe[] keyframes)
		{
		}

		[Token(Token = "0x60007DA")]
		[Address(RVA = "0x1870B0C", Offset = "0x1870B0C", VA = "0x1870B0C", Slot = "4")]
		protected override Quaternion LimitRotation(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60007DB")]
		[Address(RVA = "0x1870BC4", Offset = "0x1870BC4", VA = "0x1870BC4")]
		public Quaternion LimitSwing(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60007DC")]
		[Address(RVA = "0x1870EF0", Offset = "0x1870EF0", VA = "0x1870EF0")]
		public RotationLimitSpline()
		{
		}
	}
	[Token(Token = "0x2000096")]
	public class AimController : MonoBehaviour
	{
		[Token(Token = "0x200050F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D3D8", Offset = "0xA0D3D8")]
		private sealed class <TurnToTarget>d__33 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001AEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001AEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001AED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AimController <>4__this;

			[Token(Token = "0x170004AE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600275C")]
				[Address(RVA = "0x176ABB4", Offset = "0x176ABB4", VA = "0x176ABB4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004AF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600275E")]
				[Address(RVA = "0x176AC1C", Offset = "0x176AC1C", VA = "0x176AC1C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002759")]
			[Address(RVA = "0x176A990", Offset = "0x176A990", VA = "0x176A990")]
			[DebuggerHidden]
			public <TurnToTarget>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x600275A")]
			[Address(RVA = "0x176AA90", Offset = "0x176AA90", VA = "0x176AA90", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600275B")]
			[Address(RVA = "0x176AA94", Offset = "0x176AA94", VA = "0x176AA94", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600275D")]
			[Address(RVA = "0x176ABBC", Offset = "0x176ABBC", VA = "0x176ABBC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA13094", Offset = "0xA13094")]
		public AimIK ik;

		[Token(Token = "0x4000565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA130CC", Offset = "0xA130CC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA130CC", Offset = "0xA130CC")]
		public float weight;

		[Token(Token = "0x4000566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA13120", Offset = "0xA13120")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA13120", Offset = "0xA13120")]
		public Transform target;

		[Token(Token = "0x4000567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA13180", Offset = "0xA13180")]
		public float targetSwitchSmoothTime;

		[Token(Token = "0x4000568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA131B8", Offset = "0xA131B8")]
		public float weightSmoothTime;

		[Token(Token = "0x4000569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA131F0", Offset = "0xA131F0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA131F0", Offset = "0xA131F0")]
		public bool smoothTurnTowardsTarget;

		[Token(Token = "0x400056A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA13250", Offset = "0xA13250")]
		public float maxRadiansDelta;

		[Token(Token = "0x400056B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA13288", Offset = "0xA13288")]
		public float maxMagnitudeDelta;

		[Token(Token = "0x400056C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA132C0", Offset = "0xA132C0")]
		public float slerpSpeed;

		[Token(Token = "0x400056D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA132F8", Offset = "0xA132F8")]
		public Vector3 pivotOffsetFromRoot;

		[Token(Token = "0x400056E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA13330", Offset = "0xA13330")]
		public float minDistance;

		[Token(Token = "0x400056F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA13368", Offset = "0xA13368")]
		public Vector3 offset;

		[Token(Token = "0x4000570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA133A0", Offset = "0xA133A0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA133A0", Offset = "0xA133A0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA133A0", Offset = "0xA133A0")]
		public float maxRootAngle;

		[Token(Token = "0x4000571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1341C", Offset = "0xA1341C")]
		public bool turnToTarget;

		[Token(Token = "0x4000572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA13454", Offset = "0xA13454")]
		public float turnToTargetTime;

		[Token(Token = "0x4000573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA1348C", Offset = "0xA1348C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1348C", Offset = "0xA1348C")]
		public bool useAnimatedAimDirection;

		[Token(Token = "0x4000574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA134EC", Offset = "0xA134EC")]
		public Vector3 animatedAimDirection;

		[Token(Token = "0x4000575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Transform lastTarget;

		[Token(Token = "0x4000576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float switchWeight;

		[Token(Token = "0x4000577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float switchWeightV;

		[Token(Token = "0x4000578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float weightV;

		[Token(Token = "0x4000579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Vector3 lastPosition;

		[Token(Token = "0x400057A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Vector3 dir;

		[Token(Token = "0x400057B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private bool lastSmoothTowardsTarget;

		[Token(Token = "0x400057C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAD")]
		private bool turningToTarget;

		[Token(Token = "0x400057D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float turnToTargetMlp;

		[Token(Token = "0x400057E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float turnToTargetMlpV;

		[Token(Token = "0x1700009C")]
		private Vector3 pivot
		{
			[Token(Token = "0x60007DF")]
			[Address(RVA = "0x1769B90", Offset = "0x1769B90", VA = "0x1769B90")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x60007DD")]
		[Address(RVA = "0x1769A94", Offset = "0x1769A94", VA = "0x1769A94")]
		private void Start()
		{
		}

		[Token(Token = "0x60007DE")]
		[Address(RVA = "0x1769CDC", Offset = "0x1769CDC", VA = "0x1769CDC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60007E0")]
		[Address(RVA = "0x176A414", Offset = "0x176A414", VA = "0x176A414")]
		private void ApplyMinDistance()
		{
		}

		[Token(Token = "0x60007E1")]
		[Address(RVA = "0x176A5B0", Offset = "0x176A5B0", VA = "0x176A5B0")]
		private void RootRotation()
		{
		}

		[Token(Token = "0x60007E2")]
		[Address(RVA = "0x176A920", Offset = "0x176A920", VA = "0x176A920")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA28960", Offset = "0xA28960")]
		private IEnumerator TurnToTarget()
		{
			return null;
		}

		[Token(Token = "0x60007E3")]
		[Address(RVA = "0x176A9BC", Offset = "0x176A9BC", VA = "0x176A9BC")]
		public AimController()
		{
		}
	}
	[Token(Token = "0x2000097")]
	public class AimPoser : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000510")]
		public class Pose
		{
			[Token(Token = "0x4001AEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool visualize;

			[Token(Token = "0x4001AEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string name;

			[Token(Token = "0x4001AF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 direction;

			[Token(Token = "0x4001AF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float yaw;

			[Token(Token = "0x4001AF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float pitch;

			[Token(Token = "0x4001AF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float angleBuffer;

			[Token(Token = "0x600275F")]
			[Address(RVA = "0x176AEEC", Offset = "0x176AEEC", VA = "0x176AEEC")]
			public bool IsInDirection(Vector3 d)
			{
				return default(bool);
			}

			[Token(Token = "0x6002760")]
			[Address(RVA = "0x176B258", Offset = "0x176B258", VA = "0x176B258")]
			public void SetAngleBuffer(float value)
			{
			}

			[Token(Token = "0x6002761")]
			[Address(RVA = "0x176B260", Offset = "0x176B260", VA = "0x176B260")]
			public Pose()
			{
			}
		}

		[Token(Token = "0x400057F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float angleBuffer;

		[Token(Token = "0x4000580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pose[] poses;

		[Token(Token = "0x60007E4")]
		[Address(RVA = "0x176AE10", Offset = "0x176AE10", VA = "0x176AE10")]
		public Pose GetPose(Vector3 localDirection)
		{
			return null;
		}

		[Token(Token = "0x60007E5")]
		[Address(RVA = "0x176B184", Offset = "0x176B184", VA = "0x176B184")]
		public void SetPoseActive(Pose pose)
		{
		}

		[Token(Token = "0x60007E6")]
		[Address(RVA = "0x176B1F0", Offset = "0x176B1F0", VA = "0x176B1F0")]
		public AimPoser()
		{
		}
	}
	[Token(Token = "0x2000098")]
	public class Amplifier : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x2000511")]
		public class Body
		{
			[Serializable]
			[Token(Token = "0x20006C5")]
			public class EffectorLink
			{
				[Token(Token = "0x4002116")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA25964", Offset = "0xA25964")]
				public FullBodyBipedEffector effector;

				[Token(Token = "0x4002117")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA2599C", Offset = "0xA2599C")]
				public float weight;

				[Token(Token = "0x6002C89")]
				[Address(RVA = "0x176B850", Offset = "0x176B850", VA = "0x176B850")]
				public EffectorLink()
				{
				}
			}

			[Token(Token = "0x4001AF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA22F08", Offset = "0xA22F08")]
			public Transform transform;

			[Token(Token = "0x4001AF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA22F40", Offset = "0xA22F40")]
			public Transform relativeTo;

			[Token(Token = "0x4001AF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA22F78", Offset = "0xA22F78")]
			public EffectorLink[] effectorLinks;

			[Token(Token = "0x4001AF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA22FB0", Offset = "0xA22FB0")]
			public float verticalWeight;

			[Token(Token = "0x4001AF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA22FE8", Offset = "0xA22FE8")]
			public float horizontalWeight;

			[Token(Token = "0x4001AF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA23020", Offset = "0xA23020")]
			public float speed;

			[Token(Token = "0x4001AFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 lastRelativePos;

			[Token(Token = "0x4001AFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Vector3 smoothDelta;

			[Token(Token = "0x4001AFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private bool firstUpdate;

			[Token(Token = "0x6002762")]
			[Address(RVA = "0x176B3BC", Offset = "0x176B3BC", VA = "0x176B3BC")]
			public void Update(IKSolverFullBodyBiped solver, float w, float deltaTime)
			{
			}

			[Token(Token = "0x6002763")]
			[Address(RVA = "0x176B828", Offset = "0x176B828", VA = "0x176B828")]
			private static Vector3 Multiply(Vector3 v1, Vector3 v2)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002764")]
			[Address(RVA = "0x176B838", Offset = "0x176B838", VA = "0x176B838")]
			public Body()
			{
			}
		}

		[Token(Token = "0x4000581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA13524", Offset = "0xA13524")]
		public Body[] bodies;

		[Token(Token = "0x60007E7")]
		[Address(RVA = "0x176B27C", Offset = "0x176B27C", VA = "0x176B27C", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x60007E8")]
		[Address(RVA = "0x176B820", Offset = "0x176B820", VA = "0x176B820")]
		public Amplifier()
		{
		}
	}
	[Token(Token = "0x2000099")]
	public class BodyTilt : OffsetModifier
	{
		[Token(Token = "0x4000582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1355C", Offset = "0xA1355C")]
		public float tiltSpeed;

		[Token(Token = "0x4000583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA13594", Offset = "0xA13594")]
		public float tiltSensitivity;

		[Token(Token = "0x4000584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA135CC", Offset = "0xA135CC")]
		public OffsetPose poseLeft;

		[Token(Token = "0x4000585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA13604", Offset = "0xA13604")]
		public OffsetPose poseRight;

		[Token(Token = "0x4000586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float tiltAngle;

		[Token(Token = "0x4000587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 lastForward;

		[Token(Token = "0x60007E9")]
		[Address(RVA = "0x176CD64", Offset = "0x176CD64", VA = "0x176CD64", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60007EA")]
		[Address(RVA = "0x176CDAC", Offset = "0x176CDAC", VA = "0x176CDAC", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x60007EB")]
		[Address(RVA = "0x176CFDC", Offset = "0x176CFDC", VA = "0x176CFDC")]
		public BodyTilt()
		{
		}
	}
	[Token(Token = "0x200009A")]
	[ExecuteInEditMode]
	public class EditorIK : MonoBehaviour
	{
		[Token(Token = "0x4000588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private IK ik;

		[Token(Token = "0x60007EC")]
		[Address(RVA = "0x176DA44", Offset = "0x176DA44", VA = "0x176DA44")]
		private void Start()
		{
		}

		[Token(Token = "0x60007ED")]
		[Address(RVA = "0x176DAD8", Offset = "0x176DAD8", VA = "0x176DAD8")]
		private void Update()
		{
		}

		[Token(Token = "0x60007EE")]
		[Address(RVA = "0x176DBA8", Offset = "0x176DBA8", VA = "0x176DBA8")]
		public EditorIK()
		{
		}
	}
	[Token(Token = "0x200009B")]
	public class HitReaction : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x2000512")]
		public abstract class HitPoint
		{
			[Token(Token = "0x4001AFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA23058", Offset = "0xA23058")]
			public string name;

			[Token(Token = "0x4001AFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA23090", Offset = "0xA23090")]
			public Collider collider;

			[Token(Token = "0x4001AFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA230C8", Offset = "0xA230C8")]
			[SerializeField]
			private float crossFadeTime;

			[Token(Token = "0x4001B00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA23114", Offset = "0xA23114")]
			private float <crossFader>k__BackingField;

			[Token(Token = "0x4001B01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA23124", Offset = "0xA23124")]
			private float <timer>k__BackingField;

			[Token(Token = "0x4001B02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA23134", Offset = "0xA23134")]
			private Vector3 <force>k__BackingField;

			[Token(Token = "0x4001B03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA23144", Offset = "0xA23144")]
			private Vector3 <point>k__BackingField;

			[Token(Token = "0x4001B04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float length;

			[Token(Token = "0x4001B05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float crossFadeSpeed;

			[Token(Token = "0x4001B06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float lastTime;

			[Token(Token = "0x170004B0")]
			public bool inProgress
			{
				[Token(Token = "0x6002765")]
				[Address(RVA = "0x19D1BB8", Offset = "0x19D1BB8", VA = "0x19D1BB8")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170004B1")]
			protected float crossFader
			{
				[Token(Token = "0x6002766")]
				[Address(RVA = "0x19D2160", Offset = "0x19D2160", VA = "0x19D2160")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2F330", Offset = "0xA2F330")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6002767")]
				[Address(RVA = "0x19D2168", Offset = "0x19D2168", VA = "0x19D2168")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2F340", Offset = "0xA2F340")]
				private set
				{
				}
			}

			[Token(Token = "0x170004B2")]
			protected float timer
			{
				[Token(Token = "0x6002768")]
				[Address(RVA = "0x19D2170", Offset = "0x19D2170", VA = "0x19D2170")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2F350", Offset = "0xA2F350")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6002769")]
				[Address(RVA = "0x19D2178", Offset = "0x19D2178", VA = "0x19D2178")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2F360", Offset = "0xA2F360")]
				private set
				{
				}
			}

			[Token(Token = "0x170004B3")]
			protected Vector3 force
			{
				[Token(Token = "0x600276A")]
				[Address(RVA = "0x19D2180", Offset = "0x19D2180", VA = "0x19D2180")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2F370", Offset = "0xA2F370")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x600276B")]
				[Address(RVA = "0x19D218C", Offset = "0x19D218C", VA = "0x19D218C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2F380", Offset = "0xA2F380")]
				private set
				{
				}
			}

			[Token(Token = "0x170004B4")]
			protected Vector3 point
			{
				[Token(Token = "0x600276C")]
				[Address(RVA = "0x19D2198", Offset = "0x19D2198", VA = "0x19D2198")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2F390", Offset = "0xA2F390")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x600276D")]
				[Address(RVA = "0x19D21A4", Offset = "0x19D21A4", VA = "0x19D21A4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2F3A0", Offset = "0xA2F3A0")]
				private set
				{
				}
			}

			[Token(Token = "0x600276E")]
			[Address(RVA = "0x19D202C", Offset = "0x19D202C", VA = "0x19D202C")]
			public void Hit(Vector3 force, Vector3 point)
			{
			}

			[Token(Token = "0x600276F")]
			[Address(RVA = "0x19D1CA0", Offset = "0x19D1CA0", VA = "0x19D1CA0")]
			public void Apply(IKSolverFullBodyBiped solver, float weight)
			{
			}

			[Token(Token = "0x6002770")]
			protected abstract float GetLength();

			[Token(Token = "0x6002771")]
			protected abstract void CrossFadeStart();

			[Token(Token = "0x6002772")]
			protected abstract void OnApply(IKSolverFullBodyBiped solver, float weight);

			[Token(Token = "0x6002773")]
			[Address(RVA = "0x19D21B0", Offset = "0x19D21B0", VA = "0x19D21B0")]
			protected HitPoint()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000513")]
		public class HitPointEffector : HitPoint
		{
			[Serializable]
			[Token(Token = "0x20006C6")]
			public class EffectorLink
			{
				[Token(Token = "0x4002118")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA259D4", Offset = "0xA259D4")]
				public FullBodyBipedEffector effector;

				[Token(Token = "0x4002119")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA25A0C", Offset = "0xA25A0C")]
				public float weight;

				[Token(Token = "0x400211A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private Vector3 lastValue;

				[Token(Token = "0x400211B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
				private Vector3 current;

				[Token(Token = "0x6002C8A")]
				[Address(RVA = "0x19D2B1C", Offset = "0x19D2B1C", VA = "0x19D2B1C")]
				public void Apply(IKSolverFullBodyBiped solver, Vector3 offset, float crossFader)
				{
				}

				[Token(Token = "0x6002C8B")]
				[Address(RVA = "0x19D2910", Offset = "0x19D2910", VA = "0x19D2910")]
				public void CrossFadeStart()
				{
				}

				[Token(Token = "0x6002C8C")]
				[Address(RVA = "0x19D2C58", Offset = "0x19D2C58", VA = "0x19D2C58")]
				public EffectorLink()
				{
				}
			}

			[Token(Token = "0x4001B07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA23154", Offset = "0xA23154")]
			public AnimationCurve offsetInForceDirection;

			[Token(Token = "0x4001B08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA2318C", Offset = "0xA2318C")]
			public AnimationCurve offsetInUpDirection;

			[Token(Token = "0x4001B09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA231C4", Offset = "0xA231C4")]
			public EffectorLink[] effectorLinks;

			[Token(Token = "0x6002774")]
			[Address(RVA = "0x19D272C", Offset = "0x19D272C", VA = "0x19D272C", Slot = "4")]
			protected override float GetLength()
			{
				return default(float);
			}

			[Token(Token = "0x6002775")]
			[Address(RVA = "0x19D28A4", Offset = "0x19D28A4", VA = "0x19D28A4", Slot = "5")]
			protected override void CrossFadeStart()
			{
			}

			[Token(Token = "0x6002776")]
			[Address(RVA = "0x19D2924", Offset = "0x19D2924", VA = "0x19D2924", Slot = "6")]
			protected override void OnApply(IKSolverFullBodyBiped solver, float weight)
			{
			}

			[Token(Token = "0x6002777")]
			[Address(RVA = "0x19D2C44", Offset = "0x19D2C44", VA = "0x19D2C44")]
			public HitPointEffector()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000514")]
		public class HitPointBone : HitPoint
		{
			[Serializable]
			[Token(Token = "0x20006C7")]
			public class BoneLink
			{
				[Token(Token = "0x400211C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA25A44", Offset = "0xA25A44")]
				public Transform bone;

				[Token(Token = "0x400211D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA25A7C", Offset = "0xA25A7C")]
				[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA25A7C", Offset = "0xA25A7C")]
				public float weight;

				[Token(Token = "0x400211E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
				private Quaternion lastValue;

				[Token(Token = "0x400211F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
				private Quaternion current;

				[Token(Token = "0x6002C8D")]
				[Address(RVA = "0x19D2534", Offset = "0x19D2534", VA = "0x19D2534")]
				public void Apply(IKSolverFullBodyBiped solver, Quaternion offset, float crossFader)
				{
				}

				[Token(Token = "0x6002C8E")]
				[Address(RVA = "0x19D22CC", Offset = "0x19D22CC", VA = "0x19D22CC")]
				public void CrossFadeStart()
				{
				}

				[Token(Token = "0x6002C8F")]
				[Address(RVA = "0x19D26A4", Offset = "0x19D26A4", VA = "0x19D26A4")]
				public BoneLink()
				{
				}
			}

			[Token(Token = "0x4001B0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA231FC", Offset = "0xA231FC")]
			public AnimationCurve aroundCenterOfMass;

			[Token(Token = "0x4001B0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA23234", Offset = "0xA23234")]
			public BoneLink[] boneLinks;

			[Token(Token = "0x4001B0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Rigidbody rigidbody;

			[Token(Token = "0x6002778")]
			[Address(RVA = "0x19D21C4", Offset = "0x19D21C4", VA = "0x19D21C4", Slot = "4")]
			protected override float GetLength()
			{
				return default(float);
			}

			[Token(Token = "0x6002779")]
			[Address(RVA = "0x19D2268", Offset = "0x19D2268", VA = "0x19D2268", Slot = "5")]
			protected override void CrossFadeStart()
			{
			}

			[Token(Token = "0x600277A")]
			[Address(RVA = "0x19D22D8", Offset = "0x19D22D8", VA = "0x19D22D8", Slot = "6")]
			protected override void OnApply(IKSolverFullBodyBiped solver, float weight)
			{
			}

			[Token(Token = "0x600277B")]
			[Address(RVA = "0x19D2690", Offset = "0x19D2690", VA = "0x19D2690")]
			public HitPointBone()
			{
			}
		}

		[Token(Token = "0x4000589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1363C", Offset = "0xA1363C")]
		public HitPointEffector[] effectorHitPoints;

		[Token(Token = "0x400058A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA13674", Offset = "0xA13674")]
		public HitPointBone[] boneHitPoints;

		[Token(Token = "0x1700009D")]
		public bool inProgress
		{
			[Token(Token = "0x60007EF")]
			[Address(RVA = "0x19D1AFC", Offset = "0x19D1AFC", VA = "0x19D1AFC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60007F0")]
		[Address(RVA = "0x19D1BCC", Offset = "0x19D1BCC", VA = "0x19D1BCC", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x60007F1")]
		[Address(RVA = "0x19D1DEC", Offset = "0x19D1DEC", VA = "0x19D1DEC")]
		public void Hit(Collider collider, Vector3 force, Vector3 point)
		{
		}

		[Token(Token = "0x60007F2")]
		[Address(RVA = "0x19D2158", Offset = "0x19D2158", VA = "0x19D2158")]
		public HitReaction()
		{
		}
	}
	[Token(Token = "0x200009C")]
	public class HitReactionVRIK : OffsetModifierVRIK
	{
		[Serializable]
		[Token(Token = "0x2000515")]
		public abstract class Offset
		{
			[Token(Token = "0x4001B0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA2326C", Offset = "0xA2326C")]
			public string name;

			[Token(Token = "0x4001B0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA232A4", Offset = "0xA232A4")]
			public Collider collider;

			[Token(Token = "0x4001B0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA232DC", Offset = "0xA232DC")]
			[SerializeField]
			private float crossFadeTime;

			[Token(Token = "0x4001B10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA23328", Offset = "0xA23328")]
			private float <crossFader>k__BackingField;

			[Token(Token = "0x4001B11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA23338", Offset = "0xA23338")]
			private float <timer>k__BackingField;

			[Token(Token = "0x4001B12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA23348", Offset = "0xA23348")]
			private Vector3 <force>k__BackingField;

			[Token(Token = "0x4001B13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA23358", Offset = "0xA23358")]
			private Vector3 <point>k__BackingField;

			[Token(Token = "0x4001B14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float length;

			[Token(Token = "0x4001B15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float crossFadeSpeed;

			[Token(Token = "0x4001B16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float lastTime;

			[Token(Token = "0x170004B5")]
			protected float crossFader
			{
				[Token(Token = "0x600277C")]
				[Address(RVA = "0x19D3210", Offset = "0x19D3210", VA = "0x19D3210")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2F3B0", Offset = "0xA2F3B0")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x600277D")]
				[Address(RVA = "0x19D3218", Offset = "0x19D3218", VA = "0x19D3218")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2F3C0", Offset = "0xA2F3C0")]
				private set
				{
				}
			}

			[Token(Token = "0x170004B6")]
			protected float timer
			{
				[Token(Token = "0x600277E")]
				[Address(RVA = "0x19D3220", Offset = "0x19D3220", VA = "0x19D3220")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2F3D0", Offset = "0xA2F3D0")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x600277F")]
				[Address(RVA = "0x19D3228", Offset = "0x19D3228", VA = "0x19D3228")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2F3E0", Offset = "0xA2F3E0")]
				private set
				{
				}
			}

			[Token(Token = "0x170004B7")]
			protected Vector3 force
			{
				[Token(Token = "0x6002780")]
				[Address(RVA = "0x19D3230", Offset = "0x19D3230", VA = "0x19D3230")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2F3F0", Offset = "0xA2F3F0")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6002781")]
				[Address(RVA = "0x19D323C", Offset = "0x19D323C", VA = "0x19D323C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2F400", Offset = "0xA2F400")]
				private set
				{
				}
			}

			[Token(Token = "0x170004B8")]
			protected Vector3 point
			{
				[Token(Token = "0x6002782")]
				[Address(RVA = "0x19D3248", Offset = "0x19D3248", VA = "0x19D3248")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2F410", Offset = "0xA2F410")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6002783")]
				[Address(RVA = "0x19D3254", Offset = "0x19D3254", VA = "0x19D3254")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2F420", Offset = "0xA2F420")]
				private set
				{
				}
			}

			[Token(Token = "0x6002784")]
			[Address(RVA = "0x19D30C8", Offset = "0x19D30C8", VA = "0x19D30C8")]
			public void Hit(Vector3 force, AnimationCurve[] curves, Vector3 point)
			{
			}

			[Token(Token = "0x6002785")]
			[Address(RVA = "0x19D2D2C", Offset = "0x19D2D2C", VA = "0x19D2D2C")]
			public void Apply(VRIK ik, AnimationCurve[] curves, float weight)
			{
			}

			[Token(Token = "0x6002786")]
			protected abstract float GetLength(AnimationCurve[] curves);

			[Token(Token = "0x6002787")]
			protected abstract void CrossFadeStart();

			[Token(Token = "0x6002788")]
			protected abstract void OnApply(VRIK ik, AnimationCurve[] curves, float weight);

			[Token(Token = "0x6002789")]
			[Address(RVA = "0x19D3260", Offset = "0x19D3260", VA = "0x19D3260")]
			protected Offset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000516")]
		public class PositionOffset : Offset
		{
			[Serializable]
			[Token(Token = "0x20006C8")]
			public class PositionOffsetLink
			{
				[Token(Token = "0x4002120")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA25AD0", Offset = "0xA25AD0")]
				public IKSolverVR.PositionOffset positionOffset;

				[Token(Token = "0x4002121")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA25B08", Offset = "0xA25B08")]
				public float weight;

				[Token(Token = "0x4002122")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private Vector3 lastValue;

				[Token(Token = "0x4002123")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
				private Vector3 current;

				[Token(Token = "0x6002C90")]
				[Address(RVA = "0x19D371C", Offset = "0x19D371C", VA = "0x19D371C")]
				public void Apply(VRIK ik, Vector3 offset, float crossFader)
				{
				}

				[Token(Token = "0x6002C91")]
				[Address(RVA = "0x19D34D8", Offset = "0x19D34D8", VA = "0x19D34D8")]
				public void CrossFadeStart()
				{
				}

				[Token(Token = "0x6002C92")]
				[Address(RVA = "0x19D3838", Offset = "0x19D3838", VA = "0x19D3838")]
				public PositionOffsetLink()
				{
				}
			}

			[Token(Token = "0x4001B17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA23368", Offset = "0xA23368")]
			public int forceDirCurveIndex;

			[Token(Token = "0x4001B18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA233A0", Offset = "0xA233A0")]
			public int upDirCurveIndex;

			[Token(Token = "0x4001B19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA233D8", Offset = "0xA233D8")]
			public PositionOffsetLink[] offsetLinks;

			[Token(Token = "0x600278A")]
			[Address(RVA = "0x19D3274", Offset = "0x19D3274", VA = "0x19D3274", Slot = "4")]
			protected override float GetLength(AnimationCurve[] curves)
			{
				return default(float);
			}

			[Token(Token = "0x600278B")]
			[Address(RVA = "0x19D346C", Offset = "0x19D346C", VA = "0x19D346C", Slot = "5")]
			protected override void CrossFadeStart()
			{
			}

			[Token(Token = "0x600278C")]
			[Address(RVA = "0x19D34EC", Offset = "0x19D34EC", VA = "0x19D34EC", Slot = "6")]
			protected override void OnApply(VRIK ik, AnimationCurve[] curves, float weight)
			{
			}

			[Token(Token = "0x600278D")]
			[Address(RVA = "0x19D381C", Offset = "0x19D381C", VA = "0x19D381C")]
			public PositionOffset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000517")]
		public class RotationOffset : Offset
		{
			[Serializable]
			[Token(Token = "0x20006C9")]
			public class RotationOffsetLink
			{
				[Token(Token = "0x4002124")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA25B40", Offset = "0xA25B40")]
				public IKSolverVR.RotationOffset rotationOffset;

				[Token(Token = "0x4002125")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA25B78", Offset = "0xA25B78")]
				[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA25B78", Offset = "0xA25B78")]
				public float weight;

				[Token(Token = "0x4002126")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private Quaternion lastValue;

				[Token(Token = "0x4002127")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				private Quaternion current;

				[Token(Token = "0x6002C93")]
				[Address(RVA = "0x19D3CA0", Offset = "0x19D3CA0", VA = "0x19D3CA0")]
				public void Apply(VRIK ik, Quaternion offset, float crossFader)
				{
				}

				[Token(Token = "0x6002C94")]
				[Address(RVA = "0x19D3988", Offset = "0x19D3988", VA = "0x19D3988")]
				public void CrossFadeStart()
				{
				}

				[Token(Token = "0x6002C95")]
				[Address(RVA = "0x19D3DDC", Offset = "0x19D3DDC", VA = "0x19D3DDC")]
				public RotationOffsetLink()
				{
				}
			}

			[Token(Token = "0x4001B1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA23410", Offset = "0xA23410")]
			public int curveIndex;

			[Token(Token = "0x4001B1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA23448", Offset = "0xA23448")]
			public RotationOffsetLink[] offsetLinks;

			[Token(Token = "0x4001B1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Rigidbody rigidbody;

			[Token(Token = "0x600278E")]
			[Address(RVA = "0x19D3840", Offset = "0x19D3840", VA = "0x19D3840", Slot = "4")]
			protected override float GetLength(AnimationCurve[] curves)
			{
				return default(float);
			}

			[Token(Token = "0x600278F")]
			[Address(RVA = "0x19D3924", Offset = "0x19D3924", VA = "0x19D3924", Slot = "5")]
			protected override void CrossFadeStart()
			{
			}

			[Token(Token = "0x6002790")]
			[Address(RVA = "0x19D3994", Offset = "0x19D3994", VA = "0x19D3994", Slot = "6")]
			protected override void OnApply(VRIK ik, AnimationCurve[] curves, float weight)
			{
			}

			[Token(Token = "0x6002791")]
			[Address(RVA = "0x19D3DC8", Offset = "0x19D3DC8", VA = "0x19D3DC8")]
			public RotationOffset()
			{
			}
		}

		[Token(Token = "0x400058B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve[] offsetCurves;

		[Token(Token = "0x400058C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA136AC", Offset = "0xA136AC")]
		public PositionOffset[] positionOffsets;

		[Token(Token = "0x400058D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA136E4", Offset = "0xA136E4")]
		public RotationOffset[] rotationOffsets;

		[Token(Token = "0x60007F3")]
		[Address(RVA = "0x19D2C60", Offset = "0x19D2C60", VA = "0x19D2C60", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x60007F4")]
		[Address(RVA = "0x19D2E80", Offset = "0x19D2E80", VA = "0x19D2E80")]
		public void Hit(Collider collider, Vector3 force, Vector3 point)
		{
		}

		[Token(Token = "0x60007F5")]
		[Address(RVA = "0x19D3208", Offset = "0x19D3208", VA = "0x19D3208")]
		public HitReactionVRIK()
		{
		}
	}
	[Token(Token = "0x200009D")]
	public class Inertia : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x2000518")]
		public class Body
		{
			[Serializable]
			[Token(Token = "0x20006CA")]
			public class EffectorLink
			{
				[Token(Token = "0x4002128")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA25BCC", Offset = "0xA25BCC")]
				public FullBodyBipedEffector effector;

				[Token(Token = "0x4002129")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA25C04", Offset = "0xA25C04")]
				public float weight;

				[Token(Token = "0x6002C96")]
				[Address(RVA = "0x185E464", Offset = "0x185E464", VA = "0x185E464")]
				public EffectorLink()
				{
				}
			}

			[Token(Token = "0x4001B1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA23480", Offset = "0xA23480")]
			public Transform transform;

			[Token(Token = "0x4001B1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA234B8", Offset = "0xA234B8")]
			public EffectorLink[] effectorLinks;

			[Token(Token = "0x4001B1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA234F0", Offset = "0xA234F0")]
			public float speed;

			[Token(Token = "0x4001B20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA23528", Offset = "0xA23528")]
			public float acceleration;

			[Token(Token = "0x4001B21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA23560", Offset = "0xA23560")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA23560", Offset = "0xA23560")]
			public float matchVelocity;

			[Token(Token = "0x4001B22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA235B4", Offset = "0xA235B4")]
			public float gravity;

			[Token(Token = "0x4001B23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3 delta;

			[Token(Token = "0x4001B24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private Vector3 lazyPoint;

			[Token(Token = "0x4001B25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Vector3 direction;

			[Token(Token = "0x4001B26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private Vector3 lastPosition;

			[Token(Token = "0x4001B27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private bool firstUpdate;

			[Token(Token = "0x6002792")]
			[Address(RVA = "0x185DE34", Offset = "0x185DE34", VA = "0x185DE34")]
			public void Reset()
			{
			}

			[Token(Token = "0x6002793")]
			[Address(RVA = "0x185DFF4", Offset = "0x185DFF4", VA = "0x185DFF4")]
			public void Update(IKSolverFullBodyBiped solver, float weight, float deltaTime)
			{
			}

			[Token(Token = "0x6002794")]
			[Address(RVA = "0x185E448", Offset = "0x185E448", VA = "0x185E448")]
			public Body()
			{
			}
		}

		[Token(Token = "0x400058E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1371C", Offset = "0xA1371C")]
		public Body[] bodies;

		[Token(Token = "0x400058F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA13754", Offset = "0xA13754")]
		public OffsetLimits[] limits;

		[Token(Token = "0x60007F6")]
		[Address(RVA = "0x185DDBC", Offset = "0x185DDBC", VA = "0x185DDBC")]
		public void ResetBodies()
		{
		}

		[Token(Token = "0x60007F7")]
		[Address(RVA = "0x185DF10", Offset = "0x185DF10", VA = "0x185DF10", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x60007F8")]
		[Address(RVA = "0x185E428", Offset = "0x185E428", VA = "0x185E428")]
		public Inertia()
		{
		}
	}
	[Token(Token = "0x200009E")]
	public class LookAtController : MonoBehaviour
	{
		[Token(Token = "0x4000590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LookAtIK ik;

		[Token(Token = "0x4000591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA1378C", Offset = "0xA1378C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1378C", Offset = "0xA1378C")]
		public Transform target;

		[Token(Token = "0x4000592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA137EC", Offset = "0xA137EC")]
		public float weight;

		[Token(Token = "0x4000593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 offset;

		[Token(Token = "0x4000594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA13804", Offset = "0xA13804")]
		public float targetSwitchSmoothTime;

		[Token(Token = "0x4000595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1383C", Offset = "0xA1383C")]
		public float weightSmoothTime;

		[Token(Token = "0x4000596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA13874", Offset = "0xA13874")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA13874", Offset = "0xA13874")]
		public bool smoothTurnTowardsTarget;

		[Token(Token = "0x4000597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA138D4", Offset = "0xA138D4")]
		public float maxRadiansDelta;

		[Token(Token = "0x4000598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1390C", Offset = "0xA1390C")]
		public float maxMagnitudeDelta;

		[Token(Token = "0x4000599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA13944", Offset = "0xA13944")]
		public float slerpSpeed;

		[Token(Token = "0x400059A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1397C", Offset = "0xA1397C")]
		public Vector3 pivotOffsetFromRoot;

		[Token(Token = "0x400059B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA139B4", Offset = "0xA139B4")]
		public float minDistance;

		[Token(Token = "0x400059C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA139EC", Offset = "0xA139EC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA139EC", Offset = "0xA139EC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA139EC", Offset = "0xA139EC")]
		public float maxRootAngle;

		[Token(Token = "0x400059D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform lastTarget;

		[Token(Token = "0x400059E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float switchWeight;

		[Token(Token = "0x400059F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float switchWeightV;

		[Token(Token = "0x40005A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float weightV;

		[Token(Token = "0x40005A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Vector3 lastPosition;

		[Token(Token = "0x40005A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 dir;

		[Token(Token = "0x40005A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private bool lastSmoothTowardsTarget;

		[Token(Token = "0x1700009E")]
		private Vector3 pivot
		{
			[Token(Token = "0x60007FB")]
			[Address(RVA = "0x1868074", Offset = "0x1868074", VA = "0x1868074")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x60007F9")]
		[Address(RVA = "0x1867F8C", Offset = "0x1867F8C", VA = "0x1867F8C")]
		private void Start()
		{
		}

		[Token(Token = "0x60007FA")]
		[Address(RVA = "0x18681C0", Offset = "0x18681C0", VA = "0x18681C0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60007FC")]
		[Address(RVA = "0x1868874", Offset = "0x1868874", VA = "0x1868874")]
		private void ApplyMinDistance()
		{
		}

		[Token(Token = "0x60007FD")]
		[Address(RVA = "0x1868A10", Offset = "0x1868A10", VA = "0x1868A10")]
		private void RootRotation()
		{
		}

		[Token(Token = "0x60007FE")]
		[Address(RVA = "0x1868D2C", Offset = "0x1868D2C", VA = "0x1868D2C")]
		public LookAtController()
		{
		}
	}
	[Token(Token = "0x200009F")]
	public abstract class OffsetModifier : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000519")]
		public class OffsetLimits
		{
			[Token(Token = "0x4001B28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA235EC", Offset = "0xA235EC")]
			public FullBodyBipedEffector effector;

			[Token(Token = "0x4001B29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA23624", Offset = "0xA23624")]
			public float spring;

			[Token(Token = "0x4001B2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA2365C", Offset = "0xA2365C")]
			public bool x;

			[Token(Token = "0x4001B2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA23694", Offset = "0xA23694")]
			public bool y;

			[Token(Token = "0x4001B2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA236CC", Offset = "0xA236CC")]
			public bool z;

			[Token(Token = "0x4001B2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA23704", Offset = "0xA23704")]
			public float minX;

			[Token(Token = "0x4001B2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA2373C", Offset = "0xA2373C")]
			public float maxX;

			[Token(Token = "0x4001B2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA23774", Offset = "0xA23774")]
			public float minY;

			[Token(Token = "0x4001B30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA237AC", Offset = "0xA237AC")]
			public float maxY;

			[Token(Token = "0x4001B31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA237E4", Offset = "0xA237E4")]
			public float minZ;

			[Token(Token = "0x4001B32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA2381C", Offset = "0xA2381C")]
			public float maxZ;

			[Token(Token = "0x6002795")]
			[Address(RVA = "0x1869154", Offset = "0x1869154", VA = "0x1869154")]
			public void Apply(IKEffector e, Quaternion rootRotation)
			{
			}

			[Token(Token = "0x6002796")]
			[Address(RVA = "0x186965C", Offset = "0x186965C", VA = "0x186965C")]
			private float SpringAxis(float value, float min, float max)
			{
				return default(float);
			}

			[Token(Token = "0x6002797")]
			[Address(RVA = "0x186968C", Offset = "0x186968C", VA = "0x186968C")]
			private float Spring(float value, float limit, bool negative)
			{
				return default(float);
			}

			[Token(Token = "0x6002798")]
			[Address(RVA = "0x1869764", Offset = "0x1869764", VA = "0x1869764")]
			public OffsetLimits()
			{
			}
		}

		[Token(Token = "0x200051A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D3E8", Offset = "0xA0D3E8")]
		private sealed class <Initiate>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OffsetModifier <>4__this;

			[Token(Token = "0x170004B9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600279C")]
				[Address(RVA = "0x18695EC", Offset = "0x18695EC", VA = "0x18695EC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004BA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600279E")]
				[Address(RVA = "0x1869654", Offset = "0x1869654", VA = "0x1869654", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002799")]
			[Address(RVA = "0x186901C", Offset = "0x186901C", VA = "0x186901C")]
			[DebuggerHidden]
			public <Initiate>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x600279A")]
			[Address(RVA = "0x18694AC", Offset = "0x18694AC", VA = "0x18694AC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600279B")]
			[Address(RVA = "0x18694B0", Offset = "0x18694B0", VA = "0x18694B0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600279D")]
			[Address(RVA = "0x18695F4", Offset = "0x18695F4", VA = "0x18695F4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40005A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA13A68", Offset = "0xA13A68")]
		public float weight;

		[Token(Token = "0x40005A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA13AA0", Offset = "0xA13AA0")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x40005A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected float lastTime;

		[Token(Token = "0x1700009F")]
		protected float deltaTime
		{
			[Token(Token = "0x60007FF")]
			[Address(RVA = "0x185DFC8", Offset = "0x185DFC8", VA = "0x185DFC8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000800")]
		protected abstract void OnModifyOffset();

		[Token(Token = "0x6000801")]
		[Address(RVA = "0x1868F80", Offset = "0x1868F80", VA = "0x1868F80", Slot = "5")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000802")]
		[Address(RVA = "0x1868FAC", Offset = "0x1868FAC", VA = "0x1868FAC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA289C4", Offset = "0xA289C4")]
		private IEnumerator Initiate()
		{
			return null;
		}

		[Token(Token = "0x6000803")]
		[Address(RVA = "0x1869048", Offset = "0x1869048", VA = "0x1869048")]
		private void ModifyOffset()
		{
		}

		[Token(Token = "0x6000804")]
		[Address(RVA = "0x185E36C", Offset = "0x185E36C", VA = "0x185E36C")]
		protected void ApplyLimits(OffsetLimits[] limits)
		{
		}

		[Token(Token = "0x6000805")]
		[Address(RVA = "0x18693B4", Offset = "0x18693B4", VA = "0x18693B4", Slot = "6")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000806")]
		[Address(RVA = "0x185E438", Offset = "0x185E438", VA = "0x185E438")]
		protected OffsetModifier()
		{
		}
	}
	[Token(Token = "0x20000A0")]
	public abstract class OffsetModifierVRIK : MonoBehaviour
	{
		[Token(Token = "0x200051B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D3F8", Offset = "0xA0D3F8")]
		private sealed class <Initiate>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OffsetModifierVRIK <>4__this;

			[Token(Token = "0x170004BB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60027A2")]
				[Address(RVA = "0x1869BB4", Offset = "0x1869BB4", VA = "0x1869BB4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004BC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60027A4")]
				[Address(RVA = "0x1869C1C", Offset = "0x1869C1C", VA = "0x1869C1C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600279F")]
			[Address(RVA = "0x1869834", Offset = "0x1869834", VA = "0x1869834")]
			[DebuggerHidden]
			public <Initiate>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x60027A0")]
			[Address(RVA = "0x1869A74", Offset = "0x1869A74", VA = "0x1869A74", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60027A1")]
			[Address(RVA = "0x1869A78", Offset = "0x1869A78", VA = "0x1869A78", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60027A3")]
			[Address(RVA = "0x1869BBC", Offset = "0x1869BBC", VA = "0x1869BBC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40005A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA13AD8", Offset = "0xA13AD8")]
		public float weight;

		[Token(Token = "0x40005A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA13B10", Offset = "0xA13B10")]
		public VRIK ik;

		[Token(Token = "0x40005A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float lastTime;

		[Token(Token = "0x170000A0")]
		protected float deltaTime
		{
			[Token(Token = "0x6000807")]
			[Address(RVA = "0x186976C", Offset = "0x186976C", VA = "0x186976C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000808")]
		protected abstract void OnModifyOffset();

		[Token(Token = "0x6000809")]
		[Address(RVA = "0x1869798", Offset = "0x1869798", VA = "0x1869798", Slot = "5")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x600080A")]
		[Address(RVA = "0x18697C4", Offset = "0x18697C4", VA = "0x18697C4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA28A28", Offset = "0xA28A28")]
		private IEnumerator Initiate()
		{
			return null;
		}

		[Token(Token = "0x600080B")]
		[Address(RVA = "0x1869860", Offset = "0x1869860", VA = "0x1869860")]
		private void ModifyOffset()
		{
		}

		[Token(Token = "0x600080C")]
		[Address(RVA = "0x186996C", Offset = "0x186996C", VA = "0x186996C", Slot = "6")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x600080D")]
		[Address(RVA = "0x1869A64", Offset = "0x1869A64", VA = "0x1869A64")]
		protected OffsetModifierVRIK()
		{
		}
	}
	[Token(Token = "0x20000A1")]
	public class OffsetPose : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200051C")]
		public class EffectorLink
		{
			[Token(Token = "0x4001B39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FullBodyBipedEffector effector;

			[Token(Token = "0x4001B3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 offset;

			[Token(Token = "0x4001B3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 pin;

			[Token(Token = "0x4001B3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Vector3 pinWeight;

			[Token(Token = "0x60027A5")]
			[Address(RVA = "0x1869CE4", Offset = "0x1869CE4", VA = "0x1869CE4")]
			public void Apply(IKSolverFullBodyBiped solver, float weight, Quaternion rotation)
			{
			}

			[Token(Token = "0x60027A6")]
			[Address(RVA = "0x186A134", Offset = "0x186A134", VA = "0x186A134")]
			public EffectorLink()
			{
			}
		}

		[Token(Token = "0x40005AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EffectorLink[] effectorLinks;

		[Token(Token = "0x600080E")]
		[Address(RVA = "0x1869C24", Offset = "0x1869C24", VA = "0x1869C24")]
		public void Apply(IKSolverFullBodyBiped solver, float weight)
		{
		}

		[Token(Token = "0x600080F")]
		[Address(RVA = "0x186A01C", Offset = "0x186A01C", VA = "0x186A01C")]
		public void Apply(IKSolverFullBodyBiped solver, float weight, Quaternion rotation)
		{
		}

		[Token(Token = "0x6000810")]
		[Address(RVA = "0x186A0D4", Offset = "0x186A0D4", VA = "0x186A0D4")]
		public OffsetPose()
		{
		}
	}
	[Token(Token = "0x20000A2")]
	public class PenetrationAvoidance : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x200051D")]
		public class Avoider
		{
			[Serializable]
			[Token(Token = "0x20006CB")]
			public class EffectorLink
			{
				[Token(Token = "0x400212A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA25C3C", Offset = "0xA25C3C")]
				public FullBodyBipedEffector effector;

				[Token(Token = "0x400212B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA25C74", Offset = "0xA25C74")]
				public float weight;

				[Token(Token = "0x6002C97")]
				[Address(RVA = "0x186A7EC", Offset = "0x186A7EC", VA = "0x186A7EC")]
				public EffectorLink()
				{
				}
			}

			[Token(Token = "0x4001B3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA23854", Offset = "0xA23854")]
			public Transform[] raycastFrom;

			[Token(Token = "0x4001B3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA2388C", Offset = "0xA2388C")]
			public Transform raycastTo;

			[Token(Token = "0x4001B3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA238C4", Offset = "0xA238C4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA238C4", Offset = "0xA238C4")]
			public float raycastRadius;

			[Token(Token = "0x4001B40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA23918", Offset = "0xA23918")]
			public EffectorLink[] effectors;

			[Token(Token = "0x4001B41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA23950", Offset = "0xA23950")]
			public float smoothTimeIn;

			[Token(Token = "0x4001B42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA23988", Offset = "0xA23988")]
			public float smoothTimeOut;

			[Token(Token = "0x4001B43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA239C0", Offset = "0xA239C0")]
			public LayerMask layers;

			[Token(Token = "0x4001B44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private Vector3 offset;

			[Token(Token = "0x4001B45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Vector3 offsetTarget;

			[Token(Token = "0x4001B46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private Vector3 offsetV;

			[Token(Token = "0x60027A7")]
			[Address(RVA = "0x186A1C0", Offset = "0x186A1C0", VA = "0x186A1C0")]
			public void Solve(IKSolverFullBodyBiped solver, float weight)
			{
			}

			[Token(Token = "0x60027A8")]
			[Address(RVA = "0x186A3CC", Offset = "0x186A3CC", VA = "0x186A3CC")]
			private Vector3 GetOffsetTarget(IKSolverFullBodyBiped solver)
			{
				return default(Vector3);
			}

			[Token(Token = "0x60027A9")]
			[Address(RVA = "0x186A564", Offset = "0x186A564", VA = "0x186A564")]
			private Vector3 Raycast(Vector3 from, Vector3 to)
			{
				return default(Vector3);
			}

			[Token(Token = "0x60027AA")]
			[Address(RVA = "0x186A7D8", Offset = "0x186A7D8", VA = "0x186A7D8")]
			public Avoider()
			{
			}
		}

		[Token(Token = "0x40005AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA13B48", Offset = "0xA13B48")]
		public Avoider[] avoiders;

		[Token(Token = "0x6000811")]
		[Address(RVA = "0x186A13C", Offset = "0x186A13C", VA = "0x186A13C", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x6000812")]
		[Address(RVA = "0x186A3BC", Offset = "0x186A3BC", VA = "0x186A3BC")]
		public PenetrationAvoidance()
		{
		}
	}
	[Token(Token = "0x20000A3")]
	public class Recoil : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x200051E")]
		public class RecoilOffset
		{
			[Serializable]
			[Token(Token = "0x20006CC")]
			public class EffectorLink
			{
				[Token(Token = "0x400212C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA25CAC", Offset = "0xA25CAC")]
				public FullBodyBipedEffector effector;

				[Token(Token = "0x400212D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA25CE4", Offset = "0xA25CE4")]
				public float weight;

				[Token(Token = "0x6002C98")]
				[Address(RVA = "0x186D704", Offset = "0x186D704", VA = "0x186D704")]
				public EffectorLink()
				{
				}
			}

			[Token(Token = "0x4001B47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA239F8", Offset = "0xA239F8")]
			public Vector3 offset;

			[Token(Token = "0x4001B48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA23A30", Offset = "0xA23A30")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA23A30", Offset = "0xA23A30")]
			public float additivity;

			[Token(Token = "0x4001B49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA23A84", Offset = "0xA23A84")]
			public float maxAdditiveOffsetMag;

			[Token(Token = "0x4001B4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA23ABC", Offset = "0xA23ABC")]
			public EffectorLink[] effectorLinks;

			[Token(Token = "0x4001B4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3 additiveOffset;

			[Token(Token = "0x4001B4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private Vector3 lastOffset;

			[Token(Token = "0x60027AB")]
			[Address(RVA = "0x186C44C", Offset = "0x186C44C", VA = "0x186C44C")]
			public void Start()
			{
			}

			[Token(Token = "0x60027AC")]
			[Address(RVA = "0x186CFDC", Offset = "0x186CFDC", VA = "0x186CFDC")]
			public void Apply(IKSolverFullBodyBiped solver, Quaternion rotation, float masterWeight, float length, float timeLeft)
			{
			}

			[Token(Token = "0x60027AD")]
			[Address(RVA = "0x186D6F0", Offset = "0x186D6F0", VA = "0x186D6F0")]
			public RecoilOffset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200051F")]
		public enum Handedness
		{
			[Token(Token = "0x4001B4E")]
			Right,
			[Token(Token = "0x4001B4F")]
			Left
		}

		[Token(Token = "0x40005AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA13B80", Offset = "0xA13B80")]
		public AimIK aimIK;

		[Token(Token = "0x40005AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA13BB8", Offset = "0xA13BB8")]
		public bool aimIKSolvedLast;

		[Token(Token = "0x40005AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA13BF0", Offset = "0xA13BF0")]
		public Handedness handedness;

		[Token(Token = "0x40005AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA13C28", Offset = "0xA13C28")]
		public bool twoHanded;

		[Token(Token = "0x40005B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA13C60", Offset = "0xA13C60")]
		public AnimationCurve recoilWeight;

		[Token(Token = "0x40005B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA13C98", Offset = "0xA13C98")]
		public float magnitudeRandom;

		[Token(Token = "0x40005B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA13CD0", Offset = "0xA13CD0")]
		public Vector3 rotationRandom;

		[Token(Token = "0x40005B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA13D08", Offset = "0xA13D08")]
		public Vector3 handRotationOffset;

		[Token(Token = "0x40005B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA13D40", Offset = "0xA13D40")]
		public float blendTime;

		[Token(Token = "0x40005B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xA13D78", Offset = "0xA13D78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA13D78", Offset = "0xA13D78")]
		public RecoilOffset[] offsets;

		[Token(Token = "0x40005B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public Quaternion rotationOffset;

		[Token(Token = "0x40005B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float magnitudeMlp;

		[Token(Token = "0x40005B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float endTime;

		[Token(Token = "0x40005B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Quaternion handRotation;

		[Token(Token = "0x40005BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Quaternion secondaryHandRelativeRotation;

		[Token(Token = "0x40005BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Quaternion randomRotation;

		[Token(Token = "0x40005BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float length;

		[Token(Token = "0x40005BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private bool initiated;

		[Token(Token = "0x40005BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float blendWeight;

		[Token(Token = "0x40005BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private float w;

		[Token(Token = "0x40005C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Quaternion primaryHandRotation;

		[Token(Token = "0x40005C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool handRotationsSet;

		[Token(Token = "0x40005C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private Vector3 aimIKAxis;

		[Token(Token = "0x170000A1")]
		public bool isFinished
		{
			[Token(Token = "0x6000813")]
			[Address(RVA = "0x186C224", Offset = "0x186C224", VA = "0x186C224")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000A2")]
		private IKEffector primaryHandEffector
		{
			[Token(Token = "0x6000819")]
			[Address(RVA = "0x186D290", Offset = "0x186D290", VA = "0x186D290")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A3")]
		private IKEffector secondaryHandEffector
		{
			[Token(Token = "0x600081A")]
			[Address(RVA = "0x186D2D0", Offset = "0x186D2D0", VA = "0x186D2D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A4")]
		private Transform primaryHand
		{
			[Token(Token = "0x600081B")]
			[Address(RVA = "0x186D250", Offset = "0x186D250", VA = "0x186D250")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A5")]
		private Transform secondaryHand
		{
			[Token(Token = "0x600081C")]
			[Address(RVA = "0x186D270", Offset = "0x186D270", VA = "0x186D270")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000814")]
		[Address(RVA = "0x186C254", Offset = "0x186C254", VA = "0x186C254")]
		public void SetHandRotations(Quaternion leftHandRotation, Quaternion rightHandRotation)
		{
		}

		[Token(Token = "0x6000815")]
		[Address(RVA = "0x186C280", Offset = "0x186C280", VA = "0x186C280")]
		public void Fire(float magnitude)
		{
		}

		[Token(Token = "0x6000816")]
		[Address(RVA = "0x186C4FC", Offset = "0x186C4FC", VA = "0x186C4FC", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x6000817")]
		[Address(RVA = "0x186D310", Offset = "0x186D310", VA = "0x186D310")]
		private void AfterFBBIK()
		{
		}

		[Token(Token = "0x6000818")]
		[Address(RVA = "0x186D468", Offset = "0x186D468", VA = "0x186D468")]
		private void AfterAimIK()
		{
		}

		[Token(Token = "0x600081D")]
		[Address(RVA = "0x186D4A4", Offset = "0x186D4A4", VA = "0x186D4A4", Slot = "6")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x600081E")]
		[Address(RVA = "0x186D63C", Offset = "0x186D63C", VA = "0x186D63C")]
		public Recoil()
		{
		}
	}
	[Token(Token = "0x20000A4")]
	public class ShoulderRotator : MonoBehaviour
	{
		[Token(Token = "0x40005C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA13DD8", Offset = "0xA13DD8")]
		public float weight;

		[Token(Token = "0x40005C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA13E10", Offset = "0xA13E10")]
		public float offset;

		[Token(Token = "0x40005C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FullBodyBipedIK ik;

		[Token(Token = "0x40005C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool skip;

		[Token(Token = "0x600081F")]
		[Address(RVA = "0x1870EFC", Offset = "0x1870EFC", VA = "0x1870EFC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000820")]
		[Address(RVA = "0x1870FD0", Offset = "0x1870FD0", VA = "0x1870FD0")]
		private void RotateShoulders()
		{
		}

		[Token(Token = "0x6000821")]
		[Address(RVA = "0x18710BC", Offset = "0x18710BC", VA = "0x18710BC")]
		private void RotateShoulder(FullBodyBipedChain chain, float weight, float offset)
		{
		}

		[Token(Token = "0x6000822")]
		[Address(RVA = "0x1871504", Offset = "0x1871504", VA = "0x1871504")]
		private IKMapping.BoneMap GetParentBoneMap(FullBodyBipedChain chain)
		{
			return null;
		}

		[Token(Token = "0x6000823")]
		[Address(RVA = "0x187153C", Offset = "0x187153C", VA = "0x187153C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000824")]
		[Address(RVA = "0x1871634", Offset = "0x1871634", VA = "0x1871634")]
		public ShoulderRotator()
		{
		}
	}
	[Token(Token = "0x20000A5")]
	public static class VRIKCalibrator
	{
		[Serializable]
		[Token(Token = "0x2000520")]
		public class Settings
		{
			[Token(Token = "0x4001B50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA23AF4", Offset = "0xA23AF4")]
			public float scaleMlp;

			[Token(Token = "0x4001B51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA23B2C", Offset = "0xA23B2C")]
			public Vector3 headTrackerForward;

			[Token(Token = "0x4001B52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA23B64", Offset = "0xA23B64")]
			public Vector3 headTrackerUp;

			[Token(Token = "0x4001B53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA23B9C", Offset = "0xA23B9C")]
			public Vector3 bodyTrackerForward;

			[Token(Token = "0x4001B54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA23BD4", Offset = "0xA23BD4")]
			public Vector3 bodyTrackerUp;

			[Token(Token = "0x4001B55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA23C0C", Offset = "0xA23C0C")]
			public Vector3 handTrackerForward;

			[Token(Token = "0x4001B56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA23C44", Offset = "0xA23C44")]
			public Vector3 handTrackerUp;

			[Token(Token = "0x4001B57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA23C7C", Offset = "0xA23C7C")]
			public Vector3 footTrackerForward;

			[Token(Token = "0x4001B58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA23CB4", Offset = "0xA23CB4")]
			public Vector3 footTrackerUp;

			[Token(Token = "0x4001B59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xA23CEC", Offset = "0xA23CEC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA23CEC", Offset = "0xA23CEC")]
			public Vector3 headOffset;

			[Token(Token = "0x4001B5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA23D3C", Offset = "0xA23D3C")]
			public Vector3 handOffset;

			[Token(Token = "0x4001B5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA23D74", Offset = "0xA23D74")]
			public float footForwardOffset;

			[Token(Token = "0x4001B5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA23DAC", Offset = "0xA23DAC")]
			public float footInwardOffset;

			[Token(Token = "0x4001B5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA23DE4", Offset = "0xA23DE4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA23DE4", Offset = "0xA23DE4")]
			public float footHeadingOffset;

			[Token(Token = "0x4001B5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA23E40", Offset = "0xA23E40")]
			public float pelvisPositionWeight;

			[Token(Token = "0x4001B5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA23E58", Offset = "0xA23E58")]
			public float pelvisRotationWeight;

			[Token(Token = "0x60027AE")]
			[Address(RVA = "0x143E798", Offset = "0x143E798", VA = "0x143E798")]
			public Settings()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000521")]
		public class CalibrationData
		{
			[Serializable]
			[Token(Token = "0x20006CD")]
			public class Target
			{
				[Token(Token = "0x400212E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public bool used;

				[Token(Token = "0x400212F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				public Vector3 localPosition;

				[Token(Token = "0x4002130")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public Quaternion localRotation;

				[Token(Token = "0x6002C99")]
				[Address(RVA = "0x143D844", Offset = "0x143D844", VA = "0x143D844")]
				public Target(Transform t)
				{
				}

				[Token(Token = "0x6002C9A")]
				[Address(RVA = "0x143E398", Offset = "0x143E398", VA = "0x143E398")]
				public void SetTo(Transform t)
				{
				}
			}

			[Token(Token = "0x4001B60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float scale;

			[Token(Token = "0x4001B61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Target head;

			[Token(Token = "0x4001B62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Target leftHand;

			[Token(Token = "0x4001B63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Target rightHand;

			[Token(Token = "0x4001B64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Target pelvis;

			[Token(Token = "0x4001B65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Target leftFoot;

			[Token(Token = "0x4001B66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Target rightFoot;

			[Token(Token = "0x4001B67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Target leftLegGoal;

			[Token(Token = "0x4001B68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Target rightLegGoal;

			[Token(Token = "0x4001B69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Vector3 pelvisTargetRight;

			[Token(Token = "0x4001B6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			public float pelvisPositionWeight;

			[Token(Token = "0x4001B6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public float pelvisRotationWeight;

			[Token(Token = "0x60027AF")]
			[Address(RVA = "0x143CCE8", Offset = "0x143CCE8", VA = "0x143CCE8")]
			public CalibrationData()
			{
			}
		}

		[Token(Token = "0x6000825")]
		[Address(RVA = "0x143B8A8", Offset = "0x143B8A8", VA = "0x143B8A8")]
		public static void RecalibrateScale(VRIK ik, Settings settings)
		{
		}

		[Token(Token = "0x6000826")]
		[Address(RVA = "0x143BA10", Offset = "0x143BA10", VA = "0x143BA10")]
		public static CalibrationData Calibrate(VRIK ik, Settings settings, Transform headTracker, [Optional] Transform bodyTracker, [Optional] Transform leftHandTracker, [Optional] Transform rightHandTracker, [Optional] Transform leftFootTracker, [Optional] Transform rightFootTracker)
		{
			return null;
		}

		[Token(Token = "0x6000827")]
		[Address(RVA = "0x143CE60", Offset = "0x143CE60", VA = "0x143CE60")]
		private static void CalibrateLeg(Settings settings, Transform tracker, IKSolverVR.Leg leg, Transform lastBone, Vector3 rootForward, bool isLeft)
		{
		}

		[Token(Token = "0x6000828")]
		[Address(RVA = "0x143D908", Offset = "0x143D908", VA = "0x143D908")]
		public static void Calibrate(VRIK ik, CalibrationData data, Transform headTracker, [Optional] Transform bodyTracker, [Optional] Transform leftHandTracker, [Optional] Transform rightHandTracker, [Optional] Transform leftFootTracker, [Optional] Transform rightFootTracker)
		{
		}

		[Token(Token = "0x6000829")]
		[Address(RVA = "0x143E3F8", Offset = "0x143E3F8", VA = "0x143E3F8")]
		private static void CalibrateLeg(CalibrationData data, Transform tracker, IKSolverVR.Leg leg, Transform lastBone, Vector3 rootForward, bool isLeft)
		{
		}
	}
	[Token(Token = "0x20000A6")]
	public class VRIKLODController : MonoBehaviour
	{
		[Token(Token = "0x40005C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Renderer LODRenderer;

		[Token(Token = "0x40005C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float LODDistance;

		[Token(Token = "0x40005C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool allowCulled;

		[Token(Token = "0x40005CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private VRIK ik;

		[Token(Token = "0x600082A")]
		[Address(RVA = "0x143E890", Offset = "0x143E890", VA = "0x143E890")]
		private void Start()
		{
		}

		[Token(Token = "0x600082B")]
		[Address(RVA = "0x143E8E8", Offset = "0x143E8E8", VA = "0x143E8E8")]
		private void Update()
		{
		}

		[Token(Token = "0x600082C")]
		[Address(RVA = "0x143E91C", Offset = "0x143E91C", VA = "0x143E91C")]
		private int GetLODLevel()
		{
			return default(int);
		}

		[Token(Token = "0x600082D")]
		[Address(RVA = "0x143EAA4", Offset = "0x143EAA4", VA = "0x143EAA4")]
		public VRIKLODController()
		{
		}
	}
	[Token(Token = "0x20000A7")]
	public class VRIKRootController : MonoBehaviour
	{
		[Token(Token = "0x40005CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA13E48", Offset = "0xA13E48")]
		private Vector3 <pelvisTargetRight>k__BackingField;

		[Token(Token = "0x40005CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform pelvisTarget;

		[Token(Token = "0x40005CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform leftFootTarget;

		[Token(Token = "0x40005CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform rightFootTarget;

		[Token(Token = "0x40005CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private VRIK ik;

		[Token(Token = "0x170000A6")]
		public Vector3 pelvisTargetRight
		{
			[Token(Token = "0x600082E")]
			[Address(RVA = "0x143EABC", Offset = "0x143EABC", VA = "0x143EABC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA28A8C", Offset = "0xA28A8C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600082F")]
			[Address(RVA = "0x143EAC8", Offset = "0x143EAC8", VA = "0x143EAC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA28A9C", Offset = "0xA28A9C")]
			private set
			{
			}
		}

		[Token(Token = "0x6000830")]
		[Address(RVA = "0x143EAD4", Offset = "0x143EAD4", VA = "0x143EAD4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000831")]
		[Address(RVA = "0x143D620", Offset = "0x143D620", VA = "0x143D620")]
		public void Calibrate()
		{
		}

		[Token(Token = "0x6000832")]
		[Address(RVA = "0x143E628", Offset = "0x143E628", VA = "0x143E628")]
		public void Calibrate(VRIKCalibrator.CalibrationData data)
		{
		}

		[Token(Token = "0x6000833")]
		[Address(RVA = "0x143EBAC", Offset = "0x143EBAC", VA = "0x143EBAC")]
		private void OnPreUpdate()
		{
		}

		[Token(Token = "0x6000834")]
		[Address(RVA = "0x143F050", Offset = "0x143F050", VA = "0x143F050")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000835")]
		[Address(RVA = "0x143F148", Offset = "0x143F148", VA = "0x143F148")]
		public VRIKRootController()
		{
		}
	}
}
namespace RootMotion.Demos
{
	[Token(Token = "0x20000A8")]
	public class FKOffset : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000522")]
		public class Offset
		{
			[Token(Token = "0x4001B6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[HideInInspector]
			[SerializeField]
			public string name;

			[Token(Token = "0x4001B6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public HumanBodyBones bone;

			[Token(Token = "0x4001B6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 rotationOffset;

			[Token(Token = "0x4001B6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Transform t;

			[Token(Token = "0x60027B0")]
			[Address(RVA = "0x1564FCC", Offset = "0x1564FCC", VA = "0x1564FCC")]
			public void Apply(Animator animator)
			{
			}

			[Token(Token = "0x60027B1")]
			[Address(RVA = "0x1565258", Offset = "0x1565258", VA = "0x1565258")]
			public Offset()
			{
			}
		}

		[Token(Token = "0x40005D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Offset[] offsets;

		[Token(Token = "0x40005D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator animator;

		[Token(Token = "0x6000836")]
		[Address(RVA = "0x1564EFC", Offset = "0x1564EFC", VA = "0x1564EFC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000837")]
		[Address(RVA = "0x1564F54", Offset = "0x1564F54", VA = "0x1564F54")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000838")]
		[Address(RVA = "0x1565174", Offset = "0x1565174", VA = "0x1565174")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000839")]
		[Address(RVA = "0x1565250", Offset = "0x1565250", VA = "0x1565250")]
		public FKOffset()
		{
		}
	}
	[Token(Token = "0x20000A9")]
	public class AimBoxing : MonoBehaviour
	{
		[Token(Token = "0x40005D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AimIK aimIK;

		[Token(Token = "0x40005D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform pin;

		[Token(Token = "0x600083A")]
		[Address(RVA = "0x1559C38", Offset = "0x1559C38", VA = "0x1559C38")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600083B")]
		[Address(RVA = "0x1559CBC", Offset = "0x1559CBC", VA = "0x1559CBC")]
		public AimBoxing()
		{
		}
	}
	[Token(Token = "0x20000AA")]
	public class AimSwing : MonoBehaviour
	{
		[Token(Token = "0x40005D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AimIK ik;

		[Token(Token = "0x40005D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA13E58", Offset = "0xA13E58")]
		public Vector3 animatedSwingDirection;

		[Token(Token = "0x600083C")]
		[Address(RVA = "0x1559CC4", Offset = "0x1559CC4", VA = "0x1559CC4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600083D")]
		[Address(RVA = "0x1559DCC", Offset = "0x1559DCC", VA = "0x1559DCC")]
		public AimSwing()
		{
		}
	}
	[Token(Token = "0x20000AB")]
	public class SecondHandOnGun : MonoBehaviour
	{
		[Token(Token = "0x40005D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AimIK aim;

		[Token(Token = "0x40005D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LimbIK leftArmIK;

		[Token(Token = "0x40005D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform leftHand;

		[Token(Token = "0x40005D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform rightHand;

		[Token(Token = "0x40005DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 leftHandPositionOffset;

		[Token(Token = "0x40005DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 leftHandRotationOffset;

		[Token(Token = "0x40005DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 leftHandPosRelToRight;

		[Token(Token = "0x40005DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Quaternion leftHandRotRelToRight;

		[Token(Token = "0x600083E")]
		[Address(RVA = "0x1573B00", Offset = "0x1573B00", VA = "0x1573B00")]
		private void Start()
		{
		}

		[Token(Token = "0x600083F")]
		[Address(RVA = "0x1573B44", Offset = "0x1573B44", VA = "0x1573B44")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000840")]
		[Address(RVA = "0x1573DA4", Offset = "0x1573DA4", VA = "0x1573DA4")]
		public SecondHandOnGun()
		{
		}
	}
	[Token(Token = "0x20000AC")]
	public class SimpleAimingSystem : MonoBehaviour
	{
		[Token(Token = "0x40005DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA13E90", Offset = "0xA13E90")]
		public AimPoser aimPoser;

		[Token(Token = "0x40005DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA13EC8", Offset = "0xA13EC8")]
		public AimIK aim;

		[Token(Token = "0x40005E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA13F00", Offset = "0xA13F00")]
		public LookAtIK lookAt;

		[Token(Token = "0x40005E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA13F38", Offset = "0xA13F38")]
		public Animator animator;

		[Token(Token = "0x40005E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA13F70", Offset = "0xA13F70")]
		public float crossfadeTime;

		[Token(Token = "0x40005E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA13FA8", Offset = "0xA13FA8")]
		public float minAimDistance;

		[Token(Token = "0x40005E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private AimPoser.Pose aimPose;

		[Token(Token = "0x40005E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AimPoser.Pose lastPose;

		[Token(Token = "0x6000841")]
		[Address(RVA = "0x1573DAC", Offset = "0x1573DAC", VA = "0x1573DAC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000842")]
		[Address(RVA = "0x1573DF0", Offset = "0x1573DF0", VA = "0x1573DF0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000843")]
		[Address(RVA = "0x1573F44", Offset = "0x1573F44", VA = "0x1573F44")]
		private void Pose()
		{
		}

		[Token(Token = "0x6000844")]
		[Address(RVA = "0x1574148", Offset = "0x1574148", VA = "0x1574148")]
		private void LimitAimTarget()
		{
		}

		[Token(Token = "0x6000845")]
		[Address(RVA = "0x1574340", Offset = "0x1574340", VA = "0x1574340")]
		private void DirectCrossFade(string state, float target)
		{
		}

		[Token(Token = "0x6000846")]
		[Address(RVA = "0x1574418", Offset = "0x1574418", VA = "0x1574418")]
		public SimpleAimingSystem()
		{
		}
	}
	[Token(Token = "0x20000AD")]
	public class TerrainOffset : MonoBehaviour
	{
		[Token(Token = "0x40005E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AimIK aimIK;

		[Token(Token = "0x40005E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 raycastOffset;

		[Token(Token = "0x40005E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public LayerMask raycastLayers;

		[Token(Token = "0x40005E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float min;

		[Token(Token = "0x40005EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float max;

		[Token(Token = "0x40005EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float lerpSpeed;

		[Token(Token = "0x40005EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private RaycastHit hit;

		[Token(Token = "0x40005ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 offset;

		[Token(Token = "0x6000847")]
		[Address(RVA = "0x1575AD8", Offset = "0x1575AD8", VA = "0x1575AD8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000848")]
		[Address(RVA = "0x1575D3C", Offset = "0x1575D3C", VA = "0x1575D3C")]
		private Vector3 GetGroundHeightOffset(Vector3 worldPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000849")]
		[Address(RVA = "0x1575F8C", Offset = "0x1575F8C", VA = "0x1575F8C")]
		public TerrainOffset()
		{
		}
	}
	[Token(Token = "0x20000AE")]
	public class BipedIKvsAnimatorIK : MonoBehaviour
	{
		[Token(Token = "0x40005EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0xA13FE0", Offset = "0xA13FE0")]
		public Animator animator;

		[Token(Token = "0x40005EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BipedIK bipedIK;

		[Token(Token = "0x40005F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0xA14018", Offset = "0xA14018")]
		public Transform lookAtTargetBiped;

		[Token(Token = "0x40005F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform lookAtTargetAnimator;

		[Token(Token = "0x40005F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA14050", Offset = "0xA14050")]
		public float lookAtWeight;

		[Token(Token = "0x40005F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA14068", Offset = "0xA14068")]
		public float lookAtBodyWeight;

		[Token(Token = "0x40005F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA14080", Offset = "0xA14080")]
		public float lookAtHeadWeight;

		[Token(Token = "0x40005F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA14098", Offset = "0xA14098")]
		public float lookAtEyesWeight;

		[Token(Token = "0x40005F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA140B0", Offset = "0xA140B0")]
		public float lookAtClampWeight;

		[Token(Token = "0x40005F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA140C8", Offset = "0xA140C8")]
		public float lookAtClampWeightHead;

		[Token(Token = "0x40005F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA140E0", Offset = "0xA140E0")]
		public float lookAtClampWeightEyes;

		[Token(Token = "0x40005F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0xA140F8", Offset = "0xA140F8")]
		public Transform footTargetBiped;

		[Token(Token = "0x40005FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform footTargetAnimator;

		[Token(Token = "0x40005FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA14130", Offset = "0xA14130")]
		public float footPositionWeight;

		[Token(Token = "0x40005FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA14148", Offset = "0xA14148")]
		public float footRotationWeight;

		[Token(Token = "0x40005FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0xA14160", Offset = "0xA14160")]
		public Transform handTargetBiped;

		[Token(Token = "0x40005FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Transform handTargetAnimator;

		[Token(Token = "0x40005FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA14198", Offset = "0xA14198")]
		public float handPositionWeight;

		[Token(Token = "0x4000600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA141B0", Offset = "0xA141B0")]
		public float handRotationWeight;

		[Token(Token = "0x600084A")]
		[Address(RVA = "0x155BD64", Offset = "0x155BD64", VA = "0x155BD64")]
		private void OnAnimatorIK(int layer)
		{
		}

		[Token(Token = "0x600084B")]
		[Address(RVA = "0x155C210", Offset = "0x155C210", VA = "0x155C210")]
		public BipedIKvsAnimatorIK()
		{
		}
	}
	[Token(Token = "0x20000AF")]
	public class MechSpider : MonoBehaviour
	{
		[Token(Token = "0x4000601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LayerMask raycastLayers;

		[Token(Token = "0x4000602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float scale;

		[Token(Token = "0x4000603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform body;

		[Token(Token = "0x4000604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MechSpiderLeg[] legs;

		[Token(Token = "0x4000605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float legRotationWeight;

		[Token(Token = "0x4000606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float rootPositionSpeed;

		[Token(Token = "0x4000607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float rootRotationSpeed;

		[Token(Token = "0x4000608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float breatheSpeed;

		[Token(Token = "0x4000609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float breatheMagnitude;

		[Token(Token = "0x400060A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float height;

		[Token(Token = "0x400060B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float minHeight;

		[Token(Token = "0x400060C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float raycastHeight;

		[Token(Token = "0x400060D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float raycastDistance;

		[Token(Token = "0x400060E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 lastPosition;

		[Token(Token = "0x400060F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 defaultBodyLocalPosition;

		[Token(Token = "0x4000610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float sine;

		[Token(Token = "0x4000611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private RaycastHit rootHit;

		[Token(Token = "0x600084C")]
		[Address(RVA = "0x1569994", Offset = "0x1569994", VA = "0x1569994")]
		private void Update()
		{
		}

		[Token(Token = "0x600084D")]
		[Address(RVA = "0x156A3C8", Offset = "0x156A3C8", VA = "0x156A3C8")]
		private Vector3 GetLegCentroid()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600084E")]
		[Address(RVA = "0x156A0B0", Offset = "0x156A0B0", VA = "0x156A0B0")]
		private Vector3 GetLegsPlaneNormal()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600084F")]
		[Address(RVA = "0x156A570", Offset = "0x156A570", VA = "0x156A570")]
		public MechSpider()
		{
		}
	}
	[Token(Token = "0x20000B0")]
	public class MechSpiderController : MonoBehaviour
	{
		[Token(Token = "0x4000612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MechSpider mechSpider;

		[Token(Token = "0x4000613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform cameraTransform;

		[Token(Token = "0x4000614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float speed;

		[Token(Token = "0x4000615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float turnSpeed;

		[Token(Token = "0x170000A7")]
		public Vector3 inputVector
		{
			[Token(Token = "0x6000850")]
			[Address(RVA = "0x156A59C", Offset = "0x156A59C", VA = "0x156A59C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000851")]
		[Address(RVA = "0x156A63C", Offset = "0x156A63C", VA = "0x156A63C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000852")]
		[Address(RVA = "0x156A8D4", Offset = "0x156A8D4", VA = "0x156A8D4")]
		public MechSpiderController()
		{
		}
	}
	[Token(Token = "0x20000B1")]
	public class MechSpiderLeg : MonoBehaviour
	{
		[Token(Token = "0x2000523")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D408", Offset = "0xA0D408")]
		private sealed class <Step>d__33 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MechSpiderLeg <>4__this;

			[Token(Token = "0x4001B73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 stepStartPosition;

			[Token(Token = "0x4001B74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public Vector3 targetPosition;

			[Token(Token = "0x170004BD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60027B5")]
				[Address(RVA = "0x156CCD8", Offset = "0x156CCD8", VA = "0x156CCD8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004BE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60027B7")]
				[Address(RVA = "0x156CD40", Offset = "0x156CD40", VA = "0x156CD40", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60027B2")]
			[Address(RVA = "0x156C95C", Offset = "0x156C95C", VA = "0x156C95C")]
			[DebuggerHidden]
			public <Step>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x60027B3")]
			[Address(RVA = "0x156C988", Offset = "0x156C988", VA = "0x156C988", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60027B4")]
			[Address(RVA = "0x156C98C", Offset = "0x156C98C", VA = "0x156C98C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60027B6")]
			[Address(RVA = "0x156CCE0", Offset = "0x156CCE0", VA = "0x156CCE0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MechSpider mechSpider;

		[Token(Token = "0x4000617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MechSpiderLeg unSync;

		[Token(Token = "0x4000618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 offset;

		[Token(Token = "0x4000619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float minDelay;

		[Token(Token = "0x400061A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float maxOffset;

		[Token(Token = "0x400061B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float stepSpeed;

		[Token(Token = "0x400061C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float footHeight;

		[Token(Token = "0x400061D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float velocityPrediction;

		[Token(Token = "0x400061E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float raycastFocus;

		[Token(Token = "0x400061F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AnimationCurve yOffset;

		[Token(Token = "0x4000620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform foot;

		[Token(Token = "0x4000621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vector3 footUpAxis;

		[Token(Token = "0x4000622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float footRotationSpeed;

		[Token(Token = "0x4000623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public ParticleSystem sand;

		[Token(Token = "0x4000624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private IK ik;

		[Token(Token = "0x4000625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float stepProgress;

		[Token(Token = "0x4000626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float lastStepTime;

		[Token(Token = "0x4000627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 defaultPosition;

		[Token(Token = "0x4000628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private RaycastHit hit;

		[Token(Token = "0x4000629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Quaternion lastFootLocalRotation;

		[Token(Token = "0x400062A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Vector3 smoothHitNormal;

		[Token(Token = "0x400062B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private Vector3 lastStepPosition;

		[Token(Token = "0x170000A8")]
		public bool isStepping
		{
			[Token(Token = "0x6000853")]
			[Address(RVA = "0x156A8E8", Offset = "0x156A8E8", VA = "0x156A8E8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000A9")]
		public Vector3 position
		{
			[Token(Token = "0x6000854")]
			[Address(RVA = "0x156A53C", Offset = "0x156A53C", VA = "0x156A53C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000855")]
			[Address(RVA = "0x156A8FC", Offset = "0x156A8FC", VA = "0x156A8FC")]
			set
			{
			}
		}

		[Token(Token = "0x6000856")]
		[Address(RVA = "0x156A94C", Offset = "0x156A94C", VA = "0x156A94C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000857")]
		[Address(RVA = "0x156AB98", Offset = "0x156AB98", VA = "0x156AB98")]
		private void AfterIK()
		{
		}

		[Token(Token = "0x6000858")]
		[Address(RVA = "0x156ADB4", Offset = "0x156ADB4", VA = "0x156ADB4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000859")]
		[Address(RVA = "0x156B060", Offset = "0x156B060", VA = "0x156B060")]
		private Vector3 GetStepTarget(out bool stepFound, float focus, float distance)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600085A")]
		[Address(RVA = "0x156B420", Offset = "0x156B420", VA = "0x156B420")]
		private void UpdatePosition(float distance)
		{
		}

		[Token(Token = "0x600085B")]
		[Address(RVA = "0x156B67C", Offset = "0x156B67C", VA = "0x156B67C")]
		private void Update()
		{
		}

		[Token(Token = "0x600085C")]
		[Address(RVA = "0x156AFB4", Offset = "0x156AFB4", VA = "0x156AFB4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA28AAC", Offset = "0xA28AAC")]
		private IEnumerator Step(Vector3 stepStartPosition, Vector3 targetPosition)
		{
			return null;
		}

		[Token(Token = "0x600085D")]
		[Address(RVA = "0x156B8B4", Offset = "0x156B8B4", VA = "0x156B8B4")]
		public MechSpiderLeg()
		{
		}
	}
	[Token(Token = "0x20000B2")]
	public class MechSpiderParticles : MonoBehaviour
	{
		[Token(Token = "0x400062C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MechSpiderController mechSpiderController;

		[Token(Token = "0x400062D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ParticleSystem particles;

		[Token(Token = "0x600085E")]
		[Address(RVA = "0x156CD48", Offset = "0x156CD48", VA = "0x156CD48")]
		private void Start()
		{
		}

		[Token(Token = "0x600085F")]
		[Address(RVA = "0x156CDF4", Offset = "0x156CDF4", VA = "0x156CDF4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000860")]
		[Address(RVA = "0x156D08C", Offset = "0x156D08C", VA = "0x156D08C")]
		public MechSpiderParticles()
		{
		}
	}
	[Token(Token = "0x20000B3")]
	public class AnimationWarping : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x2000524")]
		public struct Warp
		{
			[Token(Token = "0x4001B75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA23EA8", Offset = "0xA23EA8")]
			public int animationLayer;

			[Token(Token = "0x4001B76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA23EE0", Offset = "0xA23EE0")]
			public string animationState;

			[Token(Token = "0x4001B77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA23F18", Offset = "0xA23F18")]
			public AnimationCurve weightCurve;

			[Token(Token = "0x4001B78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA23F50", Offset = "0xA23F50")]
			public Transform warpFrom;

			[Token(Token = "0x4001B79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA23F88", Offset = "0xA23F88")]
			public Transform warpTo;

			[Token(Token = "0x4001B7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA23FC0", Offset = "0xA23FC0")]
			public FullBodyBipedEffector effector;
		}

		[Serializable]
		[Token(Token = "0x2000525")]
		public enum EffectorMode
		{
			[Token(Token = "0x4001B7C")]
			PositionOffset,
			[Token(Token = "0x4001B7D")]
			Position
		}

		[Token(Token = "0x400062E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA141C8", Offset = "0xA141C8")]
		public Animator animator;

		[Token(Token = "0x400062F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA14200", Offset = "0xA14200")]
		public EffectorMode effectorMode;

		[Token(Token = "0x4000630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xA14238", Offset = "0xA14238")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA14238", Offset = "0xA14238")]
		public Warp[] warps;

		[Token(Token = "0x4000631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private EffectorMode lastMode;

		[Token(Token = "0x6000861")]
		[Address(RVA = "0x1559E44", Offset = "0x1559E44", VA = "0x1559E44", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000862")]
		[Address(RVA = "0x1559E70", Offset = "0x1559E70", VA = "0x1559E70")]
		public float GetWarpWeight(int warpIndex)
		{
			return default(float);
		}

		[Token(Token = "0x6000863")]
		[Address(RVA = "0x155A078", Offset = "0x155A078", VA = "0x155A078", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x6000864")]
		[Address(RVA = "0x155A42C", Offset = "0x155A42C", VA = "0x155A42C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000865")]
		[Address(RVA = "0x155A4CC", Offset = "0x155A4CC", VA = "0x155A4CC")]
		public AnimationWarping()
		{
		}
	}
	[Token(Token = "0x20000B4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA06998", Offset = "0xA06998")]
	public class AnimatorController3rdPerson : MonoBehaviour
	{
		[Token(Token = "0x4000632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float rotateSpeed;

		[Token(Token = "0x4000633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float blendSpeed;

		[Token(Token = "0x4000634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float maxAngle;

		[Token(Token = "0x4000635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float moveSpeed;

		[Token(Token = "0x4000636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float rootMotionWeight;

		[Token(Token = "0x4000637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Animator animator;

		[Token(Token = "0x4000638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Vector3 moveBlend;

		[Token(Token = "0x4000639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		protected Vector3 moveInput;

		[Token(Token = "0x400063A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Vector3 velocity;

		[Token(Token = "0x6000866")]
		[Address(RVA = "0x155A4D4", Offset = "0x155A4D4", VA = "0x155A4D4", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000867")]
		[Address(RVA = "0x155A52C", Offset = "0x155A52C", VA = "0x155A52C")]
		private void OnAnimatorMove()
		{
		}

		[Token(Token = "0x6000868")]
		[Address(RVA = "0x155A764", Offset = "0x155A764", VA = "0x155A764", Slot = "5")]
		public virtual void Move(Vector3 moveInput, bool isMoving, Vector3 faceDirection, Vector3 aimTarget)
		{
		}

		[Token(Token = "0x6000869")]
		[Address(RVA = "0x155A9C8", Offset = "0x155A9C8", VA = "0x155A9C8")]
		public AnimatorController3rdPerson()
		{
		}
	}
	[Token(Token = "0x20000B5")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA069FC", Offset = "0xA069FC")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA069FC", Offset = "0xA069FC")]
	public class AnimatorController3rdPersonIK : AnimatorController3rdPerson
	{
		[Token(Token = "0x400063B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA14288", Offset = "0xA14288")]
		public float headLookWeight;

		[Token(Token = "0x400063C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vector3 gunHoldOffset;

		[Token(Token = "0x400063D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public Vector3 leftHandOffset;

		[Token(Token = "0x400063E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Recoil recoil;

		[Token(Token = "0x400063F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private AimIK aim;

		[Token(Token = "0x4000640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private FullBodyBipedIK ik;

		[Token(Token = "0x4000641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 headLookAxis;

		[Token(Token = "0x4000642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Vector3 leftHandPosRelToRightHand;

		[Token(Token = "0x4000643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Quaternion leftHandRotRelToRightHand;

		[Token(Token = "0x4000644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Vector3 aimTarget;

		[Token(Token = "0x4000645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private Quaternion rightHandRotation;

		[Token(Token = "0x600086A")]
		[Address(RVA = "0x155A9DC", Offset = "0x155A9DC", VA = "0x155A9DC", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600086B")]
		[Address(RVA = "0x155AB48", Offset = "0x155AB48", VA = "0x155AB48", Slot = "5")]
		public override void Move(Vector3 moveInput, bool isMoving, Vector3 faceDirection, Vector3 aimTarget)
		{
		}

		[Token(Token = "0x600086C")]
		[Address(RVA = "0x155ABC4", Offset = "0x155ABC4", VA = "0x155ABC4")]
		private void Read()
		{
		}

		[Token(Token = "0x600086D")]
		[Address(RVA = "0x155AD1C", Offset = "0x155AD1C", VA = "0x155AD1C")]
		private void AimIK()
		{
		}

		[Token(Token = "0x600086E")]
		[Address(RVA = "0x155AD64", Offset = "0x155AD64", VA = "0x155AD64")]
		private void FBBIK()
		{
		}

		[Token(Token = "0x600086F")]
		[Address(RVA = "0x155B35C", Offset = "0x155B35C", VA = "0x155B35C")]
		private void OnPreRead()
		{
		}

		[Token(Token = "0x6000870")]
		[Address(RVA = "0x155B120", Offset = "0x155B120", VA = "0x155B120")]
		private void HeadLookAt(Vector3 lookAtTarget)
		{
		}

		[Token(Token = "0x6000871")]
		[Address(RVA = "0x155B6B4", Offset = "0x155B6B4", VA = "0x155B6B4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000872")]
		[Address(RVA = "0x155B7AC", Offset = "0x155B7AC", VA = "0x155B7AC")]
		public AnimatorController3rdPersonIK()
		{
		}
	}
	[Token(Token = "0x20000B6")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA06A88", Offset = "0xA06A88")]
	public class CharacterAnimationThirdPersonIK : CharacterAnimationThirdPerson
	{
		[Token(Token = "0x4000646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private FullBodyBipedIK ik;

		[Token(Token = "0x6000873")]
		[Address(RVA = "0x155DA20", Offset = "0x155DA20", VA = "0x155DA20", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000874")]
		[Address(RVA = "0x155DA80", Offset = "0x155DA80", VA = "0x155DA80", Slot = "7")]
		protected override void LateUpdate()
		{
		}

		[Token(Token = "0x6000875")]
		[Address(RVA = "0x155DD44", Offset = "0x155DD44", VA = "0x155DD44")]
		private void RotateEffector(IKEffector effector, Quaternion rotation, float mlp)
		{
		}

		[Token(Token = "0x6000876")]
		[Address(RVA = "0x155DEFC", Offset = "0x155DEFC", VA = "0x155DEFC")]
		public CharacterAnimationThirdPersonIK()
		{
		}
	}
	[Token(Token = "0x20000B7")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA06AEC", Offset = "0xA06AEC")]
	public class CharacterController3rdPerson : MonoBehaviour
	{
		[Token(Token = "0x4000647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CameraController cam;

		[Token(Token = "0x4000648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AnimatorController3rdPerson animatorController;

		[Token(Token = "0x170000AA")]
		private static Vector3 inputVector
		{
			[Token(Token = "0x6000879")]
			[Address(RVA = "0x155ED30", Offset = "0x155ED30", VA = "0x155ED30")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170000AB")]
		private static Vector3 inputVectorRaw
		{
			[Token(Token = "0x600087A")]
			[Address(RVA = "0x155EDD0", Offset = "0x155EDD0", VA = "0x155EDD0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000877")]
		[Address(RVA = "0x155EA7C", Offset = "0x155EA7C", VA = "0x155EA7C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000878")]
		[Address(RVA = "0x155EAEC", Offset = "0x155EAEC", VA = "0x155EAEC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600087B")]
		[Address(RVA = "0x155EE70", Offset = "0x155EE70", VA = "0x155EE70")]
		public CharacterController3rdPerson()
		{
		}
	}
	[Token(Token = "0x20000B8")]
	public class EffectorOffset : OffsetModifier
	{
		[Token(Token = "0x4000649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA142A0", Offset = "0xA142A0")]
		public float handsMaintainRelativePositionWeight;

		[Token(Token = "0x400064A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 bodyOffset;

		[Token(Token = "0x400064B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 leftShoulderOffset;

		[Token(Token = "0x400064C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 rightShoulderOffset;

		[Token(Token = "0x400064D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Vector3 leftThighOffset;

		[Token(Token = "0x400064E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vector3 rightThighOffset;

		[Token(Token = "0x400064F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public Vector3 leftHandOffset;

		[Token(Token = "0x4000650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Vector3 rightHandOffset;

		[Token(Token = "0x4000651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public Vector3 leftFootOffset;

		[Token(Token = "0x4000652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Vector3 rightFootOffset;

		[Token(Token = "0x600087C")]
		[Address(RVA = "0x1563584", Offset = "0x1563584", VA = "0x1563584", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x600087D")]
		[Address(RVA = "0x1563B68", Offset = "0x1563B68", VA = "0x1563B68")]
		public EffectorOffset()
		{
		}
	}
	[Token(Token = "0x20000B9")]
	public class ExplosionDemo : MonoBehaviour
	{
		[Token(Token = "0x4000653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SimpleLocomotion character;

		[Token(Token = "0x4000654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float forceMlp;

		[Token(Token = "0x4000655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float upForce;

		[Token(Token = "0x4000656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float weightFalloffSpeed;

		[Token(Token = "0x4000657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve weightFalloff;

		[Token(Token = "0x4000658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AnimationCurve explosionForceByDistance;

		[Token(Token = "0x4000659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AnimationCurve scale;

		[Token(Token = "0x400065A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float weight;

		[Token(Token = "0x400065B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 defaultScale;

		[Token(Token = "0x400065C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Rigidbody r;

		[Token(Token = "0x400065D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private FullBodyBipedIK ik;

		[Token(Token = "0x600087E")]
		[Address(RVA = "0x1563B70", Offset = "0x1563B70", VA = "0x1563B70")]
		private void Start()
		{
		}

		[Token(Token = "0x600087F")]
		[Address(RVA = "0x1563C10", Offset = "0x1563C10", VA = "0x1563C10")]
		private void Update()
		{
		}

		[Token(Token = "0x6000880")]
		[Address(RVA = "0x156408C", Offset = "0x156408C", VA = "0x156408C")]
		private void SetEffectorWeights(float w)
		{
		}

		[Token(Token = "0x6000881")]
		[Address(RVA = "0x1564138", Offset = "0x1564138", VA = "0x1564138")]
		public ExplosionDemo()
		{
		}
	}
	[Token(Token = "0x20000BA")]
	public class FBBIKSettings : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000526")]
		public class Limb
		{
			[Token(Token = "0x4001B7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FBIKChain.Smoothing reachSmoothing;

			[Token(Token = "0x4001B7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float maintainRelativePositionWeight;

			[Token(Token = "0x4001B80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float mappingWeight;

			[Token(Token = "0x60027B8")]
			[Address(RVA = "0x156430C", Offset = "0x156430C", VA = "0x156430C")]
			public void Apply(FullBodyBipedChain chain, IKSolverFullBodyBiped solver)
			{
			}

			[Token(Token = "0x60027B9")]
			[Address(RVA = "0x1564440", Offset = "0x1564440", VA = "0x1564440")]
			public Limb()
			{
			}
		}

		[Token(Token = "0x400065E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x400065F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool disableAfterStart;

		[Token(Token = "0x4000660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Limb leftArm;

		[Token(Token = "0x4000661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Limb rightArm;

		[Token(Token = "0x4000662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Limb leftLeg;

		[Token(Token = "0x4000663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Limb rightLeg;

		[Token(Token = "0x4000664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float rootPin;

		[Token(Token = "0x4000665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool bodyEffectChildNodes;

		[Token(Token = "0x6000882")]
		[Address(RVA = "0x15641C0", Offset = "0x15641C0", VA = "0x15641C0")]
		public void UpdateSettings()
		{
		}

		[Token(Token = "0x6000883")]
		[Address(RVA = "0x1564390", Offset = "0x1564390", VA = "0x1564390")]
		private void Start()
		{
		}

		[Token(Token = "0x6000884")]
		[Address(RVA = "0x156442C", Offset = "0x156442C", VA = "0x156442C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000885")]
		[Address(RVA = "0x1564430", Offset = "0x1564430", VA = "0x1564430")]
		public FBBIKSettings()
		{
		}
	}
	[Token(Token = "0x20000BB")]
	public class FBIKBendGoal : MonoBehaviour
	{
		[Token(Token = "0x4000666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x4000667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FullBodyBipedChain chain;

		[Token(Token = "0x4000668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float weight;

		[Token(Token = "0x6000886")]
		[Address(RVA = "0x1564450", Offset = "0x1564450", VA = "0x1564450")]
		private void Start()
		{
		}

		[Token(Token = "0x6000887")]
		[Address(RVA = "0x15644BC", Offset = "0x15644BC", VA = "0x15644BC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000888")]
		[Address(RVA = "0x1564594", Offset = "0x1564594", VA = "0x1564594")]
		public FBIKBendGoal()
		{
		}
	}
	[Token(Token = "0x20000BC")]
	public class FBIKBoxing : MonoBehaviour
	{
		[Token(Token = "0x4000669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA142B8", Offset = "0xA142B8")]
		public Transform target;

		[Token(Token = "0x400066A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA142F0", Offset = "0xA142F0")]
		public Transform pin;

		[Token(Token = "0x400066B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA14328", Offset = "0xA14328")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x400066C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA14360", Offset = "0xA14360")]
		public AimIK aim;

		[Token(Token = "0x400066D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA14398", Offset = "0xA14398")]
		public float weight;

		[Token(Token = "0x400066E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA143D0", Offset = "0xA143D0")]
		public FullBodyBipedEffector effector;

		[Token(Token = "0x400066F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA14408", Offset = "0xA14408")]
		public AnimationCurve aimWeight;

		[Token(Token = "0x4000670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Animator animator;

		[Token(Token = "0x6000889")]
		[Address(RVA = "0x156459C", Offset = "0x156459C", VA = "0x156459C")]
		private void Start()
		{
		}

		[Token(Token = "0x600088A")]
		[Address(RVA = "0x15645F4", Offset = "0x15645F4", VA = "0x15645F4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600088B")]
		[Address(RVA = "0x1564790", Offset = "0x1564790", VA = "0x1564790")]
		public FBIKBoxing()
		{
		}
	}
	[Token(Token = "0x20000BD")]
	public class FBIKHandsOnProp : MonoBehaviour
	{
		[Token(Token = "0x4000671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x4000672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool leftHanded;

		[Token(Token = "0x600088C")]
		[Address(RVA = "0x1564798", Offset = "0x1564798", VA = "0x1564798")]
		private void Awake()
		{
		}

		[Token(Token = "0x600088D")]
		[Address(RVA = "0x1564858", Offset = "0x1564858", VA = "0x1564858")]
		private void OnPreRead()
		{
		}

		[Token(Token = "0x600088E")]
		[Address(RVA = "0x15648E8", Offset = "0x15648E8", VA = "0x15648E8")]
		private void HandsOnProp(IKEffector mainHand, IKEffector otherHand)
		{
		}

		[Token(Token = "0x600088F")]
		[Address(RVA = "0x1564DFC", Offset = "0x1564DFC", VA = "0x1564DFC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000890")]
		[Address(RVA = "0x1564EF4", Offset = "0x1564EF4", VA = "0x1564EF4")]
		public FBIKHandsOnProp()
		{
		}
	}
	[Token(Token = "0x20000BE")]
	public class FPSAiming : MonoBehaviour
	{
		[Token(Token = "0x4000673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA14440", Offset = "0xA14440")]
		public float aimWeight;

		[Token(Token = "0x4000674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA14458", Offset = "0xA14458")]
		public float sightWeight;

		[Token(Token = "0x4000675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA14470", Offset = "0xA14470")]
		public float maxAngle;

		[Token(Token = "0x4000676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 aimOffset;

		[Token(Token = "0x4000677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool animatePhysics;

		[Token(Token = "0x4000678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform gun;

		[Token(Token = "0x4000679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform gunTarget;

		[Token(Token = "0x400067A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x400067B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AimIK gunAim;

		[Token(Token = "0x400067C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public CameraControllerFPS cam;

		[Token(Token = "0x400067D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Recoil recoil;

		[Token(Token = "0x400067E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA1448C", Offset = "0xA1448C")]
		public float cameraRecoilWeight;

		[Token(Token = "0x400067F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public Vector3 gunTargetDefaultLocalPosition;

		[Token(Token = "0x4000680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Vector3 gunTargetDefaultLocalRotation;

		[Token(Token = "0x4000681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector3 camDefaultLocalPosition;

		[Token(Token = "0x4000682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 camRelativeToGunTarget;

		[Token(Token = "0x4000683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private bool updateFrame;

		[Token(Token = "0x6000891")]
		[Address(RVA = "0x1565260", Offset = "0x1565260", VA = "0x1565260")]
		private void Start()
		{
		}

		[Token(Token = "0x6000892")]
		[Address(RVA = "0x15653C0", Offset = "0x15653C0", VA = "0x15653C0")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000893")]
		[Address(RVA = "0x15653CC", Offset = "0x15653CC", VA = "0x15653CC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000894")]
		[Address(RVA = "0x156570C", Offset = "0x156570C", VA = "0x156570C")]
		private void Aiming()
		{
		}

		[Token(Token = "0x6000895")]
		[Address(RVA = "0x1565974", Offset = "0x1565974", VA = "0x1565974")]
		private void LookDownTheSight()
		{
		}

		[Token(Token = "0x6000896")]
		[Address(RVA = "0x1565490", Offset = "0x1565490", VA = "0x1565490")]
		private void RotateCharacter()
		{
		}

		[Token(Token = "0x6000897")]
		[Address(RVA = "0x1566394", Offset = "0x1566394", VA = "0x1566394")]
		public FPSAiming()
		{
		}
	}
	[Token(Token = "0x20000BF")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA06B50", Offset = "0xA06B50")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA06B50", Offset = "0xA06B50")]
	public class FPSCharacter : MonoBehaviour
	{
		[Token(Token = "0x4000684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA144A4", Offset = "0xA144A4")]
		public float walkSpeed;

		[Token(Token = "0x4000685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float sVel;

		[Token(Token = "0x4000686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator animator;

		[Token(Token = "0x4000687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private FPSAiming FPSAiming;

		[Token(Token = "0x6000898")]
		[Address(RVA = "0x15663B4", Offset = "0x15663B4", VA = "0x15663B4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000899")]
		[Address(RVA = "0x1566424", Offset = "0x1566424", VA = "0x1566424")]
		private void Update()
		{
		}

		[Token(Token = "0x600089A")]
		[Address(RVA = "0x1566548", Offset = "0x1566548", VA = "0x1566548")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x600089B")]
		[Address(RVA = "0x15665F8", Offset = "0x15665F8", VA = "0x15665F8")]
		public FPSCharacter()
		{
		}
	}
	[Token(Token = "0x20000C0")]
	public class HitReactionTrigger : MonoBehaviour
	{
		[Token(Token = "0x4000688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HitReaction hitReaction;

		[Token(Token = "0x4000689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float hitForce;

		[Token(Token = "0x400068A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string colliderName;

		[Token(Token = "0x600089C")]
		[Address(RVA = "0x156739C", Offset = "0x156739C", VA = "0x156739C")]
		private void Update()
		{
		}

		[Token(Token = "0x600089D")]
		[Address(RVA = "0x156755C", Offset = "0x156755C", VA = "0x156755C")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x600089E")]
		[Address(RVA = "0x1567720", Offset = "0x1567720", VA = "0x1567720")]
		public HitReactionTrigger()
		{
		}
	}
	[Token(Token = "0x20000C1")]
	public class HoldingHands : MonoBehaviour
	{
		[Token(Token = "0x400068B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FullBodyBipedIK rightHandChar;

		[Token(Token = "0x400068C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FullBodyBipedIK leftHandChar;

		[Token(Token = "0x400068D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform rightHandTarget;

		[Token(Token = "0x400068E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform leftHandTarget;

		[Token(Token = "0x400068F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float crossFade;

		[Token(Token = "0x4000690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float speed;

		[Token(Token = "0x4000691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Quaternion rightHandRotation;

		[Token(Token = "0x4000692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion leftHandRotation;

		[Token(Token = "0x600089F")]
		[Address(RVA = "0x1567AC4", Offset = "0x1567AC4", VA = "0x1567AC4")]
		private void Start()
		{
		}

		[Token(Token = "0x60008A0")]
		[Address(RVA = "0x1567C70", Offset = "0x1567C70", VA = "0x1567C70")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60008A1")]
		[Address(RVA = "0x156802C", Offset = "0x156802C", VA = "0x156802C")]
		public HoldingHands()
		{
		}
	}
	[Token(Token = "0x20000C2")]
	public class InteractionC2CDemo : MonoBehaviour
	{
		[Token(Token = "0x4000693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractionSystem character1;

		[Token(Token = "0x4000694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractionSystem character2;

		[Token(Token = "0x4000695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public InteractionObject handShake;

		[Token(Token = "0x60008A2")]
		[Address(RVA = "0x156803C", Offset = "0x156803C", VA = "0x156803C")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60008A3")]
		[Address(RVA = "0x1568170", Offset = "0x1568170", VA = "0x1568170")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60008A4")]
		[Address(RVA = "0x15682C0", Offset = "0x15682C0", VA = "0x15682C0")]
		public InteractionC2CDemo()
		{
		}
	}
	[Token(Token = "0x20000C3")]
	public class InteractionDemo : MonoBehaviour
	{
		[Token(Token = "0x4000696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractionSystem interactionSystem;

		[Token(Token = "0x4000697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool interrupt;

		[Token(Token = "0x4000698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public InteractionObject ball;

		[Token(Token = "0x4000699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public InteractionObject benchMain;

		[Token(Token = "0x400069A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public InteractionObject benchHands;

		[Token(Token = "0x400069B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public InteractionObject button;

		[Token(Token = "0x400069C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractionObject cigarette;

		[Token(Token = "0x400069D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public InteractionObject door;

		[Token(Token = "0x400069E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool isSitting;

		[Token(Token = "0x60008A5")]
		[Address(RVA = "0x15682C8", Offset = "0x15682C8", VA = "0x15682C8")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60008A6")]
		[Address(RVA = "0x1568998", Offset = "0x1568998", VA = "0x1568998")]
		public InteractionDemo()
		{
		}
	}
	[Token(Token = "0x20000C4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA06BDC", Offset = "0xA06BDC")]
	public class InteractionSystemTestGUI : MonoBehaviour
	{
		[Token(Token = "0x400069F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA144BC", Offset = "0xA144BC")]
		public InteractionObject interactionObject;

		[Token(Token = "0x40006A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA144F4", Offset = "0xA144F4")]
		public FullBodyBipedEffector[] effectors;

		[Token(Token = "0x40006A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private InteractionSystem interactionSystem;

		[Token(Token = "0x60008A7")]
		[Address(RVA = "0x15689A0", Offset = "0x15689A0", VA = "0x15689A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60008A8")]
		[Address(RVA = "0x15689F8", Offset = "0x15689F8", VA = "0x15689F8")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60008A9")]
		[Address(RVA = "0x1568D04", Offset = "0x1568D04", VA = "0x1568D04")]
		public InteractionSystemTestGUI()
		{
		}
	}
	[Token(Token = "0x20000C5")]
	public class KissingRig : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000527")]
		public class Partner
		{
			[Token(Token = "0x4001B81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FullBodyBipedIK ik;

			[Token(Token = "0x4001B82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform mouth;

			[Token(Token = "0x4001B83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform mouthTarget;

			[Token(Token = "0x4001B84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform touchTargetLeftHand;

			[Token(Token = "0x4001B85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Transform touchTargetRightHand;

			[Token(Token = "0x4001B86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float bodyWeightHorizontal;

			[Token(Token = "0x4001B87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public float bodyWeightVertical;

			[Token(Token = "0x4001B88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public float neckRotationWeight;

			[Token(Token = "0x4001B89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public float headTiltAngle;

			[Token(Token = "0x4001B8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Vector3 headTiltAxis;

			[Token(Token = "0x4001B8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private Quaternion neckRotation;

			[Token(Token = "0x170004BF")]
			private Transform neck
			{
				[Token(Token = "0x60027BC")]
				[Address(RVA = "0x1569724", Offset = "0x1569724", VA = "0x1569724")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60027BA")]
			[Address(RVA = "0x1568E5C", Offset = "0x1568E5C", VA = "0x1568E5C")]
			public void Initiate()
			{
			}

			[Token(Token = "0x60027BB")]
			[Address(RVA = "0x1568EDC", Offset = "0x1568EDC", VA = "0x1568EDC")]
			public void Update(float weight)
			{
			}

			[Token(Token = "0x60027BD")]
			[Address(RVA = "0x1569548", Offset = "0x1569548", VA = "0x1569548")]
			private void InverseTransformEffector(FullBodyBipedEffector effector, Transform target, Vector3 targetPosition, float weight)
			{
			}

			[Token(Token = "0x60027BE")]
			[Address(RVA = "0x156977C", Offset = "0x156977C", VA = "0x156977C")]
			public Partner()
			{
			}
		}

		[Token(Token = "0x40006A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Partner partner1;

		[Token(Token = "0x40006A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Partner partner2;

		[Token(Token = "0x40006A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float weight;

		[Token(Token = "0x40006A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int iterations;

		[Token(Token = "0x60008AA")]
		[Address(RVA = "0x1568E28", Offset = "0x1568E28", VA = "0x1568E28")]
		private void Start()
		{
		}

		[Token(Token = "0x60008AB")]
		[Address(RVA = "0x1568E7C", Offset = "0x1568E7C", VA = "0x1568E7C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60008AC")]
		[Address(RVA = "0x1569538", Offset = "0x1569538", VA = "0x1569538")]
		public KissingRig()
		{
		}
	}
	[Token(Token = "0x20000C6")]
	public class MotionAbsorb : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x2000528")]
		public enum Mode
		{
			[Token(Token = "0x4001B8D")]
			Position,
			[Token(Token = "0x4001B8E")]
			PositionOffset
		}

		[Serializable]
		[Token(Token = "0x2000529")]
		public class Absorber
		{
			[Token(Token = "0x4001B8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA23FF8", Offset = "0xA23FF8")]
			public FullBodyBipedEffector effector;

			[Token(Token = "0x4001B90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA24030", Offset = "0xA24030")]
			public float weight;

			[Token(Token = "0x4001B91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Vector3 position;

			[Token(Token = "0x4001B92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private Quaternion rotation;

			[Token(Token = "0x4001B93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private IKEffector e;

			[Token(Token = "0x60027BF")]
			[Address(RVA = "0x156D1F4", Offset = "0x156D1F4", VA = "0x156D1F4")]
			public void SetToBone(IKSolverFullBodyBiped solver, Mode mode)
			{
			}

			[Token(Token = "0x60027C0")]
			[Address(RVA = "0x156D3D4", Offset = "0x156D3D4", VA = "0x156D3D4")]
			public void UpdateEffectorWeights(float w)
			{
			}

			[Token(Token = "0x60027C1")]
			[Address(RVA = "0x156D410", Offset = "0x156D410", VA = "0x156D410")]
			public void SetPosition(float w)
			{
			}

			[Token(Token = "0x60027C2")]
			[Address(RVA = "0x156D5C0", Offset = "0x156D5C0", VA = "0x156D5C0")]
			public void SetRotation(float w)
			{
			}

			[Token(Token = "0x60027C3")]
			[Address(RVA = "0x156D7E4", Offset = "0x156D7E4", VA = "0x156D7E4")]
			public Absorber()
			{
			}
		}

		[Token(Token = "0x40006A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1452C", Offset = "0xA1452C")]
		public Mode mode;

		[Token(Token = "0x40006A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA14564", Offset = "0xA14564")]
		public Absorber[] absorbers;

		[Token(Token = "0x40006A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1459C", Offset = "0xA1459C")]
		public AnimationCurve falloff;

		[Token(Token = "0x40006A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA145D4", Offset = "0xA145D4")]
		public float falloffSpeed;

		[Token(Token = "0x40006AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float timer;

		[Token(Token = "0x40006AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float w;

		[Token(Token = "0x40006AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Mode initialMode;

		[Token(Token = "0x60008AD")]
		[Address(RVA = "0x156D094", Offset = "0x156D094", VA = "0x156D094", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60008AE")]
		[Address(RVA = "0x156D168", Offset = "0x156D168", VA = "0x156D168")]
		private void OnCollisionEnter(Collision c)
		{
		}

		[Token(Token = "0x60008AF")]
		[Address(RVA = "0x156D2C8", Offset = "0x156D2C8", VA = "0x156D2C8", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x60008B0")]
		[Address(RVA = "0x156D538", Offset = "0x156D538", VA = "0x156D538")]
		private void AfterIK()
		{
		}

		[Token(Token = "0x60008B1")]
		[Address(RVA = "0x156D6D0", Offset = "0x156D6D0", VA = "0x156D6D0", Slot = "6")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x60008B2")]
		[Address(RVA = "0x156D7D4", Offset = "0x156D7D4", VA = "0x156D7D4")]
		public MotionAbsorb()
		{
		}
	}
	[Token(Token = "0x20000C7")]
	public class MotionAbsorbCharacter : MonoBehaviour
	{
		[Token(Token = "0x40006AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Animator animator;

		[Token(Token = "0x40006AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MotionAbsorb motionAbsorb;

		[Token(Token = "0x40006AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform cube;

		[Token(Token = "0x40006B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float cubeRandomPosition;

		[Token(Token = "0x40006B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AnimationCurve motionAbsorbWeight;

		[Token(Token = "0x40006B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 cubeDefaultPosition;

		[Token(Token = "0x40006B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private AnimatorStateInfo info;

		[Token(Token = "0x40006B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Rigidbody cubeRigidbody;

		[Token(Token = "0x60008B3")]
		[Address(RVA = "0x156D864", Offset = "0x156D864", VA = "0x156D864")]
		private void Start()
		{
		}

		[Token(Token = "0x60008B4")]
		[Address(RVA = "0x156D8DC", Offset = "0x156D8DC", VA = "0x156D8DC")]
		private void Update()
		{
		}

		[Token(Token = "0x60008B5")]
		[Address(RVA = "0x156D990", Offset = "0x156D990", VA = "0x156D990")]
		private void SwingStart()
		{
		}

		[Token(Token = "0x60008B6")]
		[Address(RVA = "0x156DAF0", Offset = "0x156DAF0", VA = "0x156DAF0")]
		public MotionAbsorbCharacter()
		{
		}
	}
	[Token(Token = "0x20000C8")]
	public class OffsetEffector : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x200052A")]
		public class EffectorLink
		{
			[Token(Token = "0x4001B94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FullBodyBipedEffector effectorType;

			[Token(Token = "0x4001B95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float weightMultiplier;

			[Token(Token = "0x4001B96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[HideInInspector]
			public Vector3 localPosition;

			[Token(Token = "0x60027C4")]
			[Address(RVA = "0x156E950", Offset = "0x156E950", VA = "0x156E950")]
			public EffectorLink()
			{
			}
		}

		[Token(Token = "0x40006B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public EffectorLink[] effectorLinks;

		[Token(Token = "0x60008B7")]
		[Address(RVA = "0x156E61C", Offset = "0x156E61C", VA = "0x156E61C", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60008B8")]
		[Address(RVA = "0x156E71C", Offset = "0x156E71C", VA = "0x156E71C", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x60008B9")]
		[Address(RVA = "0x156E948", Offset = "0x156E948", VA = "0x156E948")]
		public OffsetEffector()
		{
		}
	}
	[Token(Token = "0x20000C9")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA06C40", Offset = "0xA06C40")]
	public class PendulumExample : MonoBehaviour
	{
		[Token(Token = "0x40006B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1460C", Offset = "0xA1460C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA1460C", Offset = "0xA1460C")]
		public float weight;

		[Token(Token = "0x40006B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA14660", Offset = "0xA14660")]
		public float hangingDistanceMlp;

		[Token(Token = "0x40006B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA14698", Offset = "0xA14698")]
		[HideInInspector]
		public Vector3 rootTargetPosition;

		[Token(Token = "0x40006B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA146E4", Offset = "0xA146E4")]
		[HideInInspector]
		public Quaternion rootTargetRotation;

		[Token(Token = "0x40006BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform target;

		[Token(Token = "0x40006BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform leftHandTarget;

		[Token(Token = "0x40006BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform rightHandTarget;

		[Token(Token = "0x40006BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform leftFootTarget;

		[Token(Token = "0x40006BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform rightFootTarget;

		[Token(Token = "0x40006BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform pelvisTarget;

		[Token(Token = "0x40006C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform bodyTarget;

		[Token(Token = "0x40006C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Transform headTarget;

		[Token(Token = "0x40006C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Vector3 pelvisDownAxis;

		[Token(Token = "0x40006C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private FullBodyBipedIK ik;

		[Token(Token = "0x40006C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Quaternion rootRelativeToPelvis;

		[Token(Token = "0x40006C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3 pelvisToRoot;

		[Token(Token = "0x40006C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float lastWeight;

		[Token(Token = "0x60008BA")]
		[Address(RVA = "0x156E960", Offset = "0x156E960", VA = "0x156E960")]
		private void Start()
		{
		}

		[Token(Token = "0x60008BB")]
		[Address(RVA = "0x156EC9C", Offset = "0x156EC9C", VA = "0x156EC9C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60008BC")]
		[Address(RVA = "0x156F3EC", Offset = "0x156F3EC", VA = "0x156F3EC")]
		public PendulumExample()
		{
		}
	}
	[Token(Token = "0x20000CA")]
	public abstract class PickUp2Handed : MonoBehaviour
	{
		[Token(Token = "0x40006C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int GUIspace;

		[Token(Token = "0x40006C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractionSystem interactionSystem;

		[Token(Token = "0x40006C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public InteractionObject obj;

		[Token(Token = "0x40006CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform pivot;

		[Token(Token = "0x40006CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform holdPoint;

		[Token(Token = "0x40006CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float pickUpTime;

		[Token(Token = "0x40006CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float holdWeight;

		[Token(Token = "0x40006CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float holdWeightVel;

		[Token(Token = "0x40006CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 pickUpPosition;

		[Token(Token = "0x40006D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Quaternion pickUpRotation;

		[Token(Token = "0x170000AC")]
		private bool holding
		{
			[Token(Token = "0x60008C4")]
			[Address(RVA = "0x156F730", Offset = "0x156F730", VA = "0x156F730")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60008BD")]
		[Address(RVA = "0x156F470", Offset = "0x156F470", VA = "0x156F470")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60008BE")]
		protected abstract void RotatePivot();

		[Token(Token = "0x60008BF")]
		[Address(RVA = "0x156F750", Offset = "0x156F750", VA = "0x156F750")]
		private void Start()
		{
		}

		[Token(Token = "0x60008C0")]
		[Address(RVA = "0x156F8B8", Offset = "0x156F8B8", VA = "0x156F8B8")]
		private void OnPause(FullBodyBipedEffector effectorType, InteractionObject interactionObject)
		{
		}

		[Token(Token = "0x60008C1")]
		[Address(RVA = "0x156FA34", Offset = "0x156FA34", VA = "0x156FA34")]
		private void OnStart(FullBodyBipedEffector effectorType, InteractionObject interactionObject)
		{
		}

		[Token(Token = "0x60008C2")]
		[Address(RVA = "0x156FB14", Offset = "0x156FB14", VA = "0x156FB14")]
		private void OnDrop(FullBodyBipedEffector effectorType, InteractionObject interactionObject)
		{
		}

		[Token(Token = "0x60008C3")]
		[Address(RVA = "0x156FC40", Offset = "0x156FC40", VA = "0x156FC40")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60008C5")]
		[Address(RVA = "0x156FE50", Offset = "0x156FE50", VA = "0x156FE50")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60008C6")]
		[Address(RVA = "0x156FFF0", Offset = "0x156FFF0", VA = "0x156FFF0")]
		protected PickUp2Handed()
		{
		}
	}
	[Token(Token = "0x20000CB")]
	public class PickUpBox : PickUp2Handed
	{
		[Token(Token = "0x60008C7")]
		[Address(RVA = "0x1570004", Offset = "0x1570004", VA = "0x1570004", Slot = "4")]
		protected override void RotatePivot()
		{
		}

		[Token(Token = "0x60008C8")]
		[Address(RVA = "0x15701F8", Offset = "0x15701F8", VA = "0x15701F8")]
		public PickUpBox()
		{
		}
	}
	[Token(Token = "0x20000CC")]
	public class PickUpSphere : PickUp2Handed
	{
		[Token(Token = "0x60008C9")]
		[Address(RVA = "0x157020C", Offset = "0x157020C", VA = "0x157020C", Slot = "4")]
		protected override void RotatePivot()
		{
		}

		[Token(Token = "0x60008CA")]
		[Address(RVA = "0x15703B8", Offset = "0x15703B8", VA = "0x15703B8")]
		public PickUpSphere()
		{
		}
	}
	[Token(Token = "0x20000CD")]
	public class RagdollUtilityDemo : MonoBehaviour
	{
		[Token(Token = "0x40006D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RagdollUtility ragdollUtility;

		[Token(Token = "0x40006D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform root;

		[Token(Token = "0x40006D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Rigidbody pelvis;

		[Token(Token = "0x60008CB")]
		[Address(RVA = "0x1572318", Offset = "0x1572318", VA = "0x1572318")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60008CC")]
		[Address(RVA = "0x15723F0", Offset = "0x15723F0", VA = "0x15723F0")]
		private void Update()
		{
		}

		[Token(Token = "0x60008CD")]
		[Address(RVA = "0x1572598", Offset = "0x1572598", VA = "0x1572598")]
		public RagdollUtilityDemo()
		{
		}
	}
	[Token(Token = "0x20000CE")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA06CA4", Offset = "0xA06CA4")]
	public class RecoilTest : MonoBehaviour
	{
		[Token(Token = "0x40006D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float magnitude;

		[Token(Token = "0x40006D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Recoil recoil;

		[Token(Token = "0x60008CE")]
		[Address(RVA = "0x1572890", Offset = "0x1572890", VA = "0x1572890")]
		private void Start()
		{
		}

		[Token(Token = "0x60008CF")]
		[Address(RVA = "0x15728E8", Offset = "0x15728E8", VA = "0x15728E8")]
		private void Update()
		{
		}

		[Token(Token = "0x60008D0")]
		[Address(RVA = "0x1572944", Offset = "0x1572944", VA = "0x1572944")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60008D1")]
		[Address(RVA = "0x1572A1C", Offset = "0x1572A1C", VA = "0x1572A1C")]
		public RecoilTest()
		{
		}
	}
	[Token(Token = "0x20000CF")]
	public class ResetInteractionObject : MonoBehaviour
	{
		[Token(Token = "0x200052B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D418", Offset = "0xA0D418")]
		private sealed class <ResetObject>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float resetTime;

			[Token(Token = "0x4001B9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ResetInteractionObject <>4__this;

			[Token(Token = "0x170004C0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60027C8")]
				[Address(RVA = "0x1572D90", Offset = "0x1572D90", VA = "0x1572D90", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004C1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60027CA")]
				[Address(RVA = "0x1572DF8", Offset = "0x1572DF8", VA = "0x1572DF8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60027C5")]
			[Address(RVA = "0x1572BAC", Offset = "0x1572BAC", VA = "0x1572BAC")]
			[DebuggerHidden]
			public <ResetObject>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x60027C6")]
			[Address(RVA = "0x1572BE8", Offset = "0x1572BE8", VA = "0x1572BE8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60027C7")]
			[Address(RVA = "0x1572BEC", Offset = "0x1572BEC", VA = "0x1572BEC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60027C9")]
			[Address(RVA = "0x1572D98", Offset = "0x1572D98", VA = "0x1572D98", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40006D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float resetDelay;

		[Token(Token = "0x40006D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Vector3 defaultPosition;

		[Token(Token = "0x40006D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Quaternion defaultRotation;

		[Token(Token = "0x40006D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform defaultParent;

		[Token(Token = "0x40006DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Rigidbody r;

		[Token(Token = "0x60008D2")]
		[Address(RVA = "0x1572A2C", Offset = "0x1572A2C", VA = "0x1572A2C")]
		private void Start()
		{
		}

		[Token(Token = "0x60008D3")]
		[Address(RVA = "0x1572AE4", Offset = "0x1572AE4", VA = "0x1572AE4")]
		private void OnPickUp(Transform t)
		{
		}

		[Token(Token = "0x60008D4")]
		[Address(RVA = "0x1572B2C", Offset = "0x1572B2C", VA = "0x1572B2C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA28B10", Offset = "0xA28B10")]
		private IEnumerator ResetObject(float resetTime)
		{
			return null;
		}

		[Token(Token = "0x60008D5")]
		[Address(RVA = "0x1572BD8", Offset = "0x1572BD8", VA = "0x1572BD8")]
		public ResetInteractionObject()
		{
		}
	}
	[Token(Token = "0x20000D0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA06D08", Offset = "0xA06D08")]
	public class SoccerDemo : MonoBehaviour
	{
		[Token(Token = "0x200052C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D428", Offset = "0xA0D428")]
		private sealed class <ResetDelayed>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoccerDemo <>4__this;

			[Token(Token = "0x170004C2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60027CE")]
				[Address(RVA = "0x1575A68", Offset = "0x1575A68", VA = "0x1575A68", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004C3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60027D0")]
				[Address(RVA = "0x1575AD0", Offset = "0x1575AD0", VA = "0x1575AD0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60027CB")]
			[Address(RVA = "0x1575910", Offset = "0x1575910", VA = "0x1575910")]
			[DebuggerHidden]
			public <ResetDelayed>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x60027CC")]
			[Address(RVA = "0x1575944", Offset = "0x1575944", VA = "0x1575944", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60027CD")]
			[Address(RVA = "0x1575948", Offset = "0x1575948", VA = "0x1575948", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60027CF")]
			[Address(RVA = "0x1575A70", Offset = "0x1575A70", VA = "0x1575A70", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40006DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Animator animator;

		[Token(Token = "0x40006DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 defaultPosition;

		[Token(Token = "0x40006DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Quaternion defaultRotation;

		[Token(Token = "0x60008D6")]
		[Address(RVA = "0x15757F0", Offset = "0x15757F0", VA = "0x15757F0")]
		private void Start()
		{
		}

		[Token(Token = "0x60008D7")]
		[Address(RVA = "0x15758A0", Offset = "0x15758A0", VA = "0x15758A0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA28B74", Offset = "0xA28B74")]
		private IEnumerator ResetDelayed()
		{
			return null;
		}

		[Token(Token = "0x60008D8")]
		[Address(RVA = "0x157593C", Offset = "0x157593C", VA = "0x157593C")]
		public SoccerDemo()
		{
		}
	}
	[Token(Token = "0x20000D1")]
	public class TouchWalls : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200052D")]
		public class EffectorLink
		{
			[Token(Token = "0x4001B9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool enabled;

			[Token(Token = "0x4001B9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public FullBodyBipedEffector effectorType;

			[Token(Token = "0x4001BA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public InteractionObject interactionObject;

			[Token(Token = "0x4001BA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform spherecastFrom;

			[Token(Token = "0x4001BA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float spherecastRadius;

			[Token(Token = "0x4001BA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float minDistance;

			[Token(Token = "0x4001BA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public LayerMask touchLayers;

			[Token(Token = "0x4001BA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float lerpSpeed;

			[Token(Token = "0x4001BA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float minSwitchTime;

			[Token(Token = "0x4001BA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public float releaseDistance;

			[Token(Token = "0x4001BA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public bool sliding;

			[Token(Token = "0x4001BA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private Vector3 raycastDirectionLocal;

			[Token(Token = "0x4001BAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private float raycastDistance;

			[Token(Token = "0x4001BAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private bool inTouch;

			[Token(Token = "0x4001BAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private RaycastHit hit;

			[Token(Token = "0x4001BAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			private Vector3 targetPosition;

			[Token(Token = "0x4001BAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private Quaternion targetRotation;

			[Token(Token = "0x4001BAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			private bool initiated;

			[Token(Token = "0x4001BB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
			private float nextSwitchTime;

			[Token(Token = "0x4001BB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			private float speedF;

			[Token(Token = "0x60027D1")]
			[Address(RVA = "0x1576078", Offset = "0x1576078", VA = "0x1576078")]
			public void Initiate(InteractionSystem interactionSystem)
			{
			}

			[Token(Token = "0x60027D2")]
			[Address(RVA = "0x1576D00", Offset = "0x1576D00", VA = "0x1576D00")]
			private bool FindWalls(Vector3 direction)
			{
				return default(bool);
			}

			[Token(Token = "0x60027D3")]
			[Address(RVA = "0x15763B8", Offset = "0x15763B8", VA = "0x15763B8")]
			public void Update(InteractionSystem interactionSystem)
			{
			}

			[Token(Token = "0x60027D4")]
			[Address(RVA = "0x1576DE8", Offset = "0x1576DE8", VA = "0x1576DE8")]
			private void StopTouch(InteractionSystem interactionSystem)
			{
			}

			[Token(Token = "0x60027D5")]
			[Address(RVA = "0x1576F84", Offset = "0x1576F84", VA = "0x1576F84")]
			private void OnInteractionStart(FullBodyBipedEffector effectorType, InteractionObject interactionObject)
			{
			}

			[Token(Token = "0x60027D6")]
			[Address(RVA = "0x1577020", Offset = "0x1577020", VA = "0x1577020")]
			private void OnInteractionResume(FullBodyBipedEffector effectorType, InteractionObject interactionObject)
			{
			}

			[Token(Token = "0x60027D7")]
			[Address(RVA = "0x15770B8", Offset = "0x15770B8", VA = "0x15770B8")]
			private void OnInteractionStop(FullBodyBipedEffector effectorType, InteractionObject interactionObject)
			{
			}

			[Token(Token = "0x60027D8")]
			[Address(RVA = "0x1576B98", Offset = "0x1576B98", VA = "0x1576B98")]
			public void Destroy(InteractionSystem interactionSystem)
			{
			}

			[Token(Token = "0x60027D9")]
			[Address(RVA = "0x1577150", Offset = "0x1577150", VA = "0x1577150")]
			public EffectorLink()
			{
			}
		}

		[Token(Token = "0x40006DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractionSystem interactionSystem;

		[Token(Token = "0x40006DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EffectorLink[] effectorLinks;

		[Token(Token = "0x60008D9")]
		[Address(RVA = "0x1576000", Offset = "0x1576000", VA = "0x1576000")]
		private void Start()
		{
		}

		[Token(Token = "0x60008DA")]
		[Address(RVA = "0x157634C", Offset = "0x157634C", VA = "0x157634C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60008DB")]
		[Address(RVA = "0x1576AD0", Offset = "0x1576AD0", VA = "0x1576AD0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60008DC")]
		[Address(RVA = "0x1576CF8", Offset = "0x1576CF8", VA = "0x1576CF8")]
		public TouchWalls()
		{
		}
	}
	[Token(Token = "0x20000D2")]
	public class TransferMotion : MonoBehaviour
	{
		[Token(Token = "0x40006E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA14730", Offset = "0xA14730")]
		public Transform to;

		[Token(Token = "0x40006E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA14768", Offset = "0xA14768")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA14768", Offset = "0xA14768")]
		public float transferMotion;

		[Token(Token = "0x40006E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 lastPosition;

		[Token(Token = "0x60008DD")]
		[Address(RVA = "0x1577184", Offset = "0x1577184", VA = "0x1577184")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60008DE")]
		[Address(RVA = "0x15771C0", Offset = "0x15771C0", VA = "0x15771C0")]
		private void Update()
		{
		}

		[Token(Token = "0x60008DF")]
		[Address(RVA = "0x1577318", Offset = "0x1577318", VA = "0x1577318")]
		public TransferMotion()
		{
		}
	}
	[Token(Token = "0x20000D3")]
	public class TwoHandedProp : MonoBehaviour
	{
		[Token(Token = "0x40006E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA147BC", Offset = "0xA147BC")]
		public Transform leftHandTarget;

		[Token(Token = "0x40006E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FullBodyBipedIK ik;

		[Token(Token = "0x40006E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 targetPosRelativeToRight;

		[Token(Token = "0x40006E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Quaternion targetRotRelativeToRight;

		[Token(Token = "0x60008E0")]
		[Address(RVA = "0x15774D8", Offset = "0x15774D8", VA = "0x15774D8")]
		private void Start()
		{
		}

		[Token(Token = "0x60008E1")]
		[Address(RVA = "0x1577690", Offset = "0x1577690", VA = "0x1577690")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60008E2")]
		[Address(RVA = "0x157792C", Offset = "0x157792C", VA = "0x157792C")]
		private void AfterFBBIK()
		{
		}

		[Token(Token = "0x60008E3")]
		[Address(RVA = "0x15779F8", Offset = "0x15779F8", VA = "0x15779F8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60008E4")]
		[Address(RVA = "0x1577AF0", Offset = "0x1577AF0", VA = "0x1577AF0")]
		public TwoHandedProp()
		{
		}
	}
	[Token(Token = "0x20000D4")]
	public class UserControlInteractions : UserControlThirdPerson
	{
		[Token(Token = "0x40006E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public CharacterThirdPerson character;

		[Token(Token = "0x40006E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public InteractionSystem interactionSystem;

		[Token(Token = "0x40006E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool disableInputInInteraction;

		[Token(Token = "0x40006EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float enableInputAtProgress;

		[Token(Token = "0x60008E5")]
		[Address(RVA = "0x1578388", Offset = "0x1578388", VA = "0x1578388", Slot = "5")]
		protected override void Update()
		{
		}

		[Token(Token = "0x60008E6")]
		[Address(RVA = "0x1578800", Offset = "0x1578800", VA = "0x1578800")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60008E7")]
		[Address(RVA = "0x1578A58", Offset = "0x1578A58", VA = "0x1578A58")]
		public UserControlInteractions()
		{
		}
	}
	[Token(Token = "0x20000D5")]
	public class GrounderDemo : MonoBehaviour
	{
		[Token(Token = "0x40006EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] characters;

		[Token(Token = "0x60008E8")]
		[Address(RVA = "0x1567018", Offset = "0x1567018", VA = "0x1567018")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60008E9")]
		[Address(RVA = "0x1567314", Offset = "0x1567314", VA = "0x1567314")]
		public void Activate(int index)
		{
		}

		[Token(Token = "0x60008EA")]
		[Address(RVA = "0x1567394", Offset = "0x1567394", VA = "0x1567394")]
		public GrounderDemo()
		{
		}
	}
	[Token(Token = "0x20000D6")]
	public class PlatformRotator : MonoBehaviour
	{
		[Token(Token = "0x200052E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D438", Offset = "0xA0D438")]
		private sealed class <SwitchRotation>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001BB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001BB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001BB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlatformRotator <>4__this;

			[Token(Token = "0x170004C4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60027DD")]
				[Address(RVA = "0x1570F0C", Offset = "0x1570F0C", VA = "0x1570F0C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004C5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60027DF")]
				[Address(RVA = "0x1570F74", Offset = "0x1570F74", VA = "0x1570F74", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60027DA")]
			[Address(RVA = "0x1570BC8", Offset = "0x1570BC8", VA = "0x1570BC8")]
			[DebuggerHidden]
			public <SwitchRotation>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x60027DB")]
			[Address(RVA = "0x1570DD4", Offset = "0x1570DD4", VA = "0x1570DD4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60027DC")]
			[Address(RVA = "0x1570DD8", Offset = "0x1570DD8", VA = "0x1570DD8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60027DE")]
			[Address(RVA = "0x1570F14", Offset = "0x1570F14", VA = "0x1570F14", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40006EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float maxAngle;

		[Token(Token = "0x40006ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float switchRotationTime;

		[Token(Token = "0x40006EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float random;

		[Token(Token = "0x40006EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float rotationSpeed;

		[Token(Token = "0x40006F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 movePosition;

		[Token(Token = "0x40006F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float moveSpeed;

		[Token(Token = "0x40006F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int characterLayer;

		[Token(Token = "0x40006F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion defaultRotation;

		[Token(Token = "0x40006F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Quaternion targetRotation;

		[Token(Token = "0x40006F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector3 targetPosition;

		[Token(Token = "0x40006F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 velocity;

		[Token(Token = "0x40006F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Rigidbody r;

		[Token(Token = "0x60008EB")]
		[Address(RVA = "0x1570814", Offset = "0x1570814", VA = "0x1570814")]
		private void Start()
		{
		}

		[Token(Token = "0x60008EC")]
		[Address(RVA = "0x15709A0", Offset = "0x15709A0", VA = "0x15709A0")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60008ED")]
		[Address(RVA = "0x1570930", Offset = "0x1570930", VA = "0x1570930")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA28BD8", Offset = "0xA28BD8")]
		private IEnumerator SwitchRotation()
		{
			return null;
		}

		[Token(Token = "0x60008EE")]
		[Address(RVA = "0x1570BF4", Offset = "0x1570BF4", VA = "0x1570BF4")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x60008EF")]
		[Address(RVA = "0x1570CD8", Offset = "0x1570CD8", VA = "0x1570CD8")]
		private void OnCollisionExit(Collision collision)
		{
		}

		[Token(Token = "0x60008F0")]
		[Address(RVA = "0x1570DB8", Offset = "0x1570DB8", VA = "0x1570DB8")]
		public PlatformRotator()
		{
		}
	}
	[Token(Token = "0x20000D7")]
	public class BendGoal : MonoBehaviour
	{
		[Token(Token = "0x40006F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LimbIK limbIK;

		[Token(Token = "0x40006F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA147F4", Offset = "0xA147F4")]
		public float weight;

		[Token(Token = "0x60008F1")]
		[Address(RVA = "0x155BC2C", Offset = "0x155BC2C", VA = "0x155BC2C")]
		private void Start()
		{
		}

		[Token(Token = "0x60008F2")]
		[Address(RVA = "0x155BC98", Offset = "0x155BC98", VA = "0x155BC98")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60008F3")]
		[Address(RVA = "0x155BD54", Offset = "0x155BD54", VA = "0x155BD54")]
		public BendGoal()
		{
		}
	}
	[Token(Token = "0x20000D8")]
	public class Turret : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200052F")]
		public class Part
		{
			[Token(Token = "0x4001BB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform transform;

			[Token(Token = "0x4001BB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private RotationLimit rotationLimit;

			[Token(Token = "0x60027E0")]
			[Address(RVA = "0x15773A4", Offset = "0x15773A4", VA = "0x15773A4")]
			public void AimAt(Transform target)
			{
			}

			[Token(Token = "0x60027E1")]
			[Address(RVA = "0x15774D0", Offset = "0x15774D0", VA = "0x15774D0")]
			public Part()
			{
			}
		}

		[Token(Token = "0x40006FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x40006FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Part[] parts;

		[Token(Token = "0x60008F4")]
		[Address(RVA = "0x157732C", Offset = "0x157732C", VA = "0x157732C")]
		private void Update()
		{
		}

		[Token(Token = "0x60008F5")]
		[Address(RVA = "0x15774C8", Offset = "0x15774C8", VA = "0x15774C8")]
		public Turret()
		{
		}
	}
	[Token(Token = "0x20000D9")]
	public class HitReactionVRIKTrigger : MonoBehaviour
	{
		[Token(Token = "0x40006FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HitReactionVRIK hitReaction;

		[Token(Token = "0x40006FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float hitForce;

		[Token(Token = "0x40006FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string colliderName;

		[Token(Token = "0x60008F6")]
		[Address(RVA = "0x1567730", Offset = "0x1567730", VA = "0x1567730")]
		private void Update()
		{
		}

		[Token(Token = "0x60008F7")]
		[Address(RVA = "0x15678F0", Offset = "0x15678F0", VA = "0x15678F0")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60008F8")]
		[Address(RVA = "0x1567AB4", Offset = "0x1567AB4", VA = "0x1567AB4")]
		public HitReactionVRIKTrigger()
		{
		}
	}
	[Token(Token = "0x20000DA")]
	public class VRIKCalibrationController : MonoBehaviour
	{
		[Token(Token = "0x40006FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1480C", Offset = "0xA1480C")]
		public VRIK ik;

		[Token(Token = "0x4000700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA14844", Offset = "0xA14844")]
		public VRIKCalibrator.Settings settings;

		[Token(Token = "0x4000701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1487C", Offset = "0xA1487C")]
		public Transform headTracker;

		[Token(Token = "0x4000702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA148B4", Offset = "0xA148B4")]
		public Transform bodyTracker;

		[Token(Token = "0x4000703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA148EC", Offset = "0xA148EC")]
		public Transform leftHandTracker;

		[Token(Token = "0x4000704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA14924", Offset = "0xA14924")]
		public Transform rightHandTracker;

		[Token(Token = "0x4000705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1495C", Offset = "0xA1495C")]
		public Transform leftFootTracker;

		[Token(Token = "0x4000706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA14994", Offset = "0xA14994")]
		public Transform rightFootTracker;

		[Token(Token = "0x4000707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA149CC", Offset = "0xA149CC")]
		public VRIKCalibrator.CalibrationData data;

		[Token(Token = "0x60008F9")]
		[Address(RVA = "0x1578AC0", Offset = "0x1578AC0", VA = "0x1578AC0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60008FA")]
		[Address(RVA = "0x1578C1C", Offset = "0x1578C1C", VA = "0x1578C1C")]
		public VRIKCalibrationController()
		{
		}
	}
	[Token(Token = "0x20000DB")]
	public class VRIKPlatform : MonoBehaviour
	{
		[Token(Token = "0x4000708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VRIK ik;

		[Token(Token = "0x4000709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 lastPosition;

		[Token(Token = "0x400070A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Quaternion lastRotation;

		[Token(Token = "0x60008FB")]
		[Address(RVA = "0x1578C84", Offset = "0x1578C84", VA = "0x1578C84")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60008FC")]
		[Address(RVA = "0x1578CE0", Offset = "0x1578CE0", VA = "0x1578CE0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60008FD")]
		[Address(RVA = "0x1578EF4", Offset = "0x1578EF4", VA = "0x1578EF4")]
		public VRIKPlatform()
		{
		}
	}
	[Token(Token = "0x20000DC")]
	public class VRIKPlatformController : MonoBehaviour
	{
		[Token(Token = "0x400070B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VRIK ik;

		[Token(Token = "0x400070C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform trackingSpace;

		[Token(Token = "0x400070D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform platform;

		[Token(Token = "0x400070E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool moveToPlatform;

		[Token(Token = "0x400070F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform lastPlatform;

		[Token(Token = "0x4000710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 lastPosition;

		[Token(Token = "0x4000711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Quaternion lastRotation;

		[Token(Token = "0x60008FE")]
		[Address(RVA = "0x1578F6C", Offset = "0x1578F6C", VA = "0x1578F6C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60008FF")]
		[Address(RVA = "0x15794BC", Offset = "0x15794BC", VA = "0x15794BC")]
		public VRIKPlatformController()
		{
		}
	}
	[Token(Token = "0x20000DD")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA06D6C", Offset = "0xA06D6C")]
	public class AnimatorIKDemo : MonoBehaviour
	{
		[Token(Token = "0x4000712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform leftHandIKTarget;

		[Token(Token = "0x4000713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator animator;

		[Token(Token = "0x6000900")]
		[Address(RVA = "0x155B7C8", Offset = "0x155B7C8", VA = "0x155B7C8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000901")]
		[Address(RVA = "0x155B820", Offset = "0x155B820", VA = "0x155B820")]
		private void OnAnimatorIK(int layer)
		{
		}

		[Token(Token = "0x6000902")]
		[Address(RVA = "0x155B87C", Offset = "0x155B87C", VA = "0x155B87C")]
		public AnimatorIKDemo()
		{
		}
	}
	[Token(Token = "0x20000DE")]
	public class BallShooter : MonoBehaviour
	{
		[Token(Token = "0x4000714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public KeyCode keyCode;

		[Token(Token = "0x4000715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject ball;

		[Token(Token = "0x4000716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 spawnOffset;

		[Token(Token = "0x4000717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 force;

		[Token(Token = "0x4000718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float mass;

		[Token(Token = "0x6000903")]
		[Address(RVA = "0x155B8C8", Offset = "0x155B8C8", VA = "0x155B8C8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000904")]
		[Address(RVA = "0x155BB90", Offset = "0x155BB90", VA = "0x155BB90")]
		public BallShooter()
		{
		}
	}
	[Token(Token = "0x20000DF")]
	public class BoardController : MonoBehaviour
	{
		[Token(Token = "0x4000719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int groundLayer;

		[Token(Token = "0x400071A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform rotationTarget;

		[Token(Token = "0x400071B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float torque;

		[Token(Token = "0x400071C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float skidDrag;

		[Token(Token = "0x400071D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float turnSensitivity;

		[Token(Token = "0x400071E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Rigidbody r;

		[Token(Token = "0x400071F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool isGrounded;

		[Token(Token = "0x6000905")]
		[Address(RVA = "0x155C230", Offset = "0x155C230", VA = "0x155C230")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000906")]
		[Address(RVA = "0x155C288", Offset = "0x155C288", VA = "0x155C288")]
		private void Update()
		{
		}

		[Token(Token = "0x6000907")]
		[Address(RVA = "0x155C458", Offset = "0x155C458", VA = "0x155C458")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000908")]
		[Address(RVA = "0x155C77C", Offset = "0x155C77C", VA = "0x155C77C")]
		private void OnCollisionEnter(Collision c)
		{
		}

		[Token(Token = "0x6000909")]
		[Address(RVA = "0x155C7D8", Offset = "0x155C7D8", VA = "0x155C7D8")]
		private void OnCollisionStay(Collision c)
		{
		}

		[Token(Token = "0x600090A")]
		[Address(RVA = "0x155C834", Offset = "0x155C834", VA = "0x155C834")]
		private void OnCollisionExit(Collision c)
		{
		}

		[Token(Token = "0x600090B")]
		[Address(RVA = "0x155C88C", Offset = "0x155C88C", VA = "0x155C88C")]
		public BoardController()
		{
		}
	}
	[Token(Token = "0x20000E0")]
	public class CharacterAnimationMeleeDemo : CharacterAnimationThirdPerson
	{
		[Token(Token = "0x170000AD")]
		private CharacterMeleeDemo melee
		{
			[Token(Token = "0x600090C")]
			[Address(RVA = "0x155CDF4", Offset = "0x155CDF4", VA = "0x155CDF4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600090D")]
		[Address(RVA = "0x155CE78", Offset = "0x155CE78", VA = "0x155CE78", Slot = "9")]
		protected override void Update()
		{
		}

		[Token(Token = "0x600090E")]
		[Address(RVA = "0x155D374", Offset = "0x155D374", VA = "0x155D374")]
		public CharacterAnimationMeleeDemo()
		{
		}
	}
	[Token(Token = "0x20000E1")]
	public class CharacterMeleeDemo : CharacterPuppet
	{
		[Serializable]
		[Token(Token = "0x2000530")]
		public class Action
		{
			[Serializable]
			[Token(Token = "0x20006CE")]
			public class Anim
			{
				[Token(Token = "0x4002131")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public string stateName;

				[Token(Token = "0x4002132")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public int layer;

				[Token(Token = "0x4002133")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
				public float transitionDuration;

				[Token(Token = "0x4002134")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public float fixedTime;

				[Token(Token = "0x6002C9B")]
				[Address(RVA = "0x155F424", Offset = "0x155F424", VA = "0x155F424")]
				public Anim()
				{
				}
			}

			[Token(Token = "0x4001BB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string name;

			[Token(Token = "0x4001BB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int inputActionIndex;

			[Token(Token = "0x4001BB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float duration;

			[Token(Token = "0x4001BBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float minFrequency;

			[Token(Token = "0x4001BBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Anim anim;

			[Token(Token = "0x4001BBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int[] requiredPropTypes;

			[Token(Token = "0x4001BBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Booster[] boosters;

			[Token(Token = "0x60027E2")]
			[Address(RVA = "0x155F414", Offset = "0x155F414", VA = "0x155F414")]
			public Action()
			{
			}
		}

		[Token(Token = "0x4000720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA14A04", Offset = "0xA14A04")]
		public Action[] actions;

		[Token(Token = "0x4000721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		[HideInInspector]
		public int currentActionIndex;

		[Token(Token = "0x4000722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		[HideInInspector]
		public float lastActionTime;

		[Token(Token = "0x4000723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private float lastActionMoveMag;

		[Token(Token = "0x170000AE")]
		public Action currentAction
		{
			[Token(Token = "0x6000910")]
			[Address(RVA = "0x155D328", Offset = "0x155D328", VA = "0x155D328")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600090F")]
		[Address(RVA = "0x155EE78", Offset = "0x155EE78", VA = "0x155EE78", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000911")]
		[Address(RVA = "0x155EF00", Offset = "0x155EF00", VA = "0x155EF00", Slot = "7")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6000912")]
		[Address(RVA = "0x155F18C", Offset = "0x155F18C", VA = "0x155F18C")]
		private bool StartAction(Action action)
		{
			return default(bool);
		}

		[Token(Token = "0x6000913")]
		[Address(RVA = "0x155F404", Offset = "0x155F404", VA = "0x155F404")]
		public CharacterMeleeDemo()
		{
		}
	}
	[Token(Token = "0x20000E2")]
	public class CharacterPuppet : CharacterThirdPerson
	{
		[Token(Token = "0x4000724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA14A5C", Offset = "0xA14A5C")]
		public PropMuscle propMuscle;

		[Token(Token = "0x4000725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA14A94", Offset = "0xA14A94")]
		private BehaviourPuppet <puppet>k__BackingField;

		[Token(Token = "0x170000AF")]
		public BehaviourPuppet puppet
		{
			[Token(Token = "0x6000914")]
			[Address(RVA = "0x155F42C", Offset = "0x155F42C", VA = "0x155F42C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA28C3C", Offset = "0xA28C3C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000915")]
			[Address(RVA = "0x155F434", Offset = "0x155F434", VA = "0x155F434")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA28C4C", Offset = "0xA28C4C")]
			private set
			{
			}
		}

		[Token(Token = "0x6000916")]
		[Address(RVA = "0x155EE84", Offset = "0x155EE84", VA = "0x155EE84", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000917")]
		[Address(RVA = "0x155F5C0", Offset = "0x155F5C0", VA = "0x155F5C0", Slot = "4")]
		public override void Move(Vector3 deltaPosition, Quaternion deltaRotation)
		{
		}

		[Token(Token = "0x6000918")]
		[Address(RVA = "0x155F800", Offset = "0x155F800", VA = "0x155F800", Slot = "9")]
		protected override void Rotate()
		{
		}

		[Token(Token = "0x6000919")]
		[Address(RVA = "0x155FEC8", Offset = "0x155FEC8", VA = "0x155FEC8", Slot = "10")]
		protected override bool Jump()
		{
			return default(bool);
		}

		[Token(Token = "0x600091A")]
		[Address(RVA = "0x155F410", Offset = "0x155F410", VA = "0x155F410")]
		public CharacterPuppet()
		{
		}
	}
	[Token(Token = "0x20000E3")]
	public class CreatePuppetInRuntime : MonoBehaviour
	{
		[Token(Token = "0x4000726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA14AA4", Offset = "0xA14AA4")]
		public Transform ragdollPrefab;

		[Token(Token = "0x4000727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA14ADC", Offset = "0xA14ADC")]
		public string instanceName;

		[Token(Token = "0x4000728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA14B14", Offset = "0xA14B14")]
		public int characterControllerLayer;

		[Token(Token = "0x4000729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA14B4C", Offset = "0xA14B4C")]
		public int ragdollLayer;

		[Token(Token = "0x600091B")]
		[Address(RVA = "0x1562044", Offset = "0x1562044", VA = "0x1562044")]
		private void Start()
		{
		}

		[Token(Token = "0x600091C")]
		[Address(RVA = "0x156219C", Offset = "0x156219C", VA = "0x156219C")]
		public CreatePuppetInRuntime()
		{
		}
	}
	[Token(Token = "0x20000E4")]
	public class CreateRagdollInRuntime : MonoBehaviour
	{
		[Token(Token = "0x400072A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA14B84", Offset = "0xA14B84")]
		public GameObject prefab;

		[Token(Token = "0x600091D")]
		[Address(RVA = "0x15621F4", Offset = "0x15621F4", VA = "0x15621F4")]
		private void Start()
		{
		}

		[Token(Token = "0x600091E")]
		[Address(RVA = "0x1562338", Offset = "0x1562338", VA = "0x1562338")]
		private void Update()
		{
		}

		[Token(Token = "0x600091F")]
		[Address(RVA = "0x156233C", Offset = "0x156233C", VA = "0x156233C")]
		public CreateRagdollInRuntime()
		{
		}
	}
	[Token(Token = "0x20000E5")]
	public class DeathBaker : MonoBehaviour
	{
		[Token(Token = "0x2000531")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D448", Offset = "0xA0D448")]
		private sealed class <Bake>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001BBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001BBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001BC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DeathBaker <>4__this;

			[Token(Token = "0x170004C6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60027E6")]
				[Address(RVA = "0x1562928", Offset = "0x1562928", VA = "0x1562928", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004C7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60027E8")]
				[Address(RVA = "0x1562990", Offset = "0x1562990", VA = "0x1562990", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60027E3")]
			[Address(RVA = "0x156273C", Offset = "0x156273C", VA = "0x156273C")]
			[DebuggerHidden]
			public <Bake>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x60027E4")]
			[Address(RVA = "0x1562854", Offset = "0x1562854", VA = "0x1562854", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60027E5")]
			[Address(RVA = "0x1562858", Offset = "0x1562858", VA = "0x1562858", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60027E7")]
			[Address(RVA = "0x1562930", Offset = "0x1562930", VA = "0x1562930", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000532")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D458", Offset = "0xA0D458")]
		private sealed class <FadeOutPinWeight>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001BC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001BC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001BC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DeathBaker <>4__this;

			[Token(Token = "0x170004C8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60027EC")]
				[Address(RVA = "0x1562BE4", Offset = "0x1562BE4", VA = "0x1562BE4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004C9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60027EE")]
				[Address(RVA = "0x1562C4C", Offset = "0x1562C4C", VA = "0x1562C4C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60027E9")]
			[Address(RVA = "0x1562768", Offset = "0x1562768", VA = "0x1562768")]
			[DebuggerHidden]
			public <FadeOutPinWeight>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x60027EA")]
			[Address(RVA = "0x1562AF8", Offset = "0x1562AF8", VA = "0x1562AF8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60027EB")]
			[Address(RVA = "0x1562AFC", Offset = "0x1562AFC", VA = "0x1562AFC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60027ED")]
			[Address(RVA = "0x1562BEC", Offset = "0x1562BEC", VA = "0x1562BEC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000533")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D468", Offset = "0xA0D468")]
		private sealed class <FadeOutMuscleWeight>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001BC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001BC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001BC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DeathBaker <>4__this;

			[Token(Token = "0x170004CA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60027F2")]
				[Address(RVA = "0x1562A88", Offset = "0x1562A88", VA = "0x1562A88", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004CB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60027F4")]
				[Address(RVA = "0x1562AF0", Offset = "0x1562AF0", VA = "0x1562AF0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60027EF")]
			[Address(RVA = "0x1562794", Offset = "0x1562794", VA = "0x1562794")]
			[DebuggerHidden]
			public <FadeOutMuscleWeight>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x60027F0")]
			[Address(RVA = "0x1562998", Offset = "0x1562998", VA = "0x1562998", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60027F1")]
			[Address(RVA = "0x156299C", Offset = "0x156299C", VA = "0x156299C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60027F3")]
			[Address(RVA = "0x1562A90", Offset = "0x1562A90", VA = "0x1562A90", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400072B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA14BBC", Offset = "0xA14BBC")]
		public HumanoidBaker baker;

		[Token(Token = "0x400072C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA14BF4", Offset = "0xA14BF4")]
		public float bakeTime;

		[Token(Token = "0x400072D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA14C2C", Offset = "0xA14C2C")]
		public PuppetMaster puppetMaster;

		[Token(Token = "0x400072E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA14C64", Offset = "0xA14C64")]
		public float fadeOutPinWeightSpeed;

		[Token(Token = "0x400072F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA14C9C", Offset = "0xA14C9C")]
		public float fadeOutMuscleWeightSpeed;

		[Token(Token = "0x4000730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA14CD4", Offset = "0xA14CD4")]
		public float deadMuscleWeight;

		[Token(Token = "0x4000731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Animator animator;

		[Token(Token = "0x4000732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 defaultPosition;

		[Token(Token = "0x4000733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Quaternion defaultRotation;

		[Token(Token = "0x4000734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool isDead;

		[Token(Token = "0x6000920")]
		[Address(RVA = "0x1562344", Offset = "0x1562344", VA = "0x1562344")]
		private void Start()
		{
		}

		[Token(Token = "0x6000921")]
		[Address(RVA = "0x15623E0", Offset = "0x15623E0", VA = "0x15623E0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000922")]
		[Address(RVA = "0x15626CC", Offset = "0x15626CC", VA = "0x15626CC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA28C5C", Offset = "0xA28C5C")]
		private IEnumerator Bake()
		{
			return null;
		}

		[Token(Token = "0x6000923")]
		[Address(RVA = "0x15625EC", Offset = "0x15625EC", VA = "0x15625EC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA28CC0", Offset = "0xA28CC0")]
		private IEnumerator FadeOutPinWeight()
		{
			return null;
		}

		[Token(Token = "0x6000924")]
		[Address(RVA = "0x156265C", Offset = "0x156265C", VA = "0x156265C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA28D24", Offset = "0xA28D24")]
		private IEnumerator FadeOutMuscleWeight()
		{
			return null;
		}

		[Token(Token = "0x6000925")]
		[Address(RVA = "0x15627C0", Offset = "0x15627C0", VA = "0x15627C0")]
		public DeathBaker()
		{
		}
	}
	[Token(Token = "0x20000E6")]
	public class Destructor : MonoBehaviour
	{
		[Token(Token = "0x2000534")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D478", Offset = "0xA0D478")]
		private sealed class <Destruct>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001BC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001BC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001BC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Destructor <>4__this;

			[Token(Token = "0x170004CC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60027F8")]
				[Address(RVA = "0x1562E1C", Offset = "0x1562E1C", VA = "0x1562E1C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004CD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60027FA")]
				[Address(RVA = "0x1562E84", Offset = "0x1562E84", VA = "0x1562E84", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60027F5")]
			[Address(RVA = "0x1562CF0", Offset = "0x1562CF0", VA = "0x1562CF0")]
			[DebuggerHidden]
			public <Destruct>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x60027F6")]
			[Address(RVA = "0x1562D2C", Offset = "0x1562D2C", VA = "0x1562D2C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60027F7")]
			[Address(RVA = "0x1562D30", Offset = "0x1562D30", VA = "0x1562D30", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60027F9")]
			[Address(RVA = "0x1562E24", Offset = "0x1562E24", VA = "0x1562E24", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float delay;

		[Token(Token = "0x6000926")]
		[Address(RVA = "0x1562C54", Offset = "0x1562C54", VA = "0x1562C54")]
		private void Start()
		{
		}

		[Token(Token = "0x6000927")]
		[Address(RVA = "0x1562C80", Offset = "0x1562C80", VA = "0x1562C80")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA28D88", Offset = "0xA28D88")]
		private IEnumerator Destruct()
		{
			return null;
		}

		[Token(Token = "0x6000928")]
		[Address(RVA = "0x1562D1C", Offset = "0x1562D1C", VA = "0x1562D1C")]
		public Destructor()
		{
		}
	}
	[Token(Token = "0x20000E7")]
	public class Dying : MonoBehaviour
	{
		[Token(Token = "0x2000535")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D488", Offset = "0xA0D488")]
		private sealed class <FadeOutPinWeight>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001BCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001BCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001BCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Dying <>4__this;

			[Token(Token = "0x170004CE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60027FE")]
				[Address(RVA = "0x1563514", Offset = "0x1563514", VA = "0x1563514", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004CF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002800")]
				[Address(RVA = "0x156357C", Offset = "0x156357C", VA = "0x156357C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60027FB")]
			[Address(RVA = "0x15631E4", Offset = "0x15631E4", VA = "0x15631E4")]
			[DebuggerHidden]
			public <FadeOutPinWeight>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x60027FC")]
			[Address(RVA = "0x1563428", Offset = "0x1563428", VA = "0x1563428", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60027FD")]
			[Address(RVA = "0x156342C", Offset = "0x156342C", VA = "0x156342C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60027FF")]
			[Address(RVA = "0x156351C", Offset = "0x156351C", VA = "0x156351C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000536")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D498", Offset = "0xA0D498")]
		private sealed class <FadeOutMuscleWeight>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001BCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001BCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001BCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Dying <>4__this;

			[Token(Token = "0x170004D0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002804")]
				[Address(RVA = "0x15633B8", Offset = "0x15633B8", VA = "0x15633B8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004D1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002806")]
				[Address(RVA = "0x1563420", Offset = "0x1563420", VA = "0x1563420", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002801")]
			[Address(RVA = "0x1563210", Offset = "0x1563210", VA = "0x1563210")]
			[DebuggerHidden]
			public <FadeOutMuscleWeight>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6002802")]
			[Address(RVA = "0x15632C8", Offset = "0x15632C8", VA = "0x15632C8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002803")]
			[Address(RVA = "0x15632CC", Offset = "0x15632CC", VA = "0x15632CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002805")]
			[Address(RVA = "0x15633C0", Offset = "0x15633C0", VA = "0x15633C0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA14D0C", Offset = "0xA14D0C")]
		public PuppetMaster puppetMaster;

		[Token(Token = "0x4000737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA14D44", Offset = "0xA14D44")]
		public float fadeOutPinWeightSpeed;

		[Token(Token = "0x4000738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA14D7C", Offset = "0xA14D7C")]
		public float fadeOutMuscleWeightSpeed;

		[Token(Token = "0x4000739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA14DB4", Offset = "0xA14DB4")]
		public float deadMuscleWeight;

		[Token(Token = "0x400073A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Animator animator;

		[Token(Token = "0x400073B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 defaultPosition;

		[Token(Token = "0x400073C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Quaternion defaultRotation;

		[Token(Token = "0x400073D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool isDead;

		[Token(Token = "0x6000929")]
		[Address(RVA = "0x1562E8C", Offset = "0x1562E8C", VA = "0x1562E8C")]
		private void Start()
		{
		}

		[Token(Token = "0x600092A")]
		[Address(RVA = "0x1562F28", Offset = "0x1562F28", VA = "0x1562F28")]
		private void Update()
		{
		}

		[Token(Token = "0x600092B")]
		[Address(RVA = "0x1563104", Offset = "0x1563104", VA = "0x1563104")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA28DEC", Offset = "0xA28DEC")]
		private IEnumerator FadeOutPinWeight()
		{
			return null;
		}

		[Token(Token = "0x600092C")]
		[Address(RVA = "0x1563174", Offset = "0x1563174", VA = "0x1563174")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA28E50", Offset = "0xA28E50")]
		private IEnumerator FadeOutMuscleWeight()
		{
			return null;
		}

		[Token(Token = "0x600092D")]
		[Address(RVA = "0x156323C", Offset = "0x156323C", VA = "0x156323C")]
		public Dying()
		{
		}
	}
	[Token(Token = "0x20000E8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA06DD0", Offset = "0xA06DD0")]
	public class FXCollisionBlood : MonoBehaviour
	{
		[Token(Token = "0x400073E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BehaviourPuppet puppet;

		[Token(Token = "0x400073F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float minCollisionImpulse;

		[Token(Token = "0x4000740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int emission;

		[Token(Token = "0x4000741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float emissionImpulseAdd;

		[Token(Token = "0x4000742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int maxEmission;

		[Token(Token = "0x4000743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ParticleSystem particles;

		[Token(Token = "0x600092E")]
		[Address(RVA = "0x1566608", Offset = "0x1566608", VA = "0x1566608")]
		private void Start()
		{
		}

		[Token(Token = "0x600092F")]
		[Address(RVA = "0x15666D8", Offset = "0x15666D8", VA = "0x15666D8")]
		private void OnCollisionImpulse(MuscleCollision m, float impulse)
		{
		}

		[Token(Token = "0x6000930")]
		[Address(RVA = "0x1566994", Offset = "0x1566994", VA = "0x1566994")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000931")]
		[Address(RVA = "0x1566A84", Offset = "0x1566A84", VA = "0x1566A84")]
		public FXCollisionBlood()
		{
		}
	}
	[Token(Token = "0x20000E9")]
	public class Grab : MonoBehaviour
	{
		[Token(Token = "0x4000744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA14DEC", Offset = "0xA14DEC")]
		public PuppetMaster puppetMaster;

		[Token(Token = "0x4000745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA14E24", Offset = "0xA14E24")]
		public UserControlMelee userControl;

		[Token(Token = "0x4000746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA14E5C", Offset = "0xA14E5C")]
		public int grabLayer;

		[Token(Token = "0x4000747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool grabbed;

		[Token(Token = "0x4000748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Rigidbody r;

		[Token(Token = "0x4000749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Collider c;

		[Token(Token = "0x400074A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private BehaviourPuppet otherPuppet;

		[Token(Token = "0x400074B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Collider otherCollider;

		[Token(Token = "0x400074C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ConfigurableJoint joint;

		[Token(Token = "0x400074D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float nextGrabTime;

		[Token(Token = "0x400074E")]
		private const float massMlp = 5f;

		[Token(Token = "0x400074F")]
		private const int solverIterationMlp = 10;

		[Token(Token = "0x6000932")]
		[Address(RVA = "0x1566AA4", Offset = "0x1566AA4", VA = "0x1566AA4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000933")]
		[Address(RVA = "0x1566B14", Offset = "0x1566B14", VA = "0x1566B14")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6000934")]
		[Address(RVA = "0x1566EE4", Offset = "0x1566EE4", VA = "0x1566EE4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000935")]
		[Address(RVA = "0x1567010", Offset = "0x1567010", VA = "0x1567010")]
		public Grab()
		{
		}
	}
	[Token(Token = "0x20000EA")]
	public class Killing : MonoBehaviour
	{
		[Token(Token = "0x4000750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA14E94", Offset = "0xA14E94")]
		public PuppetMaster puppetMaster;

		[Token(Token = "0x4000751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA14ECC", Offset = "0xA14ECC")]
		public PuppetMaster.StateSettings stateSettings;

		[Token(Token = "0x6000936")]
		[Address(RVA = "0x1568D0C", Offset = "0x1568D0C", VA = "0x1568D0C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000937")]
		[Address(RVA = "0x1568DDC", Offset = "0x1568DDC", VA = "0x1568DDC")]
		public Killing()
		{
		}
	}
	[Token(Token = "0x20000EB")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA06E34", Offset = "0xA06E34")]
	public class LayerSetup : MonoBehaviour
	{
		[Token(Token = "0x4000752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA14F04", Offset = "0xA14F04")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA14F04", Offset = "0xA14F04")]
		public Transform characterController;

		[Token(Token = "0x4000753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA14F64", Offset = "0xA14F64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA14F64", Offset = "0xA14F64")]
		public int characterControllerLayer;

		[Token(Token = "0x4000754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA14FC4", Offset = "0xA14FC4")]
		public int ragdollLayer;

		[Token(Token = "0x4000755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA14FFC", Offset = "0xA14FFC")]
		public LayerMask ignoreCollisionWithCharacterController;

		[Token(Token = "0x4000756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA15034", Offset = "0xA15034")]
		public LayerMask ignoreCollisionWithRagdoll;

		[Token(Token = "0x4000757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private PuppetMaster puppetMaster;

		[Token(Token = "0x6000938")]
		[Address(RVA = "0x1569790", Offset = "0x1569790", VA = "0x1569790")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000939")]
		[Address(RVA = "0x156998C", Offset = "0x156998C", VA = "0x156998C")]
		public LayerSetup()
		{
		}
	}
	[Token(Token = "0x20000EC")]
	public class NavMeshPuppet : MonoBehaviour
	{
		[Token(Token = "0x4000758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BehaviourPuppet puppet;

		[Token(Token = "0x4000759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NavMeshAgent agent;

		[Token(Token = "0x400075A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform target;

		[Token(Token = "0x400075B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Animator animator;

		[Token(Token = "0x600093A")]
		[Address(RVA = "0x156DB04", Offset = "0x156DB04", VA = "0x156DB04")]
		private void Update()
		{
		}

		[Token(Token = "0x600093B")]
		[Address(RVA = "0x156DC00", Offset = "0x156DC00", VA = "0x156DC00")]
		public NavMeshPuppet()
		{
		}
	}
	[Token(Token = "0x20000ED")]
	public class Planet : MonoBehaviour
	{
		[Token(Token = "0x400075C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float mass;

		[Token(Token = "0x600093C")]
		[Address(RVA = "0x15703CC", Offset = "0x15703CC", VA = "0x15703CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600093D")]
		[Address(RVA = "0x15704B4", Offset = "0x15704B4", VA = "0x15704B4")]
		public Planet()
		{
		}
	}
	[Token(Token = "0x20000EE")]
	public class PlanetaryGravity : MonoBehaviour
	{
		[Token(Token = "0x400075D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Planet planet;

		[Token(Token = "0x400075E")]
		private const float G = 6.672E-11f;

		[Token(Token = "0x400075F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Rigidbody _r;

		[Token(Token = "0x170000B0")]
		private Rigidbody r
		{
			[Token(Token = "0x600093E")]
			[Address(RVA = "0x15704C4", Offset = "0x15704C4", VA = "0x15704C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600093F")]
		[Address(RVA = "0x157055C", Offset = "0x157055C", VA = "0x157055C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000940")]
		[Address(RVA = "0x157063C", Offset = "0x157063C", VA = "0x157063C")]
		private void ApplyGravity(Rigidbody r)
		{
		}

		[Token(Token = "0x6000941")]
		[Address(RVA = "0x157080C", Offset = "0x157080C", VA = "0x157080C")]
		public PlanetaryGravity()
		{
		}
	}
	[Token(Token = "0x20000EF")]
	public class PropDemo : MonoBehaviour
	{
		[Token(Token = "0x4000760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1506C", Offset = "0xA1506C")]
		public PuppetMasterProp prop;

		[Token(Token = "0x4000761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA150A4", Offset = "0xA150A4")]
		public PropMuscle propMuscleLeft;

		[Token(Token = "0x4000762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA150DC", Offset = "0xA150DC")]
		public PropMuscle propMuscleRight;

		[Token(Token = "0x4000763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA15114", Offset = "0xA15114")]
		public bool pickUpOnAwake;

		[Token(Token = "0x4000764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool right;

		[Token(Token = "0x170000B1")]
		private PropMuscle connectTo
		{
			[Token(Token = "0x6000944")]
			[Address(RVA = "0x1570FB8", Offset = "0x1570FB8", VA = "0x1570FB8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000942")]
		[Address(RVA = "0x1570F7C", Offset = "0x1570F7C", VA = "0x1570F7C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000943")]
		[Address(RVA = "0x1570FD4", Offset = "0x1570FD4", VA = "0x1570FD4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000945")]
		[Address(RVA = "0x1571094", Offset = "0x1571094", VA = "0x1571094")]
		public PropDemo()
		{
		}
	}
	[Token(Token = "0x20000F0")]
	public class PropMelee : Prop
	{
		[Token(Token = "0x2000537")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D4A8", Offset = "0xA0D4A8")]
		private sealed class <Action>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001BD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001BD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001BD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PropMelee <>4__this;

			[Token(Token = "0x4001BD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float duration;

			[Token(Token = "0x4001BD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <additionalPinMuscleIndex>5__2;

			[Token(Token = "0x170004D2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600280A")]
				[Address(RVA = "0x15715D8", Offset = "0x15715D8", VA = "0x15715D8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004D3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600280C")]
				[Address(RVA = "0x1571640", Offset = "0x1571640", VA = "0x1571640", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002807")]
			[Address(RVA = "0x157116C", Offset = "0x157116C", VA = "0x157116C")]
			[DebuggerHidden]
			public <Action>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6002808")]
			[Address(RVA = "0x15713B0", Offset = "0x15713B0", VA = "0x15713B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002809")]
			[Address(RVA = "0x15713B4", Offset = "0x15713B4", VA = "0x15713B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600280B")]
			[Address(RVA = "0x15715E0", Offset = "0x15715E0", VA = "0x15715E0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0xA1514C", Offset = "0xA1514C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1514C", Offset = "0xA1514C")]
		public CapsuleCollider capsuleCollider;

		[Token(Token = "0x4000766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA151AC", Offset = "0xA151AC")]
		public BoxCollider boxCollider;

		[Token(Token = "0x4000767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA151E4", Offset = "0xA151E4")]
		public float actionColliderRadiusMlp;

		[Token(Token = "0x4000768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1521C", Offset = "0xA1521C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA1521C", Offset = "0xA1521C")]
		public float actionAdditionalPinWeight;

		[Token(Token = "0x4000769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA15270", Offset = "0xA15270")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA15270", Offset = "0xA15270")]
		public float actionMassMlp;

		[Token(Token = "0x400076A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA152C8", Offset = "0xA152C8")]
		public Vector3 COMOffset;

		[Token(Token = "0x400076B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float defaultColliderRadius;

		[Token(Token = "0x400076C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private float defaultMass;

		[Token(Token = "0x400076D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float defaultAddMass;

		[Token(Token = "0x400076E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Rigidbody r;

		[Token(Token = "0x6000946")]
		[Address(RVA = "0x15710A4", Offset = "0x15710A4", VA = "0x15710A4")]
		public void StartAction(float duration)
		{
		}

		[Token(Token = "0x6000947")]
		[Address(RVA = "0x15710EC", Offset = "0x15710EC", VA = "0x15710EC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA28EB4", Offset = "0xA28EB4")]
		public IEnumerator Action(float duration)
		{
			return null;
		}

		[Token(Token = "0x6000948")]
		[Address(RVA = "0x1571198", Offset = "0x1571198", VA = "0x1571198", Slot = "6")]
		protected override void OnStart()
		{
		}

		[Token(Token = "0x6000949")]
		[Address(RVA = "0x15712A8", Offset = "0x15712A8", VA = "0x15712A8", Slot = "4")]
		protected override void OnPickUp(PropRoot propRoot)
		{
		}

		[Token(Token = "0x600094A")]
		[Address(RVA = "0x1571320", Offset = "0x1571320", VA = "0x1571320", Slot = "5")]
		protected override void OnDrop()
		{
		}

		[Token(Token = "0x600094B")]
		[Address(RVA = "0x1571398", Offset = "0x1571398", VA = "0x1571398")]
		public PropMelee()
		{
		}
	}
	[Token(Token = "0x20000F1")]
	public class PropPickUpTrigger : MonoBehaviour
	{
		[Token(Token = "0x400076F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PuppetMasterProp prop;

		[Token(Token = "0x4000770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LayerMask characterLayers;

		[Token(Token = "0x4000771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CharacterPuppet characterPuppet;

		[Token(Token = "0x600094C")]
		[Address(RVA = "0x1571648", Offset = "0x1571648", VA = "0x1571648")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x600094D")]
		[Address(RVA = "0x15717CC", Offset = "0x15717CC", VA = "0x15717CC")]
		public PropPickUpTrigger()
		{
		}
	}
	[Token(Token = "0x20000F2")]
	public class PuppetBoard : MonoBehaviour
	{
		[Token(Token = "0x4000772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA15300", Offset = "0xA15300")]
		public Rigidbody target;

		[Token(Token = "0x4000773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA15338", Offset = "0xA15338")]
		public Transform bodyTargetPivot;

		[Token(Token = "0x4000774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA15370", Offset = "0xA15370")]
		public Transform bodyTarget;

		[Token(Token = "0x4000775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Rigidbody r;

		[Token(Token = "0x600094E")]
		[Address(RVA = "0x15717D4", Offset = "0x15717D4", VA = "0x15717D4")]
		private void Start()
		{
		}

		[Token(Token = "0x600094F")]
		[Address(RVA = "0x157187C", Offset = "0x157187C", VA = "0x157187C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000950")]
		[Address(RVA = "0x1571AA0", Offset = "0x1571AA0", VA = "0x1571AA0")]
		public PuppetBoard()
		{
		}
	}
	[Token(Token = "0x20000F3")]
	public class PuppetMasterPropMelee : PuppetMasterProp
	{
		[Token(Token = "0x2000538")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D4B8", Offset = "0xA0D4B8")]
		private sealed class <Action>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001BD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001BD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001BD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PuppetMasterPropMelee <>4__this;

			[Token(Token = "0x4001BD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float duration;

			[Token(Token = "0x170004D4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002810")]
				[Address(RVA = "0x1571EB8", Offset = "0x1571EB8", VA = "0x1571EB8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004D5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002812")]
				[Address(RVA = "0x1571F20", Offset = "0x1571F20", VA = "0x1571F20", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600280D")]
			[Address(RVA = "0x1571B70", Offset = "0x1571B70", VA = "0x1571B70")]
			[DebuggerHidden]
			public <Action>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x600280E")]
			[Address(RVA = "0x1571DA8", Offset = "0x1571DA8", VA = "0x1571DA8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600280F")]
			[Address(RVA = "0x1571DAC", Offset = "0x1571DAC", VA = "0x1571DAC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002811")]
			[Address(RVA = "0x1571EC0", Offset = "0x1571EC0", VA = "0x1571EC0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0xA153A8", Offset = "0xA153A8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA153A8", Offset = "0xA153A8")]
		public CapsuleCollider capsuleCollider;

		[Token(Token = "0x4000777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA15408", Offset = "0xA15408")]
		public BoxCollider boxCollider;

		[Token(Token = "0x4000778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA15440", Offset = "0xA15440")]
		public float actionColliderRadiusMlp;

		[Token(Token = "0x4000779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA15478", Offset = "0xA15478")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA15478", Offset = "0xA15478")]
		public float actionAdditionalPinWeight;

		[Token(Token = "0x400077A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA154CC", Offset = "0xA154CC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA154CC", Offset = "0xA154CC")]
		public float actionMassMlp;

		[Token(Token = "0x400077B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA15520", Offset = "0xA15520")]
		public Vector3 COMOffset;

		[Token(Token = "0x400077C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private float defaultColliderRadius;

		[Token(Token = "0x400077D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private float defaultMass;

		[Token(Token = "0x400077E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float defaultAdditionalPinWeight;

		[Token(Token = "0x6000951")]
		[Address(RVA = "0x1571AA8", Offset = "0x1571AA8", VA = "0x1571AA8")]
		public void StartAction(float duration)
		{
		}

		[Token(Token = "0x6000952")]
		[Address(RVA = "0x1571AF0", Offset = "0x1571AF0", VA = "0x1571AF0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA28F18", Offset = "0xA28F18")]
		public IEnumerator Action(float duration)
		{
			return null;
		}

		[Token(Token = "0x6000953")]
		[Address(RVA = "0x1571B9C", Offset = "0x1571B9C", VA = "0x1571B9C", Slot = "7")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000954")]
		[Address(RVA = "0x1571C08", Offset = "0x1571C08", VA = "0x1571C08", Slot = "4")]
		protected override void OnPickUp(PuppetMaster puppetMaster, int propMuscleIndex)
		{
		}

		[Token(Token = "0x6000955")]
		[Address(RVA = "0x1571D2C", Offset = "0x1571D2C", VA = "0x1571D2C", Slot = "5")]
		protected override void OnDrop(PuppetMaster puppetMaster, int propMuscleIndex)
		{
		}

		[Token(Token = "0x6000956")]
		[Address(RVA = "0x1571D90", Offset = "0x1571D90", VA = "0x1571D90")]
		public PuppetMasterPropMelee()
		{
		}
	}
	[Token(Token = "0x20000F4")]
	public class PuppetScaling : MonoBehaviour
	{
		[Token(Token = "0x400077F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PuppetMaster puppetMaster;

		[Token(Token = "0x4000780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA15558", Offset = "0xA15558")]
		public float masterScale;

		[Token(Token = "0x4000781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int muscleIndex;

		[Token(Token = "0x4000782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA15574", Offset = "0xA15574")]
		public float muscleScale;

		[Token(Token = "0x4000783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float defaultMuscleSpring;

		[Token(Token = "0x6000957")]
		[Address(RVA = "0x1571F28", Offset = "0x1571F28", VA = "0x1571F28")]
		private void Start()
		{
		}

		[Token(Token = "0x6000958")]
		[Address(RVA = "0x1571F68", Offset = "0x1571F68", VA = "0x1571F68")]
		private void Update()
		{
		}

		[Token(Token = "0x6000959")]
		[Address(RVA = "0x1572304", Offset = "0x1572304", VA = "0x1572304")]
		public PuppetScaling()
		{
		}
	}
	[Token(Token = "0x20000F5")]
	public class RaycastShooter : MonoBehaviour
	{
		[Token(Token = "0x4000784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LayerMask layers;

		[Token(Token = "0x4000785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float unpin;

		[Token(Token = "0x4000786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float force;

		[Token(Token = "0x4000787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ParticleSystem blood;

		[Token(Token = "0x600095A")]
		[Address(RVA = "0x15725A0", Offset = "0x15725A0", VA = "0x15725A0")]
		private void Update()
		{
		}

		[Token(Token = "0x600095B")]
		[Address(RVA = "0x1572880", Offset = "0x1572880", VA = "0x1572880")]
		public RaycastShooter()
		{
		}
	}
	[Token(Token = "0x20000F6")]
	public class Respawning : MonoBehaviour
	{
		[Token(Token = "0x4000788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA15590", Offset = "0xA15590")]
		public Transform pool;

		[Token(Token = "0x4000789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA155C8", Offset = "0xA155C8")]
		public BehaviourPuppet puppet;

		[Token(Token = "0x400078A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA15600", Offset = "0xA15600")]
		public string idleAnimation;

		[Token(Token = "0x400078B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform puppetRoot;

		[Token(Token = "0x170000B2")]
		private bool isPooled
		{
			[Token(Token = "0x600095C")]
			[Address(RVA = "0x1572E00", Offset = "0x1572E00", VA = "0x1572E00")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600095D")]
		[Address(RVA = "0x1572E98", Offset = "0x1572E98", VA = "0x1572E98")]
		private void Start()
		{
		}

		[Token(Token = "0x600095E")]
		[Address(RVA = "0x1572EF8", Offset = "0x1572EF8", VA = "0x1572EF8")]
		private void Update()
		{
		}

		[Token(Token = "0x600095F")]
		[Address(RVA = "0x15730DC", Offset = "0x15730DC", VA = "0x15730DC")]
		private void Pool()
		{
		}

		[Token(Token = "0x6000960")]
		[Address(RVA = "0x1573100", Offset = "0x1573100", VA = "0x1573100")]
		private void Respawn(Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x6000961")]
		[Address(RVA = "0x1573A08", Offset = "0x1573A08", VA = "0x1573A08")]
		public Respawning()
		{
		}
	}
	[Token(Token = "0x20000F7")]
	public class RotateShoulderToTarget : MonoBehaviour
	{
		[Token(Token = "0x400078C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform shoulder;

		[Token(Token = "0x400078D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 euler;

		[Token(Token = "0x6000962")]
		[Address(RVA = "0x1573A10", Offset = "0x1573A10", VA = "0x1573A10")]
		private void OnPuppetMasterRead()
		{
		}

		[Token(Token = "0x6000963")]
		[Address(RVA = "0x1573AF8", Offset = "0x1573AF8", VA = "0x1573AF8")]
		public RotateShoulderToTarget()
		{
		}
	}
	[Token(Token = "0x20000F8")]
	public class SkeletonDisconnector : MonoBehaviour
	{
		[Token(Token = "0x400078E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BehaviourPuppet puppet;

		[Token(Token = "0x400078F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Skeleton skeleton;

		[Token(Token = "0x4000790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MuscleDisconnectMode disconnectMuscleMode;

		[Token(Token = "0x4000791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public LayerMask layers;

		[Token(Token = "0x4000792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float unpin;

		[Token(Token = "0x4000793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float force;

		[Token(Token = "0x4000794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ParticleSystem particles;

		[Token(Token = "0x4000795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public PropMuscle propMuscle;

		[Token(Token = "0x4000796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public PuppetMasterProp prop;

		[Token(Token = "0x6000964")]
		[Address(RVA = "0x1574DC0", Offset = "0x1574DC0", VA = "0x1574DC0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000965")]
		[Address(RVA = "0x157528C", Offset = "0x157528C", VA = "0x157528C")]
		public SkeletonDisconnector()
		{
		}
	}
	[Token(Token = "0x20000F9")]
	public class SkeletonShooter : MonoBehaviour
	{
		[Token(Token = "0x4000797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PuppetMaster puppetMaster;

		[Token(Token = "0x4000798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Skeleton skeleton;

		[Token(Token = "0x4000799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MuscleRemoveMode removeMuscleMode;

		[Token(Token = "0x400079A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public LayerMask layers;

		[Token(Token = "0x400079B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float unpin;

		[Token(Token = "0x400079C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float force;

		[Token(Token = "0x400079D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ParticleSystem particles;

		[Token(Token = "0x6000966")]
		[Address(RVA = "0x157529C", Offset = "0x157529C", VA = "0x157529C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000967")]
		[Address(RVA = "0x15756E8", Offset = "0x15756E8", VA = "0x15756E8")]
		public SkeletonShooter()
		{
		}
	}
	[Token(Token = "0x20000FA")]
	public class UserControlAIMelee : UserControlThirdPerson
	{
		[Token(Token = "0x400079E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public BehaviourPuppet targetPuppet;

		[Token(Token = "0x400079F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float stoppingDistance;

		[Token(Token = "0x40007A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float stoppingThreshold;

		[Token(Token = "0x40007A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool isAttacking;

		[Token(Token = "0x40007A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float attackTimer;

		[Token(Token = "0x170000B3")]
		private Transform moveTarget
		{
			[Token(Token = "0x6000968")]
			[Address(RVA = "0x1577E54", Offset = "0x1577E54", VA = "0x1577E54")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000969")]
		[Address(RVA = "0x1577EA8", Offset = "0x1577EA8", VA = "0x1577EA8", Slot = "5")]
		protected override void Update()
		{
		}

		[Token(Token = "0x600096A")]
		[Address(RVA = "0x1578158", Offset = "0x1578158", VA = "0x1578158")]
		private bool CanAttack()
		{
			return default(bool);
		}

		[Token(Token = "0x600096B")]
		[Address(RVA = "0x157836C", Offset = "0x157836C", VA = "0x157836C")]
		public UserControlAIMelee()
		{
		}
	}
	[Token(Token = "0x20000FB")]
	public class UserControlMelee : UserControlThirdPerson
	{
		[Token(Token = "0x40007A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public KeyCode hitKey;

		[Token(Token = "0x600096C")]
		[Address(RVA = "0x1578A7C", Offset = "0x1578A7C", VA = "0x1578A7C", Slot = "5")]
		protected override void Update()
		{
		}

		[Token(Token = "0x600096D")]
		[Address(RVA = "0x1578AB0", Offset = "0x1578AB0", VA = "0x1578AB0")]
		public UserControlMelee()
		{
		}
	}
	[Token(Token = "0x20000FC")]
	public abstract class CharacterAnimationBase : MonoBehaviour
	{
		[Token(Token = "0x40007A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool smoothFollow;

		[Token(Token = "0x40007A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float smoothFollowSpeed;

		[Token(Token = "0x40007A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected bool animatePhysics;

		[Token(Token = "0x40007A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 lastPosition;

		[Token(Token = "0x40007A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 localPosition;

		[Token(Token = "0x40007A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion localRotation;

		[Token(Token = "0x40007AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Quaternion lastRotation;

		[Token(Token = "0x170000B4")]
		public virtual bool animationGrounded
		{
			[Token(Token = "0x600096F")]
			[Address(RVA = "0x155C8D4", Offset = "0x155C8D4", VA = "0x155C8D4", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600096E")]
		[Address(RVA = "0x155C8B0", Offset = "0x155C8B0", VA = "0x155C8B0", Slot = "4")]
		public virtual Vector3 GetPivotPoint()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000970")]
		[Address(RVA = "0x155C8DC", Offset = "0x155C8DC", VA = "0x155C8DC")]
		public float GetAngleFromForward(Vector3 worldDirection)
		{
			return default(float);
		}

		[Token(Token = "0x6000971")]
		[Address(RVA = "0x155C9A0", Offset = "0x155C9A0", VA = "0x155C9A0", Slot = "6")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000972")]
		[Address(RVA = "0x155CB18", Offset = "0x155CB18", VA = "0x155CB18", Slot = "7")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x6000973")]
		[Address(RVA = "0x155CDCC", Offset = "0x155CDCC", VA = "0x155CDCC", Slot = "8")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6000974")]
		[Address(RVA = "0x155CB28", Offset = "0x155CB28", VA = "0x155CB28")]
		private void SmoothFollow()
		{
		}

		[Token(Token = "0x6000975")]
		[Address(RVA = "0x155CDDC", Offset = "0x155CDDC", VA = "0x155CDDC")]
		protected CharacterAnimationBase()
		{
		}
	}
	[Token(Token = "0x20000FD")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA06E98", Offset = "0xA06E98")]
	public class CharacterAnimationSimple : CharacterAnimationBase
	{
		[Token(Token = "0x40007AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public CharacterThirdPerson characterController;

		[Token(Token = "0x40007AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float pivotOffset;

		[Token(Token = "0x40007AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public AnimationCurve moveSpeed;

		[Token(Token = "0x40007AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Animator animator;

		[Token(Token = "0x6000976")]
		[Address(RVA = "0x155D3BC", Offset = "0x155D3BC", VA = "0x155D3BC", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000977")]
		[Address(RVA = "0x155D41C", Offset = "0x155D41C", VA = "0x155D41C", Slot = "4")]
		public override Vector3 GetPivotPoint()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000978")]
		[Address(RVA = "0x155D548", Offset = "0x155D548", VA = "0x155D548")]
		private void Update()
		{
		}

		[Token(Token = "0x6000979")]
		[Address(RVA = "0x155D6C4", Offset = "0x155D6C4", VA = "0x155D6C4")]
		public CharacterAnimationSimple()
		{
		}
	}
	[Token(Token = "0x20000FE")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA06EFC", Offset = "0xA06EFC")]
	public class CharacterAnimationThirdPerson : CharacterAnimationBase
	{
		[Token(Token = "0x40007AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public CharacterThirdPerson characterController;

		[Token(Token = "0x40007B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float turnSensitivity;

		[Token(Token = "0x40007B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private float turnSpeed;

		[Token(Token = "0x40007B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private float runCycleLegOffset;

		[Token(Token = "0x40007B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA15668", Offset = "0xA15668")]
		[SerializeField]
		private float animSpeedMultiplier;

		[Token(Token = "0x40007B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Animator animator;

		[Token(Token = "0x40007B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 lastForward;

		[Token(Token = "0x40007B6")]
		private const string groundedDirectional = "Grounded Directional";

		[Token(Token = "0x40007B7")]
		private const string groundedStrafe = "Grounded Strafe";

		[Token(Token = "0x40007B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float deltaAngle;

		[Token(Token = "0x170000B5")]
		public override bool animationGrounded
		{
			[Token(Token = "0x600097C")]
			[Address(RVA = "0x155D77C", Offset = "0x155D77C", VA = "0x155D77C", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600097A")]
		[Address(RVA = "0x155D6DC", Offset = "0x155D6DC", VA = "0x155D6DC", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600097B")]
		[Address(RVA = "0x155D760", Offset = "0x155D760", VA = "0x155D760", Slot = "4")]
		public override Vector3 GetPivotPoint()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600097D")]
		[Address(RVA = "0x155CF74", Offset = "0x155CF74", VA = "0x155CF74", Slot = "9")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x600097E")]
		[Address(RVA = "0x155D86C", Offset = "0x155D86C", VA = "0x155D86C")]
		private void OnAnimatorMove()
		{
		}

		[Token(Token = "0x600097F")]
		[Address(RVA = "0x155D398", Offset = "0x155D398", VA = "0x155D398")]
		public CharacterAnimationThirdPerson()
		{
		}
	}
	[Token(Token = "0x20000FF")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA06F60", Offset = "0xA06F60")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA06F60", Offset = "0xA06F60")]
	public abstract class CharacterBase : MonoBehaviour
	{
		[Token(Token = "0x40007B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA156AC", Offset = "0xA156AC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA156AC", Offset = "0xA156AC")]
		public Transform gravityTarget;

		[Token(Token = "0x40007BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1570C", Offset = "0xA1570C")]
		public float gravityMultiplier;

		[Token(Token = "0x40007BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float airborneThreshold;

		[Token(Token = "0x40007BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float slopeStartAngle;

		[Token(Token = "0x40007BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float slopeEndAngle;

		[Token(Token = "0x40007BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float spherecastRadius;

		[Token(Token = "0x40007BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public LayerMask groundLayers;

		[Token(Token = "0x40007C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private PhysicMaterial zeroFrictionMaterial;

		[Token(Token = "0x40007C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private PhysicMaterial highFrictionMaterial;

		[Token(Token = "0x40007C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Rigidbody r;

		[Token(Token = "0x40007C3")]
		protected const float half = 0.5f;

		[Token(Token = "0x40007C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected float originalHeight;

		[Token(Token = "0x40007C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		protected Vector3 originalCenter;

		[Token(Token = "0x40007C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected CapsuleCollider capsule;

		[Token(Token = "0x6000980")]
		public abstract void Move(Vector3 deltaPosition, Quaternion deltaRotation);

		[Token(Token = "0x6000981")]
		[Address(RVA = "0x155DF20", Offset = "0x155DF20", VA = "0x155DF20")]
		protected Vector3 GetGravity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000982")]
		[Address(RVA = "0x155E0A4", Offset = "0x155E0A4", VA = "0x155E0A4", Slot = "5")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000983")]
		[Address(RVA = "0x155E23C", Offset = "0x155E23C", VA = "0x155E23C", Slot = "6")]
		protected virtual RaycastHit GetSpherecastHit()
		{
			return default(RaycastHit);
		}

		[Token(Token = "0x6000984")]
		[Address(RVA = "0x155E4B4", Offset = "0x155E4B4", VA = "0x155E4B4")]
		public float GetAngleFromForward(Vector3 worldDirection)
		{
			return default(float);
		}

		[Token(Token = "0x6000985")]
		[Address(RVA = "0x155E578", Offset = "0x155E578", VA = "0x155E578")]
		protected void RigidbodyRotateAround(Vector3 point, Vector3 axis, float angle)
		{
		}

		[Token(Token = "0x6000986")]
		[Address(RVA = "0x155E760", Offset = "0x155E760", VA = "0x155E760")]
		protected void ScaleCapsule(float mlp)
		{
		}

		[Token(Token = "0x6000987")]
		[Address(RVA = "0x155E910", Offset = "0x155E910", VA = "0x155E910")]
		protected void HighFriction()
		{
		}

		[Token(Token = "0x6000988")]
		[Address(RVA = "0x155E934", Offset = "0x155E934", VA = "0x155E934")]
		protected void ZeroFriction()
		{
		}

		[Token(Token = "0x6000989")]
		[Address(RVA = "0x155E958", Offset = "0x155E958", VA = "0x155E958")]
		protected float GetSlopeDamper(Vector3 velocity, Vector3 groundNormal)
		{
			return default(float);
		}

		[Token(Token = "0x600098A")]
		[Address(RVA = "0x155EA5C", Offset = "0x155EA5C", VA = "0x155EA5C")]
		protected CharacterBase()
		{
		}
	}
	[Token(Token = "0x2000100")]
	public class CharacterThirdPerson : CharacterBase
	{
		[Serializable]
		[Token(Token = "0x2000539")]
		public enum MoveMode
		{
			[Token(Token = "0x4001BDA")]
			Directional,
			[Token(Token = "0x4001BDB")]
			Strafe
		}

		[Token(Token = "0x200053A")]
		public struct AnimState
		{
			[Token(Token = "0x4001BDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 moveDirection;

			[Token(Token = "0x4001BDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public bool jump;

			[Token(Token = "0x4001BDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
			public bool crouch;

			[Token(Token = "0x4001BDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
			public bool onGround;

			[Token(Token = "0x4001BE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF")]
			public bool isStrafing;

			[Token(Token = "0x4001BE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float yVelocity;

			[Token(Token = "0x4001BE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public bool doubleJump;
		}

		[Token(Token = "0x200053B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D4C8", Offset = "0xA0D4C8")]
		private sealed class <JumpSmooth>d__74 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001BE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001BE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001BE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CharacterThirdPerson <>4__this;

			[Token(Token = "0x4001BE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 jumpVelocity;

			[Token(Token = "0x4001BE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private int <steps>5__2;

			[Token(Token = "0x4001BE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <stepsToTake>5__3;

			[Token(Token = "0x170004D6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002816")]
				[Address(RVA = "0x1561FD4", Offset = "0x1561FD4", VA = "0x1561FD4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004D7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002818")]
				[Address(RVA = "0x156203C", Offset = "0x156203C", VA = "0x156203C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002813")]
			[Address(RVA = "0x1561E68", Offset = "0x1561E68", VA = "0x1561E68")]
			[DebuggerHidden]
			public <JumpSmooth>d__74(int <>1__state)
			{
			}

			[Token(Token = "0x6002814")]
			[Address(RVA = "0x1561E94", Offset = "0x1561E94", VA = "0x1561E94", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002815")]
			[Address(RVA = "0x1561E98", Offset = "0x1561E98", VA = "0x1561E98", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002817")]
			[Address(RVA = "0x1561FDC", Offset = "0x1561FDC", VA = "0x1561FDC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40007C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA15744", Offset = "0xA15744")]
		public CharacterAnimationBase characterAnimation;

		[Token(Token = "0x40007C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public UserControlThirdPerson userControl;

		[Token(Token = "0x40007C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public CameraController cam;

		[Token(Token = "0x40007CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA1577C", Offset = "0xA1577C")]
		public MoveMode moveMode;

		[Token(Token = "0x40007CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public bool smoothPhysics;

		[Token(Token = "0x40007CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float smoothAccelerationTime;

		[Token(Token = "0x40007CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float linearAccelerationSpeed;

		[Token(Token = "0x40007CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float platformFriction;

		[Token(Token = "0x40007CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float groundStickyEffect;

		[Token(Token = "0x40007D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float maxVerticalVelocityOnGround;

		[Token(Token = "0x40007D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float velocityToGroundTangentWeight;

		[Token(Token = "0x40007D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA157B4", Offset = "0xA157B4")]
		public bool lookInCameraDirection;

		[Token(Token = "0x40007D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public float turnSpeed;

		[Token(Token = "0x40007D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float stationaryTurnSpeedMlp;

		[Token(Token = "0x40007D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA157EC", Offset = "0xA157EC")]
		public bool smoothJump;

		[Token(Token = "0x40007D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float airSpeed;

		[Token(Token = "0x40007D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public float airControl;

		[Token(Token = "0x40007D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float jumpPower;

		[Token(Token = "0x40007D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float jumpRepeatDelayTime;

		[Token(Token = "0x40007DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public bool doubleJumpEnabled;

		[Token(Token = "0x40007DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public float doubleJumpPowerMlp;

		[Token(Token = "0x40007DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA15824", Offset = "0xA15824")]
		public LayerMask wallRunLayers;

		[Token(Token = "0x40007DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public float wallRunMaxLength;

		[Token(Token = "0x40007DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public float wallRunMinMoveMag;

		[Token(Token = "0x40007DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public float wallRunMinVelocityY;

		[Token(Token = "0x40007E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public float wallRunRotationSpeed;

		[Token(Token = "0x40007E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public float wallRunMaxRotationAngle;

		[Token(Token = "0x40007E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public float wallRunWeightSpeed;

		[Token(Token = "0x40007E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA1585C", Offset = "0xA1585C")]
		public float crouchCapsuleScaleMlp;

		[Token(Token = "0x40007E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA15894", Offset = "0xA15894")]
		private bool <onGround>k__BackingField;

		[Token(Token = "0x40007E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public AnimState animState;

		[Token(Token = "0x40007E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		protected Vector3 moveDirection;

		[Token(Token = "0x40007E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Animator animator;

		[Token(Token = "0x40007E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Vector3 normal;

		[Token(Token = "0x40007E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private Vector3 platformVelocity;

		[Token(Token = "0x40007EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private Vector3 platformAngularVelocity;

		[Token(Token = "0x40007EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private RaycastHit hit;

		[Token(Token = "0x40007EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private float jumpLeg;

		[Token(Token = "0x40007ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		private float jumpEndTime;

		[Token(Token = "0x40007EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private float forwardMlp;

		[Token(Token = "0x40007EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		private float groundDistance;

		[Token(Token = "0x40007F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private float lastAirTime;

		[Token(Token = "0x40007F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		private float stickyForce;

		[Token(Token = "0x40007F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private Vector3 wallNormal;

		[Token(Token = "0x40007F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		private Vector3 moveDirectionVelocity;

		[Token(Token = "0x40007F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private float wallRunWeight;

		[Token(Token = "0x40007F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		private float lastWallRunWeight;

		[Token(Token = "0x40007F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private Vector3 fixedDeltaPosition;

		[Token(Token = "0x40007F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		private Quaternion fixedDeltaRotation;

		[Token(Token = "0x40007F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		private bool fixedFrame;

		[Token(Token = "0x40007F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private float wallRunEndTime;

		[Token(Token = "0x40007FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		private Vector3 gravity;

		[Token(Token = "0x40007FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private Vector3 verticalVelocity;

		[Token(Token = "0x40007FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		private float velocityY;

		[Token(Token = "0x40007FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private bool doubleJumped;

		[Token(Token = "0x40007FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E1")]
		private bool jumpReleased;

		[Token(Token = "0x170000B6")]
		public bool onGround
		{
			[Token(Token = "0x600098B")]
			[Address(RVA = "0x156023C", Offset = "0x156023C", VA = "0x156023C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA28F7C", Offset = "0xA28F7C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600098C")]
			[Address(RVA = "0x1560244", Offset = "0x1560244", VA = "0x1560244")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA28F8C", Offset = "0xA28F8C")]
			private set
			{
			}
		}

		[Token(Token = "0x600098D")]
		[Address(RVA = "0x155F43C", Offset = "0x155F43C", VA = "0x155F43C", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600098E")]
		[Address(RVA = "0x1560250", Offset = "0x1560250", VA = "0x1560250")]
		private void OnAnimatorMove()
		{
		}

		[Token(Token = "0x600098F")]
		[Address(RVA = "0x155F6C4", Offset = "0x155F6C4", VA = "0x155F6C4", Slot = "4")]
		public override void Move(Vector3 deltaPosition, Quaternion deltaRotation)
		{
		}

		[Token(Token = "0x6000990")]
		[Address(RVA = "0x15602E0", Offset = "0x15602E0", VA = "0x15602E0")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000991")]
		[Address(RVA = "0x155F328", Offset = "0x155F328", VA = "0x155F328", Slot = "7")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000992")]
		[Address(RVA = "0x15614D8", Offset = "0x15614D8", VA = "0x15614D8", Slot = "8")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x6000993")]
		[Address(RVA = "0x15608EC", Offset = "0x15608EC", VA = "0x15608EC")]
		private void MoveFixed(Vector3 deltaPosition)
		{
		}

		[Token(Token = "0x6000994")]
		[Address(RVA = "0x15615B8", Offset = "0x15615B8", VA = "0x15615B8")]
		private void WallRun()
		{
		}

		[Token(Token = "0x6000995")]
		[Address(RVA = "0x1561BA8", Offset = "0x1561BA8", VA = "0x1561BA8")]
		private bool CanWallRun()
		{
			return default(bool);
		}

		[Token(Token = "0x6000996")]
		[Address(RVA = "0x156121C", Offset = "0x156121C", VA = "0x156121C")]
		private Vector3 GetMoveDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000997")]
		[Address(RVA = "0x155FA58", Offset = "0x155FA58", VA = "0x155FA58", Slot = "9")]
		protected virtual void Rotate()
		{
		}

		[Token(Token = "0x6000998")]
		[Address(RVA = "0x1561C48", Offset = "0x1561C48", VA = "0x1561C48")]
		private Vector3 GetForwardDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000999")]
		[Address(RVA = "0x155FEF0", Offset = "0x155FEF0", VA = "0x155FEF0", Slot = "10")]
		protected virtual bool Jump()
		{
			return default(bool);
		}

		[Token(Token = "0x600099A")]
		[Address(RVA = "0x1561DD4", Offset = "0x1561DD4", VA = "0x1561DD4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA28F9C", Offset = "0xA28F9C")]
		private IEnumerator JumpSmooth(Vector3 jumpVelocity)
		{
			return null;
		}

		[Token(Token = "0x600099B")]
		[Address(RVA = "0x1560DFC", Offset = "0x1560DFC", VA = "0x1560DFC")]
		private void GroundCheck()
		{
		}

		[Token(Token = "0x600099C")]
		[Address(RVA = "0x1560108", Offset = "0x1560108", VA = "0x1560108")]
		public CharacterThirdPerson()
		{
		}
	}
	[Token(Token = "0x2000101")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA06FEC", Offset = "0xA06FEC")]
	public class SimpleLocomotion : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200053C")]
		public enum RotationMode
		{
			[Token(Token = "0x4001BEA")]
			Smooth,
			[Token(Token = "0x4001BEB")]
			Linear
		}

		[Token(Token = "0x40007FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA158A4", Offset = "0xA158A4")]
		public CameraController cameraController;

		[Token(Token = "0x4000800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA158DC", Offset = "0xA158DC")]
		public float accelerationTime;

		[Token(Token = "0x4000801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA15914", Offset = "0xA15914")]
		public float turnTime;

		[Token(Token = "0x4000802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1594C", Offset = "0xA1594C")]
		public bool walkByDefault;

		[Token(Token = "0x4000803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA15984", Offset = "0xA15984")]
		public RotationMode rotationMode;

		[Token(Token = "0x4000804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA159BC", Offset = "0xA159BC")]
		public float moveSpeed;

		[Token(Token = "0x4000805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA159F4", Offset = "0xA159F4")]
		private bool <isGrounded>k__BackingField;

		[Token(Token = "0x4000806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Animator animator;

		[Token(Token = "0x4000807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float speed;

		[Token(Token = "0x4000808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float angleVel;

		[Token(Token = "0x4000809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float speedVel;

		[Token(Token = "0x400080A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 linearTargetDirection;

		[Token(Token = "0x400080B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private CharacterController characterController;

		[Token(Token = "0x170000B7")]
		public bool isGrounded
		{
			[Token(Token = "0x600099D")]
			[Address(RVA = "0x157442C", Offset = "0x157442C", VA = "0x157442C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA29000", Offset = "0xA29000")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600099E")]
			[Address(RVA = "0x1574434", Offset = "0x1574434", VA = "0x1574434")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA29010", Offset = "0xA29010")]
			private set
			{
			}
		}

		[Token(Token = "0x600099F")]
		[Address(RVA = "0x1574440", Offset = "0x1574440", VA = "0x1574440")]
		private void Start()
		{
		}

		[Token(Token = "0x60009A0")]
		[Address(RVA = "0x15744C8", Offset = "0x15744C8", VA = "0x15744C8")]
		private void Update()
		{
		}

		[Token(Token = "0x60009A1")]
		[Address(RVA = "0x1574BC4", Offset = "0x1574BC4", VA = "0x1574BC4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60009A2")]
		[Address(RVA = "0x157451C", Offset = "0x157451C", VA = "0x157451C")]
		private void Rotate()
		{
		}

		[Token(Token = "0x60009A3")]
		[Address(RVA = "0x157491C", Offset = "0x157491C", VA = "0x157491C")]
		private void Move()
		{
		}

		[Token(Token = "0x60009A4")]
		[Address(RVA = "0x1574C00", Offset = "0x1574C00", VA = "0x1574C00")]
		private Vector3 GetInputVector()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60009A5")]
		[Address(RVA = "0x1574CF8", Offset = "0x1574CF8", VA = "0x1574CF8")]
		private Vector3 GetInputVectorRaw()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60009A6")]
		[Address(RVA = "0x1574D98", Offset = "0x1574D98", VA = "0x1574D98")]
		public SimpleLocomotion()
		{
		}
	}
	[Token(Token = "0x2000102")]
	public class UserControlAI : UserControlThirdPerson
	{
		[Token(Token = "0x400080C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform moveTarget;

		[Token(Token = "0x400080D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float stoppingDistance;

		[Token(Token = "0x400080E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float stoppingThreshold;

		[Token(Token = "0x400080F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Navigator navigator;

		[Token(Token = "0x60009A7")]
		[Address(RVA = "0x1577AF8", Offset = "0x1577AF8", VA = "0x1577AF8", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60009A8")]
		[Address(RVA = "0x1577B70", Offset = "0x1577B70", VA = "0x1577B70", Slot = "5")]
		protected override void Update()
		{
		}

		[Token(Token = "0x60009A9")]
		[Address(RVA = "0x1577E04", Offset = "0x1577E04", VA = "0x1577E04")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60009AA")]
		[Address(RVA = "0x1577E28", Offset = "0x1577E28", VA = "0x1577E28")]
		public UserControlAI()
		{
		}
	}
	[Token(Token = "0x2000103")]
	public class UserControlThirdPerson : MonoBehaviour
	{
		[Token(Token = "0x200053D")]
		public struct State
		{
			[Token(Token = "0x4001BEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 move;

			[Token(Token = "0x4001BED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 lookPos;

			[Token(Token = "0x4001BEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool crouch;

			[Token(Token = "0x4001BEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
			public bool jump;

			[Token(Token = "0x4001BF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int actionIndex;
		}

		[Token(Token = "0x4000810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool walkByDefault;

		[Token(Token = "0x4000811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool canCrouch;

		[Token(Token = "0x4000812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool canJump;

		[Token(Token = "0x4000813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public State state;

		[Token(Token = "0x4000814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Transform cam;

		[Token(Token = "0x60009AB")]
		[Address(RVA = "0x1577B38", Offset = "0x1577B38", VA = "0x1577B38", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x60009AC")]
		[Address(RVA = "0x157849C", Offset = "0x157849C", VA = "0x157849C", Slot = "5")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60009AD")]
		[Address(RVA = "0x1577E44", Offset = "0x1577E44", VA = "0x1577E44")]
		public UserControlThirdPerson()
		{
		}
	}
	[Token(Token = "0x2000104")]
	public class ApplicationQuit : MonoBehaviour
	{
		[Token(Token = "0x60009AE")]
		[Address(RVA = "0x155B884", Offset = "0x155B884", VA = "0x155B884")]
		private void Update()
		{
		}

		[Token(Token = "0x60009AF")]
		[Address(RVA = "0x155B8C0", Offset = "0x155B8C0", VA = "0x155B8C0")]
		public ApplicationQuit()
		{
		}
	}
	[Token(Token = "0x2000105")]
	public class SlowMo : MonoBehaviour
	{
		[Token(Token = "0x4000815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public KeyCode[] keyCodes;

		[Token(Token = "0x4000816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool mouse0;

		[Token(Token = "0x4000817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool mouse1;

		[Token(Token = "0x4000818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float slowMoTimeScale;

		[Token(Token = "0x60009B0")]
		[Address(RVA = "0x15756F8", Offset = "0x15756F8", VA = "0x15756F8")]
		private void Update()
		{
		}

		[Token(Token = "0x60009B1")]
		[Address(RVA = "0x157572C", Offset = "0x157572C", VA = "0x157572C")]
		private bool IsSlowMotion()
		{
			return default(bool);
		}

		[Token(Token = "0x60009B2")]
		[Address(RVA = "0x15757DC", Offset = "0x15757DC", VA = "0x15757DC")]
		public SlowMo()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000106")]
	public class Navigator
	{
		[Token(Token = "0x200053E")]
		public enum State
		{
			[Token(Token = "0x4001BF2")]
			Idle,
			[Token(Token = "0x4001BF3")]
			Seeking,
			[Token(Token = "0x4001BF4")]
			OnPath
		}

		[Token(Token = "0x4000819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA15A04", Offset = "0xA15A04")]
		public bool activeTargetSeeking;

		[Token(Token = "0x400081A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA15A3C", Offset = "0xA15A3C")]
		public float cornerRadius;

		[Token(Token = "0x400081B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA15A74", Offset = "0xA15A74")]
		public float recalculateOnPathDistance;

		[Token(Token = "0x400081C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA15AAC", Offset = "0xA15AAC")]
		public float maxSampleDistance;

		[Token(Token = "0x400081D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA15AE4", Offset = "0xA15AE4")]
		public float nextPathInterval;

		[Token(Token = "0x400081E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA15B1C", Offset = "0xA15B1C")]
		private Vector3 <normalizedDeltaPosition>k__BackingField;

		[Token(Token = "0x400081F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA15B2C", Offset = "0xA15B2C")]
		private State <state>k__BackingField;

		[Token(Token = "0x4000820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform transform;

		[Token(Token = "0x4000821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int cornerIndex;

		[Token(Token = "0x4000822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3[] corners;

		[Token(Token = "0x4000823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private NavMeshPath path;

		[Token(Token = "0x4000824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 lastTargetPosition;

		[Token(Token = "0x4000825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool initiated;

		[Token(Token = "0x4000826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float nextPathTime;

		[Token(Token = "0x170000B8")]
		public Vector3 normalizedDeltaPosition
		{
			[Token(Token = "0x60009B3")]
			[Address(RVA = "0x156DC08", Offset = "0x156DC08", VA = "0x156DC08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA29020", Offset = "0xA29020")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60009B4")]
			[Address(RVA = "0x156DC14", Offset = "0x156DC14", VA = "0x156DC14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA29030", Offset = "0xA29030")]
			private set
			{
			}
		}

		[Token(Token = "0x170000B9")]
		public State state
		{
			[Token(Token = "0x60009B5")]
			[Address(RVA = "0x156DC20", Offset = "0x156DC20", VA = "0x156DC20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA29040", Offset = "0xA29040")]
			get
			{
				return default(State);
			}
			[Token(Token = "0x60009B6")]
			[Address(RVA = "0x156DC28", Offset = "0x156DC28", VA = "0x156DC28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA29050", Offset = "0xA29050")]
			private set
			{
			}
		}

		[Token(Token = "0x60009B7")]
		[Address(RVA = "0x156DC30", Offset = "0x156DC30", VA = "0x156DC30")]
		public void Initiate(Transform transform)
		{
		}

		[Token(Token = "0x60009B8")]
		[Address(RVA = "0x156DD04", Offset = "0x156DD04", VA = "0x156DD04")]
		public void Update(Vector3 targetPosition)
		{
		}

		[Token(Token = "0x60009B9")]
		[Address(RVA = "0x156E248", Offset = "0x156E248", VA = "0x156E248")]
		private void CalculatePath(Vector3 targetPosition)
		{
		}

		[Token(Token = "0x60009BA")]
		[Address(RVA = "0x156E2B8", Offset = "0x156E2B8", VA = "0x156E2B8")]
		private bool Find(Vector3 targetPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x60009BB")]
		[Address(RVA = "0x156E110", Offset = "0x156E110", VA = "0x156E110")]
		private void Stop()
		{
		}

		[Token(Token = "0x60009BC")]
		[Address(RVA = "0x156E184", Offset = "0x156E184", VA = "0x156E184")]
		private float HorDistance(Vector3 p1, Vector3 p2)
		{
			return default(float);
		}

		[Token(Token = "0x60009BD")]
		[Address(RVA = "0x156E400", Offset = "0x156E400", VA = "0x156E400")]
		public void Visualize()
		{
		}

		[Token(Token = "0x60009BE")]
		[Address(RVA = "0x156E5B0", Offset = "0x156E5B0", VA = "0x156E5B0")]
		public Navigator()
		{
		}
	}
}
namespace Language.Lua
{
	[Token(Token = "0x2000107")]
	public class Assignment : Statement
	{
		[Token(Token = "0x4000827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Var> VarList;

		[Token(Token = "0x4000828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Expr> ExprList;

		[Token(Token = "0x60009BF")]
		[Address(RVA = "0x16D28D0", Offset = "0x16D28D0", VA = "0x16D28D0", Slot = "4")]
		public override LuaValue Execute(LuaTable enviroment, out bool isBreak)
		{
			return null;
		}

		[Token(Token = "0x60009C0")]
		[Address(RVA = "0x16D3060", Offset = "0x16D3060", VA = "0x16D3060")]
		private static void SetKeyValue(LuaValue baseValue, LuaValue key, LuaValue value)
		{
		}

		[Token(Token = "0x60009C1")]
		[Address(RVA = "0x16D3890", Offset = "0x16D3890", VA = "0x16D3890")]
		public Assignment()
		{
		}
	}
	[Token(Token = "0x2000108")]
	public class BreakStmt : Statement
	{
		[Token(Token = "0x60009C2")]
		[Address(RVA = "0x16D3A64", Offset = "0x16D3A64", VA = "0x16D3A64", Slot = "4")]
		public override LuaValue Execute(LuaTable enviroment, out bool isBreak)
		{
			return null;
		}

		[Token(Token = "0x60009C3")]
		[Address(RVA = "0x16D3AC4", Offset = "0x16D3AC4", VA = "0x16D3AC4")]
		public BreakStmt()
		{
		}
	}
	[Token(Token = "0x2000109")]
	public class Chunk
	{
		[Token(Token = "0x4000829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LuaTable Enviroment;

		[Token(Token = "0x400082A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Statement> Statements;

		[Token(Token = "0x60009C4")]
		[Address(RVA = "0x16D3ACC", Offset = "0x16D3ACC", VA = "0x16D3ACC")]
		public LuaValue Execute()
		{
			return null;
		}

		[Token(Token = "0x60009C5")]
		[Address(RVA = "0x16D3CF8", Offset = "0x16D3CF8", VA = "0x16D3CF8")]
		public LuaValue Execute(LuaTable enviroment, out bool isBreak)
		{
			return null;
		}

		[Token(Token = "0x60009C6")]
		[Address(RVA = "0x16D3AF0", Offset = "0x16D3AF0", VA = "0x16D3AF0")]
		public LuaValue Execute(out bool isBreak)
		{
			return null;
		}

		[Token(Token = "0x60009C7")]
		[Address(RVA = "0x16D3F2C", Offset = "0x16D3F2C", VA = "0x16D3F2C")]
		public Chunk()
		{
		}
	}
	[Token(Token = "0x200010A")]
	public class DoStmt : Statement
	{
		[Token(Token = "0x400082B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Chunk Body;

		[Token(Token = "0x60009C8")]
		[Address(RVA = "0x16D3F9C", Offset = "0x16D3F9C", VA = "0x16D3F9C", Slot = "4")]
		public override LuaValue Execute(LuaTable enviroment, out bool isBreak)
		{
			return null;
		}

		[Token(Token = "0x60009C9")]
		[Address(RVA = "0x16D3FB4", Offset = "0x16D3FB4", VA = "0x16D3FB4")]
		public DoStmt()
		{
		}
	}
	[Token(Token = "0x200010B")]
	public class ExprStmt : Statement
	{
		[Token(Token = "0x400082C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Expr Expr;

		[Token(Token = "0x60009CA")]
		[Address(RVA = "0x16D3FCC", Offset = "0x16D3FCC", VA = "0x16D3FCC", Slot = "4")]
		public override LuaValue Execute(LuaTable enviroment, out bool isBreak)
		{
			return null;
		}

		[Token(Token = "0x60009CB")]
		[Address(RVA = "0x16D4008", Offset = "0x16D4008", VA = "0x16D4008")]
		public ExprStmt()
		{
		}
	}
	[Token(Token = "0x200010C")]
	public class ForInStmt : Statement
	{
		[Token(Token = "0x400082D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<string> NameList;

		[Token(Token = "0x400082E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Expr> ExprList;

		[Token(Token = "0x400082F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Chunk Body;

		[Token(Token = "0x60009CC")]
		[Address(RVA = "0x16D4018", Offset = "0x16D4018", VA = "0x16D4018", Slot = "4")]
		public override LuaValue Execute(LuaTable enviroment, out bool isBreak)
		{
			return null;
		}

		[Token(Token = "0x60009CD")]
		[Address(RVA = "0x16D440C", Offset = "0x16D440C", VA = "0x16D440C")]
		public ForInStmt()
		{
		}
	}
	[Token(Token = "0x200010D")]
	public class ForStmt : Statement
	{
		[Token(Token = "0x4000830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string VarName;

		[Token(Token = "0x4000831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Expr Start;

		[Token(Token = "0x4000832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Expr End;

		[Token(Token = "0x4000833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Expr Step;

		[Token(Token = "0x4000834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Chunk Body;

		[Token(Token = "0x60009CE")]
		[Address(RVA = "0x16D44A4", Offset = "0x16D44A4", VA = "0x16D44A4", Slot = "4")]
		public override LuaValue Execute(LuaTable enviroment, out bool isBreak)
		{
			return null;
		}

		[Token(Token = "0x60009CF")]
		[Address(RVA = "0x16D46B8", Offset = "0x16D46B8", VA = "0x16D46B8")]
		public ForStmt()
		{
		}
	}
	[Token(Token = "0x200010E")]
	public class Function : Statement
	{
		[Token(Token = "0x4000835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FunctionName Name;

		[Token(Token = "0x4000836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FunctionBody Body;

		[Token(Token = "0x60009D0")]
		[Address(RVA = "0x16D46C0", Offset = "0x16D46C0", VA = "0x16D46C0", Slot = "4")]
		public override LuaValue Execute(LuaTable enviroment, out bool isBreak)
		{
			return null;
		}

		[Token(Token = "0x60009D1")]
		[Address(RVA = "0x16D4A90", Offset = "0x16D4A90", VA = "0x16D4A90")]
		public Function()
		{
		}
	}
	[Token(Token = "0x200010F")]
	public class IfStmt : Statement
	{
		[Token(Token = "0x4000837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Expr Condition;

		[Token(Token = "0x4000838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Chunk ThenBlock;

		[Token(Token = "0x4000839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<ElseifBlock> ElseifBlocks;

		[Token(Token = "0x400083A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Chunk ElseBlock;

		[Token(Token = "0x60009D2")]
		[Address(RVA = "0x16D5420", Offset = "0x16D5420", VA = "0x16D5420", Slot = "4")]
		public override LuaValue Execute(LuaTable enviroment, out bool isBreak)
		{
			return null;
		}

		[Token(Token = "0x60009D3")]
		[Address(RVA = "0x16D5610", Offset = "0x16D5610", VA = "0x16D5610")]
		public IfStmt()
		{
		}
	}
	[Token(Token = "0x2000110")]
	public class LocalFunc : Statement
	{
		[Token(Token = "0x400083B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Name;

		[Token(Token = "0x400083C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FunctionBody Body;

		[Token(Token = "0x60009D4")]
		[Address(RVA = "0x16DFC08", Offset = "0x16DFC08", VA = "0x16DFC08", Slot = "4")]
		public override LuaValue Execute(LuaTable enviroment, out bool isBreak)
		{
			return null;
		}

		[Token(Token = "0x60009D5")]
		[Address(RVA = "0x16DFC64", Offset = "0x16DFC64", VA = "0x16DFC64")]
		public LocalFunc()
		{
		}
	}
	[Token(Token = "0x2000111")]
	public class LocalVar : Statement
	{
		[Token(Token = "0x400083D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<string> NameList;

		[Token(Token = "0x400083E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Expr> ExprList;

		[Token(Token = "0x60009D6")]
		[Address(RVA = "0x16DFC6C", Offset = "0x16DFC6C", VA = "0x16DFC6C", Slot = "4")]
		public override LuaValue Execute(LuaTable enviroment, out bool isBreak)
		{
			return null;
		}

		[Token(Token = "0x60009D7")]
		[Address(RVA = "0x16DFF80", Offset = "0x16DFF80", VA = "0x16DFF80")]
		public LocalVar()
		{
		}
	}
	[Token(Token = "0x2000112")]
	public class RepeatStmt : Statement
	{
		[Token(Token = "0x400083F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Chunk Body;

		[Token(Token = "0x4000840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Expr Condition;

		[Token(Token = "0x60009D8")]
		[Address(RVA = "0x14212C0", Offset = "0x14212C0", VA = "0x14212C0", Slot = "4")]
		public override LuaValue Execute(LuaTable enviroment, out bool isBreak)
		{
			return null;
		}

		[Token(Token = "0x60009D9")]
		[Address(RVA = "0x142134C", Offset = "0x142134C", VA = "0x142134C")]
		public RepeatStmt()
		{
		}
	}
	[Token(Token = "0x2000113")]
	public class ReturnStmt : Statement
	{
		[Token(Token = "0x4000841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Expr> ExprList;

		[Token(Token = "0x60009DA")]
		[Address(RVA = "0x142135C", Offset = "0x142135C", VA = "0x142135C", Slot = "4")]
		public override LuaValue Execute(LuaTable enviroment, out bool isBreak)
		{
			return null;
		}

		[Token(Token = "0x60009DB")]
		[Address(RVA = "0x14213BC", Offset = "0x14213BC", VA = "0x14213BC")]
		public ReturnStmt()
		{
		}
	}
	[Token(Token = "0x2000114")]
	public abstract class Statement
	{
		[Token(Token = "0x60009DC")]
		public abstract LuaValue Execute(LuaTable enviroment, out bool isBreak);

		[Token(Token = "0x60009DD")]
		[Address(RVA = "0x1421354", Offset = "0x1421354", VA = "0x1421354")]
		protected Statement()
		{
		}
	}
	[Token(Token = "0x2000115")]
	public class WhileStmt : Statement
	{
		[Token(Token = "0x4000842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Expr Condition;

		[Token(Token = "0x4000843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Chunk Body;

		[Token(Token = "0x60009DE")]
		[Address(RVA = "0x1421DCC", Offset = "0x1421DCC", VA = "0x1421DCC", Slot = "4")]
		public override LuaValue Execute(LuaTable enviroment, out bool isBreak)
		{
			return null;
		}

		[Token(Token = "0x60009DF")]
		[Address(RVA = "0x1421E54", Offset = "0x1421E54", VA = "0x1421E54")]
		public WhileStmt()
		{
		}
	}
	[Token(Token = "0x2000116")]
	public abstract class Access
	{
		[Token(Token = "0x60009E0")]
		public abstract LuaValue Evaluate(LuaValue baseValue, LuaTable enviroment);

		[Token(Token = "0x60009E1")]
		[Address(RVA = "0x16D2858", Offset = "0x16D2858", VA = "0x16D2858")]
		protected Access()
		{
		}
	}
	[Token(Token = "0x2000117")]
	public abstract class BaseExpr : Term
	{
		[Token(Token = "0x60009E2")]
		[Address(RVA = "0x16D3928", Offset = "0x16D3928", VA = "0x16D3928")]
		protected BaseExpr()
		{
		}
	}
	[Token(Token = "0x2000118")]
	public class BoolLiteral : Term
	{
		[Token(Token = "0x4000844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Text;

		[Token(Token = "0x60009E3")]
		[Address(RVA = "0x16D3930", Offset = "0x16D3930", VA = "0x16D3930", Slot = "4")]
		public override LuaValue Evaluate(LuaTable enviroment)
		{
			return null;
		}

		[Token(Token = "0x60009E4")]
		[Address(RVA = "0x16D3A5C", Offset = "0x16D3A5C", VA = "0x16D3A5C")]
		public BoolLiteral()
		{
		}
	}
	[Token(Token = "0x2000119")]
	public abstract class Expr
	{
		[Token(Token = "0x60009E5")]
		public abstract LuaValue Evaluate(LuaTable enviroment);

		[Token(Token = "0x60009E6")]
		public abstract Term Simplify();

		[Token(Token = "0x60009E7")]
		[Address(RVA = "0x16D3FC4", Offset = "0x16D3FC4", VA = "0x16D3FC4")]
		protected Expr()
		{
		}
	}
	[Token(Token = "0x200011A")]
	public class FunctionBody
	{
		[Token(Token = "0x200053F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D4D8", Offset = "0xA0D4D8")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4001BF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LuaTable enviroment;

			[Token(Token = "0x4001BF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FunctionBody <>4__this;

			[Token(Token = "0x6002819")]
			[Address(RVA = "0x16D4A98", Offset = "0x16D4A98", VA = "0x16D4A98")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x600281A")]
			[Address(RVA = "0x16D4AE4", Offset = "0x16D4AE4", VA = "0x16D4AE4")]
			internal LuaValue <Evaluate>b__0(LuaValue[] args)
			{
				return null;
			}
		}

		[Token(Token = "0x4000845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ParamList ParamList;

		[Token(Token = "0x4000846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Chunk Chunk;

		[Token(Token = "0x60009E8")]
		[Address(RVA = "0x16D49CC", Offset = "0x16D49CC", VA = "0x16D49CC")]
		public LuaValue Evaluate(LuaTable enviroment)
		{
			return null;
		}

		[Token(Token = "0x60009E9")]
		[Address(RVA = "0x16D4ADC", Offset = "0x16D4ADC", VA = "0x16D4ADC")]
		public FunctionBody()
		{
		}
	}
	[Token(Token = "0x200011B")]
	public class FunctionCall : Access
	{
		[Token(Token = "0x4000847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Args Args;

		[Token(Token = "0x60009EA")]
		[Address(RVA = "0x16D4DD0", Offset = "0x16D4DD0", VA = "0x16D4DD0", Slot = "4")]
		public override LuaValue Evaluate(LuaValue baseValue, LuaTable enviroment)
		{
			return null;
		}

		[Token(Token = "0x60009EB")]
		[Address(RVA = "0x16D5340", Offset = "0x16D5340", VA = "0x16D5340")]
		public FunctionCall()
		{
		}
	}
	[Token(Token = "0x200011C")]
	public class FunctionValue : Term
	{
		[Token(Token = "0x4000848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FunctionBody Body;

		[Token(Token = "0x60009EC")]
		[Address(RVA = "0x16D53B8", Offset = "0x16D53B8", VA = "0x16D53B8", Slot = "4")]
		public override LuaValue Evaluate(LuaTable enviroment)
		{
			return null;
		}

		[Token(Token = "0x60009ED")]
		[Address(RVA = "0x16D53D0", Offset = "0x16D53D0", VA = "0x16D53D0")]
		public FunctionValue()
		{
		}
	}
	[Token(Token = "0x200011D")]
	public class GroupExpr : BaseExpr
	{
		[Token(Token = "0x4000849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Expr Expr;

		[Token(Token = "0x60009EE")]
		[Address(RVA = "0x16D53D8", Offset = "0x16D53D8", VA = "0x16D53D8", Slot = "4")]
		public override LuaValue Evaluate(LuaTable enviroment)
		{
			return null;
		}

		[Token(Token = "0x60009EF")]
		[Address(RVA = "0x16D53F8", Offset = "0x16D53F8", VA = "0x16D53F8", Slot = "5")]
		public override Term Simplify()
		{
			return null;
		}

		[Token(Token = "0x60009F0")]
		[Address(RVA = "0x16D5418", Offset = "0x16D5418", VA = "0x16D5418")]
		public GroupExpr()
		{
		}
	}
	[Token(Token = "0x200011E")]
	public class KeyAccess : Access
	{
		[Token(Token = "0x400084A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Expr Key;

		[Token(Token = "0x60009F1")]
		[Address(RVA = "0x16D5688", Offset = "0x16D5688", VA = "0x16D5688", Slot = "4")]
		public override LuaValue Evaluate(LuaValue baseValue, LuaTable enviroment)
		{
			return null;
		}

		[Token(Token = "0x60009F2")]
		[Address(RVA = "0x16D5910", Offset = "0x16D5910", VA = "0x16D5910")]
		public KeyAccess()
		{
		}
	}
	[Token(Token = "0x200011F")]
	public class MethodCall : Access
	{
		[Token(Token = "0x400084B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Method;

		[Token(Token = "0x400084C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Args Args;

		[Token(Token = "0x60009F3")]
		[Address(RVA = "0x16E3104", Offset = "0x16E3104", VA = "0x16E3104", Slot = "4")]
		public override LuaValue Evaluate(LuaValue baseValue, LuaTable enviroment)
		{
			return null;
		}

		[Token(Token = "0x60009F4")]
		[Address(RVA = "0x16E3380", Offset = "0x16E3380", VA = "0x16E3380")]
		public MethodCall()
		{
		}
	}
	[Token(Token = "0x2000120")]
	public class NameAccess : Access
	{
		[Token(Token = "0x400084D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Name;

		[Token(Token = "0x60009F5")]
		[Address(RVA = "0x16E3388", Offset = "0x16E3388", VA = "0x16E3388", Slot = "4")]
		public override LuaValue Evaluate(LuaValue baseValue, LuaTable enviroment)
		{
			return null;
		}

		[Token(Token = "0x60009F6")]
		[Address(RVA = "0x16E3400", Offset = "0x16E3400", VA = "0x16E3400")]
		public NameAccess()
		{
		}
	}
	[Token(Token = "0x2000121")]
	public class NilLiteral : Term
	{
		[Token(Token = "0x60009F7")]
		[Address(RVA = "0x16E3410", Offset = "0x16E3410", VA = "0x16E3410", Slot = "4")]
		public override LuaValue Evaluate(LuaTable enviroment)
		{
			return null;
		}

		[Token(Token = "0x60009F8")]
		[Address(RVA = "0x16E3478", Offset = "0x16E3478", VA = "0x16E3478")]
		public NilLiteral()
		{
		}
	}
	[Token(Token = "0x2000122")]
	public class NumberLiteral : Term
	{
		[Token(Token = "0x400084E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string HexicalText;

		[Token(Token = "0x400084F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Text;

		[Token(Token = "0x60009F9")]
		[Address(RVA = "0x16E3480", Offset = "0x16E3480", VA = "0x16E3480", Slot = "4")]
		public override LuaValue Evaluate(LuaTable enviroment)
		{
			return null;
		}

		[Token(Token = "0x60009FA")]
		[Address(RVA = "0x16E3580", Offset = "0x16E3580", VA = "0x16E3580")]
		public NumberLiteral()
		{
		}
	}
	[Token(Token = "0x2000123")]
	public enum Associativity
	{
		[Token(Token = "0x4000851")]
		NonAssociative,
		[Token(Token = "0x4000852")]
		LeftAssociative,
		[Token(Token = "0x4000853")]
		RightAssociative
	}
	[Token(Token = "0x2000124")]
	public class OperTable
	{
		[Token(Token = "0x4000854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<string, int> precedence;

		[Token(Token = "0x4000855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Associativity[] associativity;

		[Token(Token = "0x60009FB")]
		[Address(RVA = "0x16E3588", Offset = "0x16E3588", VA = "0x16E3588")]
		static OperTable()
		{
		}

		[Token(Token = "0x60009FC")]
		[Address(RVA = "0x16E3CE4", Offset = "0x16E3CE4", VA = "0x16E3CE4")]
		public static bool Contains(string oper)
		{
			return default(bool);
		}

		[Token(Token = "0x60009FD")]
		[Address(RVA = "0x16E3D68", Offset = "0x16E3D68", VA = "0x16E3D68")]
		public static bool IsPrior(string operLeft, string operRight)
		{
			return default(bool);
		}

		[Token(Token = "0x60009FE")]
		[Address(RVA = "0x16E3E9C", Offset = "0x16E3E9C", VA = "0x16E3E9C")]
		public OperTable()
		{
		}
	}
	[Token(Token = "0x2000125")]
	public class Operation : Term
	{
		[Token(Token = "0x4000856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Operator;

		[Token(Token = "0x4000857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Term LeftOperand;

		[Token(Token = "0x4000858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Term RightOperand;

		[Token(Token = "0x60009FF")]
		[Address(RVA = "0x16E3EA4", Offset = "0x16E3EA4", VA = "0x16E3EA4")]
		public Operation(string oper)
		{
		}

		[Token(Token = "0x6000A00")]
		[Address(RVA = "0x16E3ED0", Offset = "0x16E3ED0", VA = "0x16E3ED0")]
		public Operation(string oper, Term left, Term right)
		{
		}

		[Token(Token = "0x6000A01")]
		[Address(RVA = "0x16E3F4C", Offset = "0x16E3F4C", VA = "0x16E3F4C", Slot = "4")]
		public override LuaValue Evaluate(LuaTable enviroment)
		{
			return null;
		}

		[Token(Token = "0x6000A02")]
		[Address(RVA = "0x16E3F90", Offset = "0x16E3F90", VA = "0x16E3F90")]
		private LuaValue PrefixUnaryOperation(string Operator, Term RightOperand, LuaTable enviroment)
		{
			return null;
		}

		[Token(Token = "0x6000A03")]
		[Address(RVA = "0x16E42C0", Offset = "0x16E42C0", VA = "0x16E42C0")]
		private LuaValue InfixBinaryOperation(Term LeftOperand, string Operator, Term RightOperand, LuaTable enviroment)
		{
			return null;
		}

		[Token(Token = "0x6000A04")]
		[Address(RVA = "0x16E5034", Offset = "0x16E5034", VA = "0x16E5034")]
		private static int? Compare(LuaValue leftValue, LuaValue rightValue)
		{
			return null;
		}

		[Token(Token = "0x6000A05")]
		[Address(RVA = "0x16E4ED4", Offset = "0x16E4ED4", VA = "0x16E4ED4")]
		private static LuaFunction GetMetaFunction(string name, LuaValue leftValue, LuaValue rightValue)
		{
			return null;
		}
	}
	[Token(Token = "0x2000126")]
	public class OperatorExpr : Expr
	{
		[Token(Token = "0x4000859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LinkedList<object> Terms;

		[Token(Token = "0x6000A06")]
		[Address(RVA = "0x16E5244", Offset = "0x16E5244", VA = "0x16E5244")]
		public void Add(string oper)
		{
		}

		[Token(Token = "0x6000A07")]
		[Address(RVA = "0x16E52AC", Offset = "0x16E52AC", VA = "0x16E52AC")]
		public void Add(Term term)
		{
		}

		[Token(Token = "0x6000A08")]
		[Address(RVA = "0x16E5314", Offset = "0x16E5314", VA = "0x16E5314")]
		public Term BuildExpressionTree()
		{
			return null;
		}

		[Token(Token = "0x6000A09")]
		[Address(RVA = "0x16E5444", Offset = "0x16E5444", VA = "0x16E5444")]
		private static Term BuildExpressionTree(Term leftTerm, LinkedListNode<object> node)
		{
			return null;
		}

		[Token(Token = "0x6000A0A")]
		[Address(RVA = "0x16E565C", Offset = "0x16E565C", VA = "0x16E565C", Slot = "4")]
		public override LuaValue Evaluate(LuaTable enviroment)
		{
			return null;
		}

		[Token(Token = "0x6000A0B")]
		[Address(RVA = "0x16E5690", Offset = "0x16E5690", VA = "0x16E5690", Slot = "5")]
		public override Term Simplify()
		{
			return null;
		}

		[Token(Token = "0x6000A0C")]
		[Address(RVA = "0x16E56B4", Offset = "0x16E56B4", VA = "0x16E56B4")]
		public OperatorExpr()
		{
		}
	}
	[Token(Token = "0x2000127")]
	public class PrimaryExpr : Term
	{
		[Token(Token = "0x400085A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BaseExpr Base;

		[Token(Token = "0x400085B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Access> Accesses;

		[Token(Token = "0x6000A0D")]
		[Address(RVA = "0x1421098", Offset = "0x1421098", VA = "0x1421098", Slot = "4")]
		public override LuaValue Evaluate(LuaTable enviroment)
		{
			return null;
		}

		[Token(Token = "0x6000A0E")]
		[Address(RVA = "0x14211D4", Offset = "0x14211D4", VA = "0x14211D4", Slot = "5")]
		public override Term Simplify()
		{
			return null;
		}

		[Token(Token = "0x6000A0F")]
		[Address(RVA = "0x1421248", Offset = "0x1421248", VA = "0x1421248")]
		public PrimaryExpr()
		{
		}
	}
	[Token(Token = "0x2000128")]
	public class StringLiteral : Term
	{
		[Token(Token = "0x400085C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Text;

		[Token(Token = "0x6000A10")]
		[Address(RVA = "0x142142C", Offset = "0x142142C", VA = "0x142142C", Slot = "4")]
		public override LuaValue Evaluate(LuaTable enviroment)
		{
			return null;
		}

		[Token(Token = "0x6000A11")]
		[Address(RVA = "0x1421494", Offset = "0x1421494", VA = "0x1421494")]
		public StringLiteral()
		{
		}
	}
	[Token(Token = "0x2000129")]
	public class TableConstructor : Term
	{
		[Token(Token = "0x400085D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Field> FieldList;

		[Token(Token = "0x6000A12")]
		[Address(RVA = "0x142149C", Offset = "0x142149C", VA = "0x142149C", Slot = "4")]
		public override LuaValue Evaluate(LuaTable enviroment)
		{
			return null;
		}

		[Token(Token = "0x6000A13")]
		[Address(RVA = "0x1421754", Offset = "0x1421754", VA = "0x1421754")]
		public TableConstructor()
		{
		}
	}
	[Token(Token = "0x200012A")]
	public class Term : Expr
	{
		[Token(Token = "0x6000A14")]
		[Address(RVA = "0x14217C4", Offset = "0x14217C4", VA = "0x14217C4", Slot = "4")]
		public override LuaValue Evaluate(LuaTable enviroment)
		{
			return null;
		}

		[Token(Token = "0x6000A15")]
		[Address(RVA = "0x1421824", Offset = "0x1421824", VA = "0x1421824", Slot = "5")]
		public override Term Simplify()
		{
			return null;
		}

		[Token(Token = "0x6000A16")]
		[Address(RVA = "0x14212B8", Offset = "0x14212B8", VA = "0x14212B8")]
		public Term()
		{
		}
	}
	[Token(Token = "0x200012B")]
	public class VarName : BaseExpr
	{
		[Token(Token = "0x400085E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Name;

		[Token(Token = "0x6000A17")]
		[Address(RVA = "0x1421D70", Offset = "0x1421D70", VA = "0x1421D70", Slot = "4")]
		public override LuaValue Evaluate(LuaTable enviroment)
		{
			return null;
		}

		[Token(Token = "0x6000A18")]
		[Address(RVA = "0x1421D94", Offset = "0x1421D94", VA = "0x1421D94", Slot = "5")]
		public override Term Simplify()
		{
			return null;
		}

		[Token(Token = "0x6000A19")]
		[Address(RVA = "0x1421D98", Offset = "0x1421D98", VA = "0x1421D98")]
		public VarName()
		{
		}
	}
	[Token(Token = "0x200012C")]
	public class VariableArg : Term
	{
		[Token(Token = "0x400085F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Name;

		[Token(Token = "0x6000A1A")]
		[Address(RVA = "0x1421DA0", Offset = "0x1421DA0", VA = "0x1421DA0", Slot = "4")]
		public override LuaValue Evaluate(LuaTable enviroment)
		{
			return null;
		}

		[Token(Token = "0x6000A1B")]
		[Address(RVA = "0x1421DC4", Offset = "0x1421DC4", VA = "0x1421DC4")]
		public VariableArg()
		{
		}
	}
	[Token(Token = "0x200012D")]
	public static class LuaInterpreterExtensions
	{
		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0x16D2CA4", Offset = "0x16D2CA4", VA = "0x16D2CA4")]
		public static List<LuaValue> EvaluateAll(List<Expr> exprList, LuaTable environment)
		{
			return null;
		}

		[Token(Token = "0x6000A1D")]
		[Address(RVA = "0x16E0998", Offset = "0x16E0998", VA = "0x16E0998")]
		public static LuaValue ObjectToLuaValue(object o)
		{
			return null;
		}

		[Token(Token = "0x6000A1E")]
		[Address(RVA = "0x16E1164", Offset = "0x16E1164", VA = "0x16E1164")]
		public static object LuaValueToObject(LuaValue luaValue)
		{
			return null;
		}
	}
	[Token(Token = "0x200012E")]
	public static class Tuple
	{
		[Token(Token = "0x6000A1F")]
		public static Tuple<T1, T2> Create<T1, T2>(T1 item1, T2 item2)
		{
			return null;
		}

		[Token(Token = "0x6000A20")]
		public static Tuple<T1, T2, T3> Create<T1, T2, T3>(T1 item1, T2 item2, T3 item3)
		{
			return null;
		}
	}
	[Token(Token = "0x200012F")]
	public sealed class Tuple<T1, T2>
	{
		[Token(Token = "0x4000860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly T1 item1;

		[Token(Token = "0x4000861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly T2 item2;

		[Token(Token = "0x170000BA")]
		public T1 Item1
		{
			[Token(Token = "0x6000A21")]
			get
			{
				return (T1)null;
			}
		}

		[Token(Token = "0x170000BB")]
		public T2 Item2
		{
			[Token(Token = "0x6000A22")]
			get
			{
				return (T2)null;
			}
		}

		[Token(Token = "0x6000A23")]
		public Tuple(T1 item1, T2 item2)
		{
		}

		[Token(Token = "0x6000A24")]
		public override bool Equals(object o)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A25")]
		public static bool operator ==(Tuple<T1, T2> a, Tuple<T1, T2> b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A26")]
		public static bool operator !=(Tuple<T1, T2> a, Tuple<T1, T2> b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A27")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000130")]
	public sealed class Tuple<T1, T2, T3>
	{
		[Token(Token = "0x4000862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly T1 item1;

		[Token(Token = "0x4000863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly T2 item2;

		[Token(Token = "0x4000864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly T3 item3;

		[Token(Token = "0x170000BC")]
		public T1 Item1
		{
			[Token(Token = "0x6000A28")]
			get
			{
				return (T1)null;
			}
		}

		[Token(Token = "0x170000BD")]
		public T2 Item2
		{
			[Token(Token = "0x6000A29")]
			get
			{
				return (T2)null;
			}
		}

		[Token(Token = "0x170000BE")]
		public T3 Item3
		{
			[Token(Token = "0x6000A2A")]
			get
			{
				return (T3)null;
			}
		}

		[Token(Token = "0x6000A2B")]
		public Tuple(T1 item1, T2 item2, T3 item3)
		{
		}

		[Token(Token = "0x6000A2C")]
		public override bool Equals(object o)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A2D")]
		public static bool operator ==(Tuple<T1, T2, T3> a, Tuple<T1, T2, T3> b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A2E")]
		public static bool operator !=(Tuple<T1, T2, T3> a, Tuple<T1, T2, T3> b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A2F")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000131")]
	public class LuaInterpreter
	{
		[Token(Token = "0x4000865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Parser parser;

		[Token(Token = "0x6000A30")]
		[Address(RVA = "0x16E02D8", Offset = "0x16E02D8", VA = "0x16E02D8")]
		public static LuaValue RunFile(string luaFile)
		{
			return null;
		}

		[Token(Token = "0x6000A31")]
		[Address(RVA = "0x16D7678", Offset = "0x16D7678", VA = "0x16D7678")]
		public static LuaValue RunFile(string luaFile, LuaTable enviroment)
		{
			return null;
		}

		[Token(Token = "0x6000A32")]
		[Address(RVA = "0x16E0374", Offset = "0x16E0374", VA = "0x16E0374")]
		public static LuaValue Interpreter(string luaCode)
		{
			return null;
		}

		[Token(Token = "0x6000A33")]
		[Address(RVA = "0x16E04D0", Offset = "0x16E04D0", VA = "0x16E04D0")]
		public static LuaValue Interpreter(string luaCode, LuaTable enviroment)
		{
			return null;
		}

		[Token(Token = "0x6000A34")]
		[Address(RVA = "0x16D78B0", Offset = "0x16D78B0", VA = "0x16D78B0")]
		public static Chunk Parse(string luaCode)
		{
			return null;
		}

		[Token(Token = "0x6000A35")]
		[Address(RVA = "0x16E03E0", Offset = "0x16E03E0", VA = "0x16E03E0")]
		public static LuaTable CreateGlobalEnviroment()
		{
			return null;
		}

		[Token(Token = "0x6000A36")]
		[Address(RVA = "0x16E0868", Offset = "0x16E0868", VA = "0x16E0868")]
		public LuaInterpreter()
		{
		}
	}
	[Token(Token = "0x2000132")]
	public class LuaBoolean : LuaValue
	{
		[Token(Token = "0x4000866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly LuaBoolean False;

		[Token(Token = "0x4000867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly LuaBoolean True;

		[Token(Token = "0x4000868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA15B3C", Offset = "0xA15B3C")]
		private bool <BoolValue>k__BackingField;

		[Token(Token = "0x170000BF")]
		public bool BoolValue
		{
			[Token(Token = "0x6000A38")]
			[Address(RVA = "0x16E0018", Offset = "0x16E0018", VA = "0x16E0018")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA29060", Offset = "0xA29060")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A39")]
			[Address(RVA = "0x16E0020", Offset = "0x16E0020", VA = "0x16E0020")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA29070", Offset = "0xA29070")]
			set
			{
			}
		}

		[Token(Token = "0x170000C0")]
		public override object Value
		{
			[Token(Token = "0x6000A3A")]
			[Address(RVA = "0x16E002C", Offset = "0x16E002C", VA = "0x16E002C", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A3B")]
		[Address(RVA = "0x16E0090", Offset = "0x16E0090", VA = "0x16E0090", Slot = "6")]
		public override string GetTypeCode()
		{
			return null;
		}

		[Token(Token = "0x6000A3C")]
		[Address(RVA = "0x16E00D8", Offset = "0x16E00D8", VA = "0x16E00D8", Slot = "7")]
		public override bool GetBooleanValue()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A3D")]
		[Address(RVA = "0x16E00E0", Offset = "0x16E00E0", VA = "0x16E00E0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000A3E")]
		[Address(RVA = "0x16E011C", Offset = "0x16E011C", VA = "0x16E011C")]
		private LuaBoolean()
		{
		}

		[Token(Token = "0x6000A3F")]
		[Address(RVA = "0x16D39CC", Offset = "0x16D39CC", VA = "0x16D39CC")]
		public static LuaBoolean From(bool value)
		{
			return null;
		}
	}
	[Token(Token = "0x2000133")]
	public class LuaError : Exception
	{
		[Token(Token = "0x6000A41")]
		[Address(RVA = "0x16D7200", Offset = "0x16D7200", VA = "0x16D7200")]
		public LuaError(string message)
		{
		}

		[Token(Token = "0x6000A42")]
		[Address(RVA = "0x16E01C8", Offset = "0x16E01C8", VA = "0x16E01C8")]
		public LuaError(string message, Exception innerException)
		{
		}

		[Token(Token = "0x6000A43")]
		[Address(RVA = "0x16DC2D8", Offset = "0x16DC2D8", VA = "0x16DC2D8")]
		public LuaError(string messageformat, params object[] args)
		{
		}
	}
	[Token(Token = "0x2000134")]
	public delegate LuaValue LuaFunc(LuaValue[] args);
	[Token(Token = "0x2000135")]
	public class LuaFunction : LuaValue
	{
		[Token(Token = "0x4000869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA15B4C", Offset = "0xA15B4C")]
		private LuaFunc <Function>k__BackingField;

		[Token(Token = "0x170000C1")]
		public LuaFunc Function
		{
			[Token(Token = "0x6000A49")]
			[Address(RVA = "0x16E0278", Offset = "0x16E0278", VA = "0x16E0278")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA29080", Offset = "0xA29080")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A4A")]
			[Address(RVA = "0x16E0280", Offset = "0x16E0280", VA = "0x16E0280")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA29090", Offset = "0xA29090")]
			set
			{
			}
		}

		[Token(Token = "0x170000C2")]
		public override object Value
		{
			[Token(Token = "0x6000A4B")]
			[Address(RVA = "0x16E0288", Offset = "0x16E0288", VA = "0x16E0288", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A48")]
		[Address(RVA = "0x16D4AB0", Offset = "0x16D4AB0", VA = "0x16D4AB0")]
		public LuaFunction(LuaFunc function)
		{
		}

		[Token(Token = "0x6000A4C")]
		[Address(RVA = "0x16E0290", Offset = "0x16E0290", VA = "0x16E0290", Slot = "6")]
		public override string GetTypeCode()
		{
			return null;
		}

		[Token(Token = "0x6000A4D")]
		[Address(RVA = "0x16D3878", Offset = "0x16D3878", VA = "0x16D3878")]
		public LuaValue Invoke(LuaValue[] args)
		{
			return null;
		}
	}
	[Token(Token = "0x2000136")]
	public class LuaMethodFunction : LuaFunction
	{
		[Token(Token = "0x400086A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA15B5C", Offset = "0xA15B5C")]
		private object <Target>k__BackingField;

		[Token(Token = "0x400086B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA15B6C", Offset = "0xA15B6C")]
		private MethodInfo <Method>k__BackingField;

		[Token(Token = "0x170000C3")]
		public object Target
		{
			[Token(Token = "0x6000A4E")]
			[Address(RVA = "0x16E1224", Offset = "0x16E1224", VA = "0x16E1224")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA290A0", Offset = "0xA290A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A4F")]
			[Address(RVA = "0x16E122C", Offset = "0x16E122C", VA = "0x16E122C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA290B0", Offset = "0xA290B0")]
			set
			{
			}
		}

		[Token(Token = "0x170000C4")]
		public MethodInfo Method
		{
			[Token(Token = "0x6000A50")]
			[Address(RVA = "0x16E1234", Offset = "0x16E1234", VA = "0x16E1234")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA290C0", Offset = "0xA290C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A51")]
			[Address(RVA = "0x16E123C", Offset = "0x16E123C", VA = "0x16E123C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA290D0", Offset = "0xA290D0")]
			set
			{
			}
		}

		[Token(Token = "0x6000A52")]
		[Address(RVA = "0x16E1244", Offset = "0x16E1244", VA = "0x16E1244")]
		public LuaMethodFunction(object target, MethodInfo method)
		{
		}

		[Token(Token = "0x6000A53")]
		[Address(RVA = "0x16E12D4", Offset = "0x16E12D4", VA = "0x16E12D4")]
		public LuaValue InvokeMethod(LuaValue[] args)
		{
			return null;
		}
	}
	[Token(Token = "0x2000137")]
	public class LuaMultiValue : LuaValue
	{
		[Token(Token = "0x400086C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA15B7C", Offset = "0xA15B7C")]
		private LuaValue[] <Values>k__BackingField;

		[Token(Token = "0x170000C5")]
		public LuaValue[] Values
		{
			[Token(Token = "0x6000A55")]
			[Address(RVA = "0x16E14EC", Offset = "0x16E14EC", VA = "0x16E14EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA290E0", Offset = "0xA290E0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A56")]
			[Address(RVA = "0x16E14F4", Offset = "0x16E14F4", VA = "0x16E14F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA290F0", Offset = "0xA290F0")]
			set
			{
			}
		}

		[Token(Token = "0x170000C6")]
		public override object Value
		{
			[Token(Token = "0x6000A57")]
			[Address(RVA = "0x16E14FC", Offset = "0x16E14FC", VA = "0x16E14FC", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A54")]
		[Address(RVA = "0x16D4DA4", Offset = "0x16D4DA4", VA = "0x16D4DA4")]
		public LuaMultiValue(LuaValue[] values)
		{
		}

		[Token(Token = "0x6000A58")]
		[Address(RVA = "0x16E1504", Offset = "0x16E1504", VA = "0x16E1504", Slot = "6")]
		public override string GetTypeCode()
		{
			return null;
		}

		[Token(Token = "0x6000A59")]
		[Address(RVA = "0x16D3E6C", Offset = "0x16D3E6C", VA = "0x16D3E6C")]
		public static LuaValue WrapLuaValues(LuaValue[] values)
		{
			return null;
		}

		[Token(Token = "0x6000A5A")]
		[Address(RVA = "0x16D2DFC", Offset = "0x16D2DFC", VA = "0x16D2DFC")]
		public static LuaValue[] UnWrapLuaValues(LuaValue[] values)
		{
			return null;
		}

		[Token(Token = "0x6000A5B")]
		[Address(RVA = "0x16E1564", Offset = "0x16E1564", VA = "0x16E1564")]
		private static bool ContainsMultiValue(LuaValue[] values)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000138")]
	public class LuaNil : LuaValue
	{
		[Token(Token = "0x400086D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly LuaNil Nil;

		[Token(Token = "0x170000C7")]
		public override object Value
		{
			[Token(Token = "0x6000A5D")]
			[Address(RVA = "0x16E1638", Offset = "0x16E1638", VA = "0x16E1638", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A5C")]
		[Address(RVA = "0x16E1630", Offset = "0x16E1630", VA = "0x16E1630")]
		private LuaNil()
		{
		}

		[Token(Token = "0x6000A5E")]
		[Address(RVA = "0x16E1640", Offset = "0x16E1640", VA = "0x16E1640", Slot = "6")]
		public override string GetTypeCode()
		{
			return null;
		}

		[Token(Token = "0x6000A5F")]
		[Address(RVA = "0x16E1688", Offset = "0x16E1688", VA = "0x16E1688", Slot = "7")]
		public override bool GetBooleanValue()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A60")]
		[Address(RVA = "0x16E1690", Offset = "0x16E1690", VA = "0x16E1690", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000139")]
	public class LuaNumber : LuaValue
	{
		[Token(Token = "0x400086E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA15B8C", Offset = "0xA15B8C")]
		private double <Number>k__BackingField;

		[Token(Token = "0x170000C8")]
		public double Number
		{
			[Token(Token = "0x6000A63")]
			[Address(RVA = "0x16E173C", Offset = "0x16E173C", VA = "0x16E173C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA29100", Offset = "0xA29100")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6000A64")]
			[Address(RVA = "0x16E1744", Offset = "0x16E1744", VA = "0x16E1744")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA29110", Offset = "0xA29110")]
			set
			{
			}
		}

		[Token(Token = "0x170000C9")]
		public override object Value
		{
			[Token(Token = "0x6000A65")]
			[Address(RVA = "0x16E174C", Offset = "0x16E174C", VA = "0x16E174C", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A62")]
		[Address(RVA = "0x16D6168", Offset = "0x16D6168", VA = "0x16D6168")]
		public LuaNumber(double number)
		{
		}

		[Token(Token = "0x6000A66")]
		[Address(RVA = "0x16E17B0", Offset = "0x16E17B0", VA = "0x16E17B0", Slot = "6")]
		public override string GetTypeCode()
		{
			return null;
		}

		[Token(Token = "0x6000A67")]
		[Address(RVA = "0x16E17F8", Offset = "0x16E17F8", VA = "0x16E17F8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200013A")]
	public class LuaString : LuaValue
	{
		[Token(Token = "0x400086F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly LuaString Empty;

		[Token(Token = "0x4000870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA15B9C", Offset = "0xA15B9C")]
		private string <Text>k__BackingField;

		[Token(Token = "0x170000CA")]
		public string Text
		{
			[Token(Token = "0x6000A69")]
			[Address(RVA = "0x16E1880", Offset = "0x16E1880", VA = "0x16E1880")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA29120", Offset = "0xA29120")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A6A")]
			[Address(RVA = "0x16E1888", Offset = "0x16E1888", VA = "0x16E1888")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA29130", Offset = "0xA29130")]
			set
			{
			}
		}

		[Token(Token = "0x170000CB")]
		public override object Value
		{
			[Token(Token = "0x6000A6B")]
			[Address(RVA = "0x16E1890", Offset = "0x16E1890", VA = "0x16E1890", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A68")]
		[Address(RVA = "0x16D3034", Offset = "0x16D3034", VA = "0x16D3034")]
		public LuaString(string text)
		{
		}

		[Token(Token = "0x6000A6C")]
		[Address(RVA = "0x16E1898", Offset = "0x16E1898", VA = "0x16E1898", Slot = "6")]
		public override string GetTypeCode()
		{
			return null;
		}

		[Token(Token = "0x6000A6D")]
		[Address(RVA = "0x16E18E0", Offset = "0x16E18E0", VA = "0x16E18E0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200013B")]
	public class LuaTable : LuaValue
	{
		[Token(Token = "0x2000540")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D4E8", Offset = "0xA0D4E8")]
		private sealed class <get_Keys>d__27 : IEnumerable<LuaValue>, IEnumerable, IEnumerator<LuaValue>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001BF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001BF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private LuaValue <>2__current;

			[Token(Token = "0x4001BF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001BFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LuaTable <>4__this;

			[Token(Token = "0x4001BFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <index>5__2;

			[Token(Token = "0x4001BFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Dictionary<LuaValue, LuaValue>.KeyCollection.Enumerator <>7__wrap2;

			[Token(Token = "0x170004D8")]
			private LuaValue System.Collections.Generic.IEnumerator<Language.Lua.LuaValue>.Current
			{
				[Token(Token = "0x600281F")]
				[Address(RVA = "0x16E2D80", Offset = "0x16E2D80", VA = "0x16E2D80", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004D9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002821")]
				[Address(RVA = "0x16E2DE8", Offset = "0x16E2DE8", VA = "0x16E2DE8", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600281B")]
			[Address(RVA = "0x16E1F10", Offset = "0x16E1F10", VA = "0x16E1F10")]
			[DebuggerHidden]
			public <get_Keys>d__27(int <>1__state)
			{
			}

			[Token(Token = "0x600281C")]
			[Address(RVA = "0x16E2AB8", Offset = "0x16E2AB8", VA = "0x16E2AB8", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600281D")]
			[Address(RVA = "0x16E2B2C", Offset = "0x16E2B2C", VA = "0x16E2B2C", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600281E")]
			[Address(RVA = "0x16E2AD4", Offset = "0x16E2AD4", VA = "0x16E2AD4")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002820")]
			[Address(RVA = "0x16E2D88", Offset = "0x16E2D88", VA = "0x16E2D88", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002822")]
			[Address(RVA = "0x16E2DF0", Offset = "0x16E2DF0", VA = "0x16E2DF0", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<LuaValue> System.Collections.Generic.IEnumerable<Language.Lua.LuaValue>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002823")]
			[Address(RVA = "0x16E2E9C", Offset = "0x16E2E9C", VA = "0x16E2E9C", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Serializable]
		[Token(Token = "0x2000541")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D4F8", Offset = "0xA0D4F8")]
		private sealed class <>c
		{
			[Token(Token = "0x4001BFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001BFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<LuaValue> <>9__35_0;

			[Token(Token = "0x6002825")]
			[Address(RVA = "0x16E27F8", Offset = "0x16E27F8", VA = "0x16E27F8")]
			public <>c()
			{
			}

			[Token(Token = "0x6002826")]
			[Address(RVA = "0x16E2800", Offset = "0x16E2800", VA = "0x16E2800")]
			internal int <Sort>b__35_0(LuaValue a, LuaValue b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x2000542")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D508", Offset = "0xA0D508")]
		private sealed class <>c__DisplayClass36_0
		{
			[Token(Token = "0x4001BFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LuaFunction compare;

			[Token(Token = "0x6002827")]
			[Address(RVA = "0x16E1F50", Offset = "0x16E1F50", VA = "0x16E1F50")]
			public <>c__DisplayClass36_0()
			{
			}

			[Token(Token = "0x6002828")]
			[Address(RVA = "0x16E2980", Offset = "0x16E2980", VA = "0x16E2980")]
			internal int <Sort>b__0(LuaValue a, LuaValue b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4000871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<LuaValue> list;

		[Token(Token = "0x4000872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<LuaValue, LuaValue> dict;

		[Token(Token = "0x4000873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<int, LuaValue> m_intKeyCache;

		[Token(Token = "0x4000874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<string, LuaValue> m_stringKeyCache;

		[Token(Token = "0x4000875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA15BAC", Offset = "0xA15BAC")]
		private LuaTable <MetaTable>k__BackingField;

		[Token(Token = "0x170000CC")]
		public LuaTable MetaTable
		{
			[Token(Token = "0x6000A71")]
			[Address(RVA = "0x16E196C", Offset = "0x16E196C", VA = "0x16E196C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA29140", Offset = "0xA29140")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A72")]
			[Address(RVA = "0x16E1974", Offset = "0x16E1974", VA = "0x16E1974")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA29150", Offset = "0xA29150")]
			set
			{
			}
		}

		[Token(Token = "0x170000CD")]
		public override object Value
		{
			[Token(Token = "0x6000A73")]
			[Address(RVA = "0x16E197C", Offset = "0x16E197C", VA = "0x16E197C", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CE")]
		public int Length
		{
			[Token(Token = "0x6000A75")]
			[Address(RVA = "0x16D8490", Offset = "0x16D8490", VA = "0x16D8490")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000CF")]
		public int Count
		{
			[Token(Token = "0x6000A76")]
			[Address(RVA = "0x16DFA90", Offset = "0x16DFA90", VA = "0x16DFA90")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000D0")]
		public List<LuaValue> List
		{
			[Token(Token = "0x6000A78")]
			[Address(RVA = "0x16E1B30", Offset = "0x16E1B30", VA = "0x16E1B30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D1")]
		public Dictionary<LuaValue, LuaValue> Dict
		{
			[Token(Token = "0x6000A79")]
			[Address(RVA = "0x16E1BA4", Offset = "0x16E1BA4", VA = "0x16E1BA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D2")]
		public IEnumerable<LuaValue> ListValues
		{
			[Token(Token = "0x6000A7C")]
			[Address(RVA = "0x16E1F08", Offset = "0x16E1F08", VA = "0x16E1F08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D3")]
		public IEnumerable<LuaValue> Keys
		{
			[Token(Token = "0x6000A7D")]
			[Address(RVA = "0x16D6D48", Offset = "0x16D6D48", VA = "0x16D6D48")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA29160", Offset = "0xA29160")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D4")]
		public IEnumerable<KeyValuePair<LuaValue, LuaValue>> KeyValuePairs
		{
			[Token(Token = "0x6000A7E")]
			[Address(RVA = "0x16E1F48", Offset = "0x16E1F48", VA = "0x16E1F48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A6F")]
		[Address(RVA = "0x16D85A0", Offset = "0x16D85A0", VA = "0x16D85A0")]
		public LuaTable()
		{
		}

		[Token(Token = "0x6000A70")]
		[Address(RVA = "0x16D3D70", Offset = "0x16D3D70", VA = "0x16D3D70")]
		public LuaTable(LuaTable parent)
		{
		}

		[Token(Token = "0x6000A74")]
		[Address(RVA = "0x16E1980", Offset = "0x16E1980", VA = "0x16E1980", Slot = "6")]
		public override string GetTypeCode()
		{
			return null;
		}

		[Token(Token = "0x6000A77")]
		[Address(RVA = "0x16E19C8", Offset = "0x16E19C8", VA = "0x16E19C8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000A7A")]
		[Address(RVA = "0x16E1C18", Offset = "0x16E1C18", VA = "0x16E1C18")]
		public void AddRaw(string key, LuaValue value)
		{
		}

		[Token(Token = "0x6000A7B")]
		[Address(RVA = "0x16E1D2C", Offset = "0x16E1D2C", VA = "0x16E1D2C")]
		public void AddRaw(int key, LuaValue value)
		{
		}

		[Token(Token = "0x6000A7F")]
		[Address(RVA = "0x16D3370", Offset = "0x16D3370", VA = "0x16D3370")]
		public bool ContainsKey(LuaValue key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A80")]
		[Address(RVA = "0x16DE20C", Offset = "0x16DE20C", VA = "0x16DE20C")]
		public void AddValue(LuaValue value)
		{
		}

		[Token(Token = "0x6000A81")]
		[Address(RVA = "0x16DE980", Offset = "0x16DE980", VA = "0x16DE980")]
		public void InsertValue(int index, LuaValue value)
		{
		}

		[Token(Token = "0x6000A82")]
		[Address(RVA = "0x16DED00", Offset = "0x16DED00", VA = "0x16DED00")]
		public bool Remove(LuaValue item)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A83")]
		[Address(RVA = "0x16DEBC4", Offset = "0x16DEBC4", VA = "0x16DEBC4")]
		public void RemoveAt(int index)
		{
		}

		[Token(Token = "0x6000A84")]
		[Address(RVA = "0x16DF28C", Offset = "0x16DF28C", VA = "0x16DF28C")]
		public void Sort()
		{
		}

		[Token(Token = "0x6000A85")]
		[Address(RVA = "0x16DF1C8", Offset = "0x16DF1C8", VA = "0x16DF1C8")]
		public void Sort(LuaFunction compare)
		{
		}

		[Token(Token = "0x6000A86")]
		[Address(RVA = "0x16D7C2C", Offset = "0x16D7C2C", VA = "0x16D7C2C")]
		public LuaValue GetValue(int index)
		{
			return null;
		}

		[Token(Token = "0x6000A87")]
		[Address(RVA = "0x16D377C", Offset = "0x16D377C", VA = "0x16D377C")]
		public LuaValue GetValue(string name)
		{
			return null;
		}

		[Token(Token = "0x6000A88")]
		[Address(RVA = "0x16E1F58", Offset = "0x16E1F58", VA = "0x16E1F58")]
		public LuaValue GetKey(string key)
		{
			return null;
		}

		[Token(Token = "0x6000A89")]
		[Address(RVA = "0x16D436C", Offset = "0x16D436C", VA = "0x16D436C")]
		public void SetNameValue(string name, LuaValue value)
		{
		}

		[Token(Token = "0x6000A8A")]
		[Address(RVA = "0x16E22C0", Offset = "0x16E22C0", VA = "0x16E22C0")]
		private void RemoveKey(string name)
		{
		}

		[Token(Token = "0x6000A8B")]
		[Address(RVA = "0x16D346C", Offset = "0x16D346C", VA = "0x16D346C")]
		public void SetKeyValue(LuaValue key, LuaValue value)
		{
		}

		[Token(Token = "0x6000A8C")]
		[Address(RVA = "0x16E24D4", Offset = "0x16E24D4", VA = "0x16E24D4")]
		private bool GetIntValue(LuaValue value, out int intValue)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A8D")]
		[Address(RVA = "0x16E238C", Offset = "0x16E238C", VA = "0x16E238C")]
		private void RemoveKey(LuaValue key)
		{
		}

		[Token(Token = "0x6000A8E")]
		[Address(RVA = "0x16D6F10", Offset = "0x16D6F10", VA = "0x16D6F10")]
		public LuaValue GetValue(LuaValue key)
		{
			return null;
		}

		[Token(Token = "0x6000A8F")]
		[Address(RVA = "0x16E2118", Offset = "0x16E2118", VA = "0x16E2118")]
		private LuaValue GetValueFromMetaTable(string name)
		{
			return null;
		}

		[Token(Token = "0x6000A90")]
		[Address(RVA = "0x16E2580", Offset = "0x16E2580", VA = "0x16E2580")]
		private LuaValue GetValueFromMetaTable(LuaValue key)
		{
			return null;
		}

		[Token(Token = "0x6000A91")]
		[Address(RVA = "0x16D5D5C", Offset = "0x16D5D5C", VA = "0x16D5D5C")]
		public LuaFunction Register(string name, LuaFunc function)
		{
			return null;
		}

		[Token(Token = "0x6000A92")]
		[Address(RVA = "0x16E2704", Offset = "0x16E2704", VA = "0x16E2704")]
		public LuaFunction RegisterMethodFunction(string name, object target, MethodInfo methodInfo)
		{
			return null;
		}

		[Token(Token = "0x6000A93")]
		[Address(RVA = "0x16D63BC", Offset = "0x16D63BC", VA = "0x16D63BC")]
		public LuaValue RawGetValue(LuaValue key)
		{
			return null;
		}

		[Token(Token = "0x6000A94")]
		[Address(RVA = "0x16DFE50", Offset = "0x16DFE50", VA = "0x16DFE50")]
		public void RawSetValue(string name, LuaValue value)
		{
		}
	}
	[Token(Token = "0x200013C")]
	public class LuaUserdata : LuaValue
	{
		[Token(Token = "0x4000876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private object Object;

		[Token(Token = "0x4000877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA15BBC", Offset = "0xA15BBC")]
		private LuaTable <MetaTable>k__BackingField;

		[Token(Token = "0x170000D5")]
		public override object Value
		{
			[Token(Token = "0x6000A97")]
			[Address(RVA = "0x16E2ED8", Offset = "0x16E2ED8", VA = "0x16E2ED8", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D6")]
		public LuaTable MetaTable
		{
			[Token(Token = "0x6000A98")]
			[Address(RVA = "0x16E2EE0", Offset = "0x16E2EE0", VA = "0x16E2EE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA291C4", Offset = "0xA291C4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A99")]
			[Address(RVA = "0x16E2EE8", Offset = "0x16E2EE8", VA = "0x16E2EE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA291D4", Offset = "0xA291D4")]
			set
			{
			}
		}

		[Token(Token = "0x6000A95")]
		[Address(RVA = "0x16D9A44", Offset = "0x16D9A44", VA = "0x16D9A44")]
		public LuaUserdata(object obj)
		{
		}

		[Token(Token = "0x6000A96")]
		[Address(RVA = "0x16E2EA0", Offset = "0x16E2EA0", VA = "0x16E2EA0")]
		public LuaUserdata(object obj, LuaTable metatable)
		{
		}

		[Token(Token = "0x6000A9A")]
		[Address(RVA = "0x16E2EF0", Offset = "0x16E2EF0", VA = "0x16E2EF0", Slot = "6")]
		public override string GetTypeCode()
		{
			return null;
		}

		[Token(Token = "0x6000A9B")]
		[Address(RVA = "0x16E2F38", Offset = "0x16E2F38", VA = "0x16E2F38", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200013D")]
	public abstract class LuaValue : IEquatable<LuaValue>
	{
		[Token(Token = "0x170000D7")]
		public abstract object Value
		{
			[Token(Token = "0x6000A9C")]
			get;
		}

		[Token(Token = "0x6000A9D")]
		public abstract string GetTypeCode();

		[Token(Token = "0x6000A9E")]
		[Address(RVA = "0x16E2F80", Offset = "0x16E2F80", VA = "0x16E2F80", Slot = "7")]
		public virtual bool GetBooleanValue()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A9F")]
		[Address(RVA = "0x16D6DC8", Offset = "0x16D6DC8", VA = "0x16D6DC8", Slot = "4")]
		public bool Equals(LuaValue other)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AA0")]
		[Address(RVA = "0x16E2F88", Offset = "0x16E2F88", VA = "0x16E2F88", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AA1")]
		[Address(RVA = "0x16E3030", Offset = "0x16E3030", VA = "0x16E3030", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000AA2")]
		[Address(RVA = "0x16D56CC", Offset = "0x16D56CC", VA = "0x16D56CC")]
		public static LuaValue GetKeyValue(LuaValue baseValue, LuaValue key)
		{
			return null;
		}

		[Token(Token = "0x6000AA3")]
		[Address(RVA = "0x16E0124", Offset = "0x16E0124", VA = "0x16E0124")]
		protected LuaValue()
		{
		}
	}
	[Token(Token = "0x200013E")]
	public class Parser
	{
		[Token(Token = "0x4000878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int position;

		[Token(Token = "0x4000879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ParserInput<char> Input;

		[Token(Token = "0x400087A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Tuple<int, string>> Errors;

		[Token(Token = "0x400087B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Stack<int> ErrorStack;

		[Token(Token = "0x400087C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<Tuple<int, string>, Tuple<object, bool, int>> ParsingResults;

		[Token(Token = "0x170000D8")]
		public int Position
		{
			[Token(Token = "0x6000AEB")]
			[Address(RVA = "0x16F0DC0", Offset = "0x16F0DC0", VA = "0x16F0DC0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000AEC")]
			[Address(RVA = "0x16F0DC8", Offset = "0x16F0DC8", VA = "0x16F0DC8")]
			set
			{
			}
		}

		[Token(Token = "0x6000AA4")]
		[Address(RVA = "0x16E055C", Offset = "0x16E055C", VA = "0x16E055C")]
		public Chunk ParseChunk(ParserInput<char> input, out bool success)
		{
			return null;
		}

		[Token(Token = "0x6000AA5")]
		[Address(RVA = "0x16E5800", Offset = "0x16E5800", VA = "0x16E5800")]
		private Chunk ParseChunk(out bool success)
		{
			return null;
		}

		[Token(Token = "0x6000AA6")]
		[Address(RVA = "0x16E5FAC", Offset = "0x16E5FAC", VA = "0x16E5FAC")]
		private Statement ParseStatement(out bool success)
		{
			return null;
		}

		[Token(Token = "0x6000AA7")]
		[Address(RVA = "0x16E6260", Offset = "0x16E6260", VA = "0x16E6260")]
		private Assignment ParseAssignment(out bool success)
		{
			return null;
		}

		[Token(Token = "0x6000AA8")]
		[Address(RVA = "0x16E6590", Offset = "0x16E6590", VA = "0x16E6590")]
		private Function ParseFunction(out bool success)
		{
			return null;
		}

		[Token(Token = "0x6000AA9")]
		[Address(RVA = "0x16E6870", Offset = "0x16E6870", VA = "0x16E6870")]
		private LocalVar ParseLocalVar(out bool success)
		{
			return null;
		}

		[Token(Token = "0x6000AAA")]
		[Address(RVA = "0x16E6B48", Offset = "0x16E6B48", VA = "0x16E6B48")]
		private LocalFunc ParseLocalFunc(out bool success)
		{
			return null;
		}

		[Token(Token = "0x6000AAB")]
		[Address(RVA = "0x16E8940", Offset = "0x16E8940", VA = "0x16E8940")]
		private ExprStmt ParseExprStmt(out bool success)
		{
			return null;
		}

		[Token(Token = "0x6000AAC")]
		[Address(RVA = "0x16E6E68", Offset = "0x16E6E68", VA = "0x16E6E68")]
		private ReturnStmt ParseReturnStmt(out bool success)
		{
			return null;
		}

		[Token(Token = "0x6000AAD")]
		[Address(RVA = "0x16E70CC", Offset = "0x16E70CC", VA = "0x16E70CC")]
		private BreakStmt ParseBreakStmt(out bool success)
		{
			return null;
		}

		[Token(Token = "0x6000AAE")]
		[Address(RVA = "0x16E732C", Offset = "0x16E732C", VA = "0x16E732C")]
		private DoStmt ParseDoStmt(out bool success)
		{
			return null;
		}

		[Token(Token = "0x6000AAF")]
		[Address(RVA = "0x16E7628", Offset = "0x16E7628", VA = "0x16E7628")]
		private IfStmt ParseIfStmt(out bool success)
		{
			return null;
		}

		[Token(Token = "0x6000AB0")]
		[Address(RVA = "0x16EA054", Offset = "0x16EA054", VA = "0x16EA054")]
		private ElseifBlock ParseElseifBlock(out bool success)
		{
			return null;
		}

		[Token(Token = "0x6000AB1")]
		[Address(RVA = "0x16E7A7C", Offset = "0x16E7A7C", VA = "0x16E7A7C")]
		private ForStmt ParseForStmt(out bool success)
		{
			return null;
		}

		[Token(Token = "0x6000AB2")]
		[Address(RVA = "0x16E7EF8", Offset = "0x16E7EF8", VA = "0x16E7EF8")]
		private ForInStmt ParseForInStmt(out bool success)
		{
			return null;
		}

		[Token(Token = "0x6000AB3")]
		[Address(RVA = "0x16E82CC", Offset = "0x16E82CC", VA = "0x16E82CC")]
		private WhileStmt ParseWhileStmt(out bool success)
		{
			return null;
		}

		[Token(Token = "0x6000AB4")]
		[Address(RVA = "0x16E862C", Offset = "0x16E862C", VA = "0x16E862C")]
		private RepeatStmt ParseRepeatStmt(out bool success)
		{
			return null;
		}

		[Token(Token = "0x6000AB5")]
		[Address(RVA = "0x16E8B34", Offset = "0x16E8B34", VA = "0x16E8B34")]
		private List<Var> ParseVarList(out bool success)
		{
			return null;
		}

		[Token(Token = "0x6000AB6")]
		[Address(RVA = "0x16E8E08", Offset = "0x16E8E08", VA = "0x16E8E08")]
		private List<Expr> ParseExprList(out bool success)
		{
			return null;
		}

		[Token(Token = "0x6000AB7")]
		[Address(RVA = "0x16E9E6C", Offset = "0x16E9E6C", VA = "0x16E9E6C")]
		private Expr ParseExpr(out bool success)
		{
			return null;
		}

		[Token(Token = "0x6000AB8")]
		[Address(RVA = "0x16EA9C0", Offset = "0x16EA9C0", VA = "0x16EA9C0")]
		private Term ParseTerm(out bool success)
		{
			return null;
		}

		[Token(Token = "0x6000AB9")]
		[Address(RVA = "0x16EAC10", Offset = "0x16EAC10", VA = "0x16EAC10")]
		private NilLiteral ParseNilLiteral(out bool success)
		{
			return null;
		}

		[Token(Token = "0x6000ABA")]
		[Address(RVA = "0x16EAE08", Offset = "0x16EAE08", VA = "0x16EAE08")]
		private BoolLiteral ParseBoolLiteral(out bool success)
		{
			return null;
		}

		[Token(Token = "0x6000ABB")]
		[Address(RVA = "0x16EB07C", Offset = "0x16EB07C", VA = "0x16EB07C")]
		private NumberLiteral ParseNumberLiteral(out bool success)
		{
			return null;
		}

		[Token(Token = "0x6000ABC")]
		[Address(RVA = "0x16EB270", Offset = "0x16EB270", VA = "0x16EB270")]
		private StringLiteral ParseStringLiteral(out bool success)
		{
			return null;
		}

		[Token(Token = "0x6000ABD")]
		[Address(RVA = "0x16EBA68", Offset = "0x16EBA68", VA = "0x16EBA68")]
		private VariableArg ParseVariableArg(out bool success)
		{
			return null;
		}

		[Token(Token = "0x6000ABE")]
		[Address(RVA = "0x16EB530", Offset = "0x16EB530", VA = "0x16EB530")]
		private FunctionValue ParseFunctionValue(out bool success)
		{
			return null;
		}

		[Token(Token = "0x6000ABF")]
		[Address(RVA = "0x16E9590", Offset = "0x16E9590", VA = "0x16E9590")]
		private FunctionBody ParseFunctionBody(out bool success)
		{
			return null;
		}

		[Token(Token = "0x6000AC0")]
		[Address(RVA = "0x16ED140", Offset = "0x16ED140", VA = "0x16ED140")]
		private Access ParseAccess(out bool success)
		{
			return null;
		}

		[Token(Token = "0x6000AC1")]
		[Address(RVA = "0x16EDD3C", Offset = "0x16EDD3C", VA = "0x16EDD3C")]
		private BaseExpr ParseBaseExpr(out bool success)
		{
			return null;
		}

		[Token(Token = "0x6000AC2")]
		[Address(RVA = "0x16ED5CC", Offset = "0x16ED5CC", VA = "0x16ED5CC")]
		private KeyAccess ParseKeyAccess(out bool success)
		{
			return null;
		}

		[Token(Token = "0x6000AC3")]
		[Address(RVA = "0x16ED340", Offset = "0x16ED340", VA = "0x16ED340")]
		private NameAccess ParseNameAccess(out bool success)
		{
			return null;
		}

		[Token(Token = "0x6000AC4")]
		[Address(RVA = "0x16ED884", Offset = "0x16ED884", VA = "0x16ED884")]
		private MethodCall ParseMethodCall(out bool success)
		{
			return null;
		}

		[Token(Token = "0x6000AC5")]
		[Address(RVA = "0x16EDB48", Offset = "0x16EDB48", VA = "0x16EDB48")]
		private FunctionCall ParseFunctionCall(out bool success)
		{
			return null;
		}

		[Token(Token = "0x6000AC6")]
		[Address(RVA = "0x16EA368", Offset = "0x16EA368", VA = "0x16EA368")]
		private Var ParseVar(out bool success)
		{
			return null;
		}

		[Token(Token = "0x6000AC7")]
		[Address(RVA = "0x16EBC68", Offset = "0x16EBC68", VA = "0x16EBC68")]
		private PrimaryExpr ParsePrimaryExpr(out bool success)
		{
			return null;
		}

		[Token(Token = "0x6000AC8")]
		[Address(RVA = "0x16EE1CC", Offset = "0x16EE1CC", VA = "0x16EE1CC")]
		private VarName ParseVarName(out bool success)
		{
			return null;
		}

		[Token(Token = "0x6000AC9")]
		[Address(RVA = "0x16E9300", Offset = "0x16E9300", VA = "0x16E9300")]
		private FunctionName ParseFunctionName(out bool success)
		{
			return null;
		}

		[Token(Token = "0x6000ACA")]
		[Address(RVA = "0x16EDF14", Offset = "0x16EDF14", VA = "0x16EDF14")]
		private GroupExpr ParseGroupExpr(out bool success)
		{
			return null;
		}

		[Token(Token = "0x6000ACB")]
		[Address(RVA = "0x16EB7C4", Offset = "0x16EB7C4", VA = "0x16EB7C4")]
		private TableConstructor ParseTableConstructor(out bool success)
		{
			return null;
		}

		[Token(Token = "0x6000ACC")]
		[Address(RVA = "0x16EE89C", Offset = "0x16EE89C", VA = "0x16EE89C")]
		private List<Field> ParseFieldList(out bool success)
		{
			return null;
		}

		[Token(Token = "0x6000ACD")]
		[Address(RVA = "0x16EEB74", Offset = "0x16EEB74", VA = "0x16EEB74")]
		private Field ParseField(out bool success)
		{
			return null;
		}

		[Token(Token = "0x6000ACE")]
		[Address(RVA = "0x16EEE04", Offset = "0x16EEE04", VA = "0x16EEE04")]
		private KeyValue ParseKeyValue(out bool success)
		{
			return null;
		}

		[Token(Token = "0x6000ACF")]
		[Address(RVA = "0x16EF11C", Offset = "0x16EF11C", VA = "0x16EF11C")]
		private NameValue ParseNameValue(out bool success)
		{
			return null;
		}

		[Token(Token = "0x6000AD0")]
		[Address(RVA = "0x16EF3E0", Offset = "0x16EF3E0", VA = "0x16EF3E0")]
		private ItemValue ParseItemValue(out bool success)
		{
			return null;
		}

		[Token(Token = "0x6000AD1")]
		[Address(RVA = "0x16EA6C0", Offset = "0x16EA6C0", VA = "0x16EA6C0")]
		private OperatorExpr ParseOperatorExpr(out bool success)
		{
			return null;
		}

		[Token(Token = "0x6000AD2")]
		[Address(RVA = "0x16EE3C0", Offset = "0x16EE3C0", VA = "0x16EE3C0")]
		private Args ParseArgs(out bool success)
		{
			return null;
		}

		[Token(Token = "0x6000AD3")]
		[Address(RVA = "0x16EFC0C", Offset = "0x16EFC0C", VA = "0x16EFC0C")]
		private List<Expr> ParseArgList(out bool success)
		{
			return null;
		}

		[Token(Token = "0x6000AD4")]
		[Address(RVA = "0x16ECEC8", Offset = "0x16ECEC8", VA = "0x16ECEC8")]
		private ParamList ParseParamList(out bool success)
		{
			return null;
		}

		[Token(Token = "0x6000AD5")]
		[Address(RVA = "0x16EE5C8", Offset = "0x16EE5C8", VA = "0x16EE5C8")]
		private List<string> ParseFullName(out bool success)
		{
			return null;
		}

		[Token(Token = "0x6000AD6")]
		[Address(RVA = "0x16E98A0", Offset = "0x16E98A0", VA = "0x16E98A0")]
		private List<string> ParseNameList(out bool success)
		{
			return null;
		}

		[Token(Token = "0x6000AD7")]
		[Address(RVA = "0x16E9B74", Offset = "0x16E9B74", VA = "0x16E9B74")]
		private string ParseName(out bool success)
		{
			return null;
		}

		[Token(Token = "0x6000AD8")]
		[Address(RVA = "0x16EC188", Offset = "0x16EC188", VA = "0x16EC188")]
		private string ParseFloatNumber(out bool success)
		{
			return null;
		}

		[Token(Token = "0x6000AD9")]
		[Address(RVA = "0x16EBEF8", Offset = "0x16EBEF8", VA = "0x16EBEF8")]
		private string ParseHexicalNumber(out bool success)
		{
			return null;
		}

		[Token(Token = "0x6000ADA")]
		[Address(RVA = "0x16EC89C", Offset = "0x16EC89C", VA = "0x16EC89C")]
		private string ParseSingleQuotedText(out bool success)
		{
			return null;
		}

		[Token(Token = "0x6000ADB")]
		[Address(RVA = "0x16EC608", Offset = "0x16EC608", VA = "0x16EC608")]
		private string ParseDoubleQuotedText(out bool success)
		{
			return null;
		}

		[Token(Token = "0x6000ADC")]
		[Address(RVA = "0x16ECB30", Offset = "0x16ECB30", VA = "0x16ECB30")]
		private string ParseLongString(out bool success)
		{
			return null;
		}

		[Token(Token = "0x6000ADD")]
		[Address(RVA = "0x16EFEC8", Offset = "0x16EFEC8", VA = "0x16EFEC8")]
		private void ParseKeyword(out bool success)
		{
		}

		[Token(Token = "0x6000ADE")]
		[Address(RVA = "0x16F034C", Offset = "0x16F034C", VA = "0x16F034C")]
		private char ParseDigit(out bool success)
		{
			return default(char);
		}

		[Token(Token = "0x6000ADF")]
		[Address(RVA = "0x16F03F0", Offset = "0x16F03F0", VA = "0x16F03F0")]
		private char ParseHexDigit(out bool success)
		{
			return default(char);
		}

		[Token(Token = "0x6000AE0")]
		[Address(RVA = "0x16F0284", Offset = "0x16F0284", VA = "0x16F0284")]
		private char ParseLetter(out bool success)
		{
			return default(char);
		}

		[Token(Token = "0x6000AE1")]
		[Address(RVA = "0x16EF5D4", Offset = "0x16EF5D4", VA = "0x16EF5D4")]
		private string ParseUnaryOperator(out bool success)
		{
			return null;
		}

		[Token(Token = "0x6000AE2")]
		[Address(RVA = "0x16EF848", Offset = "0x16EF848", VA = "0x16EF848")]
		private string ParseBinaryOperator(out bool success)
		{
			return null;
		}

		[Token(Token = "0x6000AE3")]
		[Address(RVA = "0x16F01DC", Offset = "0x16F01DC", VA = "0x16F01DC")]
		private void ParseWordSep(out bool success)
		{
		}

		[Token(Token = "0x6000AE4")]
		[Address(RVA = "0x16EED60", Offset = "0x16EED60", VA = "0x16EED60")]
		private void ParseFieldSep(out bool success)
		{
		}

		[Token(Token = "0x6000AE5")]
		[Address(RVA = "0x16E917C", Offset = "0x16E917C", VA = "0x16E917C")]
		private void ParseSpReq(out bool success)
		{
		}

		[Token(Token = "0x6000AE6")]
		[Address(RVA = "0x16E5B8C", Offset = "0x16E5B8C", VA = "0x16E5B8C")]
		private void ParseSpOpt(out bool success)
		{
		}

		[Token(Token = "0x6000AE7")]
		[Address(RVA = "0x16F0A9C", Offset = "0x16F0A9C", VA = "0x16F0A9C")]
		private void ParseComment(out bool success)
		{
		}

		[Token(Token = "0x6000AE8")]
		[Address(RVA = "0x16F0848", Offset = "0x16F0848", VA = "0x16F0848")]
		private void ParseEol(out bool success)
		{
		}

		[Token(Token = "0x6000AE9")]
		[Address(RVA = "0x16F0CA4", Offset = "0x16F0CA4", VA = "0x16F0CA4")]
		private void ParseEof(out bool success)
		{
		}

		[Token(Token = "0x6000AEA")]
		[Address(RVA = "0x16F0650", Offset = "0x16F0650", VA = "0x16F0650")]
		private char ParseEscapeChar(out bool success)
		{
			return default(char);
		}

		[Token(Token = "0x6000AED")]
		[Address(RVA = "0x16E08D8", Offset = "0x16E08D8", VA = "0x16E08D8")]
		public Parser()
		{
		}

		[Token(Token = "0x6000AEE")]
		[Address(RVA = "0x16E5794", Offset = "0x16E5794", VA = "0x16E5794")]
		public void SetInput(ParserInput<char> input)
		{
		}

		[Token(Token = "0x6000AEF")]
		[Address(RVA = "0x16F0DD0", Offset = "0x16F0DD0", VA = "0x16F0DD0")]
		private bool TerminalMatch(char terminal)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AF0")]
		[Address(RVA = "0x16F0F30", Offset = "0x16F0F30", VA = "0x16F0F30")]
		private bool TerminalMatch(char terminal, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AF1")]
		[Address(RVA = "0x16E5E2C", Offset = "0x16E5E2C", VA = "0x16E5E2C")]
		private char MatchTerminal(char terminal, out bool success)
		{
			return default(char);
		}

		[Token(Token = "0x6000AF2")]
		[Address(RVA = "0x16F090C", Offset = "0x16F090C", VA = "0x16F090C")]
		private char MatchTerminalRange(char start, char end, out bool success)
		{
			return default(char);
		}

		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0x16F049C", Offset = "0x16F049C", VA = "0x16F049C")]
		private char MatchTerminalSet(string terminalSet, bool isComplement, out bool success)
		{
			return default(char);
		}

		[Token(Token = "0x6000AF4")]
		[Address(RVA = "0x16E90DC", Offset = "0x16E90DC", VA = "0x16E90DC")]
		private string MatchTerminalString(string terminalString, out bool success)
		{
			return null;
		}

		[Token(Token = "0x6000AF5")]
		[Address(RVA = "0x16E5C84", Offset = "0x16E5C84", VA = "0x16E5C84")]
		public bool PeekTerminalString(string terminalString)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AF6")]
		[Address(RVA = "0x16E5AD8", Offset = "0x16E5AD8", VA = "0x16E5AD8")]
		private int Error(string message)
		{
			return default(int);
		}

		[Token(Token = "0x6000AF7")]
		[Address(RVA = "0x16E6520", Offset = "0x16E6520", VA = "0x16E6520")]
		private void ClearError(int count)
		{
		}

		[Token(Token = "0x6000AF8")]
		[Address(RVA = "0x16E0668", Offset = "0x16E0668", VA = "0x16E0668")]
		public string GetEorrorMessages()
		{
			return null;
		}
	}
	[Token(Token = "0x200013F")]
	public interface ParserInput<T>
	{
		[Token(Token = "0x170000D9")]
		int Length
		{
			[Token(Token = "0x6000AF9")]
			get;
		}

		[Token(Token = "0x6000AFA")]
		bool HasInput(int pos);

		[Token(Token = "0x6000AFB")]
		T GetInputSymbol(int pos);

		[Token(Token = "0x6000AFC")]
		T[] GetSubSection(int position, int length);

		[Token(Token = "0x6000AFD")]
		string FormErrorMessage(int position, string message);
	}
	[Token(Token = "0x2000140")]
	public class Args
	{
		[Token(Token = "0x400087D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Expr> ArgList;

		[Token(Token = "0x400087E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StringLiteral String;

		[Token(Token = "0x400087F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TableConstructor Table;

		[Token(Token = "0x6000AFE")]
		[Address(RVA = "0x16D2860", Offset = "0x16D2860", VA = "0x16D2860")]
		public Args()
		{
		}
	}
	[Token(Token = "0x2000141")]
	public class ElseifBlock
	{
		[Token(Token = "0x4000880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Expr Condition;

		[Token(Token = "0x4000881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Chunk ThenBlock;

		[Token(Token = "0x6000AFF")]
		[Address(RVA = "0x16D3FBC", Offset = "0x16D3FBC", VA = "0x16D3FBC")]
		public ElseifBlock()
		{
		}
	}
	[Token(Token = "0x2000142")]
	public class Field
	{
		[Token(Token = "0x4000882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Expr Value;

		[Token(Token = "0x6000B00")]
		[Address(RVA = "0x16D4010", Offset = "0x16D4010", VA = "0x16D4010")]
		public Field()
		{
		}
	}
	[Token(Token = "0x2000143")]
	public class FunctionName
	{
		[Token(Token = "0x4000883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<string> FullName;

		[Token(Token = "0x4000884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string MethodName;

		[Token(Token = "0x6000B01")]
		[Address(RVA = "0x16D5348", Offset = "0x16D5348", VA = "0x16D5348")]
		public FunctionName()
		{
		}
	}
	[Token(Token = "0x2000144")]
	public class ItemValue : Field
	{
		[Token(Token = "0x6000B02")]
		[Address(RVA = "0x16D5680", Offset = "0x16D5680", VA = "0x16D5680")]
		public ItemValue()
		{
		}
	}
	[Token(Token = "0x2000145")]
	public class KeyValue : Field
	{
		[Token(Token = "0x4000885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Expr Key;

		[Token(Token = "0x6000B03")]
		[Address(RVA = "0x16D5918", Offset = "0x16D5918", VA = "0x16D5918")]
		public KeyValue()
		{
		}
	}
	[Token(Token = "0x2000146")]
	public class NameValue : Field
	{
		[Token(Token = "0x4000886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Name;

		[Token(Token = "0x6000B04")]
		[Address(RVA = "0x16E3408", Offset = "0x16E3408", VA = "0x16E3408")]
		public NameValue()
		{
		}
	}
	[Token(Token = "0x2000147")]
	public class ParamList
	{
		[Token(Token = "0x4000887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<string> NameList;

		[Token(Token = "0x4000888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool HasVarArg;

		[Token(Token = "0x4000889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string IsVarArg;

		[Token(Token = "0x6000B05")]
		[Address(RVA = "0x16E5724", Offset = "0x16E5724", VA = "0x16E5724")]
		public ParamList()
		{
		}
	}
	[Token(Token = "0x2000148")]
	public class Var
	{
		[Token(Token = "0x400088A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BaseExpr Base;

		[Token(Token = "0x400088B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Access> Accesses;

		[Token(Token = "0x6000B06")]
		[Address(RVA = "0x1421D00", Offset = "0x1421D00", VA = "0x1421D00")]
		public Var()
		{
		}
	}
	[Token(Token = "0x2000149")]
	public class TextInput : ParserInput<char>
	{
		[Token(Token = "0x400088C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string InputText;

		[Token(Token = "0x400088D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<int> LineBreaks;

		[Token(Token = "0x170000DA")]
		public int Length
		{
			[Token(Token = "0x6000B08")]
			[Address(RVA = "0x1421930", Offset = "0x1421930", VA = "0x1421930", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000B07")]
		[Address(RVA = "0x1421828", Offset = "0x1421828", VA = "0x1421828")]
		public TextInput(string text)
		{
		}

		[Token(Token = "0x6000B09")]
		[Address(RVA = "0x142194C", Offset = "0x142194C", VA = "0x142194C", Slot = "5")]
		public bool HasInput(int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B0A")]
		[Address(RVA = "0x1421970", Offset = "0x1421970", VA = "0x1421970", Slot = "6")]
		public char GetInputSymbol(int pos)
		{
			return default(char);
		}

		[Token(Token = "0x6000B0B")]
		[Address(RVA = "0x142198C", Offset = "0x142198C", VA = "0x142198C", Slot = "7")]
		public char[] GetSubSection(int position, int length)
		{
			return null;
		}

		[Token(Token = "0x6000B0C")]
		[Address(RVA = "0x14219B8", Offset = "0x14219B8", VA = "0x14219B8", Slot = "8")]
		public string FormErrorMessage(int position, string message)
		{
			return null;
		}

		[Token(Token = "0x6000B0D")]
		[Address(RVA = "0x1421BB0", Offset = "0x1421BB0", VA = "0x1421BB0")]
		public void GetLineColumnNumber(int pos, out int line, out int col)
		{
		}

		[Token(Token = "0x6000B0E")]
		[Address(RVA = "0x1421CE4", Offset = "0x1421CE4", VA = "0x1421CE4")]
		public string GetSubString(int start, int length)
		{
			return null;
		}
	}
}
namespace Language.Lua.Library
{
	[Token(Token = "0x200014A")]
	public class BaseLib
	{
		[Serializable]
		[Token(Token = "0x2000543")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D518", Offset = "0xA0D518")]
		private sealed class <>c
		{
			[Token(Token = "0x4001C00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001C01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static LuaFunc <>9__9_0;

			[Token(Token = "0x600282A")]
			[Address(RVA = "0x16D8254", Offset = "0x16D8254", VA = "0x16D8254")]
			public <>c()
			{
			}

			[Token(Token = "0x600282B")]
			[Address(RVA = "0x16D825C", Offset = "0x16D825C", VA = "0x16D825C")]
			internal LuaValue <ipairs>b__9_0(LuaValue[] args)
			{
				return null;
			}
		}

		[Token(Token = "0x2000544")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D528", Offset = "0xA0D528")]
		private sealed class <>c__DisplayClass16_0
		{
			[Token(Token = "0x4001C02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Chunk chunk;

			[Token(Token = "0x4001C03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LuaTable enviroment;

			[Token(Token = "0x600282C")]
			[Address(RVA = "0x16D78A8", Offset = "0x16D78A8", VA = "0x16D78A8")]
			public <>c__DisplayClass16_0()
			{
			}

			[Token(Token = "0x600282D")]
			[Address(RVA = "0x16D84E4", Offset = "0x16D84E4", VA = "0x16D84E4")]
			internal LuaValue <loadstring>b__0(LuaValue[] args)
			{
				return null;
			}
		}

		[Token(Token = "0x6000B0F")]
		[Address(RVA = "0x16D5920", Offset = "0x16D5920", VA = "0x16D5920")]
		public static void RegisterFunctions(LuaTable module)
		{
		}

		[Token(Token = "0x6000B10")]
		[Address(RVA = "0x16D5DE0", Offset = "0x16D5DE0", VA = "0x16D5DE0")]
		public static LuaValue print(LuaValue[] values)
		{
			return null;
		}

		[Token(Token = "0x6000B11")]
		[Address(RVA = "0x16D5EB4", Offset = "0x16D5EB4", VA = "0x16D5EB4")]
		public static LuaValue type(LuaValue[] values)
		{
			return null;
		}

		[Token(Token = "0x6000B12")]
		[Address(RVA = "0x16D5F90", Offset = "0x16D5F90", VA = "0x16D5F90")]
		public static LuaValue tostring(LuaValue[] values)
		{
			return null;
		}

		[Token(Token = "0x6000B13")]
		[Address(RVA = "0x16D602C", Offset = "0x16D602C", VA = "0x16D602C")]
		public static LuaValue tonumber(LuaValue[] values)
		{
			return null;
		}

		[Token(Token = "0x6000B14")]
		[Address(RVA = "0x16D619C", Offset = "0x16D619C", VA = "0x16D619C")]
		public static LuaValue setmetatable(LuaValue[] values)
		{
			return null;
		}

		[Token(Token = "0x6000B15")]
		[Address(RVA = "0x16D627C", Offset = "0x16D627C", VA = "0x16D627C")]
		public static LuaValue getmetatable(LuaValue[] values)
		{
			return null;
		}

		[Token(Token = "0x6000B16")]
		[Address(RVA = "0x16D6318", Offset = "0x16D6318", VA = "0x16D6318")]
		public static LuaValue rawget(LuaValue[] values)
		{
			return null;
		}

		[Token(Token = "0x6000B17")]
		[Address(RVA = "0x16D6478", Offset = "0x16D6478", VA = "0x16D6478")]
		public static LuaValue rawset(LuaValue[] values)
		{
			return null;
		}

		[Token(Token = "0x6000B18")]
		[Address(RVA = "0x16D652C", Offset = "0x16D652C", VA = "0x16D652C")]
		public static LuaValue ipairs(LuaValue[] values)
		{
			return null;
		}

		[Token(Token = "0x6000B19")]
		[Address(RVA = "0x16D675C", Offset = "0x16D675C", VA = "0x16D675C")]
		public static LuaValue pairs(LuaValue[] values)
		{
			return null;
		}

		[Token(Token = "0x6000B1A")]
		[Address(RVA = "0x16D693C", Offset = "0x16D693C", VA = "0x16D693C")]
		public static LuaValue next(LuaValue[] values)
		{
			return null;
		}

		[Token(Token = "0x6000B1B")]
		[Address(RVA = "0x16D7108", Offset = "0x16D7108", VA = "0x16D7108")]
		public static LuaValue assert(LuaValue[] values)
		{
			return null;
		}

		[Token(Token = "0x6000B1C")]
		[Address(RVA = "0x16D7278", Offset = "0x16D7278", VA = "0x16D7278")]
		public static LuaValue error(LuaValue[] values)
		{
			return null;
		}

		[Token(Token = "0x6000B1D")]
		[Address(RVA = "0x16D737C", Offset = "0x16D737C", VA = "0x16D737C")]
		public static LuaValue select(LuaValue[] values)
		{
			return null;
		}

		[Token(Token = "0x6000B1E")]
		[Address(RVA = "0x16D75B8", Offset = "0x16D75B8", VA = "0x16D75B8")]
		public static LuaValue dofile(LuaValue[] values)
		{
			return null;
		}

		[Token(Token = "0x6000B1F")]
		[Address(RVA = "0x16D7714", Offset = "0x16D7714", VA = "0x16D7714")]
		public static LuaValue loadstring(LuaValue[] values)
		{
			return null;
		}

		[Token(Token = "0x6000B20")]
		[Address(RVA = "0x16D79FC", Offset = "0x16D79FC", VA = "0x16D79FC")]
		public static LuaValue unpack(LuaValue[] values)
		{
			return null;
		}

		[Token(Token = "0x6000B21")]
		[Address(RVA = "0x16D7DE0", Offset = "0x16D7DE0", VA = "0x16D7DE0")]
		public static LuaValue pcall(LuaValue[] values)
		{
			return null;
		}

		[Token(Token = "0x6000B22")]
		[Address(RVA = "0x16D81E8", Offset = "0x16D81E8", VA = "0x16D81E8")]
		public BaseLib()
		{
		}
	}
	[Token(Token = "0x200014B")]
	public static class FileLib
	{
		[Token(Token = "0x2000545")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D538", Offset = "0xA0D538")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x4001C04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LuaUserdata data;

			[Token(Token = "0x600282E")]
			[Address(RVA = "0x16D8F80", Offset = "0x16D8F80", VA = "0x16D8F80")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x600282F")]
			[Address(RVA = "0x16D94DC", Offset = "0x16D94DC", VA = "0x16D94DC")]
			internal LuaValue <lines>b__0(LuaValue[] args)
			{
				return null;
			}
		}

		[Token(Token = "0x6000B23")]
		[Address(RVA = "0x16D8524", Offset = "0x16D8524", VA = "0x16D8524")]
		public static void RegisterModule(LuaTable enviroment)
		{
		}

		[Token(Token = "0x6000B24")]
		[Address(RVA = "0x16D8638", Offset = "0x16D8638", VA = "0x16D8638")]
		public static void RegisterFunctions(LuaTable module)
		{
		}

		[Token(Token = "0x6000B25")]
		[Address(RVA = "0x16D87D4", Offset = "0x16D87D4", VA = "0x16D87D4")]
		public static LuaTable CreateMetaTable()
		{
			return null;
		}

		[Token(Token = "0x6000B26")]
		[Address(RVA = "0x16D8854", Offset = "0x16D8854", VA = "0x16D8854")]
		public static LuaValue close(LuaValue[] values)
		{
			return null;
		}

		[Token(Token = "0x6000B27")]
		[Address(RVA = "0x16D8948", Offset = "0x16D8948", VA = "0x16D8948")]
		public static LuaValue read(LuaValue[] values)
		{
			return null;
		}

		[Token(Token = "0x6000B28")]
		[Address(RVA = "0x16D8D78", Offset = "0x16D8D78", VA = "0x16D8D78")]
		public static LuaValue lines(LuaValue[] values)
		{
			return null;
		}

		[Token(Token = "0x6000B29")]
		[Address(RVA = "0x16D8F88", Offset = "0x16D8F88", VA = "0x16D8F88")]
		public static LuaValue seek(LuaValue[] values)
		{
			return null;
		}

		[Token(Token = "0x6000B2A")]
		[Address(RVA = "0x16D9208", Offset = "0x16D9208", VA = "0x16D9208")]
		private static SeekOrigin GetSeekOrigin(string whence)
		{
			return default(SeekOrigin);
		}

		[Token(Token = "0x6000B2B")]
		[Address(RVA = "0x16D92AC", Offset = "0x16D92AC", VA = "0x16D92AC")]
		public static LuaValue write(LuaValue[] values)
		{
			return null;
		}

		[Token(Token = "0x6000B2C")]
		[Address(RVA = "0x16D93F8", Offset = "0x16D93F8", VA = "0x16D93F8")]
		public static LuaValue flush(LuaValue[] values)
		{
			return null;
		}
	}
	[Token(Token = "0x200014C")]
	public static class IOLib
	{
		[Token(Token = "0x400088E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static TextReader DefaultInput;

		[Token(Token = "0x400088F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static TextWriter DefaultOutput;

		[Token(Token = "0x6000B2D")]
		[Address(RVA = "0x16D95D4", Offset = "0x16D95D4", VA = "0x16D95D4")]
		public static void RegisterModule(LuaTable enviroment)
		{
		}

		[Token(Token = "0x6000B2E")]
		[Address(RVA = "0x16D9670", Offset = "0x16D9670", VA = "0x16D9670")]
		public static void RegisterFunctions(LuaTable module)
		{
		}

		[Token(Token = "0x6000B2F")]
		[Address(RVA = "0x16D9844", Offset = "0x16D9844", VA = "0x16D9844")]
		public static LuaValue input(LuaValue[] values)
		{
			return null;
		}

		[Token(Token = "0x6000B30")]
		[Address(RVA = "0x16D9A70", Offset = "0x16D9A70", VA = "0x16D9A70")]
		public static LuaValue output(LuaValue[] values)
		{
			return null;
		}

		[Token(Token = "0x6000B31")]
		[Address(RVA = "0x16D9C70", Offset = "0x16D9C70", VA = "0x16D9C70")]
		public static LuaValue open(LuaValue[] values)
		{
			return null;
		}

		[Token(Token = "0x6000B32")]
		[Address(RVA = "0x16D9E1C", Offset = "0x16D9E1C", VA = "0x16D9E1C")]
		public static LuaValue read(LuaValue[] values)
		{
			return null;
		}

		[Token(Token = "0x6000B33")]
		[Address(RVA = "0x16D9F00", Offset = "0x16D9F00", VA = "0x16D9F00")]
		public static LuaValue write(LuaValue[] values)
		{
			return null;
		}

		[Token(Token = "0x6000B34")]
		[Address(RVA = "0x16D9FEC", Offset = "0x16D9FEC", VA = "0x16D9FEC")]
		public static LuaValue flush(LuaValue[] values)
		{
			return null;
		}

		[Token(Token = "0x6000B35")]
		[Address(RVA = "0x16DA0C0", Offset = "0x16DA0C0", VA = "0x16DA0C0")]
		public static LuaValue tmpfile(LuaValue[] values)
		{
			return null;
		}
	}
	[Token(Token = "0x200014D")]
	public static class MathLib
	{
		[Serializable]
		[Token(Token = "0x2000546")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D548", Offset = "0xA0D548")]
		private sealed class <>c
		{
			[Token(Token = "0x4001C05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001C06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<LuaValue, double> <>9__16_0;

			[Token(Token = "0x4001C07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<LuaValue, double> <>9__17_0;

			[Token(Token = "0x6002831")]
			[Address(RVA = "0x16DC43C", Offset = "0x16DC43C", VA = "0x16DC43C")]
			public <>c()
			{
			}

			[Token(Token = "0x6002832")]
			[Address(RVA = "0x16DC444", Offset = "0x16DC444", VA = "0x16DC444")]
			internal double <max>b__16_0(LuaValue v)
			{
				return default(double);
			}

			[Token(Token = "0x6002833")]
			[Address(RVA = "0x16DC4C4", Offset = "0x16DC4C4", VA = "0x16DC4C4")]
			internal double <min>b__17_0(LuaValue v)
			{
				return default(double);
			}
		}

		[Token(Token = "0x4000890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static System.Random randomGenerator;

		[Token(Token = "0x6000B37")]
		[Address(RVA = "0x16DA0CC", Offset = "0x16DA0CC", VA = "0x16DA0CC")]
		public static void RegisterModule(LuaTable enviroment)
		{
		}

		[Token(Token = "0x6000B38")]
		[Address(RVA = "0x16DA168", Offset = "0x16DA168", VA = "0x16DA168")]
		public static void RegisterFunctions(LuaTable module)
		{
		}

		[Token(Token = "0x6000B39")]
		[Address(RVA = "0x16DA7E8", Offset = "0x16DA7E8", VA = "0x16DA7E8")]
		public static LuaValue abs(LuaValue[] values)
		{
			return null;
		}

		[Token(Token = "0x6000B3A")]
		[Address(RVA = "0x16DAA10", Offset = "0x16DAA10", VA = "0x16DAA10")]
		public static LuaValue acos(LuaValue[] values)
		{
			return null;
		}

		[Token(Token = "0x6000B3B")]
		[Address(RVA = "0x16DAAE0", Offset = "0x16DAAE0", VA = "0x16DAAE0")]
		public static LuaValue asin(LuaValue[] values)
		{
			return null;
		}

		[Token(Token = "0x6000B3C")]
		[Address(RVA = "0x16DABB0", Offset = "0x16DABB0", VA = "0x16DABB0")]
		public static LuaValue atan(LuaValue[] values)
		{
			return null;
		}

		[Token(Token = "0x6000B3D")]
		[Address(RVA = "0x16DAC80", Offset = "0x16DAC80", VA = "0x16DAC80")]
		public static LuaValue atan2(LuaValue[] values)
		{
			return null;
		}

		[Token(Token = "0x6000B3E")]
		[Address(RVA = "0x16DAF78", Offset = "0x16DAF78", VA = "0x16DAF78")]
		public static LuaValue ceil(LuaValue[] values)
		{
			return null;
		}

		[Token(Token = "0x6000B3F")]
		[Address(RVA = "0x16DB040", Offset = "0x16DB040", VA = "0x16DB040")]
		public static LuaValue cos(LuaValue[] values)
		{
			return null;
		}

		[Token(Token = "0x6000B40")]
		[Address(RVA = "0x16DB110", Offset = "0x16DB110", VA = "0x16DB110")]
		public static LuaValue cosh(LuaValue[] values)
		{
			return null;
		}

		[Token(Token = "0x6000B41")]
		[Address(RVA = "0x16DB1E0", Offset = "0x16DB1E0", VA = "0x16DB1E0")]
		public static LuaValue deg(LuaValue[] values)
		{
			return null;
		}

		[Token(Token = "0x6000B42")]
		[Address(RVA = "0x16DB298", Offset = "0x16DB298", VA = "0x16DB298")]
		public static LuaValue exp(LuaValue[] values)
		{
			return null;
		}

		[Token(Token = "0x6000B43")]
		[Address(RVA = "0x16DB368", Offset = "0x16DB368", VA = "0x16DB368")]
		public static LuaValue floor(LuaValue[] values)
		{
			return null;
		}

		[Token(Token = "0x6000B44")]
		[Address(RVA = "0x16DB430", Offset = "0x16DB430", VA = "0x16DB430")]
		public static LuaValue fmod(LuaValue[] values)
		{
			return null;
		}

		[Token(Token = "0x6000B45")]
		[Address(RVA = "0x16DB508", Offset = "0x16DB508", VA = "0x16DB508")]
		public static LuaValue log(LuaValue[] values)
		{
			return null;
		}

		[Token(Token = "0x6000B46")]
		[Address(RVA = "0x16DB5D8", Offset = "0x16DB5D8", VA = "0x16DB5D8")]
		public static LuaValue log10(LuaValue[] values)
		{
			return null;
		}

		[Token(Token = "0x6000B47")]
		[Address(RVA = "0x16DB6A8", Offset = "0x16DB6A8", VA = "0x16DB6A8")]
		public static LuaValue max(LuaValue[] values)
		{
			return null;
		}

		[Token(Token = "0x6000B48")]
		[Address(RVA = "0x16DB7C8", Offset = "0x16DB7C8", VA = "0x16DB7C8")]
		public static LuaValue min(LuaValue[] values)
		{
			return null;
		}

		[Token(Token = "0x6000B49")]
		[Address(RVA = "0x16DB8E8", Offset = "0x16DB8E8", VA = "0x16DB8E8")]
		public static LuaValue modf(LuaValue[] values)
		{
			return null;
		}

		[Token(Token = "0x6000B4A")]
		[Address(RVA = "0x16DBA7C", Offset = "0x16DBA7C", VA = "0x16DBA7C")]
		public static LuaValue pow(LuaValue[] values)
		{
			return null;
		}

		[Token(Token = "0x6000B4B")]
		[Address(RVA = "0x16DBB54", Offset = "0x16DBB54", VA = "0x16DBB54")]
		public static LuaValue rad(LuaValue[] values)
		{
			return null;
		}

		[Token(Token = "0x6000B4C")]
		[Address(RVA = "0x16DBC0C", Offset = "0x16DBC0C", VA = "0x16DBC0C")]
		public static LuaValue random(LuaValue[] values)
		{
			return null;
		}

		[Token(Token = "0x6000B4D")]
		[Address(RVA = "0x16DBE04", Offset = "0x16DBE04", VA = "0x16DBE04")]
		public static LuaValue randomseed(LuaValue[] values)
		{
			return null;
		}

		[Token(Token = "0x6000B4E")]
		[Address(RVA = "0x16DBEBC", Offset = "0x16DBEBC", VA = "0x16DBEBC")]
		public static LuaValue sin(LuaValue[] values)
		{
			return null;
		}

		[Token(Token = "0x6000B4F")]
		[Address(RVA = "0x16DBF8C", Offset = "0x16DBF8C", VA = "0x16DBF8C")]
		public static LuaValue sinh(LuaValue[] values)
		{
			return null;
		}

		[Token(Token = "0x6000B50")]
		[Address(RVA = "0x16DC05C", Offset = "0x16DC05C", VA = "0x16DC05C")]
		public static LuaValue sqrt(LuaValue[] values)
		{
			return null;
		}

		[Token(Token = "0x6000B51")]
		[Address(RVA = "0x16DC138", Offset = "0x16DC138", VA = "0x16DC138")]
		public static LuaValue tan(LuaValue[] values)
		{
			return null;
		}

		[Token(Token = "0x6000B52")]
		[Address(RVA = "0x16DC208", Offset = "0x16DC208", VA = "0x16DC208")]
		public static LuaValue tanh(LuaValue[] values)
		{
			return null;
		}

		[Token(Token = "0x6000B53")]
		[Address(RVA = "0x16DA8B0", Offset = "0x16DA8B0", VA = "0x16DA8B0")]
		private static LuaNumber CheckArgs(LuaValue[] values)
		{
			return null;
		}

		[Token(Token = "0x6000B54")]
		[Address(RVA = "0x16DAD54", Offset = "0x16DAD54", VA = "0x16DAD54")]
		private static Tuple<double, double> CheckArgs2(LuaValue[] values)
		{
			return null;
		}
	}
	[Token(Token = "0x200014E")]
	public static class OSLib
	{
		[Token(Token = "0x6000B56")]
		[Address(RVA = "0x16DC544", Offset = "0x16DC544", VA = "0x16DC544")]
		public static void RegisterModule(LuaTable enviroment)
		{
		}

		[Token(Token = "0x6000B57")]
		[Address(RVA = "0x16DC5C0", Offset = "0x16DC5C0", VA = "0x16DC5C0")]
		public static void RegisterFunctions(LuaTable module)
		{
		}

		[Token(Token = "0x6000B58")]
		[Address(RVA = "0x16DC804", Offset = "0x16DC804", VA = "0x16DC804")]
		public static LuaValue clock(LuaValue[] values)
		{
			return null;
		}

		[Token(Token = "0x6000B59")]
		[Address(RVA = "0x16DC898", Offset = "0x16DC898", VA = "0x16DC898")]
		public static LuaValue date(LuaValue[] values)
		{
			return null;
		}

		[Token(Token = "0x6000B5A")]
		[Address(RVA = "0x16DCCF0", Offset = "0x16DCCF0", VA = "0x16DCCF0")]
		public static LuaValue time(LuaValue[] values)
		{
			return null;
		}

		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0x16DCDB0", Offset = "0x16DCDB0", VA = "0x16DCDB0")]
		public static LuaValue execute(LuaValue[] values)
		{
			return null;
		}

		[Token(Token = "0x6000B5C")]
		[Address(RVA = "0x16DCE20", Offset = "0x16DCE20", VA = "0x16DCE20")]
		public static LuaValue exit(LuaValue[] values)
		{
			return null;
		}

		[Token(Token = "0x6000B5D")]
		[Address(RVA = "0x16DCE80", Offset = "0x16DCE80", VA = "0x16DCE80")]
		public static LuaValue getenv(LuaValue[] values)
		{
			return null;
		}

		[Token(Token = "0x6000B5E")]
		[Address(RVA = "0x16DCEE8", Offset = "0x16DCEE8", VA = "0x16DCEE8")]
		public static LuaValue remove(LuaValue[] values)
		{
			return null;
		}

		[Token(Token = "0x6000B5F")]
		[Address(RVA = "0x16DCF50", Offset = "0x16DCF50", VA = "0x16DCF50")]
		public static LuaValue rename(LuaValue[] values)
		{
			return null;
		}

		[Token(Token = "0x6000B60")]
		[Address(RVA = "0x16DCFB8", Offset = "0x16DCFB8", VA = "0x16DCFB8")]
		public static LuaValue tmpname(LuaValue[] values)
		{
			return null;
		}
	}
	[Token(Token = "0x200014F")]
	public static class StringLib
	{
		[Token(Token = "0x6000B61")]
		[Address(RVA = "0x16DD020", Offset = "0x16DD020", VA = "0x16DD020")]
		public static void RegisterModule(LuaTable enviroment)
		{
		}

		[Token(Token = "0x6000B62")]
		[Address(RVA = "0x16DD09C", Offset = "0x16DD09C", VA = "0x16DD09C")]
		public static void RegisterFunctions(LuaTable module)
		{
		}

		[Token(Token = "0x6000B63")]
		[Address(RVA = "0x16DD318", Offset = "0x16DD318", VA = "0x16DD318")]
		public static LuaValue @byte(LuaValue[] values)
		{
			return null;
		}

		[Token(Token = "0x6000B64")]
		[Address(RVA = "0x16DD5A0", Offset = "0x16DD5A0", VA = "0x16DD5A0")]
		public static LuaValue @char(LuaValue[] values)
		{
			return null;
		}

		[Token(Token = "0x6000B65")]
		[Address(RVA = "0x16DD6EC", Offset = "0x16DD6EC", VA = "0x16DD6EC")]
		public static LuaValue format(LuaValue[] values)
		{
			return null;
		}

		[Token(Token = "0x6000B66")]
		[Address(RVA = "0x16DD88C", Offset = "0x16DD88C", VA = "0x16DD88C")]
		public static LuaValue sub(LuaValue[] values)
		{
			return null;
		}

		[Token(Token = "0x6000B67")]
		[Address(RVA = "0x16DDA94", Offset = "0x16DDA94", VA = "0x16DDA94")]
		public static LuaValue rep(LuaValue[] values)
		{
			return null;
		}

		[Token(Token = "0x6000B68")]
		[Address(RVA = "0x16DDC24", Offset = "0x16DDC24", VA = "0x16DDC24")]
		public static LuaValue reverse(LuaValue[] values)
		{
			return null;
		}

		[Token(Token = "0x6000B69")]
		[Address(RVA = "0x16DDD0C", Offset = "0x16DDD0C", VA = "0x16DDD0C")]
		public static LuaValue len(LuaValue[] values)
		{
			return null;
		}

		[Token(Token = "0x6000B6A")]
		[Address(RVA = "0x16DDDE0", Offset = "0x16DDDE0", VA = "0x16DDDE0")]
		public static LuaValue lower(LuaValue[] values)
		{
			return null;
		}

		[Token(Token = "0x6000B6B")]
		[Address(RVA = "0x16DDEAC", Offset = "0x16DDEAC", VA = "0x16DDEAC")]
		public static LuaValue upper(LuaValue[] values)
		{
			return null;
		}

		[Token(Token = "0x6000B6C")]
		[Address(RVA = "0x16DDF78", Offset = "0x16DDF78", VA = "0x16DDF78")]
		public static LuaValue find(LuaValue[] values)
		{
			return null;
		}
	}
	[Token(Token = "0x2000150")]
	public static class TableLib
	{
		[Token(Token = "0x6000B6D")]
		[Address(RVA = "0x16DE2A4", Offset = "0x16DE2A4", VA = "0x16DE2A4")]
		public static void RegisterModule(LuaTable enviroment)
		{
		}

		[Token(Token = "0x6000B6E")]
		[Address(RVA = "0x16DE320", Offset = "0x16DE320", VA = "0x16DE320")]
		public static void RegisterFunctions(LuaTable module)
		{
		}

		[Token(Token = "0x6000B6F")]
		[Address(RVA = "0x16DE52C", Offset = "0x16DE52C", VA = "0x16DE52C")]
		public static LuaValue concat(LuaValue[] values)
		{
			return null;
		}

		[Token(Token = "0x6000B70")]
		[Address(RVA = "0x16DE86C", Offset = "0x16DE86C", VA = "0x16DE86C")]
		public static LuaValue insert(LuaValue[] values)
		{
			return null;
		}

		[Token(Token = "0x6000B71")]
		[Address(RVA = "0x16DEA7C", Offset = "0x16DEA7C", VA = "0x16DEA7C")]
		public static LuaValue remove(LuaValue[] values)
		{
			return null;
		}

		[Token(Token = "0x6000B72")]
		[Address(RVA = "0x16DEC2C", Offset = "0x16DEC2C", VA = "0x16DEC2C")]
		public static LuaValue removeitem(LuaValue[] values)
		{
			return null;
		}

		[Token(Token = "0x6000B73")]
		[Address(RVA = "0x16DED68", Offset = "0x16DED68", VA = "0x16DED68")]
		public static LuaValue maxn(LuaValue[] values)
		{
			return null;
		}

		[Token(Token = "0x6000B74")]
		[Address(RVA = "0x16DF0C0", Offset = "0x16DF0C0", VA = "0x16DF0C0")]
		public static LuaValue sort(LuaValue[] values)
		{
			return null;
		}

		[Token(Token = "0x6000B75")]
		[Address(RVA = "0x16DF384", Offset = "0x16DF384", VA = "0x16DF384")]
		public static LuaValue getn(LuaValue[] values)
		{
			return null;
		}

		[Token(Token = "0x6000B76")]
		[Address(RVA = "0x16DFAF0", Offset = "0x16DFAF0", VA = "0x16DFAF0")]
		public static LuaValue setn(LuaValue[] values)
		{
			return null;
		}
	}
}
namespace PixelCrushers
{
	[Token(Token = "0x2000151")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA07050", Offset = "0xA07050")]
	public class DataSynchronizer : MonoBehaviour, IMessageHandler
	{
		[Token(Token = "0x4000891")]
		public const string DataSourceValueChangedMessage = "Data Source Value Changed";

		[Token(Token = "0x4000892")]
		public const string RequestDataSourceChangeValueMessage = "Request Data Source Change Value";

		[Token(Token = "0x4000893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA15BCC", Offset = "0xA15BCC")]
		[SerializeField]
		private string m_dataSourceName;

		[Token(Token = "0x4000894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ObjectUnityEvent m_onRequestDataSourceChangeValue;

		[Token(Token = "0x170000DB")]
		public string dataSourceName
		{
			[Token(Token = "0x6000B77")]
			[Address(RVA = "0x1424358", Offset = "0x1424358", VA = "0x1424358")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B78")]
			[Address(RVA = "0x1424360", Offset = "0x1424360", VA = "0x1424360")]
			set
			{
			}
		}

		[Token(Token = "0x170000DC")]
		public ObjectUnityEvent onRequestDataSourceChangeValue
		{
			[Token(Token = "0x6000B79")]
			[Address(RVA = "0x1424368", Offset = "0x1424368", VA = "0x1424368")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B7A")]
			[Address(RVA = "0x1424370", Offset = "0x1424370", VA = "0x1424370")]
			set
			{
			}
		}

		[Token(Token = "0x6000B7B")]
		[Address(RVA = "0x1424378", Offset = "0x1424378", VA = "0x1424378", Slot = "5")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000B7C")]
		[Address(RVA = "0x14243F4", Offset = "0x14243F4", VA = "0x14243F4", Slot = "6")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000B7D")]
		[Address(RVA = "0x1424470", Offset = "0x1424470", VA = "0x1424470", Slot = "4")]
		public void OnMessage(MessageArgs messageArgs)
		{
		}

		[Token(Token = "0x6000B7E")]
		[Address(RVA = "0x14244E8", Offset = "0x14244E8", VA = "0x14244E8")]
		public void DataSourceValueChanged(object newValue)
		{
		}

		[Token(Token = "0x6000B7F")]
		[Address(RVA = "0x14245D0", Offset = "0x14245D0", VA = "0x14245D0")]
		public DataSynchronizer()
		{
		}
	}
	[Token(Token = "0x2000152")]
	public interface IMessageHandler
	{
		[Token(Token = "0x6000B80")]
		void OnMessage(MessageArgs messageArgs);
	}
	[Serializable]
	[Token(Token = "0x2000153")]
	public struct MessageArgs
	{
		[Token(Token = "0x4000895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public object sender;

		[Token(Token = "0x4000896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public object target;

		[Token(Token = "0x4000897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string message;

		[Token(Token = "0x4000898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string parameter;

		[Token(Token = "0x4000899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public object[] values;

		[Token(Token = "0x170000DD")]
		public bool hasTarget
		{
			[Token(Token = "0x6000B81")]
			[Address(RVA = "0xB8E800", Offset = "0xB8E800", VA = "0xB8E800")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000DE")]
		public bool isTargetString
		{
			[Token(Token = "0x6000B82")]
			[Address(RVA = "0xB8E808", Offset = "0xB8E808", VA = "0xB8E808")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000DF")]
		public string targetString
		{
			[Token(Token = "0x6000B83")]
			[Address(RVA = "0xB8E810", Offset = "0xB8E810", VA = "0xB8E810")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E0")]
		public object firstValue
		{
			[Token(Token = "0x6000B8F")]
			[Address(RVA = "0xB8E87C", Offset = "0xB8E87C", VA = "0xB8E87C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E1")]
		public int intValue
		{
			[Token(Token = "0x6000B90")]
			[Address(RVA = "0xB8E884", Offset = "0xB8E884", VA = "0xB8E884")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000B84")]
		[Address(RVA = "0xB8E818", Offset = "0xB8E818", VA = "0xB8E818")]
		public MessageArgs(object sender, object target, string message, string parameter, [Optional] object[] values)
		{
		}

		[Token(Token = "0x6000B85")]
		[Address(RVA = "0xB8E828", Offset = "0xB8E828", VA = "0xB8E828")]
		public MessageArgs(object sender, string message, string parameter, [Optional] object[] values)
		{
		}

		[Token(Token = "0x6000B86")]
		[Address(RVA = "0xB8E838", Offset = "0xB8E838", VA = "0xB8E838")]
		public bool Matches(string message, string parameter)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B87")]
		[Address(RVA = "0xB8E840", Offset = "0xB8E840", VA = "0xB8E840")]
		public bool Matches(StringField message, StringField parameter)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B88")]
		[Address(RVA = "0xB8E848", Offset = "0xB8E848", VA = "0xB8E848")]
		public bool Matches(StringField message, string parameter)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B89")]
		[Address(RVA = "0xB8E850", Offset = "0xB8E850", VA = "0xB8E850")]
		public bool Matches(string message, StringField parameter)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B8A")]
		[Address(RVA = "0xB8E858", Offset = "0xB8E858", VA = "0xB8E858")]
		public bool IsRequiredSender(string requiredSender)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B8B")]
		[Address(RVA = "0xB8E860", Offset = "0xB8E860", VA = "0xB8E860")]
		public bool IsRequiredTarget(string requiredTarget)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B8C")]
		[Address(RVA = "0xB8E868", Offset = "0xB8E868", VA = "0xB8E868")]
		public string GetSenderString()
		{
			return null;
		}

		[Token(Token = "0x6000B8D")]
		[Address(RVA = "0xB8E870", Offset = "0xB8E870", VA = "0xB8E870")]
		public string GetTargetString()
		{
			return null;
		}

		[Token(Token = "0x6000B8E")]
		[Address(RVA = "0xB8E878", Offset = "0xB8E878", VA = "0xB8E878")]
		private string GetObjectString(object obj)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000154")]
	public class MessageArgsEvent : UnityEvent<MessageArgs>
	{
		[Token(Token = "0x6000B91")]
		[Address(RVA = "0x1172284", Offset = "0x1172284", VA = "0x1172284")]
		public MessageArgsEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000155")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA07088", Offset = "0xA07088")]
	public class MessageEvents : MonoBehaviour, IMessageHandler
	{
		[Serializable]
		[Token(Token = "0x2000547")]
		public class MessageEvent
		{
			[Token(Token = "0x4001C08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA24078", Offset = "0xA24078")]
			public GameObject requiredSender;

			[Token(Token = "0x4001C09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA240B0", Offset = "0xA240B0")]
			public GameObject requiredTarget;

			[Token(Token = "0x4001C0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA240E8", Offset = "0xA240E8")]
			public StringField message;

			[Token(Token = "0x4001C0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA24120", Offset = "0xA24120")]
			public StringField parameter;

			[Token(Token = "0x4001C0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public MessageArgsEvent onMessage;

			[Token(Token = "0x6002834")]
			[Address(RVA = "0x1172CD0", Offset = "0x1172CD0", VA = "0x1172CD0")]
			public MessageEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000548")]
		public class MessageToSend
		{
			[Token(Token = "0x4001C0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA24158", Offset = "0xA24158")]
			public GameObject target;

			[Token(Token = "0x4001C0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA24190", Offset = "0xA24190")]
			public StringField message;

			[Token(Token = "0x4001C0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA241C8", Offset = "0xA241C8")]
			public StringField parameter;

			[Token(Token = "0x6002835")]
			[Address(RVA = "0x1172D34", Offset = "0x1172D34", VA = "0x1172D34")]
			public MessageToSend()
			{
			}
		}

		[Token(Token = "0x400089A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MessageEvent[] m_messagesToListenFor;

		[Token(Token = "0x400089B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MessageToSend[] m_messagesToSend;

		[Token(Token = "0x170000E2")]
		public MessageEvent[] messagesToListenFor
		{
			[Token(Token = "0x6000B92")]
			[Address(RVA = "0x11722D4", Offset = "0x11722D4", VA = "0x11722D4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B93")]
			[Address(RVA = "0x11722DC", Offset = "0x11722DC", VA = "0x11722DC")]
			set
			{
			}
		}

		[Token(Token = "0x170000E3")]
		public MessageToSend[] messagesToSend
		{
			[Token(Token = "0x6000B94")]
			[Address(RVA = "0x11722E4", Offset = "0x11722E4", VA = "0x11722E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B95")]
			[Address(RVA = "0x11722EC", Offset = "0x11722EC", VA = "0x11722EC")]
			set
			{
			}
		}

		[Token(Token = "0x6000B96")]
		[Address(RVA = "0x11722F4", Offset = "0x11722F4", VA = "0x11722F4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000B97")]
		[Address(RVA = "0x1172480", Offset = "0x1172480", VA = "0x1172480")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000B98")]
		[Address(RVA = "0x117260C", Offset = "0x117260C", VA = "0x117260C", Slot = "4")]
		public void OnMessage(MessageArgs messageArgs)
		{
		}

		[Token(Token = "0x6000B99")]
		[Address(RVA = "0x1172734", Offset = "0x1172734", VA = "0x1172734")]
		private bool IsParticipantOk(GameObject requiredParticipant, object actualParticipant)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B9A")]
		[Address(RVA = "0x1172A88", Offset = "0x1172A88", VA = "0x1172A88")]
		public void SendToMessageSystem(int index)
		{
		}

		[Token(Token = "0x6000B9B")]
		[Address(RVA = "0x1172CC8", Offset = "0x1172CC8", VA = "0x1172CC8")]
		public MessageEvents()
		{
		}
	}
	[Token(Token = "0x2000156")]
	public static class MessageSystem
	{
		[Token(Token = "0x2000549")]
		public class ListenerInfo
		{
			[Token(Token = "0x4001C10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public IMessageHandler listener;

			[Token(Token = "0x4001C11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string message;

			[Token(Token = "0x4001C12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string parameter;

			[Token(Token = "0x4001C13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool removed;

			[Token(Token = "0x6002836")]
			[Address(RVA = "0x117611C", Offset = "0x117611C", VA = "0x117611C")]
			public ListenerInfo()
			{
			}

			[Token(Token = "0x6002837")]
			[Address(RVA = "0x1176124", Offset = "0x1176124", VA = "0x1176124")]
			public ListenerInfo(IMessageHandler listener, string message, string parameter)
			{
			}

			[Token(Token = "0x6002838")]
			[Address(RVA = "0x117370C", Offset = "0x117370C", VA = "0x117370C")]
			public void Assign(IMessageHandler listener, string message, string parameter)
			{
			}

			[Token(Token = "0x6002839")]
			[Address(RVA = "0x1173DF0", Offset = "0x1173DF0", VA = "0x1173DF0")]
			public void Clear()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200054A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D558", Offset = "0xA0D558")]
		private sealed class <>c
		{
			[Token(Token = "0x4001C14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001C15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<ListenerInfo> <>9__28_0;

			[Token(Token = "0x4001C16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Predicate<ListenerInfo> <>9__28_1;

			[Token(Token = "0x600283B")]
			[Address(RVA = "0x11760E4", Offset = "0x11760E4", VA = "0x11760E4")]
			public <>c()
			{
			}

			[Token(Token = "0x600283C")]
			[Address(RVA = "0x11760EC", Offset = "0x11760EC", VA = "0x11760EC")]
			internal bool <RemoveMarkedListenerInfo>b__28_0(ListenerInfo x)
			{
				return default(bool);
			}

			[Token(Token = "0x600283D")]
			[Address(RVA = "0x1176104", Offset = "0x1176104", VA = "0x1176104")]
			internal bool <RemoveMarkedListenerInfo>b__28_1(ListenerInfo x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400089C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<ListenerInfo> s_listenerInfo;

		[Token(Token = "0x400089D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Pool<ListenerInfo> s_listenerInfoPool;

		[Token(Token = "0x400089E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static HashSet<GameObject> s_sendersToLog;

		[Token(Token = "0x400089F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static HashSet<GameObject> s_listenersToLog;

		[Token(Token = "0x40008A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static bool s_sendInEditMode;

		[Token(Token = "0x40008A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private static bool s_debug;

		[Token(Token = "0x40008A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private static int s_sendMessageDepth;

		[Token(Token = "0x170000E4")]
		public static bool sendInEditMode
		{
			[Token(Token = "0x6000B9D")]
			[Address(RVA = "0x1172E68", Offset = "0x1172E68", VA = "0x1172E68")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B9E")]
			[Address(RVA = "0x1172ED0", Offset = "0x1172ED0", VA = "0x1172ED0")]
			set
			{
			}
		}

		[Token(Token = "0x170000E5")]
		public static bool debug
		{
			[Token(Token = "0x6000B9F")]
			[Address(RVA = "0x1172F40", Offset = "0x1172F40", VA = "0x1172F40")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000BA0")]
			[Address(RVA = "0x1172FE0", Offset = "0x1172FE0", VA = "0x1172FE0")]
			set
			{
			}
		}

		[Token(Token = "0x170000E6")]
		private static List<ListenerInfo> listenerInfo
		{
			[Token(Token = "0x6000BA1")]
			[Address(RVA = "0x1173050", Offset = "0x1173050", VA = "0x1173050")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E7")]
		private static Pool<ListenerInfo> listenerInfoPool
		{
			[Token(Token = "0x6000BA2")]
			[Address(RVA = "0x11730B8", Offset = "0x11730B8", VA = "0x11730B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E8")]
		private static int sendMessageDepth
		{
			[Token(Token = "0x6000BA3")]
			[Address(RVA = "0x1173120", Offset = "0x1173120", VA = "0x1173120")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000BA4")]
			[Address(RVA = "0x1173188", Offset = "0x1173188", VA = "0x1173188")]
			set
			{
			}
		}

		[Token(Token = "0x6000B9C")]
		[Address(RVA = "0x1172D3C", Offset = "0x1172D3C", VA = "0x1172D3C")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xA291E4", Offset = "0xA291E4")]
		private static void InitStaticVariables()
		{
		}

		[Token(Token = "0x6000BA5")]
		[Address(RVA = "0x11731F4", Offset = "0x11731F4", VA = "0x11731F4")]
		public static bool IsListenerRegistered(IMessageHandler listener, string message, string parameter)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BA6")]
		[Address(RVA = "0x11733AC", Offset = "0x11733AC", VA = "0x11733AC")]
		public static void AddListener(IMessageHandler listener, string message, string parameter)
		{
		}

		[Token(Token = "0x6000BA7")]
		[Address(RVA = "0x11723C0", Offset = "0x11723C0", VA = "0x11723C0")]
		public static void AddListener(IMessageHandler listener, StringField message, StringField parameter)
		{
		}

		[Token(Token = "0x6000BA8")]
		[Address(RVA = "0x117371C", Offset = "0x117371C", VA = "0x117371C")]
		public static void AddListener(IMessageHandler listener, StringField message, string parameter)
		{
		}

		[Token(Token = "0x6000BA9")]
		[Address(RVA = "0x11737CC", Offset = "0x11737CC", VA = "0x11737CC")]
		public static void AddListener(IMessageHandler listener, string message, StringField parameter)
		{
		}

		[Token(Token = "0x6000BAA")]
		[Address(RVA = "0x117387C", Offset = "0x117387C", VA = "0x117387C")]
		public static void RemoveListener(IMessageHandler listener, string message, string parameter)
		{
		}

		[Token(Token = "0x6000BAB")]
		[Address(RVA = "0x1173E00", Offset = "0x1173E00", VA = "0x1173E00")]
		private static void RemoveMarkedListenerInfo()
		{
		}

		[Token(Token = "0x6000BAC")]
		[Address(RVA = "0x117254C", Offset = "0x117254C", VA = "0x117254C")]
		public static void RemoveListener(IMessageHandler listener, StringField message, StringField parameter)
		{
		}

		[Token(Token = "0x6000BAD")]
		[Address(RVA = "0x1174148", Offset = "0x1174148", VA = "0x1174148")]
		public static void RemoveListener(IMessageHandler listener, StringField message, string parameter)
		{
		}

		[Token(Token = "0x6000BAE")]
		[Address(RVA = "0x11741F8", Offset = "0x11741F8", VA = "0x11741F8")]
		public static void RemoveListener(IMessageHandler listener, string message, StringField parameter)
		{
		}

		[Token(Token = "0x6000BAF")]
		[Address(RVA = "0x11742A8", Offset = "0x11742A8", VA = "0x11742A8")]
		public static void RemoveListener(IMessageHandler listener)
		{
		}

		[Token(Token = "0x6000BB0")]
		[Address(RVA = "0x1174328", Offset = "0x1174328", VA = "0x1174328")]
		public static void LogWhenSendingMessages(GameObject sender)
		{
		}

		[Token(Token = "0x6000BB1")]
		[Address(RVA = "0x11743EC", Offset = "0x11743EC", VA = "0x11743EC")]
		public static void StopLoggingWhenSendingMessages(GameObject sender)
		{
		}

		[Token(Token = "0x6000BB2")]
		[Address(RVA = "0x11744B0", Offset = "0x11744B0", VA = "0x11744B0")]
		public static void LogWhenReceivingMessages(GameObject listener)
		{
		}

		[Token(Token = "0x6000BB3")]
		[Address(RVA = "0x1174574", Offset = "0x1174574", VA = "0x1174574")]
		public static void StopLoggingWhenReceivingMessages(GameObject listener)
		{
		}

		[Token(Token = "0x6000BB4")]
		[Address(RVA = "0x1174638", Offset = "0x1174638", VA = "0x1174638")]
		private static bool ShouldLogSender(object sender)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BB5")]
		[Address(RVA = "0x117484C", Offset = "0x117484C", VA = "0x117484C")]
		private static bool ShouldLogReceiver(IMessageHandler receiver)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BB6")]
		[Address(RVA = "0x11749C4", Offset = "0x11749C4", VA = "0x11749C4")]
		public static void SendMessageWithTarget(object sender, object target, string message, string parameter, params object[] values)
		{
		}

		[Token(Token = "0x6000BB7")]
		[Address(RVA = "0x117587C", Offset = "0x117587C", VA = "0x117587C")]
		public static void SendMessageWithTarget(object sender, object target, StringField message, string parameter, params object[] values)
		{
		}

		[Token(Token = "0x6000BB8")]
		[Address(RVA = "0x1172BF0", Offset = "0x1172BF0", VA = "0x1172BF0")]
		public static void SendMessageWithTarget(object sender, object target, StringField message, StringField parameter, params object[] values)
		{
		}

		[Token(Token = "0x6000BB9")]
		[Address(RVA = "0x1175944", Offset = "0x1175944", VA = "0x1175944")]
		public static void SendMessageWithTarget(object sender, object target, string message, StringField parameter, params object[] values)
		{
		}

		[Token(Token = "0x6000BBA")]
		[Address(RVA = "0x1175A0C", Offset = "0x1175A0C", VA = "0x1175A0C")]
		public static void SendMessage(object sender, string message, string parameter, params object[] values)
		{
		}

		[Token(Token = "0x6000BBB")]
		[Address(RVA = "0x1175A9C", Offset = "0x1175A9C", VA = "0x1175A9C")]
		public static void SendMessage(object sender, StringField message, StringField parameter, params object[] values)
		{
		}

		[Token(Token = "0x6000BBC")]
		[Address(RVA = "0x1175B5C", Offset = "0x1175B5C", VA = "0x1175B5C")]
		public static void SendMessage(object sender, StringField message, string parameter, params object[] values)
		{
		}

		[Token(Token = "0x6000BBD")]
		[Address(RVA = "0x1175C08", Offset = "0x1175C08", VA = "0x1175C08")]
		public static void SendMessage(object sender, string message, StringField parameter, params object[] values)
		{
		}

		[Token(Token = "0x6000BBE")]
		[Address(RVA = "0x1175CB4", Offset = "0x1175CB4", VA = "0x1175CB4")]
		public static void SendCompositeMessage(object sender, string message)
		{
		}
	}
	[Token(Token = "0x2000157")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA070C0", Offset = "0xA070C0")]
	public class MessageSystemLogger : MonoBehaviour
	{
		[Token(Token = "0x40008A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA15C48", Offset = "0xA15C48")]
		public bool logWhenSendingMessages;

		[Token(Token = "0x40008A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA15C80", Offset = "0xA15C80")]
		public bool logWhenReceivingMessages;

		[Token(Token = "0x6000BC0")]
		[Address(RVA = "0x1176168", Offset = "0x1176168", VA = "0x1176168")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000BC1")]
		[Address(RVA = "0x1176354", Offset = "0x1176354", VA = "0x1176354")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000BC2")]
		[Address(RVA = "0x1176424", Offset = "0x1176424", VA = "0x1176424")]
		public MessageSystemLogger()
		{
		}
	}
	[Token(Token = "0x2000158")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA070F8", Offset = "0xA070F8")]
	public class AlwaysFaceCamera : MonoBehaviour
	{
		[Token(Token = "0x40008A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA15CB8", Offset = "0xA15CB8")]
		[SerializeField]
		private bool m_yAxisOnly;

		[Token(Token = "0x40008A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA15D04", Offset = "0xA15D04")]
		[SerializeField]
		private bool m_rotate180;

		[Token(Token = "0x40008A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Camera m_mainCamera;

		[Token(Token = "0x170000E9")]
		public bool yAxisOnly
		{
			[Token(Token = "0x6000BC3")]
			[Address(RVA = "0x1422220", Offset = "0x1422220", VA = "0x1422220")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000BC4")]
			[Address(RVA = "0x1422228", Offset = "0x1422228", VA = "0x1422228")]
			set
			{
			}
		}

		[Token(Token = "0x170000EA")]
		public bool rotate180
		{
			[Token(Token = "0x6000BC5")]
			[Address(RVA = "0x1422234", Offset = "0x1422234", VA = "0x1422234")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000BC6")]
			[Address(RVA = "0x142223C", Offset = "0x142223C", VA = "0x142223C")]
			set
			{
			}
		}

		[Token(Token = "0x6000BC7")]
		[Address(RVA = "0x1422248", Offset = "0x1422248", VA = "0x1422248")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BC8")]
		[Address(RVA = "0x142260C", Offset = "0x142260C", VA = "0x142260C")]
		public AlwaysFaceCamera()
		{
		}
	}
	[Token(Token = "0x2000159")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA07130", Offset = "0xA07130")]
	public class CheckPhysics2D : MonoBehaviour
	{
		[Token(Token = "0x40008A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent usePhysics2DDefined;

		[Token(Token = "0x40008A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent usePhysics2DUndefined;

		[Token(Token = "0x6000BC9")]
		[Address(RVA = "0x1423AE8", Offset = "0x1423AE8", VA = "0x1423AE8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BCA")]
		[Address(RVA = "0x1423B04", Offset = "0x1423B04", VA = "0x1423B04")]
		public CheckPhysics2D()
		{
		}
	}
	[Token(Token = "0x200015A")]
	public static class ComponentUtility
	{
		[Token(Token = "0x6000BCB")]
		[Address(RVA = "0x1423DA4", Offset = "0x1423DA4", VA = "0x1423DA4")]
		public static bool IsComponentEnabled(Component component)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BCC")]
		[Address(RVA = "0x1423F08", Offset = "0x1423F08", VA = "0x1423F08")]
		public static void SetComponentEnabled(Component component, bool value)
		{
		}
	}
	[Token(Token = "0x200015B")]
	public static class CursorControl
	{
		[Token(Token = "0x40008AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static CursorLockMode previousLockMode;

		[Token(Token = "0x170000EB")]
		public static bool isCursorActive
		{
			[Token(Token = "0x6000BCD")]
			[Address(RVA = "0x14240F8", Offset = "0x14240F8", VA = "0x14240F8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000EC")]
		public static bool isCursorVisible
		{
			[Token(Token = "0x6000BCF")]
			[Address(RVA = "0x1424190", Offset = "0x1424190", VA = "0x1424190")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000ED")]
		public static bool isCursorLocked
		{
			[Token(Token = "0x6000BD0")]
			[Address(RVA = "0x1424198", Offset = "0x1424198", VA = "0x1424198")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000BCE")]
		[Address(RVA = "0x14241B8", Offset = "0x14241B8", VA = "0x14241B8")]
		public static void SetCursorActive(bool value)
		{
		}

		[Token(Token = "0x6000BD1")]
		[Address(RVA = "0x142422C", Offset = "0x142422C", VA = "0x142422C")]
		public static void ShowCursor(bool value)
		{
		}

		[Token(Token = "0x6000BD2")]
		[Address(RVA = "0x1424238", Offset = "0x1424238", VA = "0x1424238")]
		public static void LockCursor(bool value)
		{
		}
	}
	[Token(Token = "0x200015C")]
	public static class DictionaryExtensions
	{
		[Token(Token = "0x200054B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D568", Offset = "0xA0D568")]
		private sealed class <>c__DisplayClass0_0<TKey, TValue>
		{
			[Token(Token = "0x4001C17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Predicate<TKey> match;

			[Token(Token = "0x600283E")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x600283F")]
			internal bool <RemoveAll>b__0(TKey k)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000BD4")]
		public static int RemoveAll<TKey, TValue>(this IDictionary<TKey, TValue> dictionary, Predicate<TKey> match)
		{
			return default(int);
		}
	}
	[Token(Token = "0x200015D")]
	public enum Dimension
	{
		[Token(Token = "0x40008AC")]
		Is2D,
		[Token(Token = "0x40008AD")]
		Is3D
	}
	[Token(Token = "0x200015E")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA07178", Offset = "0xA07178")]
	public class DontDestroyGameObject : MonoBehaviour
	{
		[Token(Token = "0x6000BD5")]
		[Address(RVA = "0x116A438", Offset = "0x116A438", VA = "0x116A438")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BD6")]
		[Address(RVA = "0x116A4D4", Offset = "0x116A4D4", VA = "0x116A4D4")]
		public DontDestroyGameObject()
		{
		}
	}
	[Token(Token = "0x200015F")]
	public static class GameObjectUtility
	{
		[Token(Token = "0x6000BD7")]
		[Address(RVA = "0x116A808", Offset = "0x116A808", VA = "0x116A808")]
		public static bool IsPrefab(GameObject go)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BD8")]
		[Address(RVA = "0x116A9CC", Offset = "0x116A9CC", VA = "0x116A9CC")]
		public static GameObject GameObjectHardFind(string goName)
		{
			return null;
		}

		[Token(Token = "0x6000BD9")]
		[Address(RVA = "0x116AED0", Offset = "0x116AED0", VA = "0x116AED0")]
		public static GameObject GameObjectHardFind(string goName, string tag)
		{
			return null;
		}

		[Token(Token = "0x6000BDA")]
		[Address(RVA = "0x116AB54", Offset = "0x116AB54", VA = "0x116AB54")]
		private static GameObject GameObjectSearchHierarchy(Transform t, string goName, string tag)
		{
			return null;
		}

		[Token(Token = "0x6000BDB")]
		public static T GetComponentAnywhere<T>(GameObject gameObject) where T : Component
		{
			return null;
		}

		[Token(Token = "0x6000BDC")]
		[Address(RVA = "0x116B070", Offset = "0x116B070", VA = "0x116B070")]
		public static float GetGameObjectHeight(GameObject gameObject)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000160")]
	public enum GameTimeMode
	{
		[Token(Token = "0x40008AF")]
		UnityStandard,
		[Token(Token = "0x40008B0")]
		Realtime,
		[Token(Token = "0x40008B1")]
		Manual
	}
	[Token(Token = "0x2000161")]
	public static class GameTime
	{
		[Token(Token = "0x40008B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static GameTimeMode s_mode;

		[Token(Token = "0x40008B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static float s_manualTime;

		[Token(Token = "0x40008B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static float s_manualDeltaTime;

		[Token(Token = "0x40008B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static bool s_manualPaused;

		[Token(Token = "0x170000EE")]
		public static GameTimeMode mode
		{
			[Token(Token = "0x6000BDE")]
			[Address(RVA = "0x116B308", Offset = "0x116B308", VA = "0x116B308")]
			get
			{
				return default(GameTimeMode);
			}
			[Token(Token = "0x6000BDF")]
			[Address(RVA = "0x116B370", Offset = "0x116B370", VA = "0x116B370")]
			set
			{
			}
		}

		[Token(Token = "0x170000EF")]
		public static float time
		{
			[Token(Token = "0x6000BE0")]
			[Address(RVA = "0x116B3DC", Offset = "0x116B3DC", VA = "0x116B3DC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BE1")]
			[Address(RVA = "0x116B4D0", Offset = "0x116B4D0", VA = "0x116B4D0")]
			set
			{
			}
		}

		[Token(Token = "0x170000F0")]
		public static float deltaTime
		{
			[Token(Token = "0x6000BE2")]
			[Address(RVA = "0x116B544", Offset = "0x116B544", VA = "0x116B544")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BE3")]
			[Address(RVA = "0x116B620", Offset = "0x116B620", VA = "0x116B620")]
			set
			{
			}
		}

		[Token(Token = "0x170000F1")]
		public static float timeScale
		{
			[Token(Token = "0x6000BE4")]
			[Address(RVA = "0x116B694", Offset = "0x116B694", VA = "0x116B694")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000F2")]
		public static bool isPaused
		{
			[Token(Token = "0x6000BE5")]
			[Address(RVA = "0x116B69C", Offset = "0x116B69C", VA = "0x116B69C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000BE6")]
			[Address(RVA = "0x116B7D0", Offset = "0x116B7D0", VA = "0x116B7D0")]
			set
			{
			}
		}

		[Token(Token = "0x6000BDD")]
		[Address(RVA = "0x116B280", Offset = "0x116B280", VA = "0x116B280")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xA29208", Offset = "0xA29208")]
		private static void InitStaticVariables()
		{
		}
	}
	[Token(Token = "0x2000162")]
	public enum HelpBoxMessageType
	{
		[Token(Token = "0x40008B7")]
		None,
		[Token(Token = "0x40008B8")]
		Info,
		[Token(Token = "0x40008B9")]
		Warning,
		[Token(Token = "0x40008BA")]
		Error
	}
	[Token(Token = "0x2000163")]
	public class HelpBoxAttribute : PropertyAttribute
	{
		[Token(Token = "0x40008BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string text;

		[Token(Token = "0x40008BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HelpBoxMessageType messageType;

		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0x116C16C", Offset = "0x116C16C", VA = "0x116C16C")]
		public HelpBoxAttribute(string text, HelpBoxMessageType messageType = HelpBoxMessageType.None)
		{
		}
	}
	[Token(Token = "0x2000164")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA071B0", Offset = "0xA071B0")]
	public class InstantiatePrefabs : MonoBehaviour
	{
		[Token(Token = "0x200054C")]
		public enum Position
		{
			[Token(Token = "0x4001C19")]
			ScreenSpaceUI,
			[Token(Token = "0x4001C1A")]
			OriginalPosition,
			[Token(Token = "0x4001C1B")]
			ParentPosition
		}

		[Token(Token = "0x40008BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA15D50", Offset = "0xA15D50")]
		[SerializeField]
		private Transform m_parent;

		[Token(Token = "0x40008BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA15D9C", Offset = "0xA15D9C")]
		[SerializeField]
		private GameObject[] m_prefabs;

		[Token(Token = "0x40008BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA15DE8", Offset = "0xA15DE8")]
		[SerializeField]
		private Position m_position;

		[Token(Token = "0x6000BE9")]
		[Address(RVA = "0x116F900", Offset = "0x116F900", VA = "0x116F900")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0x116FBE8", Offset = "0x116FBE8", VA = "0x116FBE8")]
		public InstantiatePrefabs()
		{
		}
	}
	[Token(Token = "0x2000165")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA071E8", Offset = "0xA071E8")]
	public class LODManager : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200054D")]
		public class LOD
		{
			[Token(Token = "0x4001C1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA24200", Offset = "0xA24200")]
			[SerializeField]
			private float m_minDistance;

			[Token(Token = "0x4001C1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA2424C", Offset = "0xA2424C")]
			[SerializeField]
			private float m_maxDistance;

			[Token(Token = "0x170004DA")]
			public float minDistance
			{
				[Token(Token = "0x6002840")]
				[Address(RVA = "0x117072C", Offset = "0x117072C", VA = "0x117072C")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6002841")]
				[Address(RVA = "0x1170734", Offset = "0x1170734", VA = "0x1170734")]
				set
				{
				}
			}

			[Token(Token = "0x170004DB")]
			public float maxDistance
			{
				[Token(Token = "0x6002842")]
				[Address(RVA = "0x117073C", Offset = "0x117073C", VA = "0x117073C")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6002843")]
				[Address(RVA = "0x1170744", Offset = "0x1170744", VA = "0x1170744")]
				set
				{
				}
			}

			[Token(Token = "0x6002844")]
			[Address(RVA = "0x1170460", Offset = "0x1170460", VA = "0x1170460")]
			public bool Contains(float distance)
			{
				return default(bool);
			}

			[Token(Token = "0x6002845")]
			[Address(RVA = "0x117074C", Offset = "0x117074C", VA = "0x117074C")]
			public LOD()
			{
			}
		}

		[Token(Token = "0x200054E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D578", Offset = "0xA0D578")]
		private sealed class <MonitorLOD>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LODManager <>4__this;

			[Token(Token = "0x170004DC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002849")]
				[Address(RVA = "0x11706BC", Offset = "0x11706BC", VA = "0x11706BC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004DD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600284B")]
				[Address(RVA = "0x1170724", Offset = "0x1170724", VA = "0x1170724", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002846")]
			[Address(RVA = "0x1170230", Offset = "0x1170230", VA = "0x1170230")]
			[DebuggerHidden]
			public <MonitorLOD>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6002847")]
			[Address(RVA = "0x1170588", Offset = "0x1170588", VA = "0x1170588", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002848")]
			[Address(RVA = "0x117058C", Offset = "0x117058C", VA = "0x117058C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600284A")]
			[Address(RVA = "0x11706C4", Offset = "0x11706C4", VA = "0x11706C4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40008C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA15E34", Offset = "0xA15E34")]
		[SerializeField]
		private LOD[] m_levels;

		[Token(Token = "0x40008C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA15E80", Offset = "0xA15E80")]
		[SerializeField]
		private float m_monitorFrequency;

		[Token(Token = "0x40008C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA15ECC", Offset = "0xA15ECC")]
		private Transform <player>k__BackingField;

		[Token(Token = "0x40008C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int m_currentLevel;

		[Token(Token = "0x40008C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private WaitForSeconds m_currentWaitForSeconds;

		[Token(Token = "0x40008C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float m_currentWaitForSecondsValue;

		[Token(Token = "0x170000F3")]
		public LOD[] levels
		{
			[Token(Token = "0x6000BEB")]
			[Address(RVA = "0x11700A8", Offset = "0x11700A8", VA = "0x11700A8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BEC")]
			[Address(RVA = "0x11700B0", Offset = "0x11700B0", VA = "0x11700B0")]
			set
			{
			}
		}

		[Token(Token = "0x170000F4")]
		public float monitorFrequency
		{
			[Token(Token = "0x6000BED")]
			[Address(RVA = "0x11700B8", Offset = "0x11700B8", VA = "0x11700B8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BEE")]
			[Address(RVA = "0x11700C0", Offset = "0x11700C0", VA = "0x11700C0")]
			set
			{
			}
		}

		[Token(Token = "0x170000F5")]
		public Transform player
		{
			[Token(Token = "0x6000BEF")]
			[Address(RVA = "0x11700C8", Offset = "0x11700C8", VA = "0x11700C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2921C", Offset = "0xA2921C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BF0")]
			[Address(RVA = "0x11700D0", Offset = "0x11700D0", VA = "0x11700D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2922C", Offset = "0xA2922C")]
			set
			{
			}
		}

		[Token(Token = "0x6000BF1")]
		[Address(RVA = "0x11700D8", Offset = "0x11700D8", VA = "0x11700D8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BF2")]
		[Address(RVA = "0x117010C", Offset = "0x117010C", VA = "0x117010C")]
		public void FindPlayer()
		{
		}

		[Token(Token = "0x6000BF3")]
		[Address(RVA = "0x11701C0", Offset = "0x11701C0", VA = "0x11701C0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA2923C", Offset = "0xA2923C")]
		private IEnumerator MonitorLOD()
		{
			return null;
		}

		[Token(Token = "0x6000BF4")]
		[Address(RVA = "0x117025C", Offset = "0x117025C", VA = "0x117025C")]
		public void CheckLOD()
		{
		}

		[Token(Token = "0x6000BF5")]
		[Address(RVA = "0x1170484", Offset = "0x1170484", VA = "0x1170484")]
		public static List<string> ZonePluginActivator()
		{
			return null;
		}

		[Token(Token = "0x6000BF6")]
		[Address(RVA = "0x1170510", Offset = "0x1170510", VA = "0x1170510")]
		public LODManager()
		{
		}
	}
	[Token(Token = "0x2000166")]
	public static class ListExtensions
	{
		[Token(Token = "0x6000BF7")]
		public static void AddSorted<T>(this List<T> @this, T item) where T : IComparable<T>
		{
		}
	}
	[Token(Token = "0x2000167")]
	public static class MoreGizmos
	{
		[Token(Token = "0x6000BF8")]
		[Address(RVA = "0x13BBF1C", Offset = "0x13BBF1C", VA = "0x13BBF1C")]
		public static void DrawArrow(Vector3 from, Vector3 direction, float arrowheadLength = 0.2f, float arrowheadAngle = 30f)
		{
		}
	}
	[Token(Token = "0x2000168")]
	public static class MorePhysics2D
	{
		[Token(Token = "0x170000F6")]
		public static bool queriesStartInColliders
		{
			[Token(Token = "0x6000BF9")]
			[Address(RVA = "0x13BC264", Offset = "0x13BC264", VA = "0x13BC264")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000BFA")]
			[Address(RVA = "0x13BC26C", Offset = "0x13BC26C", VA = "0x13BC26C")]
			set
			{
			}
		}

		[Token(Token = "0x170000F7")]
		public static int maxRaycastResults
		{
			[Token(Token = "0x6000BFB")]
			[Address(RVA = "0x13BC270", Offset = "0x13BC270", VA = "0x13BC270")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000BFC")]
			[Address(RVA = "0x13BC278", Offset = "0x13BC278", VA = "0x13BC278")]
			set
			{
			}
		}

		[Token(Token = "0x6000BFD")]
		[Address(RVA = "0x13BC27C", Offset = "0x13BC27C", VA = "0x13BC27C")]
		public static GameObject Raycast2DWithoutSelf(Transform source, Transform destination, LayerMask layerMask)
		{
			return null;
		}

		[Token(Token = "0x6000BFE")]
		[Address(RVA = "0x13BC294", Offset = "0x13BC294", VA = "0x13BC294")]
		public static void LogUsePhysics2DWarning()
		{
		}
	}
	[Token(Token = "0x2000169")]
	public class Pool<T> where T : new()
	{
		[Token(Token = "0x40008C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<T> m_free;

		[Token(Token = "0x40008C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<T> m_used;

		[Token(Token = "0x6000BFF")]
		public T Get()
		{
			return (T)null;
		}

		[Token(Token = "0x6000C00")]
		public void Release(T item)
		{
		}

		[Token(Token = "0x6000C01")]
		public void Allocate(int initialSize)
		{
		}

		[Token(Token = "0x6000C02")]
		public void Trim(int max)
		{
		}

		[Token(Token = "0x6000C03")]
		public Pool()
		{
		}
	}
	[Token(Token = "0x200016A")]
	public static class RectExtensions
	{
		[Token(Token = "0x6000C04")]
		[Address(RVA = "0x13BDCCC", Offset = "0x13BDCCC", VA = "0x13BDCCC")]
		public static Vector2 TopLeft(this Rect rect)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000C05")]
		[Address(RVA = "0x13BDD2C", Offset = "0x13BDD2C", VA = "0x13BDD2C")]
		public static Rect ScaleSizeBy(this Rect rect, float scale)
		{
			return default(Rect);
		}

		[Token(Token = "0x6000C06")]
		[Address(RVA = "0x13BDDA4", Offset = "0x13BDDA4", VA = "0x13BDDA4")]
		public static Rect ScaleSizeBy(this Rect rect, float scale, Vector2 pivotPoint)
		{
			return default(Rect);
		}

		[Token(Token = "0x6000C07")]
		[Address(RVA = "0x13BDEC8", Offset = "0x13BDEC8", VA = "0x13BDEC8")]
		public static Rect ScaleSizeBy(this Rect rect, Vector2 scale)
		{
			return default(Rect);
		}

		[Token(Token = "0x6000C08")]
		[Address(RVA = "0x13BDF48", Offset = "0x13BDF48", VA = "0x13BDF48")]
		public static Rect ScaleSizeBy(this Rect rect, Vector2 scale, Vector2 pivotPoint)
		{
			return default(Rect);
		}
	}
	[Token(Token = "0x200016B")]
	public static class RuntimeTypeUtility
	{
		[Token(Token = "0x200054F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D588", Offset = "0xA0D588")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4001C21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string wrapperName;

			[Token(Token = "0x4001C22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Func<Type, bool> <>9__0;

			[Token(Token = "0x600284C")]
			[Address(RVA = "0x13BE59C", Offset = "0x13BE59C", VA = "0x13BE59C")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x600284D")]
			[Address(RVA = "0x13BE5A4", Offset = "0x13BE5A4", VA = "0x13BE5A4")]
			internal bool <GetWrapperType>b__0(Type assemblyType)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000C09")]
		[Address(RVA = "0x13BE070", Offset = "0x13BE070", VA = "0x13BE070")]
		public static Type GetTypeFromName(string typeName)
		{
			return null;
		}

		[Token(Token = "0x6000C0A")]
		[Address(RVA = "0x13BE20C", Offset = "0x13BE20C", VA = "0x13BE20C")]
		public static Assembly[] GetAssemblies()
		{
			return null;
		}

		[Token(Token = "0x6000C0B")]
		[Address(RVA = "0x13BE230", Offset = "0x13BE230", VA = "0x13BE230")]
		public static Type GetWrapperType(Type type)
		{
			return null;
		}
	}
	[Token(Token = "0x200016C")]
	public static class SafeConvert
	{
		[Token(Token = "0x40008C8")]
		private const string CommaTag = "%COMMA%";

		[Token(Token = "0x40008C9")]
		private const string DoubleQuoteTag = "%QUOTE%";

		[Token(Token = "0x40008CA")]
		private const string NewlineTag = "%NEWLINE%";

		[Token(Token = "0x6000C0C")]
		[Address(RVA = "0x13BE5E8", Offset = "0x13BE5E8", VA = "0x13BE5E8")]
		public static int ToInt(string s)
		{
			return default(int);
		}

		[Token(Token = "0x6000C0D")]
		[Address(RVA = "0x13BE61C", Offset = "0x13BE61C", VA = "0x13BE61C")]
		public static float ToFloat(string s)
		{
			return default(float);
		}

		[Token(Token = "0x6000C0E")]
		[Address(RVA = "0x13BE6B8", Offset = "0x13BE6B8", VA = "0x13BE6B8")]
		public static string ToSerializedElement(string s)
		{
			return null;
		}

		[Token(Token = "0x6000C0F")]
		[Address(RVA = "0x13BE7C4", Offset = "0x13BE7C4", VA = "0x13BE7C4")]
		public static string FromSerializedElement(string s)
		{
			return null;
		}
	}
	[Token(Token = "0x200016D")]
	public static class SceneNotifier
	{
		[Token(Token = "0x2000550")]
		public delegate void UnloadSceneDelegate(int sceneIndex);

		[Serializable]
		[Token(Token = "0x2000551")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D598", Offset = "0xA0D598")]
		private sealed class <>c
		{
			[Token(Token = "0x4001C23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x6002853")]
			[Address(RVA = "0x13C6880", Offset = "0x13C6880", VA = "0x13C6880")]
			public <>c()
			{
			}

			[Token(Token = "0x6002854")]
			[Address(RVA = "0x13C6888", Offset = "0x13C6888", VA = "0x13C6888")]
			internal void <.cctor>b__5_0(int <p0>)
			{
			}
		}

		[Token(Token = "0x14000001")]
		public static event UnloadSceneDelegate willUnloadScene
		{
			[Token(Token = "0x6000C10")]
			[Address(RVA = "0x13C6330", Offset = "0x13C6330", VA = "0x13C6330")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA29300", Offset = "0xA29300")]
			add
			{
			}
			[Token(Token = "0x6000C11")]
			[Address(RVA = "0x13C641C", Offset = "0x13C641C", VA = "0x13C641C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA29310", Offset = "0xA29310")]
			remove
			{
			}
		}

		[Token(Token = "0x6000C12")]
		[Address(RVA = "0x13C26CC", Offset = "0x13C26CC", VA = "0x13C26CC")]
		public static void NotifyWillUnloadScene(int sceneIndex)
		{
		}
	}
	[Token(Token = "0x200016E")]
	public static class ScriptableObjectUtility
	{
		[Token(Token = "0x6000C14")]
		public static T CreateScriptableObject<T>() where T : ScriptableObject
		{
			return null;
		}

		[Token(Token = "0x6000C15")]
		[Address(RVA = "0x13C6CFC", Offset = "0x13C6CFC", VA = "0x13C6CFC")]
		public static ScriptableObject CreateScriptableObject(Type type)
		{
			return null;
		}

		[Token(Token = "0x6000C16")]
		[Address(RVA = "0x13C6D28", Offset = "0x13C6D28", VA = "0x13C6D28")]
		public static void InitializeScriptableObject(ScriptableObject scriptableObject)
		{
		}

		[Token(Token = "0x6000C17")]
		public static List<T> CloneList<T>(List<T> original) where T : ScriptableObject
		{
			return null;
		}
	}
	[Token(Token = "0x200016F")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA07240", Offset = "0xA07240")]
	public class AutoSaveLoad : MonoBehaviour
	{
		[Token(Token = "0x40008CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA15EEC", Offset = "0xA15EEC")]
		public int saveSlotNumber;

		[Token(Token = "0x40008CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA15F24", Offset = "0xA15F24")]
		public int[] dontSaveInScenes;

		[Token(Token = "0x40008CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA15F5C", Offset = "0xA15F5C")]
		public bool loadOnStart;

		[Token(Token = "0x40008CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA15F94", Offset = "0xA15F94")]
		public bool saveOnQuit;

		[Token(Token = "0x40008D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA15FCC", Offset = "0xA15FCC")]
		public bool saveOnPause;

		[Token(Token = "0x40008D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA16004", Offset = "0xA16004")]
		public bool saveOnLoseFocus;

		[Token(Token = "0x6000C18")]
		[Address(RVA = "0x1423164", Offset = "0x1423164", VA = "0x1423164")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C19")]
		[Address(RVA = "0x142321C", Offset = "0x142321C", VA = "0x142321C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C1A")]
		[Address(RVA = "0x14232D0", Offset = "0x14232D0", VA = "0x14232D0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000C1B")]
		[Address(RVA = "0x142334C", Offset = "0x142334C", VA = "0x142334C")]
		private bool OnWantsToQuit()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C1C")]
		[Address(RVA = "0x1423364", Offset = "0x1423364", VA = "0x1423364")]
		private void CheckSaveOnQuit()
		{
		}

		[Token(Token = "0x6000C1D")]
		[Address(RVA = "0x14234C0", Offset = "0x14234C0", VA = "0x14234C0")]
		private void OnApplicationPause(bool paused)
		{
		}

		[Token(Token = "0x6000C1E")]
		[Address(RVA = "0x1423570", Offset = "0x1423570", VA = "0x1423570")]
		private void OnApplicationFocus(bool focusStatus)
		{
		}

		[Token(Token = "0x6000C1F")]
		[Address(RVA = "0x1423400", Offset = "0x1423400", VA = "0x1423400")]
		private bool CanSaveInThisScene()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C20")]
		[Address(RVA = "0x1423620", Offset = "0x1423620", VA = "0x1423620")]
		public void Restart(string startingSceneName)
		{
		}

		[Token(Token = "0x6000C21")]
		[Address(RVA = "0x14236A4", Offset = "0x14236A4", VA = "0x14236A4")]
		public AutoSaveLoad()
		{
		}
	}
	[Token(Token = "0x2000170")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA07278", Offset = "0xA07278")]
	public class SaveSystemEvents : MonoBehaviour
	{
		[Token(Token = "0x40008D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent onSaveStart;

		[Token(Token = "0x40008D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent onSaveEnd;

		[Token(Token = "0x40008D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent onLoadStart;

		[Token(Token = "0x40008D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent onLoadEnd;

		[Token(Token = "0x40008D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEvent onSaveDataApplied;

		[Token(Token = "0x40008D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEvent onSceneLoad;

		[Token(Token = "0x6000C22")]
		[Address(RVA = "0x13C4890", Offset = "0x13C4890", VA = "0x13C4890")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C23")]
		[Address(RVA = "0x13C4B9C", Offset = "0x13C4B9C", VA = "0x13C4B9C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000C24")]
		[Address(RVA = "0x13C4A28", Offset = "0x13C4A28", VA = "0x13C4A28")]
		private void RegisterEvents()
		{
		}

		[Token(Token = "0x6000C25")]
		[Address(RVA = "0x13C48B4", Offset = "0x13C48B4", VA = "0x13C48B4")]
		private void UnregisterEvents()
		{
		}

		[Token(Token = "0x6000C26")]
		[Address(RVA = "0x13C4BA0", Offset = "0x13C4BA0", VA = "0x13C4BA0")]
		private void OnSaveStarted()
		{
		}

		[Token(Token = "0x6000C27")]
		[Address(RVA = "0x13C4BBC", Offset = "0x13C4BBC", VA = "0x13C4BBC")]
		private void OnSaveEnded()
		{
		}

		[Token(Token = "0x6000C28")]
		[Address(RVA = "0x13C4BD8", Offset = "0x13C4BD8", VA = "0x13C4BD8")]
		private void OnLoadStarted()
		{
		}

		[Token(Token = "0x6000C29")]
		[Address(RVA = "0x13C4BF4", Offset = "0x13C4BF4", VA = "0x13C4BF4")]
		private void OnLoadEnded()
		{
		}

		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0x13C4C10", Offset = "0x13C4C10", VA = "0x13C4C10")]
		private void OnSaveDataApplied()
		{
		}

		[Token(Token = "0x6000C2B")]
		[Address(RVA = "0x13C4C2C", Offset = "0x13C4C2C", VA = "0x13C4C2C")]
		private void OnSceneLoaded(string sceneName, int sceneIndex)
		{
		}

		[Token(Token = "0x6000C2C")]
		[Address(RVA = "0x13C4C48", Offset = "0x13C4C48", VA = "0x13C4C48")]
		public SaveSystemEvents()
		{
		}
	}
	[Token(Token = "0x2000171")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA072B0", Offset = "0xA072B0")]
	public class SaveSystemMethods : MonoBehaviour
	{
		[Token(Token = "0x40008D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1603C", Offset = "0xA1603C")]
		public string defaultStartingSceneName;

		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0x13C4D30", Offset = "0x13C4D30", VA = "0x13C4D30")]
		public void SaveSlot(int slotNumber)
		{
		}

		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0x13C4D94", Offset = "0x13C4D94", VA = "0x13C4D94")]
		public void LoadFromSlot(int slotNumber)
		{
		}

		[Token(Token = "0x6000C2F")]
		[Address(RVA = "0x13C4DF8", Offset = "0x13C4DF8", VA = "0x13C4DF8")]
		public void LoadScene(string sceneNameAndSpawnpoint)
		{
		}

		[Token(Token = "0x6000C30")]
		[Address(RVA = "0x13C4E5C", Offset = "0x13C4E5C", VA = "0x13C4E5C")]
		public void RestartGame(string startingSceneName)
		{
		}

		[Token(Token = "0x6000C31")]
		[Address(RVA = "0x13C4EC0", Offset = "0x13C4EC0", VA = "0x13C4EC0")]
		public void LoadOrRestart(int slotNumber)
		{
		}

		[Token(Token = "0x6000C32")]
		[Address(RVA = "0x13C4F84", Offset = "0x13C4F84", VA = "0x13C4F84")]
		public void DeleteSavedGameInSlot(int slotNumber)
		{
		}

		[Token(Token = "0x6000C33")]
		[Address(RVA = "0x13C4FE8", Offset = "0x13C4FE8", VA = "0x13C4FE8")]
		public void RecordSavedGameData()
		{
		}

		[Token(Token = "0x6000C34")]
		[Address(RVA = "0x13C5044", Offset = "0x13C5044", VA = "0x13C5044")]
		public void ApplySavedGameData()
		{
		}

		[Token(Token = "0x6000C35")]
		[Address(RVA = "0x13C50A0", Offset = "0x13C50A0", VA = "0x13C50A0")]
		public void LoadAdditiveScene(string sceneName)
		{
		}

		[Token(Token = "0x6000C36")]
		[Address(RVA = "0x13C5104", Offset = "0x13C5104", VA = "0x13C5104")]
		public void UnloadAdditiveScene(string sceneName)
		{
		}

		[Token(Token = "0x6000C37")]
		[Address(RVA = "0x13C5168", Offset = "0x13C5168", VA = "0x13C5168")]
		public SaveSystemMethods()
		{
		}
	}
	[Token(Token = "0x2000172")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA072E8", Offset = "0xA072E8")]
	public class SaveSystemTestMenu : MonoBehaviour
	{
		[Token(Token = "0x40008D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA16074", Offset = "0xA16074")]
		public string menuInputButton;

		[Token(Token = "0x40008DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA160AC", Offset = "0xA160AC")]
		public GUISkin guiSkin;

		[Token(Token = "0x40008DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA160E4", Offset = "0xA160E4")]
		public Vector2 buttonSize;

		[Token(Token = "0x40008DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1611C", Offset = "0xA1611C")]
		public int saveSlot;

		[Token(Token = "0x40008DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA16154", Offset = "0xA16154")]
		public string instructions;

		[Token(Token = "0x40008DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1618C", Offset = "0xA1618C")]
		public float instructionsDuration;

		[Token(Token = "0x40008DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA161C4", Offset = "0xA161C4")]
		public bool pauseWhileOpen;

		[Token(Token = "0x40008E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA161FC", Offset = "0xA161FC")]
		public bool allowCursorWhileOpen;

		[Token(Token = "0x40008E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UnityEvent onShow;

		[Token(Token = "0x40008E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public UnityEvent onHide;

		[Token(Token = "0x40008E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_isVisible;

		[Token(Token = "0x40008E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float m_instructionsDoneTime;

		[Token(Token = "0x40008E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_prevCursorState;

		[Token(Token = "0x6000C38")]
		[Address(RVA = "0x13C5170", Offset = "0x13C5170", VA = "0x13C5170")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C39")]
		[Address(RVA = "0x13C51B4", Offset = "0x13C51B4", VA = "0x13C51B4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0x13C5238", Offset = "0x13C5238", VA = "0x13C5238")]
		public void ToggleMenu()
		{
		}

		[Token(Token = "0x6000C3B")]
		[Address(RVA = "0x13C52B8", Offset = "0x13C52B8", VA = "0x13C52B8")]
		private void HandleCursor(bool open)
		{
		}

		[Token(Token = "0x6000C3C")]
		[Address(RVA = "0x13C5388", Offset = "0x13C5388", VA = "0x13C5388")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6000C3D")]
		[Address(RVA = "0x13C5940", Offset = "0x13C5940", VA = "0x13C5940")]
		public SaveSystemTestMenu()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000173")]
	public class SavedGameData : ISerializationCallbackReceiver
	{
		[Serializable]
		[Token(Token = "0x2000552")]
		public class SaveRecord
		{
			[Token(Token = "0x4001C24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string key;

			[Token(Token = "0x4001C25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int sceneIndex;

			[Token(Token = "0x4001C26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string data;

			[Token(Token = "0x6002855")]
			[Address(RVA = "0x13C5E48", Offset = "0x13C5E48", VA = "0x13C5E48")]
			public SaveRecord()
			{
			}

			[Token(Token = "0x6002856")]
			[Address(RVA = "0x13C5C98", Offset = "0x13C5C98", VA = "0x13C5C98")]
			public SaveRecord(string key, int sceneIndex, string data)
			{
			}
		}

		[Token(Token = "0x2000553")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D5A8", Offset = "0xA0D5A8")]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x4001C27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int currentSceneIndex;

			[Token(Token = "0x6002857")]
			[Address(RVA = "0x13C5CDC", Offset = "0x13C5CDC", VA = "0x13C5CDC")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x6002858")]
			[Address(RVA = "0x13C5DD8", Offset = "0x13C5DD8", VA = "0x13C5DD8")]
			internal bool <DeleteObsoleteSaveData>b__0(KeyValuePair<string, SaveRecord> element)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000554")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D5B8", Offset = "0xA0D5B8")]
		private sealed class <>c
		{
			[Token(Token = "0x4001C28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001C29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<KeyValuePair<string, SaveRecord>, string> <>9__11_1;

			[Token(Token = "0x4001C2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<KeyValuePair<string, SaveRecord>, SaveRecord> <>9__11_2;

			[Token(Token = "0x600285A")]
			[Address(RVA = "0x13C5D48", Offset = "0x13C5D48", VA = "0x13C5D48")]
			public <>c()
			{
			}

			[Token(Token = "0x600285B")]
			[Address(RVA = "0x13C5D50", Offset = "0x13C5D50", VA = "0x13C5D50")]
			internal string <DeleteObsoleteSaveData>b__11_1(KeyValuePair<string, SaveRecord> element)
			{
				return null;
			}

			[Token(Token = "0x600285C")]
			[Address(RVA = "0x13C5D94", Offset = "0x13C5D94", VA = "0x13C5D94")]
			internal SaveRecord <DeleteObsoleteSaveData>b__11_2(KeyValuePair<string, SaveRecord> element)
			{
				return null;
			}
		}

		[Token(Token = "0x40008E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private string m_sceneName;

		[Token(Token = "0x40008E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<string, SaveRecord> m_dict;

		[Token(Token = "0x40008E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<SaveRecord> m_list;

		[Token(Token = "0x170000F8")]
		public string sceneName
		{
			[Token(Token = "0x6000C3E")]
			[Address(RVA = "0x13C5A20", Offset = "0x13C5A20", VA = "0x13C5A20")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C3F")]
			[Address(RVA = "0x13C5A28", Offset = "0x13C5A28", VA = "0x13C5A28")]
			set
			{
			}
		}

		[Token(Token = "0x6000C40")]
		[Address(RVA = "0x13C5A30", Offset = "0x13C5A30", VA = "0x13C5A30", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6000C41")]
		[Address(RVA = "0x13C5B5C", Offset = "0x13C5B5C", VA = "0x13C5B5C", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6000C42")]
		[Address(RVA = "0x13BC8E8", Offset = "0x13BC8E8", VA = "0x13BC8E8")]
		public string GetData(string key)
		{
			return null;
		}

		[Token(Token = "0x6000C43")]
		[Address(RVA = "0x13C2188", Offset = "0x13C2188", VA = "0x13C2188")]
		public void SetData(string key, int sceneIndex, string data)
		{
		}

		[Token(Token = "0x6000C44")]
		[Address(RVA = "0x13C2A74", Offset = "0x13C2A74", VA = "0x13C2A74")]
		public void DeleteObsoleteSaveData(int currentSceneIndex)
		{
		}

		[Token(Token = "0x6000C45")]
		[Address(RVA = "0x13BCE6C", Offset = "0x13BCE6C", VA = "0x13BCE6C")]
		public SavedGameData()
		{
		}
	}
	[Token(Token = "0x2000174")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA07320", Offset = "0xA07320")]
	public class ScenePortal : MonoBehaviour
	{
		[Token(Token = "0x40008E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA16254", Offset = "0xA16254")]
		[SerializeField]
		private string m_requiredTag;

		[Token(Token = "0x40008EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA162A0", Offset = "0xA162A0")]
		[SerializeField]
		private string m_destinationSceneName;

		[Token(Token = "0x40008EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA162EC", Offset = "0xA162EC")]
		[SerializeField]
		private string m_spawnpointNameInDestinationScene;

		[Token(Token = "0x40008EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_isLoadingScene;

		[Token(Token = "0x170000F9")]
		public string requiredTag
		{
			[Token(Token = "0x6000C46")]
			[Address(RVA = "0x13C6924", Offset = "0x13C6924", VA = "0x13C6924")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C47")]
			[Address(RVA = "0x13C692C", Offset = "0x13C692C", VA = "0x13C692C")]
			set
			{
			}
		}

		[Token(Token = "0x170000FA")]
		public string destinationSceneName
		{
			[Token(Token = "0x6000C48")]
			[Address(RVA = "0x13C6934", Offset = "0x13C6934", VA = "0x13C6934")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C49")]
			[Address(RVA = "0x13C693C", Offset = "0x13C693C", VA = "0x13C693C")]
			set
			{
			}
		}

		[Token(Token = "0x170000FB")]
		public string spawnpointNameInDestinationScene
		{
			[Token(Token = "0x6000C4A")]
			[Address(RVA = "0x13C6944", Offset = "0x13C6944", VA = "0x13C6944")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C4B")]
			[Address(RVA = "0x13C694C", Offset = "0x13C694C", VA = "0x13C694C")]
			set
			{
			}
		}

		[Token(Token = "0x170000FC")]
		public bool isLoadingScene
		{
			[Token(Token = "0x6000C4C")]
			[Address(RVA = "0x13C6954", Offset = "0x13C6954", VA = "0x13C6954")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C4D")]
			[Address(RVA = "0x13C695C", Offset = "0x13C695C", VA = "0x13C695C")]
			set
			{
			}
		}

		[Token(Token = "0x6000C4E")]
		[Address(RVA = "0x13C6968", Offset = "0x13C6968", VA = "0x13C6968", Slot = "4")]
		public virtual void UsePortal()
		{
		}

		[Token(Token = "0x6000C4F")]
		[Address(RVA = "0x13C6980", Offset = "0x13C6980", VA = "0x13C6980")]
		protected void LoadScene()
		{
		}

		[Token(Token = "0x6000C50")]
		[Address(RVA = "0x13C6A18", Offset = "0x13C6A18", VA = "0x13C6A18")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000C51")]
		[Address(RVA = "0x13C6A6C", Offset = "0x13C6A6C", VA = "0x13C6A6C")]
		public ScenePortal()
		{
		}
	}
	[Token(Token = "0x2000175")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA07358", Offset = "0xA07358")]
	public class SaveSystem : MonoBehaviour
	{
		[Token(Token = "0x2000555")]
		public delegate void SceneLoadedDelegate(string sceneName, int sceneIndex);

		[Token(Token = "0x2000556")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D5C8", Offset = "0xA0D5C8")]
		private sealed class <LoadSceneInternal>d__70 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string sceneName;

			[Token(Token = "0x170004DE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002864")]
				[Address(RVA = "0x13C4250", Offset = "0x13C4250", VA = "0x13C4250", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004DF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002866")]
				[Address(RVA = "0x13C42B8", Offset = "0x13C42B8", VA = "0x13C42B8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002861")]
			[Address(RVA = "0x13C0DA4", Offset = "0x13C0DA4", VA = "0x13C0DA4")]
			[DebuggerHidden]
			public <LoadSceneInternal>d__70(int <>1__state)
			{
			}

			[Token(Token = "0x6002862")]
			[Address(RVA = "0x13C4068", Offset = "0x13C4068", VA = "0x13C4068", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002863")]
			[Address(RVA = "0x13C406C", Offset = "0x13C406C", VA = "0x13C406C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002865")]
			[Address(RVA = "0x13C4258", Offset = "0x13C4258", VA = "0x13C4258", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000557")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D5D8", Offset = "0xA0D5D8")]
		private sealed class <LoadSceneInternalTransitionCoroutine>d__71 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string sceneName;

			[Token(Token = "0x170004E0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600286A")]
				[Address(RVA = "0x13C458C", Offset = "0x13C458C", VA = "0x13C458C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004E1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600286C")]
				[Address(RVA = "0x13C45F4", Offset = "0x13C45F4", VA = "0x13C45F4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002867")]
			[Address(RVA = "0x13C0E40", Offset = "0x13C0E40", VA = "0x13C0E40")]
			[DebuggerHidden]
			public <LoadSceneInternalTransitionCoroutine>d__71(int <>1__state)
			{
			}

			[Token(Token = "0x6002868")]
			[Address(RVA = "0x13C42C0", Offset = "0x13C42C0", VA = "0x13C42C0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002869")]
			[Address(RVA = "0x13C42C4", Offset = "0x13C42C4", VA = "0x13C42C4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600286B")]
			[Address(RVA = "0x13C4594", Offset = "0x13C4594", VA = "0x13C4594", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000558")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D5E8", Offset = "0xA0D5E8")]
		private sealed class <LoadAdditiveSceneInternal>d__72 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string sceneName;

			[Token(Token = "0x170004E2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002870")]
				[Address(RVA = "0x13C3A74", Offset = "0x13C3A74", VA = "0x13C3A74", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004E3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002872")]
				[Address(RVA = "0x13C3ADC", Offset = "0x13C3ADC", VA = "0x13C3ADC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600286D")]
			[Address(RVA = "0x13C0EDC", Offset = "0x13C0EDC", VA = "0x13C0EDC")]
			[DebuggerHidden]
			public <LoadAdditiveSceneInternal>d__72(int <>1__state)
			{
			}

			[Token(Token = "0x600286E")]
			[Address(RVA = "0x13C38D8", Offset = "0x13C38D8", VA = "0x13C38D8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600286F")]
			[Address(RVA = "0x13C38DC", Offset = "0x13C38DC", VA = "0x13C38DC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002871")]
			[Address(RVA = "0x13C3A7C", Offset = "0x13C3A7C", VA = "0x13C3A7C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000559")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D5F8", Offset = "0xA0D5F8")]
		private sealed class <SaveToSlotCoroutine>d__81 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int slotNumber;

			[Token(Token = "0x170004E4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002876")]
				[Address(RVA = "0x13C4778", Offset = "0x13C4778", VA = "0x13C4778", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004E5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002878")]
				[Address(RVA = "0x13C47E0", Offset = "0x13C47E0", VA = "0x13C47E0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002873")]
			[Address(RVA = "0x13C1928", Offset = "0x13C1928", VA = "0x13C1928")]
			[DebuggerHidden]
			public <SaveToSlotCoroutine>d__81(int <>1__state)
			{
			}

			[Token(Token = "0x6002874")]
			[Address(RVA = "0x13C45FC", Offset = "0x13C45FC", VA = "0x13C45FC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002875")]
			[Address(RVA = "0x13C4600", Offset = "0x13C4600", VA = "0x13C4600", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002877")]
			[Address(RVA = "0x13C4780", Offset = "0x13C4780", VA = "0x13C4780", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200055A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D608", Offset = "0xA0D608")]
		private sealed class <LoadFromSlotCoroutine>d__83 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int slotNumber;

			[Token(Token = "0x170004E6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600287C")]
				[Address(RVA = "0x13C3BF0", Offset = "0x13C3BF0", VA = "0x13C3BF0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004E7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600287E")]
				[Address(RVA = "0x13C3C58", Offset = "0x13C3C58", VA = "0x13C3C58", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002879")]
			[Address(RVA = "0x13C1A40", Offset = "0x13C1A40", VA = "0x13C1A40")]
			[DebuggerHidden]
			public <LoadFromSlotCoroutine>d__83(int <>1__state)
			{
			}

			[Token(Token = "0x600287A")]
			[Address(RVA = "0x13C3AE4", Offset = "0x13C3AE4", VA = "0x13C3AE4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600287B")]
			[Address(RVA = "0x13C3AE8", Offset = "0x13C3AE8", VA = "0x13C3AE8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600287D")]
			[Address(RVA = "0x13C3BF8", Offset = "0x13C3BF8", VA = "0x13C3BF8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200055B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D618", Offset = "0xA0D618")]
		private sealed class <LoadSceneCoroutine>d__97 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SavedGameData savedGameData;

			[Token(Token = "0x4001C3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string spawnpointName;

			[Token(Token = "0x4001C3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <i>5__2;

			[Token(Token = "0x170004E8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002882")]
				[Address(RVA = "0x13C3FF8", Offset = "0x13C3FF8", VA = "0x13C3FF8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004E9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002884")]
				[Address(RVA = "0x13C4060", Offset = "0x13C4060", VA = "0x13C4060", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600287F")]
			[Address(RVA = "0x13C27C0", Offset = "0x13C27C0", VA = "0x13C27C0")]
			[DebuggerHidden]
			public <LoadSceneCoroutine>d__97(int <>1__state)
			{
			}

			[Token(Token = "0x6002880")]
			[Address(RVA = "0x13C3C60", Offset = "0x13C3C60", VA = "0x13C3C60", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002881")]
			[Address(RVA = "0x13C3C64", Offset = "0x13C3C64", VA = "0x13C3C64", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002883")]
			[Address(RVA = "0x13C4000", Offset = "0x13C4000", VA = "0x13C4000", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200055C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D628", Offset = "0xA0D628")]
		private sealed class <>c
		{
			[Token(Token = "0x4001C3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x6002886")]
			[Address(RVA = "0x13C38B8", Offset = "0x13C38B8", VA = "0x13C38B8")]
			public <>c()
			{
			}

			[Token(Token = "0x6002887")]
			[Address(RVA = "0x13C38C0", Offset = "0x13C38C0", VA = "0x13C38C0")]
			internal void <.cctor>b__107_0(string <p0>, int <p1>)
			{
			}

			[Token(Token = "0x6002888")]
			[Address(RVA = "0x13C38C4", Offset = "0x13C38C4", VA = "0x13C38C4")]
			internal void <.cctor>b__107_1()
			{
			}

			[Token(Token = "0x6002889")]
			[Address(RVA = "0x13C38C8", Offset = "0x13C38C8", VA = "0x13C38C8")]
			internal void <.cctor>b__107_2()
			{
			}

			[Token(Token = "0x600288A")]
			[Address(RVA = "0x13C38CC", Offset = "0x13C38CC", VA = "0x13C38CC")]
			internal void <.cctor>b__107_3()
			{
			}

			[Token(Token = "0x600288B")]
			[Address(RVA = "0x13C38D0", Offset = "0x13C38D0", VA = "0x13C38D0")]
			internal void <.cctor>b__107_4()
			{
			}

			[Token(Token = "0x600288C")]
			[Address(RVA = "0x13C38D4", Offset = "0x13C38D4", VA = "0x13C38D4")]
			internal void <.cctor>b__107_5()
			{
			}
		}

		[Token(Token = "0x40008ED")]
		public const int NoSceneIndex = -1;

		[Token(Token = "0x40008EE")]
		public const string LastSavedGameSlotPlayerPrefsKey = "savedgame_lastSlotNum";

		[Token(Token = "0x40008EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA16338", Offset = "0xA16338")]
		[SerializeField]
		private bool m_saveCurrentScene;

		[Token(Token = "0x40008F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA16384", Offset = "0xA16384")]
		[SerializeField]
		private int m_framesToWaitBeforeApplyData;

		[Token(Token = "0x40008F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA163D0", Offset = "0xA163D0")]
		[SerializeField]
		private bool m_debug;

		[Token(Token = "0x40008F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static SaveSystem m_instance;

		[Token(Token = "0x40008F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<Saver> m_savers;

		[Token(Token = "0x40008F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static SavedGameData m_savedGameData;

		[Token(Token = "0x40008F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static DataSerializer m_serializer;

		[Token(Token = "0x40008F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static SavedGameDataStorer m_storer;

		[Token(Token = "0x40008F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static SceneTransitionManager m_sceneTransitionManager;

		[Token(Token = "0x40008F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static GameObject m_playerSpawnpoint;

		[Token(Token = "0x40008F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static int m_currentSceneIndex;

		[Token(Token = "0x40008FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static List<string> m_addedScenes;

		[Token(Token = "0x40008FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static AsyncOperation m_currentAsyncOperation;

		[Token(Token = "0x40008FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static bool m_isQuitting;

		[Token(Token = "0x170000FD")]
		public static bool saveCurrentScene
		{
			[Token(Token = "0x6000C53")]
			[Address(RVA = "0x13BE9F8", Offset = "0x13BE9F8", VA = "0x13BE9F8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C54")]
			[Address(RVA = "0x13BEAD8", Offset = "0x13BEAD8", VA = "0x13BEAD8")]
			set
			{
			}
		}

		[Token(Token = "0x170000FE")]
		public static int framesToWaitBeforeApplyData
		{
			[Token(Token = "0x6000C55")]
			[Address(RVA = "0x13BEBB8", Offset = "0x13BEBB8", VA = "0x13BEBB8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000C56")]
			[Address(RVA = "0x13BEC90", Offset = "0x13BEC90", VA = "0x13BEC90")]
			set
			{
			}
		}

		[Token(Token = "0x170000FF")]
		public static bool debug
		{
			[Token(Token = "0x6000C57")]
			[Address(RVA = "0x13BED6C", Offset = "0x13BED6C", VA = "0x13BED6C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C58")]
			[Address(RVA = "0x13BEE74", Offset = "0x13BEE74", VA = "0x13BEE74")]
			set
			{
			}
		}

		[Token(Token = "0x17000100")]
		public static SaveSystem instance
		{
			[Token(Token = "0x6000C59")]
			[Address(RVA = "0x13BEF54", Offset = "0x13BEF54", VA = "0x13BEF54")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000101")]
		public static DataSerializer serializer
		{
			[Token(Token = "0x6000C5A")]
			[Address(RVA = "0x13BF1C4", Offset = "0x13BF1C4", VA = "0x13BF1C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000102")]
		public static SavedGameDataStorer storer
		{
			[Token(Token = "0x6000C5B")]
			[Address(RVA = "0x13BF3E8", Offset = "0x13BF3E8", VA = "0x13BF3E8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000103")]
		public static SceneTransitionManager sceneTransitionManager
		{
			[Token(Token = "0x6000C5C")]
			[Address(RVA = "0x13BF60C", Offset = "0x13BF60C", VA = "0x13BF60C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000104")]
		public static AsyncOperation currentAsyncOperation
		{
			[Token(Token = "0x6000C5D")]
			[Address(RVA = "0x13BF714", Offset = "0x13BF714", VA = "0x13BF714")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C5E")]
			[Address(RVA = "0x13BF77C", Offset = "0x13BF77C", VA = "0x13BF77C")]
			set
			{
			}
		}

		[Token(Token = "0x17000105")]
		public static SavedGameData currentSavedGameData
		{
			[Token(Token = "0x6000C5F")]
			[Address(RVA = "0x13BF7E8", Offset = "0x13BF7E8", VA = "0x13BF7E8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000106")]
		public static GameObject playerSpawnpoint
		{
			[Token(Token = "0x6000C60")]
			[Address(RVA = "0x13BF850", Offset = "0x13BF850", VA = "0x13BF850")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C61")]
			[Address(RVA = "0x13BF8B8", Offset = "0x13BF8B8", VA = "0x13BF8B8")]
			set
			{
			}
		}

		[Token(Token = "0x17000107")]
		public static int currentSceneIndex
		{
			[Token(Token = "0x6000C62")]
			[Address(RVA = "0x13BF924", Offset = "0x13BF924", VA = "0x13BF924")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000002")]
		public static event SceneLoadedDelegate sceneLoaded
		{
			[Token(Token = "0x6000C63")]
			[Address(RVA = "0x13BFA5C", Offset = "0x13BFA5C", VA = "0x13BFA5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA29334", Offset = "0xA29334")]
			add
			{
			}
			[Token(Token = "0x6000C64")]
			[Address(RVA = "0x13BFB4C", Offset = "0x13BFB4C", VA = "0x13BFB4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA29344", Offset = "0xA29344")]
			remove
			{
			}
		}

		[Token(Token = "0x14000003")]
		public static event Action saveStarted
		{
			[Token(Token = "0x6000C65")]
			[Address(RVA = "0x13BFC3C", Offset = "0x13BFC3C", VA = "0x13BFC3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA29354", Offset = "0xA29354")]
			add
			{
			}
			[Token(Token = "0x6000C66")]
			[Address(RVA = "0x13BFD2C", Offset = "0x13BFD2C", VA = "0x13BFD2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA29364", Offset = "0xA29364")]
			remove
			{
			}
		}

		[Token(Token = "0x14000004")]
		public static event Action saveEnded
		{
			[Token(Token = "0x6000C67")]
			[Address(RVA = "0x13BFE1C", Offset = "0x13BFE1C", VA = "0x13BFE1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA29374", Offset = "0xA29374")]
			add
			{
			}
			[Token(Token = "0x6000C68")]
			[Address(RVA = "0x13BFF0C", Offset = "0x13BFF0C", VA = "0x13BFF0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA29384", Offset = "0xA29384")]
			remove
			{
			}
		}

		[Token(Token = "0x14000005")]
		public static event Action loadStarted
		{
			[Token(Token = "0x6000C69")]
			[Address(RVA = "0x13BFFFC", Offset = "0x13BFFFC", VA = "0x13BFFFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA29394", Offset = "0xA29394")]
			add
			{
			}
			[Token(Token = "0x6000C6A")]
			[Address(RVA = "0x13C00EC", Offset = "0x13C00EC", VA = "0x13C00EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA293A4", Offset = "0xA293A4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000006")]
		public static event Action loadEnded
		{
			[Token(Token = "0x6000C6B")]
			[Address(RVA = "0x13C01DC", Offset = "0x13C01DC", VA = "0x13C01DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA293B4", Offset = "0xA293B4")]
			add
			{
			}
			[Token(Token = "0x6000C6C")]
			[Address(RVA = "0x13C02CC", Offset = "0x13C02CC", VA = "0x13C02CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA293C4", Offset = "0xA293C4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000007")]
		public static event Action saveDataApplied
		{
			[Token(Token = "0x6000C6D")]
			[Address(RVA = "0x13C03BC", Offset = "0x13C03BC", VA = "0x13C03BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA293D4", Offset = "0xA293D4")]
			add
			{
			}
			[Token(Token = "0x6000C6E")]
			[Address(RVA = "0x13C04AC", Offset = "0x13C04AC", VA = "0x13C04AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA293E4", Offset = "0xA293E4")]
			remove
			{
			}
		}

		[Token(Token = "0x6000C52")]
		[Address(RVA = "0x13BE8D0", Offset = "0x13BE8D0", VA = "0x13BE8D0")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xA29320", Offset = "0xA29320")]
		private static void InitStaticVariables()
		{
		}

		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0x13C059C", Offset = "0x13C059C", VA = "0x13C059C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C70")]
		[Address(RVA = "0x13C0750", Offset = "0x13C0750", VA = "0x13C0750")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6000C71")]
		[Address(RVA = "0x13C0A60", Offset = "0x13C0A60", VA = "0x13C0A60")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C72")]
		[Address(RVA = "0x13C0B34", Offset = "0x13C0B34", VA = "0x13C0B34")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000C73")]
		[Address(RVA = "0x13C0BD0", Offset = "0x13C0BD0", VA = "0x13C0BD0")]
		public void OnSceneLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x6000C74")]
		[Address(RVA = "0x13C0CBC", Offset = "0x13C0CBC", VA = "0x13C0CBC")]
		public static string GetCurrentSceneName()
		{
			return null;
		}

		[Token(Token = "0x6000C75")]
		[Address(RVA = "0x13BF9E4", Offset = "0x13BF9E4", VA = "0x13BF9E4")]
		public static int GetCurrentSceneIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6000C76")]
		[Address(RVA = "0x13C0D34", Offset = "0x13C0D34", VA = "0x13C0D34")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA293F4", Offset = "0xA293F4")]
		private static IEnumerator LoadSceneInternal(string sceneName)
		{
			return null;
		}

		[Token(Token = "0x6000C77")]
		[Address(RVA = "0x13C0DD0", Offset = "0x13C0DD0", VA = "0x13C0DD0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA29458", Offset = "0xA29458")]
		private static IEnumerator LoadSceneInternalTransitionCoroutine(string sceneName)
		{
			return null;
		}

		[Token(Token = "0x6000C78")]
		[Address(RVA = "0x13C0E6C", Offset = "0x13C0E6C", VA = "0x13C0E6C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA294BC", Offset = "0xA294BC")]
		public static IEnumerator LoadAdditiveSceneInternal(string sceneName)
		{
			return null;
		}

		[Token(Token = "0x6000C79")]
		[Address(RVA = "0x13C0F08", Offset = "0x13C0F08", VA = "0x13C0F08")]
		private static void RecursivelyApplySavers(Transform t)
		{
		}

		[Token(Token = "0x6000C7A")]
		[Address(RVA = "0x13C1290", Offset = "0x13C1290", VA = "0x13C1290")]
		public static void UnloadAdditiveSceneInternal(string sceneName)
		{
		}

		[Token(Token = "0x6000C7B")]
		[Address(RVA = "0x13C12F8", Offset = "0x13C12F8", VA = "0x13C12F8")]
		public void SaveGameToSlot(int slotNumber)
		{
		}

		[Token(Token = "0x6000C7C")]
		[Address(RVA = "0x13C13E0", Offset = "0x13C13E0", VA = "0x13C13E0")]
		public void LoadGameFromSlot(int slotNumber)
		{
		}

		[Token(Token = "0x6000C7D")]
		[Address(RVA = "0x13C1608", Offset = "0x13C1608", VA = "0x13C1608")]
		public void LoadSceneAtSpawnpoint(string sceneNameAndSpawnpoint)
		{
		}

		[Token(Token = "0x6000C7E")]
		[Address(RVA = "0x13C17C8", Offset = "0x13C17C8", VA = "0x13C17C8")]
		public static bool HasSavedGameInSlot(int slotNumber)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C7F")]
		[Address(RVA = "0x13C1840", Offset = "0x13C1840", VA = "0x13C1840")]
		public static void DeleteSavedGameInSlot(int slotNumber)
		{
		}

		[Token(Token = "0x6000C80")]
		[Address(RVA = "0x13C135C", Offset = "0x13C135C", VA = "0x13C135C")]
		public static void SaveToSlot(int slotNumber)
		{
		}

		[Token(Token = "0x6000C81")]
		[Address(RVA = "0x13C18B8", Offset = "0x13C18B8", VA = "0x13C18B8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA29520", Offset = "0xA29520")]
		private static IEnumerator SaveToSlotCoroutine(int slotNumber)
		{
			return null;
		}

		[Token(Token = "0x6000C82")]
		[Address(RVA = "0x13C1444", Offset = "0x13C1444", VA = "0x13C1444")]
		public static void LoadFromSlot(int slotNumber)
		{
		}

		[Token(Token = "0x6000C83")]
		[Address(RVA = "0x13C1954", Offset = "0x13C1954", VA = "0x13C1954")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA29584", Offset = "0xA29584")]
		private static IEnumerator LoadFromSlotCoroutine(int slotNumber)
		{
			return null;
		}

		[Token(Token = "0x6000C84")]
		[Address(RVA = "0x13C1A6C", Offset = "0x13C1A6C", VA = "0x13C1A6C")]
		private static void NotifyLoadEndedWhenSceneLoaded(string sceneName, int sceneIndex)
		{
		}

		[Token(Token = "0x6000C85")]
		[Address(RVA = "0x13C19C4", Offset = "0x13C19C4", VA = "0x13C19C4")]
		private static void LoadFromSlotNow(int slotNumber)
		{
		}

		[Token(Token = "0x6000C86")]
		[Address(RVA = "0x13C1C64", Offset = "0x13C1C64", VA = "0x13C1C64")]
		public static void RegisterSaver(Saver saver)
		{
		}

		[Token(Token = "0x6000C87")]
		[Address(RVA = "0x13C1D68", Offset = "0x13C1D68", VA = "0x13C1D68")]
		public static void UnregisterSaver(Saver saver)
		{
		}

		[Token(Token = "0x6000C88")]
		[Address(RVA = "0x13C1DEC", Offset = "0x13C1DEC", VA = "0x13C1DEC")]
		public static void ClearSavedGameData()
		{
		}

		[Token(Token = "0x6000C89")]
		[Address(RVA = "0x13C1E6C", Offset = "0x13C1E6C", VA = "0x13C1E6C")]
		public static SavedGameData RecordSavedGameData()
		{
			return null;
		}

		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0x13C20C8", Offset = "0x13C20C8", VA = "0x13C20C8")]
		private static int GetSaverSceneIndex(Saver saver)
		{
			return default(int);
		}

		[Token(Token = "0x6000C8B")]
		[Address(RVA = "0x13C22A4", Offset = "0x13C22A4", VA = "0x13C22A4")]
		public static void UpdateSaveData(Saver saver, string data)
		{
		}

		[Token(Token = "0x6000C8C")]
		[Address(RVA = "0x13C2354", Offset = "0x13C2354", VA = "0x13C2354")]
		public static void ApplySavedGameData(SavedGameData savedGameData)
		{
		}

		[Token(Token = "0x6000C8D")]
		[Address(RVA = "0x13C2664", Offset = "0x13C2664", VA = "0x13C2664")]
		public static void ApplySavedGameData()
		{
		}

		[Token(Token = "0x6000C8E")]
		[Address(RVA = "0x13C07BC", Offset = "0x13C07BC", VA = "0x13C07BC")]
		public static void BeforeSceneChange()
		{
		}

		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0x13C1B24", Offset = "0x13C1B24", VA = "0x13C1B24")]
		public static void LoadGame(SavedGameData savedGameData)
		{
		}

		[Token(Token = "0x6000C90")]
		[Address(RVA = "0x13C166C", Offset = "0x13C166C", VA = "0x13C166C")]
		public static void LoadScene(string sceneNameAndSpawnpoint)
		{
		}

		[Token(Token = "0x6000C91")]
		[Address(RVA = "0x13C2744", Offset = "0x13C2744", VA = "0x13C2744")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA295E8", Offset = "0xA295E8")]
		private static IEnumerator LoadSceneCoroutine(SavedGameData savedGameData, string spawnpointName)
		{
			return null;
		}

		[Token(Token = "0x6000C92")]
		[Address(RVA = "0x13C27EC", Offset = "0x13C27EC", VA = "0x13C27EC")]
		private static void ApplyDataImmediate()
		{
		}

		[Token(Token = "0x6000C93")]
		[Address(RVA = "0x13C0C14", Offset = "0x13C0C14", VA = "0x13C0C14")]
		private void FinishedLoadingScene(string sceneName, int sceneIndex)
		{
		}

		[Token(Token = "0x6000C94")]
		[Address(RVA = "0x13C3094", Offset = "0x13C3094", VA = "0x13C3094")]
		public static void LoadAdditiveScene(string sceneName)
		{
		}

		[Token(Token = "0x6000C95")]
		[Address(RVA = "0x13C3198", Offset = "0x13C3198", VA = "0x13C3198")]
		public static void UnloadAdditiveScene(string sceneName)
		{
		}

		[Token(Token = "0x6000C96")]
		[Address(RVA = "0x13C3270", Offset = "0x13C3270", VA = "0x13C3270")]
		public static void RestartGame(string startingSceneName)
		{
		}

		[Token(Token = "0x6000C97")]
		[Address(RVA = "0x13C3300", Offset = "0x13C3300", VA = "0x13C3300")]
		public static void SaversRestartGame()
		{
		}

		[Token(Token = "0x6000C98")]
		[Address(RVA = "0x13BC4F4", Offset = "0x13BC4F4", VA = "0x13BC4F4")]
		public static string Serialize(object data)
		{
			return null;
		}

		[Token(Token = "0x6000C99")]
		public static T Deserialize<T>(string s, [Optional] T data)
		{
			return (T)null;
		}

		[Token(Token = "0x6000C9A")]
		[Address(RVA = "0x13C358C", Offset = "0x13C358C", VA = "0x13C358C")]
		public SaveSystem()
		{
		}
	}
	[Token(Token = "0x2000176")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA07390", Offset = "0xA07390")]
	public class ActiveSaver : Saver
	{
		[Serializable]
		[Token(Token = "0x200055D")]
		public class Data
		{
			[Token(Token = "0x4001C40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool active;

			[Token(Token = "0x600288D")]
			[Address(RVA = "0x1422218", Offset = "0x1422218", VA = "0x1422218")]
			public Data()
			{
			}
		}

		[Token(Token = "0x4000903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1647C", Offset = "0xA1647C")]
		[SerializeField]
		private GameObject m_gameObjectToWatch;

		[Token(Token = "0x4000904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Data m_data;

		[Token(Token = "0x17000108")]
		public GameObject gameObjectToWatch
		{
			[Token(Token = "0x6000C9C")]
			[Address(RVA = "0x1421E5C", Offset = "0x1421E5C", VA = "0x1421E5C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C9D")]
			[Address(RVA = "0x1421E64", Offset = "0x1421E64", VA = "0x1421E64")]
			set
			{
			}
		}

		[Token(Token = "0x6000C9E")]
		[Address(RVA = "0x1421E6C", Offset = "0x1421E6C", VA = "0x1421E6C", Slot = "16")]
		public override string RecordData()
		{
			return null;
		}

		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0x1421F3C", Offset = "0x1421F3C", VA = "0x1421F3C", Slot = "17")]
		public override void ApplyData(string s)
		{
		}

		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0x14221B0", Offset = "0x14221B0", VA = "0x14221B0")]
		public ActiveSaver()
		{
		}
	}
	[Token(Token = "0x2000177")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA073C8", Offset = "0xA073C8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA073C8", Offset = "0xA073C8")]
	public class AnimatorSaver : Saver
	{
		[Serializable]
		[Token(Token = "0x200055E")]
		public class LayerData
		{
			[Token(Token = "0x4001C41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int hash;

			[Token(Token = "0x4001C42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float time;

			[Token(Token = "0x600288E")]
			[Address(RVA = "0x142292C", Offset = "0x142292C", VA = "0x142292C")]
			public LayerData()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200055F")]
		public class Data
		{
			[Token(Token = "0x4001C43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LayerData[] layers;

			[Token(Token = "0x4001C44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<bool> bools;

			[Token(Token = "0x4001C45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<float> floats;

			[Token(Token = "0x4001C46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public List<int> ints;

			[Token(Token = "0x600288F")]
			[Address(RVA = "0x142286C", Offset = "0x142286C", VA = "0x142286C")]
			public Data()
			{
			}
		}

		[Token(Token = "0x4000905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Data m_data;

		[Token(Token = "0x4000906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Animator m_animator;

		[Token(Token = "0x17000109")]
		private Animator animator
		{
			[Token(Token = "0x6000CA1")]
			[Address(RVA = "0x1422614", Offset = "0x1422614", VA = "0x1422614")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0x14226AC", Offset = "0x14226AC", VA = "0x14226AC")]
		private void CheckAnimator()
		{
		}

		[Token(Token = "0x6000CA3")]
		[Address(RVA = "0x1422934", Offset = "0x1422934", VA = "0x1422934", Slot = "16")]
		public override string RecordData()
		{
			return null;
		}

		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0x1422D28", Offset = "0x1422D28", VA = "0x1422D28", Slot = "17")]
		public override void ApplyData(string s)
		{
		}

		[Token(Token = "0x6000CA5")]
		[Address(RVA = "0x1423100", Offset = "0x1423100", VA = "0x1423100")]
		public AnimatorSaver()
		{
		}
	}
	[Token(Token = "0x2000178")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA07450", Offset = "0xA07450")]
	public class DestructibleSaver : Saver
	{
		[Serializable]
		[Token(Token = "0x2000560")]
		public class DestructibleData
		{
			[Token(Token = "0x4001C47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool destroyed;

			[Token(Token = "0x4001C48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 position;

			[Token(Token = "0x6002890")]
			[Address(RVA = "0x1424C78", Offset = "0x1424C78", VA = "0x1424C78")]
			public DestructibleData()
			{
			}
		}

		[Token(Token = "0x2000561")]
		public enum Mode
		{
			[Token(Token = "0x4001C4A")]
			OnDisable,
			[Token(Token = "0x4001C4B")]
			OnDestroy
		}

		[Token(Token = "0x2000562")]
		public enum DestroyMode
		{
			[Token(Token = "0x4001C4D")]
			Destroy,
			[Token(Token = "0x4001C4E")]
			Deactivate
		}

		[Token(Token = "0x4000907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA164C8", Offset = "0xA164C8")]
		[SerializeField]
		private Mode m_mode;

		[Token(Token = "0x4000908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA16514", Offset = "0xA16514")]
		[SerializeField]
		private DestroyMode m_destroyMode;

		[Token(Token = "0x4000909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA16560", Offset = "0xA16560")]
		[SerializeField]
		private GameObject m_destroyedVersionPrefab;

		[Token(Token = "0x400090A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private DestructibleData m_data;

		[Token(Token = "0x400090B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool m_ignoreOnDestroy;

		[Token(Token = "0x1700010A")]
		public Mode mode
		{
			[Token(Token = "0x6000CA6")]
			[Address(RVA = "0x1424770", Offset = "0x1424770", VA = "0x1424770")]
			get
			{
				return default(Mode);
			}
			[Token(Token = "0x6000CA7")]
			[Address(RVA = "0x1424778", Offset = "0x1424778", VA = "0x1424778")]
			set
			{
			}
		}

		[Token(Token = "0x1700010B")]
		public DestroyMode destroyMode
		{
			[Token(Token = "0x6000CA8")]
			[Address(RVA = "0x1424780", Offset = "0x1424780", VA = "0x1424780")]
			get
			{
				return default(DestroyMode);
			}
			[Token(Token = "0x6000CA9")]
			[Address(RVA = "0x1424788", Offset = "0x1424788", VA = "0x1424788")]
			set
			{
			}
		}

		[Token(Token = "0x1700010C")]
		public GameObject destroyedVersionPrefab
		{
			[Token(Token = "0x6000CAA")]
			[Address(RVA = "0x1424790", Offset = "0x1424790", VA = "0x1424790")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CAB")]
			[Address(RVA = "0x1424798", Offset = "0x1424798", VA = "0x1424798")]
			set
			{
			}
		}

		[Token(Token = "0x6000CAC")]
		[Address(RVA = "0x14247A0", Offset = "0x14247A0", VA = "0x14247A0", Slot = "19")]
		public override void OnBeforeSceneChange()
		{
		}

		[Token(Token = "0x6000CAD")]
		[Address(RVA = "0x14247CC", Offset = "0x14247CC", VA = "0x14247CC", Slot = "14")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x6000CAE")]
		[Address(RVA = "0x1424814", Offset = "0x1424814", VA = "0x1424814", Slot = "15")]
		public override void OnDestroy()
		{
		}

		[Token(Token = "0x6000CAF")]
		[Address(RVA = "0x1424860", Offset = "0x1424860", VA = "0x1424860", Slot = "21")]
		public virtual void RecordDestruction()
		{
		}

		[Token(Token = "0x6000CB0")]
		[Address(RVA = "0x142498C", Offset = "0x142498C", VA = "0x142498C", Slot = "16")]
		public override string RecordData()
		{
			return null;
		}

		[Token(Token = "0x6000CB1")]
		[Address(RVA = "0x14249F8", Offset = "0x14249F8", VA = "0x14249F8", Slot = "17")]
		public override void ApplyData(string s)
		{
		}

		[Token(Token = "0x6000CB2")]
		[Address(RVA = "0x1424C08", Offset = "0x1424C08", VA = "0x1424C08")]
		public DestructibleSaver()
		{
		}
	}
	[Token(Token = "0x2000179")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA07488", Offset = "0xA07488")]
	public class EnabledSaver : Saver
	{
		[Serializable]
		[Token(Token = "0x2000563")]
		public class Data
		{
			[Token(Token = "0x4001C4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool enabled;

			[Token(Token = "0x6002891")]
			[Address(RVA = "0x116A718", Offset = "0x116A718", VA = "0x116A718")]
			public Data()
			{
			}
		}

		[Token(Token = "0x400090C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA165AC", Offset = "0xA165AC")]
		[SerializeField]
		private Component m_componentToWatch;

		[Token(Token = "0x400090D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Data m_data;

		[Token(Token = "0x1700010D")]
		public Component componentToWatch
		{
			[Token(Token = "0x6000CB3")]
			[Address(RVA = "0x116A4DC", Offset = "0x116A4DC", VA = "0x116A4DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CB4")]
			[Address(RVA = "0x116A4E4", Offset = "0x116A4E4", VA = "0x116A4E4")]
			set
			{
			}
		}

		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0x116A4EC", Offset = "0x116A4EC", VA = "0x116A4EC", Slot = "16")]
		public override string RecordData()
		{
			return null;
		}

		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0x116A5B8", Offset = "0x116A5B8", VA = "0x116A5B8", Slot = "17")]
		public override void ApplyData(string s)
		{
		}

		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0x116A6B0", Offset = "0x116A6B0", VA = "0x116A6B0")]
		public EnabledSaver()
		{
		}
	}
	[Token(Token = "0x200017A")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA074C0", Offset = "0xA074C0")]
	public class MultiActiveSaver : Saver
	{
		[Serializable]
		[Token(Token = "0x2000564")]
		public class Data
		{
			[Token(Token = "0x4001C50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool[] active;

			[Token(Token = "0x6002892")]
			[Address(RVA = "0x13BC9F4", Offset = "0x13BC9F4", VA = "0x13BC9F4")]
			public Data()
			{
			}
		}

		[Token(Token = "0x400090E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA165F8", Offset = "0xA165F8")]
		[SerializeField]
		private GameObject[] m_gameObjectsToWatch;

		[Token(Token = "0x400090F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Data m_data;

		[Token(Token = "0x1700010E")]
		public GameObject[] gameObjectsToWatch
		{
			[Token(Token = "0x6000CB8")]
			[Address(RVA = "0x13BC330", Offset = "0x13BC330", VA = "0x13BC330")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CB9")]
			[Address(RVA = "0x13BC338", Offset = "0x13BC338", VA = "0x13BC338")]
			set
			{
			}
		}

		[Token(Token = "0x6000CBA")]
		[Address(RVA = "0x13BC340", Offset = "0x13BC340", VA = "0x13BC340", Slot = "16")]
		public override string RecordData()
		{
			return null;
		}

		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0x13BC56C", Offset = "0x13BC56C", VA = "0x13BC56C", Slot = "17")]
		public override void ApplyData(string s)
		{
		}

		[Token(Token = "0x6000CBC")]
		[Address(RVA = "0x13BC984", Offset = "0x13BC984", VA = "0x13BC984")]
		public MultiActiveSaver()
		{
		}
	}
	[Token(Token = "0x200017B")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA074F8", Offset = "0xA074F8")]
	public class PositionSaver : Saver
	{
		[Serializable]
		[Token(Token = "0x2000565")]
		public class PositionData
		{
			[Token(Token = "0x4001C51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int scene;

			[Token(Token = "0x4001C52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 position;

			[Token(Token = "0x4001C53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Quaternion rotation;

			[Token(Token = "0x6002893")]
			[Address(RVA = "0x13BD0CC", Offset = "0x13BD0CC", VA = "0x13BD0CC")]
			public PositionData()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000566")]
		public class ScenePositionData
		{
			[Token(Token = "0x4001C54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int scene;

			[Token(Token = "0x4001C55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 position;

			[Token(Token = "0x4001C56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Quaternion rotation;

			[Token(Token = "0x6002894")]
			[Address(RVA = "0x13BD3CC", Offset = "0x13BD3CC", VA = "0x13BD3CC")]
			public ScenePositionData(int _scene, Vector3 _position, Quaternion _rotation)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000567")]
		public class MultiscenePositionData
		{
			[Token(Token = "0x4001C57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<ScenePositionData> positions;

			[Token(Token = "0x6002895")]
			[Address(RVA = "0x13BD05C", Offset = "0x13BD05C", VA = "0x13BD05C")]
			public MultiscenePositionData()
			{
			}
		}

		[Token(Token = "0x4000910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA16644", Offset = "0xA16644")]
		[SerializeField]
		private bool m_usePlayerSpawnpoint;

		[Token(Token = "0x4000911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA16690", Offset = "0xA16690")]
		[SerializeField]
		private bool m_multiscene;

		[Token(Token = "0x4000912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected PositionData m_data;

		[Token(Token = "0x4000913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected MultiscenePositionData m_multisceneData;

		[Token(Token = "0x4000914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected NavMeshAgent m_navMeshAgent;

		[Token(Token = "0x1700010F")]
		public bool usePlayerSpawnpoint
		{
			[Token(Token = "0x6000CBD")]
			[Address(RVA = "0x13BCF94", Offset = "0x13BCF94", VA = "0x13BCF94")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000CBE")]
			[Address(RVA = "0x13BCF9C", Offset = "0x13BCF9C", VA = "0x13BCF9C")]
			set
			{
			}
		}

		[Token(Token = "0x17000110")]
		protected bool multiscene
		{
			[Token(Token = "0x6000CBF")]
			[Address(RVA = "0x13BCFA8", Offset = "0x13BCFA8", VA = "0x13BCFA8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000CC0")]
		[Address(RVA = "0x13BCFB0", Offset = "0x13BCFB0", VA = "0x13BCFB0", Slot = "10")]
		public override void Awake()
		{
		}

		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0x13BD0DC", Offset = "0x13BD0DC", VA = "0x13BD0DC", Slot = "16")]
		public override string RecordData()
		{
			return null;
		}

		[Token(Token = "0x6000CC2")]
		[Address(RVA = "0x13BD444", Offset = "0x13BD444", VA = "0x13BD444", Slot = "17")]
		public override void ApplyData(string s)
		{
		}

		[Token(Token = "0x6000CC3")]
		[Address(RVA = "0x13BD87C", Offset = "0x13BD87C", VA = "0x13BD87C", Slot = "21")]
		protected virtual void SetPosition(Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x6000CC4")]
		[Address(RVA = "0x13BD99C", Offset = "0x13BD99C", VA = "0x13BD99C")]
		public PositionSaver()
		{
		}
	}
	[Token(Token = "0x200017C")]
	public abstract class Saver : MonoBehaviour
	{
		[Token(Token = "0x4000915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA166DC", Offset = "0xA166DC")]
		[SerializeField]
		private string m_key;

		[Token(Token = "0x4000916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA16728", Offset = "0xA16728")]
		[SerializeField]
		private bool m_appendSaverTypeToKey;

		[Token(Token = "0x4000917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA16774", Offset = "0xA16774")]
		[SerializeField]
		private bool m_saveAcrossSceneChanges;

		[Token(Token = "0x4000918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA167C0", Offset = "0xA167C0")]
		[SerializeField]
		private bool m_restoreStateOnStart;

		[Token(Token = "0x4000919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected string m_runtimeKey;

		[Token(Token = "0x17000111")]
		public bool appendSaverTypeToKey
		{
			[Token(Token = "0x6000CC5")]
			[Address(RVA = "0x13C5FEC", Offset = "0x13C5FEC", VA = "0x13C5FEC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000CC6")]
			[Address(RVA = "0x13C5FF4", Offset = "0x13C5FF4", VA = "0x13C5FF4")]
			set
			{
			}
		}

		[Token(Token = "0x17000112")]
		public virtual string key
		{
			[Token(Token = "0x6000CC7")]
			[Address(RVA = "0x13C6000", Offset = "0x13C6000", VA = "0x13C6000", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CC8")]
			[Address(RVA = "0x13C6104", Offset = "0x13C6104", VA = "0x13C6104", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x17000113")]
		public string _internalKeyValue
		{
			[Token(Token = "0x6000CC9")]
			[Address(RVA = "0x13C6110", Offset = "0x13C6110", VA = "0x13C6110")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CCA")]
			[Address(RVA = "0x13C6118", Offset = "0x13C6118", VA = "0x13C6118")]
			set
			{
			}
		}

		[Token(Token = "0x17000114")]
		public virtual bool saveAcrossSceneChanges
		{
			[Token(Token = "0x6000CCB")]
			[Address(RVA = "0x13C6120", Offset = "0x13C6120", VA = "0x13C6120", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000CCC")]
			[Address(RVA = "0x13C6128", Offset = "0x13C6128", VA = "0x13C6128", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000115")]
		public virtual bool restoreStateOnStart
		{
			[Token(Token = "0x6000CCD")]
			[Address(RVA = "0x13C6134", Offset = "0x13C6134", VA = "0x13C6134", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000CCE")]
			[Address(RVA = "0x13C613C", Offset = "0x13C613C", VA = "0x13C613C", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x6000CCF")]
		[Address(RVA = "0x13BD058", Offset = "0x13BD058", VA = "0x13BD058", Slot = "10")]
		public virtual void Awake()
		{
		}

		[Token(Token = "0x6000CD0")]
		[Address(RVA = "0x13C6148", Offset = "0x13C6148", VA = "0x13C6148", Slot = "11")]
		public virtual void Start()
		{
		}

		[Token(Token = "0x6000CD1")]
		[Address(RVA = "0x13C6254", Offset = "0x13C6254", VA = "0x13C6254", Slot = "12")]
		public virtual void Reset()
		{
		}

		[Token(Token = "0x6000CD2")]
		[Address(RVA = "0x13C6258", Offset = "0x13C6258", VA = "0x13C6258", Slot = "13")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000CD3")]
		[Address(RVA = "0x13C62BC", Offset = "0x13C62BC", VA = "0x13C62BC", Slot = "14")]
		public virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000CD4")]
		[Address(RVA = "0x13C6320", Offset = "0x13C6320", VA = "0x13C6320", Slot = "15")]
		public virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000CD5")]
		public abstract string RecordData();

		[Token(Token = "0x6000CD6")]
		public abstract void ApplyData(string s);

		[Token(Token = "0x6000CD7")]
		[Address(RVA = "0x13C6324", Offset = "0x13C6324", VA = "0x13C6324", Slot = "18")]
		public virtual void ApplyDataImmediate()
		{
		}

		[Token(Token = "0x6000CD8")]
		[Address(RVA = "0x13C6328", Offset = "0x13C6328", VA = "0x13C6328", Slot = "19")]
		public virtual void OnBeforeSceneChange()
		{
		}

		[Token(Token = "0x6000CD9")]
		[Address(RVA = "0x13C632C", Offset = "0x13C632C", VA = "0x13C632C", Slot = "20")]
		public virtual void OnRestartGame()
		{
		}

		[Token(Token = "0x6000CDA")]
		[Address(RVA = "0x13BC9FC", Offset = "0x13BC9FC", VA = "0x13BC9FC")]
		protected Saver()
		{
		}
	}
	[Token(Token = "0x200017D")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA07530", Offset = "0xA07530")]
	public class BinaryDataSerializer : DataSerializer
	{
		[Token(Token = "0x6000CDB")]
		[Address(RVA = "0x1423718", Offset = "0x1423718", VA = "0x1423718", Slot = "6")]
		protected virtual void AddSurrogateSelectors(SurrogateSelector surrogateSelector)
		{
		}

		[Token(Token = "0x6000CDC")]
		[Address(RVA = "0x142385C", Offset = "0x142385C", VA = "0x142385C", Slot = "7")]
		protected virtual BinaryFormatter CreateBinaryFormatter()
		{
			return null;
		}

		[Token(Token = "0x6000CDD")]
		[Address(RVA = "0x1423900", Offset = "0x1423900", VA = "0x1423900", Slot = "4")]
		public override string Serialize(object data)
		{
			return null;
		}

		[Token(Token = "0x6000CDE")]
		public override T Deserialize<T>(string s, [Optional] T data)
		{
			return (T)null;
		}

		[Token(Token = "0x6000CDF")]
		[Address(RVA = "0x1423AD8", Offset = "0x1423AD8", VA = "0x1423AD8")]
		public BinaryDataSerializer()
		{
		}
	}
	[Token(Token = "0x200017E")]
	public class QuaternionSerializationSurrogate : ISerializationSurrogate
	{
		[Token(Token = "0x6000CE0")]
		[Address(RVA = "0x13BD9AC", Offset = "0x13BD9AC", VA = "0x13BD9AC", Slot = "4")]
		public void GetObjectData(object obj, SerializationInfo info, StreamingContext context)
		{
		}

		[Token(Token = "0x6000CE1")]
		[Address(RVA = "0x13BDAB0", Offset = "0x13BDAB0", VA = "0x13BDAB0", Slot = "5")]
		public object SetObjectData(object obj, SerializationInfo info, StreamingContext context, ISurrogateSelector selector)
		{
			return null;
		}

		[Token(Token = "0x6000CE2")]
		[Address(RVA = "0x13BDCC4", Offset = "0x13BDCC4", VA = "0x13BDCC4")]
		public QuaternionSerializationSurrogate()
		{
		}
	}
	[Token(Token = "0x200017F")]
	public class Vector3SerializationSurrogate : ISerializationSurrogate
	{
		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0x13D20F0", Offset = "0x13D20F0", VA = "0x13D20F0", Slot = "4")]
		public void GetObjectData(object obj, SerializationInfo info, StreamingContext context)
		{
		}

		[Token(Token = "0x6000CE4")]
		[Address(RVA = "0x13D21D0", Offset = "0x13D21D0", VA = "0x13D21D0", Slot = "5")]
		public object SetObjectData(object obj, SerializationInfo info, StreamingContext context, ISurrogateSelector selector)
		{
			return null;
		}

		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0x13D2390", Offset = "0x13D2390", VA = "0x13D2390")]
		public Vector3SerializationSurrogate()
		{
		}
	}
	[Token(Token = "0x2000180")]
	public abstract class DataSerializer : MonoBehaviour
	{
		[Token(Token = "0x6000CE6")]
		public abstract string Serialize(object data);

		[Token(Token = "0x6000CE7")]
		public abstract T Deserialize<T>(string s, [Optional] T data);

		[Token(Token = "0x6000CE8")]
		[Address(RVA = "0x1423AE0", Offset = "0x1423AE0", VA = "0x1423AE0")]
		protected DataSerializer()
		{
		}
	}
	[Token(Token = "0x2000181")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA07568", Offset = "0xA07568")]
	public class JsonDataSerializer : DataSerializer
	{
		[Token(Token = "0x400091A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1680C", Offset = "0xA1680C")]
		[SerializeField]
		private bool m_prettyPrint;

		[Token(Token = "0x17000116")]
		public bool prettyPrint
		{
			[Token(Token = "0x6000CE9")]
			[Address(RVA = "0x116FC98", Offset = "0x116FC98", VA = "0x116FC98")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000CEA")]
			[Address(RVA = "0x116FCA0", Offset = "0x116FCA0", VA = "0x116FCA0")]
			set
			{
			}
		}

		[Token(Token = "0x6000CEB")]
		[Address(RVA = "0x116FCAC", Offset = "0x116FCAC", VA = "0x116FCAC", Slot = "4")]
		public override string Serialize(object data)
		{
			return null;
		}

		[Token(Token = "0x6000CEC")]
		public override T Deserialize<T>(string s, [Optional] T data)
		{
			return (T)null;
		}

		[Token(Token = "0x6000CED")]
		[Address(RVA = "0x116FCC0", Offset = "0x116FCC0", VA = "0x116FCC0")]
		public JsonDataSerializer()
		{
		}
	}
	[Token(Token = "0x2000182")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA075A0", Offset = "0xA075A0")]
	public class SpawnedObject : Saver
	{
		[Token(Token = "0x2000568")]
		public enum Mode
		{
			[Token(Token = "0x4001C59")]
			OnDisable,
			[Token(Token = "0x4001C5A")]
			OnDestroy
		}

		[Token(Token = "0x400091B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA16858", Offset = "0xA16858")]
		[SerializeField]
		private Mode m_mode;

		[Token(Token = "0x400091C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool m_ignoreOnDestroy;

		[Token(Token = "0x17000117")]
		public Mode mode
		{
			[Token(Token = "0x6000CEE")]
			[Address(RVA = "0x13C6DFC", Offset = "0x13C6DFC", VA = "0x13C6DFC")]
			get
			{
				return default(Mode);
			}
			[Token(Token = "0x6000CEF")]
			[Address(RVA = "0x13C6E04", Offset = "0x13C6E04", VA = "0x13C6E04")]
			set
			{
			}
		}

		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0x13C6E0C", Offset = "0x13C6E0C", VA = "0x13C6E0C", Slot = "11")]
		public override void Start()
		{
		}

		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0x13C6F28", Offset = "0x13C6F28", VA = "0x13C6F28", Slot = "19")]
		public override void OnBeforeSceneChange()
		{
		}

		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0x13C6F34", Offset = "0x13C6F34", VA = "0x13C6F34", Slot = "14")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x6000CF3")]
		[Address(RVA = "0x13C6F78", Offset = "0x13C6F78", VA = "0x13C6F78", Slot = "15")]
		public override void OnDestroy()
		{
		}

		[Token(Token = "0x6000CF4")]
		[Address(RVA = "0x13C6F98", Offset = "0x13C6F98", VA = "0x13C6F98", Slot = "21")]
		protected virtual void RecordDestruction()
		{
		}

		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0x13C70C0", Offset = "0x13C70C0", VA = "0x13C70C0", Slot = "16")]
		public override string RecordData()
		{
			return null;
		}

		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0x13C7110", Offset = "0x13C7110", VA = "0x13C7110", Slot = "17")]
		public override void ApplyData(string data)
		{
		}

		[Token(Token = "0x6000CF7")]
		[Address(RVA = "0x13C7114", Offset = "0x13C7114", VA = "0x13C7114")]
		public SpawnedObject()
		{
		}
	}
	[Token(Token = "0x2000183")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA075D8", Offset = "0xA075D8")]
	public class SpawnedObjectManager : Saver
	{
		[Serializable]
		[Token(Token = "0x2000569")]
		public class SpawnedObjectData
		{
			[Token(Token = "0x4001C5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string prefabName;

			[Token(Token = "0x4001C5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 position;

			[Token(Token = "0x4001C5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Quaternion rotation;

			[Token(Token = "0x6002896")]
			[Address(RVA = "0x13C7D94", Offset = "0x13C7D94", VA = "0x13C7D94")]
			public SpawnedObjectData()
			{
			}

			[Token(Token = "0x6002897")]
			[Address(RVA = "0x13C7540", Offset = "0x13C7540", VA = "0x13C7540")]
			public SpawnedObjectData(string prefabName, Vector3 position, Quaternion rotation)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200056A")]
		public class SpawnedObjectDataList
		{
			[Token(Token = "0x4001C5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<SpawnedObjectData> list;

			[Token(Token = "0x6002898")]
			[Address(RVA = "0x13C74D0", Offset = "0x13C74D0", VA = "0x13C74D0")]
			public SpawnedObjectDataList()
			{
			}
		}

		[Token(Token = "0x200056B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D638", Offset = "0xA0D638")]
		private sealed class <ApplyDataToRespawnedObjectsAfterFrames>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int numFrames;

			[Token(Token = "0x4001C62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SpawnedObjectManager <>4__this;

			[Token(Token = "0x4001C63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <i>5__2;

			[Token(Token = "0x170004EA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600289C")]
				[Address(RVA = "0x13C7D24", Offset = "0x13C7D24", VA = "0x13C7D24", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004EB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600289E")]
				[Address(RVA = "0x13C7D8C", Offset = "0x13C7D8C", VA = "0x13C7D8C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002899")]
			[Address(RVA = "0x13C7B28", Offset = "0x13C7B28", VA = "0x13C7B28")]
			[DebuggerHidden]
			public <ApplyDataToRespawnedObjectsAfterFrames>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x600289A")]
			[Address(RVA = "0x13C7CA4", Offset = "0x13C7CA4", VA = "0x13C7CA4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600289B")]
			[Address(RVA = "0x13C7CA8", Offset = "0x13C7CA8", VA = "0x13C7CA8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600289D")]
			[Address(RVA = "0x13C7D2C", Offset = "0x13C7D2C", VA = "0x13C7D2C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200056C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D648", Offset = "0xA0D648")]
		private sealed class <>c__DisplayClass24_0
		{
			[Token(Token = "0x4001C64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string prefabName;

			[Token(Token = "0x600289F")]
			[Address(RVA = "0x13C7B54", Offset = "0x13C7B54", VA = "0x13C7B54")]
			public <>c__DisplayClass24_0()
			{
			}

			[Token(Token = "0x60028A0")]
			[Address(RVA = "0x13C7BF4", Offset = "0x13C7BF4", VA = "0x13C7BF4")]
			internal bool <GetSpawnedObjectPrefab>b__0(SpawnedObject x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400091D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA168A4", Offset = "0xA168A4")]
		[SerializeField]
		private List<SpawnedObject> m_spawnedObjectPrefabs;

		[Token(Token = "0x400091E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private List<SpawnedObject> m_spawnedObjects;

		[Token(Token = "0x400091F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA16900", Offset = "0xA16900")]
		private bool m_applySaveDataToSpawnedObjectsOnRestore;

		[Token(Token = "0x4000920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static SpawnedObjectManager m_instance;

		[Token(Token = "0x17000118")]
		public List<SpawnedObject> spawnedObjectPrefabs
		{
			[Token(Token = "0x6000CF8")]
			[Address(RVA = "0x13C7128", Offset = "0x13C7128", VA = "0x13C7128")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CF9")]
			[Address(RVA = "0x13C7130", Offset = "0x13C7130", VA = "0x13C7130")]
			set
			{
			}
		}

		[Token(Token = "0x17000119")]
		public List<SpawnedObject> spawnedObjects
		{
			[Token(Token = "0x6000CFA")]
			[Address(RVA = "0x13C7138", Offset = "0x13C7138", VA = "0x13C7138")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CFB")]
			[Address(RVA = "0x13C7140", Offset = "0x13C7140", VA = "0x13C7140")]
			set
			{
			}
		}

		[Token(Token = "0x1700011A")]
		public bool applySaveDataToSpawnedObjectsOnRestore
		{
			[Token(Token = "0x6000CFC")]
			[Address(RVA = "0x13C7148", Offset = "0x13C7148", VA = "0x13C7148")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000CFD")]
			[Address(RVA = "0x13C7150", Offset = "0x13C7150", VA = "0x13C7150")]
			set
			{
			}
		}

		[Token(Token = "0x1700011B")]
		public override string key
		{
			[Token(Token = "0x6000CFE")]
			[Address(RVA = "0x13C715C", Offset = "0x13C715C", VA = "0x13C715C", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CFF")]
			[Address(RVA = "0x13C7248", Offset = "0x13C7248", VA = "0x13C7248", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6000D00")]
		[Address(RVA = "0x13C7254", Offset = "0x13C7254", VA = "0x13C7254", Slot = "12")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6000D01")]
		[Address(RVA = "0x13C7264", Offset = "0x13C7264", VA = "0x13C7264", Slot = "10")]
		public override void Awake()
		{
		}

		[Token(Token = "0x6000D02")]
		[Address(RVA = "0x13C72B8", Offset = "0x13C72B8", VA = "0x13C72B8", Slot = "16")]
		public override string RecordData()
		{
			return null;
		}

		[Token(Token = "0x6000D03")]
		[Address(RVA = "0x13C75B8", Offset = "0x13C75B8", VA = "0x13C75B8", Slot = "17")]
		public override void ApplyData(string data)
		{
		}

		[Token(Token = "0x6000D04")]
		[Address(RVA = "0x13C7904", Offset = "0x13C7904", VA = "0x13C7904")]
		protected void ApplyDataToRespawnedObjects()
		{
		}

		[Token(Token = "0x6000D05")]
		[Address(RVA = "0x13C7AA8", Offset = "0x13C7AA8", VA = "0x13C7AA8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA2964C", Offset = "0xA2964C")]
		protected IEnumerator ApplyDataToRespawnedObjectsAfterFrames(int numFrames)
		{
			return null;
		}

		[Token(Token = "0x6000D06")]
		[Address(RVA = "0x13C7840", Offset = "0x13C7840", VA = "0x13C7840")]
		protected SpawnedObject GetSpawnedObjectPrefab(string prefabName)
		{
			return null;
		}

		[Token(Token = "0x6000D07")]
		[Address(RVA = "0x13C6E30", Offset = "0x13C6E30", VA = "0x13C6E30")]
		public static void AddSpawnedObjectData(SpawnedObject spawnedObject)
		{
		}

		[Token(Token = "0x6000D08")]
		[Address(RVA = "0x13C6FC8", Offset = "0x13C6FC8", VA = "0x13C6FC8")]
		public static void RemoveSpawnedObjectData(SpawnedObject spawnedObject)
		{
		}

		[Token(Token = "0x6000D09")]
		[Address(RVA = "0x13C7B5C", Offset = "0x13C7B5C", VA = "0x13C7B5C")]
		public SpawnedObjectManager()
		{
		}
	}
	[Token(Token = "0x2000184")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA07610", Offset = "0xA07610")]
	public class DiskSavedGameDataStorer : SavedGameDataStorer
	{
		[Token(Token = "0x200056D")]
		private class SavedGameInfo
		{
			[Token(Token = "0x4001C65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string sceneName;

			[Token(Token = "0x60028A1")]
			[Address(RVA = "0x1169744", Offset = "0x1169744", VA = "0x1169744")]
			public SavedGameInfo(string sceneName)
			{
			}
		}

		[Token(Token = "0x4000921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA16938", Offset = "0xA16938")]
		public bool encrypt;

		[Token(Token = "0x4000922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA16970", Offset = "0xA16970")]
		public string encryptionPassword;

		[Token(Token = "0x4000923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA169A8", Offset = "0xA169A8")]
		[SerializeField]
		private bool m_debug;

		[Token(Token = "0x4000924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<SavedGameInfo> m_savedGameInfo;

		[Token(Token = "0x1700011C")]
		public bool debug
		{
			[Token(Token = "0x6000D0A")]
			[Address(RVA = "0x1169168", Offset = "0x1169168", VA = "0x1169168")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D0B")]
			[Address(RVA = "0x11691E4", Offset = "0x11691E4", VA = "0x11691E4")]
			set
			{
			}
		}

		[Token(Token = "0x6000D0C")]
		[Address(RVA = "0x11691F0", Offset = "0x11691F0", VA = "0x11691F0", Slot = "11")]
		public virtual void Start()
		{
		}

		[Token(Token = "0x6000D0D")]
		[Address(RVA = "0x1169200", Offset = "0x1169200", VA = "0x1169200", Slot = "12")]
		public virtual string GetSaveGameFilename(int slotNumber)
		{
			return null;
		}

		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0x1169368", Offset = "0x1169368", VA = "0x1169368", Slot = "13")]
		public virtual string GetSavedGameInfoFilename()
		{
			return null;
		}

		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0x11693BC", Offset = "0x11693BC", VA = "0x11693BC", Slot = "14")]
		public virtual void LoadSavedGameInfoFromFile()
		{
		}

		[Token(Token = "0x6000D10")]
		[Address(RVA = "0x1169770", Offset = "0x1169770", VA = "0x1169770", Slot = "15")]
		public virtual void UpdateSavedGameInfoToFile(int slotNumber, SavedGameData savedGameData)
		{
		}

		[Token(Token = "0x6000D11")]
		[Address(RVA = "0x1169B58", Offset = "0x1169B58", VA = "0x1169B58", Slot = "6")]
		public override bool HasDataInSlot(int slotNumber)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D12")]
		[Address(RVA = "0x1169BF8", Offset = "0x1169BF8", VA = "0x1169BF8", Slot = "7")]
		public override void StoreSavedGameData(int slotNumber, SavedGameData savedGameData)
		{
		}

		[Token(Token = "0x6000D13")]
		[Address(RVA = "0x1169F34", Offset = "0x1169F34", VA = "0x1169F34", Slot = "8")]
		public override SavedGameData RetrieveSavedGameData(int slotNumber)
		{
			return null;
		}

		[Token(Token = "0x6000D14")]
		[Address(RVA = "0x116A2A4", Offset = "0x116A2A4", VA = "0x116A2A4", Slot = "9")]
		public override void DeleteSavedGameData(int slotNumber)
		{
		}

		[Token(Token = "0x6000D15")]
		[Address(RVA = "0x1169D38", Offset = "0x1169D38", VA = "0x1169D38")]
		public static void WriteStringToFile(string filename, string data)
		{
		}

		[Token(Token = "0x6000D16")]
		[Address(RVA = "0x116A050", Offset = "0x116A050", VA = "0x116A050")]
		public static string ReadStringFromFile(string filename)
		{
			return null;
		}

		[Token(Token = "0x6000D17")]
		[Address(RVA = "0x116A3B0", Offset = "0x116A3B0", VA = "0x116A3B0")]
		public DiskSavedGameDataStorer()
		{
		}
	}
	[Token(Token = "0x2000185")]
	public class EncryptionUtility
	{
		[Token(Token = "0x6000D18")]
		[Address(RVA = "0x1169D34", Offset = "0x1169D34", VA = "0x1169D34")]
		public static string Encrypt(string plainText, string password)
		{
			return null;
		}

		[Token(Token = "0x6000D19")]
		[Address(RVA = "0x116A294", Offset = "0x116A294", VA = "0x116A294")]
		public static bool TryDecrypt(string cipherText, string password, out string plainText)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D1A")]
		[Address(RVA = "0x116A7B0", Offset = "0x116A7B0", VA = "0x116A7B0")]
		public EncryptionUtility()
		{
		}
	}
	[Token(Token = "0x2000186")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA07648", Offset = "0xA07648")]
	public class PlayerPrefsSavedGameDataStorer : SavedGameDataStorer
	{
		[Token(Token = "0x4000925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA169F4", Offset = "0xA169F4")]
		[SerializeField]
		private string m_playerPrefsKeyBase;

		[Token(Token = "0x4000926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool encrypt;

		[Token(Token = "0x4000927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string encryptionPassword;

		[Token(Token = "0x4000928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA16A40", Offset = "0xA16A40")]
		[SerializeField]
		private bool m_debug;

		[Token(Token = "0x1700011D")]
		public string playerPrefsKeyBase
		{
			[Token(Token = "0x6000D1B")]
			[Address(RVA = "0x13BCA5C", Offset = "0x13BCA5C", VA = "0x13BCA5C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D1C")]
			[Address(RVA = "0x13BCA64", Offset = "0x13BCA64", VA = "0x13BCA64")]
			set
			{
			}
		}

		[Token(Token = "0x1700011E")]
		public bool debug
		{
			[Token(Token = "0x6000D1D")]
			[Address(RVA = "0x13BCA6C", Offset = "0x13BCA6C", VA = "0x13BCA6C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000D1E")]
		[Address(RVA = "0x13BCAE8", Offset = "0x13BCAE8", VA = "0x13BCAE8")]
		public string GetPlayerPrefsKey(int slotNumber)
		{
			return null;
		}

		[Token(Token = "0x6000D1F")]
		[Address(RVA = "0x13BCB60", Offset = "0x13BCB60", VA = "0x13BCB60", Slot = "6")]
		public override bool HasDataInSlot(int slotNumber)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D20")]
		[Address(RVA = "0x13BCB78", Offset = "0x13BCB78", VA = "0x13BCB78", Slot = "7")]
		public override void StoreSavedGameData(int slotNumber, SavedGameData savedGameData)
		{
		}

		[Token(Token = "0x6000D21")]
		[Address(RVA = "0x13BCCAC", Offset = "0x13BCCAC", VA = "0x13BCCAC", Slot = "8")]
		public override SavedGameData RetrieveSavedGameData(int slotNumber)
		{
			return null;
		}

		[Token(Token = "0x6000D22")]
		[Address(RVA = "0x13BCF04", Offset = "0x13BCF04", VA = "0x13BCF04", Slot = "9")]
		public override void DeleteSavedGameData(int slotNumber)
		{
		}

		[Token(Token = "0x6000D23")]
		[Address(RVA = "0x13BCF24", Offset = "0x13BCF24", VA = "0x13BCF24")]
		public PlayerPrefsSavedGameDataStorer()
		{
		}
	}
	[Token(Token = "0x2000187")]
	public abstract class SavedGameDataStorer : MonoBehaviour
	{
		[Token(Token = "0x200056E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D658", Offset = "0xA0D658")]
		private sealed class <StoreSavedGameDataAsync>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SavedGameDataStorer <>4__this;

			[Token(Token = "0x4001C69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int slotNumber;

			[Token(Token = "0x4001C6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SavedGameData savedGameData;

			[Token(Token = "0x170004EC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60028A5")]
				[Address(RVA = "0x13C5F7C", Offset = "0x13C5F7C", VA = "0x13C5F7C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004ED")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60028A7")]
				[Address(RVA = "0x13C5FE4", Offset = "0x13C5FE4", VA = "0x13C5FE4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60028A2")]
			[Address(RVA = "0x13C5EE8", Offset = "0x13C5EE8", VA = "0x13C5EE8")]
			[DebuggerHidden]
			public <StoreSavedGameDataAsync>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x60028A3")]
			[Address(RVA = "0x13C5F14", Offset = "0x13C5F14", VA = "0x13C5F14", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60028A4")]
			[Address(RVA = "0x13C5F18", Offset = "0x13C5F18", VA = "0x13C5F18", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60028A6")]
			[Address(RVA = "0x13C5F84", Offset = "0x13C5F84", VA = "0x13C5F84", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA16A8C", Offset = "0xA16A8C")]
		private float <progress>k__BackingField;

		[Token(Token = "0x1700011F")]
		public virtual float progress
		{
			[Token(Token = "0x6000D24")]
			[Address(RVA = "0x13C5E50", Offset = "0x13C5E50", VA = "0x13C5E50", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA296B0", Offset = "0xA296B0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D25")]
			[Address(RVA = "0x13C5E58", Offset = "0x13C5E58", VA = "0x13C5E58", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA296C0", Offset = "0xA296C0")]
			protected set
			{
			}
		}

		[Token(Token = "0x6000D26")]
		public abstract bool HasDataInSlot(int slotNumber);

		[Token(Token = "0x6000D27")]
		public abstract void StoreSavedGameData(int slotNumber, SavedGameData savedGameData);

		[Token(Token = "0x6000D28")]
		public abstract SavedGameData RetrieveSavedGameData(int slotNumber);

		[Token(Token = "0x6000D29")]
		public abstract void DeleteSavedGameData(int slotNumber);

		[Token(Token = "0x6000D2A")]
		[Address(RVA = "0x13C5E60", Offset = "0x13C5E60", VA = "0x13C5E60", Slot = "10")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA296D0", Offset = "0xA296D0")]
		public virtual IEnumerator StoreSavedGameDataAsync(int slotNumber, SavedGameData savedGameData)
		{
			return null;
		}

		[Token(Token = "0x6000D2B")]
		[Address(RVA = "0x13BCF8C", Offset = "0x13BCF8C", VA = "0x13BCF8C")]
		protected SavedGameDataStorer()
		{
		}
	}
	[Token(Token = "0x2000188")]
	public abstract class SceneTransitionManager : MonoBehaviour
	{
		[Token(Token = "0x200056F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D668", Offset = "0xA0D668")]
		private sealed class <LeaveScene>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x170004EE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60028AB")]
				[Address(RVA = "0x13C6C8C", Offset = "0x13C6C8C", VA = "0x13C6C8C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004EF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60028AD")]
				[Address(RVA = "0x13C6CF4", Offset = "0x13C6CF4", VA = "0x13C6CF4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60028A8")]
			[Address(RVA = "0x13C6B24", Offset = "0x13C6B24", VA = "0x13C6B24")]
			[DebuggerHidden]
			public <LeaveScene>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x60028A9")]
			[Address(RVA = "0x13C6C70", Offset = "0x13C6C70", VA = "0x13C6C70", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60028AA")]
			[Address(RVA = "0x13C6C74", Offset = "0x13C6C74", VA = "0x13C6C74", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60028AC")]
			[Address(RVA = "0x13C6C94", Offset = "0x13C6C94", VA = "0x13C6C94", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000570")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D678", Offset = "0xA0D678")]
		private sealed class <EnterScene>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x170004F0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60028B1")]
				[Address(RVA = "0x13C6C00", Offset = "0x13C6C00", VA = "0x13C6C00", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004F1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60028B3")]
				[Address(RVA = "0x13C6C68", Offset = "0x13C6C68", VA = "0x13C6C68", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60028AE")]
			[Address(RVA = "0x13C6BB0", Offset = "0x13C6BB0", VA = "0x13C6BB0")]
			[DebuggerHidden]
			public <EnterScene>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x60028AF")]
			[Address(RVA = "0x13C6BE4", Offset = "0x13C6BE4", VA = "0x13C6BE4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60028B0")]
			[Address(RVA = "0x13C6BE8", Offset = "0x13C6BE8", VA = "0x13C6BE8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60028B2")]
			[Address(RVA = "0x13C6C08", Offset = "0x13C6C08", VA = "0x13C6C08", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6000D2C")]
		[Address(RVA = "0x13C6AC4", Offset = "0x13C6AC4", VA = "0x13C6AC4", Slot = "4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA29734", Offset = "0xA29734")]
		public virtual IEnumerator LeaveScene()
		{
			return null;
		}

		[Token(Token = "0x6000D2D")]
		[Address(RVA = "0x13C6B50", Offset = "0x13C6B50", VA = "0x13C6B50", Slot = "5")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA29798", Offset = "0xA29798")]
		public virtual IEnumerator EnterScene()
		{
			return null;
		}

		[Token(Token = "0x6000D2E")]
		[Address(RVA = "0x13C6BDC", Offset = "0x13C6BDC", VA = "0x13C6BDC")]
		protected SceneTransitionManager()
		{
		}
	}
	[Token(Token = "0x2000189")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA07680", Offset = "0xA07680")]
	public class StandardSceneTransitionManager : SceneTransitionManager
	{
		[Serializable]
		[Token(Token = "0x2000571")]
		public class TransitionInfo
		{
			[Token(Token = "0x4001C6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA24298", Offset = "0xA24298")]
			public Animator animator;

			[Token(Token = "0x4001C70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA242D0", Offset = "0xA242D0")]
			public string trigger;

			[Token(Token = "0x4001C71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA24308", Offset = "0xA24308")]
			public float animationDuration;

			[Token(Token = "0x4001C72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA24340", Offset = "0xA24340")]
			public float minTransitionDuration;

			[Token(Token = "0x4001C73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UnityEvent onTransitionStart;

			[Token(Token = "0x4001C74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public UnityEvent onTransitionEnd;

			[Token(Token = "0x60028B4")]
			[Address(RVA = "0x13C8190", Offset = "0x13C8190", VA = "0x13C8190")]
			public void TriggerAnimation()
			{
			}

			[Token(Token = "0x60028B5")]
			[Address(RVA = "0x13C7F5C", Offset = "0x13C7F5C", VA = "0x13C7F5C")]
			public TransitionInfo()
			{
			}
		}

		[Token(Token = "0x2000572")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D688", Offset = "0xA0D688")]
		private sealed class <LeaveScene>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public StandardSceneTransitionManager <>4__this;

			[Token(Token = "0x4001C78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <minAnimationTime>5__2;

			[Token(Token = "0x4001C79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <minEndTime>5__3;

			[Token(Token = "0x170004F2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60028B9")]
				[Address(RVA = "0x13C84A8", Offset = "0x13C84A8", VA = "0x13C84A8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004F3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60028BB")]
				[Address(RVA = "0x13C8510", Offset = "0x13C8510", VA = "0x13C8510", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60028B6")]
			[Address(RVA = "0x13C7E0C", Offset = "0x13C7E0C", VA = "0x13C7E0C")]
			[DebuggerHidden]
			public <LeaveScene>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x60028B7")]
			[Address(RVA = "0x13C82A8", Offset = "0x13C82A8", VA = "0x13C82A8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60028B8")]
			[Address(RVA = "0x13C82AC", Offset = "0x13C82AC", VA = "0x13C82AC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60028BA")]
			[Address(RVA = "0x13C84B0", Offset = "0x13C84B0", VA = "0x13C84B0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000573")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D698", Offset = "0xA0D698")]
		private sealed class <EnterScene>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public StandardSceneTransitionManager <>4__this;

			[Token(Token = "0x4001C7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <minAnimationTime>5__2;

			[Token(Token = "0x4001C7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <minEndTime>5__3;

			[Token(Token = "0x170004F4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60028BF")]
				[Address(RVA = "0x13C8238", Offset = "0x13C8238", VA = "0x13C8238", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004F5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60028C1")]
				[Address(RVA = "0x13C82A0", Offset = "0x13C82A0", VA = "0x13C82A0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60028BC")]
			[Address(RVA = "0x13C7EA8", Offset = "0x13C7EA8", VA = "0x13C7EA8")]
			[DebuggerHidden]
			public <EnterScene>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x60028BD")]
			[Address(RVA = "0x13C7FE4", Offset = "0x13C7FE4", VA = "0x13C7FE4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60028BE")]
			[Address(RVA = "0x13C7FE8", Offset = "0x13C7FE8", VA = "0x13C7FE8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60028C0")]
			[Address(RVA = "0x13C8240", Offset = "0x13C8240", VA = "0x13C8240", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400092A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA16A9C", Offset = "0xA16A9C")]
		public bool pauseDuringTransition;

		[Token(Token = "0x400092B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA16AD4", Offset = "0xA16AD4")]
		public TransitionInfo leaveSceneTransition;

		[Token(Token = "0x400092C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA16B0C", Offset = "0xA16B0C")]
		public string loadingSceneName;

		[Token(Token = "0x400092D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA16B44", Offset = "0xA16B44")]
		public TransitionInfo enterSceneTransition;

		[Token(Token = "0x6000D2F")]
		[Address(RVA = "0x13C7D9C", Offset = "0x13C7D9C", VA = "0x13C7D9C", Slot = "4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA297FC", Offset = "0xA297FC")]
		public override IEnumerator LeaveScene()
		{
			return null;
		}

		[Token(Token = "0x6000D30")]
		[Address(RVA = "0x13C7E38", Offset = "0x13C7E38", VA = "0x13C7E38", Slot = "5")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA29860", Offset = "0xA29860")]
		public override IEnumerator EnterScene()
		{
			return null;
		}

		[Token(Token = "0x6000D31")]
		[Address(RVA = "0x13C7ED4", Offset = "0x13C7ED4", VA = "0x13C7ED4")]
		public StandardSceneTransitionManager()
		{
		}
	}
	[Token(Token = "0x200018A")]
	public enum EncodingType
	{
		[Token(Token = "0x400092F")]
		Default,
		[Token(Token = "0x4000930")]
		ASCII,
		[Token(Token = "0x4000931")]
		Unicode,
		[Token(Token = "0x4000932")]
		UTF7,
		[Token(Token = "0x4000933")]
		UTF8,
		[Token(Token = "0x4000934")]
		UTF32,
		[Token(Token = "0x4000935")]
		ISO_8859_1
	}
	[Token(Token = "0x200018B")]
	public static class EncodingTypeTools
	{
		[Token(Token = "0x6000D32")]
		[Address(RVA = "0x116A720", Offset = "0x116A720", VA = "0x116A720")]
		public static Encoding GetEncoding(EncodingType encodingType)
		{
			return null;
		}
	}
	[Token(Token = "0x200018C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA076B8", Offset = "0xA076B8")]
	public class GlobalTextTable : MonoBehaviour
	{
		[Token(Token = "0x4000936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA16B7C", Offset = "0xA16B7C")]
		[SerializeField]
		private TextTable m_textTable;

		[Token(Token = "0x4000937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static GlobalTextTable s_instance;

		[Token(Token = "0x17000120")]
		public static GlobalTextTable instance
		{
			[Token(Token = "0x6000D36")]
			[Address(RVA = "0x116BAE4", Offset = "0x116BAE4", VA = "0x116BAE4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000121")]
		public static TextTable textTable
		{
			[Token(Token = "0x6000D37")]
			[Address(RVA = "0x116BB4C", Offset = "0x116BB4C", VA = "0x116BB4C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D38")]
			[Address(RVA = "0x116BCA0", Offset = "0x116BCA0", VA = "0x116BCA0")]
			set
			{
			}
		}

		[Token(Token = "0x17000122")]
		public static string currentLanguage
		{
			[Token(Token = "0x6000D39")]
			[Address(RVA = "0x116BEBC", Offset = "0x116BEBC", VA = "0x116BEBC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D3A")]
			[Address(RVA = "0x116BF2C", Offset = "0x116BF2C", VA = "0x116BF2C")]
			set
			{
			}
		}

		[Token(Token = "0x6000D33")]
		[Address(RVA = "0x116B8DC", Offset = "0x116B8DC", VA = "0x116B8DC")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xA298C4", Offset = "0xA298C4")]
		private static void InitStaticVariables()
		{
		}

		[Token(Token = "0x6000D34")]
		[Address(RVA = "0x116B944", Offset = "0x116B944", VA = "0x116B944", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000D35")]
		[Address(RVA = "0x116BA14", Offset = "0x116BA14", VA = "0x116BA14", Slot = "5")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000D3B")]
		[Address(RVA = "0x116BFA4", Offset = "0x116BFA4", VA = "0x116BFA4")]
		public static string Lookup(StringField fieldName)
		{
			return null;
		}

		[Token(Token = "0x6000D3C")]
		[Address(RVA = "0x116C040", Offset = "0x116C040", VA = "0x116C040")]
		public static string Lookup(string fieldName)
		{
			return null;
		}

		[Token(Token = "0x6000D3D")]
		[Address(RVA = "0x116C160", Offset = "0x116C160", VA = "0x116C160")]
		public GlobalTextTable()
		{
		}
	}
	[Token(Token = "0x200018D")]
	public class StringAsset : ScriptableObject
	{
		[Token(Token = "0x4000938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0xA16BC8", Offset = "0xA16BC8")]
		[SerializeField]
		private string m_text;

		[Token(Token = "0x17000123")]
		public string text
		{
			[Token(Token = "0x6000D3F")]
			[Address(RVA = "0x13C8518", Offset = "0x13C8518", VA = "0x13C8518")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D40")]
			[Address(RVA = "0x13C8520", Offset = "0x13C8520", VA = "0x13C8520")]
			set
			{
			}
		}

		[Token(Token = "0x6000D41")]
		[Address(RVA = "0x13C8528", Offset = "0x13C8528", VA = "0x13C8528", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000D42")]
		[Address(RVA = "0x13C8530", Offset = "0x13C8530", VA = "0x13C8530")]
		public StringAsset()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200018E")]
	public class StringField
	{
		[Token(Token = "0x4000939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA16C00", Offset = "0xA16C00")]
		[SerializeField]
		private string m_text;

		[Token(Token = "0x400093A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA16C4C", Offset = "0xA16C4C")]
		[SerializeField]
		private StringAsset m_stringAsset;

		[Token(Token = "0x400093B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA16C98", Offset = "0xA16C98")]
		[SerializeField]
		private TextTable m_textTable;

		[Token(Token = "0x400093C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA16CE4", Offset = "0xA16CE4")]
		[SerializeField]
		private int m_textTableFieldID;

		[Token(Token = "0x400093D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static StringField empty;

		[Token(Token = "0x17000124")]
		public string text
		{
			[Token(Token = "0x6000D43")]
			[Address(RVA = "0x13C8538", Offset = "0x13C8538", VA = "0x13C8538")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D44")]
			[Address(RVA = "0x13C8540", Offset = "0x13C8540", VA = "0x13C8540")]
			set
			{
			}
		}

		[Token(Token = "0x17000125")]
		public StringAsset stringAsset
		{
			[Token(Token = "0x6000D45")]
			[Address(RVA = "0x13C8548", Offset = "0x13C8548", VA = "0x13C8548")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D46")]
			[Address(RVA = "0x13C8550", Offset = "0x13C8550", VA = "0x13C8550")]
			set
			{
			}
		}

		[Token(Token = "0x17000126")]
		public TextTable textTable
		{
			[Token(Token = "0x6000D47")]
			[Address(RVA = "0x13C8558", Offset = "0x13C8558", VA = "0x13C8558")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D48")]
			[Address(RVA = "0x13C8560", Offset = "0x13C8560", VA = "0x13C8560")]
			set
			{
			}
		}

		[Token(Token = "0x17000127")]
		public int textTableFieldID
		{
			[Token(Token = "0x6000D49")]
			[Address(RVA = "0x13C8568", Offset = "0x13C8568", VA = "0x13C8568")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000D4A")]
			[Address(RVA = "0x13C8570", Offset = "0x13C8570", VA = "0x13C8570")]
			set
			{
			}
		}

		[Token(Token = "0x17000128")]
		public string value
		{
			[Token(Token = "0x6000D4B")]
			[Address(RVA = "0x13C8578", Offset = "0x13C8578", VA = "0x13C8578")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D4C")]
			[Address(RVA = "0x13C8944", Offset = "0x13C8944", VA = "0x13C8944")]
			set
			{
			}
		}

		[Token(Token = "0x6000D4D")]
		[Address(RVA = "0x13C89FC", Offset = "0x13C89FC", VA = "0x13C89FC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000D4E")]
		[Address(RVA = "0x13C8A00", Offset = "0x13C8A00", VA = "0x13C8A00")]
		public StringField()
		{
		}

		[Token(Token = "0x6000D4F")]
		[Address(RVA = "0x13C8A6C", Offset = "0x13C8A6C", VA = "0x13C8A6C")]
		public StringField(string text)
		{
		}

		[Token(Token = "0x6000D50")]
		[Address(RVA = "0x13C8AA0", Offset = "0x13C8AA0", VA = "0x13C8AA0")]
		public StringField(StringAsset stringAsset)
		{
		}

		[Token(Token = "0x6000D51")]
		[Address(RVA = "0x13C8B18", Offset = "0x13C8B18", VA = "0x13C8B18")]
		public StringField(TextTable textTable, int fieldID)
		{
		}

		[Token(Token = "0x6000D52")]
		[Address(RVA = "0x13C8B94", Offset = "0x13C8B94", VA = "0x13C8B94")]
		public StringField(StringField source)
		{
		}

		[Token(Token = "0x6000D53")]
		[Address(RVA = "0x13C8CC0", Offset = "0x13C8CC0", VA = "0x13C8CC0", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D54")]
		[Address(RVA = "0x13C8E48", Offset = "0x13C8E48", VA = "0x13C8E48", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000D55")]
		[Address(RVA = "0x13C8E6C", Offset = "0x13C8E6C", VA = "0x13C8E6C")]
		public static bool IsNullOrEmpty(StringField stringField)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D56")]
		[Address(RVA = "0x13C8E90", Offset = "0x13C8E90", VA = "0x13C8E90")]
		public static string GetStringValue(StringField stringField)
		{
			return null;
		}
	}
	[Token(Token = "0x200018F")]
	public class StringFieldTextAreaAttribute : PropertyAttribute
	{
		[Token(Token = "0x400093E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool expandHeight;

		[Token(Token = "0x6000D58")]
		[Address(RVA = "0x13C8F58", Offset = "0x13C8F58", VA = "0x13C8F58")]
		public StringFieldTextAreaAttribute(bool expandHeight = true)
		{
		}
	}
	[Token(Token = "0x2000190")]
	public class TextTable : ScriptableObject, ISerializationCallbackReceiver
	{
		[Token(Token = "0x2000574")]
		protected struct LanguageKeyValuePair
		{
			[Token(Token = "0x4001C7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string key;

			[Token(Token = "0x4001C80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int value;

			[Token(Token = "0x60028C2")]
			[Address(RVA = "0xB90750", Offset = "0xB90750", VA = "0xB90750")]
			public LanguageKeyValuePair(string key, int value)
			{
			}
		}

		[Token(Token = "0x2000575")]
		protected struct FieldKeyValuePair
		{
			[Token(Token = "0x4001C81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int key;

			[Token(Token = "0x4001C82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public TextTableField value;

			[Token(Token = "0x60028C3")]
			[Address(RVA = "0xB906B4", Offset = "0xB906B4", VA = "0xB906B4")]
			public FieldKeyValuePair(int key, TextTableField value)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000576")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D6A8", Offset = "0xA0D6A8")]
		private sealed class <>c
		{
			[Token(Token = "0x4001C83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001C84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<LanguageKeyValuePair> <>9__39_0;

			[Token(Token = "0x4001C85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Comparison<FieldKeyValuePair> <>9__69_0;

			[Token(Token = "0x60028C5")]
			[Address(RVA = "0x13CC398", Offset = "0x13CC398", VA = "0x13CC398")]
			public <>c()
			{
			}

			[Token(Token = "0x60028C6")]
			[Address(RVA = "0x13CC3A0", Offset = "0x13CC3A0", VA = "0x13CC3A0")]
			internal int <SortLanguages>b__39_0(LanguageKeyValuePair a, LanguageKeyValuePair b)
			{
				return default(int);
			}

			[Token(Token = "0x60028C7")]
			[Address(RVA = "0x13CC3C0", Offset = "0x13CC3C0", VA = "0x13CC3C0")]
			internal int <SortFields>b__69_0(FieldKeyValuePair a, FieldKeyValuePair b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x2000577")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D6B8", Offset = "0xA0D6B8")]
		private sealed class <>c__DisplayClass70_0
		{
			[Token(Token = "0x4001C86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<string> order;

			[Token(Token = "0x60028C8")]
			[Address(RVA = "0x13CBD9C", Offset = "0x13CBD9C", VA = "0x13CBD9C")]
			public <>c__DisplayClass70_0()
			{
			}
		}

		[Token(Token = "0x2000578")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D6C8", Offset = "0xA0D6C8")]
		private sealed class <>c__DisplayClass70_1
		{
			[Token(Token = "0x4001C87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int i;

			[Token(Token = "0x4001C88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass70_0 CS$<>8__locals1;

			[Token(Token = "0x60028C9")]
			[Address(RVA = "0x13CBDA4", Offset = "0x13CBDA4", VA = "0x13CBDA4")]
			public <>c__DisplayClass70_1()
			{
			}

			[Token(Token = "0x60028CA")]
			[Address(RVA = "0x13CC3EC", Offset = "0x13CC3EC", VA = "0x13CC3EC")]
			internal bool <ReorderFields>b__0(TextTableField x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400093F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int s_currentLanguageID;

		[Token(Token = "0x4000940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static bool m_useDefaultLanguageForBlankTranslations;

		[Token(Token = "0x4000941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<string, int> m_languages;

		[Token(Token = "0x4000942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<int, TextTableField> m_fields;

		[Token(Token = "0x4000943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<string> m_languageKeys;

		[Token(Token = "0x4000944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private List<int> m_languageValues;

		[Token(Token = "0x4000945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private List<int> m_fieldKeys;

		[Token(Token = "0x4000946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private List<TextTableField> m_fieldValues;

		[Token(Token = "0x4000947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private int m_nextLanguageID;

		[Token(Token = "0x4000948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private int m_nextFieldID;

		[Token(Token = "0x17000129")]
		public static bool useDefaultLanguageForBlankTranslations
		{
			[Token(Token = "0x6000D59")]
			[Address(RVA = "0x13C91B8", Offset = "0x13C91B8", VA = "0x13C91B8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D5A")]
			[Address(RVA = "0x13C9220", Offset = "0x13C9220", VA = "0x13C9220")]
			set
			{
			}
		}

		[Token(Token = "0x1700012A")]
		public static int currentLanguageID
		{
			[Token(Token = "0x6000D5B")]
			[Address(RVA = "0x13C9290", Offset = "0x13C9290", VA = "0x13C9290")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000D5C")]
			[Address(RVA = "0x13C92F8", Offset = "0x13C92F8", VA = "0x13C92F8")]
			set
			{
			}
		}

		[Token(Token = "0x1700012B")]
		public Dictionary<string, int> languages
		{
			[Token(Token = "0x6000D5D")]
			[Address(RVA = "0x13C9364", Offset = "0x13C9364", VA = "0x13C9364")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D5E")]
			[Address(RVA = "0x13C936C", Offset = "0x13C936C", VA = "0x13C936C")]
			set
			{
			}
		}

		[Token(Token = "0x1700012C")]
		public Dictionary<int, TextTableField> fields
		{
			[Token(Token = "0x6000D5F")]
			[Address(RVA = "0x13C9374", Offset = "0x13C9374", VA = "0x13C9374")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D60")]
			[Address(RVA = "0x13C937C", Offset = "0x13C937C", VA = "0x13C937C")]
			set
			{
			}
		}

		[Token(Token = "0x1700012D")]
		public int nextLanguageID
		{
			[Token(Token = "0x6000D61")]
			[Address(RVA = "0x13C9384", Offset = "0x13C9384", VA = "0x13C9384")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700012E")]
		public int nextFieldID
		{
			[Token(Token = "0x6000D62")]
			[Address(RVA = "0x13C938C", Offset = "0x13C938C", VA = "0x13C938C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000D63")]
		[Address(RVA = "0x13C9394", Offset = "0x13C9394", VA = "0x13C9394", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6000D64")]
		[Address(RVA = "0x13C9618", Offset = "0x13C9618", VA = "0x13C9618", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6000D65")]
		[Address(RVA = "0x13C9868", Offset = "0x13C9868", VA = "0x13C9868")]
		public bool HasLanguage(string languageName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D66")]
		[Address(RVA = "0x13C98F4", Offset = "0x13C98F4", VA = "0x13C98F4")]
		public bool HasLanguage(int languageID)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D67")]
		[Address(RVA = "0x13C9974", Offset = "0x13C9974", VA = "0x13C9974")]
		public string GetLanguageName(int languageID)
		{
			return null;
		}

		[Token(Token = "0x6000D68")]
		[Address(RVA = "0x13C9A3C", Offset = "0x13C9A3C", VA = "0x13C9A3C")]
		public int GetLanguageID(string languageName)
		{
			return default(int);
		}

		[Token(Token = "0x6000D69")]
		[Address(RVA = "0x13C9AD8", Offset = "0x13C9AD8", VA = "0x13C9AD8")]
		public string[] GetLanguageNames()
		{
			return null;
		}

		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0x13C9B8C", Offset = "0x13C9B8C", VA = "0x13C9B8C")]
		public int[] GetLanguageIDs()
		{
			return null;
		}

		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0x13C9C40", Offset = "0x13C9C40", VA = "0x13C9C40")]
		public void AddLanguage(string languageName)
		{
		}

		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0x13C9CE4", Offset = "0x13C9CE4", VA = "0x13C9CE4")]
		public void RemoveLanguage(string languageName)
		{
		}

		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0x13C9E54", Offset = "0x13C9E54", VA = "0x13C9E54")]
		public void RemoveLanguage(int languageID)
		{
		}

		[Token(Token = "0x6000D6E")]
		[Address(RVA = "0x13C9E7C", Offset = "0x13C9E7C", VA = "0x13C9E7C")]
		public void RemoveAll()
		{
		}

		[Token(Token = "0x6000D6F")]
		[Address(RVA = "0x13C9F24", Offset = "0x13C9F24", VA = "0x13C9F24")]
		public void SortLanguages()
		{
		}

		[Token(Token = "0x6000D70")]
		[Address(RVA = "0x13CA264", Offset = "0x13CA264", VA = "0x13CA264")]
		public bool HasField(int fieldID)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D71")]
		[Address(RVA = "0x13CA2CC", Offset = "0x13CA2CC", VA = "0x13CA2CC")]
		public bool HasField(string fieldName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D72")]
		[Address(RVA = "0x13CA328", Offset = "0x13CA328", VA = "0x13CA328")]
		public TextTableField GetField(int fieldID)
		{
			return null;
		}

		[Token(Token = "0x6000D73")]
		[Address(RVA = "0x13CA300", Offset = "0x13CA300", VA = "0x13CA300")]
		public TextTableField GetField(string fieldName)
		{
			return null;
		}

		[Token(Token = "0x6000D74")]
		[Address(RVA = "0x13CA3BC", Offset = "0x13CA3BC", VA = "0x13CA3BC")]
		public int GetFieldID(string fieldName)
		{
			return default(int);
		}

		[Token(Token = "0x6000D75")]
		[Address(RVA = "0x13CA480", Offset = "0x13CA480", VA = "0x13CA480")]
		public string GetFieldName(int fieldID)
		{
			return null;
		}

		[Token(Token = "0x6000D76")]
		[Address(RVA = "0x13CA52C", Offset = "0x13CA52C", VA = "0x13CA52C")]
		public bool HasFieldTextForLanguage(int fieldID, int languageID)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D77")]
		[Address(RVA = "0x13CA5C8", Offset = "0x13CA5C8", VA = "0x13CA5C8")]
		public bool HasFieldTextForLanguage(int fieldID, string languageName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D78")]
		[Address(RVA = "0x13CA5FC", Offset = "0x13CA5FC", VA = "0x13CA5FC")]
		public bool HasFieldTextForLanguage(string fieldName, int languageID)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D79")]
		[Address(RVA = "0x13CA62C", Offset = "0x13CA62C", VA = "0x13CA62C")]
		public bool HasFieldTextForLanguage(string fieldName, string languageName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D7A")]
		[Address(RVA = "0x13CA674", Offset = "0x13CA674", VA = "0x13CA674")]
		public string GetFieldTextForLanguage(int fieldID, int languageID)
		{
			return null;
		}

		[Token(Token = "0x6000D7B")]
		[Address(RVA = "0x13C8910", Offset = "0x13C8910", VA = "0x13C8910")]
		public string GetFieldTextForLanguage(int fieldID, string languageName)
		{
			return null;
		}

		[Token(Token = "0x6000D7C")]
		[Address(RVA = "0x13CA8C4", Offset = "0x13CA8C4", VA = "0x13CA8C4")]
		public string GetFieldTextForLanguage(string fieldName, int languageID)
		{
			return null;
		}

		[Token(Token = "0x6000D7D")]
		[Address(RVA = "0x13CAA4C", Offset = "0x13CAA4C", VA = "0x13CAA4C")]
		public string GetFieldTextForLanguage(string fieldName, string languageName)
		{
			return null;
		}

		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0x13CAA80", Offset = "0x13CAA80", VA = "0x13CAA80")]
		public string GetFieldText(int fieldID)
		{
			return null;
		}

		[Token(Token = "0x6000D7F")]
		[Address(RVA = "0x13CAB3C", Offset = "0x13CAB3C", VA = "0x13CAB3C")]
		public string GetFieldText(string fieldName)
		{
			return null;
		}

		[Token(Token = "0x6000D80")]
		[Address(RVA = "0x13CABF8", Offset = "0x13CABF8", VA = "0x13CABF8")]
		public int[] GetFieldIDs()
		{
			return null;
		}

		[Token(Token = "0x6000D81")]
		[Address(RVA = "0x13CACAC", Offset = "0x13CACAC", VA = "0x13CACAC")]
		public string[] GetFieldNames()
		{
			return null;
		}

		[Token(Token = "0x6000D82")]
		[Address(RVA = "0x13CAE10", Offset = "0x13CAE10", VA = "0x13CAE10")]
		public void AddField(string fieldName)
		{
		}

		[Token(Token = "0x6000D83")]
		[Address(RVA = "0x13CAFA8", Offset = "0x13CAFA8", VA = "0x13CAFA8")]
		public void SetFieldTextForLanguage(int fieldID, int languageID, string text)
		{
		}

		[Token(Token = "0x6000D84")]
		[Address(RVA = "0x13CB4B0", Offset = "0x13CB4B0", VA = "0x13CB4B0")]
		public void SetFieldTextForLanguage(string fieldName, int languageID, string text)
		{
		}

		[Token(Token = "0x6000D85")]
		[Address(RVA = "0x13CB4F0", Offset = "0x13CB4F0", VA = "0x13CB4F0")]
		public void SetFieldTextForLanguage(int fieldID, string languageName, string text)
		{
		}

		[Token(Token = "0x6000D86")]
		[Address(RVA = "0x13CB534", Offset = "0x13CB534", VA = "0x13CB534")]
		public void SetFieldTextForLanguage(string fieldName, string languageName, string text)
		{
		}

		[Token(Token = "0x6000D87")]
		[Address(RVA = "0x13CB584", Offset = "0x13CB584", VA = "0x13CB584")]
		public void RemoveField(int fieldID)
		{
		}

		[Token(Token = "0x6000D88")]
		[Address(RVA = "0x13CB5EC", Offset = "0x13CB5EC", VA = "0x13CB5EC")]
		public void RemoveField(string fieldName)
		{
		}

		[Token(Token = "0x6000D89")]
		[Address(RVA = "0x13C9DA4", Offset = "0x13C9DA4", VA = "0x13C9DA4")]
		private void RemoveLanguageFromFields(int languageID)
		{
		}

		[Token(Token = "0x6000D8A")]
		[Address(RVA = "0x13CB6CC", Offset = "0x13CB6CC", VA = "0x13CB6CC")]
		public void RemoveAllFields()
		{
		}

		[Token(Token = "0x6000D8B")]
		[Address(RVA = "0x13CB734", Offset = "0x13CB734", VA = "0x13CB734")]
		public void InsertField(int index, string fieldName)
		{
		}

		[Token(Token = "0x6000D8C")]
		[Address(RVA = "0x13CB858", Offset = "0x13CB858", VA = "0x13CB858")]
		public void SortFields()
		{
		}

		[Token(Token = "0x6000D8D")]
		[Address(RVA = "0x13CBAEC", Offset = "0x13CBAEC", VA = "0x13CBAEC")]
		public void ReorderFields(List<string> order)
		{
		}

		[Token(Token = "0x6000D8E")]
		[Address(RVA = "0x13CBDAC", Offset = "0x13CBDAC", VA = "0x13CBDAC")]
		public void ImportOtherTextTable(TextTable other)
		{
		}

		[Token(Token = "0x6000D8F")]
		[Address(RVA = "0x13CC19C", Offset = "0x13CC19C", VA = "0x13CC19C")]
		public TextTable()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000191")]
	public class TextTableField : ISerializationCallbackReceiver
	{
		[Token(Token = "0x4000949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private string m_fieldName;

		[Token(Token = "0x400094A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<int, string> m_texts;

		[Token(Token = "0x400094B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<int> m_keys;

		[Token(Token = "0x400094C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<string> m_values;

		[Token(Token = "0x1700012F")]
		public string fieldName
		{
			[Token(Token = "0x6000D91")]
			[Address(RVA = "0x13CC480", Offset = "0x13CC480", VA = "0x13CC480")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D92")]
			[Address(RVA = "0x13CC488", Offset = "0x13CC488", VA = "0x13CC488")]
			set
			{
			}
		}

		[Token(Token = "0x17000130")]
		public Dictionary<int, string> texts
		{
			[Token(Token = "0x6000D93")]
			[Address(RVA = "0x13CC490", Offset = "0x13CC490", VA = "0x13CC490")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D94")]
			[Address(RVA = "0x13CC498", Offset = "0x13CC498", VA = "0x13CC498")]
			set
			{
			}
		}

		[Token(Token = "0x6000D95")]
		[Address(RVA = "0x13CC4A0", Offset = "0x13CC4A0", VA = "0x13CC4A0")]
		public TextTableField()
		{
		}

		[Token(Token = "0x6000D96")]
		[Address(RVA = "0x13CAED4", Offset = "0x13CAED4", VA = "0x13CAED4")]
		public TextTableField(string fieldName)
		{
		}

		[Token(Token = "0x6000D97")]
		[Address(RVA = "0x13CC560", Offset = "0x13CC560", VA = "0x13CC560", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6000D98")]
		[Address(RVA = "0x13CC6D8", Offset = "0x13CC6D8", VA = "0x13CC6D8", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6000D99")]
		[Address(RVA = "0x13CA560", Offset = "0x13CA560", VA = "0x13CA560")]
		public bool HasTextForLanguage(int languageID)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D9A")]
		[Address(RVA = "0x13CA820", Offset = "0x13CA820", VA = "0x13CA820")]
		public string GetTextForLanguage(int languageID)
		{
			return null;
		}

		[Token(Token = "0x6000D9B")]
		[Address(RVA = "0x13CB3F4", Offset = "0x13CB3F4", VA = "0x13CB3F4")]
		public void SetTextForLanguage(int languageID, string text)
		{
		}

		[Token(Token = "0x6000D9C")]
		[Address(RVA = "0x13CB664", Offset = "0x13CB664", VA = "0x13CB664")]
		public void RemoveLanguage(int languageID)
		{
		}
	}
	[Token(Token = "0x2000192")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA076F0", Offset = "0xA076F0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA076F0", Offset = "0xA076F0")]
	public class DeselectPreviousOnPointerEnter : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IDeselectHandler
	{
		[Token(Token = "0x6000D9D")]
		[Address(RVA = "0x1424638", Offset = "0x1424638", VA = "0x1424638", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000D9E")]
		[Address(RVA = "0x14246FC", Offset = "0x14246FC", VA = "0x14246FC", Slot = "5")]
		public void OnDeselect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6000D9F")]
		[Address(RVA = "0x1424768", Offset = "0x1424768", VA = "0x1424768")]
		public DeselectPreviousOnPointerEnter()
		{
		}
	}
	[Token(Token = "0x2000193")]
	public enum InputDevice
	{
		[Token(Token = "0x400094E")]
		Joystick,
		[Token(Token = "0x400094F")]
		Keyboard,
		[Token(Token = "0x4000950")]
		Mouse,
		[Token(Token = "0x4000951")]
		Touch
	}
	[Token(Token = "0x2000194")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA07778", Offset = "0xA07778")]
	public class InputDeviceManager : MonoBehaviour
	{
		[Token(Token = "0x2000579")]
		public delegate bool GetButtonDownDelegate(string buttonName);

		[Token(Token = "0x200057A")]
		public delegate float GetAxisDelegate(string axisName);

		[Token(Token = "0x200057B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D6D8", Offset = "0xA0D6D8")]
		private sealed class <BrieflyIgnoreMouseMovementCoroutine>d__60 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public InputDeviceManager <>4__this;

			[Token(Token = "0x170004F6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60028D6")]
				[Address(RVA = "0x116ECC0", Offset = "0x116ECC0", VA = "0x116ECC0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004F7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60028D8")]
				[Address(RVA = "0x116ED28", Offset = "0x116ED28", VA = "0x116ED28", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60028D3")]
			[Address(RVA = "0x116E888", Offset = "0x116E888", VA = "0x116E888")]
			[DebuggerHidden]
			public <BrieflyIgnoreMouseMovementCoroutine>d__60(int <>1__state)
			{
			}

			[Token(Token = "0x60028D4")]
			[Address(RVA = "0x116EBB8", Offset = "0x116EBB8", VA = "0x116EBB8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60028D5")]
			[Address(RVA = "0x116EBBC", Offset = "0x116EBBC", VA = "0x116EBBC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60028D7")]
			[Address(RVA = "0x116ECC8", Offset = "0x116ECC8", VA = "0x116ECC8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200057C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D6E8", Offset = "0xA0D6E8")]
		private sealed class <ForceCursorAfterOneFrameCoroutine>d__65 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool visible;

			[Token(Token = "0x170004F8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60028DC")]
				[Address(RVA = "0x116EDE0", Offset = "0x116EDE0", VA = "0x116EDE0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004F9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60028DE")]
				[Address(RVA = "0x116EE48", Offset = "0x116EE48", VA = "0x116EE48", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60028D9")]
			[Address(RVA = "0x116E984", Offset = "0x116E984", VA = "0x116E984")]
			[DebuggerHidden]
			public <ForceCursorAfterOneFrameCoroutine>d__65(int <>1__state)
			{
			}

			[Token(Token = "0x60028DA")]
			[Address(RVA = "0x116ED30", Offset = "0x116ED30", VA = "0x116ED30", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60028DB")]
			[Address(RVA = "0x116ED34", Offset = "0x116ED34", VA = "0x116ED34", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60028DD")]
			[Address(RVA = "0x116EDE8", Offset = "0x116EDE8", VA = "0x116EDE8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA16DC0", Offset = "0xA16DC0")]
		public InputDevice inputDevice;

		[Token(Token = "0x4000953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA16DF8", Offset = "0xA16DF8")]
		public KeyCode[] joystickKeyCodesToCheck;

		[Token(Token = "0x4000954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA16E30", Offset = "0xA16E30")]
		public string[] joystickButtonsToCheck;

		[Token(Token = "0x4000955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA16E68", Offset = "0xA16E68")]
		public string[] joystickAxesToCheck;

		[Token(Token = "0x4000956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA16EA0", Offset = "0xA16EA0")]
		public float joystickAxisThreshold;

		[Token(Token = "0x4000957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA16ED8", Offset = "0xA16ED8")]
		public string[] keyButtonsToCheck;

		[Token(Token = "0x4000958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA16F10", Offset = "0xA16F10")]
		public KeyCode[] keyCodesToCheck;

		[Token(Token = "0x4000959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA16F48", Offset = "0xA16F48")]
		public bool alwaysAutoFocus;

		[Token(Token = "0x400095A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA16F80", Offset = "0xA16F80")]
		public bool detectMouseControl;

		[Token(Token = "0x400095B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA16FB8", Offset = "0xA16FB8")]
		public float mouseMoveThreshold;

		[Token(Token = "0x400095C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA16FF0", Offset = "0xA16FF0")]
		public bool controlCursorState;

		[Token(Token = "0x400095D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA17028", Offset = "0xA17028")]
		public bool enforceCursorOnPause;

		[Token(Token = "0x400095E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA17060", Offset = "0xA17060")]
		public bool controlGraphicRaycasters;

		[Token(Token = "0x400095F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA17098", Offset = "0xA17098")]
		public KeyCode[] backKeyCodes;

		[Token(Token = "0x4000960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA170D0", Offset = "0xA170D0")]
		public string[] backButtons;

		[Token(Token = "0x4000961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA17108", Offset = "0xA17108")]
		public string submitButton;

		[Token(Token = "0x4000962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA17140", Offset = "0xA17140")]
		public bool singleton;

		[Token(Token = "0x4000963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public UnityEvent onUseKeyboard;

		[Token(Token = "0x4000964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public UnityEvent onUseJoystick;

		[Token(Token = "0x4000965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public UnityEvent onUseMouse;

		[Token(Token = "0x4000966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public UnityEvent onUseTouch;

		[Token(Token = "0x4000967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public GetButtonDownDelegate GetButtonDown;

		[Token(Token = "0x4000968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public GetButtonDownDelegate GetButtonUp;

		[Token(Token = "0x4000969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public GetAxisDelegate GetInputAxis;

		[Token(Token = "0x400096A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Vector3 m_lastMousePosition;

		[Token(Token = "0x400096B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private bool m_ignoreMouse;

		[Token(Token = "0x400096C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC5")]
		private bool m_inputAllowed;

		[Token(Token = "0x400096D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InputDeviceManager m_instance;

		[Token(Token = "0x17000131")]
		public static InputDeviceManager instance
		{
			[Token(Token = "0x6000DA0")]
			[Address(RVA = "0x116C1A8", Offset = "0x116C1A8", VA = "0x116C1A8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DA1")]
			[Address(RVA = "0x116C210", Offset = "0x116C210", VA = "0x116C210")]
			set
			{
			}
		}

		[Token(Token = "0x17000132")]
		public static InputDevice currentInputDevice
		{
			[Token(Token = "0x6000DA2")]
			[Address(RVA = "0x116C27C", Offset = "0x116C27C", VA = "0x116C27C")]
			get
			{
				return default(InputDevice);
			}
		}

		[Token(Token = "0x17000133")]
		public static bool deviceUsesCursor
		{
			[Token(Token = "0x6000DA3")]
			[Address(RVA = "0x116C354", Offset = "0x116C354", VA = "0x116C354")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000134")]
		public static bool autoFocus
		{
			[Token(Token = "0x6000DA4")]
			[Address(RVA = "0x116C3BC", Offset = "0x116C3BC", VA = "0x116C3BC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000135")]
		public static bool isBackButtonDown
		{
			[Token(Token = "0x6000DA5")]
			[Address(RVA = "0x116C560", Offset = "0x116C560", VA = "0x116C560")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000136")]
		public static bool isInputAllowed
		{
			[Token(Token = "0x6000DA6")]
			[Address(RVA = "0x116C84C", Offset = "0x116C84C", VA = "0x116C84C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DA7")]
			[Address(RVA = "0x116C92C", Offset = "0x116C92C", VA = "0x116C92C")]
			set
			{
			}
		}

		[Token(Token = "0x6000DA8")]
		[Address(RVA = "0x116CA0C", Offset = "0x116CA0C", VA = "0x116CA0C")]
		public static bool IsButtonDown(string buttonName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DA9")]
		[Address(RVA = "0x116D000", Offset = "0x116D000", VA = "0x116D000")]
		public static bool IsButtonUp(string buttonName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DAA")]
		[Address(RVA = "0x116D254", Offset = "0x116D254", VA = "0x116D254")]
		public static bool IsKeyDown(KeyCode keyCode)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DAB")]
		[Address(RVA = "0x116D2F4", Offset = "0x116D2F4", VA = "0x116D2F4")]
		public static bool IsAnyKeyDown()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DAC")]
		[Address(RVA = "0x116D38C", Offset = "0x116D38C", VA = "0x116D38C")]
		public static float GetAxis(string axisName)
		{
			return default(float);
		}

		[Token(Token = "0x6000DAD")]
		[Address(RVA = "0x116D978", Offset = "0x116D978", VA = "0x116D978")]
		public static Vector3 GetMousePosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000DAE")]
		[Address(RVA = "0x116DA30", Offset = "0x116DA30", VA = "0x116DA30")]
		public void Awake()
		{
		}

		[Token(Token = "0x6000DAF")]
		[Address(RVA = "0x116DC9C", Offset = "0x116DC9C", VA = "0x116DC9C")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6000DB0")]
		[Address(RVA = "0x116DD38", Offset = "0x116DD38", VA = "0x116DD38")]
		public void Start()
		{
		}

		[Token(Token = "0x6000DB1")]
		[Address(RVA = "0x116DFEC", Offset = "0x116DFEC", VA = "0x116DFEC")]
		private void OnSceneLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x6000DB2")]
		[Address(RVA = "0x116DDC4", Offset = "0x116DDC4", VA = "0x116DDC4")]
		public void SetInputDevice(InputDevice newDevice)
		{
		}

		[Token(Token = "0x6000DB3")]
		[Address(RVA = "0x116E02C", Offset = "0x116E02C", VA = "0x116E02C")]
		private void SetGraphicRaycasters(bool deviceUsesCursor)
		{
		}

		[Token(Token = "0x6000DB4")]
		[Address(RVA = "0x116E10C", Offset = "0x116E10C", VA = "0x116E10C")]
		public void Update()
		{
		}

		[Token(Token = "0x6000DB5")]
		[Address(RVA = "0x116E528", Offset = "0x116E528", VA = "0x116E528")]
		public bool IsUsingJoystick()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0x116E19C", Offset = "0x116E19C", VA = "0x116E19C")]
		public bool IsUsingMouse()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0x116DFC0", Offset = "0x116DFC0", VA = "0x116DFC0")]
		public void BrieflyIgnoreMouseMovement()
		{
		}

		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0x116E818", Offset = "0x116E818", VA = "0x116E818")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA298D8", Offset = "0xA298D8")]
		private IEnumerator BrieflyIgnoreMouseMovementCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0x116E318", Offset = "0x116E318", VA = "0x116E318")]
		public bool IsUsingKeyboard()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0x116C63C", Offset = "0x116C63C", VA = "0x116C63C")]
		public bool IsBackButtonDown()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0x116E018", Offset = "0x116E018", VA = "0x116E018")]
		public void SetCursor(bool visible)
		{
		}

		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0x116E8B4", Offset = "0x116E8B4", VA = "0x116E8B4")]
		public void ForceCursor(bool visible)
		{
		}

		[Token(Token = "0x6000DBD")]
		[Address(RVA = "0x116E910", Offset = "0x116E910", VA = "0x116E910")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA2993C", Offset = "0xA2993C")]
		private IEnumerator ForceCursorAfterOneFrameCoroutine(bool visible)
		{
			return null;
		}

		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0x116D2EC", Offset = "0x116D2EC", VA = "0x116D2EC")]
		public static bool DefaultGetKeyDown(KeyCode keyCode)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0x116D384", Offset = "0x116D384", VA = "0x116D384")]
		public static bool DefaultGetAnyKeyDown()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0x116CB84", Offset = "0x116CB84", VA = "0x116CB84")]
		public static bool DefaultGetButtonDown(string buttonName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0x116D178", Offset = "0x116D178", VA = "0x116D178")]
		public static bool DefaultGetButtonUp(string buttonName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0x116D504", Offset = "0x116D504", VA = "0x116D504")]
		public static float DefaultGetAxis(string axisName)
		{
			return default(float);
		}

		[Token(Token = "0x6000DC3")]
		[Address(RVA = "0x116DA28", Offset = "0x116DA28", VA = "0x116DA28")]
		public static Vector3 DefaultGetMousePosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000DC4")]
		[Address(RVA = "0x116E810", Offset = "0x116E810", VA = "0x116E810")]
		public static bool DefaultGetMouseButtonDown(int buttonNumber)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DC5")]
		[Address(RVA = "0x116E9B0", Offset = "0x116E9B0", VA = "0x116E9B0")]
		public InputDeviceManager()
		{
		}
	}
	[Token(Token = "0x2000195")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA077B0", Offset = "0xA077B0")]
	public class InputDeviceMethods : MonoBehaviour
	{
		[Token(Token = "0x6000DC7")]
		[Address(RVA = "0x116EEF0", Offset = "0x116EEF0", VA = "0x116EEF0")]
		public void UseJoystick()
		{
		}

		[Token(Token = "0x6000DC8")]
		[Address(RVA = "0x116F04C", Offset = "0x116F04C", VA = "0x116F04C")]
		public void UseKeyboard()
		{
		}

		[Token(Token = "0x6000DC9")]
		[Address(RVA = "0x116F1A8", Offset = "0x116F1A8", VA = "0x116F1A8")]
		public void UseMouse()
		{
		}

		[Token(Token = "0x6000DCA")]
		[Address(RVA = "0x116F304", Offset = "0x116F304", VA = "0x116F304")]
		public void UseTouch()
		{
		}

		[Token(Token = "0x6000DCB")]
		[Address(RVA = "0x116F460", Offset = "0x116F460", VA = "0x116F460")]
		public void SetCursor(bool visible)
		{
		}

		[Token(Token = "0x6000DCC")]
		[Address(RVA = "0x116F5C8", Offset = "0x116F5C8", VA = "0x116F5C8")]
		public void ForceCursor(bool visible)
		{
		}

		[Token(Token = "0x6000DCD")]
		[Address(RVA = "0x116F728", Offset = "0x116F728", VA = "0x116F728")]
		public void BrieflyIgnoreMouseMovement()
		{
		}

		[Token(Token = "0x6000DCE")]
		[Address(RVA = "0x116F894", Offset = "0x116F894", VA = "0x116F894")]
		public void AllowInput(bool value)
		{
		}

		[Token(Token = "0x6000DCF")]
		[Address(RVA = "0x116F8F8", Offset = "0x116F8F8", VA = "0x116F8F8")]
		public InputDeviceMethods()
		{
		}
	}
	[Token(Token = "0x2000196")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA077E8", Offset = "0xA077E8")]
	public class KeepRectTransformOnscreen : MonoBehaviour
	{
		[Token(Token = "0x400096E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 originalLocalPosition;

		[Token(Token = "0x400096F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RectTransform rectTransform;

		[Token(Token = "0x6000DD0")]
		[Address(RVA = "0x116FCC8", Offset = "0x116FCC8", VA = "0x116FCC8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DD1")]
		[Address(RVA = "0x116FD44", Offset = "0x116FD44", VA = "0x116FD44")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000DD2")]
		[Address(RVA = "0x11700A0", Offset = "0x11700A0", VA = "0x11700A0")]
		public KeepRectTransformOnscreen()
		{
		}
	}
	[Token(Token = "0x2000197")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA07820", Offset = "0xA07820")]
	public class LocalizeUI : MonoBehaviour
	{
		[Token(Token = "0x4000970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA17178", Offset = "0xA17178")]
		[SerializeField]
		private TextTable m_textTable;

		[Token(Token = "0x4000971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA171C4", Offset = "0xA171C4")]
		[SerializeField]
		private string m_fieldName;

		[Token(Token = "0x4000972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_started;

		[Token(Token = "0x4000973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<string> m_fieldNames;

		[Token(Token = "0x4000974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Text m_text;

		[Token(Token = "0x4000975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Dropdown m_dropdown;

		[Token(Token = "0x4000976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TextMeshProUGUI m_textMeshProUGUI;

		[Token(Token = "0x4000977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_lookedForTMP;

		[Token(Token = "0x17000137")]
		public TextTable textTable
		{
			[Token(Token = "0x6000DD3")]
			[Address(RVA = "0x117075C", Offset = "0x117075C", VA = "0x117075C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DD4")]
			[Address(RVA = "0x11708B4", Offset = "0x11708B4", VA = "0x11708B4")]
			set
			{
			}
		}

		[Token(Token = "0x17000138")]
		public string fieldName
		{
			[Token(Token = "0x6000DD5")]
			[Address(RVA = "0x11708BC", Offset = "0x11708BC", VA = "0x11708BC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DD6")]
			[Address(RVA = "0x11708F4", Offset = "0x11708F4", VA = "0x11708F4")]
			set
			{
			}
		}

		[Token(Token = "0x17000139")]
		protected bool started
		{
			[Token(Token = "0x6000DD7")]
			[Address(RVA = "0x11708FC", Offset = "0x11708FC", VA = "0x11708FC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DD8")]
			[Address(RVA = "0x1170904", Offset = "0x1170904", VA = "0x1170904")]
			private set
			{
			}
		}

		[Token(Token = "0x1700013A")]
		protected List<string> fieldNames
		{
			[Token(Token = "0x6000DD9")]
			[Address(RVA = "0x1170910", Offset = "0x1170910", VA = "0x1170910")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DDA")]
			[Address(RVA = "0x1170918", Offset = "0x1170918", VA = "0x1170918")]
			set
			{
			}
		}

		[Token(Token = "0x1700013B")]
		public Text text
		{
			[Token(Token = "0x6000DDB")]
			[Address(RVA = "0x1170920", Offset = "0x1170920", VA = "0x1170920")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DDC")]
			[Address(RVA = "0x1170928", Offset = "0x1170928", VA = "0x1170928")]
			set
			{
			}
		}

		[Token(Token = "0x1700013C")]
		public Dropdown dropdown
		{
			[Token(Token = "0x6000DDD")]
			[Address(RVA = "0x1170930", Offset = "0x1170930", VA = "0x1170930")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DDE")]
			[Address(RVA = "0x1170938", Offset = "0x1170938", VA = "0x1170938")]
			set
			{
			}
		}

		[Token(Token = "0x1700013D")]
		public TextMeshProUGUI textMeshProUGUI
		{
			[Token(Token = "0x6000DDF")]
			[Address(RVA = "0x1170940", Offset = "0x1170940", VA = "0x1170940")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DE0")]
			[Address(RVA = "0x1170948", Offset = "0x1170948", VA = "0x1170948")]
			set
			{
			}
		}

		[Token(Token = "0x6000DE1")]
		[Address(RVA = "0x1170950", Offset = "0x1170950", VA = "0x1170950", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000DE2")]
		[Address(RVA = "0x1170964", Offset = "0x1170964", VA = "0x1170964", Slot = "5")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000DE3")]
		[Address(RVA = "0x1170970", Offset = "0x1170970", VA = "0x1170970", Slot = "6")]
		public virtual void UpdateText()
		{
		}

		[Token(Token = "0x6000DE4")]
		[Address(RVA = "0x1171504", Offset = "0x1171504", VA = "0x1171504", Slot = "7")]
		protected virtual string GetLocalizedText(string fieldName)
		{
			return null;
		}

		[Token(Token = "0x6000DE5")]
		[Address(RVA = "0x1171630", Offset = "0x1171630", VA = "0x1171630", Slot = "8")]
		public virtual void SetFieldName(string newFieldName = "")
		{
		}

		[Token(Token = "0x6000DE6")]
		[Address(RVA = "0x1171730", Offset = "0x1171730", VA = "0x1171730", Slot = "9")]
		public virtual void UpdateDropdownOptions()
		{
		}

		[Token(Token = "0x6000DE7")]
		[Address(RVA = "0x1171798", Offset = "0x1171798", VA = "0x1171798")]
		public LocalizeUI()
		{
		}

		[Token(Token = "0x6000DE8")]
		[Address(RVA = "0x1171820", Offset = "0x1171820", VA = "0x1171820")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA299A0", Offset = "0xA299A0")]
		private void <UpdateText>b__31_0(Dropdown.OptionData opt)
		{
		}
	}
	[Token(Token = "0x2000198")]
	public class UIAnimatorMonitor
	{
		[Token(Token = "0x200057D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D6F8", Offset = "0xA0D6F8")]
		private sealed class <WaitForAnimation>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIAnimatorMonitor <>4__this;

			[Token(Token = "0x4001C92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string triggerName;

			[Token(Token = "0x4001C93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool wait;

			[Token(Token = "0x4001C94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Action callback;

			[Token(Token = "0x4001C95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <timeout>5__2;

			[Token(Token = "0x4001C96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private int <goalHashID>5__3;

			[Token(Token = "0x4001C97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <oldHashId>5__4;

			[Token(Token = "0x170004FA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60028E2")]
				[Address(RVA = "0x13CDA94", Offset = "0x13CDA94", VA = "0x13CDA94", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004FB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60028E4")]
				[Address(RVA = "0x13CDAFC", Offset = "0x13CDAFC", VA = "0x13CDAFC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60028DF")]
			[Address(RVA = "0x13CD1F0", Offset = "0x13CD1F0", VA = "0x13CD1F0")]
			[DebuggerHidden]
			public <WaitForAnimation>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x60028E0")]
			[Address(RVA = "0x13CD5CC", Offset = "0x13CD5CC", VA = "0x13CD5CC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60028E1")]
			[Address(RVA = "0x13CD5D0", Offset = "0x13CD5D0", VA = "0x13CD5D0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60028E3")]
			[Address(RVA = "0x13CDA9C", Offset = "0x13CDA9C", VA = "0x13CDA9C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float MaxWaitDuration;

		[Token(Token = "0x4000979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private MonoBehaviour m_target;

		[Token(Token = "0x400097A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool m_lookedForAnimator;

		[Token(Token = "0x400097B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator m_animator;

		[Token(Token = "0x400097C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Animation m_animation;

		[Token(Token = "0x400097D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Coroutine m_coroutine;

		[Token(Token = "0x400097E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA17210", Offset = "0xA17210")]
		private string <currentTrigger>k__BackingField;

		[Token(Token = "0x1700013E")]
		public string currentTrigger
		{
			[Token(Token = "0x6000DE9")]
			[Address(RVA = "0x13CCE40", Offset = "0x13CCE40", VA = "0x13CCE40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA299B0", Offset = "0xA299B0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DEA")]
			[Address(RVA = "0x13CCE48", Offset = "0x13CCE48", VA = "0x13CCE48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA299C0", Offset = "0xA299C0")]
			private set
			{
			}
		}

		[Token(Token = "0x6000DEB")]
		[Address(RVA = "0x13CCE50", Offset = "0x13CCE50", VA = "0x13CCE50")]
		public UIAnimatorMonitor(GameObject target)
		{
		}

		[Token(Token = "0x6000DEC")]
		[Address(RVA = "0x13CCF20", Offset = "0x13CCF20", VA = "0x13CCF20")]
		public UIAnimatorMonitor(MonoBehaviour target)
		{
		}

		[Token(Token = "0x6000DED")]
		[Address(RVA = "0x13CCF94", Offset = "0x13CCF94", VA = "0x13CCF94")]
		public void SetTrigger(string triggerName, Action callback, bool wait = true)
		{
		}

		[Token(Token = "0x6000DEE")]
		[Address(RVA = "0x13CD158", Offset = "0x13CD158", VA = "0x13CD158")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA299D0", Offset = "0xA299D0")]
		private IEnumerator WaitForAnimation(string triggerName, Action callback, bool wait)
		{
			return null;
		}

		[Token(Token = "0x6000DEF")]
		[Address(RVA = "0x13CD21C", Offset = "0x13CD21C", VA = "0x13CD21C")]
		private bool HasAnimator()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DF0")]
		[Address(RVA = "0x13CD47C", Offset = "0x13CD47C", VA = "0x13CD47C")]
		private void CheckAnimatorModeAndTimescale(string triggerName)
		{
		}

		[Token(Token = "0x6000DF1")]
		[Address(RVA = "0x13CD0A4", Offset = "0x13CD0A4", VA = "0x13CD0A4")]
		public void CancelCurrentAnimation()
		{
		}
	}
	[Token(Token = "0x2000199")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA07858", Offset = "0xA07858")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA07858", Offset = "0xA07858")]
	public class UIButtonKeyTrigger : MonoBehaviour
	{
		[Token(Token = "0x200057E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D708", Offset = "0xA0D708")]
		private sealed class <SimulateButtonClick>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIButtonKeyTrigger <>4__this;

			[Token(Token = "0x170004FC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60028E8")]
				[Address(RVA = "0x13CE3C8", Offset = "0x13CE3C8", VA = "0x13CE3C8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004FD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60028EA")]
				[Address(RVA = "0x13CE430", Offset = "0x13CE430", VA = "0x13CE430", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60028E5")]
			[Address(RVA = "0x13CE09C", Offset = "0x13CE09C", VA = "0x13CE09C")]
			[DebuggerHidden]
			public <SimulateButtonClick>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x60028E6")]
			[Address(RVA = "0x13CE190", Offset = "0x13CE190", VA = "0x13CE190", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60028E7")]
			[Address(RVA = "0x13CE194", Offset = "0x13CE194", VA = "0x13CE194", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60028E9")]
			[Address(RVA = "0x13CE3D0", Offset = "0x13CE3D0", VA = "0x13CE3D0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400097F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA17220", Offset = "0xA17220")]
		public KeyCode key;

		[Token(Token = "0x4000980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA17258", Offset = "0xA17258")]
		public string buttonName;

		[Token(Token = "0x4000981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA17290", Offset = "0xA17290")]
		public bool anyKeyOrButton;

		[Token(Token = "0x4000982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA172C8", Offset = "0xA172C8")]
		public bool skipIfBeingClickedBySubmit;

		[Token(Token = "0x4000983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA17300", Offset = "0xA17300")]
		public bool simulateButtonClick;

		[Token(Token = "0x4000984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA17338", Offset = "0xA17338")]
		public float simulateButtonDownDuration;

		[Token(Token = "0x4000985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Selectable m_selectable;

		[Token(Token = "0x4000986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool monitorInput;

		[Token(Token = "0x6000DF3")]
		[Address(RVA = "0x13CDB04", Offset = "0x13CDB04", VA = "0x13CDB04")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DF4")]
		[Address(RVA = "0x13CDBAC", Offset = "0x13CDBAC", VA = "0x13CDBAC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DF5")]
		[Address(RVA = "0x13CDDF8", Offset = "0x13CDDF8", VA = "0x13CDDF8")]
		private bool IsBeingClickedBySubmit()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DF6")]
		[Address(RVA = "0x13CE02C", Offset = "0x13CE02C", VA = "0x13CE02C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA29A34", Offset = "0xA29A34")]
		private IEnumerator SimulateButtonClick()
		{
			return null;
		}

		[Token(Token = "0x6000DF7")]
		[Address(RVA = "0x13CE0C8", Offset = "0x13CE0C8", VA = "0x13CE0C8")]
		public UIButtonKeyTrigger()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200019A")]
	public class UIInputField
	{
		[Token(Token = "0x4000987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private InputField m_uiInputField;

		[Token(Token = "0x4000988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TMP_InputField m_textMeshProInputField;

		[Token(Token = "0x1700013F")]
		public InputField uiInputField
		{
			[Token(Token = "0x6000DF9")]
			[Address(RVA = "0x13CE438", Offset = "0x13CE438", VA = "0x13CE438")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DFA")]
			[Address(RVA = "0x13CE440", Offset = "0x13CE440", VA = "0x13CE440")]
			set
			{
			}
		}

		[Token(Token = "0x17000140")]
		public TMP_InputField textMeshProInputField
		{
			[Token(Token = "0x6000DFB")]
			[Address(RVA = "0x13CE448", Offset = "0x13CE448", VA = "0x13CE448")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DFC")]
			[Address(RVA = "0x13CE450", Offset = "0x13CE450", VA = "0x13CE450")]
			set
			{
			}
		}

		[Token(Token = "0x17000141")]
		public string text
		{
			[Token(Token = "0x6000DFD")]
			[Address(RVA = "0x13CE458", Offset = "0x13CE458", VA = "0x13CE458")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DFE")]
			[Address(RVA = "0x13CE540", Offset = "0x13CE540", VA = "0x13CE540")]
			set
			{
			}
		}

		[Token(Token = "0x17000142")]
		public int characterLimit
		{
			[Token(Token = "0x6000DFF")]
			[Address(RVA = "0x13CE62C", Offset = "0x13CE62C", VA = "0x13CE62C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000E00")]
			[Address(RVA = "0x13CE708", Offset = "0x13CE708", VA = "0x13CE708")]
			set
			{
			}
		}

		[Token(Token = "0x17000143")]
		public bool enabled
		{
			[Token(Token = "0x6000E01")]
			[Address(RVA = "0x13CE7F4", Offset = "0x13CE7F4", VA = "0x13CE7F4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E02")]
			[Address(RVA = "0x13CE8D0", Offset = "0x13CE8D0", VA = "0x13CE8D0")]
			set
			{
			}
		}

		[Token(Token = "0x17000144")]
		public GameObject gameObject
		{
			[Token(Token = "0x6000E06")]
			[Address(RVA = "0x13CEA3C", Offset = "0x13CEA3C", VA = "0x13CEA3C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000145")]
		public bool isActiveSelf
		{
			[Token(Token = "0x6000E07")]
			[Address(RVA = "0x13CEB18", Offset = "0x13CEB18", VA = "0x13CEB18")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000146")]
		public bool activeInHierarchy
		{
			[Token(Token = "0x6000E08")]
			[Address(RVA = "0x13CEBC0", Offset = "0x13CEBC0", VA = "0x13CEBC0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000E03")]
		[Address(RVA = "0x13CE9BC", Offset = "0x13CE9BC", VA = "0x13CE9BC")]
		public UIInputField()
		{
		}

		[Token(Token = "0x6000E04")]
		[Address(RVA = "0x13CE9E4", Offset = "0x13CE9E4", VA = "0x13CE9E4")]
		public UIInputField(InputField uiInputField)
		{
		}

		[Token(Token = "0x6000E05")]
		[Address(RVA = "0x13CEA10", Offset = "0x13CEA10", VA = "0x13CEA10")]
		public UIInputField(TMP_InputField textMeshProInputField)
		{
		}

		[Token(Token = "0x6000E09")]
		[Address(RVA = "0x13CEC68", Offset = "0x13CEC68", VA = "0x13CEC68")]
		public void SetActive(bool value)
		{
		}

		[Token(Token = "0x6000E0A")]
		[Address(RVA = "0x13CED6C", Offset = "0x13CED6C", VA = "0x13CED6C")]
		public void ActivateInputField()
		{
		}

		[Token(Token = "0x6000E0B")]
		[Address(RVA = "0x13CEE4C", Offset = "0x13CEE4C", VA = "0x13CEE4C")]
		public static bool IsNull(UITextField uiTextField)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200019B")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA078E0", Offset = "0xA078E0")]
	public class UILocalizationManager : MonoBehaviour
	{
		[Token(Token = "0x200057F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D718", Offset = "0xA0D718")]
		private sealed class <Start>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UILocalizationManager <>4__this;

			[Token(Token = "0x170004FE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60028EE")]
				[Address(RVA = "0x13CF52C", Offset = "0x13CF52C", VA = "0x13CF52C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004FF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60028F0")]
				[Address(RVA = "0x13CF594", Offset = "0x13CF594", VA = "0x13CF594", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60028EB")]
			[Address(RVA = "0x13CF3DC", Offset = "0x13CF3DC", VA = "0x13CF3DC")]
			[DebuggerHidden]
			public <Start>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x60028EC")]
			[Address(RVA = "0x13CF47C", Offset = "0x13CF47C", VA = "0x13CF47C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60028ED")]
			[Address(RVA = "0x13CF480", Offset = "0x13CF480", VA = "0x13CF480", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60028EF")]
			[Address(RVA = "0x13CF534", Offset = "0x13CF534", VA = "0x13CF534", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA17390", Offset = "0xA17390")]
		[SerializeField]
		private string m_currentLanguagePlayerPrefsKey;

		[Token(Token = "0x400098A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA173DC", Offset = "0xA173DC")]
		[SerializeField]
		private TextTable m_textTable;

		[Token(Token = "0x400098B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string m_currentLanguage;

		[Token(Token = "0x400098C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static UILocalizationManager m_instance;

		[Token(Token = "0x17000147")]
		public static UILocalizationManager instance
		{
			[Token(Token = "0x6000E0C")]
			[Address(RVA = "0x13C86A0", Offset = "0x13C86A0", VA = "0x13C86A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E0D")]
			[Address(RVA = "0x13CEF14", Offset = "0x13CEF14", VA = "0x13CEF14")]
			set
			{
			}
		}

		[Token(Token = "0x17000148")]
		public TextTable textTable
		{
			[Token(Token = "0x6000E0E")]
			[Address(RVA = "0x13CEF80", Offset = "0x13CEF80", VA = "0x13CEF80")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E0F")]
			[Address(RVA = "0x13CF078", Offset = "0x13CF078", VA = "0x13CF078")]
			set
			{
			}
		}

		[Token(Token = "0x17000149")]
		public string currentLanguage
		{
			[Token(Token = "0x6000E10")]
			[Address(RVA = "0x13C88A4", Offset = "0x13C88A4", VA = "0x13C88A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E11")]
			[Address(RVA = "0x13CF0E8", Offset = "0x13CF0E8", VA = "0x13CF0E8")]
			set
			{
			}
		}

		[Token(Token = "0x1700014A")]
		public string currentLanguagePlayerPrefsKey
		{
			[Token(Token = "0x6000E12")]
			[Address(RVA = "0x13CF25C", Offset = "0x13CF25C", VA = "0x13CF25C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E13")]
			[Address(RVA = "0x13CF264", Offset = "0x13CF264", VA = "0x13CF264")]
			set
			{
			}
		}

		[Token(Token = "0x6000E14")]
		[Address(RVA = "0x13CF26C", Offset = "0x13CF26C", VA = "0x13CF26C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E15")]
		[Address(RVA = "0x13CF36C", Offset = "0x13CF36C", VA = "0x13CF36C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA29A98", Offset = "0xA29A98")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6000E16")]
		[Address(RVA = "0x13CF164", Offset = "0x13CF164", VA = "0x13CF164")]
		public void UpdateUIs(string language)
		{
		}

		[Token(Token = "0x6000E17")]
		[Address(RVA = "0x13CF408", Offset = "0x13CF408", VA = "0x13CF408")]
		public UILocalizationManager()
		{
		}
	}
	[Token(Token = "0x200019C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA07918", Offset = "0xA07918")]
	public class UIPanel : MonoBehaviour
	{
		[Token(Token = "0x2000580")]
		public enum StartState
		{
			[Token(Token = "0x4001C9F")]
			GameObjectState,
			[Token(Token = "0x4001CA0")]
			Open,
			[Token(Token = "0x4001CA1")]
			Closed
		}

		[Token(Token = "0x2000581")]
		public enum PanelState
		{
			[Token(Token = "0x4001CA3")]
			Uninitialized,
			[Token(Token = "0x4001CA4")]
			Opening,
			[Token(Token = "0x4001CA5")]
			Open,
			[Token(Token = "0x4001CA6")]
			Closing,
			[Token(Token = "0x4001CA7")]
			Closed
		}

		[Token(Token = "0x2000582")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D728", Offset = "0xA0D728")]
		private sealed class <RefreshAfterOneFrameCoroutine>d__39 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001CA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001CAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIPanel <>4__this;

			[Token(Token = "0x17000500")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60028F4")]
				[Address(RVA = "0x13D0C44", Offset = "0x13D0C44", VA = "0x13D0C44", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000501")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60028F6")]
				[Address(RVA = "0x13D0CAC", Offset = "0x13D0CAC", VA = "0x13D0CAC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60028F1")]
			[Address(RVA = "0x13CFA74", Offset = "0x13CFA74", VA = "0x13CFA74")]
			[DebuggerHidden]
			public <RefreshAfterOneFrameCoroutine>d__39(int <>1__state)
			{
			}

			[Token(Token = "0x60028F2")]
			[Address(RVA = "0x13D0BEC", Offset = "0x13D0BEC", VA = "0x13D0BEC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60028F3")]
			[Address(RVA = "0x13D0BF0", Offset = "0x13D0BF0", VA = "0x13D0BF0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60028F5")]
			[Address(RVA = "0x13D0C4C", Offset = "0x13D0C4C", VA = "0x13D0C4C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400098D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA17428", Offset = "0xA17428")]
		public GameObject firstSelected;

		[Token(Token = "0x400098E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA17460", Offset = "0xA17460")]
		public float focusCheckFrequency;

		[Token(Token = "0x400098F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA17498", Offset = "0xA17498")]
		public float refreshSelectablesFrequency;

		[Token(Token = "0x4000990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA174D0", Offset = "0xA174D0")]
		public bool selectPreviousOnDisable;

		[Token(Token = "0x4000991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA17508", Offset = "0xA17508")]
		public string showAnimationTrigger;

		[Token(Token = "0x4000992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA17540", Offset = "0xA17540")]
		public string hideAnimationTrigger;

		[Token(Token = "0x4000993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA17578", Offset = "0xA17578")]
		public StartState startState;

		[Token(Token = "0x4000994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA175B0", Offset = "0xA175B0")]
		[SerializeField]
		protected bool m_deactivateOnHidden;

		[Token(Token = "0x4000995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UnityEvent onOpen;

		[Token(Token = "0x4000996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public UnityEvent onClose;

		[Token(Token = "0x4000997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UnityEvent onBackButtonDown;

		[Token(Token = "0x4000998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected GameObject m_previousSelected;

		[Token(Token = "0x4000999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected GameObject m_lastSelected;

		[Token(Token = "0x400099A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected List<GameObject> selectables;

		[Token(Token = "0x400099B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float m_timeNextCheck;

		[Token(Token = "0x400099C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float m_timeNextRefresh;

		[Token(Token = "0x400099D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool monitorSelection;

		[Token(Token = "0x400099E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		protected static List<UIPanel> panelStack;

		[Token(Token = "0x400099F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private PanelState m_panelState;

		[Token(Token = "0x40009A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private UIAnimatorMonitor m_animatorMonitor;

		[Token(Token = "0x1700014B")]
		public bool deactivateOnHidden
		{
			[Token(Token = "0x6000E19")]
			[Address(RVA = "0x13CF59C", Offset = "0x13CF59C", VA = "0x13CF59C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E1A")]
			[Address(RVA = "0x13CF5A4", Offset = "0x13CF5A4", VA = "0x13CF5A4")]
			set
			{
			}
		}

		[Token(Token = "0x1700014C")]
		protected static UIPanel topPanel
		{
			[Token(Token = "0x6000E1B")]
			[Address(RVA = "0x13CF5B0", Offset = "0x13CF5B0", VA = "0x13CF5B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014D")]
		public PanelState panelState
		{
			[Token(Token = "0x6000E1C")]
			[Address(RVA = "0x13CF678", Offset = "0x13CF678", VA = "0x13CF678")]
			get
			{
				return default(PanelState);
			}
			[Token(Token = "0x6000E1D")]
			[Address(RVA = "0x13CF680", Offset = "0x13CF680", VA = "0x13CF680")]
			set
			{
			}
		}

		[Token(Token = "0x1700014E")]
		public virtual bool waitForShowAnimation
		{
			[Token(Token = "0x6000E1E")]
			[Address(RVA = "0x13CF688", Offset = "0x13CF688", VA = "0x13CF688", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700014F")]
		public bool isOpen
		{
			[Token(Token = "0x6000E1F")]
			[Address(RVA = "0x13CF690", Offset = "0x13CF690", VA = "0x13CF690")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000150")]
		public UIAnimatorMonitor animatorMonitor
		{
			[Token(Token = "0x6000E20")]
			[Address(RVA = "0x13CF6DC", Offset = "0x13CF6DC", VA = "0x13CF6DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E21")]
		[Address(RVA = "0x13CF764", Offset = "0x13CF764", VA = "0x13CF764", Slot = "5")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000E22")]
		[Address(RVA = "0x13CF8B8", Offset = "0x13CF8B8", VA = "0x13CF8B8")]
		public void RefreshSelectablesList()
		{
		}

		[Token(Token = "0x6000E23")]
		[Address(RVA = "0x13CF9D8", Offset = "0x13CF9D8", VA = "0x13CF9D8")]
		public void RefreshAfterOneFrame()
		{
		}

		[Token(Token = "0x6000E24")]
		[Address(RVA = "0x13CFA04", Offset = "0x13CFA04", VA = "0x13CFA04")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA29AFC", Offset = "0xA29AFC")]
		private IEnumerator RefreshAfterOneFrameCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6000E25")]
		[Address(RVA = "0x13CFAA0", Offset = "0x13CFAA0", VA = "0x13CFAA0")]
		protected void PushToPanelStack()
		{
		}

		[Token(Token = "0x6000E26")]
		[Address(RVA = "0x13CFBA0", Offset = "0x13CFBA0", VA = "0x13CFBA0")]
		protected void PopFromPanelStack()
		{
		}

		[Token(Token = "0x6000E27")]
		[Address(RVA = "0x13CFC24", Offset = "0x13CFC24", VA = "0x13CFC24", Slot = "6")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000E28")]
		[Address(RVA = "0x13CFC58", Offset = "0x13CFC58", VA = "0x13CFC58", Slot = "7")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000E29")]
		[Address(RVA = "0x13CFDCC", Offset = "0x13CFDCC", VA = "0x13CFDCC", Slot = "8")]
		public virtual void Open()
		{
		}

		[Token(Token = "0x6000E2A")]
		[Address(RVA = "0x13CFED4", Offset = "0x13CFED4", VA = "0x13CFED4", Slot = "9")]
		public virtual void Close()
		{
		}

		[Token(Token = "0x6000E2B")]
		[Address(RVA = "0x13D0098", Offset = "0x13D0098", VA = "0x13D0098", Slot = "10")]
		public virtual void SetOpen(bool value)
		{
		}

		[Token(Token = "0x6000E2C")]
		[Address(RVA = "0x13D00B0", Offset = "0x13D00B0", VA = "0x13D00B0", Slot = "11")]
		public virtual void Toggle()
		{
		}

		[Token(Token = "0x6000E2D")]
		[Address(RVA = "0x13D00E8", Offset = "0x13D00E8", VA = "0x13D00E8", Slot = "12")]
		protected virtual void OnVisible()
		{
		}

		[Token(Token = "0x6000E2E")]
		[Address(RVA = "0x13D02F8", Offset = "0x13D02F8", VA = "0x13D02F8", Slot = "13")]
		protected virtual void OnHidden()
		{
		}

		[Token(Token = "0x6000E2F")]
		[Address(RVA = "0x13D0338", Offset = "0x13D0338", VA = "0x13D0338", Slot = "14")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000E30")]
		[Address(RVA = "0x13D0650", Offset = "0x13D0650", VA = "0x13D0650", Slot = "15")]
		public virtual void CheckFocus()
		{
		}

		[Token(Token = "0x6000E31")]
		[Address(RVA = "0x13D09B0", Offset = "0x13D09B0", VA = "0x13D09B0")]
		protected GameObject GetFirstInteractableButton()
		{
			return null;
		}

		[Token(Token = "0x6000E32")]
		[Address(RVA = "0x13D0A68", Offset = "0x13D0A68", VA = "0x13D0A68")]
		public UIPanel()
		{
		}
	}
	[Token(Token = "0x200019D")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA07950", Offset = "0xA07950")]
	public class UIScrollbarEnabler : MonoBehaviour
	{
		[Token(Token = "0x2000583")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D738", Offset = "0xA0D738")]
		private sealed class <CheckScrollbarAfterUIUpdate>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001CAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001CAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIScrollbarEnabler <>4__this;

			[Token(Token = "0x4001CAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool useResetValue;

			[Token(Token = "0x4001CAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float resetValue;

			[Token(Token = "0x17000502")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60028FA")]
				[Address(RVA = "0x13D11CC", Offset = "0x13D11CC", VA = "0x13D11CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000503")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60028FC")]
				[Address(RVA = "0x13D1234", Offset = "0x13D1234", VA = "0x13D1234", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60028F7")]
			[Address(RVA = "0x13D1004", Offset = "0x13D1004", VA = "0x13D1004")]
			[DebuggerHidden]
			public <CheckScrollbarAfterUIUpdate>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x60028F8")]
			[Address(RVA = "0x13D1038", Offset = "0x13D1038", VA = "0x13D1038", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60028F9")]
			[Address(RVA = "0x13D103C", Offset = "0x13D103C", VA = "0x13D103C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60028FB")]
			[Address(RVA = "0x13D11D4", Offset = "0x13D11D4", VA = "0x13D11D4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40009A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA175FC", Offset = "0xA175FC")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA175FC", Offset = "0xA175FC")]
		public ScrollRect scrollRect;

		[Token(Token = "0x40009A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1765C", Offset = "0xA1765C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA1765C", Offset = "0xA1765C")]
		public RectTransform scrollContent;

		[Token(Token = "0x40009A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA176BC", Offset = "0xA176BC")]
		public Scrollbar scrollbar;

		[Token(Token = "0x40009A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_started;

		[Token(Token = "0x40009A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool m_checking;

		[Token(Token = "0x6000E34")]
		[Address(RVA = "0x13D0CB4", Offset = "0x13D0CB4", VA = "0x13D0CB4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E35")]
		[Address(RVA = "0x13D0E04", Offset = "0x13D0E04", VA = "0x13D0E04")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6000E36")]
		[Address(RVA = "0x13D0E14", Offset = "0x13D0E14", VA = "0x13D0E14")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6000E37")]
		[Address(RVA = "0x13D0CC0", Offset = "0x13D0CC0", VA = "0x13D0CC0")]
		public void CheckScrollbar()
		{
		}

		[Token(Token = "0x6000E38")]
		[Address(RVA = "0x13D0EB0", Offset = "0x13D0EB0", VA = "0x13D0EB0")]
		public void CheckScrollbarWithResetValue(float value)
		{
		}

		[Token(Token = "0x6000E39")]
		[Address(RVA = "0x13D0E1C", Offset = "0x13D0E1C", VA = "0x13D0E1C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA29B60", Offset = "0xA29B60")]
		private IEnumerator CheckScrollbarAfterUIUpdate(bool useResetValue, float resetValue)
		{
			return null;
		}

		[Token(Token = "0x6000E3A")]
		[Address(RVA = "0x13D1030", Offset = "0x13D1030", VA = "0x13D1030")]
		public UIScrollbarEnabler()
		{
		}
	}
	[Token(Token = "0x200019E")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA07988", Offset = "0xA07988")]
	public class UITextColor : MonoBehaviour
	{
		[Token(Token = "0x40009A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color color;

		[Token(Token = "0x40009A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Text text;

		[Token(Token = "0x40009A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color m_originalColor;

		[Token(Token = "0x6000E3B")]
		[Address(RVA = "0x13D123C", Offset = "0x13D123C", VA = "0x13D123C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E3C")]
		[Address(RVA = "0x13D1330", Offset = "0x13D1330", VA = "0x13D1330")]
		public void ApplyColor()
		{
		}

		[Token(Token = "0x6000E3D")]
		[Address(RVA = "0x13D13F4", Offset = "0x13D13F4", VA = "0x13D13F4")]
		public void UndoColor()
		{
		}

		[Token(Token = "0x6000E3E")]
		[Address(RVA = "0x13D1498", Offset = "0x13D1498", VA = "0x13D1498")]
		public UITextColor()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200019F")]
	public class UITextField
	{
		[Token(Token = "0x40009A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Text m_uiText;

		[Token(Token = "0x40009AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextMeshProUGUI m_textMeshProUGUI;

		[Token(Token = "0x17000151")]
		public Text uiText
		{
			[Token(Token = "0x6000E3F")]
			[Address(RVA = "0x13D14A0", Offset = "0x13D14A0", VA = "0x13D14A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E40")]
			[Address(RVA = "0x13D14A8", Offset = "0x13D14A8", VA = "0x13D14A8")]
			set
			{
			}
		}

		[Token(Token = "0x17000152")]
		public TextMeshProUGUI textMeshProUGUI
		{
			[Token(Token = "0x6000E41")]
			[Address(RVA = "0x13D14B0", Offset = "0x13D14B0", VA = "0x13D14B0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E42")]
			[Address(RVA = "0x13D14B8", Offset = "0x13D14B8", VA = "0x13D14B8")]
			set
			{
			}
		}

		[Token(Token = "0x17000153")]
		public string text
		{
			[Token(Token = "0x6000E43")]
			[Address(RVA = "0x13D14C0", Offset = "0x13D14C0", VA = "0x13D14C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E44")]
			[Address(RVA = "0x13D15BC", Offset = "0x13D15BC", VA = "0x13D15BC")]
			set
			{
			}
		}

		[Token(Token = "0x17000154")]
		public bool enabled
		{
			[Token(Token = "0x6000E45")]
			[Address(RVA = "0x13D16B0", Offset = "0x13D16B0", VA = "0x13D16B0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E46")]
			[Address(RVA = "0x13D178C", Offset = "0x13D178C", VA = "0x13D178C")]
			set
			{
			}
		}

		[Token(Token = "0x17000155")]
		public Color color
		{
			[Token(Token = "0x6000E47")]
			[Address(RVA = "0x13D1878", Offset = "0x13D1878", VA = "0x13D1878")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000E48")]
			[Address(RVA = "0x13D195C", Offset = "0x13D195C", VA = "0x13D195C")]
			set
			{
			}
		}

		[Token(Token = "0x17000156")]
		public GameObject gameObject
		{
			[Token(Token = "0x6000E4C")]
			[Address(RVA = "0x13D1B14", Offset = "0x13D1B14", VA = "0x13D1B14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000157")]
		public bool isActiveSelf
		{
			[Token(Token = "0x6000E4D")]
			[Address(RVA = "0x13D1BF0", Offset = "0x13D1BF0", VA = "0x13D1BF0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000158")]
		public bool activeInHierarchy
		{
			[Token(Token = "0x6000E4E")]
			[Address(RVA = "0x13D1C98", Offset = "0x13D1C98", VA = "0x13D1C98")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000E49")]
		[Address(RVA = "0x13D1A94", Offset = "0x13D1A94", VA = "0x13D1A94")]
		public UITextField()
		{
		}

		[Token(Token = "0x6000E4A")]
		[Address(RVA = "0x13D1ABC", Offset = "0x13D1ABC", VA = "0x13D1ABC")]
		public UITextField(Text uiText)
		{
		}

		[Token(Token = "0x6000E4B")]
		[Address(RVA = "0x13D1AE8", Offset = "0x13D1AE8", VA = "0x13D1AE8")]
		public UITextField(TextMeshProUGUI textMeshProUGUI)
		{
		}

		[Token(Token = "0x6000E4F")]
		[Address(RVA = "0x13D1D40", Offset = "0x13D1D40", VA = "0x13D1D40")]
		public void SetActive(bool value)
		{
		}

		[Token(Token = "0x6000E50")]
		[Address(RVA = "0x13D1E44", Offset = "0x13D1E44", VA = "0x13D1E44")]
		public static bool IsNull(UITextField uiTextField)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001A0")]
	public static class UIUtility
	{
		[Token(Token = "0x6000E51")]
		[Address(RVA = "0x13D1F0C", Offset = "0x13D1F0C", VA = "0x13D1F0C")]
		public static void RequireEventSystem()
		{
		}

		[Token(Token = "0x6000E52")]
		[Address(RVA = "0x13CDA8C", Offset = "0x13CDA8C", VA = "0x13CDA8C")]
		public static int GetAnimatorNameHash(AnimatorStateInfo animatorStateInfo)
		{
			return default(int);
		}
	}
	[Token(Token = "0x20001A1")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA079C0", Offset = "0xA079C0")]
	public class CollisionEvent : TagMaskEvent
	{
		[Token(Token = "0x40009AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObjectUnityEvent m_onCollisionEnter;

		[Token(Token = "0x40009AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObjectUnityEvent m_onCollisionExit;

		[Token(Token = "0x17000159")]
		public GameObjectUnityEvent onCollisionEnter
		{
			[Token(Token = "0x6000E53")]
			[Address(RVA = "0x1423B8C", Offset = "0x1423B8C", VA = "0x1423B8C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E54")]
			[Address(RVA = "0x1423B94", Offset = "0x1423B94", VA = "0x1423B94")]
			set
			{
			}
		}

		[Token(Token = "0x1700015A")]
		public GameObjectUnityEvent onCollisionExit
		{
			[Token(Token = "0x6000E55")]
			[Address(RVA = "0x1423B9C", Offset = "0x1423B9C", VA = "0x1423B9C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E56")]
			[Address(RVA = "0x1423BA4", Offset = "0x1423BA4", VA = "0x1423BA4")]
			set
			{
			}
		}

		[Token(Token = "0x6000E57")]
		[Address(RVA = "0x1423BAC", Offset = "0x1423BAC", VA = "0x1423BAC", Slot = "4")]
		protected virtual void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6000E58")]
		[Address(RVA = "0x1423C64", Offset = "0x1423C64", VA = "0x1423C64", Slot = "5")]
		protected virtual void OnCollisionExit(Collision collision)
		{
		}

		[Token(Token = "0x6000E59")]
		[Address(RVA = "0x1423D1C", Offset = "0x1423D1C", VA = "0x1423D1C")]
		public CollisionEvent()
		{
		}
	}
	[Token(Token = "0x20001A2")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA079F8", Offset = "0xA079F8")]
	public class DisappearEvent : MonoBehaviour
	{
		[Token(Token = "0x2000584")]
		public enum EventTrigger
		{
			[Token(Token = "0x4001CB1")]
			OnDisable,
			[Token(Token = "0x4001CB2")]
			OnDestroy
		}

		[Token(Token = "0x40009AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA17734", Offset = "0xA17734")]
		[SerializeField]
		private EventTrigger m_eventTrigger;

		[Token(Token = "0x40009AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UnityEvent m_onDisappeared;

		[Token(Token = "0x40009AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_ignore;

		[Token(Token = "0x1700015B")]
		public EventTrigger eventTrigger
		{
			[Token(Token = "0x6000E5A")]
			[Address(RVA = "0x1168EE8", Offset = "0x1168EE8", VA = "0x1168EE8")]
			get
			{
				return default(EventTrigger);
			}
			[Token(Token = "0x6000E5B")]
			[Address(RVA = "0x1168EF0", Offset = "0x1168EF0", VA = "0x1168EF0")]
			set
			{
			}
		}

		[Token(Token = "0x1700015C")]
		public UnityEvent onDisappeared
		{
			[Token(Token = "0x6000E5C")]
			[Address(RVA = "0x1168EF8", Offset = "0x1168EF8", VA = "0x1168EF8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E5D")]
			[Address(RVA = "0x1168F00", Offset = "0x1168F00", VA = "0x1168F00")]
			set
			{
			}
		}

		[Token(Token = "0x6000E5E")]
		[Address(RVA = "0x1168F08", Offset = "0x1168F08", VA = "0x1168F08")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E5F")]
		[Address(RVA = "0x1168FCC", Offset = "0x1168FCC", VA = "0x1168FCC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000E60")]
		[Address(RVA = "0x11690AC", Offset = "0x11690AC", VA = "0x11690AC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000E61")]
		[Address(RVA = "0x1169090", Offset = "0x1169090", VA = "0x1169090")]
		public void RunEvent()
		{
		}

		[Token(Token = "0x6000E62")]
		[Address(RVA = "0x11690E0", Offset = "0x11690E0", VA = "0x11690E0")]
		public void OnWillUnload(int sceneIndex)
		{
		}

		[Token(Token = "0x6000E63")]
		[Address(RVA = "0x11690EC", Offset = "0x11690EC", VA = "0x11690EC")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6000E64")]
		[Address(RVA = "0x11690F8", Offset = "0x11690F8", VA = "0x11690F8")]
		public DisappearEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001A3")]
	public class IntUnityEvent : UnityEvent<int>
	{
		[Token(Token = "0x6000E65")]
		[Address(RVA = "0x116FC48", Offset = "0x116FC48", VA = "0x116FC48")]
		public IntUnityEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001A4")]
	public class StringUnityEvent : UnityEvent<string>
	{
		[Token(Token = "0x6000E66")]
		[Address(RVA = "0x13C8F88", Offset = "0x13C8F88", VA = "0x13C8F88")]
		public StringUnityEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001A5")]
	public class ObjectUnityEvent : UnityEvent<object>
	{
		[Token(Token = "0x6000E67")]
		[Address(RVA = "0x13BCA0C", Offset = "0x13BCA0C", VA = "0x13BCA0C")]
		public ObjectUnityEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001A6")]
	public class GameObjectUnityEvent : UnityEvent<GameObject>
	{
		[Token(Token = "0x6000E68")]
		[Address(RVA = "0x116A7B8", Offset = "0x116A7B8", VA = "0x116A7B8")]
		public GameObjectUnityEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001A7")]
	public class TagMask
	{
		[Token(Token = "0x40009B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public string[] m_tags;

		[Token(Token = "0x1700015D")]
		public string[] tags
		{
			[Token(Token = "0x6000E69")]
			[Address(RVA = "0x13C8FD8", Offset = "0x13C8FD8", VA = "0x13C8FD8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E6A")]
			[Address(RVA = "0x13C8FE0", Offset = "0x13C8FE0", VA = "0x13C8FE0")]
			set
			{
			}
		}

		[Token(Token = "0x6000E6B")]
		[Address(RVA = "0x13C8FE8", Offset = "0x13C8FE8", VA = "0x13C8FE8")]
		public bool IsInTagMask(string tag)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E6C")]
		[Address(RVA = "0x13C9080", Offset = "0x13C9080", VA = "0x13C9080")]
		public TagMask()
		{
		}
	}
	[Token(Token = "0x20001A8")]
	public abstract class TagMaskEvent : MonoBehaviour
	{
		[Token(Token = "0x40009B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA177A0", Offset = "0xA177A0")]
		public TagMask tagMask;

		[Token(Token = "0x6000E6D")]
		[Address(RVA = "0x13C913C", Offset = "0x13C913C", VA = "0x13C913C")]
		public bool IsInTagMask(string tag)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E6E")]
		[Address(RVA = "0x13C9154", Offset = "0x13C9154", VA = "0x13C9154")]
		protected TagMaskEvent()
		{
		}
	}
	[Token(Token = "0x20001A9")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA07A30", Offset = "0xA07A30")]
	public class TimedEvent : MonoBehaviour
	{
		[Token(Token = "0x2000585")]
		public enum TimingMode
		{
			[Token(Token = "0x4001CB4")]
			Seconds,
			[Token(Token = "0x4001CB5")]
			Frames
		}

		[Token(Token = "0x2000586")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D748", Offset = "0xA0D748")]
		private sealed class <CountFrames>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001CB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001CB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TimedEvent <>4__this;

			[Token(Token = "0x4001CB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x17000504")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002900")]
				[Address(RVA = "0x13CCBCC", Offset = "0x13CCBCC", VA = "0x13CCBCC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000505")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002902")]
				[Address(RVA = "0x13CCC34", Offset = "0x13CCC34", VA = "0x13CCC34", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60028FD")]
			[Address(RVA = "0x13CC9C0", Offset = "0x13CC9C0", VA = "0x13CC9C0")]
			[DebuggerHidden]
			public <CountFrames>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x60028FE")]
			[Address(RVA = "0x13CCB40", Offset = "0x13CCB40", VA = "0x13CCB40", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60028FF")]
			[Address(RVA = "0x13CCB44", Offset = "0x13CCB44", VA = "0x13CCB44", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002901")]
			[Address(RVA = "0x13CCBD4", Offset = "0x13CCBD4", VA = "0x13CCBD4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40009B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA177D8", Offset = "0xA177D8")]
		[SerializeField]
		private TimingMode m_mode;

		[Token(Token = "0x40009B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA17824", Offset = "0xA17824")]
		[SerializeField]
		private float m_duration;

		[Token(Token = "0x40009B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA17870", Offset = "0xA17870")]
		[SerializeField]
		private int m_frames;

		[Token(Token = "0x40009B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA178BC", Offset = "0xA178BC")]
		[SerializeField]
		private bool m_activateOnStart;

		[Token(Token = "0x40009B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEvent m_onTimeReached;

		[Token(Token = "0x1700015E")]
		public TimingMode mode
		{
			[Token(Token = "0x6000E6F")]
			[Address(RVA = "0x13CC830", Offset = "0x13CC830", VA = "0x13CC830")]
			get
			{
				return default(TimingMode);
			}
			[Token(Token = "0x6000E70")]
			[Address(RVA = "0x13CC838", Offset = "0x13CC838", VA = "0x13CC838")]
			set
			{
			}
		}

		[Token(Token = "0x1700015F")]
		public float duration
		{
			[Token(Token = "0x6000E71")]
			[Address(RVA = "0x13CC840", Offset = "0x13CC840", VA = "0x13CC840")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E72")]
			[Address(RVA = "0x13CC848", Offset = "0x13CC848", VA = "0x13CC848")]
			set
			{
			}
		}

		[Token(Token = "0x17000160")]
		public int frames
		{
			[Token(Token = "0x6000E73")]
			[Address(RVA = "0x13CC850", Offset = "0x13CC850", VA = "0x13CC850")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000E74")]
			[Address(RVA = "0x13CC858", Offset = "0x13CC858", VA = "0x13CC858")]
			set
			{
			}
		}

		[Token(Token = "0x17000161")]
		public bool activateOnStart
		{
			[Token(Token = "0x6000E75")]
			[Address(RVA = "0x13CC860", Offset = "0x13CC860", VA = "0x13CC860")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E76")]
			[Address(RVA = "0x13CC868", Offset = "0x13CC868", VA = "0x13CC868")]
			set
			{
			}
		}

		[Token(Token = "0x17000162")]
		private UnityEvent onTimeReached
		{
			[Token(Token = "0x6000E77")]
			[Address(RVA = "0x13CC874", Offset = "0x13CC874", VA = "0x13CC874")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E78")]
			[Address(RVA = "0x13CC87C", Offset = "0x13CC87C", VA = "0x13CC87C")]
			set
			{
			}
		}

		[Token(Token = "0x6000E79")]
		[Address(RVA = "0x13CC884", Offset = "0x13CC884", VA = "0x13CC884", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000E7A")]
		[Address(RVA = "0x13CC8A0", Offset = "0x13CC8A0", VA = "0x13CC8A0", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000E7B")]
		[Address(RVA = "0x13CC8AC", Offset = "0x13CC8AC", VA = "0x13CC8AC", Slot = "6")]
		public virtual void StartTimer()
		{
		}

		[Token(Token = "0x6000E7C")]
		[Address(RVA = "0x13CC8BC", Offset = "0x13CC8BC", VA = "0x13CC8BC", Slot = "7")]
		public virtual void StartTimer(float duration)
		{
		}

		[Token(Token = "0x6000E7D")]
		[Address(RVA = "0x13CC950", Offset = "0x13CC950", VA = "0x13CC950")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA29BC4", Offset = "0xA29BC4")]
		private IEnumerator CountFrames()
		{
			return null;
		}

		[Token(Token = "0x6000E7E")]
		[Address(RVA = "0x13CC9EC", Offset = "0x13CC9EC", VA = "0x13CC9EC", Slot = "8")]
		protected virtual void CancelTimer()
		{
		}

		[Token(Token = "0x6000E7F")]
		[Address(RVA = "0x13CCA4C", Offset = "0x13CCA4C", VA = "0x13CCA4C", Slot = "9")]
		protected virtual void TimeReached()
		{
		}

		[Token(Token = "0x6000E80")]
		[Address(RVA = "0x13CCA68", Offset = "0x13CCA68", VA = "0x13CCA68")]
		public void DestroyUnityObject(UnityEngine.Object o)
		{
		}

		[Token(Token = "0x6000E81")]
		[Address(RVA = "0x13CCAD0", Offset = "0x13CCAD0", VA = "0x13CCAD0")]
		public TimedEvent()
		{
		}
	}
	[Token(Token = "0x20001AA")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA07A68", Offset = "0xA07A68")]
	public class TriggerEvent : TagMaskEvent
	{
		[Token(Token = "0x40009B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObjectUnityEvent m_onTriggerEnter;

		[Token(Token = "0x40009B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObjectUnityEvent m_onTriggerExit;

		[Token(Token = "0x17000163")]
		public GameObjectUnityEvent onTriggerEnter
		{
			[Token(Token = "0x6000E82")]
			[Address(RVA = "0x13CCC3C", Offset = "0x13CCC3C", VA = "0x13CCC3C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E83")]
			[Address(RVA = "0x13CCC44", Offset = "0x13CCC44", VA = "0x13CCC44")]
			set
			{
			}
		}

		[Token(Token = "0x17000164")]
		public GameObjectUnityEvent onTriggerExit
		{
			[Token(Token = "0x6000E84")]
			[Address(RVA = "0x13CCC4C", Offset = "0x13CCC4C", VA = "0x13CCC4C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E85")]
			[Address(RVA = "0x13CCC54", Offset = "0x13CCC54", VA = "0x13CCC54")]
			set
			{
			}
		}

		[Token(Token = "0x6000E86")]
		[Address(RVA = "0x13CCC5C", Offset = "0x13CCC5C", VA = "0x13CCC5C", Slot = "4")]
		protected virtual void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000E87")]
		[Address(RVA = "0x13CCD0C", Offset = "0x13CCD0C", VA = "0x13CCD0C", Slot = "5")]
		protected virtual void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000E88")]
		[Address(RVA = "0x13CCDBC", Offset = "0x13CCDBC", VA = "0x13CCDBC")]
		public TriggerEvent()
		{
		}
	}
}
namespace PixelCrushers.DialogueSystem
{
	[Token(Token = "0x20001AB")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA07AA0", Offset = "0xA07AA0")]
	public class CommonLibraryLua : MonoBehaviour
	{
		[Token(Token = "0x6000E89")]
		[Address(RVA = "0x1436ADC", Offset = "0x1436ADC", VA = "0x1436ADC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E8A")]
		[Address(RVA = "0x143727C", Offset = "0x143727C", VA = "0x143727C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000E8B")]
		[Address(RVA = "0x1437310", Offset = "0x1437310", VA = "0x1437310")]
		public void SendMessageSystem(string message, string parameter)
		{
		}

		[Token(Token = "0x6000E8C")]
		[Address(RVA = "0x1437428", Offset = "0x1437428", VA = "0x1437428")]
		public void SendMessageSystemString(string message, string parameter, string value)
		{
		}

		[Token(Token = "0x6000E8D")]
		[Address(RVA = "0x1437514", Offset = "0x1437514", VA = "0x1437514")]
		public void SendMessageSystemInt(string message, string parameter, double value)
		{
		}

		[Token(Token = "0x6000E8E")]
		[Address(RVA = "0x1437634", Offset = "0x1437634", VA = "0x1437634")]
		public CommonLibraryLua()
		{
		}
	}
	[Token(Token = "0x20001AC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA07AD8", Offset = "0xA07AD8")]
	public class LuaConsole : MonoBehaviour
	{
		[Token(Token = "0x40009B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA17938", Offset = "0xA17938")]
		public KeyCode firstKey;

		[Token(Token = "0x40009BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA17970", Offset = "0xA17970")]
		public KeyCode secondKey;

		[Token(Token = "0x40009BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA179A8", Offset = "0xA179A8")]
		public bool visible;

		[Token(Token = "0x40009BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA179E0", Offset = "0xA179E0")]
		public Vector2 minSize;

		[Token(Token = "0x40009BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA17A18", Offset = "0xA17A18")]
		public int maxHistory;

		[Token(Token = "0x40009BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA17A50", Offset = "0xA17A50")]
		public bool pauseGameWhileOpen;

		[Token(Token = "0x40009BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<string> m_history;

		[Token(Token = "0x40009C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int m_historyPosition;

		[Token(Token = "0x40009C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string m_input;

		[Token(Token = "0x40009C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string m_output;

		[Token(Token = "0x40009C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Rect m_windowRect;

		[Token(Token = "0x40009C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Rect m_closeButtonRect;

		[Token(Token = "0x40009C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector2 m_scrollPosition;

		[Token(Token = "0x40009C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool m_isFirstKeyDown;

		[Token(Token = "0x6000E8F")]
		[Address(RVA = "0x171DFF4", Offset = "0x171DFF4", VA = "0x171DFF4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E90")]
		[Address(RVA = "0x171E01C", Offset = "0x171E01C", VA = "0x171E01C")]
		private void SetVisible(bool newValue)
		{
		}

		[Token(Token = "0x6000E91")]
		[Address(RVA = "0x171E048", Offset = "0x171E048", VA = "0x171E048")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6000E92")]
		[Address(RVA = "0x171E1A8", Offset = "0x171E1A8", VA = "0x171E1A8")]
		private void DrawConsole()
		{
		}

		[Token(Token = "0x6000E93")]
		[Address(RVA = "0x171E31C", Offset = "0x171E31C", VA = "0x171E31C")]
		private Rect DefineWindowRect()
		{
			return default(Rect);
		}

		[Token(Token = "0x6000E94")]
		[Address(RVA = "0x171E41C", Offset = "0x171E41C", VA = "0x171E41C")]
		private void DrawConsoleWindow(int id)
		{
		}

		[Token(Token = "0x6000E95")]
		[Address(RVA = "0x171E7B4", Offset = "0x171E7B4", VA = "0x171E7B4")]
		private bool IsKeyEvent(KeyCode keyCode)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E96")]
		[Address(RVA = "0x171E82C", Offset = "0x171E82C", VA = "0x171E82C")]
		private void RunLuaCommand()
		{
		}

		[Token(Token = "0x6000E97")]
		[Address(RVA = "0x171EB2C", Offset = "0x171EB2C", VA = "0x171EB2C")]
		private string GetLuaResultString(Lua.Result result)
		{
			return null;
		}

		[Token(Token = "0x6000E98")]
		[Address(RVA = "0x171EBC8", Offset = "0x171EBC8", VA = "0x171EBC8")]
		private string FormatTableResult(Lua.Result result)
		{
			return null;
		}

		[Token(Token = "0x6000E99")]
		[Address(RVA = "0x171EA3C", Offset = "0x171EA3C", VA = "0x171EA3C")]
		private void UseHistory(int direction)
		{
		}

		[Token(Token = "0x6000E9A")]
		[Address(RVA = "0x171F38C", Offset = "0x171F38C", VA = "0x171F38C")]
		public LuaConsole()
		{
		}
	}
	[Token(Token = "0x20001AD")]
	public delegate void LuaChangedDelegate(LuaWatchItem luaWatchItem, Lua.Result newValue);
	[Token(Token = "0x20001AE")]
	public class LuaWatchItem
	{
		[Token(Token = "0x40009C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA17A88", Offset = "0xA17A88")]
		private string <luaExpression>k__BackingField;

		[Token(Token = "0x40009C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string m_currentValue;

		[Token(Token = "0x17000165")]
		public string luaExpression
		{
			[Token(Token = "0x6000E9F")]
			[Address(RVA = "0x1721F70", Offset = "0x1721F70", VA = "0x1721F70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA29C28", Offset = "0xA29C28")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EA0")]
			[Address(RVA = "0x1721F78", Offset = "0x1721F78", VA = "0x1721F78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA29C38", Offset = "0xA29C38")]
			set
			{
			}
		}

		[Token(Token = "0x17000166")]
		public string LuaExpression
		{
			[Token(Token = "0x6000EA1")]
			[Address(RVA = "0x1721F80", Offset = "0x1721F80", VA = "0x1721F80")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EA2")]
			[Address(RVA = "0x1721F88", Offset = "0x1721F88", VA = "0x1721F88")]
			set
			{
			}
		}

		[Token(Token = "0x14000008")]
		private event LuaChangedDelegate luaChanged
		{
			[Token(Token = "0x6000EA3")]
			[Address(RVA = "0x1721F90", Offset = "0x1721F90", VA = "0x1721F90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA29C48", Offset = "0xA29C48")]
			add
			{
			}
			[Token(Token = "0x6000EA4")]
			[Address(RVA = "0x1722034", Offset = "0x1722034", VA = "0x1722034")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA29C58", Offset = "0xA29C58")]
			remove
			{
			}
		}

		[Token(Token = "0x6000EA5")]
		[Address(RVA = "0x17220D8", Offset = "0x17220D8", VA = "0x17220D8")]
		public static string LuaExpressionWithReturn(string luaExpression)
		{
			return null;
		}

		[Token(Token = "0x6000EA6")]
		[Address(RVA = "0x1722158", Offset = "0x1722158", VA = "0x1722158")]
		public LuaWatchItem(string luaExpression, LuaChangedDelegate luaChangedHandler)
		{
		}

		[Token(Token = "0x6000EA7")]
		[Address(RVA = "0x1722208", Offset = "0x1722208", VA = "0x1722208")]
		public bool Matches(string luaExpression, LuaChangedDelegate luaChangedHandler)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EA8")]
		[Address(RVA = "0x172225C", Offset = "0x172225C", VA = "0x172225C")]
		public void Check()
		{
		}
	}
	[Token(Token = "0x20001AF")]
	public class LuaWatchList
	{
		[Token(Token = "0x2000587")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D758", Offset = "0xA0D758")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4001CBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string luaExpression;

			[Token(Token = "0x4001CBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LuaChangedDelegate luaChangedHandler;

			[Token(Token = "0x6002903")]
			[Address(RVA = "0x1722480", Offset = "0x1722480", VA = "0x1722480")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6002904")]
			[Address(RVA = "0x1722674", Offset = "0x1722674", VA = "0x1722674")]
			internal bool <RemoveObserver>b__0(LuaWatchItem watchItem)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40009CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<LuaWatchItem> m_watchList;

		[Token(Token = "0x6000EA9")]
		[Address(RVA = "0x1722328", Offset = "0x1722328", VA = "0x1722328")]
		public void AddObserver(string luaExpression, LuaChangedDelegate luaChangedHandler)
		{
		}

		[Token(Token = "0x6000EAA")]
		[Address(RVA = "0x17223B8", Offset = "0x17223B8", VA = "0x17223B8")]
		public void RemoveObserver(string luaExpression, LuaChangedDelegate luaChangedHandler)
		{
		}

		[Token(Token = "0x6000EAB")]
		[Address(RVA = "0x1722488", Offset = "0x1722488", VA = "0x1722488")]
		public void RemoveAllObservers()
		{
		}

		[Token(Token = "0x6000EAC")]
		[Address(RVA = "0x17224E0", Offset = "0x17224E0", VA = "0x17224E0")]
		public void NotifyObservers()
		{
		}

		[Token(Token = "0x6000EAD")]
		[Address(RVA = "0x1722604", Offset = "0x1722604", VA = "0x1722604")]
		public LuaWatchList()
		{
		}
	}
	[Token(Token = "0x20001B0")]
	public sealed class Lua
	{
		[Token(Token = "0x2000588")]
		public struct Result
		{
			[Token(Token = "0x4001CBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public LuaValue luaValue;

			[Token(Token = "0x4001CBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public LuaTableWrapper luaTableWrapper;

			[Token(Token = "0x17000506")]
			public bool hasReturnValue
			{
				[Token(Token = "0x6002906")]
				[Address(RVA = "0xB9ABC0", Offset = "0xB9ABC0", VA = "0xB9ABC0")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000507")]
			public string asString
			{
				[Token(Token = "0x6002907")]
				[Address(RVA = "0xB9ABD0", Offset = "0xB9ABD0", VA = "0xB9ABD0")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000508")]
			public bool asBool
			{
				[Token(Token = "0x6002908")]
				[Address(RVA = "0xB9ABD8", Offset = "0xB9ABD8", VA = "0xB9ABD8")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000509")]
			public float asFloat
			{
				[Token(Token = "0x6002909")]
				[Address(RVA = "0xB9ABE0", Offset = "0xB9ABE0", VA = "0xB9ABE0")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x1700050A")]
			public int asInt
			{
				[Token(Token = "0x600290A")]
				[Address(RVA = "0xB9ABE8", Offset = "0xB9ABE8", VA = "0xB9ABE8")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x1700050B")]
			public LuaTableWrapper asTable
			{
				[Token(Token = "0x600290B")]
				[Address(RVA = "0xB9ABF0", Offset = "0xB9ABF0", VA = "0xB9ABF0")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700050C")]
			public bool isString
			{
				[Token(Token = "0x600290C")]
				[Address(RVA = "0xB9ABF8", Offset = "0xB9ABF8", VA = "0xB9ABF8")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x1700050D")]
			public bool isBool
			{
				[Token(Token = "0x600290D")]
				[Address(RVA = "0xB9AC00", Offset = "0xB9AC00", VA = "0xB9AC00")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x1700050E")]
			public bool isNumber
			{
				[Token(Token = "0x600290E")]
				[Address(RVA = "0xB9AC08", Offset = "0xB9AC08", VA = "0xB9AC08")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x1700050F")]
			public bool isTable
			{
				[Token(Token = "0x600290F")]
				[Address(RVA = "0xB9AC10", Offset = "0xB9AC10", VA = "0xB9AC10")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000510")]
			public bool HasReturnValue
			{
				[Token(Token = "0x6002910")]
				[Address(RVA = "0xB9AC18", Offset = "0xB9AC18", VA = "0xB9AC18")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000511")]
			public string AsString
			{
				[Token(Token = "0x6002911")]
				[Address(RVA = "0xB9AC28", Offset = "0xB9AC28", VA = "0xB9AC28")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000512")]
			public bool AsBool
			{
				[Token(Token = "0x6002912")]
				[Address(RVA = "0xB9AC30", Offset = "0xB9AC30", VA = "0xB9AC30")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000513")]
			public float AsFloat
			{
				[Token(Token = "0x6002913")]
				[Address(RVA = "0xB9AC38", Offset = "0xB9AC38", VA = "0xB9AC38")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000514")]
			public int AsInt
			{
				[Token(Token = "0x6002914")]
				[Address(RVA = "0xB9AC40", Offset = "0xB9AC40", VA = "0xB9AC40")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x17000515")]
			public LuaTableWrapper AsTable
			{
				[Token(Token = "0x6002915")]
				[Address(RVA = "0xB9AC48", Offset = "0xB9AC48", VA = "0xB9AC48")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000516")]
			public bool IsString
			{
				[Token(Token = "0x6002916")]
				[Address(RVA = "0xB9AC50", Offset = "0xB9AC50", VA = "0xB9AC50")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000517")]
			public bool IsBool
			{
				[Token(Token = "0x6002917")]
				[Address(RVA = "0xB9AC58", Offset = "0xB9AC58", VA = "0xB9AC58")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000518")]
			public bool IsNumber
			{
				[Token(Token = "0x6002918")]
				[Address(RVA = "0xB9AC60", Offset = "0xB9AC60", VA = "0xB9AC60")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000519")]
			public bool IsTable
			{
				[Token(Token = "0x6002919")]
				[Address(RVA = "0xB9AC68", Offset = "0xB9AC68", VA = "0xB9AC68")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6002905")]
			[Address(RVA = "0xB9ABB8", Offset = "0xB9ABB8", VA = "0xB9ABB8")]
			public Result(LuaValue luaValue)
			{
			}
		}

		[Token(Token = "0x40009CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Result noResult;

		[Token(Token = "0x40009CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA17AA8", Offset = "0xA17AA8")]
		private static bool <wasInvoked>k__BackingField;

		[Token(Token = "0x40009CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA17AB8", Offset = "0xA17AB8")]
		private static bool <muteExceptions>k__BackingField;

		[Token(Token = "0x40009CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA17AC8", Offset = "0xA17AC8")]
		private static bool <warnRegisteringExistingFunction>k__BackingField;

		[Token(Token = "0x40009CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static LuaTable m_environment;

		[Token(Token = "0x17000167")]
		public static Result NoResult
		{
			[Token(Token = "0x6000EAE")]
			[Address(RVA = "0x171C408", Offset = "0x171C408", VA = "0x171C408")]
			get
			{
				return default(Result);
			}
		}

		[Token(Token = "0x17000168")]
		public static bool wasInvoked
		{
			[Token(Token = "0x6000EAF")]
			[Address(RVA = "0x171C470", Offset = "0x171C470", VA = "0x171C470")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA29C68", Offset = "0xA29C68")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000EB0")]
			[Address(RVA = "0x171C4D8", Offset = "0x171C4D8", VA = "0x171C4D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA29C78", Offset = "0xA29C78")]
			set
			{
			}
		}

		[Token(Token = "0x17000169")]
		public static bool muteExceptions
		{
			[Token(Token = "0x6000EB1")]
			[Address(RVA = "0x171C548", Offset = "0x171C548", VA = "0x171C548")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA29C88", Offset = "0xA29C88")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000EB2")]
			[Address(RVA = "0x171C5B0", Offset = "0x171C5B0", VA = "0x171C5B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA29C98", Offset = "0xA29C98")]
			set
			{
			}
		}

		[Token(Token = "0x1700016A")]
		public static bool warnRegisteringExistingFunction
		{
			[Token(Token = "0x6000EB3")]
			[Address(RVA = "0x171C620", Offset = "0x171C620", VA = "0x171C620")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA29CA8", Offset = "0xA29CA8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000EB4")]
			[Address(RVA = "0x171C688", Offset = "0x171C688", VA = "0x171C688")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA29CB8", Offset = "0xA29CB8")]
			set
			{
			}
		}

		[Token(Token = "0x1700016B")]
		public static LuaTable environment
		{
			[Token(Token = "0x6000EB5")]
			[Address(RVA = "0x171C6F8", Offset = "0x171C6F8", VA = "0x171C6F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016C")]
		public static LuaTable Environment
		{
			[Token(Token = "0x6000EB6")]
			[Address(RVA = "0x171C760", Offset = "0x171C760", VA = "0x171C760")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016D")]
		public static bool WasInvoked
		{
			[Token(Token = "0x6000EB8")]
			[Address(RVA = "0x171C860", Offset = "0x171C860", VA = "0x171C860")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000EB9")]
			[Address(RVA = "0x171C904", Offset = "0x171C904", VA = "0x171C904")]
			set
			{
			}
		}

		[Token(Token = "0x1700016E")]
		public static bool MuteExceptions
		{
			[Token(Token = "0x6000EBA")]
			[Address(RVA = "0x171C9B8", Offset = "0x171C9B8", VA = "0x171C9B8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000EBB")]
			[Address(RVA = "0x171CA5C", Offset = "0x171CA5C", VA = "0x171CA5C")]
			set
			{
			}
		}

		[Token(Token = "0x1700016F")]
		public static bool WarnRegisteringExistingFunction
		{
			[Token(Token = "0x6000EBC")]
			[Address(RVA = "0x171CB10", Offset = "0x171CB10", VA = "0x171CB10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000EBD")]
			[Address(RVA = "0x171CBB4", Offset = "0x171CBB4", VA = "0x171CBB4")]
			set
			{
			}
		}

		[Token(Token = "0x6000EB7")]
		[Address(RVA = "0x171C7C8", Offset = "0x171C7C8", VA = "0x171C7C8")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xA29CC8", Offset = "0xA29CC8")]
		private static void InitStaticVariables()
		{
		}

		[Token(Token = "0x6000EBE")]
		[Address(RVA = "0x171CC68", Offset = "0x171CC68", VA = "0x171CC68")]
		public static Result Run(string luaCode, bool debug, bool allowExceptions)
		{
			return default(Result);
		}

		[Token(Token = "0x6000EBF")]
		[Address(RVA = "0x17163D0", Offset = "0x17163D0", VA = "0x17163D0")]
		public static Result Run(string luaCode, bool debug)
		{
			return default(Result);
		}

		[Token(Token = "0x6000EC0")]
		[Address(RVA = "0x171CCDC", Offset = "0x171CCDC", VA = "0x171CCDC")]
		public static Result Run(string luaCode)
		{
			return default(Result);
		}

		[Token(Token = "0x6000EC1")]
		[Address(RVA = "0x171CD48", Offset = "0x171CD48", VA = "0x171CD48")]
		public static bool IsTrue(string luaCondition, bool debug, bool allowExceptions)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EC2")]
		[Address(RVA = "0x171CEF0", Offset = "0x171CEF0", VA = "0x171CEF0")]
		public static bool IsTrue(string luaCondition, bool debug)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EC3")]
		[Address(RVA = "0x171CF68", Offset = "0x171CF68", VA = "0x171CF68")]
		public static bool IsTrue(string luaCondition)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EC4")]
		[Address(RVA = "0x171CCCC", Offset = "0x171CCCC", VA = "0x171CCCC")]
		public static LuaValue RunRaw(string luaCode, bool debug, bool allowExceptions)
		{
			return null;
		}

		[Token(Token = "0x6000EC5")]
		[Address(RVA = "0x171CFD4", Offset = "0x171CFD4", VA = "0x171CFD4")]
		public static LuaValue RunRaw(string luaCode, bool debug)
		{
			return null;
		}

		[Token(Token = "0x6000EC6")]
		[Address(RVA = "0x171D034", Offset = "0x171D034", VA = "0x171D034")]
		public static LuaValue RunRaw(string luaCode)
		{
			return null;
		}

		[Token(Token = "0x6000EC7")]
		[Address(RVA = "0x171D094", Offset = "0x171D094", VA = "0x171D094")]
		public static void RegisterFunction(string functionName, object target, MethodInfo method)
		{
		}

		[Token(Token = "0x6000EC8")]
		[Address(RVA = "0x171D488", Offset = "0x171D488", VA = "0x171D488")]
		public static void UnregisterFunction(string functionName)
		{
		}

		[Token(Token = "0x6000EC9")]
		[Address(RVA = "0x171D680", Offset = "0x171D680", VA = "0x171D680")]
		public Lua()
		{
		}
	}
	[Token(Token = "0x20001B1")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xA07B10", Offset = "0xA07B10")]
	public class LuaTableWrapper
	{
		[Token(Token = "0x2000589")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D768", Offset = "0xA0D768")]
		private sealed class <get_keys>d__7 : IEnumerable<string>, IEnumerable, IEnumerator<string>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001CBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private string <>2__current;

			[Token(Token = "0x4001CC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001CC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LuaTableWrapper <>4__this;

			[Token(Token = "0x4001CC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private IEnumerator<LuaValue> <>7__wrap1;

			[Token(Token = "0x1700051A")]
			private string System.Collections.Generic.IEnumerator<System.String>.Current
			{
				[Token(Token = "0x600291E")]
				[Address(RVA = "0x1720E94", Offset = "0x1720E94", VA = "0x1720E94", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700051B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002920")]
				[Address(RVA = "0x1720EFC", Offset = "0x1720EFC", VA = "0x1720EFC", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600291A")]
			[Address(RVA = "0x171F80C", Offset = "0x171F80C", VA = "0x171F80C")]
			[DebuggerHidden]
			public <get_keys>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x600291B")]
			[Address(RVA = "0x1720AF4", Offset = "0x1720AF4", VA = "0x1720AF4", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600291C")]
			[Address(RVA = "0x1720BD0", Offset = "0x1720BD0", VA = "0x1720BD0", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600291D")]
			[Address(RVA = "0x1720B10", Offset = "0x1720B10", VA = "0x1720B10")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600291F")]
			[Address(RVA = "0x1720E9C", Offset = "0x1720E9C", VA = "0x1720E9C", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002921")]
			[Address(RVA = "0x1720F04", Offset = "0x1720F04", VA = "0x1720F04", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<string> System.Collections.Generic.IEnumerable<System.String>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002922")]
			[Address(RVA = "0x1720FB0", Offset = "0x1720FB0", VA = "0x1720FB0", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x200058A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D778", Offset = "0xA0D778")]
		private sealed class <get_values>d__9 : IEnumerable<object>, IEnumerable, IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001CC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001CC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001CC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LuaTableWrapper <>4__this;

			[Token(Token = "0x4001CC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private IEnumerator<LuaValue> <>7__wrap1;

			[Token(Token = "0x4001CC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private IEnumerator<KeyValuePair<LuaValue, LuaValue>> <>7__wrap2;

			[Token(Token = "0x1700051C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002928")]
				[Address(RVA = "0x1721750", Offset = "0x1721750", VA = "0x1721750", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700051D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600292A")]
				[Address(RVA = "0x17217B8", Offset = "0x17217B8", VA = "0x17217B8", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002923")]
			[Address(RVA = "0x171F8C4", Offset = "0x171F8C4", VA = "0x171F8C4")]
			[DebuggerHidden]
			public <get_values>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6002924")]
			[Address(RVA = "0x1720FB4", Offset = "0x1720FB4", VA = "0x1720FB4", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002925")]
			[Address(RVA = "0x1721164", Offset = "0x1721164", VA = "0x1721164", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002926")]
			[Address(RVA = "0x1720FE4", Offset = "0x1720FE4", VA = "0x1720FE4")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002927")]
			[Address(RVA = "0x17210A4", Offset = "0x17210A4", VA = "0x17210A4")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x6002929")]
			[Address(RVA = "0x1721758", Offset = "0x1721758", VA = "0x1721758", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x600292B")]
			[Address(RVA = "0x17217C0", Offset = "0x17217C0", VA = "0x17217C0", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<object> System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x600292C")]
			[Address(RVA = "0x172186C", Offset = "0x172186C", VA = "0x172186C", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x200058B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D788", Offset = "0xA0D788")]
		private sealed class <get_Keys>d__15 : IEnumerable<string>, IEnumerable, IEnumerator<string>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001CC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private string <>2__current;

			[Token(Token = "0x4001CCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001CCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LuaTableWrapper <>4__this;

			[Token(Token = "0x4001CCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private IEnumerator<LuaValue> <>7__wrap1;

			[Token(Token = "0x1700051E")]
			private string System.Collections.Generic.IEnumerator<System.String>.Current
			{
				[Token(Token = "0x6002931")]
				[Address(RVA = "0x1720118", Offset = "0x1720118", VA = "0x1720118", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700051F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002933")]
				[Address(RVA = "0x1720180", Offset = "0x1720180", VA = "0x1720180", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600292D")]
			[Address(RVA = "0x171F990", Offset = "0x171F990", VA = "0x171F990")]
			[DebuggerHidden]
			public <get_Keys>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x600292E")]
			[Address(RVA = "0x171FD78", Offset = "0x171FD78", VA = "0x171FD78", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600292F")]
			[Address(RVA = "0x171FE54", Offset = "0x171FE54", VA = "0x171FE54", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002930")]
			[Address(RVA = "0x171FD94", Offset = "0x171FD94", VA = "0x171FD94")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002932")]
			[Address(RVA = "0x1720120", Offset = "0x1720120", VA = "0x1720120", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002934")]
			[Address(RVA = "0x1720188", Offset = "0x1720188", VA = "0x1720188", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<string> System.Collections.Generic.IEnumerable<System.String>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002935")]
			[Address(RVA = "0x1720234", Offset = "0x1720234", VA = "0x1720234", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x200058C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D798", Offset = "0xA0D798")]
		private sealed class <get_Values>d__17 : IEnumerable<object>, IEnumerable, IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001CCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001CD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001CD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LuaTableWrapper <>4__this;

			[Token(Token = "0x4001CD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private IEnumerator<LuaValue> <>7__wrap1;

			[Token(Token = "0x4001CD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private IEnumerator<KeyValuePair<LuaValue, LuaValue>> <>7__wrap2;

			[Token(Token = "0x17000520")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600293B")]
				[Address(RVA = "0x17209D4", Offset = "0x17209D4", VA = "0x17209D4", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000521")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600293D")]
				[Address(RVA = "0x1720A3C", Offset = "0x1720A3C", VA = "0x1720A3C", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002936")]
			[Address(RVA = "0x171FA48", Offset = "0x171FA48", VA = "0x171FA48")]
			[DebuggerHidden]
			public <get_Values>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6002937")]
			[Address(RVA = "0x1720238", Offset = "0x1720238", VA = "0x1720238", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002938")]
			[Address(RVA = "0x17203E8", Offset = "0x17203E8", VA = "0x17203E8", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002939")]
			[Address(RVA = "0x1720268", Offset = "0x1720268", VA = "0x1720268")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600293A")]
			[Address(RVA = "0x1720328", Offset = "0x1720328", VA = "0x1720328")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x600293C")]
			[Address(RVA = "0x17209DC", Offset = "0x17209DC", VA = "0x17209DC", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x600293E")]
			[Address(RVA = "0x1720A44", Offset = "0x1720A44", VA = "0x1720A44", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<object> System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x600293F")]
			[Address(RVA = "0x1720AF0", Offset = "0x1720AF0", VA = "0x1720AF0", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x40009D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LuaTable luaTable;

		[Token(Token = "0x17000170")]
		public bool isValid
		{
			[Token(Token = "0x6000ECC")]
			[Address(RVA = "0x171F750", Offset = "0x171F750", VA = "0x171F750")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000171")]
		public int count
		{
			[Token(Token = "0x6000ECD")]
			[Address(RVA = "0x171F760", Offset = "0x171F760", VA = "0x171F760")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000172")]
		public IEnumerable<string> keys
		{
			[Token(Token = "0x6000ECE")]
			[Address(RVA = "0x171F010", Offset = "0x171F010", VA = "0x171F010")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA29CDC", Offset = "0xA29CDC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000173")]
		public IEnumerable<object> values
		{
			[Token(Token = "0x6000ECF")]
			[Address(RVA = "0x171F844", Offset = "0x171F844", VA = "0x171F844")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA29D40", Offset = "0xA29D40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000174")]
		public bool IsValid
		{
			[Token(Token = "0x6000ED0")]
			[Address(RVA = "0x171F8FC", Offset = "0x171F8FC", VA = "0x171F8FC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000175")]
		public int Count
		{
			[Token(Token = "0x6000ED1")]
			[Address(RVA = "0x171F90C", Offset = "0x171F90C", VA = "0x171F90C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000176")]
		public IEnumerable<string> Keys
		{
			[Token(Token = "0x6000ED2")]
			[Address(RVA = "0x171F910", Offset = "0x171F910", VA = "0x171F910")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA29DA4", Offset = "0xA29DA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000177")]
		public IEnumerable<object> Values
		{
			[Token(Token = "0x6000ED3")]
			[Address(RVA = "0x171F9C8", Offset = "0x171F9C8", VA = "0x171F9C8")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA29E08", Offset = "0xA29E08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000178")]
		public object Item
		{
			[Token(Token = "0x6000ED4")]
			[Address(RVA = "0x171F090", Offset = "0x171F090", VA = "0x171F090")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000179")]
		public object Item
		{
			[Token(Token = "0x6000ED5")]
			[Address(RVA = "0x171FA80", Offset = "0x171FA80", VA = "0x171FA80")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000ECB")]
		[Address(RVA = "0x171D870", Offset = "0x171D870", VA = "0x171D870")]
		public LuaTableWrapper(LuaTable luaTable)
		{
		}
	}
	[Token(Token = "0x20001B2")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA07B48", Offset = "0xA07B48")]
	public class ActorSubtitleColor : MonoBehaviour
	{
		[Token(Token = "0x200058D")]
		public enum ApplyTo
		{
			[Token(Token = "0x4001CD5")]
			DialogueText,
			[Token(Token = "0x4001CD6")]
			PrependedActorName
		}

		[Token(Token = "0x40009D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA17AD8", Offset = "0xA17AD8")]
		public Color color;

		[Token(Token = "0x40009D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA17B10", Offset = "0xA17B10")]
		public ApplyTo applyTo;

		[Token(Token = "0x40009D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA17B48", Offset = "0xA17B48")]
		public string prependActorNameSeparator;

		[Token(Token = "0x6000ED6")]
		[Address(RVA = "0x14286DC", Offset = "0x14286DC", VA = "0x14286DC")]
		public void OnConversationLine(Subtitle subtitle)
		{
		}

		[Token(Token = "0x6000ED7")]
		[Address(RVA = "0x14287A0", Offset = "0x14287A0", VA = "0x14287A0")]
		public void OnBarkLine(Subtitle subtitle)
		{
		}

		[Token(Token = "0x6000ED8")]
		[Address(RVA = "0x14286E0", Offset = "0x14286E0", VA = "0x14286E0")]
		private void CheckSubtitle(Subtitle subtitle)
		{
		}

		[Token(Token = "0x6000ED9")]
		[Address(RVA = "0x14287A4", Offset = "0x14287A4", VA = "0x14287A4")]
		private string ProcessText(Subtitle subtitle)
		{
			return null;
		}

		[Token(Token = "0x6000EDA")]
		[Address(RVA = "0x14288EC", Offset = "0x14288EC", VA = "0x14288EC")]
		public ActorSubtitleColor()
		{
		}
	}
	[Token(Token = "0x20001B3")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA07B80", Offset = "0xA07B80")]
	public class DefaultCameraAngle : MonoBehaviour
	{
		[Token(Token = "0x40009D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string cameraAngle;

		[Token(Token = "0x6000EDB")]
		[Address(RVA = "0x147A5C0", Offset = "0x147A5C0", VA = "0x147A5C0")]
		public DefaultCameraAngle()
		{
		}
	}
	[Token(Token = "0x20001B4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA07BB8", Offset = "0xA07BB8")]
	public class DialogueActor : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200058E")]
		public class BarkUISettings
		{
			[Token(Token = "0x4001CD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA24378", Offset = "0xA24378")]
			public AbstractBarkUI barkUI;

			[Token(Token = "0x4001CD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA243B0", Offset = "0xA243B0")]
			public Vector3 barkUIOffset;

			[Token(Token = "0x6002940")]
			[Address(RVA = "0x147E568", Offset = "0x147E568", VA = "0x147E568")]
			public BarkUISettings()
			{
			}
		}

		[Token(Token = "0x200058F")]
		public enum UseMenuPanelFor
		{
			[Token(Token = "0x4001CDA")]
			OnlyMe,
			[Token(Token = "0x4001CDB")]
			MeAndResponsesToMe
		}

		[Serializable]
		[Token(Token = "0x2000590")]
		public class StandardDialogueUISettings
		{
			[Token(Token = "0x4001CDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA243E8", Offset = "0xA243E8")]
			public SubtitlePanelNumber subtitlePanelNumber;

			[Token(Token = "0x4001CDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA24420", Offset = "0xA24420")]
			public StandardUISubtitlePanel customSubtitlePanel;

			[Token(Token = "0x4001CDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA24458", Offset = "0xA24458")]
			public Vector3 customSubtitlePanelOffset;

			[Token(Token = "0x4001CDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA24490", Offset = "0xA24490")]
			public MenuPanelNumber menuPanelNumber;

			[Token(Token = "0x4001CE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA244C8", Offset = "0xA244C8")]
			public StandardUIMenuPanel customMenuPanel;

			[Token(Token = "0x4001CE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA24500", Offset = "0xA24500")]
			public Vector3 customMenuPanelOffset;

			[Token(Token = "0x4001CE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA24538", Offset = "0xA24538")]
			public UseMenuPanelFor useMenuPanelFor;

			[Token(Token = "0x4001CE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA24570", Offset = "0xA24570")]
			public RuntimeAnimatorController portraitAnimatorController;

			[Token(Token = "0x4001CE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA245A8", Offset = "0xA245A8")]
			public bool setSubtitleColor;

			[Token(Token = "0x4001CE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA245E0", Offset = "0xA245E0")]
			public bool applyColorToPrependedName;

			[Token(Token = "0x4001CE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA24618", Offset = "0xA24618")]
			public string prependActorNameSeparator;

			[Token(Token = "0x4001CE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA24650", Offset = "0xA24650")]
			public Color subtitleColor;

			[Token(Token = "0x6002941")]
			[Address(RVA = "0x147E5C8", Offset = "0x147E5C8", VA = "0x147E5C8")]
			public StandardDialogueUISettings()
			{
			}
		}

		[Token(Token = "0x40009D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA17B80", Offset = "0xA17B80")]
		[AttributeAttribute(Name = "ActorPopupAttribute", RVA = "0xA17B80", Offset = "0xA17B80")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA17B80", Offset = "0xA17B80")]
		public string actor;

		[Token(Token = "0x40009D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA17BF4", Offset = "0xA17BF4")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA17BF4", Offset = "0xA17BF4")]
		public string persistentDataName;

		[Token(Token = "0x40009D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA17C54", Offset = "0xA17C54")]
		public Texture2D portrait;

		[Token(Token = "0x40009D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA17C8C", Offset = "0xA17C8C")]
		public Sprite spritePortrait;

		[Token(Token = "0x40009D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public BarkUISettings barkUISettings;

		[Token(Token = "0x40009DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public StandardDialogueUISettings standardDialogueUISettings;

		[Token(Token = "0x6000EDC")]
		[Address(RVA = "0x147D304", Offset = "0x147D304", VA = "0x147D304", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000EDD")]
		[Address(RVA = "0x147D520", Offset = "0x147D520", VA = "0x147D520", Slot = "5")]
		public virtual Sprite GetPortraitSprite()
		{
			return null;
		}

		[Token(Token = "0x6000EDE")]
		[Address(RVA = "0x147D330", Offset = "0x147D330", VA = "0x147D330")]
		private void SetupBarkUI()
		{
		}

		[Token(Token = "0x6000EDF")]
		[Address(RVA = "0x147D590", Offset = "0x147D590", VA = "0x147D590", Slot = "6")]
		protected virtual void SetupDialoguePanels()
		{
		}

		[Token(Token = "0x6000EE0")]
		[Address(RVA = "0x147DA24", Offset = "0x147DA24", VA = "0x147DA24", Slot = "7")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000EE1")]
		[Address(RVA = "0x147DAC4", Offset = "0x147DAC4", VA = "0x147DAC4", Slot = "8")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000EE2")]
		[Address(RVA = "0x147DB64", Offset = "0x147DB64", VA = "0x147DB64", Slot = "9")]
		public virtual string GetName()
		{
			return null;
		}

		[Token(Token = "0x6000EE3")]
		[Address(RVA = "0x147DB70", Offset = "0x147DB70", VA = "0x147DB70", Slot = "10")]
		public virtual string GetActorName()
		{
			return null;
		}

		[Token(Token = "0x6000EE4")]
		[Address(RVA = "0x147DD24", Offset = "0x147DD24", VA = "0x147DD24", Slot = "11")]
		public virtual string GetPersistentDataName()
		{
			return null;
		}

		[Token(Token = "0x6000EE5")]
		[Address(RVA = "0x147DD6C", Offset = "0x147DD6C", VA = "0x147DD6C", Slot = "12")]
		public virtual SubtitlePanelNumber GetSubtitlePanelNumber()
		{
			return default(SubtitlePanelNumber);
		}

		[Token(Token = "0x6000EE6")]
		[Address(RVA = "0x147DD88", Offset = "0x147DD88", VA = "0x147DD88", Slot = "13")]
		public virtual void SetSubtitlePanelNumber(SubtitlePanelNumber newSubtitlePanelNumber)
		{
		}

		[Token(Token = "0x6000EE7")]
		[Address(RVA = "0x147DEFC", Offset = "0x147DEFC", VA = "0x147DEFC", Slot = "14")]
		public virtual MenuPanelNumber GetMenuPanelNumber()
		{
			return default(MenuPanelNumber);
		}

		[Token(Token = "0x6000EE8")]
		[Address(RVA = "0x147DF18", Offset = "0x147DF18", VA = "0x147DF18", Slot = "15")]
		public virtual void SetMenuPanelNumber(MenuPanelNumber newMenuPanelNumber)
		{
		}

		[Token(Token = "0x6000EE9")]
		[Address(RVA = "0x147E090", Offset = "0x147E090", VA = "0x147E090", Slot = "16")]
		public virtual string AdjustSubtitleColor(Subtitle subtitle)
		{
			return null;
		}

		[Token(Token = "0x6000EEA")]
		[Address(RVA = "0x146FE00", Offset = "0x146FE00", VA = "0x146FE00")]
		public static DialogueActor GetDialogueActorComponent(Transform t)
		{
			return null;
		}

		[Token(Token = "0x6000EEB")]
		[Address(RVA = "0x146CD64", Offset = "0x146CD64", VA = "0x146CD64")]
		public static string GetActorName(Transform t)
		{
			return null;
		}

		[Token(Token = "0x6000EEC")]
		[Address(RVA = "0x147E1FC", Offset = "0x147E1FC", VA = "0x147E1FC")]
		public static string GetPersistentDataName(Transform t)
		{
			return null;
		}

		[Token(Token = "0x6000EED")]
		[Address(RVA = "0x147E310", Offset = "0x147E310", VA = "0x147E310")]
		public static SubtitlePanelNumber GetSubtitlePanelNumber(Transform t)
		{
			return default(SubtitlePanelNumber);
		}

		[Token(Token = "0x6000EEE")]
		[Address(RVA = "0x147E3B8", Offset = "0x147E3B8", VA = "0x147E3B8")]
		public static IBarkUI GetBarkUI(Transform t)
		{
			return null;
		}

		[Token(Token = "0x6000EEF")]
		[Address(RVA = "0x147E4E8", Offset = "0x147E4E8", VA = "0x147E4E8")]
		public DialogueActor()
		{
		}
	}
	[Token(Token = "0x20001B5")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA07BF0", Offset = "0xA07BF0")]
	public class OverrideDialogueUI : OverrideUIBase
	{
		[Token(Token = "0x40009DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA17CC4", Offset = "0xA17CC4")]
		public GameObject ui;

		[Token(Token = "0x6000EF0")]
		[Address(RVA = "0x1722BCC", Offset = "0x1722BCC", VA = "0x1722BCC")]
		public OverrideDialogueUI()
		{
		}
	}
	[Token(Token = "0x20001B6")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA07C28", Offset = "0xA07C28")]
	public class OverrideDisplaySettings : OverrideUIBase
	{
		[Token(Token = "0x40009DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA17CFC", Offset = "0xA17CFC")]
		public DisplaySettings displaySettings;

		[Token(Token = "0x6000EF1")]
		[Address(RVA = "0x1722BDC", Offset = "0x1722BDC", VA = "0x1722BDC")]
		public OverrideDisplaySettings()
		{
		}
	}
	[Token(Token = "0x20001B7")]
	public abstract class OverrideUIBase : MonoBehaviour
	{
		[Token(Token = "0x40009DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA17D34", Offset = "0xA17D34")]
		public int priority;

		[Token(Token = "0x6000EF2")]
		[Address(RVA = "0x1722BD4", Offset = "0x1722BD4", VA = "0x1722BD4")]
		protected OverrideUIBase()
		{
		}
	}
	[Token(Token = "0x20001B8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA07C60", Offset = "0xA07C60")]
	public class OverrideActorName : DialogueActor
	{
		[Token(Token = "0x1700017A")]
		public string overrideName
		{
			[Token(Token = "0x6000EF3")]
			[Address(RVA = "0x1722B9C", Offset = "0x1722B9C", VA = "0x1722B9C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EF4")]
			[Address(RVA = "0x1722BA4", Offset = "0x1722BA4", VA = "0x1722BA4")]
			set
			{
			}
		}

		[Token(Token = "0x1700017B")]
		public string internalName
		{
			[Token(Token = "0x6000EF5")]
			[Address(RVA = "0x1722BAC", Offset = "0x1722BAC", VA = "0x1722BAC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EF6")]
			[Address(RVA = "0x1722BB4", Offset = "0x1722BB4", VA = "0x1722BB4")]
			set
			{
			}
		}

		[Token(Token = "0x6000EF7")]
		[Address(RVA = "0x1722BBC", Offset = "0x1722BBC", VA = "0x1722BBC")]
		public static string GetInternalName(Transform t)
		{
			return null;
		}

		[Token(Token = "0x6000EF8")]
		[Address(RVA = "0x1722BC4", Offset = "0x1722BC4", VA = "0x1722BC4")]
		public OverrideActorName()
		{
		}
	}
	[Token(Token = "0x20001B9")]
	public enum BarkOrder
	{
		[Token(Token = "0x40009DF")]
		Random,
		[Token(Token = "0x40009E0")]
		Sequential,
		[Token(Token = "0x40009E1")]
		FirstValid
	}
	[Token(Token = "0x20001BA")]
	public class BarkHistory
	{
		[Token(Token = "0x40009E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BarkOrder order;

		[Token(Token = "0x40009E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int index;

		[Token(Token = "0x6000EF9")]
		[Address(RVA = "0x142D218", Offset = "0x142D218", VA = "0x142D218")]
		public BarkHistory(BarkOrder order)
		{
		}

		[Token(Token = "0x6000EFA")]
		[Address(RVA = "0x142D244", Offset = "0x142D244", VA = "0x142D244")]
		public int GetNextIndex(int numEntries)
		{
			return default(int);
		}

		[Token(Token = "0x6000EFB")]
		[Address(RVA = "0x1430370", Offset = "0x1430370", VA = "0x1430370")]
		public void Reset()
		{
		}
	}
	[Token(Token = "0x20001BB")]
	public enum BarkSubtitleSetting
	{
		[Token(Token = "0x40009E5")]
		SameAsDialogueManager,
		[Token(Token = "0x40009E6")]
		Show,
		[Token(Token = "0x40009E7")]
		Hide
	}
	[Token(Token = "0x20001BC")]
	public static class BarkController
	{
		[Token(Token = "0x2000591")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D7A8", Offset = "0xA0D7A8")]
		private sealed class <Bark>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001CE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001CEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string conversationTitle;

			[Token(Token = "0x4001CEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform speaker;

			[Token(Token = "0x4001CEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Transform listener;

			[Token(Token = "0x4001CED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool stopAtFirstValid;

			[Token(Token = "0x4001CEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public BarkHistory barkHistory;

			[Token(Token = "0x4001CEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public DialogueDatabase database;

			[Token(Token = "0x4001CF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private bool <barked>5__2;

			[Token(Token = "0x4001CF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private IBarkUI <barkUI>5__3;

			[Token(Token = "0x4001CF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Sequencer <sequencer>5__4;

			[Token(Token = "0x17000522")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002946")]
				[Address(RVA = "0x142D27C", Offset = "0x142D27C", VA = "0x142D27C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000523")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002948")]
				[Address(RVA = "0x142D2E4", Offset = "0x142D2E4", VA = "0x142D2E4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002942")]
			[Address(RVA = "0x142AD70", Offset = "0x142AD70", VA = "0x142AD70")]
			[DebuggerHidden]
			public <Bark>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6002943")]
			[Address(RVA = "0x142B6AC", Offset = "0x142B6AC", VA = "0x142B6AC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002944")]
			[Address(RVA = "0x142B774", Offset = "0x142B774", VA = "0x142B774", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002945")]
			[Address(RVA = "0x142B6C8", Offset = "0x142B6C8", VA = "0x142B6C8")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002947")]
			[Address(RVA = "0x142D284", Offset = "0x142D284", VA = "0x142D284", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000592")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D7B8", Offset = "0xA0D7B8")]
		private sealed class <Bark>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001CF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001CF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Subtitle subtitle;

			[Token(Token = "0x4001CF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform speaker;

			[Token(Token = "0x4001CF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Transform listener;

			[Token(Token = "0x4001CF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public IBarkUI barkUI;

			[Token(Token = "0x4001CF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Sequencer <sequencer>5__2;

			[Token(Token = "0x17000524")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600294C")]
				[Address(RVA = "0x142DB9C", Offset = "0x142DB9C", VA = "0x142DB9C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000525")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600294E")]
				[Address(RVA = "0x142DC04", Offset = "0x142DC04", VA = "0x142DC04", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002949")]
			[Address(RVA = "0x142B120", Offset = "0x142B120", VA = "0x142B120")]
			[DebuggerHidden]
			public <Bark>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x600294A")]
			[Address(RVA = "0x142D2EC", Offset = "0x142D2EC", VA = "0x142D2EC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600294B")]
			[Address(RVA = "0x142D2F0", Offset = "0x142D2F0", VA = "0x142D2F0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600294D")]
			[Address(RVA = "0x142DBA4", Offset = "0x142DBA4", VA = "0x142DBA4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000593")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D7C8", Offset = "0xA0D7C8")]
		private sealed class <Bark>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001CFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001CFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Subtitle subtitle;

			[Token(Token = "0x4001CFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool skipSequence;

			[Token(Token = "0x4001CFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Transform <speaker>5__2;

			[Token(Token = "0x4001CFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Transform <listener>5__3;

			[Token(Token = "0x4001D00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private IBarkUI <barkUI>5__4;

			[Token(Token = "0x4001D01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Sequencer <sequencer>5__5;

			[Token(Token = "0x17000526")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002952")]
				[Address(RVA = "0x142E52C", Offset = "0x142E52C", VA = "0x142E52C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000527")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002954")]
				[Address(RVA = "0x142E594", Offset = "0x142E594", VA = "0x142E594", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600294F")]
			[Address(RVA = "0x142B1D0", Offset = "0x142B1D0", VA = "0x142B1D0")]
			[DebuggerHidden]
			public <Bark>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6002950")]
			[Address(RVA = "0x142DC0C", Offset = "0x142DC0C", VA = "0x142DC0C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002951")]
			[Address(RVA = "0x142DC10", Offset = "0x142DC10", VA = "0x142DC10", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002953")]
			[Address(RVA = "0x142E534", Offset = "0x142E534", VA = "0x142E534", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40009E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<Transform, int> currentBarkPriority;

		[Token(Token = "0x40009E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA17D6C", Offset = "0xA17D6C")]
		private static Sequencer <LastSequencer>k__BackingField;

		[Token(Token = "0x1700017C")]
		public static Sequencer LastSequencer
		{
			[Token(Token = "0x6000EFC")]
			[Address(RVA = "0x142A828", Offset = "0x142A828", VA = "0x142A828")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA29E6C", Offset = "0xA29E6C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EFD")]
			[Address(RVA = "0x142A890", Offset = "0x142A890", VA = "0x142A890")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA29E7C", Offset = "0xA29E7C")]
			private set
			{
			}
		}

		[Token(Token = "0x6000EFE")]
		[Address(RVA = "0x142A8FC", Offset = "0x142A8FC", VA = "0x142A8FC")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xA29E8C", Offset = "0xA29E8C")]
		private static void InitStaticVariables()
		{
		}

		[Token(Token = "0x6000EFF")]
		[Address(RVA = "0x142A988", Offset = "0x142A988", VA = "0x142A988")]
		static BarkController()
		{
		}

		[Token(Token = "0x6000F00")]
		[Address(RVA = "0x142AA44", Offset = "0x142AA44", VA = "0x142AA44")]
		private static int GetSpeakerCurrentBarkPriority(Transform speaker)
		{
			return default(int);
		}

		[Token(Token = "0x6000F01")]
		[Address(RVA = "0x142AB18", Offset = "0x142AB18", VA = "0x142AB18")]
		private static void SetSpeakerCurrentBarkPriority(Transform speaker, int priority)
		{
		}

		[Token(Token = "0x6000F02")]
		[Address(RVA = "0x142AC38", Offset = "0x142AC38", VA = "0x142AC38")]
		private static int GetEntryBarkPriority(DialogueEntry entry)
		{
			return default(int);
		}

		[Token(Token = "0x6000F03")]
		[Address(RVA = "0x142ACC4", Offset = "0x142ACC4", VA = "0x142ACC4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA29EA0", Offset = "0xA29EA0")]
		public static IEnumerator Bark(string conversationTitle, Transform speaker, Transform listener, BarkHistory barkHistory, [Optional] DialogueDatabase database, bool stopAtFirstValid = false)
		{
			return null;
		}

		[Token(Token = "0x6000F04")]
		[Address(RVA = "0x142AD9C", Offset = "0x142AD9C", VA = "0x142AD9C")]
		private static Sequencer PlayBarkSequence(Subtitle subtitle, Transform speaker, Transform listener)
		{
			return null;
		}

		[Token(Token = "0x6000F05")]
		[Address(RVA = "0x142AE44", Offset = "0x142AE44", VA = "0x142AE44")]
		private static Sequencer PlayBarkSequence(string barkText, string sequence, string entrytag, Transform speaker, Transform listener)
		{
			return null;
		}

		[Token(Token = "0x6000F06")]
		[Address(RVA = "0x142B090", Offset = "0x142B090", VA = "0x142B090")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA29F04", Offset = "0xA29F04")]
		public static IEnumerator Bark(Subtitle subtitle, Transform speaker, Transform listener, IBarkUI barkUI)
		{
			return null;
		}

		[Token(Token = "0x6000F07")]
		[Address(RVA = "0x142B14C", Offset = "0x142B14C", VA = "0x142B14C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA29F68", Offset = "0xA29F68")]
		public static IEnumerator Bark(Subtitle subtitle, bool skipSequence = false)
		{
			return null;
		}

		[Token(Token = "0x6000F08")]
		[Address(RVA = "0x142B1FC", Offset = "0x142B1FC", VA = "0x142B1FC")]
		private static bool CheckDontBarkDuringConversation()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F09")]
		[Address(RVA = "0x142B2F8", Offset = "0x142B2F8", VA = "0x142B2F8")]
		private static void InformParticipants(string message, Transform speaker, Transform listener)
		{
		}

		[Token(Token = "0x6000F0A")]
		[Address(RVA = "0x142B550", Offset = "0x142B550", VA = "0x142B550")]
		private static void InformParticipantsLine(string message, Transform speaker, Subtitle subtitle)
		{
		}
	}
	[Token(Token = "0x20001BD")]
	public class ConversationController
	{
		[Token(Token = "0x2000594")]
		public delegate void EndConversationDelegate(ConversationController ConversationController);

		[Token(Token = "0x40009EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ConversationModel m_model;

		[Token(Token = "0x40009EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ConversationView m_view;

		[Token(Token = "0x40009EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ConversationState m_state;

		[Token(Token = "0x40009ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA17D7C", Offset = "0xA17D7C")]
		private bool <isActive>k__BackingField;

		[Token(Token = "0x40009EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA17D8C", Offset = "0xA17D8C")]
		private bool <randomizeNextEntry>k__BackingField;

		[Token(Token = "0x40009EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private EndConversationDelegate m_endConversationHandler;

		[Token(Token = "0x40009F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int m_currentConversationID;

		[Token(Token = "0x40009F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Response m_currentResponse;

		[Token(Token = "0x40009F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _frameLastConversationEnded;

		[Token(Token = "0x1700017D")]
		public bool isActive
		{
			[Token(Token = "0x6000F0B")]
			[Address(RVA = "0x1468FD4", Offset = "0x1468FD4", VA = "0x1468FD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA29FCC", Offset = "0xA29FCC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F0C")]
			[Address(RVA = "0x1468FDC", Offset = "0x1468FDC", VA = "0x1468FDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA29FDC", Offset = "0xA29FDC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700017E")]
		public CharacterInfo actorInfo
		{
			[Token(Token = "0x6000F0D")]
			[Address(RVA = "0x1468FE8", Offset = "0x1468FE8", VA = "0x1468FE8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017F")]
		public ConversationModel conversationModel
		{
			[Token(Token = "0x6000F0E")]
			[Address(RVA = "0x1469000", Offset = "0x1469000", VA = "0x1469000")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000180")]
		public ConversationView conversationView
		{
			[Token(Token = "0x6000F0F")]
			[Address(RVA = "0x1469008", Offset = "0x1469008", VA = "0x1469008")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000181")]
		public ConversationState currentState
		{
			[Token(Token = "0x6000F10")]
			[Address(RVA = "0x1469010", Offset = "0x1469010", VA = "0x1469010")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000182")]
		public IsDialogueEntryValidDelegate isDialogueEntryValid
		{
			[Token(Token = "0x6000F11")]
			[Address(RVA = "0x1469018", Offset = "0x1469018", VA = "0x1469018")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F12")]
			[Address(RVA = "0x1469034", Offset = "0x1469034", VA = "0x1469034")]
			set
			{
			}
		}

		[Token(Token = "0x17000183")]
		public bool randomizeNextEntry
		{
			[Token(Token = "0x6000F13")]
			[Address(RVA = "0x1469050", Offset = "0x1469050", VA = "0x1469050")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA29FEC", Offset = "0xA29FEC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F14")]
			[Address(RVA = "0x1469058", Offset = "0x1469058", VA = "0x1469058")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA29FFC", Offset = "0xA29FFC")]
			set
			{
			}
		}

		[Token(Token = "0x17000184")]
		public CharacterInfo conversantInfo
		{
			[Token(Token = "0x6000F15")]
			[Address(RVA = "0x1469064", Offset = "0x1469064", VA = "0x1469064")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000185")]
		public bool IsActive
		{
			[Token(Token = "0x6000F16")]
			[Address(RVA = "0x146907C", Offset = "0x146907C", VA = "0x146907C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F17")]
			[Address(RVA = "0x1469084", Offset = "0x1469084", VA = "0x1469084")]
			private set
			{
			}
		}

		[Token(Token = "0x17000186")]
		public CharacterInfo ActorInfo
		{
			[Token(Token = "0x6000F18")]
			[Address(RVA = "0x1469090", Offset = "0x1469090", VA = "0x1469090")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000187")]
		public ConversationModel ConversationModel
		{
			[Token(Token = "0x6000F19")]
			[Address(RVA = "0x14690A8", Offset = "0x14690A8", VA = "0x14690A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000188")]
		public ConversationView ConversationView
		{
			[Token(Token = "0x6000F1A")]
			[Address(RVA = "0x14690B0", Offset = "0x14690B0", VA = "0x14690B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000189")]
		public IsDialogueEntryValidDelegate IsDialogueEntryValid
		{
			[Token(Token = "0x6000F1B")]
			[Address(RVA = "0x14690B8", Offset = "0x14690B8", VA = "0x14690B8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F1C")]
			[Address(RVA = "0x14690D4", Offset = "0x14690D4", VA = "0x14690D4")]
			set
			{
			}
		}

		[Token(Token = "0x1700018A")]
		public CharacterInfo ConversantInfo
		{
			[Token(Token = "0x6000F1D")]
			[Address(RVA = "0x14690F0", Offset = "0x14690F0", VA = "0x14690F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018B")]
		public static int frameLastConversationEnded
		{
			[Token(Token = "0x6000F1E")]
			[Address(RVA = "0x1469108", Offset = "0x1469108", VA = "0x1469108")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000F1F")]
		[Address(RVA = "0x1469170", Offset = "0x1469170", VA = "0x1469170")]
		public ConversationController()
		{
		}

		[Token(Token = "0x6000F20")]
		[Address(RVA = "0x1469178", Offset = "0x1469178", VA = "0x1469178")]
		public ConversationController(ConversationModel model, ConversationView view, bool alwaysForceResponseMenu, EndConversationDelegate endConversationHandler)
		{
		}

		[Token(Token = "0x6000F21")]
		[Address(RVA = "0x1469968", Offset = "0x1469968", VA = "0x1469968")]
		public void Initialize(ConversationModel model, ConversationView view, bool alwaysForceResponseMenu, EndConversationDelegate endConversationHandler)
		{
		}

		[Token(Token = "0x6000F22")]
		[Address(RVA = "0x1469AAC", Offset = "0x1469AAC", VA = "0x1469AAC")]
		public void Close()
		{
		}

		[Token(Token = "0x6000F23")]
		[Address(RVA = "0x14697E8", Offset = "0x14697E8", VA = "0x14697E8")]
		public void GotoState(ConversationState state)
		{
		}

		[Token(Token = "0x6000F24")]
		[Address(RVA = "0x146A8BC", Offset = "0x146A8BC", VA = "0x146A8BC")]
		private void AnalyzePCResponses(ConversationState state, out bool isPCResponseMenuNext, out bool isPCAutoResponseNext)
		{
		}

		[Token(Token = "0x6000F25")]
		[Address(RVA = "0x14697AC", Offset = "0x14697AC", VA = "0x14697AC")]
		private void SetConversationOverride(ConversationState state)
		{
		}

		[Token(Token = "0x6000F26")]
		[Address(RVA = "0x146AF2C", Offset = "0x146AF2C", VA = "0x146AF2C")]
		public void OnFinishedSubtitle(object sender, EventArgs e)
		{
		}

		[Token(Token = "0x6000F27")]
		[Address(RVA = "0x146B308", Offset = "0x146B308", VA = "0x146B308")]
		public void OnSelectedResponse(object sender, SelectedResponseEventArgs e)
		{
		}

		[Token(Token = "0x6000F28")]
		[Address(RVA = "0x146B360", Offset = "0x146B360", VA = "0x146B360")]
		public void GotoFirstResponse()
		{
		}

		[Token(Token = "0x6000F29")]
		[Address(RVA = "0x146B510", Offset = "0x146B510", VA = "0x146B510")]
		public void GotoLastResponse()
		{
		}

		[Token(Token = "0x6000F2A")]
		[Address(RVA = "0x146B5D4", Offset = "0x146B5D4", VA = "0x146B5D4")]
		public void GotoRandomResponse()
		{
		}

		[Token(Token = "0x6000F2B")]
		[Address(RVA = "0x146B6A4", Offset = "0x146B6A4", VA = "0x146B6A4")]
		public void GotoCurrentResponse()
		{
		}

		[Token(Token = "0x6000F2C")]
		[Address(RVA = "0x146B73C", Offset = "0x146B73C", VA = "0x146B73C")]
		public void SetCurrentResponse(Response response)
		{
		}

		[Token(Token = "0x6000F2D")]
		[Address(RVA = "0x146B744", Offset = "0x146B744", VA = "0x146B744")]
		public void UpdateResponses()
		{
		}

		[Token(Token = "0x6000F2E")]
		[Address(RVA = "0x146B8DC", Offset = "0x146B8DC", VA = "0x146B8DC")]
		public void SetActorPortraitSprite(string actorName, Sprite sprite)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001BE")]
	public class Actor : Asset
	{
		[Token(Token = "0x2000595")]
		public delegate void AssignSpriteDelegate(Sprite sprite);

		[Token(Token = "0x2000596")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D7D8", Offset = "0xA0D7D8")]
		private sealed class <>c__DisplayClass20_0
		{
			[Token(Token = "0x4001D02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AssignSpriteDelegate assignSprite;

			[Token(Token = "0x600295D")]
			[Address(RVA = "0x1428210", Offset = "0x1428210", VA = "0x1428210")]
			public <>c__DisplayClass20_0()
			{
			}

			[Token(Token = "0x600295E")]
			[Address(RVA = "0x14285BC", Offset = "0x14285BC", VA = "0x14285BC")]
			internal void <AssignPortraitSprite>b__0(UnityEngine.Object asset)
			{
			}
		}

		[Token(Token = "0x40009F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Texture2D portrait;

		[Token(Token = "0x40009F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Sprite spritePortrait;

		[Token(Token = "0x40009F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<Texture2D> alternatePortraits;

		[Token(Token = "0x40009F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<Sprite> spritePortraits;

		[Token(Token = "0x1700018C")]
		public bool IsPlayer
		{
			[Token(Token = "0x6000F30")]
			[Address(RVA = "0x1427688", Offset = "0x1427688", VA = "0x1427688")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F31")]
			[Address(RVA = "0x1427754", Offset = "0x1427754", VA = "0x1427754")]
			set
			{
			}
		}

		[Token(Token = "0x1700018D")]
		public string textureName
		{
			[Token(Token = "0x6000F32")]
			[Address(RVA = "0x14277DC", Offset = "0x14277DC", VA = "0x14277DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F33")]
			[Address(RVA = "0x14278C4", Offset = "0x14278C4", VA = "0x14278C4")]
			set
			{
			}
		}

		[Token(Token = "0x1700018E")]
		public string TextureName
		{
			[Token(Token = "0x6000F34")]
			[Address(RVA = "0x142797C", Offset = "0x142797C", VA = "0x142797C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F35")]
			[Address(RVA = "0x1427980", Offset = "0x1427980", VA = "0x1427980")]
			set
			{
			}
		}

		[Token(Token = "0x6000F36")]
		[Address(RVA = "0x1427984", Offset = "0x1427984", VA = "0x1427984")]
		public Actor()
		{
		}

		[Token(Token = "0x6000F37")]
		[Address(RVA = "0x1427A24", Offset = "0x1427A24", VA = "0x1427A24")]
		public Actor(Actor sourceActor)
		{
		}

		[Token(Token = "0x6000F38")]
		[Address(RVA = "0x1427BD8", Offset = "0x1427BD8", VA = "0x1427BD8")]
		public Actor(PixelCrushers.DialogueSystem.ChatMapper.Actor chatMapperActor)
		{
		}

		[Token(Token = "0x6000F39")]
		[Address(RVA = "0x1427CA0", Offset = "0x1427CA0", VA = "0x1427CA0")]
		public void Assign(PixelCrushers.DialogueSystem.ChatMapper.Actor chatMapperActor)
		{
		}

		[Token(Token = "0x6000F3A")]
		[Address(RVA = "0x1427D3C", Offset = "0x1427D3C", VA = "0x1427D3C")]
		public Sprite GetPortraitSprite(int i)
		{
			return null;
		}

		[Token(Token = "0x6000F3B")]
		[Address(RVA = "0x1425DB8", Offset = "0x1425DB8", VA = "0x1425DB8")]
		public Sprite GetPortraitSprite()
		{
			return null;
		}

		[Token(Token = "0x6000F3C")]
		[Address(RVA = "0x1427EE8", Offset = "0x1427EE8", VA = "0x1427EE8")]
		public void AssignPortraitSprite(AssignSpriteDelegate assignSprite)
		{
		}

		[Token(Token = "0x6000F3D")]
		[Address(RVA = "0x14277E0", Offset = "0x14277E0", VA = "0x14277E0")]
		private string LookupTextureName()
		{
			return null;
		}

		[Token(Token = "0x6000F3E")]
		[Address(RVA = "0x14278C8", Offset = "0x14278C8", VA = "0x14278C8")]
		private void SetTextureName(string value)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001BF")]
	public class Asset
	{
		[Token(Token = "0x40009F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x40009F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Field> fields;

		[Token(Token = "0x1700018F")]
		public string Name
		{
			[Token(Token = "0x6000F3F")]
			[Address(RVA = "0x1427E70", Offset = "0x1427E70", VA = "0x1427E70")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F40")]
			[Address(RVA = "0x14296C8", Offset = "0x14296C8", VA = "0x14296C8")]
			set
			{
			}
		}

		[Token(Token = "0x17000190")]
		public string localizedName
		{
			[Token(Token = "0x6000F41")]
			[Address(RVA = "0x1429750", Offset = "0x1429750", VA = "0x1429750")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000191")]
		public string Description
		{
			[Token(Token = "0x6000F42")]
			[Address(RVA = "0x14297C8", Offset = "0x14297C8", VA = "0x14297C8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F43")]
			[Address(RVA = "0x1429840", Offset = "0x1429840", VA = "0x1429840")]
			set
			{
			}
		}

		[Token(Token = "0x17000192")]
		public string LocalizedName
		{
			[Token(Token = "0x6000F44")]
			[Address(RVA = "0x14298C8", Offset = "0x14298C8", VA = "0x14298C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F45")]
		[Address(RVA = "0x1427A1C", Offset = "0x1427A1C", VA = "0x1427A1C")]
		public Asset()
		{
		}

		[Token(Token = "0x6000F46")]
		[Address(RVA = "0x1427B3C", Offset = "0x1427B3C", VA = "0x1427B3C")]
		public Asset(Asset sourceAsset)
		{
		}

		[Token(Token = "0x6000F47")]
		[Address(RVA = "0x14298CC", Offset = "0x14298CC", VA = "0x14298CC")]
		public Asset(int chatMapperID, List<PixelCrushers.DialogueSystem.ChatMapper.Field> chatMapperFields)
		{
		}

		[Token(Token = "0x6000F48")]
		[Address(RVA = "0x1427CB8", Offset = "0x1427CB8", VA = "0x1427CB8")]
		public void Assign(int chatMapperID, List<PixelCrushers.DialogueSystem.ChatMapper.Field> chatMapperFields)
		{
		}

		[Token(Token = "0x6000F49")]
		[Address(RVA = "0x142990C", Offset = "0x142990C", VA = "0x142990C")]
		public bool FieldExists(string title)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F4A")]
		[Address(RVA = "0x1429988", Offset = "0x1429988", VA = "0x1429988")]
		public string LookupValue(string title)
		{
			return null;
		}

		[Token(Token = "0x6000F4B")]
		[Address(RVA = "0x1429A04", Offset = "0x1429A04", VA = "0x1429A04")]
		public string LookupLocalizedValue(string title)
		{
			return null;
		}

		[Token(Token = "0x6000F4C")]
		[Address(RVA = "0x1429A80", Offset = "0x1429A80", VA = "0x1429A80")]
		public int LookupInt(string title)
		{
			return default(int);
		}

		[Token(Token = "0x6000F4D")]
		[Address(RVA = "0x1429AFC", Offset = "0x1429AFC", VA = "0x1429AFC")]
		public float LookupFloat(string title)
		{
			return default(float);
		}

		[Token(Token = "0x6000F4E")]
		[Address(RVA = "0x14276D8", Offset = "0x14276D8", VA = "0x14276D8")]
		public bool LookupBool(string title)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F4F")]
		[Address(RVA = "0x1429B78", Offset = "0x1429B78", VA = "0x1429B78")]
		public bool IsFieldAssigned(string title)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F50")]
		[Address(RVA = "0x1429BF4", Offset = "0x1429BF4", VA = "0x1429BF4")]
		public Field AssignedField(string title)
		{
			return null;
		}
	}
	[Token(Token = "0x20001C0")]
	public enum CharacterType
	{
		[Token(Token = "0x40009FA")]
		PC,
		[Token(Token = "0x40009FB")]
		NPC
	}
	[Token(Token = "0x20001C1")]
	public static class ChatMapperToDialogueDatabase
	{
		[Token(Token = "0x6000F51")]
		[Address(RVA = "0x143454C", Offset = "0x143454C", VA = "0x143454C")]
		public static DialogueDatabase ConvertToDialogueDatabase(ChatMapperProject chatMapperProject)
		{
			return null;
		}

		[Token(Token = "0x6000F52")]
		[Address(RVA = "0x1435030", Offset = "0x1435030", VA = "0x1435030")]
		private static void ConvertProjectAttributes(ChatMapperProject chatMapperProject, DialogueDatabase database)
		{
		}

		[Token(Token = "0x6000F53")]
		[Address(RVA = "0x1435224", Offset = "0x1435224", VA = "0x1435224")]
		private static void ConvertActors(ChatMapperProject chatMapperProject, DialogueDatabase database)
		{
		}

		[Token(Token = "0x6000F54")]
		[Address(RVA = "0x14353A0", Offset = "0x14353A0", VA = "0x14353A0")]
		private static void ConvertItems(ChatMapperProject chatMapperProject, DialogueDatabase database)
		{
		}

		[Token(Token = "0x6000F55")]
		[Address(RVA = "0x1435520", Offset = "0x1435520", VA = "0x1435520")]
		private static void ConvertLocations(ChatMapperProject chatMapperProject, DialogueDatabase database)
		{
		}

		[Token(Token = "0x6000F56")]
		[Address(RVA = "0x14356A0", Offset = "0x14356A0", VA = "0x14356A0")]
		private static void ConvertVariables(ChatMapperProject chatMapperProject, DialogueDatabase database)
		{
		}

		[Token(Token = "0x6000F57")]
		[Address(RVA = "0x1435838", Offset = "0x1435838", VA = "0x1435838")]
		private static void ConvertConversations(ChatMapperProject chatMapperProject, DialogueDatabase database)
		{
		}

		[Token(Token = "0x6000F58")]
		[Address(RVA = "0x1435D44", Offset = "0x1435D44", VA = "0x1435D44")]
		private static void SetConversationStartCutsceneToNone(Conversation conversation)
		{
		}

		[Token(Token = "0x6000F59")]
		[Address(RVA = "0x14362DC", Offset = "0x14362DC", VA = "0x14362DC")]
		public static void FixConversationsLinkedToFirstEntry(DialogueDatabase database, bool resetNodePositions = false)
		{
		}

		[Token(Token = "0x6000F5A")]
		[Address(RVA = "0x1435F8C", Offset = "0x1435F8C", VA = "0x1435F8C")]
		public static void ConvertAudioFilesToSequences(Conversation conversation)
		{
		}
	}
	[Token(Token = "0x20001C2")]
	public enum ConditionPriority
	{
		[Token(Token = "0x40009FD")]
		Low,
		[Token(Token = "0x40009FE")]
		BelowNormal,
		[Token(Token = "0x40009FF")]
		Normal,
		[Token(Token = "0x4000A00")]
		AboveNormal,
		[Token(Token = "0x4000A01")]
		High
	}
	[Serializable]
	[Token(Token = "0x20001C3")]
	public class Conversation : Asset
	{
		[Token(Token = "0x2000597")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D7E8", Offset = "0xA0D7E8")]
		private sealed class <>c__DisplayClass19_0
		{
			[Token(Token = "0x4001D03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string title;

			[Token(Token = "0x600295F")]
			[Address(RVA = "0x1468EF4", Offset = "0x1468EF4", VA = "0x1468EF4")]
			public <>c__DisplayClass19_0()
			{
			}

			[Token(Token = "0x6002960")]
			[Address(RVA = "0x1468EFC", Offset = "0x1468EFC", VA = "0x1468EFC")]
			internal bool <GetDialogueEntry>b__0(DialogueEntry e)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000598")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D7F8", Offset = "0xA0D7F8")]
		private sealed class <>c__DisplayClass20_0
		{
			[Token(Token = "0x4001D04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int dialogueEntryID;

			[Token(Token = "0x6002961")]
			[Address(RVA = "0x1468F30", Offset = "0x1468F30", VA = "0x1468F30")]
			public <>c__DisplayClass20_0()
			{
			}

			[Token(Token = "0x6002962")]
			[Address(RVA = "0x1468F38", Offset = "0x1468F38", VA = "0x1468F38")]
			internal bool <GetDialogueEntry>b__0(DialogueEntry e)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000599")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D808", Offset = "0xA0D808")]
		private sealed class <>c
		{
			[Token(Token = "0x4001D05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001D06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<DialogueEntry> <>9__21_0;

			[Token(Token = "0x6002964")]
			[Address(RVA = "0x1468E14", Offset = "0x1468E14", VA = "0x1468E14")]
			public <>c()
			{
			}

			[Token(Token = "0x6002965")]
			[Address(RVA = "0x1468E1C", Offset = "0x1468E1C", VA = "0x1468E1C")]
			internal bool <GetFirstDialogueEntry>b__21_0(DialogueEntry e)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ConversationOverrideDisplaySettings overrideSettings;

		[Token(Token = "0x4000A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string nodeColor;

		[Token(Token = "0x4000A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<DialogueEntry> dialogueEntries;

		[Token(Token = "0x4000A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public Vector2 canvasScrollPosition;

		[Token(Token = "0x4000A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public float canvasZoom;

		[Token(Token = "0x17000193")]
		public string Title
		{
			[Token(Token = "0x6000F5B")]
			[Address(RVA = "0x1436A7C", Offset = "0x1436A7C", VA = "0x1436A7C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F5C")]
			[Address(RVA = "0x1438B64", Offset = "0x1438B64", VA = "0x1438B64")]
			set
			{
			}
		}

		[Token(Token = "0x17000194")]
		public int ActorID
		{
			[Token(Token = "0x6000F5D")]
			[Address(RVA = "0x1438BEC", Offset = "0x1438BEC", VA = "0x1438BEC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000F5E")]
			[Address(RVA = "0x1438C3C", Offset = "0x1438C3C", VA = "0x1438C3C")]
			set
			{
			}
		}

		[Token(Token = "0x17000195")]
		public int ConversantID
		{
			[Token(Token = "0x6000F5F")]
			[Address(RVA = "0x1438CE0", Offset = "0x1438CE0", VA = "0x1438CE0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000F60")]
			[Address(RVA = "0x1438D30", Offset = "0x1438D30", VA = "0x1438D30")]
			set
			{
			}
		}

		[Token(Token = "0x6000F61")]
		[Address(RVA = "0x1438DD4", Offset = "0x1438DD4", VA = "0x1438DD4")]
		public Conversation()
		{
		}

		[Token(Token = "0x6000F62")]
		[Address(RVA = "0x1438E98", Offset = "0x1438E98", VA = "0x1438E98")]
		public Conversation(Conversation sourceConversation)
		{
		}

		[Token(Token = "0x6000F63")]
		[Address(RVA = "0x1435C60", Offset = "0x1435C60", VA = "0x1435C60")]
		public Conversation(PixelCrushers.DialogueSystem.ChatMapper.Conversation chatMapperConversation, bool putEndSequenceOnLastSplit = true)
		{
		}

		[Token(Token = "0x6000F64")]
		[Address(RVA = "0x14390E8", Offset = "0x14390E8", VA = "0x14390E8")]
		public void Assign(PixelCrushers.DialogueSystem.ChatMapper.Conversation chatMapperConversation, bool putEndSequenceOnLastSplit = true)
		{
		}

		[Token(Token = "0x6000F65")]
		[Address(RVA = "0x1439424", Offset = "0x1439424", VA = "0x1439424")]
		private void AddConversationDialogueEntry(DialogEntry chatMapperEntry)
		{
		}

		[Token(Token = "0x6000F66")]
		[Address(RVA = "0x143968C", Offset = "0x143968C", VA = "0x143968C")]
		public DialogueEntry GetDialogueEntry(string title)
		{
			return null;
		}

		[Token(Token = "0x6000F67")]
		[Address(RVA = "0x14395C8", Offset = "0x14395C8", VA = "0x14395C8")]
		public DialogueEntry GetDialogueEntry(int dialogueEntryID)
		{
			return null;
		}

		[Token(Token = "0x6000F68")]
		[Address(RVA = "0x1436984", Offset = "0x1436984", VA = "0x1436984")]
		public DialogueEntry GetFirstDialogueEntry()
		{
			return null;
		}

		[Token(Token = "0x6000F69")]
		[Address(RVA = "0x14394B8", Offset = "0x14394B8", VA = "0x14394B8")]
		public void SplitPipesIntoEntries(bool putEndSequenceOnLastSplit = true, bool trimWhitespace = false)
		{
		}

		[Token(Token = "0x6000F6A")]
		[Address(RVA = "0x1439750", Offset = "0x1439750", VA = "0x1439750")]
		private void SplitEntryAtPipes(int originalEntryIndex, string dialogueText, bool putEndSequenceOnLastSplit, bool trimWhitespace)
		{
		}

		[Token(Token = "0x6000F6B")]
		[Address(RVA = "0x143A4D4", Offset = "0x143A4D4", VA = "0x143A4D4")]
		private void PutEndSequenceOnLastSplit(List<DialogueEntry> entries, Field field)
		{
		}

		[Token(Token = "0x6000F6C")]
		[Address(RVA = "0x1439FDC", Offset = "0x1439FDC", VA = "0x1439FDC")]
		private DialogueEntry AddNewDialogueEntry(DialogueEntry originalEntry, string dialogueText, int partNum, bool trimWhitespace)
		{
			return null;
		}

		[Token(Token = "0x6000F6D")]
		[Address(RVA = "0x143A76C", Offset = "0x143A76C", VA = "0x143A76C")]
		private int GetHighestDialogueEntryID()
		{
			return default(int);
		}

		[Token(Token = "0x6000F6E")]
		[Address(RVA = "0x143A41C", Offset = "0x143A41C", VA = "0x143A41C")]
		private Link NewLink(DialogueEntry origin, DialogueEntry destination, ConditionPriority priority = ConditionPriority.Normal)
		{
			return null;
		}

		[Token(Token = "0x6000F6F")]
		[Address(RVA = "0x1438F88", Offset = "0x1438F88", VA = "0x1438F88")]
		private List<DialogueEntry> CopyDialogueEntries(List<DialogueEntry> sourceEntries)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20001C4")]
	public class ConversationOverrideDisplaySettings
	{
		[Token(Token = "0x4000A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool useOverrides;

		[Token(Token = "0x4000A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool overrideSubtitleSettings;

		[Token(Token = "0x4000A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool showNPCSubtitlesDuringLine;

		[Token(Token = "0x4000A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		public bool showNPCSubtitlesWithResponses;

		[Token(Token = "0x4000A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool showPCSubtitlesDuringLine;

		[Token(Token = "0x4000A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public bool skipPCSubtitleAfterResponseMenu;

		[Token(Token = "0x4000A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float subtitleCharsPerSecond;

		[Token(Token = "0x4000A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float minSubtitleSeconds;

		[Token(Token = "0x4000A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DisplaySettings.SubtitleSettings.ContinueButtonMode continueButton;

		[Token(Token = "0x4000A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool overrideSequenceSettings;

		[Token(Token = "0x4000A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0xA17DBC", Offset = "0xA17DBC")]
		public string defaultSequence;

		[Token(Token = "0x4000A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0xA17DCC", Offset = "0xA17DCC")]
		public string defaultPlayerSequence;

		[Token(Token = "0x4000A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0xA17DDC", Offset = "0xA17DDC")]
		public string defaultResponseMenuSequence;

		[Token(Token = "0x4000A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool overrideInputSettings;

		[Token(Token = "0x4000A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool alwaysForceResponseMenu;

		[Token(Token = "0x4000A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		public bool includeInvalidEntries;

		[Token(Token = "0x4000A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float responseTimeout;

		[Token(Token = "0x6000F70")]
		[Address(RVA = "0x1470184", Offset = "0x1470184", VA = "0x1470184")]
		public ConversationOverrideDisplaySettings()
		{
		}
	}
	[Token(Token = "0x20001C5")]
	public class DialogueDatabase : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x200059A")]
		public class SyncInfo
		{
			[Token(Token = "0x4001D07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool syncActors;

			[Token(Token = "0x4001D08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
			public bool syncItems;

			[Token(Token = "0x4001D09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
			public bool syncLocations;

			[Token(Token = "0x4001D0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
			public bool syncVariables;

			[Token(Token = "0x4001D0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public DialogueDatabase syncActorsDatabase;

			[Token(Token = "0x4001D0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DialogueDatabase syncItemsDatabase;

			[Token(Token = "0x4001D0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DialogueDatabase syncLocationsDatabase;

			[Token(Token = "0x4001D0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public DialogueDatabase syncVariablesDatabase;

			[Token(Token = "0x6002966")]
			[Address(RVA = "0x1480898", Offset = "0x1480898", VA = "0x1480898")]
			public SyncInfo()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200059B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D818", Offset = "0xA0D818")]
		private sealed class <>c
		{
			[Token(Token = "0x4001D0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001D10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<Actor> <>9__21_0;

			[Token(Token = "0x6002968")]
			[Address(RVA = "0x14809E4", Offset = "0x14809E4", VA = "0x14809E4")]
			public <>c()
			{
			}

			[Token(Token = "0x6002969")]
			[Address(RVA = "0x14809EC", Offset = "0x14809EC", VA = "0x14809EC")]
			internal bool <get_playerID>b__21_0(Actor a)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200059C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D828", Offset = "0xA0D828")]
		private sealed class <>c__DisplayClass22_0
		{
			[Token(Token = "0x4001D11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int actorID;

			[Token(Token = "0x600296A")]
			[Address(RVA = "0x147E7A0", Offset = "0x147E7A0", VA = "0x147E7A0")]
			public <>c__DisplayClass22_0()
			{
			}

			[Token(Token = "0x600296B")]
			[Address(RVA = "0x1480A08", Offset = "0x1480A08", VA = "0x1480A08")]
			internal bool <IsPlayerID>b__0(Actor a)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200059D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D838", Offset = "0xA0D838")]
		private sealed class <>c__DisplayClass28_0
		{
			[Token(Token = "0x4001D12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string actorName;

			[Token(Token = "0x600296C")]
			[Address(RVA = "0x147E8D4", Offset = "0x147E8D4", VA = "0x147E8D4")]
			public <>c__DisplayClass28_0()
			{
			}

			[Token(Token = "0x600296D")]
			[Address(RVA = "0x1480A2C", Offset = "0x1480A2C", VA = "0x1480A2C")]
			internal bool <GetActor>b__0(Actor a)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200059E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D848", Offset = "0xA0D848")]
		private sealed class <>c__DisplayClass29_0
		{
			[Token(Token = "0x4001D13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int id;

			[Token(Token = "0x600296E")]
			[Address(RVA = "0x147E8DC", Offset = "0x147E8DC", VA = "0x147E8DC")]
			public <>c__DisplayClass29_0()
			{
			}

			[Token(Token = "0x600296F")]
			[Address(RVA = "0x1480A64", Offset = "0x1480A64", VA = "0x1480A64")]
			internal bool <GetActor>b__0(Actor a)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200059F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D858", Offset = "0xA0D858")]
		private sealed class <>c__DisplayClass30_0
		{
			[Token(Token = "0x4001D14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string itemName;

			[Token(Token = "0x6002970")]
			[Address(RVA = "0x147E9F8", Offset = "0x147E9F8", VA = "0x147E9F8")]
			public <>c__DisplayClass30_0()
			{
			}

			[Token(Token = "0x6002971")]
			[Address(RVA = "0x1480A88", Offset = "0x1480A88", VA = "0x1480A88")]
			internal bool <GetItem>b__0(Item i)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D868", Offset = "0xA0D868")]
		private sealed class <>c__DisplayClass31_0
		{
			[Token(Token = "0x4001D15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int id;

			[Token(Token = "0x6002972")]
			[Address(RVA = "0x147EAC4", Offset = "0x147EAC4", VA = "0x147EAC4")]
			public <>c__DisplayClass31_0()
			{
			}

			[Token(Token = "0x6002973")]
			[Address(RVA = "0x1480AC0", Offset = "0x1480AC0", VA = "0x1480AC0")]
			internal bool <GetItem>b__0(Item i)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005A1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D878", Offset = "0xA0D878")]
		private sealed class <>c__DisplayClass32_0
		{
			[Token(Token = "0x4001D16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string locationName;

			[Token(Token = "0x6002974")]
			[Address(RVA = "0x147EBE0", Offset = "0x147EBE0", VA = "0x147EBE0")]
			public <>c__DisplayClass32_0()
			{
			}

			[Token(Token = "0x6002975")]
			[Address(RVA = "0x1480AE4", Offset = "0x1480AE4", VA = "0x1480AE4")]
			internal bool <GetLocation>b__0(Location l)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005A2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D888", Offset = "0xA0D888")]
		private sealed class <>c__DisplayClass33_0
		{
			[Token(Token = "0x4001D17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int id;

			[Token(Token = "0x6002976")]
			[Address(RVA = "0x147ECAC", Offset = "0x147ECAC", VA = "0x147ECAC")]
			public <>c__DisplayClass33_0()
			{
			}

			[Token(Token = "0x6002977")]
			[Address(RVA = "0x1480B1C", Offset = "0x1480B1C", VA = "0x1480B1C")]
			internal bool <GetLocation>b__0(Location l)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005A3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D898", Offset = "0xA0D898")]
		private sealed class <>c__DisplayClass34_0
		{
			[Token(Token = "0x4001D18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string variableName;

			[Token(Token = "0x6002978")]
			[Address(RVA = "0x147EDC8", Offset = "0x147EDC8", VA = "0x147EDC8")]
			public <>c__DisplayClass34_0()
			{
			}

			[Token(Token = "0x6002979")]
			[Address(RVA = "0x1480B40", Offset = "0x1480B40", VA = "0x1480B40")]
			internal bool <GetVariable>b__0(Variable v)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D8A8", Offset = "0xA0D8A8")]
		private sealed class <>c__DisplayClass35_0
		{
			[Token(Token = "0x4001D19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int id;

			[Token(Token = "0x600297A")]
			[Address(RVA = "0x147EE94", Offset = "0x147EE94", VA = "0x147EE94")]
			public <>c__DisplayClass35_0()
			{
			}

			[Token(Token = "0x600297B")]
			[Address(RVA = "0x1480B78", Offset = "0x1480B78", VA = "0x1480B78")]
			internal bool <GetVariable>b__0(Variable v)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005A5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D8B8", Offset = "0xA0D8B8")]
		private sealed class <>c__DisplayClass37_0
		{
			[Token(Token = "0x4001D1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string conversationTitle;

			[Token(Token = "0x600297C")]
			[Address(RVA = "0x147EF74", Offset = "0x147EF74", VA = "0x147EF74")]
			public <>c__DisplayClass37_0()
			{
			}

			[Token(Token = "0x600297D")]
			[Address(RVA = "0x1480B9C", Offset = "0x1480B9C", VA = "0x1480B9C")]
			internal bool <GetConversation>b__0(Conversation c)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005A6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D8C8", Offset = "0xA0D8C8")]
		private sealed class <>c__DisplayClass38_0
		{
			[Token(Token = "0x4001D1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int conversationID;

			[Token(Token = "0x600297E")]
			[Address(RVA = "0x147EF7C", Offset = "0x147EF7C", VA = "0x147EF7C")]
			public <>c__DisplayClass38_0()
			{
			}

			[Token(Token = "0x600297F")]
			[Address(RVA = "0x1480BD4", Offset = "0x1480BD4", VA = "0x1480BD4")]
			internal bool <GetConversation>b__0(Conversation c)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005A7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D8D8", Offset = "0xA0D8D8")]
		private sealed class <>c__DisplayClass40_0
		{
			[Token(Token = "0x4001D1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Link link;

			[Token(Token = "0x6002980")]
			[Address(RVA = "0x147EFBC", Offset = "0x147EFBC", VA = "0x147EFBC")]
			public <>c__DisplayClass40_0()
			{
			}

			[Token(Token = "0x6002981")]
			[Address(RVA = "0x1480BF8", Offset = "0x1480BF8", VA = "0x1480BF8")]
			internal bool <GetDialogueEntry>b__0(DialogueEntry e)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D8E8", Offset = "0xA0D8E8")]
		private sealed class <>c__DisplayClass56_0<T> where T : Asset
		{
			[Token(Token = "0x4001D1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string assetName;

			[Token(Token = "0x6002982")]
			public <>c__DisplayClass56_0()
			{
			}

			[Token(Token = "0x6002983")]
			internal bool <ContainsName>b__0(T x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005A9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D8F8", Offset = "0xA0D8F8")]
		private sealed class <>c__DisplayClass57_0<T> where T : Asset
		{
			[Token(Token = "0x4001D1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int assetID;

			[Token(Token = "0x6002984")]
			public <>c__DisplayClass57_0()
			{
			}

			[Token(Token = "0x6002985")]
			internal bool <ContainsID>b__0(T x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005AA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D908", Offset = "0xA0D908")]
		private sealed class <>c__DisplayClass58_0
		{
			[Token(Token = "0x4001D1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string title;

			[Token(Token = "0x6002986")]
			[Address(RVA = "0x147FCF4", Offset = "0x147FCF4", VA = "0x147FCF4")]
			public <>c__DisplayClass58_0()
			{
			}

			[Token(Token = "0x6002987")]
			[Address(RVA = "0x1480C28", Offset = "0x1480C28", VA = "0x1480C28")]
			internal bool <ContainsTitle>b__0(Conversation x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string version;

		[Token(Token = "0x4000A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string author;

		[Token(Token = "0x4000A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string description;

		[Token(Token = "0x4000A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string globalUserScript;

		[Token(Token = "0x4000A1C")]
		public const int NumEmphasisSettings = 4;

		[Token(Token = "0x4000A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public EmphasisSetting[] emphasisSettings;

		[Token(Token = "0x4000A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<Actor> actors;

		[Token(Token = "0x4000A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<Item> items;

		[Token(Token = "0x4000A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<Location> locations;

		[Token(Token = "0x4000A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<Variable> variables;

		[Token(Token = "0x4000A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<Conversation> conversations;

		[Token(Token = "0x4000A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public SyncInfo syncInfo;

		[Token(Token = "0x4000A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public string templateJson;

		[Token(Token = "0x4000A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Dictionary<string, Actor> actorNameCache;

		[Token(Token = "0x4000A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Dictionary<string, Item> itemNameCache;

		[Token(Token = "0x4000A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Dictionary<string, Location> locationNameCache;

		[Token(Token = "0x4000A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Dictionary<string, Variable> variableNameCache;

		[Token(Token = "0x4000A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Dictionary<string, Conversation> conversationTitleCache;

		[Token(Token = "0x4000A2A")]
		public const string InvalidEntrytag = "invalid_entrytag";

		[Token(Token = "0x4000A2B")]
		public const string VoiceOverFileFieldName = "VoiceOverFile";

		[Token(Token = "0x17000196")]
		public int playerID
		{
			[Token(Token = "0x6000F72")]
			[Address(RVA = "0x147E69C", Offset = "0x147E69C", VA = "0x147E69C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000F71")]
		[Address(RVA = "0x147A368", Offset = "0x147A368", VA = "0x147A368")]
		public void ResetEmphasisSettings()
		{
		}

		[Token(Token = "0x6000F73")]
		[Address(RVA = "0x147002C", Offset = "0x147002C", VA = "0x147002C")]
		public bool IsPlayerID(int actorID)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F74")]
		[Address(RVA = "0x147E7A8", Offset = "0x147E7A8", VA = "0x147E7A8")]
		public bool IsPlayer(string actorName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F75")]
		[Address(RVA = "0x146E6E0", Offset = "0x146E6E0", VA = "0x146E6E0")]
		public CharacterType GetCharacterType(int actorID)
		{
			return default(CharacterType);
		}

		[Token(Token = "0x6000F76")]
		[Address(RVA = "0x147E7CC", Offset = "0x147E7CC", VA = "0x147E7CC")]
		private void SetupCaches()
		{
		}

		[Token(Token = "0x6000F77")]
		private Dictionary<string, T> CreateCache<T>(List<T> assets) where T : Asset
		{
			return null;
		}

		[Token(Token = "0x6000F78")]
		[Address(RVA = "0x147E8C0", Offset = "0x147E8C0", VA = "0x147E8C0")]
		public void ResetCache()
		{
		}

		[Token(Token = "0x6000F79")]
		[Address(RVA = "0x146FEC8", Offset = "0x146FEC8", VA = "0x146FEC8")]
		public Actor GetActor(string actorName)
		{
			return null;
		}

		[Token(Token = "0x6000F7A")]
		[Address(RVA = "0x146F868", Offset = "0x146F868", VA = "0x146F868")]
		public Actor GetActor(int id)
		{
			return null;
		}

		[Token(Token = "0x6000F7B")]
		[Address(RVA = "0x147E8E4", Offset = "0x147E8E4", VA = "0x147E8E4")]
		public Item GetItem(string itemName)
		{
			return null;
		}

		[Token(Token = "0x6000F7C")]
		[Address(RVA = "0x147EA00", Offset = "0x147EA00", VA = "0x147EA00")]
		public Item GetItem(int id)
		{
			return null;
		}

		[Token(Token = "0x6000F7D")]
		[Address(RVA = "0x147EACC", Offset = "0x147EACC", VA = "0x147EACC")]
		public Location GetLocation(string locationName)
		{
			return null;
		}

		[Token(Token = "0x6000F7E")]
		[Address(RVA = "0x147EBE8", Offset = "0x147EBE8", VA = "0x147EBE8")]
		public Location GetLocation(int id)
		{
			return null;
		}

		[Token(Token = "0x6000F7F")]
		[Address(RVA = "0x147ECB4", Offset = "0x147ECB4", VA = "0x147ECB4")]
		public Variable GetVariable(string variableName)
		{
			return null;
		}

		[Token(Token = "0x6000F80")]
		[Address(RVA = "0x147EDD0", Offset = "0x147EDD0", VA = "0x147EDD0")]
		public Variable GetVariable(int id)
		{
			return null;
		}

		[Token(Token = "0x6000F81")]
		[Address(RVA = "0x147EE9C", Offset = "0x147EE9C", VA = "0x147EE9C")]
		public void AddConversation(Conversation conversation)
		{
		}

		[Token(Token = "0x6000F82")]
		[Address(RVA = "0x146D498", Offset = "0x146D498", VA = "0x146D498")]
		public Conversation GetConversation(string conversationTitle)
		{
			return null;
		}

		[Token(Token = "0x6000F83")]
		[Address(RVA = "0x146DD14", Offset = "0x146DD14", VA = "0x146DD14")]
		public Conversation GetConversation(int conversationID)
		{
			return null;
		}

		[Token(Token = "0x6000F84")]
		[Address(RVA = "0x147EF84", Offset = "0x147EF84", VA = "0x147EF84")]
		public DialogueEntry GetDialogueEntry(int conversationID, int dialogueEntryID)
		{
			return null;
		}

		[Token(Token = "0x6000F85")]
		[Address(RVA = "0x146F784", Offset = "0x146F784", VA = "0x146F784")]
		public DialogueEntry GetDialogueEntry(Link link)
		{
			return null;
		}

		[Token(Token = "0x6000F86")]
		[Address(RVA = "0x147EFC4", Offset = "0x147EFC4", VA = "0x147EFC4")]
		public string GetLinkText(Link link)
		{
			return null;
		}

		[Token(Token = "0x6000F87")]
		[Address(RVA = "0x1476100", Offset = "0x1476100", VA = "0x1476100")]
		public void Add(DialogueDatabase database)
		{
		}

		[Token(Token = "0x6000F88")]
		private void AddAssets<T>(List<T> myAssets, List<T> assetsToAdd, Dictionary<string, T> cache) where T : Asset
		{
		}

		[Token(Token = "0x6000F89")]
		[Address(RVA = "0x147F044", Offset = "0x147F044", VA = "0x147F044")]
		private void AddEmphasisSettings(EmphasisSetting[] newEmphasisSettings)
		{
		}

		[Token(Token = "0x6000F8A")]
		[Address(RVA = "0x147F184", Offset = "0x147F184", VA = "0x147F184")]
		private void AddGlobalUserScript(DialogueDatabase database)
		{
		}

		[Token(Token = "0x6000F8B")]
		[Address(RVA = "0x147F2B0", Offset = "0x147F2B0", VA = "0x147F2B0")]
		public void Remove(DialogueDatabase database)
		{
		}

		[Token(Token = "0x6000F8C")]
		[Address(RVA = "0x1476348", Offset = "0x1476348", VA = "0x1476348")]
		public void Remove(DialogueDatabase database, List<DialogueDatabase> keep)
		{
		}

		[Token(Token = "0x6000F8D")]
		private void RemoveAssets<T>(List<T> myAssets, List<T> assetsToRemove, Dictionary<string, T> cache) where T : Asset
		{
		}

		[Token(Token = "0x6000F8E")]
		private void RemoveAssets<T>(List<T> myAssets, List<T> assetsToRemove, Dictionary<string, T> cache, List<DialogueDatabase> keep) where T : Asset
		{
		}

		[Token(Token = "0x6000F8F")]
		[Address(RVA = "0x1476528", Offset = "0x1476528", VA = "0x1476528")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000F90")]
		[Address(RVA = "0x147F3EC", Offset = "0x147F3EC", VA = "0x147F3EC")]
		public void SyncAll()
		{
		}

		[Token(Token = "0x6000F91")]
		[Address(RVA = "0x147F420", Offset = "0x147F420", VA = "0x147F420")]
		public void SyncActors()
		{
		}

		[Token(Token = "0x6000F92")]
		[Address(RVA = "0x147F620", Offset = "0x147F620", VA = "0x147F620")]
		public void SyncItems()
		{
		}

		[Token(Token = "0x6000F93")]
		[Address(RVA = "0x147F820", Offset = "0x147F820", VA = "0x147F820")]
		public void SyncLocations()
		{
		}

		[Token(Token = "0x6000F94")]
		[Address(RVA = "0x147FA20", Offset = "0x147FA20", VA = "0x147FA20")]
		public void SyncVariables()
		{
		}

		[Token(Token = "0x6000F95")]
		public static bool ContainsName<T>(List<T> assetList, string assetName) where T : Asset
		{
			return default(bool);
		}

		[Token(Token = "0x6000F96")]
		public static bool ContainsID<T>(List<T> assetList, int assetID) where T : Asset
		{
			return default(bool);
		}

		[Token(Token = "0x6000F97")]
		[Address(RVA = "0x147FC20", Offset = "0x147FC20", VA = "0x147FC20")]
		public static bool ContainsTitle(List<Conversation> conversations, string title)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F98")]
		[Address(RVA = "0x147FCFC", Offset = "0x147FCFC", VA = "0x147FCFC")]
		public static bool Contains(DialogueDatabase database, Asset asset)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F99")]
		[Address(RVA = "0x147FFF4", Offset = "0x147FFF4", VA = "0x147FFF4")]
		public static bool Contains(List<DialogueDatabase> databaseList, Asset asset)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F9A")]
		[Address(RVA = "0x14800FC", Offset = "0x14800FC", VA = "0x14800FC")]
		public string GetEntrytag(Conversation conversation, DialogueEntry entry, EntrytagFormat entrytagFormat)
		{
			return null;
		}

		[Token(Token = "0x6000F9B")]
		[Address(RVA = "0x146E2A0", Offset = "0x146E2A0", VA = "0x146E2A0")]
		public string GetEntrytag(int conversationID, int dialogueEntryID, EntrytagFormat entrytagFormat)
		{
			return null;
		}

		[Token(Token = "0x6000F9C")]
		[Address(RVA = "0x14805E4", Offset = "0x14805E4", VA = "0x14805E4")]
		public string GetEntrytaglocal(Conversation conversation, DialogueEntry entry, EntrytagFormat entrytagFormat)
		{
			return null;
		}

		[Token(Token = "0x6000F9D")]
		[Address(RVA = "0x14806D8", Offset = "0x14806D8", VA = "0x14806D8")]
		public string GetEntrytaglocal(int conversationID, int dialogueEntryID, EntrytagFormat entrytagFormat)
		{
			return null;
		}

		[Token(Token = "0x6000F9E")]
		[Address(RVA = "0x1480738", Offset = "0x1480738", VA = "0x1480738")]
		public DialogueDatabase()
		{
		}

		[Token(Token = "0x6000F9F")]
		[Address(RVA = "0x14808A0", Offset = "0x14808A0", VA = "0x14808A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A00C", Offset = "0xA2A00C")]
		private bool <SyncActors>b__52_0(Actor x)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FA0")]
		[Address(RVA = "0x14808D8", Offset = "0x14808D8", VA = "0x14808D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A01C", Offset = "0xA2A01C")]
		private bool <SyncItems>b__53_0(Item x)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FA1")]
		[Address(RVA = "0x1480910", Offset = "0x1480910", VA = "0x1480910")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A02C", Offset = "0xA2A02C")]
		private bool <SyncLocations>b__54_0(Location x)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FA2")]
		[Address(RVA = "0x1480948", Offset = "0x1480948", VA = "0x1480948")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A03C", Offset = "0xA2A03C")]
		private bool <SyncVariables>b__55_0(Variable x)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x20001C6")]
	public class DialogueEntry
	{
		[Token(Token = "0x4000A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x4000A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Field> fields;

		[Token(Token = "0x4000A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int conversationID;

		[Token(Token = "0x4000A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool isRoot;

		[Token(Token = "0x4000A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool isGroup;

		[Token(Token = "0x4000A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string nodeColor;

		[Token(Token = "0x4000A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool delaySimStatus;

		[Token(Token = "0x4000A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string falseConditionAction;

		[Token(Token = "0x4000A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ConditionPriority conditionPriority;

		[Token(Token = "0x4000A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<Link> outgoingLinks;

		[Token(Token = "0x4000A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string conditionsString;

		[Token(Token = "0x4000A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string userScript;

		[Token(Token = "0x4000A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public UnityEvent onExecute;

		[Token(Token = "0x4000A39")]
		public const float CanvasRectWidth = 160f;

		[Token(Token = "0x4000A3A")]
		public const float CanvasRectHeight = 30f;

		[Token(Token = "0x4000A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Rect canvasRect;

		[Token(Token = "0x17000197")]
		public int ActorID
		{
			[Token(Token = "0x6000FA3")]
			[Address(RVA = "0x146DF38", Offset = "0x146DF38", VA = "0x146DF38")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000FA4")]
			[Address(RVA = "0x1481008", Offset = "0x1481008", VA = "0x1481008")]
			set
			{
			}
		}

		[Token(Token = "0x17000198")]
		public int ConversantID
		{
			[Token(Token = "0x6000FA5")]
			[Address(RVA = "0x146DFE0", Offset = "0x146DFE0", VA = "0x146DFE0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000FA6")]
			[Address(RVA = "0x14810AC", Offset = "0x14810AC", VA = "0x14810AC")]
			set
			{
			}
		}

		[Token(Token = "0x17000199")]
		public string Title
		{
			[Token(Token = "0x6000FA7")]
			[Address(RVA = "0x1468E7C", Offset = "0x1468E7C", VA = "0x1468E7C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FA8")]
			[Address(RVA = "0x1481150", Offset = "0x1481150", VA = "0x1481150")]
			set
			{
			}
		}

		[Token(Token = "0x1700019A")]
		public string currentMenuText
		{
			[Token(Token = "0x6000FA9")]
			[Address(RVA = "0x148056C", Offset = "0x148056C", VA = "0x148056C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FAA")]
			[Address(RVA = "0x14812A4", Offset = "0x14812A4", VA = "0x14812A4")]
			set
			{
			}
		}

		[Token(Token = "0x1700019B")]
		public string MenuText
		{
			[Token(Token = "0x6000FAC")]
			[Address(RVA = "0x14812CC", Offset = "0x14812CC", VA = "0x14812CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FAD")]
			[Address(RVA = "0x1481344", Offset = "0x1481344", VA = "0x1481344")]
			set
			{
			}
		}

		[Token(Token = "0x1700019C")]
		public string currentLocalizedMenuText
		{
			[Token(Token = "0x6000FAE")]
			[Address(RVA = "0x14813CC", Offset = "0x14813CC", VA = "0x14813CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FAF")]
			[Address(RVA = "0x1481450", Offset = "0x1481450", VA = "0x1481450")]
			set
			{
			}
		}

		[Token(Token = "0x1700019D")]
		public string currentDialogueText
		{
			[Token(Token = "0x6000FB0")]
			[Address(RVA = "0x146C238", Offset = "0x146C238", VA = "0x146C238")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FB1")]
			[Address(RVA = "0x1481688", Offset = "0x1481688", VA = "0x1481688")]
			set
			{
			}
		}

		[Token(Token = "0x1700019E")]
		public string DialogueText
		{
			[Token(Token = "0x6000FB3")]
			[Address(RVA = "0x14816B0", Offset = "0x14816B0", VA = "0x14816B0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FB4")]
			[Address(RVA = "0x1481728", Offset = "0x1481728", VA = "0x1481728")]
			set
			{
			}
		}

		[Token(Token = "0x1700019F")]
		public string currentLocalizedDialogueText
		{
			[Token(Token = "0x6000FB5")]
			[Address(RVA = "0x14817B0", Offset = "0x14817B0", VA = "0x14817B0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FB6")]
			[Address(RVA = "0x1481894", Offset = "0x1481894", VA = "0x1481894")]
			set
			{
			}
		}

		[Token(Token = "0x170001A0")]
		public string subtitleText
		{
			[Token(Token = "0x6000FB7")]
			[Address(RVA = "0x146E0D0", Offset = "0x146E0D0", VA = "0x146E0D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A1")]
		public string responseButtonText
		{
			[Token(Token = "0x6000FB8")]
			[Address(RVA = "0x146F9B4", Offset = "0x146F9B4", VA = "0x146F9B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A2")]
		public string currentSequence
		{
			[Token(Token = "0x6000FB9")]
			[Address(RVA = "0x146E300", Offset = "0x146E300", VA = "0x146E300")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FBA")]
			[Address(RVA = "0x1481A4C", Offset = "0x1481A4C", VA = "0x1481A4C")]
			set
			{
			}
		}

		[Token(Token = "0x170001A3")]
		public string Sequence
		{
			[Token(Token = "0x6000FBD")]
			[Address(RVA = "0x1481B3C", Offset = "0x1481B3C", VA = "0x1481B3C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FBE")]
			[Address(RVA = "0x1481BB4", Offset = "0x1481BB4", VA = "0x1481BB4")]
			set
			{
			}
		}

		[Token(Token = "0x170001A4")]
		public string currentLocalizedSequence
		{
			[Token(Token = "0x6000FBF")]
			[Address(RVA = "0x1481CFC", Offset = "0x1481CFC", VA = "0x1481CFC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FC0")]
			[Address(RVA = "0x1481D80", Offset = "0x1481D80", VA = "0x1481D80")]
			set
			{
			}
		}

		[Token(Token = "0x170001A5")]
		public string sceneEventGuid
		{
			[Token(Token = "0x6000FC1")]
			[Address(RVA = "0x146E058", Offset = "0x146E058", VA = "0x146E058")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FC2")]
			[Address(RVA = "0x1481E0C", Offset = "0x1481E0C", VA = "0x1481E0C")]
			set
			{
			}
		}

		[Token(Token = "0x170001A6")]
		public string currentResponseMenuSequence
		{
			[Token(Token = "0x6000FC5")]
			[Address(RVA = "0x146E378", Offset = "0x146E378", VA = "0x146E378")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FC6")]
			[Address(RVA = "0x1481FB0", Offset = "0x1481FB0", VA = "0x1481FB0")]
			set
			{
			}
		}

		[Token(Token = "0x170001A7")]
		public string ResponseMenuSequence
		{
			[Token(Token = "0x6000FC9")]
			[Address(RVA = "0x14820A0", Offset = "0x14820A0", VA = "0x14820A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FCA")]
			[Address(RVA = "0x1482118", Offset = "0x1482118", VA = "0x1482118")]
			set
			{
			}
		}

		[Token(Token = "0x170001A8")]
		public string currentLocalizedResponseMenuSequence
		{
			[Token(Token = "0x6000FCB")]
			[Address(RVA = "0x1482178", Offset = "0x1482178", VA = "0x1482178")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FCC")]
			[Address(RVA = "0x14821FC", Offset = "0x14821FC", VA = "0x14821FC")]
			set
			{
			}
		}

		[Token(Token = "0x170001A9")]
		public string VideoFile
		{
			[Token(Token = "0x6000FCD")]
			[Address(RVA = "0x146E6FC", Offset = "0x146E6FC", VA = "0x146E6FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FCE")]
			[Address(RVA = "0x1482288", Offset = "0x1482288", VA = "0x1482288")]
			set
			{
			}
		}

		[Token(Token = "0x170001AA")]
		public string AudioFiles
		{
			[Token(Token = "0x6000FCF")]
			[Address(RVA = "0x1482310", Offset = "0x1482310", VA = "0x1482310")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FD0")]
			[Address(RVA = "0x1482388", Offset = "0x1482388", VA = "0x1482388")]
			set
			{
			}
		}

		[Token(Token = "0x170001AB")]
		public string AnimationFiles
		{
			[Token(Token = "0x6000FD1")]
			[Address(RVA = "0x1482410", Offset = "0x1482410", VA = "0x1482410")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FD2")]
			[Address(RVA = "0x1482488", Offset = "0x1482488", VA = "0x1482488")]
			set
			{
			}
		}

		[Token(Token = "0x170001AC")]
		public string LipsyncFiles
		{
			[Token(Token = "0x6000FD3")]
			[Address(RVA = "0x1482510", Offset = "0x1482510", VA = "0x1482510")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FD4")]
			[Address(RVA = "0x1482588", Offset = "0x1482588", VA = "0x1482588")]
			set
			{
			}
		}

		[Token(Token = "0x6000FAB")]
		[Address(RVA = "0x14811D8", Offset = "0x14811D8", VA = "0x14811D8")]
		private Field GetCurrentMenuTextField()
		{
			return null;
		}

		[Token(Token = "0x6000FB2")]
		[Address(RVA = "0x14814E4", Offset = "0x14814E4", VA = "0x14814E4")]
		private Field GetCurrentDialogueTextField()
		{
			return null;
		}

		[Token(Token = "0x6000FBB")]
		[Address(RVA = "0x1481980", Offset = "0x1481980", VA = "0x1481980")]
		private Field GetCurrentSequenceField()
		{
			return null;
		}

		[Token(Token = "0x6000FBC")]
		[Address(RVA = "0x1481A50", Offset = "0x1481A50", VA = "0x1481A50")]
		private void SetCurrentSequenceField(string value)
		{
		}

		[Token(Token = "0x6000FC3")]
		[Address(RVA = "0x1481C14", Offset = "0x1481C14", VA = "0x1481C14")]
		private void SetTextField(string title, string value)
		{
		}

		[Token(Token = "0x6000FC4")]
		[Address(RVA = "0x1481E6C", Offset = "0x1481E6C", VA = "0x1481E6C")]
		public bool HasResponseMenuSequence()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FC7")]
		[Address(RVA = "0x1481EE4", Offset = "0x1481EE4", VA = "0x1481EE4")]
		private Field GetCurrentResponseMenuSequenceField()
		{
			return null;
		}

		[Token(Token = "0x6000FC8")]
		[Address(RVA = "0x1481FB4", Offset = "0x1481FB4", VA = "0x1481FB4")]
		private void SetCurrentResponseMenuSequenceField(string value)
		{
		}

		[Token(Token = "0x6000FD5")]
		[Address(RVA = "0x1482610", Offset = "0x1482610", VA = "0x1482610")]
		public DialogueEntry()
		{
		}

		[Token(Token = "0x6000FD6")]
		[Address(RVA = "0x14826E0", Offset = "0x14826E0", VA = "0x14826E0")]
		public DialogueEntry(DialogEntry chatMapperDialogEntry)
		{
		}

		[Token(Token = "0x6000FD7")]
		[Address(RVA = "0x1482958", Offset = "0x1482958", VA = "0x1482958")]
		public void UseCanvasRectField()
		{
		}

		[Token(Token = "0x6000FD8")]
		[Address(RVA = "0x1482B58", Offset = "0x1482B58", VA = "0x1482B58")]
		public DialogueEntry(DialogueEntry sourceEntry)
		{
		}

		[Token(Token = "0x6000FD9")]
		[Address(RVA = "0x1482CD4", Offset = "0x1482CD4", VA = "0x1482CD4")]
		private List<Link> CopyLinks(List<Link> sourceLinks)
		{
			return null;
		}
	}
	[Token(Token = "0x20001C7")]
	public class DialogueSystemFields
	{
		[Token(Token = "0x4000A3C")]
		public const string Name = "Name";

		[Token(Token = "0x4000A3D")]
		public const string Pictures = "Pictures";

		[Token(Token = "0x4000A3E")]
		public const string TextureFiles = "Texture Files";

		[Token(Token = "0x4000A3F")]
		public const string ModelFiles = "Model Files";

		[Token(Token = "0x4000A40")]
		public const string AudioFiles = "Audio Files";

		[Token(Token = "0x4000A41")]
		public const string LipsyncFiles = "Lipsync Files";

		[Token(Token = "0x4000A42")]
		public const string AnimationFiles = "Animation Files";

		[Token(Token = "0x4000A43")]
		public const string IsPlayer = "IsPlayer";

		[Token(Token = "0x4000A44")]
		public const string CurrentPortrait = "Current Portrait";

		[Token(Token = "0x4000A45")]
		public const string IsItem = "Is Item";

		[Token(Token = "0x4000A46")]
		public const string Group = "Group";

		[Token(Token = "0x4000A47")]
		public const string InitialValue = "Initial Value";

		[Token(Token = "0x4000A48")]
		public const string Title = "Title";

		[Token(Token = "0x4000A49")]
		public const string Description = "Description";

		[Token(Token = "0x4000A4A")]
		public const string Actor = "Actor";

		[Token(Token = "0x4000A4B")]
		public const string Conversant = "Conversant";

		[Token(Token = "0x4000A4C")]
		public const string Priority = "Priority";

		[Token(Token = "0x4000A4D")]
		public const string Sequence = "Sequence";

		[Token(Token = "0x4000A4E")]
		public const string VoiceOverFile = "VoiceOverFile";

		[Token(Token = "0x6000FDA")]
		[Address(RVA = "0x15F814C", Offset = "0x15F814C", VA = "0x15F814C")]
		public DialogueSystemFields()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001C8")]
	public class DialogueEntrySceneEvent
	{
		[Token(Token = "0x4000A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string guid;

		[Token(Token = "0x4000A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObjectUnityEvent onExecute;

		[Token(Token = "0x6000FDB")]
		[Address(RVA = "0x15E5F74", Offset = "0x15E5F74", VA = "0x15E5F74")]
		public DialogueEntrySceneEvent()
		{
		}
	}
	[Token(Token = "0x20001C9")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA07C98", Offset = "0xA07C98")]
	public class DialogueSystemSceneEvents : MonoBehaviour
	{
		[Token(Token = "0x20005AB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D918", Offset = "0xA0D918")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x4001D20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string guid;

			[Token(Token = "0x6002988")]
			[Address(RVA = "0x15F8B08", Offset = "0x15F8B08", VA = "0x15F8B08")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x6002989")]
			[Address(RVA = "0x15F8E58", Offset = "0x15F8E58", VA = "0x15F8E58")]
			internal bool <RemoveDialogueEntrySceneEvent>b__0(DialogueEntrySceneEvent x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D928", Offset = "0xA0D928")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x4001D21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string guid;

			[Token(Token = "0x600298A")]
			[Address(RVA = "0x15F8C5C", Offset = "0x15F8C5C", VA = "0x15F8C5C")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x600298B")]
			[Address(RVA = "0x15F8E7C", Offset = "0x15F8E7C", VA = "0x15F8E7C")]
			internal bool <GetDialogueEntrySceneEvent>b__0(DialogueEntrySceneEvent x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005AD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D938", Offset = "0xA0D938")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x4001D22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string guid;

			[Token(Token = "0x600298C")]
			[Address(RVA = "0x15F8DB8", Offset = "0x15F8DB8", VA = "0x15F8DB8")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x600298D")]
			[Address(RVA = "0x15F8E34", Offset = "0x15F8E34", VA = "0x15F8E34")]
			internal bool <GetDialogueEntrySceneEventIndex>b__0(DialogueEntrySceneEvent x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HelpBoxAttribute", RVA = "0xA17DEC", Offset = "0xA17DEC")]
		public List<DialogueEntrySceneEvent> dialogueEntrySceneEvents;

		[Token(Token = "0x4000A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static DialogueSystemSceneEvents m_sceneInstance;

		[Token(Token = "0x170001AD")]
		public static DialogueSystemSceneEvents sceneInstance
		{
			[Token(Token = "0x6000FDC")]
			[Address(RVA = "0x15F85C0", Offset = "0x15F85C0", VA = "0x15F85C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FDD")]
			[Address(RVA = "0x15F86E0", Offset = "0x15F86E0", VA = "0x15F86E0")]
			set
			{
			}
		}

		[Token(Token = "0x6000FDE")]
		[Address(RVA = "0x15F874C", Offset = "0x15F874C", VA = "0x15F874C")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xA2A04C", Offset = "0xA2A04C")]
		private static void InitStaticVariables()
		{
		}

		[Token(Token = "0x6000FDF")]
		[Address(RVA = "0x15F87B4", Offset = "0x15F87B4", VA = "0x15F87B4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FE0")]
		[Address(RVA = "0x15F8820", Offset = "0x15F8820", VA = "0x15F8820")]
		public static int AddNewDialogueEntrySceneEvent(out string guid)
		{
			return default(int);
		}

		[Token(Token = "0x6000FE1")]
		[Address(RVA = "0x15F89AC", Offset = "0x15F89AC", VA = "0x15F89AC")]
		public static void RemoveDialogueEntrySceneEvent(string guid)
		{
		}

		[Token(Token = "0x6000FE2")]
		[Address(RVA = "0x15F8B10", Offset = "0x15F8B10", VA = "0x15F8B10")]
		public static DialogueEntrySceneEvent GetDialogueEntrySceneEvent(string guid)
		{
			return null;
		}

		[Token(Token = "0x6000FE3")]
		[Address(RVA = "0x15F8C64", Offset = "0x15F8C64", VA = "0x15F8C64")]
		public static int GetDialogueEntrySceneEventIndex(string guid)
		{
			return default(int);
		}

		[Token(Token = "0x6000FE4")]
		[Address(RVA = "0x15F8DC0", Offset = "0x15F8DC0", VA = "0x15F8DC0")]
		public DialogueSystemSceneEvents()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001CA")]
	public class EmphasisSetting
	{
		[Token(Token = "0x4000A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color color;

		[Token(Token = "0x4000A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool bold;

		[Token(Token = "0x4000A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool italic;

		[Token(Token = "0x4000A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public bool underline;

		[Token(Token = "0x170001AE")]
		public bool IsEmpty
		{
			[Token(Token = "0x6000FE8")]
			[Address(RVA = "0x15FE3EC", Offset = "0x15FE3EC", VA = "0x15FE3EC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000FE6")]
		[Address(RVA = "0x15FE1E4", Offset = "0x15FE1E4", VA = "0x15FE1E4")]
		public EmphasisSetting(Color color, bool bold, bool italic, bool underline)
		{
		}

		[Token(Token = "0x6000FE7")]
		[Address(RVA = "0x15FE270", Offset = "0x15FE270", VA = "0x15FE270")]
		public EmphasisSetting(string colorCode, string styleCode)
		{
		}
	}
	[Token(Token = "0x20001CB")]
	public enum EntrytagFormat
	{
		[Token(Token = "0x4000A58")]
		ActorName_ConversationID_EntryID,
		[Token(Token = "0x4000A59")]
		ConversationTitle_EntryID,
		[Token(Token = "0x4000A5A")]
		ActorNameLineNumber,
		[Token(Token = "0x4000A5B")]
		ConversationID_ActorName_EntryID,
		[Token(Token = "0x4000A5C")]
		ActorName_ConversationTitle_EntryDescriptor,
		[Token(Token = "0x4000A5D")]
		VoiceOverFile
	}
	[Serializable]
	[Token(Token = "0x20001CC")]
	public class Field
	{
		[Token(Token = "0x20005AE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D948", Offset = "0xA0D948")]
		private sealed class <>c__DisplayClass15_0
		{
			[Token(Token = "0x4001D23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string title;

			[Token(Token = "0x600298E")]
			[Address(RVA = "0x1713BB8", Offset = "0x1713BB8", VA = "0x1713BB8")]
			public <>c__DisplayClass15_0()
			{
			}

			[Token(Token = "0x600298F")]
			[Address(RVA = "0x1714818", Offset = "0x1714818", VA = "0x1714818")]
			internal bool <Lookup>b__0(Field f)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string title;

		[Token(Token = "0x4000A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string value;

		[Token(Token = "0x4000A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FieldType type;

		[Token(Token = "0x4000A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string typeString;

		[Token(Token = "0x4000A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<string> filenameFields;

		[Token(Token = "0x6000FE9")]
		[Address(RVA = "0x1713040", Offset = "0x1713040", VA = "0x1713040")]
		public Field()
		{
		}

		[Token(Token = "0x6000FEA")]
		[Address(RVA = "0x17130A0", Offset = "0x17130A0", VA = "0x17130A0")]
		public Field(PixelCrushers.DialogueSystem.ChatMapper.Field chatMapperField)
		{
		}

		[Token(Token = "0x6000FEB")]
		[Address(RVA = "0x1713210", Offset = "0x1713210", VA = "0x1713210")]
		public Field(string title, string value, FieldType type)
		{
		}

		[Token(Token = "0x6000FEC")]
		[Address(RVA = "0x1713398", Offset = "0x1713398", VA = "0x1713398")]
		public Field(string title, string value, FieldType type, string typeString)
		{
		}

		[Token(Token = "0x6000FED")]
		[Address(RVA = "0x1713494", Offset = "0x1713494", VA = "0x1713494")]
		public Field(Field sourceField)
		{
		}

		[Token(Token = "0x6000FEE")]
		[Address(RVA = "0x1713118", Offset = "0x1713118", VA = "0x1713118")]
		public void Assign(PixelCrushers.DialogueSystem.ChatMapper.Field chatMapperField)
		{
		}

		[Token(Token = "0x6000FEF")]
		[Address(RVA = "0x171352C", Offset = "0x171352C", VA = "0x171352C")]
		public static FieldType StringToFieldType(string chatMapperType)
		{
			return default(FieldType);
		}

		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0x17137B8", Offset = "0x17137B8", VA = "0x17137B8")]
		public static List<Field> CreateListFromChatMapperFields(List<PixelCrushers.DialogueSystem.ChatMapper.Field> chatMapperFields)
		{
			return null;
		}

		[Token(Token = "0x6000FF1")]
		[Address(RVA = "0x1713910", Offset = "0x1713910", VA = "0x1713910")]
		public static List<Field> CopyFields(List<Field> sourceFields)
		{
			return null;
		}

		[Token(Token = "0x6000FF2")]
		[Address(RVA = "0x1713A6C", Offset = "0x1713A6C", VA = "0x1713A6C")]
		public static bool FieldExists(List<Field> fields, string title)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FF3")]
		[Address(RVA = "0x1713AEC", Offset = "0x1713AEC", VA = "0x1713AEC")]
		public static Field Lookup(List<Field> fields, string title)
		{
			return null;
		}

		[Token(Token = "0x6000FF4")]
		[Address(RVA = "0x1713BC0", Offset = "0x1713BC0", VA = "0x1713BC0")]
		public static string LookupValue(List<Field> fields, string title)
		{
			return null;
		}

		[Token(Token = "0x6000FF5")]
		[Address(RVA = "0x1713C40", Offset = "0x1713C40", VA = "0x1713C40")]
		public static string LookupLocalizedValue(List<Field> fields, string title)
		{
			return null;
		}

		[Token(Token = "0x6000FF6")]
		[Address(RVA = "0x1713F18", Offset = "0x1713F18", VA = "0x1713F18")]
		public static int LookupInt(List<Field> fields, string title)
		{
			return default(int);
		}

		[Token(Token = "0x6000FF7")]
		[Address(RVA = "0x1713FC0", Offset = "0x1713FC0", VA = "0x1713FC0")]
		public static float LookupFloat(List<Field> fields, string title)
		{
			return default(float);
		}

		[Token(Token = "0x6000FF8")]
		[Address(RVA = "0x1714068", Offset = "0x1714068", VA = "0x1714068")]
		public static bool LookupBool(List<Field> fields, string title)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FF9")]
		[Address(RVA = "0x1714110", Offset = "0x1714110", VA = "0x1714110")]
		public static void SetValue(List<Field> fields, string title, string value, FieldType type)
		{
		}

		[Token(Token = "0x6000FFA")]
		[Address(RVA = "0x17141F0", Offset = "0x17141F0", VA = "0x17141F0")]
		public static void SetValue(List<Field> fields, string title, string value)
		{
		}

		[Token(Token = "0x6000FFB")]
		[Address(RVA = "0x1714270", Offset = "0x1714270", VA = "0x1714270")]
		public static void SetValue(List<Field> fields, string title, float value)
		{
		}

		[Token(Token = "0x6000FFC")]
		[Address(RVA = "0x1714334", Offset = "0x1714334", VA = "0x1714334")]
		public static void SetValue(List<Field> fields, string title, int value)
		{
		}

		[Token(Token = "0x6000FFD")]
		[Address(RVA = "0x17143CC", Offset = "0x17143CC", VA = "0x17143CC")]
		public static void SetValue(List<Field> fields, string title, bool value)
		{
		}

		[Token(Token = "0x6000FFE")]
		[Address(RVA = "0x1714468", Offset = "0x1714468", VA = "0x1714468")]
		public static bool IsFieldAssigned(List<Field> fields, string title)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FFF")]
		[Address(RVA = "0x17144E8", Offset = "0x17144E8", VA = "0x17144E8")]
		public static Field AssignedField(List<Field> fields, string title)
		{
			return null;
		}

		[Token(Token = "0x6001000")]
		[Address(RVA = "0x171457C", Offset = "0x171457C", VA = "0x171457C")]
		public static string FieldValue(Field field)
		{
			return null;
		}

		[Token(Token = "0x6001001")]
		[Address(RVA = "0x1714588", Offset = "0x1714588", VA = "0x1714588")]
		public static string LocalizedTitle(string title)
		{
			return null;
		}

		[Token(Token = "0x6001002")]
		[Address(RVA = "0x1713328", Offset = "0x1713328", VA = "0x1713328")]
		public static string GetTypeString(FieldType type)
		{
			return null;
		}
	}
	[Token(Token = "0x20001CD")]
	public enum FieldType
	{
		[Token(Token = "0x4000A64")]
		Text,
		[Token(Token = "0x4000A65")]
		Number,
		[Token(Token = "0x4000A66")]
		Boolean,
		[Token(Token = "0x4000A67")]
		Files,
		[Token(Token = "0x4000A68")]
		Localization,
		[Token(Token = "0x4000A69")]
		Actor,
		[Token(Token = "0x4000A6A")]
		Item,
		[Token(Token = "0x4000A6B")]
		Location
	}
	[Serializable]
	[Token(Token = "0x20001CE")]
	public class Item : Asset
	{
		[Token(Token = "0x170001AF")]
		public bool IsItem
		{
			[Token(Token = "0x6001004")]
			[Address(RVA = "0x1719B64", Offset = "0x1719B64", VA = "0x1719B64")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001005")]
			[Address(RVA = "0x1719BB8", Offset = "0x1719BB8", VA = "0x1719BB8")]
			set
			{
			}
		}

		[Token(Token = "0x170001B0")]
		public string Group
		{
			[Token(Token = "0x6001006")]
			[Address(RVA = "0x1719C3C", Offset = "0x1719C3C", VA = "0x1719C3C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001007")]
			[Address(RVA = "0x1719C90", Offset = "0x1719C90", VA = "0x1719C90")]
			set
			{
			}
		}

		[Token(Token = "0x6001008")]
		[Address(RVA = "0x1719D14", Offset = "0x1719D14", VA = "0x1719D14")]
		public Item()
		{
		}

		[Token(Token = "0x6001009")]
		[Address(RVA = "0x1719D1C", Offset = "0x1719D1C", VA = "0x1719D1C")]
		public Item(Item sourceItem)
		{
		}

		[Token(Token = "0x600100A")]
		[Address(RVA = "0x1719D24", Offset = "0x1719D24", VA = "0x1719D24")]
		public Item(PixelCrushers.DialogueSystem.ChatMapper.Item chatMapperItem)
		{
		}

		[Token(Token = "0x600100B")]
		[Address(RVA = "0x1719D6C", Offset = "0x1719D6C", VA = "0x1719D6C")]
		public void Assign(PixelCrushers.DialogueSystem.ChatMapper.Item chatMapperItem)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001CF")]
	public class Link
	{
		[Token(Token = "0x4000A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int originConversationID;

		[Token(Token = "0x4000A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int originDialogueID;

		[Token(Token = "0x4000A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int destinationConversationID;

		[Token(Token = "0x4000A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int destinationDialogueID;

		[Token(Token = "0x4000A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isConnector;

		[Token(Token = "0x4000A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public ConditionPriority priority;

		[Token(Token = "0x600100C")]
		[Address(RVA = "0x171AC50", Offset = "0x171AC50", VA = "0x171AC50")]
		public Link()
		{
		}

		[Token(Token = "0x600100D")]
		[Address(RVA = "0x171AC60", Offset = "0x171AC60", VA = "0x171AC60")]
		public Link(PixelCrushers.DialogueSystem.ChatMapper.Link chatMapperLink)
		{
		}

		[Token(Token = "0x600100E")]
		[Address(RVA = "0x171ACD4", Offset = "0x171ACD4", VA = "0x171ACD4")]
		public Link(Link sourceLink)
		{
		}

		[Token(Token = "0x600100F")]
		[Address(RVA = "0x171AD3C", Offset = "0x171AD3C", VA = "0x171AD3C")]
		public Link(int originConversationID, int originDialogueID, int destinationConversationID, int destinationDialogueID)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001D0")]
	public class Location : Asset
	{
		[Token(Token = "0x6001010")]
		[Address(RVA = "0x171C394", Offset = "0x171C394", VA = "0x171C394")]
		public Location()
		{
		}

		[Token(Token = "0x6001011")]
		[Address(RVA = "0x171C39C", Offset = "0x171C39C", VA = "0x171C39C")]
		public Location(Location sourceLocation)
		{
		}

		[Token(Token = "0x6001012")]
		[Address(RVA = "0x171C3A4", Offset = "0x171C3A4", VA = "0x171C3A4")]
		public Location(PixelCrushers.DialogueSystem.ChatMapper.Location chatMapperLocation)
		{
		}

		[Token(Token = "0x6001013")]
		[Address(RVA = "0x171C3EC", Offset = "0x171C3EC", VA = "0x171C3EC")]
		public void Assign(PixelCrushers.DialogueSystem.ChatMapper.Location chatMapperLocation)
		{
		}
	}
	[Token(Token = "0x20001D1")]
	public static class CharacterTypeUtility
	{
		[Token(Token = "0x6001014")]
		[Address(RVA = "0x14343BC", Offset = "0x14343BC", VA = "0x14343BC")]
		public static CharacterType OtherType(CharacterType characterType)
		{
			return default(CharacterType);
		}
	}
	[Token(Token = "0x20001D2")]
	public static class ConditionPriorityUtility
	{
		[Token(Token = "0x6001015")]
		[Address(RVA = "0x143821C", Offset = "0x143821C", VA = "0x143821C")]
		public static ConditionPriority StringToConditionPriority(string s)
		{
			return default(ConditionPriority);
		}
	}
	[Token(Token = "0x20001D3")]
	public static class DatabaseMerger
	{
		[Token(Token = "0x20005AF")]
		public enum ConflictingIDRule
		{
			[Token(Token = "0x4001D25")]
			ReplaceConflictingIDs,
			[Token(Token = "0x4001D26")]
			AllowConflictingIDs,
			[Token(Token = "0x4001D27")]
			AssignUniqueIDs
		}

		[Token(Token = "0x20005B0")]
		private class NewIDs
		{
			[Token(Token = "0x4001D28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool destinationHasPlayerActor;

			[Token(Token = "0x4001D29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
			public bool destinationHasAlertVariable;

			[Token(Token = "0x4001D2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Dictionary<int, int> actor;

			[Token(Token = "0x4001D2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Dictionary<int, int> item;

			[Token(Token = "0x4001D2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Dictionary<int, int> location;

			[Token(Token = "0x4001D2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Dictionary<int, int> variable;

			[Token(Token = "0x4001D2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Dictionary<int, int> conversation;

			[Token(Token = "0x6002990")]
			[Address(RVA = "0x1478000", Offset = "0x1478000", VA = "0x1478000")]
			public NewIDs()
			{
			}
		}

		[Token(Token = "0x20005B1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D958", Offset = "0xA0D958")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4001D2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Actor actor;

			[Token(Token = "0x6002991")]
			[Address(RVA = "0x14778D0", Offset = "0x14778D0", VA = "0x14778D0")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x6002992")]
			[Address(RVA = "0x147A2A8", Offset = "0x147A2A8", VA = "0x147A2A8")]
			internal bool <MergeActorsReplaceConflictingIDs>b__0(Actor x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005B2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D968", Offset = "0xA0D968")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x4001D30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Item item;

			[Token(Token = "0x6002993")]
			[Address(RVA = "0x14778D8", Offset = "0x14778D8", VA = "0x14778D8")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x6002994")]
			[Address(RVA = "0x147A2D8", Offset = "0x147A2D8", VA = "0x147A2D8")]
			internal bool <MergeItemsReplaceConflictingIDs>b__0(Item x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005B3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D978", Offset = "0xA0D978")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x4001D31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Location location;

			[Token(Token = "0x6002995")]
			[Address(RVA = "0x14778E0", Offset = "0x14778E0", VA = "0x14778E0")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x6002996")]
			[Address(RVA = "0x147A308", Offset = "0x147A308", VA = "0x147A308")]
			internal bool <MergeLocationsReplaceConflictingIDs>b__0(Location x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D988", Offset = "0xA0D988")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x4001D32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Variable variable;

			[Token(Token = "0x6002997")]
			[Address(RVA = "0x14778E8", Offset = "0x14778E8", VA = "0x14778E8")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x6002998")]
			[Address(RVA = "0x147A338", Offset = "0x147A338", VA = "0x147A338")]
			internal bool <MergeVariablesReplaceConflictingIDs>b__0(Variable x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005B5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D998", Offset = "0xA0D998")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x4001D33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Conversation conversation;

			[Token(Token = "0x6002999")]
			[Address(RVA = "0x14778F0", Offset = "0x14778F0", VA = "0x14778F0")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x600299A")]
			[Address(RVA = "0x147A080", Offset = "0x147A080", VA = "0x147A080")]
			internal bool <MergeConversationsReplaceConflictingIDs>b__0(Conversation x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005B6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D9A8", Offset = "0xA0D9A8")]
		private sealed class <>c__DisplayClass16_0
		{
			[Token(Token = "0x4001D34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Conversation conversation;

			[Token(Token = "0x600299B")]
			[Address(RVA = "0x1477FF8", Offset = "0x1477FF8", VA = "0x1477FF8")]
			public <>c__DisplayClass16_0()
			{
			}

			[Token(Token = "0x600299C")]
			[Address(RVA = "0x147A0B0", Offset = "0x147A0B0", VA = "0x147A0B0")]
			internal bool <MergeConversationsAllowConflictingIDs>b__0(Conversation c)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005B7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D9B8", Offset = "0xA0D9B8")]
		private sealed class <>c__DisplayClass18_0
		{
			[Token(Token = "0x4001D35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Actor actor;

			[Token(Token = "0x600299D")]
			[Address(RVA = "0x1479D9C", Offset = "0x1479D9C", VA = "0x1479D9C")]
			public <>c__DisplayClass18_0()
			{
			}

			[Token(Token = "0x600299E")]
			[Address(RVA = "0x147A104", Offset = "0x147A104", VA = "0x147A104")]
			internal bool <GetNewActorIDs>b__0(Actor x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D9C8", Offset = "0xA0D9C8")]
		private sealed class <>c__DisplayClass19_0
		{
			[Token(Token = "0x4001D36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Item item;

			[Token(Token = "0x600299F")]
			[Address(RVA = "0x1479DA4", Offset = "0x1479DA4", VA = "0x1479DA4")]
			public <>c__DisplayClass19_0()
			{
			}

			[Token(Token = "0x60029A0")]
			[Address(RVA = "0x147A158", Offset = "0x147A158", VA = "0x147A158")]
			internal bool <GetNewItemIDs>b__0(Item x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005B9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D9D8", Offset = "0xA0D9D8")]
		private sealed class <>c__DisplayClass20_0
		{
			[Token(Token = "0x4001D37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Location location;

			[Token(Token = "0x60029A1")]
			[Address(RVA = "0x1479DAC", Offset = "0x1479DAC", VA = "0x1479DAC")]
			public <>c__DisplayClass20_0()
			{
			}

			[Token(Token = "0x60029A2")]
			[Address(RVA = "0x147A1AC", Offset = "0x147A1AC", VA = "0x147A1AC")]
			internal bool <GetNewLocationIDs>b__0(Location x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005BA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D9E8", Offset = "0xA0D9E8")]
		private sealed class <>c__DisplayClass21_0
		{
			[Token(Token = "0x4001D38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Variable variable;

			[Token(Token = "0x60029A3")]
			[Address(RVA = "0x1479DB4", Offset = "0x1479DB4", VA = "0x1479DB4")]
			public <>c__DisplayClass21_0()
			{
			}

			[Token(Token = "0x60029A4")]
			[Address(RVA = "0x147A200", Offset = "0x147A200", VA = "0x147A200")]
			internal bool <GetNewVariableIDs>b__0(Variable x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005BB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0D9F8", Offset = "0xA0D9F8")]
		private sealed class <>c__DisplayClass28_0
		{
			[Token(Token = "0x4001D39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Conversation conversation;

			[Token(Token = "0x60029A5")]
			[Address(RVA = "0x147A078", Offset = "0x147A078", VA = "0x147A078")]
			public <>c__DisplayClass28_0()
			{
			}

			[Token(Token = "0x60029A6")]
			[Address(RVA = "0x147A254", Offset = "0x147A254", VA = "0x147A254")]
			internal bool <MergeConversations>b__0(Conversation c)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001016")]
		[Address(RVA = "0x14767F0", Offset = "0x14767F0", VA = "0x14767F0")]
		public static void Merge(DialogueDatabase destination, DialogueDatabase source, ConflictingIDRule conflictingIDRule, bool mergeProperties, bool mergeActors, bool mergeItems, bool mergeLocations, bool mergeVariables, bool mergeConversations)
		{
		}

		[Token(Token = "0x6001017")]
		[Address(RVA = "0x1476DCC", Offset = "0x1476DCC", VA = "0x1476DCC")]
		public static void Merge(DialogueDatabase destination, DialogueDatabase source, ConflictingIDRule conflictingIDRule)
		{
		}

		[Token(Token = "0x6001018")]
		[Address(RVA = "0x1476E04", Offset = "0x1476E04", VA = "0x1476E04")]
		private static void MergeDatabaseProperties(DialogueDatabase destination, DialogueDatabase source)
		{
		}

		[Token(Token = "0x6001019")]
		[Address(RVA = "0x1476AA4", Offset = "0x1476AA4", VA = "0x1476AA4")]
		private static void MergeReplaceConflictingIDs(DialogueDatabase destination, DialogueDatabase source, bool mergeProperties, bool mergeActors, bool mergeItems, bool mergeLocations, bool mergeVariables, bool mergeConversations)
		{
		}

		[Token(Token = "0x600101A")]
		[Address(RVA = "0x1476F84", Offset = "0x1476F84", VA = "0x1476F84")]
		private static void MergeActorsReplaceConflictingIDs(DialogueDatabase destination, DialogueDatabase source)
		{
		}

		[Token(Token = "0x600101B")]
		[Address(RVA = "0x1477160", Offset = "0x1477160", VA = "0x1477160")]
		private static void MergeItemsReplaceConflictingIDs(DialogueDatabase destination, DialogueDatabase source)
		{
		}

		[Token(Token = "0x600101C")]
		[Address(RVA = "0x147733C", Offset = "0x147733C", VA = "0x147733C")]
		private static void MergeLocationsReplaceConflictingIDs(DialogueDatabase destination, DialogueDatabase source)
		{
		}

		[Token(Token = "0x600101D")]
		[Address(RVA = "0x1477518", Offset = "0x1477518", VA = "0x1477518")]
		private static void MergeVariablesReplaceConflictingIDs(DialogueDatabase destination, DialogueDatabase source)
		{
		}

		[Token(Token = "0x600101E")]
		[Address(RVA = "0x14776F4", Offset = "0x14776F4", VA = "0x14776F4")]
		private static void MergeConversationsReplaceConflictingIDs(DialogueDatabase destination, DialogueDatabase source)
		{
		}

		[Token(Token = "0x600101F")]
		[Address(RVA = "0x1476B78", Offset = "0x1476B78", VA = "0x1476B78")]
		private static void MergeAllowConflictingIDs(DialogueDatabase destination, DialogueDatabase source, bool mergeProperties, bool mergeActors, bool mergeItems, bool mergeLocations, bool mergeVariables, bool mergeConversations)
		{
		}

		[Token(Token = "0x6001020")]
		[Address(RVA = "0x14778F8", Offset = "0x14778F8", VA = "0x14778F8")]
		private static void MergeActorsAllowConflictingIDs(DialogueDatabase destination, DialogueDatabase source)
		{
		}

		[Token(Token = "0x6001021")]
		[Address(RVA = "0x1477A18", Offset = "0x1477A18", VA = "0x1477A18")]
		private static void MergeItemsAllowConflictingIDs(DialogueDatabase destination, DialogueDatabase source)
		{
		}

		[Token(Token = "0x6001022")]
		[Address(RVA = "0x1477B38", Offset = "0x1477B38", VA = "0x1477B38")]
		private static void MergeLocationsAllowConflictingIDs(DialogueDatabase destination, DialogueDatabase source)
		{
		}

		[Token(Token = "0x6001023")]
		[Address(RVA = "0x1477C58", Offset = "0x1477C58", VA = "0x1477C58")]
		private static void MergeVariablesAllowConflictingIDs(DialogueDatabase destination, DialogueDatabase source)
		{
		}

		[Token(Token = "0x6001024")]
		[Address(RVA = "0x1477D78", Offset = "0x1477D78", VA = "0x1477D78")]
		private static void MergeConversationsAllowConflictingIDs(DialogueDatabase destination, DialogueDatabase source)
		{
		}

		[Token(Token = "0x6001025")]
		[Address(RVA = "0x1476C4C", Offset = "0x1476C4C", VA = "0x1476C4C")]
		private static void MergeAssignUniqueIDs(DialogueDatabase destination, DialogueDatabase source, bool mergeProperties, bool mergeActors, bool mergeItems, bool mergeLocations, bool mergeVariables, bool mergeConversations)
		{
		}

		[Token(Token = "0x6001026")]
		[Address(RVA = "0x14780D8", Offset = "0x14780D8", VA = "0x14780D8")]
		private static void GetNewActorIDs(DialogueDatabase destination, DialogueDatabase source, NewIDs newIDs)
		{
		}

		[Token(Token = "0x6001027")]
		[Address(RVA = "0x1478420", Offset = "0x1478420", VA = "0x1478420")]
		private static void GetNewItemIDs(DialogueDatabase destination, DialogueDatabase source, NewIDs newIDs)
		{
		}

		[Token(Token = "0x6001028")]
		[Address(RVA = "0x147870C", Offset = "0x147870C", VA = "0x147870C")]
		private static void GetNewLocationIDs(DialogueDatabase destination, DialogueDatabase source, NewIDs newIDs)
		{
		}

		[Token(Token = "0x6001029")]
		[Address(RVA = "0x14789F8", Offset = "0x14789F8", VA = "0x14789F8")]
		private static void GetNewVariableIDs(DialogueDatabase destination, DialogueDatabase source, NewIDs newIDs)
		{
		}

		[Token(Token = "0x600102A")]
		[Address(RVA = "0x1478D68", Offset = "0x1478D68", VA = "0x1478D68")]
		private static void GetNewConversationIDs(DialogueDatabase destination, DialogueDatabase source, NewIDs newIDs)
		{
		}

		[Token(Token = "0x600102B")]
		[Address(RVA = "0x1479DBC", Offset = "0x1479DBC", VA = "0x1479DBC")]
		private static void ConvertFieldIDs(List<Field> fields, NewIDs newIDs)
		{
		}

		[Token(Token = "0x600102C")]
		[Address(RVA = "0x1478FA8", Offset = "0x1478FA8", VA = "0x1478FA8")]
		private static void MergeActors(DialogueDatabase destination, DialogueDatabase source, NewIDs newIDs)
		{
		}

		[Token(Token = "0x600102D")]
		[Address(RVA = "0x14791AC", Offset = "0x14791AC", VA = "0x14791AC")]
		private static void MergeItems(DialogueDatabase destination, DialogueDatabase source, NewIDs newIDs)
		{
		}

		[Token(Token = "0x600102E")]
		[Address(RVA = "0x14793B0", Offset = "0x14793B0", VA = "0x14793B0")]
		private static void MergeLocations(DialogueDatabase destination, DialogueDatabase source, NewIDs newIDs)
		{
		}

		[Token(Token = "0x600102F")]
		[Address(RVA = "0x14795B4", Offset = "0x14795B4", VA = "0x14795B4")]
		private static void MergeVariables(DialogueDatabase destination, DialogueDatabase source, NewIDs newIDs)
		{
		}

		[Token(Token = "0x6001030")]
		[Address(RVA = "0x14797B8", Offset = "0x14797B8", VA = "0x14797B8")]
		private static void MergeConversations(DialogueDatabase destination, DialogueDatabase source, NewIDs newIDs)
		{
		}
	}
	[Token(Token = "0x20001D4")]
	public static class DatabaseUtility
	{
		[Token(Token = "0x6001031")]
		[Address(RVA = "0x1475E00", Offset = "0x1475E00", VA = "0x1475E00")]
		public static DialogueDatabase CreateDialogueDatabaseInstance(bool createDefaultAssets = false)
		{
			return null;
		}
	}
	[Token(Token = "0x20001D5")]
	public static class LinkUtility
	{
		[Token(Token = "0x20005BC")]
		public class PrioritySorter : IComparer<Link>
		{
			[Token(Token = "0x60029A7")]
			[Address(RVA = "0x171B088", Offset = "0x171B088", VA = "0x171B088", Slot = "4")]
			public int Compare(Link link1, Link link2)
			{
				return default(int);
			}

			[Token(Token = "0x60029A8")]
			[Address(RVA = "0x171B024", Offset = "0x171B024", VA = "0x171B024")]
			public PrioritySorter()
			{
			}
		}

		[Token(Token = "0x6001032")]
		[Address(RVA = "0x171AD90", Offset = "0x171AD90", VA = "0x171AD90")]
		public static void SortOutgoingLinks(DialogueDatabase database, Conversation conversation)
		{
		}

		[Token(Token = "0x6001033")]
		[Address(RVA = "0x171AE8C", Offset = "0x171AE8C", VA = "0x171AE8C")]
		public static void SortOutgoingLinks(DialogueDatabase database, DialogueEntry dialogueEntry)
		{
		}

		[Token(Token = "0x6001034")]
		[Address(RVA = "0x171B02C", Offset = "0x171B02C", VA = "0x171B02C")]
		public static bool IsPassthroughOnFalse(DialogueEntry entry)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x20001D6")]
	public class Template
	{
		[Token(Token = "0x4000A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool treatItemsAsQuests;

		[Token(Token = "0x4000A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Field> actorFields;

		[Token(Token = "0x4000A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Field> itemFields;

		[Token(Token = "0x4000A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<Field> questFields;

		[Token(Token = "0x4000A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<Field> locationFields;

		[Token(Token = "0x4000A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<Field> variableFields;

		[Token(Token = "0x4000A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<Field> conversationFields;

		[Token(Token = "0x4000A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<Field> dialogueEntryFields;

		[Token(Token = "0x4000A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<string> actorPrimaryFieldTitles;

		[Token(Token = "0x4000A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<string> itemPrimaryFieldTitles;

		[Token(Token = "0x4000A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<string> questPrimaryFieldTitles;

		[Token(Token = "0x4000A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<string> locationPrimaryFieldTitles;

		[Token(Token = "0x4000A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<string> variablePrimaryFieldTitles;

		[Token(Token = "0x4000A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public List<string> conversationPrimaryFieldTitles;

		[Token(Token = "0x4000A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public List<string> dialogueEntryPrimaryFieldTitles;

		[Token(Token = "0x4000A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Color npcLineColor;

		[Token(Token = "0x4000A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Color pcLineColor;

		[Token(Token = "0x4000A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Color repeatLineColor;

		[Token(Token = "0x6001035")]
		[Address(RVA = "0x12EFE90", Offset = "0x12EFE90", VA = "0x12EFE90")]
		public static Template FromDefault()
		{
			return null;
		}

		[Token(Token = "0x6001036")]
		[Address(RVA = "0x12F0BE8", Offset = "0x12F0BE8", VA = "0x12F0BE8")]
		public Actor CreateActor(int id, string name, bool isPlayer)
		{
			return null;
		}

		[Token(Token = "0x6001037")]
		[Address(RVA = "0x12F0E30", Offset = "0x12F0E30", VA = "0x12F0E30")]
		public Item CreateItem(int id, string name)
		{
			return null;
		}

		[Token(Token = "0x6001038")]
		[Address(RVA = "0x12F0EC8", Offset = "0x12F0EC8", VA = "0x12F0EC8")]
		public Item CreateQuest(int id, string name)
		{
			return null;
		}

		[Token(Token = "0x6001039")]
		[Address(RVA = "0x12F0F60", Offset = "0x12F0F60", VA = "0x12F0F60")]
		public Location CreateLocation(int id, string name)
		{
			return null;
		}

		[Token(Token = "0x600103A")]
		[Address(RVA = "0x12F0FF8", Offset = "0x12F0FF8", VA = "0x12F0FF8")]
		public Variable CreateVariable(int id, string name, string value)
		{
			return null;
		}

		[Token(Token = "0x600103B")]
		[Address(RVA = "0x12F10AC", Offset = "0x12F10AC", VA = "0x12F10AC")]
		public Variable CreateVariable(int id, string name, string value, FieldType type)
		{
			return null;
		}

		[Token(Token = "0x600103C")]
		[Address(RVA = "0x12F1174", Offset = "0x12F1174", VA = "0x12F1174")]
		public Conversation CreateConversation(int id, string title)
		{
			return null;
		}

		[Token(Token = "0x600103D")]
		[Address(RVA = "0x12F120C", Offset = "0x12F120C", VA = "0x12F120C")]
		public DialogueEntry CreateDialogueEntry(int id, int conversationID, string title)
		{
			return null;
		}

		[Token(Token = "0x600103E")]
		[Address(RVA = "0x12F0C9C", Offset = "0x12F0C9C", VA = "0x12F0C9C")]
		public List<Field> CreateFields(List<Field> templateFields)
		{
			return null;
		}

		[Token(Token = "0x600103F")]
		[Address(RVA = "0x12F12B4", Offset = "0x12F12B4", VA = "0x12F12B4")]
		public int GetNextActorID(DialogueDatabase database)
		{
			return default(int);
		}

		[Token(Token = "0x6001040")]
		[Address(RVA = "0x12F1364", Offset = "0x12F1364", VA = "0x12F1364")]
		public int GetNextItemID(DialogueDatabase database)
		{
			return default(int);
		}

		[Token(Token = "0x6001041")]
		[Address(RVA = "0x12F1414", Offset = "0x12F1414", VA = "0x12F1414")]
		public int GetNextQuestID(DialogueDatabase database)
		{
			return default(int);
		}

		[Token(Token = "0x6001042")]
		[Address(RVA = "0x12F1418", Offset = "0x12F1418", VA = "0x12F1418")]
		public int GetNextLocationID(DialogueDatabase database)
		{
			return default(int);
		}

		[Token(Token = "0x6001043")]
		[Address(RVA = "0x12F14C8", Offset = "0x12F14C8", VA = "0x12F14C8")]
		public int GetNextVariableID(DialogueDatabase database)
		{
			return default(int);
		}

		[Token(Token = "0x6001044")]
		[Address(RVA = "0x12F1578", Offset = "0x12F1578", VA = "0x12F1578")]
		public int GetNextConversationID(DialogueDatabase database)
		{
			return default(int);
		}

		[Token(Token = "0x6001045")]
		private int GetNextAssetID<T>(List<T> assets) where T : Asset
		{
			return default(int);
		}

		[Token(Token = "0x6001046")]
		[Address(RVA = "0x12F1628", Offset = "0x12F1628", VA = "0x12F1628")]
		public int GetNextDialogueEntryID(Conversation conversation)
		{
			return default(int);
		}

		[Token(Token = "0x6001047")]
		[Address(RVA = "0x12F09F0", Offset = "0x12F09F0", VA = "0x12F09F0")]
		public Template()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001D7")]
	public class Variable : Asset
	{
		[Token(Token = "0x170001B1")]
		public string InitialValue
		{
			[Token(Token = "0x6001048")]
			[Address(RVA = "0x11682F8", Offset = "0x11682F8", VA = "0x11682F8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001049")]
			[Address(RVA = "0x116834C", Offset = "0x116834C", VA = "0x116834C")]
			set
			{
			}
		}

		[Token(Token = "0x170001B2")]
		public float InitialFloatValue
		{
			[Token(Token = "0x600104A")]
			[Address(RVA = "0x11683D4", Offset = "0x11683D4", VA = "0x11683D4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600104B")]
			[Address(RVA = "0x1168428", Offset = "0x1168428", VA = "0x1168428")]
			set
			{
			}
		}

		[Token(Token = "0x170001B3")]
		public bool InitialBoolValue
		{
			[Token(Token = "0x600104C")]
			[Address(RVA = "0x11684B0", Offset = "0x11684B0", VA = "0x11684B0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600104D")]
			[Address(RVA = "0x1168504", Offset = "0x1168504", VA = "0x1168504")]
			set
			{
			}
		}

		[Token(Token = "0x170001B4")]
		public FieldType Type
		{
			[Token(Token = "0x600104E")]
			[Address(RVA = "0x116858C", Offset = "0x116858C", VA = "0x116858C")]
			get
			{
				return default(FieldType);
			}
			[Token(Token = "0x600104F")]
			[Address(RVA = "0x1168614", Offset = "0x1168614", VA = "0x1168614")]
			set
			{
			}
		}

		[Token(Token = "0x6001050")]
		[Address(RVA = "0x11686D4", Offset = "0x11686D4", VA = "0x11686D4")]
		public Variable()
		{
		}

		[Token(Token = "0x6001051")]
		[Address(RVA = "0x11686DC", Offset = "0x11686DC", VA = "0x11686DC")]
		public Variable(Variable sourceVariable)
		{
		}

		[Token(Token = "0x6001052")]
		[Address(RVA = "0x11686E4", Offset = "0x11686E4", VA = "0x11686E4")]
		public Variable(UserVariable chatMapperUserVariable)
		{
		}

		[Token(Token = "0x6001053")]
		[Address(RVA = "0x1168714", Offset = "0x1168714", VA = "0x1168714")]
		public void Assign(UserVariable chatMapperUserVariable)
		{
		}

		[Token(Token = "0x6001054")]
		[Address(RVA = "0x1168590", Offset = "0x1168590", VA = "0x1168590")]
		private FieldType LookupInitialValueType()
		{
			return default(FieldType);
		}

		[Token(Token = "0x6001055")]
		[Address(RVA = "0x1168618", Offset = "0x1168618", VA = "0x1168618")]
		private void SetInitialValueType(FieldType type)
		{
		}
	}
	[Token(Token = "0x20001D8")]
	public class DatabaseManager
	{
		[Token(Token = "0x4000A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA17E28", Offset = "0xA17E28")]
		private DialogueDatabase <defaultDatabase>k__BackingField;

		[Token(Token = "0x4000A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private DialogueDatabase m_masterDatabase;

		[Token(Token = "0x4000A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<DialogueDatabase> m_loadedDatabases;

		[Token(Token = "0x170001B5")]
		public DialogueDatabase defaultDatabase
		{
			[Token(Token = "0x6001056")]
			[Address(RVA = "0x1475CE8", Offset = "0x1475CE8", VA = "0x1475CE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A060", Offset = "0xA2A060")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001057")]
			[Address(RVA = "0x1475CF0", Offset = "0x1475CF0", VA = "0x1475CF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A070", Offset = "0xA2A070")]
			set
			{
			}
		}

		[Token(Token = "0x170001B6")]
		public DialogueDatabase masterDatabase
		{
			[Token(Token = "0x6001058")]
			[Address(RVA = "0x1475CF8", Offset = "0x1475CF8", VA = "0x1475CF8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B7")]
		public DialogueDatabase DefaultDatabase
		{
			[Token(Token = "0x6001059")]
			[Address(RVA = "0x1475D60", Offset = "0x1475D60", VA = "0x1475D60")]
			get
			{
				return null;
			}
			[Token(Token = "0x600105A")]
			[Address(RVA = "0x1475D68", Offset = "0x1475D68", VA = "0x1475D68")]
			set
			{
			}
		}

		[Token(Token = "0x170001B8")]
		public DialogueDatabase MasterDatabase
		{
			[Token(Token = "0x600105B")]
			[Address(RVA = "0x1475D70", Offset = "0x1475D70", VA = "0x1475D70")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600105C")]
		[Address(RVA = "0x1475D74", Offset = "0x1475D74", VA = "0x1475D74")]
		public DatabaseManager([Optional] DialogueDatabase defaultDatabase)
		{
		}

		[Token(Token = "0x600105D")]
		[Address(RVA = "0x1475CFC", Offset = "0x1475CFC", VA = "0x1475CFC")]
		private DialogueDatabase GetMasterDatabase()
		{
			return null;
		}

		[Token(Token = "0x600105E")]
		[Address(RVA = "0x1475FB8", Offset = "0x1475FB8", VA = "0x1475FB8")]
		public void Add(DialogueDatabase database)
		{
		}

		[Token(Token = "0x600105F")]
		[Address(RVA = "0x1476254", Offset = "0x1476254", VA = "0x1476254")]
		public void Remove(DialogueDatabase database)
		{
		}

		[Token(Token = "0x6001060")]
		[Address(RVA = "0x147649C", Offset = "0x147649C", VA = "0x147649C")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001061")]
		[Address(RVA = "0x14765F4", Offset = "0x14765F4", VA = "0x14765F4")]
		public void Reset(DatabaseResetOptions databaseResetOptions = DatabaseResetOptions.RevertToDefault)
		{
		}

		[Token(Token = "0x6001062")]
		[Address(RVA = "0x1476648", Offset = "0x1476648", VA = "0x1476648")]
		private void ResetToDefaultDatabase()
		{
		}

		[Token(Token = "0x6001063")]
		[Address(RVA = "0x1476670", Offset = "0x1476670", VA = "0x1476670")]
		private void ResetToLoadedDatabases()
		{
		}
	}
	[Token(Token = "0x20001D9")]
	public enum DatabaseResetOptions
	{
		[Token(Token = "0x4000A88")]
		KeepAllLoaded,
		[Token(Token = "0x4000A89")]
		RevertToDefault
	}
	[Token(Token = "0x20001DA")]
	public static class DialogueLua
	{
		[Token(Token = "0x4000A8A")]
		public const string SimStatus = "SimStatus";

		[Token(Token = "0x4000A8B")]
		public const string Untouched = "Untouched";

		[Token(Token = "0x4000A8C")]
		public const string WasDisplayed = "WasDisplayed";

		[Token(Token = "0x4000A8D")]
		public const string WasOffered = "WasOffered";

		[Token(Token = "0x4000A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool includeSimStatus;

		[Token(Token = "0x4000A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<string, string> statusTable;

		[Token(Token = "0x4000A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Dictionary<string, float> relationshipTable;

		[Token(Token = "0x6001064")]
		[Address(RVA = "0x15E6454", Offset = "0x15E6454", VA = "0x15E6454")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xA2A080", Offset = "0xA2A080")]
		private static void InitStaticVariables()
		{
		}

		[Token(Token = "0x6001065")]
		[Address(RVA = "0x15E6520", Offset = "0x15E6520", VA = "0x15E6520")]
		static DialogueLua()
		{
		}

		[Token(Token = "0x6001066")]
		[Address(RVA = "0x15E68E4", Offset = "0x15E68E4", VA = "0x15E68E4")]
		public static void InitializeChatMapperVariables()
		{
		}

		[Token(Token = "0x6001067")]
		[Address(RVA = "0x15E69A8", Offset = "0x15E69A8", VA = "0x15E69A8")]
		public static void AddChatMapperVariables(DialogueDatabase database, List<DialogueDatabase> loadedDatabases)
		{
		}

		[Token(Token = "0x6001068")]
		[Address(RVA = "0x15E6F34", Offset = "0x15E6F34", VA = "0x15E6F34")]
		public static void RemoveChatMapperVariables(DialogueDatabase database, List<DialogueDatabase> loadedDatabases)
		{
		}

		[Token(Token = "0x6001069")]
		[Address(RVA = "0x15E70A0", Offset = "0x15E70A0", VA = "0x15E70A0")]
		public static void SetParticipants(string actorName, string conversantName, [Optional] string actorIndex, [Optional] string conversantIndex)
		{
		}

		[Token(Token = "0x600106A")]
		[Address(RVA = "0x15E747C", Offset = "0x15E747C", VA = "0x15E747C")]
		public static string GetSimStatus(DialogueEntry dialogueEntry)
		{
			return null;
		}

		[Token(Token = "0x600106B")]
		[Address(RVA = "0x15E7510", Offset = "0x15E7510", VA = "0x15E7510")]
		public static string GetSimStatus(int conversationID, int entryID)
		{
			return null;
		}

		[Token(Token = "0x600106C")]
		[Address(RVA = "0x15E7614", Offset = "0x15E7614", VA = "0x15E7614")]
		private static LuaTable GetSimStatusTable(int conversationID, int entryID)
		{
			return null;
		}

		[Token(Token = "0x600106D")]
		[Address(RVA = "0x15E7E44", Offset = "0x15E7E44", VA = "0x15E7E44")]
		public static void MarkDialogueEntryUntouched(DialogueEntry dialogueEntry)
		{
		}

		[Token(Token = "0x600106E")]
		[Address(RVA = "0x15E7FB8", Offset = "0x15E7FB8", VA = "0x15E7FB8")]
		public static void MarkDialogueEntryDisplayed(DialogueEntry dialogueEntry)
		{
		}

		[Token(Token = "0x600106F")]
		[Address(RVA = "0x15E8028", Offset = "0x15E8028", VA = "0x15E8028")]
		public static void MarkDialogueEntryOffered(DialogueEntry dialogueEntry)
		{
		}

		[Token(Token = "0x6001070")]
		[Address(RVA = "0x15E7EB4", Offset = "0x15E7EB4", VA = "0x15E7EB4")]
		public static void MarkDialogueEntry(DialogueEntry dialogueEntry, string status)
		{
		}

		[Token(Token = "0x6001071")]
		private static void AddToTable<T>(string arrayName, List<T> assets, List<DialogueDatabase> loadedDatabases, bool addRaw) where T : Asset
		{
		}

		[Token(Token = "0x6001072")]
		[Address(RVA = "0x15E6B7C", Offset = "0x15E6B7C", VA = "0x15E6B7C")]
		private static void AddToVariableTable(List<Variable> variables, List<DialogueDatabase> loadedDatabases, bool addRaw)
		{
		}

		[Token(Token = "0x6001073")]
		[Address(RVA = "0x15E6DA0", Offset = "0x15E6DA0", VA = "0x15E6DA0")]
		public static void AddToConversationTable(List<Conversation> conversations, List<DialogueDatabase> loadedDatabases, bool addRaw = false)
		{
		}

		[Token(Token = "0x6001074")]
		[Address(RVA = "0x15E7AA8", Offset = "0x15E7AA8", VA = "0x15E7AA8")]
		public static LuaTable AddToConversationTable(LuaTable conversationTable, Conversation conversation, bool addRaw = false)
		{
			return null;
		}

		[Token(Token = "0x6001075")]
		[Address(RVA = "0x15E7CD4", Offset = "0x15E7CD4", VA = "0x15E7CD4")]
		private static LuaTable AddNewDialogTableToConversationFields(LuaTable fieldTable, Conversation conversation)
		{
			return null;
		}

		[Token(Token = "0x6001076")]
		[Address(RVA = "0x15E82E8", Offset = "0x15E82E8", VA = "0x15E82E8")]
		private static LuaValue GetFieldLuaValue(Field field)
		{
			return null;
		}

		[Token(Token = "0x6001077")]
		[Address(RVA = "0x15E810C", Offset = "0x15E810C", VA = "0x15E810C")]
		private static LuaValue GetVariableLuaValue(Variable field)
		{
			return null;
		}

		[Token(Token = "0x6001078")]
		[Address(RVA = "0x15E848C", Offset = "0x15E848C", VA = "0x15E848C")]
		private static void SetFields(string record, List<Field> fields, [Optional] string extraField)
		{
		}

		[Token(Token = "0x6001079")]
		[Address(RVA = "0x15E8758", Offset = "0x15E8758", VA = "0x15E8758")]
		public static string FieldValueAsString(Field field)
		{
			return null;
		}

		[Token(Token = "0x600107A")]
		[Address(RVA = "0x15E87D0", Offset = "0x15E87D0", VA = "0x15E87D0")]
		public static string ValueAsString(FieldType fieldType, string fieldValue)
		{
			return null;
		}

		[Token(Token = "0x600107B")]
		private static void RemoveFromTable<T>(string arrayName, List<T> assets, List<DialogueDatabase> loadedDatabases) where T : Asset
		{
		}

		[Token(Token = "0x600107C")]
		[Address(RVA = "0x15E67D8", Offset = "0x15E67D8", VA = "0x15E67D8")]
		private static void RegisterDialogueSystemFunctions()
		{
		}

		[Token(Token = "0x600107D")]
		[Address(RVA = "0x15E8A2C", Offset = "0x15E8A2C", VA = "0x15E8A2C")]
		public static string RandomElement(string list)
		{
			return null;
		}

		[Token(Token = "0x600107E")]
		[Address(RVA = "0x15E8B10", Offset = "0x15E8B10", VA = "0x15E8B10")]
		public static string GetLocalizedText(string tableName, string elementName, string fieldName)
		{
			return null;
		}

		[Token(Token = "0x600107F")]
		[Address(RVA = "0x15E65DC", Offset = "0x15E65DC", VA = "0x15E65DC")]
		private static void RegisterChatMapperFunctions()
		{
		}

		[Token(Token = "0x6001080")]
		[Address(RVA = "0x15E8D1C", Offset = "0x15E8D1C", VA = "0x15E8D1C")]
		private static string GetStatusKey(LuaTable asset1, LuaTable asset2)
		{
			return null;
		}

		[Token(Token = "0x6001081")]
		[Address(RVA = "0x15E8E88", Offset = "0x15E8E88", VA = "0x15E8E88")]
		private static string GetRelationshipKey(LuaTable actor1, LuaTable actor2, string relationshipType)
		{
			return null;
		}

		[Token(Token = "0x6001082")]
		[Address(RVA = "0x15E90C0", Offset = "0x15E90C0", VA = "0x15E90C0")]
		private static string SanitizeForStatusTable(string s)
		{
			return null;
		}

		[Token(Token = "0x6001083")]
		[Address(RVA = "0x15E915C", Offset = "0x15E915C", VA = "0x15E915C")]
		private static float GetLuaFloat(LuaNumber luaNumber)
		{
			return default(float);
		}

		[Token(Token = "0x6001084")]
		[Address(RVA = "0x15E9174", Offset = "0x15E9174", VA = "0x15E9174")]
		public static string GetStatus(LuaTable asset1, LuaTable asset2)
		{
			return null;
		}

		[Token(Token = "0x6001085")]
		[Address(RVA = "0x15E9274", Offset = "0x15E9274", VA = "0x15E9274")]
		public static void SetStatus(LuaTable asset1, LuaTable asset2, string statusValue)
		{
		}

		[Token(Token = "0x6001086")]
		[Address(RVA = "0x15E9334", Offset = "0x15E9334", VA = "0x15E9334")]
		public static float GetRelationship(LuaTable actor1, LuaTable actor2, string relationshipType)
		{
			return default(float);
		}

		[Token(Token = "0x6001087")]
		[Address(RVA = "0x15E9434", Offset = "0x15E9434", VA = "0x15E9434")]
		public static void SetRelationship(LuaTable actor1, LuaTable actor2, string relationshipType, float value)
		{
		}

		[Token(Token = "0x6001088")]
		[Address(RVA = "0x15E94EC", Offset = "0x15E94EC", VA = "0x15E94EC")]
		public static void IncRelationship(LuaTable actor1, LuaTable actor2, string relationshipType, float incrementAmount)
		{
		}

		[Token(Token = "0x6001089")]
		[Address(RVA = "0x15E9654", Offset = "0x15E9654", VA = "0x15E9654")]
		public static void DecRelationship(LuaTable actor1, LuaTable actor2, string relationshipType, float decrementAmount)
		{
		}

		[Token(Token = "0x600108A")]
		[Address(RVA = "0x15E97BC", Offset = "0x15E97BC", VA = "0x15E97BC")]
		public static string GetStatusTableAsLua()
		{
			return null;
		}

		[Token(Token = "0x600108B")]
		[Address(RVA = "0x15E9A4C", Offset = "0x15E9A4C", VA = "0x15E9A4C")]
		public static string GetRelationshipTableAsLua()
		{
			return null;
		}

		[Token(Token = "0x600108C")]
		[Address(RVA = "0x15E9CDC", Offset = "0x15E9CDC", VA = "0x15E9CDC")]
		public static void RefreshStatusTableFromLua()
		{
		}

		[Token(Token = "0x600108D")]
		[Address(RVA = "0x15E9F24", Offset = "0x15E9F24", VA = "0x15E9F24")]
		public static void RefreshRelationshipTableFromLua()
		{
		}

		[Token(Token = "0x600108E")]
		[Address(RVA = "0x15E8944", Offset = "0x15E8944", VA = "0x15E8944")]
		public static string DoubleQuotesToSingle(string s)
		{
			return null;
		}

		[Token(Token = "0x600108F")]
		[Address(RVA = "0x15EA26C", Offset = "0x15EA26C", VA = "0x15EA26C")]
		public static string SpacesToUnderscores(string s)
		{
			return null;
		}

		[Token(Token = "0x6001090")]
		[Address(RVA = "0x15E7360", Offset = "0x15E7360", VA = "0x15E7360")]
		public static string StringToTableIndex(string s)
		{
			return null;
		}

		[Token(Token = "0x6001091")]
		[Address(RVA = "0x15EA2F4", Offset = "0x15EA2F4", VA = "0x15EA2F4")]
		public static string StringToLocalizedTableIndex(string s)
		{
			return null;
		}

		[Token(Token = "0x6001092")]
		[Address(RVA = "0x15EA3F8", Offset = "0x15EA3F8", VA = "0x15EA3F8")]
		public static bool DoesTableElementExist(string table, string element)
		{
			return default(bool);
		}

		[Token(Token = "0x6001093")]
		[Address(RVA = "0x15EA57C", Offset = "0x15EA57C", VA = "0x15EA57C")]
		public static Lua.Result GetTableField(string table, string element, string field)
		{
			return default(Lua.Result);
		}

		[Token(Token = "0x6001094")]
		[Address(RVA = "0x15EA7EC", Offset = "0x15EA7EC", VA = "0x15EA7EC")]
		public static void SetTableField(string table, string element, string field, object value)
		{
		}

		[Token(Token = "0x6001095")]
		[Address(RVA = "0x15EAAE4", Offset = "0x15EAAE4", VA = "0x15EAAE4")]
		public static Lua.Result GetActorField(string actor, string field)
		{
			return default(Lua.Result);
		}

		[Token(Token = "0x6001096")]
		[Address(RVA = "0x15EAB64", Offset = "0x15EAB64", VA = "0x15EAB64")]
		public static void SetActorField(string actor, string field, object value)
		{
		}

		[Token(Token = "0x6001097")]
		[Address(RVA = "0x15EABEC", Offset = "0x15EABEC", VA = "0x15EABEC")]
		public static Lua.Result GetItemField(string item, string field)
		{
			return default(Lua.Result);
		}

		[Token(Token = "0x6001098")]
		[Address(RVA = "0x15EAC6C", Offset = "0x15EAC6C", VA = "0x15EAC6C")]
		public static void SetItemField(string item, string field, object value)
		{
		}

		[Token(Token = "0x6001099")]
		[Address(RVA = "0x15EACF4", Offset = "0x15EACF4", VA = "0x15EACF4")]
		public static Lua.Result GetQuestField(string quest, string field)
		{
			return default(Lua.Result);
		}

		[Token(Token = "0x600109A")]
		[Address(RVA = "0x15EAD74", Offset = "0x15EAD74", VA = "0x15EAD74")]
		public static void SetQuestField(string quest, string field, object value)
		{
		}

		[Token(Token = "0x600109B")]
		[Address(RVA = "0x15EADFC", Offset = "0x15EADFC", VA = "0x15EADFC")]
		public static Lua.Result GetLocationField(string location, string field)
		{
			return default(Lua.Result);
		}

		[Token(Token = "0x600109C")]
		[Address(RVA = "0x15EAE7C", Offset = "0x15EAE7C", VA = "0x15EAE7C")]
		public static void SetLocationField(string location, string field, object value)
		{
		}

		[Token(Token = "0x600109D")]
		[Address(RVA = "0x15EAF04", Offset = "0x15EAF04", VA = "0x15EAF04")]
		public static bool DoesVariableExist(string variable)
		{
			return default(bool);
		}

		[Token(Token = "0x600109E")]
		[Address(RVA = "0x15EAF74", Offset = "0x15EAF74", VA = "0x15EAF74")]
		public static Lua.Result GetVariable(string variable)
		{
			return default(Lua.Result);
		}

		[Token(Token = "0x600109F")]
		[Address(RVA = "0x15E71E0", Offset = "0x15E71E0", VA = "0x15E71E0")]
		public static void SetVariable(string variable, object value)
		{
		}

		[Token(Token = "0x60010A0")]
		[Address(RVA = "0x15E8BAC", Offset = "0x15E8BAC", VA = "0x15E8BAC")]
		public static Lua.Result GetLocalizedTableField(string table, string element, string field)
		{
			return default(Lua.Result);
		}

		[Token(Token = "0x60010A1")]
		[Address(RVA = "0x15EB13C", Offset = "0x15EB13C", VA = "0x15EB13C")]
		public static void SetLocalizedTableField(string table, string element, string field, object value)
		{
		}

		[Token(Token = "0x60010A2")]
		[Address(RVA = "0x15EB1D0", Offset = "0x15EB1D0", VA = "0x15EB1D0")]
		public static Lua.Result GetLocalizedActorField(string actor, string field)
		{
			return default(Lua.Result);
		}

		[Token(Token = "0x60010A3")]
		[Address(RVA = "0x15EB250", Offset = "0x15EB250", VA = "0x15EB250")]
		public static void SetLocalizedActorField(string actor, string field, object value)
		{
		}

		[Token(Token = "0x60010A4")]
		[Address(RVA = "0x15EB2D4", Offset = "0x15EB2D4", VA = "0x15EB2D4")]
		public static Lua.Result GetLocalizedItemField(string item, string field)
		{
			return default(Lua.Result);
		}

		[Token(Token = "0x60010A5")]
		[Address(RVA = "0x15EB354", Offset = "0x15EB354", VA = "0x15EB354")]
		public static void SetLocalizedItemField(string item, string field, object value)
		{
		}

		[Token(Token = "0x60010A6")]
		[Address(RVA = "0x15EB3D8", Offset = "0x15EB3D8", VA = "0x15EB3D8")]
		public static Lua.Result GetLocalizedQuestField(string quest, string field)
		{
			return default(Lua.Result);
		}

		[Token(Token = "0x60010A7")]
		[Address(RVA = "0x15EB44C", Offset = "0x15EB44C", VA = "0x15EB44C")]
		public static void SetLocalizedQuestField(string quest, string field, object value)
		{
		}

		[Token(Token = "0x60010A8")]
		[Address(RVA = "0x15EB4C8", Offset = "0x15EB4C8", VA = "0x15EB4C8")]
		public static Lua.Result GetLocalizedLocationField(string location, string field)
		{
			return default(Lua.Result);
		}

		[Token(Token = "0x60010A9")]
		[Address(RVA = "0x15EB548", Offset = "0x15EB548", VA = "0x15EB548")]
		public static void SetLocalizedLocationField(string location, string field, object value)
		{
		}

		[Token(Token = "0x60010AA")]
		[Address(RVA = "0x15EB5CC", Offset = "0x15EB5CC", VA = "0x15EB5CC")]
		public static Lua.Result GetConversationField(int conversationID, string field)
		{
			return default(Lua.Result);
		}

		[Token(Token = "0x60010AB")]
		[Address(RVA = "0x15EB738", Offset = "0x15EB738", VA = "0x15EB738")]
		public static Lua.Result GetLocalizedConversationField(int conversationID, string field)
		{
			return default(Lua.Result);
		}
	}
	[Token(Token = "0x20001DB")]
	public delegate bool IsDialogueEntryValidDelegate(DialogueEntry dialogueEntry);
	[Token(Token = "0x20001DC")]
	public class ConversationModel
	{
		[Token(Token = "0x20005BD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DA08", Offset = "0xA0DA08")]
		private sealed class <>c__DisplayClass74_0
		{
			[Token(Token = "0x4001D3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CharacterInfo characterInfo;

			[Token(Token = "0x60029A9")]
			[Address(RVA = "0x146FDF8", Offset = "0x146FDF8", VA = "0x146FDF8")]
			public <>c__DisplayClass74_0()
			{
			}

			[Token(Token = "0x60029AA")]
			[Address(RVA = "0x1470168", Offset = "0x1470168", VA = "0x1470168")]
			internal void <GetCharacterInfo>b__0(Sprite sprite)
			{
			}
		}

		[Token(Token = "0x4000A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA17E38", Offset = "0xA17E38")]
		private ConversationState <firstState>k__BackingField;

		[Token(Token = "0x4000A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA17E48", Offset = "0xA17E48")]
		private IsDialogueEntryValidDelegate <isDialogueEntryValid>k__BackingField;

		[Token(Token = "0x4000A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private DialogueDatabase m_database;

		[Token(Token = "0x4000A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CharacterInfo m_actorInfo;

		[Token(Token = "0x4000A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CharacterInfo m_conversantInfo;

		[Token(Token = "0x4000A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_allowLuaExceptions;

		[Token(Token = "0x4000A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Dictionary<int, CharacterInfo> m_characterInfoCache;

		[Token(Token = "0x4000A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private EntrytagFormat m_entrytagFormat;

		[Token(Token = "0x4000A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private EmTag m_emTagForOldResponses;

		[Token(Token = "0x4000A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private EmTag m_emTagForInvalidResponses;

		[Token(Token = "0x4000A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool m_includeInvalidEntries;

		[Token(Token = "0x4000A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string pcPortraitName;

		[Token(Token = "0x4000A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Sprite pcPortraitSprite;

		[Token(Token = "0x4000A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private DialogueEntry forceLinkEntry;

		[Token(Token = "0x4000A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int m_currentDialogTableConversationID;

		[Token(Token = "0x170001B9")]
		public ConversationState firstState
		{
			[Token(Token = "0x60010B0")]
			[Address(RVA = "0x146D00C", Offset = "0x146D00C", VA = "0x146D00C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A094", Offset = "0xA2A094")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010B1")]
			[Address(RVA = "0x146D014", Offset = "0x146D014", VA = "0x146D014")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A0A4", Offset = "0xA2A0A4")]
			private set
			{
			}
		}

		[Token(Token = "0x170001BA")]
		public CharacterInfo actorInfo
		{
			[Token(Token = "0x60010B2")]
			[Address(RVA = "0x146D01C", Offset = "0x146D01C", VA = "0x146D01C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BB")]
		public CharacterInfo conversantInfo
		{
			[Token(Token = "0x60010B3")]
			[Address(RVA = "0x146D024", Offset = "0x146D024", VA = "0x146D024")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BC")]
		public bool hasValidEntry
		{
			[Token(Token = "0x60010B4")]
			[Address(RVA = "0x146D02C", Offset = "0x146D02C", VA = "0x146D02C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001BD")]
		public IsDialogueEntryValidDelegate isDialogueEntryValid
		{
			[Token(Token = "0x60010B5")]
			[Address(RVA = "0x146D0E8", Offset = "0x146D0E8", VA = "0x146D0E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A0B4", Offset = "0xA2A0B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010B6")]
			[Address(RVA = "0x146D0F0", Offset = "0x146D0F0", VA = "0x146D0F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A0C4", Offset = "0xA2A0C4")]
			set
			{
			}
		}

		[Token(Token = "0x170001BE")]
		public ConversationState FirstState
		{
			[Token(Token = "0x60010B7")]
			[Address(RVA = "0x146D0F8", Offset = "0x146D0F8", VA = "0x146D0F8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010B8")]
			[Address(RVA = "0x146D100", Offset = "0x146D100", VA = "0x146D100")]
			private set
			{
			}
		}

		[Token(Token = "0x170001BF")]
		public CharacterInfo ActorInfo
		{
			[Token(Token = "0x60010B9")]
			[Address(RVA = "0x146D108", Offset = "0x146D108", VA = "0x146D108")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C0")]
		public CharacterInfo ConversantInfo
		{
			[Token(Token = "0x60010BA")]
			[Address(RVA = "0x146D110", Offset = "0x146D110", VA = "0x146D110")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C1")]
		public bool HasValidEntry
		{
			[Token(Token = "0x60010BB")]
			[Address(RVA = "0x146D118", Offset = "0x146D118", VA = "0x146D118")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001C2")]
		public IsDialogueEntryValidDelegate IsDialogueEntryValid
		{
			[Token(Token = "0x60010BC")]
			[Address(RVA = "0x146D11C", Offset = "0x146D11C", VA = "0x146D11C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010BD")]
			[Address(RVA = "0x146D124", Offset = "0x146D124", VA = "0x146D124")]
			private set
			{
			}
		}

		[Token(Token = "0x170001C3")]
		public bool allowLuaExceptions
		{
			[Token(Token = "0x60010BE")]
			[Address(RVA = "0x146D12C", Offset = "0x146D12C", VA = "0x146D12C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010BF")]
			[Address(RVA = "0x146D134", Offset = "0x146D134", VA = "0x146D134")]
			set
			{
			}
		}

		[Token(Token = "0x170001C4")]
		public EntrytagFormat entrytagFormat
		{
			[Token(Token = "0x60010C0")]
			[Address(RVA = "0x146D140", Offset = "0x146D140", VA = "0x146D140")]
			get
			{
				return default(EntrytagFormat);
			}
			[Token(Token = "0x60010C1")]
			[Address(RVA = "0x146D148", Offset = "0x146D148", VA = "0x146D148")]
			set
			{
			}
		}

		[Token(Token = "0x170001C5")]
		public EmTag emTagForOldResponses
		{
			[Token(Token = "0x60010C2")]
			[Address(RVA = "0x146D150", Offset = "0x146D150", VA = "0x146D150")]
			get
			{
				return default(EmTag);
			}
			[Token(Token = "0x60010C3")]
			[Address(RVA = "0x146D158", Offset = "0x146D158", VA = "0x146D158")]
			set
			{
			}
		}

		[Token(Token = "0x170001C6")]
		public EmTag emTagForInvalidResponses
		{
			[Token(Token = "0x60010C4")]
			[Address(RVA = "0x146D160", Offset = "0x146D160", VA = "0x146D160")]
			get
			{
				return default(EmTag);
			}
			[Token(Token = "0x60010C5")]
			[Address(RVA = "0x146D168", Offset = "0x146D168", VA = "0x146D168")]
			set
			{
			}
		}

		[Token(Token = "0x170001C7")]
		public bool includeInvalidEntries
		{
			[Token(Token = "0x60010C6")]
			[Address(RVA = "0x146D170", Offset = "0x146D170", VA = "0x146D170")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010C7")]
			[Address(RVA = "0x146D178", Offset = "0x146D178", VA = "0x146D178")]
			set
			{
			}
		}

		[Token(Token = "0x60010C8")]
		[Address(RVA = "0x146D184", Offset = "0x146D184", VA = "0x146D184")]
		public ConversationModel(DialogueDatabase database, string title, Transform actor, Transform conversant, bool allowLuaExceptions, IsDialogueEntryValidDelegate isDialogueEntryValid, int initialDialogueEntryID = -1, bool stopAtFirstValid = false, bool skipExecution = false)
		{
		}

		[Token(Token = "0x60010C9")]
		[Address(RVA = "0x1469788", Offset = "0x1469788", VA = "0x1469788")]
		public int GetConversationID(ConversationState state)
		{
			return default(int);
		}

		[Token(Token = "0x60010CA")]
		[Address(RVA = "0x146AEE0", Offset = "0x146AEE0", VA = "0x146AEE0")]
		public ConversationOverrideDisplaySettings GetConversationOverrideSettings(ConversationState state)
		{
			return null;
		}

		[Token(Token = "0x60010CB")]
		[Address(RVA = "0x146DB88", Offset = "0x146DB88", VA = "0x146DB88")]
		private void FixFirstStateSequence()
		{
		}

		[Token(Token = "0x60010CC")]
		[Address(RVA = "0x146D0BC", Offset = "0x146D0BC", VA = "0x146D0BC")]
		private bool IsStartEntryState(ConversationState state)
		{
			return default(bool);
		}

		[Token(Token = "0x60010CD")]
		[Address(RVA = "0x14692C8", Offset = "0x14692C8", VA = "0x14692C8")]
		public void InformParticipants(string message, bool informDialogueManager = false)
		{
		}

		[Token(Token = "0x60010CE")]
		[Address(RVA = "0x146D6B0", Offset = "0x146D6B0", VA = "0x146D6B0")]
		public ConversationState GetState(DialogueEntry entry, bool includeLinks, bool stopAtFirstValid = false, bool skipExecution = false)
		{
			return null;
		}

		[Token(Token = "0x60010CF")]
		[Address(RVA = "0x146E6D8", Offset = "0x146E6D8", VA = "0x146E6D8")]
		public void ForceNextStateToLinkToEntry(DialogueEntry entry)
		{
		}

		[Token(Token = "0x60010D0")]
		[Address(RVA = "0x146E3F0", Offset = "0x146E3F0", VA = "0x146E3F0")]
		private void AddForcedLink(List<Response> npcResponses, List<Response> pcResponses)
		{
		}

		[Token(Token = "0x60010D1")]
		[Address(RVA = "0x146B0C4", Offset = "0x146B0C4", VA = "0x146B0C4")]
		public ConversationState GetState(DialogueEntry entry)
		{
			return null;
		}

		[Token(Token = "0x60010D2")]
		[Address(RVA = "0x146B7CC", Offset = "0x146B7CC", VA = "0x146B7CC")]
		public void UpdateResponses(ConversationState state)
		{
		}

		[Token(Token = "0x60010D3")]
		[Address(RVA = "0x146DDD8", Offset = "0x146DDD8", VA = "0x146DDD8")]
		private void SetDialogTable(int newConversationID)
		{
		}

		[Token(Token = "0x60010D4")]
		[Address(RVA = "0x146E110", Offset = "0x146E110", VA = "0x146E110")]
		private void CheckSequenceField(DialogueEntry entry)
		{
		}

		[Token(Token = "0x60010D5")]
		[Address(RVA = "0x146E584", Offset = "0x146E584", VA = "0x146E584")]
		private void EvaluateLinks(DialogueEntry entry, List<Response> npcResponses, List<Response> pcResponses, List<DialogueEntry> visited, bool stopAtFirstValid = false)
		{
		}

		[Token(Token = "0x60010D6")]
		[Address(RVA = "0x146E854", Offset = "0x146E854", VA = "0x146E854")]
		private void EvaluateLinksAtPriority(ConditionPriority priority, DialogueEntry entry, List<Response> npcResponses, List<Response> pcResponses, List<DialogueEntry> visited, bool stopAtFirstValid = false)
		{
		}

		[Token(Token = "0x60010D7")]
		[Address(RVA = "0x146F92C", Offset = "0x146F92C", VA = "0x146F92C")]
		private string GetActorName(Actor actor)
		{
			return null;
		}

		[Token(Token = "0x60010D8")]
		[Address(RVA = "0x146F990", Offset = "0x146F990", VA = "0x146F990")]
		private string GetLinkText(CharacterType characterType, DialogueEntry entry)
		{
			return null;
		}

		[Token(Token = "0x60010D9")]
		[Address(RVA = "0x146D5AC", Offset = "0x146D5AC", VA = "0x146D5AC")]
		private void SetParticipants(Conversation conversation, Transform actor, Transform conversant)
		{
		}

		[Token(Token = "0x60010DA")]
		[Address(RVA = "0x146A4B8", Offset = "0x146A4B8", VA = "0x146A4B8")]
		public void UpdateParticipantsOnLinkedConversation(int newConversationID)
		{
		}

		[Token(Token = "0x60010DB")]
		[Address(RVA = "0x146FC90", Offset = "0x146FC90", VA = "0x146FC90")]
		private void IdentifyPCPortrait(Conversation conversation)
		{
		}

		[Token(Token = "0x60010DC")]
		[Address(RVA = "0x146F9F4", Offset = "0x146F9F4", VA = "0x146F9F4")]
		public CharacterInfo GetCharacterInfo(int id, Transform character)
		{
			return null;
		}

		[Token(Token = "0x60010DD")]
		[Address(RVA = "0x146FFDC", Offset = "0x146FFDC", VA = "0x146FFDC")]
		public Dictionary<int, CharacterInfo> GetCharacterInfoCache()
		{
			return null;
		}

		[Token(Token = "0x60010DE")]
		[Address(RVA = "0x146DFB0", Offset = "0x146DFB0", VA = "0x146DFB0")]
		public CharacterInfo GetCharacterInfo(int id)
		{
			return null;
		}

		[Token(Token = "0x60010DF")]
		[Address(RVA = "0x146FFE4", Offset = "0x146FFE4", VA = "0x146FFE4")]
		private Transform GetCharacterTransform(int id)
		{
			return null;
		}

		[Token(Token = "0x60010E0")]
		[Address(RVA = "0x146B928", Offset = "0x146B928", VA = "0x146B928")]
		public void SetActorPortraitSprite(string actorName, Sprite sprite)
		{
		}

		[Token(Token = "0x60010E1")]
		[Address(RVA = "0x146A650", Offset = "0x146A650", VA = "0x146A650")]
		public string GetPCName()
		{
			return null;
		}

		[Token(Token = "0x60010E2")]
		[Address(RVA = "0x146A5D4", Offset = "0x146A5D4", VA = "0x146A5D4")]
		public Sprite GetPCSprite()
		{
			return null;
		}

		[Token(Token = "0x60010E4")]
		[Address(RVA = "0x1470160", Offset = "0x1470160", VA = "0x1470160")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A0D4", Offset = "0xA2A0D4")]
		private void <IdentifyPCPortrait>b__73_0(Sprite sprite)
		{
		}
	}
	[Token(Token = "0x20001DD")]
	public class CharacterInfo
	{
		[Token(Token = "0x4000AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x4000AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string nameInDatabase;

		[Token(Token = "0x4000AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CharacterType characterType;

		[Token(Token = "0x4000AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform transform;

		[Token(Token = "0x4000AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Sprite portrait;

		[Token(Token = "0x4000AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA17E58", Offset = "0xA17E58")]
		private string <Name>k__BackingField;

		[Token(Token = "0x4000AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<string, Transform> registeredActorTransforms;

		[Token(Token = "0x170001C8")]
		public bool isPlayer
		{
			[Token(Token = "0x60010E5")]
			[Address(RVA = "0x14335A0", Offset = "0x14335A0", VA = "0x14335A0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001C9")]
		public bool isNPC
		{
			[Token(Token = "0x60010E6")]
			[Address(RVA = "0x14335B0", Offset = "0x14335B0", VA = "0x14335B0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001CA")]
		public string Name
		{
			[Token(Token = "0x60010E7")]
			[Address(RVA = "0x14335C0", Offset = "0x14335C0", VA = "0x14335C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A0E4", Offset = "0xA2A0E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010E8")]
			[Address(RVA = "0x14335C8", Offset = "0x14335C8", VA = "0x14335C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A0F4", Offset = "0xA2A0F4")]
			set
			{
			}
		}

		[Token(Token = "0x170001CB")]
		public bool IsPlayer
		{
			[Token(Token = "0x60010E9")]
			[Address(RVA = "0x14335D0", Offset = "0x14335D0", VA = "0x14335D0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001CC")]
		public bool IsNPC
		{
			[Token(Token = "0x60010EA")]
			[Address(RVA = "0x14335E0", Offset = "0x14335E0", VA = "0x14335E0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60010EB")]
		[Address(RVA = "0x14335F0", Offset = "0x14335F0", VA = "0x14335F0")]
		public CharacterInfo(int id, string nameInDatabase, Transform transform, CharacterType characterType, Sprite portrait)
		{
		}

		[Token(Token = "0x60010EC")]
		[Address(RVA = "0x1433864", Offset = "0x1433864", VA = "0x1433864")]
		public static string GetLocalizedDisplayNameInDatabase(string nameInDatabase)
		{
			return null;
		}

		[Token(Token = "0x60010ED")]
		[Address(RVA = "0x14339CC", Offset = "0x14339CC", VA = "0x14339CC")]
		public Sprite GetPicOverride(int picNum)
		{
			return null;
		}

		[Token(Token = "0x60010EE")]
		[Address(RVA = "0x1433B04", Offset = "0x1433B04", VA = "0x1433B04")]
		public static void RegisterActorTransform(string actorName, Transform actorTransform)
		{
		}

		[Token(Token = "0x60010EF")]
		[Address(RVA = "0x1433FA8", Offset = "0x1433FA8", VA = "0x1433FA8")]
		public static void UnregisterActorTransform(string actorName, Transform actorTransform)
		{
		}

		[Token(Token = "0x60010F0")]
		[Address(RVA = "0x1434278", Offset = "0x1434278", VA = "0x1434278")]
		public static Transform GetRegisteredActorTransform(string actorName)
		{
			return null;
		}
	}
	[Token(Token = "0x20001DE")]
	public class ConversationState
	{
		[Token(Token = "0x4000AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Subtitle subtitle;

		[Token(Token = "0x4000AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Response[] npcResponses;

		[Token(Token = "0x4000AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Response[] pcResponses;

		[Token(Token = "0x4000AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA17E68", Offset = "0xA17E68")]
		private bool <isGroup>k__BackingField;

		[Token(Token = "0x170001CD")]
		public bool hasNPCResponse
		{
			[Token(Token = "0x60010F2")]
			[Address(RVA = "0x146AEC0", Offset = "0x146AEC0", VA = "0x146AEC0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001CE")]
		public Response firstNPCResponse
		{
			[Token(Token = "0x60010F3")]
			[Address(RVA = "0x146B03C", Offset = "0x146B03C", VA = "0x146B03C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CF")]
		public bool hasPCResponses
		{
			[Token(Token = "0x60010F4")]
			[Address(RVA = "0x146B0D4", Offset = "0x146B0D4", VA = "0x146B0D4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001D0")]
		public bool hasPCAutoResponse
		{
			[Token(Token = "0x60010F5")]
			[Address(RVA = "0x1471CF0", Offset = "0x1471CF0", VA = "0x1471CF0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001D1")]
		public bool hasForceAutoResponse
		{
			[Token(Token = "0x60010F6")]
			[Address(RVA = "0x1471D80", Offset = "0x1471D80", VA = "0x1471D80")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001D2")]
		public Response pcAutoResponse
		{
			[Token(Token = "0x60010F7")]
			[Address(RVA = "0x146B0F4", Offset = "0x146B0F4", VA = "0x146B0F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D3")]
		public bool hasAnyResponses
		{
			[Token(Token = "0x60010F8")]
			[Address(RVA = "0x146D084", Offset = "0x146D084", VA = "0x146D084")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001D4")]
		public bool isGroup
		{
			[Token(Token = "0x60010F9")]
			[Address(RVA = "0x1471DE4", Offset = "0x1471DE4", VA = "0x1471DE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A104", Offset = "0xA2A104")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010FA")]
			[Address(RVA = "0x1471DEC", Offset = "0x1471DEC", VA = "0x1471DEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A114", Offset = "0xA2A114")]
			set
			{
			}
		}

		[Token(Token = "0x170001D5")]
		public bool HasNPCResponse
		{
			[Token(Token = "0x60010FB")]
			[Address(RVA = "0x1471DF8", Offset = "0x1471DF8", VA = "0x1471DF8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001D6")]
		public Response FirstNPCResponse
		{
			[Token(Token = "0x60010FC")]
			[Address(RVA = "0x1471E18", Offset = "0x1471E18", VA = "0x1471E18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D7")]
		public bool HasPCResponses
		{
			[Token(Token = "0x60010FD")]
			[Address(RVA = "0x1471E38", Offset = "0x1471E38", VA = "0x1471E38")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001D8")]
		public bool HasPCAutoResponse
		{
			[Token(Token = "0x60010FE")]
			[Address(RVA = "0x1471E58", Offset = "0x1471E58", VA = "0x1471E58")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001D9")]
		public Response PCAutoResponse
		{
			[Token(Token = "0x60010FF")]
			[Address(RVA = "0x1471E5C", Offset = "0x1471E5C", VA = "0x1471E5C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DA")]
		public bool HasAnyResponses
		{
			[Token(Token = "0x6001100")]
			[Address(RVA = "0x1471E60", Offset = "0x1471E60", VA = "0x1471E60")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001DB")]
		public bool IsGroup
		{
			[Token(Token = "0x6001101")]
			[Address(RVA = "0x1471E98", Offset = "0x1471E98", VA = "0x1471E98")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001102")]
			[Address(RVA = "0x1471EA0", Offset = "0x1471EA0", VA = "0x1471EA0")]
			set
			{
			}
		}

		[Token(Token = "0x6001103")]
		[Address(RVA = "0x146E684", Offset = "0x146E684", VA = "0x146E684")]
		public ConversationState(Subtitle subtitle, Response[] npcResponses, Response[] pcResponses, bool isGroup = false)
		{
		}

		[Token(Token = "0x6001104")]
		[Address(RVA = "0x146B05C", Offset = "0x146B05C", VA = "0x146B05C")]
		public DialogueEntry GetRandomNPCEntry()
		{
			return null;
		}
	}
	[Token(Token = "0x20001DF")]
	public class Response
	{
		[Token(Token = "0x4000AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FormattedText formattedText;

		[Token(Token = "0x4000AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DialogueEntry destinationEntry;

		[Token(Token = "0x4000AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool enabled;

		[Token(Token = "0x6001105")]
		[Address(RVA = "0x11D38E4", Offset = "0x11D38E4", VA = "0x11D38E4")]
		public Response(FormattedText formattedText, DialogueEntry destinationEntry, bool enabled = true)
		{
		}
	}
	[Token(Token = "0x20001E0")]
	public class Subtitle
	{
		[Token(Token = "0x4000AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CharacterInfo speakerInfo;

		[Token(Token = "0x4000AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CharacterInfo listenerInfo;

		[Token(Token = "0x4000AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FormattedText formattedText;

		[Token(Token = "0x4000AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string sequence;

		[Token(Token = "0x4000AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string responseMenuSequence;

		[Token(Token = "0x4000AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public DialogueEntry dialogueEntry;

		[Token(Token = "0x4000AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string entrytag;

		[Token(Token = "0x6001106")]
		[Address(RVA = "0x12EFBB4", Offset = "0x12EFBB4", VA = "0x12EFBB4")]
		public Subtitle(CharacterInfo speakerInfo, CharacterInfo listenerInfo, FormattedText formattedText, string sequence, string responseMenuSequence, DialogueEntry dialogueEntry)
		{
		}

		[Token(Token = "0x6001107")]
		[Address(RVA = "0x12EFD14", Offset = "0x12EFD14", VA = "0x12EFD14")]
		public Subtitle(CharacterInfo speakerInfo, CharacterInfo listenerInfo, FormattedText formattedText, string sequence, string responseMenuSequence, DialogueEntry dialogueEntry, string entrytag)
		{
		}

		[Token(Token = "0x6001108")]
		[Address(RVA = "0x12EFC5C", Offset = "0x12EFC5C", VA = "0x12EFC5C")]
		private void CheckVariableInputPrompt()
		{
		}

		[Token(Token = "0x6001109")]
		[Address(RVA = "0x12EC664", Offset = "0x12EC664", VA = "0x12EC664")]
		public Sprite GetSpeakerPortrait()
		{
			return null;
		}
	}
	[Token(Token = "0x20001E1")]
	public struct Emphasis
	{
		[Token(Token = "0x4000AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA17E78", Offset = "0xA17E78")]
		private int <startIndex>k__BackingField;

		[Token(Token = "0x4000AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA17E88", Offset = "0xA17E88")]
		private int <length>k__BackingField;

		[Token(Token = "0x4000AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA17E98", Offset = "0xA17E98")]
		private Color <color>k__BackingField;

		[Token(Token = "0x4000AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA17EA8", Offset = "0xA17EA8")]
		private bool <bold>k__BackingField;

		[Token(Token = "0x4000AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA17EB8", Offset = "0xA17EB8")]
		private bool <italic>k__BackingField;

		[Token(Token = "0x4000ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA17EC8", Offset = "0xA17EC8")]
		private bool <underline>k__BackingField;

		[Token(Token = "0x170001DC")]
		public int startIndex
		{
			[Token(Token = "0x600110A")]
			[Address(RVA = "0xB95A68", Offset = "0xB95A68", VA = "0xB95A68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A124", Offset = "0xA2A124")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600110B")]
			[Address(RVA = "0xB95A70", Offset = "0xB95A70", VA = "0xB95A70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A134", Offset = "0xA2A134")]
			set
			{
			}
		}

		[Token(Token = "0x170001DD")]
		public int length
		{
			[Token(Token = "0x600110C")]
			[Address(RVA = "0xB95A78", Offset = "0xB95A78", VA = "0xB95A78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A144", Offset = "0xA2A144")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600110D")]
			[Address(RVA = "0xB95A80", Offset = "0xB95A80", VA = "0xB95A80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A154", Offset = "0xA2A154")]
			set
			{
			}
		}

		[Token(Token = "0x170001DE")]
		public Color color
		{
			[Token(Token = "0x600110E")]
			[Address(RVA = "0xB95A88", Offset = "0xB95A88", VA = "0xB95A88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A164", Offset = "0xA2A164")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x600110F")]
			[Address(RVA = "0xB95A94", Offset = "0xB95A94", VA = "0xB95A94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A174", Offset = "0xA2A174")]
			set
			{
			}
		}

		[Token(Token = "0x170001DF")]
		public bool bold
		{
			[Token(Token = "0x6001110")]
			[Address(RVA = "0xB95AA0", Offset = "0xB95AA0", VA = "0xB95AA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A184", Offset = "0xA2A184")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001111")]
			[Address(RVA = "0xB95AA8", Offset = "0xB95AA8", VA = "0xB95AA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A194", Offset = "0xA2A194")]
			set
			{
			}
		}

		[Token(Token = "0x170001E0")]
		public bool italic
		{
			[Token(Token = "0x6001112")]
			[Address(RVA = "0xB95AB4", Offset = "0xB95AB4", VA = "0xB95AB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A1A4", Offset = "0xA2A1A4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001113")]
			[Address(RVA = "0xB95ABC", Offset = "0xB95ABC", VA = "0xB95ABC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A1B4", Offset = "0xA2A1B4")]
			set
			{
			}
		}

		[Token(Token = "0x170001E1")]
		public bool underline
		{
			[Token(Token = "0x6001114")]
			[Address(RVA = "0xB95AC8", Offset = "0xB95AC8", VA = "0xB95AC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A1C4", Offset = "0xA2A1C4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001115")]
			[Address(RVA = "0xB95AD0", Offset = "0xB95AD0", VA = "0xB95AD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A1D4", Offset = "0xA2A1D4")]
			set
			{
			}
		}

		[Token(Token = "0x6001116")]
		[Address(RVA = "0xB95ADC", Offset = "0xB95ADC", VA = "0xB95ADC")]
		public Emphasis(int startIndex, int length, Color color, bool bold, bool italic, bool underline)
		{
		}
	}
	[Token(Token = "0x20001E2")]
	public class FormattedText
	{
		[Serializable]
		[Token(Token = "0x20005BE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DA18", Offset = "0xA0DA18")]
		private sealed class <>c
		{
			[Token(Token = "0x4001D3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001D3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static MatchEvaluator <>9__58_0;

			[Token(Token = "0x4001D3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static MatchEvaluator <>9__59_0;

			[Token(Token = "0x60029AC")]
			[Address(RVA = "0x1716100", Offset = "0x1716100", VA = "0x1716100")]
			public <>c()
			{
			}

			[Token(Token = "0x60029AD")]
			[Address(RVA = "0x1716108", Offset = "0x1716108", VA = "0x1716108")]
			internal string <ReplaceLuaTags>b__58_0(Match match)
			{
				return null;
			}

			[Token(Token = "0x60029AE")]
			[Address(RVA = "0x17164B8", Offset = "0x17164B8", VA = "0x17164B8")]
			internal string <ReplaceVarTags>b__59_0(Match match)
			{
				return null;
			}
		}

		[Token(Token = "0x20005BF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DA28", Offset = "0xA0DA28")]
		private sealed class <>c__DisplayClass60_0
		{
			[Token(Token = "0x4001D3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string varName;

			[Token(Token = "0x4001D3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MatchEvaluator <>9__0;

			[Token(Token = "0x60029AF")]
			[Address(RVA = "0x1715F90", Offset = "0x1715F90", VA = "0x1715F90")]
			public <>c__DisplayClass60_0()
			{
			}

			[Token(Token = "0x60029B0")]
			[Address(RVA = "0x171672C", Offset = "0x171672C", VA = "0x171672C")]
			internal string <ExtractVariableInputPrompt>b__0(Match match)
			{
				return null;
			}
		}

		[Token(Token = "0x20005C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DA38", Offset = "0xA0DA38")]
		private sealed class <>c__DisplayClass62_0
		{
			[Token(Token = "0x4001D40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int position;

			[Token(Token = "0x60029B1")]
			[Address(RVA = "0x1715F98", Offset = "0x1715F98", VA = "0x1715F98")]
			public <>c__DisplayClass62_0()
			{
			}

			[Token(Token = "0x60029B2")]
			[Address(RVA = "0x17167E0", Offset = "0x17167E0", VA = "0x17167E0")]
			internal string <ExtractPositionTag>b__0(Match match)
			{
				return null;
			}

			[Token(Token = "0x60029B3")]
			[Address(RVA = "0x1716890", Offset = "0x1716890", VA = "0x1716890")]
			internal string <ExtractPositionTag>b__1(Match match)
			{
				return null;
			}
		}

		[Token(Token = "0x20005C1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DA48", Offset = "0xA0DA48")]
		private sealed class <>c__DisplayClass63_0
		{
			[Token(Token = "0x4001D41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int panelNumber;

			[Token(Token = "0x60029B4")]
			[Address(RVA = "0x1715FA0", Offset = "0x1715FA0", VA = "0x1715FA0")]
			public <>c__DisplayClass63_0()
			{
			}

			[Token(Token = "0x60029B5")]
			[Address(RVA = "0x1716940", Offset = "0x1716940", VA = "0x1716940")]
			internal string <ExtractPanelNumberTag>b__0(Match match)
			{
				return null;
			}
		}

		[Token(Token = "0x20005C2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DA58", Offset = "0xA0DA58")]
		private sealed class <>c__DisplayClass64_0
		{
			[Token(Token = "0x4001D42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int index;

			[Token(Token = "0x60029B6")]
			[Address(RVA = "0x1715FA8", Offset = "0x1715FA8", VA = "0x1715FA8")]
			public <>c__DisplayClass64_0()
			{
			}

			[Token(Token = "0x60029B7")]
			[Address(RVA = "0x17169F0", Offset = "0x17169F0", VA = "0x17169F0")]
			internal string <ExtractPicTag>b__0(Match match)
			{
				return null;
			}
		}

		[Token(Token = "0x20005C3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DA68", Offset = "0xA0DA68")]
		private sealed class <>c__DisplayClass65_0
		{
			[Token(Token = "0x4001D43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public EmphasisSetting[] emphasisSettings;

			[Token(Token = "0x4001D44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<Emphasis> emphases;

			[Token(Token = "0x60029B8")]
			[Address(RVA = "0x1715FB0", Offset = "0x1715FB0", VA = "0x1715FB0")]
			public <>c__DisplayClass65_0()
			{
			}

			[Token(Token = "0x60029B9")]
			[Address(RVA = "0x1716BAC", Offset = "0x1716BAC", VA = "0x1716BAC")]
			internal string <ExtractEmphasisTags>b__0(Match match)
			{
				return null;
			}
		}

		[Token(Token = "0x4000ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly FormattedText empty;

		[Token(Token = "0x4000ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly Emphasis[] noEmphases;

		[Token(Token = "0x4000ABD")]
		public const int NoAssignedPosition = -1;

		[Token(Token = "0x4000ABE")]
		public const int NoPicOverride = 0;

		[Token(Token = "0x4000ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA17ED8", Offset = "0xA17ED8")]
		private string <text>k__BackingField;

		[Token(Token = "0x4000AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA17EE8", Offset = "0xA17EE8")]
		private Emphasis[] <emphases>k__BackingField;

		[Token(Token = "0x4000AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA17EF8", Offset = "0xA17EF8")]
		private bool <italic>k__BackingField;

		[Token(Token = "0x4000AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA17F08", Offset = "0xA17F08")]
		private int <position>k__BackingField;

		[Token(Token = "0x4000AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA17F18", Offset = "0xA17F18")]
		private bool <forceMenu>k__BackingField;

		[Token(Token = "0x4000AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA17F28", Offset = "0xA17F28")]
		private bool <forceAuto>k__BackingField;

		[Token(Token = "0x4000AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA17F38", Offset = "0xA17F38")]
		private bool <noSubtitle>k__BackingField;

		[Token(Token = "0x4000AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA17F48", Offset = "0xA17F48")]
		private int <pic>k__BackingField;

		[Token(Token = "0x4000AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA17F58", Offset = "0xA17F58")]
		private int <picActor>k__BackingField;

		[Token(Token = "0x4000AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA17F68", Offset = "0xA17F68")]
		private int <picConversant>k__BackingField;

		[Token(Token = "0x4000AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA17F78", Offset = "0xA17F78")]
		private string <variableInputPrompt>k__BackingField;

		[Token(Token = "0x4000ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA17F88", Offset = "0xA17F88")]
		private int <subtitlePanelNumber>k__BackingField;

		[Token(Token = "0x170001E2")]
		public string text
		{
			[Token(Token = "0x6001117")]
			[Address(RVA = "0x171483C", Offset = "0x171483C", VA = "0x171483C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A1E4", Offset = "0xA2A1E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001118")]
			[Address(RVA = "0x1714844", Offset = "0x1714844", VA = "0x1714844")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A1F4", Offset = "0xA2A1F4")]
			set
			{
			}
		}

		[Token(Token = "0x170001E3")]
		public Emphasis[] emphases
		{
			[Token(Token = "0x6001119")]
			[Address(RVA = "0x171484C", Offset = "0x171484C", VA = "0x171484C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A204", Offset = "0xA2A204")]
			get
			{
				return null;
			}
			[Token(Token = "0x600111A")]
			[Address(RVA = "0x1714854", Offset = "0x1714854", VA = "0x1714854")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A214", Offset = "0xA2A214")]
			set
			{
			}
		}

		[Token(Token = "0x170001E4")]
		public bool italic
		{
			[Token(Token = "0x600111B")]
			[Address(RVA = "0x171485C", Offset = "0x171485C", VA = "0x171485C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A224", Offset = "0xA2A224")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600111C")]
			[Address(RVA = "0x1714864", Offset = "0x1714864", VA = "0x1714864")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A234", Offset = "0xA2A234")]
			set
			{
			}
		}

		[Token(Token = "0x170001E5")]
		public int position
		{
			[Token(Token = "0x600111D")]
			[Address(RVA = "0x1714870", Offset = "0x1714870", VA = "0x1714870")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A244", Offset = "0xA2A244")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600111E")]
			[Address(RVA = "0x1714878", Offset = "0x1714878", VA = "0x1714878")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A254", Offset = "0xA2A254")]
			set
			{
			}
		}

		[Token(Token = "0x170001E6")]
		public bool forceMenu
		{
			[Token(Token = "0x600111F")]
			[Address(RVA = "0x1714880", Offset = "0x1714880", VA = "0x1714880")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A264", Offset = "0xA2A264")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001120")]
			[Address(RVA = "0x1714888", Offset = "0x1714888", VA = "0x1714888")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A274", Offset = "0xA2A274")]
			set
			{
			}
		}

		[Token(Token = "0x170001E7")]
		public bool forceAuto
		{
			[Token(Token = "0x6001121")]
			[Address(RVA = "0x1714894", Offset = "0x1714894", VA = "0x1714894")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A284", Offset = "0xA2A284")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001122")]
			[Address(RVA = "0x171489C", Offset = "0x171489C", VA = "0x171489C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A294", Offset = "0xA2A294")]
			set
			{
			}
		}

		[Token(Token = "0x170001E8")]
		public bool noSubtitle
		{
			[Token(Token = "0x6001123")]
			[Address(RVA = "0x17148A8", Offset = "0x17148A8", VA = "0x17148A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A2A4", Offset = "0xA2A2A4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001124")]
			[Address(RVA = "0x17148B0", Offset = "0x17148B0", VA = "0x17148B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A2B4", Offset = "0xA2A2B4")]
			set
			{
			}
		}

		[Token(Token = "0x170001E9")]
		public int pic
		{
			[Token(Token = "0x6001125")]
			[Address(RVA = "0x17148BC", Offset = "0x17148BC", VA = "0x17148BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A2C4", Offset = "0xA2A2C4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001126")]
			[Address(RVA = "0x17148C4", Offset = "0x17148C4", VA = "0x17148C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A2D4", Offset = "0xA2A2D4")]
			set
			{
			}
		}

		[Token(Token = "0x170001EA")]
		public int picActor
		{
			[Token(Token = "0x6001127")]
			[Address(RVA = "0x17148CC", Offset = "0x17148CC", VA = "0x17148CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A2E4", Offset = "0xA2A2E4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001128")]
			[Address(RVA = "0x17148D4", Offset = "0x17148D4", VA = "0x17148D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A2F4", Offset = "0xA2A2F4")]
			set
			{
			}
		}

		[Token(Token = "0x170001EB")]
		public int picConversant
		{
			[Token(Token = "0x6001129")]
			[Address(RVA = "0x17148DC", Offset = "0x17148DC", VA = "0x17148DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A304", Offset = "0xA2A304")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600112A")]
			[Address(RVA = "0x17148E4", Offset = "0x17148E4", VA = "0x17148E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A314", Offset = "0xA2A314")]
			set
			{
			}
		}

		[Token(Token = "0x170001EC")]
		public string variableInputPrompt
		{
			[Token(Token = "0x600112B")]
			[Address(RVA = "0x17148EC", Offset = "0x17148EC", VA = "0x17148EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A324", Offset = "0xA2A324")]
			get
			{
				return null;
			}
			[Token(Token = "0x600112C")]
			[Address(RVA = "0x17148F4", Offset = "0x17148F4", VA = "0x17148F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A334", Offset = "0xA2A334")]
			set
			{
			}
		}

		[Token(Token = "0x170001ED")]
		public bool hasVariableInputPrompt
		{
			[Token(Token = "0x600112D")]
			[Address(RVA = "0x17148FC", Offset = "0x17148FC", VA = "0x17148FC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001EE")]
		public int subtitlePanelNumber
		{
			[Token(Token = "0x600112E")]
			[Address(RVA = "0x1714920", Offset = "0x1714920", VA = "0x1714920")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A344", Offset = "0xA2A344")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600112F")]
			[Address(RVA = "0x1714928", Offset = "0x1714928", VA = "0x1714928")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A354", Offset = "0xA2A354")]
			set
			{
			}
		}

		[Token(Token = "0x6001130")]
		[Address(RVA = "0x1714930", Offset = "0x1714930", VA = "0x1714930")]
		public FormattedText([Optional] string text, [Optional] Emphasis[] emphases, bool italic = false, int position = -1, bool forceMenu = true, bool forceAuto = false, int pic = 0, int picActor = 0, int picConversant = 0, [Optional] string variableInputPrompt, int subtitlePanelNumber = -1, bool noSubtitle = false)
		{
		}

		[Token(Token = "0x6001131")]
		[Address(RVA = "0x1714A64", Offset = "0x1714A64", VA = "0x1714A64")]
		public static FormattedText Parse(string rawText, [Optional] EmphasisSetting[] emphasisSettings)
		{
			return null;
		}

		[Token(Token = "0x6001132")]
		[Address(RVA = "0x1715EC4", Offset = "0x1715EC4", VA = "0x1715EC4")]
		public static string ParseCode(string rawText)
		{
			return null;
		}

		[Token(Token = "0x6001133")]
		[Address(RVA = "0x1715394", Offset = "0x1715394", VA = "0x1715394")]
		private static void ReplacePipes(ref string text)
		{
		}

		[Token(Token = "0x6001134")]
		[Address(RVA = "0x1714DEC", Offset = "0x1714DEC", VA = "0x1714DEC")]
		private static void ReplaceLuaTags(ref string text)
		{
		}

		[Token(Token = "0x6001135")]
		[Address(RVA = "0x17151A8", Offset = "0x17151A8", VA = "0x17151A8")]
		private static void ReplaceVarTags(ref string text)
		{
		}

		[Token(Token = "0x6001136")]
		[Address(RVA = "0x1714FD8", Offset = "0x1714FD8", VA = "0x1714FD8")]
		private static string ExtractVariableInputPrompt(ref string text)
		{
			return null;
		}

		[Token(Token = "0x6001137")]
		[Address(RVA = "0x1715508", Offset = "0x1715508", VA = "0x1715508")]
		private static bool ExtractTag(string tag, ref string text)
		{
			return default(bool);
		}

		[Token(Token = "0x6001138")]
		[Address(RVA = "0x17155A8", Offset = "0x17155A8", VA = "0x17155A8")]
		private static int ExtractPositionTag(ref string text)
		{
			return default(int);
		}

		[Token(Token = "0x6001139")]
		[Address(RVA = "0x1715758", Offset = "0x1715758", VA = "0x1715758")]
		private static int ExtractPanelNumberTag(ref string text)
		{
			return default(int);
		}

		[Token(Token = "0x600113A")]
		[Address(RVA = "0x171541C", Offset = "0x171541C", VA = "0x171541C")]
		private static int ExtractPicTag(string tagRegex, ref string text)
		{
			return default(int);
		}

		[Token(Token = "0x600113B")]
		[Address(RVA = "0x171586C", Offset = "0x171586C", VA = "0x171586C")]
		private static Emphasis[] ExtractEmphasisTags(ref string text, EmphasisSetting[] emphasisSettings)
		{
			return null;
		}

		[Token(Token = "0x600113C")]
		[Address(RVA = "0x1715A08", Offset = "0x1715A08", VA = "0x1715A08")]
		private static Emphasis[] ReplaceEmphasisTagsWithRichText(ref string text, EmphasisSetting[] emphasisSettings)
		{
			return null;
		}

		[Token(Token = "0x600113D")]
		[Address(RVA = "0x1715FB8", Offset = "0x1715FB8", VA = "0x1715FB8")]
		public static FontStyle GetFontStyle(Emphasis emphasis)
		{
			return default(FontStyle);
		}
	}
	[Token(Token = "0x20001E3")]
	public class ParserException : Exception
	{
		[Token(Token = "0x600113F")]
		[Address(RVA = "0x1722F28", Offset = "0x1722F28", VA = "0x1722F28")]
		public ParserException(string message)
		{
		}
	}
	[Token(Token = "0x20001E4")]
	public class SequenceParser
	{
		[Token(Token = "0x4000ACB")]
		private const int MaxSafeguard = 9999;

		[Token(Token = "0x4000ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int column;

		[Token(Token = "0x4000ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private int row;

		[Token(Token = "0x6001140")]
		[Address(RVA = "0x11D83EC", Offset = "0x11D83EC", VA = "0x11D83EC")]
		public List<QueuedSequencerCommand> Parse(string sequence)
		{
			return null;
		}

		[Token(Token = "0x6001141")]
		[Address(RVA = "0x11D87F8", Offset = "0x11D87F8", VA = "0x11D87F8")]
		private QueuedSequencerCommand ParseCommand(StringReader reader)
		{
			return null;
		}

		[Token(Token = "0x6001142")]
		[Address(RVA = "0x11D8AAC", Offset = "0x11D8AAC", VA = "0x11D8AAC")]
		private string ParseWord(StringReader reader, bool allowWhiteSpace = false)
		{
			return null;
		}

		[Token(Token = "0x6001143")]
		[Address(RVA = "0x11D89F8", Offset = "0x11D89F8", VA = "0x11D89F8")]
		private void ParseOptionalWhitespace(StringReader reader, bool includingSemicolons = false)
		{
		}

		[Token(Token = "0x6001144")]
		[Address(RVA = "0x11D9060", Offset = "0x11D9060", VA = "0x11D9060")]
		private bool IsNextCharWhiteSpace(StringReader reader)
		{
			return default(bool);
		}

		[Token(Token = "0x6001145")]
		[Address(RVA = "0x11D910C", Offset = "0x11D910C", VA = "0x11D910C")]
		private bool IsNextChar(StringReader reader, char requiredChar)
		{
			return default(bool);
		}

		[Token(Token = "0x6001146")]
		[Address(RVA = "0x11D916C", Offset = "0x11D916C", VA = "0x11D916C")]
		private bool IsNextCharNot(StringReader reader, char requiredChar)
		{
			return default(bool);
		}

		[Token(Token = "0x6001147")]
		[Address(RVA = "0x11D9028", Offset = "0x11D9028", VA = "0x11D9028")]
		private bool HasNextChar(StringReader reader)
		{
			return default(bool);
		}

		[Token(Token = "0x6001148")]
		[Address(RVA = "0x11D8FC4", Offset = "0x11D8FC4", VA = "0x11D8FC4")]
		private char ReadNextChar(StringReader reader)
		{
			return default(char);
		}

		[Token(Token = "0x6001149")]
		[Address(RVA = "0x11D91CC", Offset = "0x11D91CC", VA = "0x11D91CC")]
		private void ParseChar(StringReader reader, char requiredChar)
		{
		}

		[Token(Token = "0x600114A")]
		[Address(RVA = "0x11D8C24", Offset = "0x11D8C24", VA = "0x11D8C24")]
		private void ParseOpenParen(StringReader reader)
		{
		}

		[Token(Token = "0x600114B")]
		[Address(RVA = "0x11D8D98", Offset = "0x11D8D98", VA = "0x11D8D98")]
		private void ParseCloseParen(StringReader reader)
		{
		}

		[Token(Token = "0x600114C")]
		[Address(RVA = "0x11D8C2C", Offset = "0x11D8C2C", VA = "0x11D8C2C")]
		private string[] ParseParameters(StringReader reader)
		{
			return null;
		}

		[Token(Token = "0x600114D")]
		[Address(RVA = "0x11D92D8", Offset = "0x11D92D8", VA = "0x11D92D8")]
		private string ParseParameter(StringReader reader)
		{
			return null;
		}

		[Token(Token = "0x600114E")]
		[Address(RVA = "0x11D8DA0", Offset = "0x11D8DA0", VA = "0x11D8DA0")]
		private void ParsePostParameters(StringReader reader, out float atTime, out string atMessage, out string sendMessage)
		{
		}

		[Token(Token = "0x600114F")]
		[Address(RVA = "0x11D9424", Offset = "0x11D9424", VA = "0x11D9424")]
		private void ParseAtSignModifier(StringReader reader, out float atTime, out string atMessage)
		{
		}

		[Token(Token = "0x6001150")]
		[Address(RVA = "0x11D9650", Offset = "0x11D9650", VA = "0x11D9650")]
		private void ParseArrowModifier(StringReader reader, out string sendMessage)
		{
		}

		[Token(Token = "0x6001151")]
		[Address(RVA = "0x11D8EFC", Offset = "0x11D8EFC", VA = "0x11D8EFC")]
		private void ParseSemicolonOrEnd(StringReader reader)
		{
		}

		[Token(Token = "0x6001152")]
		[Address(RVA = "0x11D9824", Offset = "0x11D9824", VA = "0x11D9824")]
		public SequenceParser()
		{
		}
	}
	[Token(Token = "0x20001E5")]
	public class Sequencer : MonoBehaviour
	{
		[Token(Token = "0x20005C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DA78", Offset = "0xA0DA78")]
		private sealed class <RestoreCamera>d__89 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Sequencer <>4__this;

			[Token(Token = "0x17000528")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60029BD")]
				[Address(RVA = "0x1389B3C", Offset = "0x1389B3C", VA = "0x1389B3C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000529")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60029BF")]
				[Address(RVA = "0x1389BA4", Offset = "0x1389BA4", VA = "0x1389BA4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60029BA")]
			[Address(RVA = "0x1389A98", Offset = "0x1389A98", VA = "0x1389A98")]
			[DebuggerHidden]
			public <RestoreCamera>d__89(int <>1__state)
			{
			}

			[Token(Token = "0x60029BB")]
			[Address(RVA = "0x1389AC4", Offset = "0x1389AC4", VA = "0x1389AC4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60029BC")]
			[Address(RVA = "0x1389AC8", Offset = "0x1389AC8", VA = "0x1389AC8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60029BE")]
			[Address(RVA = "0x1389B44", Offset = "0x1389B44", VA = "0x1389B44", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005C5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DA88", Offset = "0xA0DA88")]
		private sealed class <PlaySequenceAfterOneFrame>d__104 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Sequencer <>4__this;

			[Token(Token = "0x4001D4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string sequence;

			[Token(Token = "0x4001D4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Transform speaker;

			[Token(Token = "0x4001D4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Transform listener;

			[Token(Token = "0x4001D4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public bool informParticipants;

			[Token(Token = "0x4001D4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
			public bool destroyWhenDone;

			[Token(Token = "0x1700052A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60029C3")]
				[Address(RVA = "0x1389A28", Offset = "0x1389A28", VA = "0x1389A28", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700052B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60029C5")]
				[Address(RVA = "0x1389A90", Offset = "0x1389A90", VA = "0x1389A90", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60029C0")]
			[Address(RVA = "0x1389990", Offset = "0x1389990", VA = "0x1389990")]
			[DebuggerHidden]
			public <PlaySequenceAfterOneFrame>d__104(int <>1__state)
			{
			}

			[Token(Token = "0x60029C1")]
			[Address(RVA = "0x13899BC", Offset = "0x13899BC", VA = "0x13899BC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60029C2")]
			[Address(RVA = "0x13899C0", Offset = "0x13899C0", VA = "0x13899C0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60029C4")]
			[Address(RVA = "0x1389A30", Offset = "0x1389A30", VA = "0x1389A30", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005C6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DA98", Offset = "0xA0DA98")]
		private sealed class <SendTimedSequencerMessage>d__118 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Sequencer <>4__this;

			[Token(Token = "0x4001D53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float delay;

			[Token(Token = "0x4001D54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string endMessage;

			[Token(Token = "0x1700052C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60029C9")]
				[Address(RVA = "0x1389CD4", Offset = "0x1389CD4", VA = "0x1389CD4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700052D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60029CB")]
				[Address(RVA = "0x1389D3C", Offset = "0x1389D3C", VA = "0x1389D3C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60029C6")]
			[Address(RVA = "0x1389BAC", Offset = "0x1389BAC", VA = "0x1389BAC")]
			[DebuggerHidden]
			public <SendTimedSequencerMessage>d__118(int <>1__state)
			{
			}

			[Token(Token = "0x60029C7")]
			[Address(RVA = "0x1389BD8", Offset = "0x1389BD8", VA = "0x1389BD8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60029C8")]
			[Address(RVA = "0x1389BDC", Offset = "0x1389BDC", VA = "0x1389BDC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60029CA")]
			[Address(RVA = "0x1389CDC", Offset = "0x1389CDC", VA = "0x1389CDC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005C7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DAA8", Offset = "0xA0DAA8")]
		private sealed class <>c__DisplayClass120_0
		{
			[Token(Token = "0x4001D55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float now;

			[Token(Token = "0x60029CC")]
			[Address(RVA = "0x1388B68", Offset = "0x1388B68", VA = "0x1388B68")]
			public <>c__DisplayClass120_0()
			{
			}

			[Token(Token = "0x60029CD")]
			[Address(RVA = "0x1388B70", Offset = "0x1388B70", VA = "0x1388B70")]
			internal bool <CheckQueuedCommands>b__0(QueuedSequencerCommand queuedCommand)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DAB8", Offset = "0xA0DAB8")]
		private sealed class <>c__DisplayClass121_0
		{
			[Token(Token = "0x4001D56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string message;

			[Token(Token = "0x60029CE")]
			[Address(RVA = "0x1388B94", Offset = "0x1388B94", VA = "0x1388B94")]
			public <>c__DisplayClass121_0()
			{
			}

			[Token(Token = "0x60029CF")]
			[Address(RVA = "0x1388B9C", Offset = "0x1388B9C", VA = "0x1388B9C")]
			internal bool <OnSequencerMessage>b__0(QueuedSequencerCommand x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005C9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DAC8", Offset = "0xA0DAC8")]
		private sealed class <DestroyAfterOneFrame>d__126 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SequencerCommand command;

			[Token(Token = "0x1700052E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60029D3")]
				[Address(RVA = "0x1389920", Offset = "0x1389920", VA = "0x1389920", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700052F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60029D5")]
				[Address(RVA = "0x1389988", Offset = "0x1389988", VA = "0x1389988", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60029D0")]
			[Address(RVA = "0x1389854", Offset = "0x1389854", VA = "0x1389854")]
			[DebuggerHidden]
			public <DestroyAfterOneFrame>d__126(int <>1__state)
			{
			}

			[Token(Token = "0x60029D1")]
			[Address(RVA = "0x1389880", Offset = "0x1389880", VA = "0x1389880", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60029D2")]
			[Address(RVA = "0x1389884", Offset = "0x1389884", VA = "0x1389884", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60029D4")]
			[Address(RVA = "0x1389928", Offset = "0x1389928", VA = "0x1389928", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005CA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DAD8", Offset = "0xA0DAD8")]
		private sealed class <>c__DisplayClass130_0
		{
			[Token(Token = "0x4001D5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform subject;

			[Token(Token = "0x4001D5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string controllerName;

			[Token(Token = "0x60029D6")]
			[Address(RVA = "0x1388BBC", Offset = "0x1388BBC", VA = "0x1388BBC")]
			public <>c__DisplayClass130_0()
			{
			}

			[Token(Token = "0x60029D7")]
			[Address(RVA = "0x1388BC4", Offset = "0x1388BC4", VA = "0x1388BC4")]
			internal void <HandleAnimatorControllerInternally>b__0(UnityEngine.Object asset)
			{
			}
		}

		[Token(Token = "0x20005CB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DAE8", Offset = "0xA0DAE8")]
		private sealed class <>c__DisplayClass137_0
		{
			[Token(Token = "0x4001D5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string clipName;

			[Token(Token = "0x4001D5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform subject;

			[Token(Token = "0x4001D5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool oneshot;

			[Token(Token = "0x60029D8")]
			[Address(RVA = "0x1388FE4", Offset = "0x1388FE4", VA = "0x1388FE4")]
			public <>c__DisplayClass137_0()
			{
			}

			[Token(Token = "0x60029D9")]
			[Address(RVA = "0x1388FEC", Offset = "0x1388FEC", VA = "0x1388FEC")]
			internal void <HandleAudioInternally>b__0(UnityEngine.Object asset)
			{
			}
		}

		[Token(Token = "0x20005CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DAF8", Offset = "0xA0DAF8")]
		private sealed class <>c__DisplayClass154_0
		{
			[Token(Token = "0x4001D5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Actor actor;

			[Token(Token = "0x4001D60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string actorName;

			[Token(Token = "0x4001D61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool isDefault;

			[Token(Token = "0x4001D62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string textureName;

			[Token(Token = "0x60029DA")]
			[Address(RVA = "0x1389494", Offset = "0x1389494", VA = "0x1389494")]
			public <>c__DisplayClass154_0()
			{
			}

			[Token(Token = "0x60029DB")]
			[Address(RVA = "0x138949C", Offset = "0x138949C", VA = "0x138949C")]
			internal void <HandleSetPortraitInternally>b__0(UnityEngine.Object asset)
			{
			}
		}

		[Token(Token = "0x4000ACF")]
		private const string DefaultCameraAnglesResourceName = "Default Camera Angles";

		[Token(Token = "0x4000AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA17FA8", Offset = "0xA17FA8")]
		private float <subtitleEndTime>k__BackingField;

		[Token(Token = "0x4000AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA17FB8", Offset = "0xA17FB8")]
		private string <entrytag>k__BackingField;

		[Token(Token = "0x4000AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool disableInternalSequencerCommands;

		[Token(Token = "0x4000AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool m_hasCameraControl;

		[Token(Token = "0x4000AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Camera m_originalCamera;

		[Token(Token = "0x4000AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 m_originalCameraPosition;

		[Token(Token = "0x4000AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Quaternion m_originalCameraRotation;

		[Token(Token = "0x4000AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float m_originalOrthographicSize;

		[Token(Token = "0x4000AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform m_speaker;

		[Token(Token = "0x4000AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform m_listener;

		[Token(Token = "0x4000ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<QueuedSequencerCommand> m_queuedCommands;

		[Token(Token = "0x4000ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<SequencerCommand> m_activeCommands;

		[Token(Token = "0x4000ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private List<SequencerCommand> m_commandsToDelete;

		[Token(Token = "0x4000ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool m_informParticipants;

		[Token(Token = "0x4000ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		private bool m_closeWhenFinished;

		[Token(Token = "0x4000ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Camera m_sequencerCameraSource;

		[Token(Token = "0x4000AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Camera m_sequencerCamera;

		[Token(Token = "0x4000AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private GameObject m_alternateSequencerCameraObject;

		[Token(Token = "0x4000AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private GameObject m_cameraAngles;

		[Token(Token = "0x4000AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool m_isUsingMainCamera;

		[Token(Token = "0x4000AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
		private bool m_isPlaying;

		[Token(Token = "0x4000AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<string, Type> m_cachedComponentTypes;

		[Token(Token = "0x4000AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<string, string> m_shortcuts;

		[Token(Token = "0x4000AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Dictionary<string, Stack<string>> m_shortcutStack;

		[Token(Token = "0x4000AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private SequenceParser m_parser;

		[Token(Token = "0x4000AE9")]
		private const float InstantThreshold = 0.001f;

		[Token(Token = "0x4000AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Regex ShortcutRegex;

		[Token(Token = "0x4000AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Sequencer s_awakeSequencer;

		[Token(Token = "0x4000AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static string s_awakeEndMessage;

		[Token(Token = "0x4000AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static Transform s_awakeSpeaker;

		[Token(Token = "0x4000AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static Transform s_awakeListener;

		[Token(Token = "0x4000AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static string[] s_awakeArgs;

		[Token(Token = "0x4000AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private List<int> m_setDialoguePanelPreviouslyOpenSubtitlePanels;

		[Token(Token = "0x4000AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private List<int> m_setDialoguePanelPreviouslyOpenMenuPanels;

		[Token(Token = "0x4000AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static DisplaySettings.SubtitleSettings.ContinueButtonMode savedContinueButtonMode;

		[Token(Token = "0x170001EF")]
		public bool isPlaying
		{
			[Token(Token = "0x6001155")]
			[Address(RVA = "0x11DA2B4", Offset = "0x11DA2B4", VA = "0x11DA2B4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001F0")]
		public GameObject cameraAngles
		{
			[Token(Token = "0x6001156")]
			[Address(RVA = "0x11DA2BC", Offset = "0x11DA2BC", VA = "0x11DA2BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F1")]
		public Camera sequencerCamera
		{
			[Token(Token = "0x6001157")]
			[Address(RVA = "0x11DA2C4", Offset = "0x11DA2C4", VA = "0x11DA2C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F2")]
		public Transform sequencerCameraTransform
		{
			[Token(Token = "0x6001158")]
			[Address(RVA = "0x11DA2CC", Offset = "0x11DA2CC", VA = "0x11DA2CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F3")]
		public Transform speaker
		{
			[Token(Token = "0x6001159")]
			[Address(RVA = "0x11DA36C", Offset = "0x11DA36C", VA = "0x11DA36C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F4")]
		public Transform listener
		{
			[Token(Token = "0x600115A")]
			[Address(RVA = "0x11DA374", Offset = "0x11DA374", VA = "0x11DA374")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F5")]
		public Vector3 originalCameraPosition
		{
			[Token(Token = "0x600115B")]
			[Address(RVA = "0x11DA37C", Offset = "0x11DA37C", VA = "0x11DA37C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170001F6")]
		public Quaternion originalCameraRotation
		{
			[Token(Token = "0x600115C")]
			[Address(RVA = "0x11DA388", Offset = "0x11DA388", VA = "0x11DA388")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x170001F7")]
		public float originalOrthographicSize
		{
			[Token(Token = "0x600115D")]
			[Address(RVA = "0x11DA394", Offset = "0x11DA394", VA = "0x11DA394")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001F8")]
		public float subtitleEndTime
		{
			[Token(Token = "0x600115E")]
			[Address(RVA = "0x11DA39C", Offset = "0x11DA39C", VA = "0x11DA39C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A384", Offset = "0xA2A384")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600115F")]
			[Address(RVA = "0x11DA3A4", Offset = "0x11DA3A4", VA = "0x11DA3A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A394", Offset = "0xA2A394")]
			set
			{
			}
		}

		[Token(Token = "0x170001F9")]
		public string entrytag
		{
			[Token(Token = "0x6001160")]
			[Address(RVA = "0x11DA3AC", Offset = "0x11DA3AC", VA = "0x11DA3AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A3A4", Offset = "0xA2A3A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001161")]
			[Address(RVA = "0x11DA3B4", Offset = "0x11DA3B4", VA = "0x11DA3B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A3B4", Offset = "0xA2A3B4")]
			set
			{
			}
		}

		[Token(Token = "0x170001FA")]
		public string entrytaglocal
		{
			[Token(Token = "0x6001162")]
			[Address(RVA = "0x11DA3BC", Offset = "0x11DA3BC", VA = "0x11DA3BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FB")]
		public bool IsPlaying
		{
			[Token(Token = "0x6001163")]
			[Address(RVA = "0x11DA4BC", Offset = "0x11DA4BC", VA = "0x11DA4BC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001FC")]
		public GameObject CameraAngles
		{
			[Token(Token = "0x6001164")]
			[Address(RVA = "0x11DA4C4", Offset = "0x11DA4C4", VA = "0x11DA4C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FD")]
		public Camera SequencerCamera
		{
			[Token(Token = "0x6001165")]
			[Address(RVA = "0x11DA4CC", Offset = "0x11DA4CC", VA = "0x11DA4CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FE")]
		public Transform SequencerCameraTransform
		{
			[Token(Token = "0x6001166")]
			[Address(RVA = "0x11DA4D4", Offset = "0x11DA4D4", VA = "0x11DA4D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FF")]
		public Transform Speaker
		{
			[Token(Token = "0x6001167")]
			[Address(RVA = "0x11DA4D8", Offset = "0x11DA4D8", VA = "0x11DA4D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000200")]
		public Transform Listener
		{
			[Token(Token = "0x6001168")]
			[Address(RVA = "0x11DA4E0", Offset = "0x11DA4E0", VA = "0x11DA4E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000201")]
		public Vector3 OriginalCameraPosition
		{
			[Token(Token = "0x6001169")]
			[Address(RVA = "0x11DA4E8", Offset = "0x11DA4E8", VA = "0x11DA4E8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000202")]
		public Quaternion OriginalCameraRotation
		{
			[Token(Token = "0x600116A")]
			[Address(RVA = "0x11DA4F4", Offset = "0x11DA4F4", VA = "0x11DA4F4")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x17000203")]
		public float OriginalOrthographicSize
		{
			[Token(Token = "0x600116B")]
			[Address(RVA = "0x11DA500", Offset = "0x11DA500", VA = "0x11DA500")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000204")]
		public float SubtitleEndTime
		{
			[Token(Token = "0x600116C")]
			[Address(RVA = "0x11DA508", Offset = "0x11DA508", VA = "0x11DA508")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600116D")]
			[Address(RVA = "0x11DA510", Offset = "0x11DA510", VA = "0x11DA510")]
			set
			{
			}
		}

		[Token(Token = "0x14000009")]
		public event Action FinishedSequenceHandler
		{
			[Token(Token = "0x6001153")]
			[Address(RVA = "0x11DA16C", Offset = "0x11DA16C", VA = "0x11DA16C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A364", Offset = "0xA2A364")]
			add
			{
			}
			[Token(Token = "0x6001154")]
			[Address(RVA = "0x11DA210", Offset = "0x11DA210", VA = "0x11DA210")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A374", Offset = "0xA2A374")]
			remove
			{
			}
		}

		[Token(Token = "0x600116E")]
		[Address(RVA = "0x11DA518", Offset = "0x11DA518", VA = "0x11DA518")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xA2A3C4", Offset = "0xA2A3C4")]
		private static void InitStaticVariables()
		{
		}

		[Token(Token = "0x600116F")]
		[Address(RVA = "0x11DA910", Offset = "0x11DA910", VA = "0x11DA910")]
		public static void Message(string message)
		{
		}

		[Token(Token = "0x6001170")]
		[Address(RVA = "0x11DAA4C", Offset = "0x11DAA4C", VA = "0x11DAA4C")]
		public static void RegisterShortcut(string shortcut, string value)
		{
		}

		[Token(Token = "0x6001171")]
		[Address(RVA = "0x11DACF4", Offset = "0x11DACF4", VA = "0x11DACF4")]
		public static void UnregisterShortcut(string shortcut)
		{
		}

		[Token(Token = "0x6001172")]
		[Address(RVA = "0x11DAFE4", Offset = "0x11DAFE4", VA = "0x11DAFE4")]
		public static string ReplaceShortcuts(string sequence)
		{
			return null;
		}

		[Token(Token = "0x6001173")]
		[Address(RVA = "0x11DB14C", Offset = "0x11DB14C", VA = "0x11DB14C")]
		private static void ReportUnrecognizedShortcuts(string sequence)
		{
		}

		[Token(Token = "0x6001174")]
		[Address(RVA = "0x11DB48C", Offset = "0x11DB48C", VA = "0x11DB48C")]
		public void UseCamera(Camera sequencerCamera, GameObject cameraAngles)
		{
		}

		[Token(Token = "0x6001175")]
		[Address(RVA = "0x11DB498", Offset = "0x11DB498", VA = "0x11DB498")]
		public void UseCamera(Camera sequencerCamera, GameObject alternateSequencerCameraObject, GameObject cameraAngles)
		{
		}

		[Token(Token = "0x6001176")]
		[Address(RVA = "0x11DBA00", Offset = "0x11DBA00", VA = "0x11DBA00")]
		private void GetCameraAngles()
		{
		}

		[Token(Token = "0x6001177")]
		[Address(RVA = "0x11DB4E8", Offset = "0x11DB4E8", VA = "0x11DB4E8")]
		private void GetCamera()
		{
		}

		[Token(Token = "0x6001178")]
		[Address(RVA = "0x11DBB34", Offset = "0x11DBB34", VA = "0x11DBB34")]
		private void DestroyCamera()
		{
		}

		[Token(Token = "0x6001179")]
		[Address(RVA = "0x11DBC24", Offset = "0x11DBC24", VA = "0x11DBC24")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA2A3D8", Offset = "0xA2A3D8")]
		private IEnumerator RestoreCamera()
		{
			return null;
		}

		[Token(Token = "0x600117A")]
		[Address(RVA = "0x11DBC94", Offset = "0x11DBC94", VA = "0x11DBC94")]
		public void SwitchCamera(Camera newCamera)
		{
		}

		[Token(Token = "0x600117B")]
		[Address(RVA = "0x11DBFEC", Offset = "0x11DBFEC", VA = "0x11DBFEC")]
		public void TakeCameraControl()
		{
		}

		[Token(Token = "0x600117C")]
		[Address(RVA = "0x11DBE00", Offset = "0x11DBE00", VA = "0x11DBE00")]
		private void ReleaseCameraControl()
		{
		}

		[Token(Token = "0x600117D")]
		[Address(RVA = "0x11DC1C4", Offset = "0x11DC1C4", VA = "0x11DC1C4")]
		public void Open()
		{
		}

		[Token(Token = "0x600117E")]
		[Address(RVA = "0x11DC22C", Offset = "0x11DC22C", VA = "0x11DC22C")]
		public void Close()
		{
		}

		[Token(Token = "0x600117F")]
		[Address(RVA = "0x11DC2F8", Offset = "0x11DC2F8", VA = "0x11DC2F8")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6001180")]
		[Address(RVA = "0x11DC2FC", Offset = "0x11DC2FC", VA = "0x11DC2FC")]
		public void Update()
		{
		}

		[Token(Token = "0x6001181")]
		[Address(RVA = "0x11DC7F0", Offset = "0x11DC7F0", VA = "0x11DC7F0")]
		private void FinishSequence()
		{
		}

		[Token(Token = "0x6001182")]
		[Address(RVA = "0x11DCB5C", Offset = "0x11DCB5C", VA = "0x11DCB5C")]
		public void SetParticipants(Transform speaker, Transform listener)
		{
		}

		[Token(Token = "0x6001183")]
		[Address(RVA = "0x11DC87C", Offset = "0x11DC87C", VA = "0x11DC87C")]
		private void InformParticipants(string message)
		{
		}

		[Token(Token = "0x6001184")]
		[Address(RVA = "0x11DCB64", Offset = "0x11DCB64", VA = "0x11DCB64")]
		public void PlaySequence(string sequence)
		{
		}

		[Token(Token = "0x6001185")]
		[Address(RVA = "0x11DCDC4", Offset = "0x11DCDC4", VA = "0x11DCDC4")]
		public void PlaySequence(string sequence, bool informParticipants, bool destroyWhenDone)
		{
		}

		[Token(Token = "0x6001186")]
		[Address(RVA = "0x11DCE50", Offset = "0x11DCE50", VA = "0x11DCE50")]
		public void PlaySequence(string sequence, Transform speaker, Transform listener, bool informParticipants, bool destroyWhenDone)
		{
		}

		[Token(Token = "0x6001187")]
		[Address(RVA = "0x11DCE68", Offset = "0x11DCE68", VA = "0x11DCE68")]
		public void PlaySequence(string sequence, Transform speaker, Transform listener, bool informParticipants, bool destroyWhenDone, bool delayOneFrame)
		{
		}

		[Token(Token = "0x6001188")]
		[Address(RVA = "0x11DCEC8", Offset = "0x11DCEC8", VA = "0x11DCEC8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA2A43C", Offset = "0xA2A43C")]
		public IEnumerator PlaySequenceAfterOneFrame(string sequence, Transform speaker, Transform listener, bool informParticipants, bool destroyWhenDone)
		{
			return null;
		}

		[Token(Token = "0x6001189")]
		[Address(RVA = "0x11DCF78", Offset = "0x11DCF78", VA = "0x11DCF78")]
		public void PlayCommand(string commandName, bool required, float time, string message, string endMessage, params string[] args)
		{
		}

		[Token(Token = "0x600118A")]
		[Address(RVA = "0x11DCDA8", Offset = "0x11DCDA8", VA = "0x11DCDA8")]
		public void PlayCommand(QueuedSequencerCommand commandRecord)
		{
		}

		[Token(Token = "0x600118B")]
		[Address(RVA = "0x11DCF98", Offset = "0x11DCF98", VA = "0x11DCF98")]
		public void PlayCommand(QueuedSequencerCommand commandRecord, string commandName, bool required, float time, string message, string endMessage, params string[] args)
		{
		}

		[Token(Token = "0x600118C")]
		[Address(RVA = "0x11DD798", Offset = "0x11DD798", VA = "0x11DD798")]
		private bool IsTimePaused()
		{
			return default(bool);
		}

		[Token(Token = "0x600118D")]
		[Address(RVA = "0x11DD7F8", Offset = "0x11DD7F8", VA = "0x11DD7F8")]
		private void ActivateCommand(string commandName, string endMessage, Transform speaker, Transform listener, string[] args)
		{
		}

		[Token(Token = "0x600118E")]
		[Address(RVA = "0x11DE1FC", Offset = "0x11DE1FC", VA = "0x11DE1FC")]
		private Type FindSequencerCommandType(string commandName)
		{
			return null;
		}

		[Token(Token = "0x600118F")]
		[Address(RVA = "0x11DA6A0", Offset = "0x11DA6A0", VA = "0x11DA6A0")]
		public static void Preload()
		{
		}

		[Token(Token = "0x6001190")]
		[Address(RVA = "0x11DE340", Offset = "0x11DE340", VA = "0x11DE340")]
		public Type GetTypeFromName(string typeName)
		{
			return null;
		}

		[Token(Token = "0x6001191")]
		[Address(RVA = "0x11DE16C", Offset = "0x11DE16C", VA = "0x11DE16C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA2A4A0", Offset = "0xA2A4A0")]
		private IEnumerator SendTimedSequencerMessage(string endMessage, float delay)
		{
			return null;
		}

		[Token(Token = "0x6001192")]
		[Address(RVA = "0x11DE528", Offset = "0x11DE528", VA = "0x11DE528")]
		private void ActivateCommand(QueuedSequencerCommand queuedCommand)
		{
		}

		[Token(Token = "0x6001193")]
		[Address(RVA = "0x11DC388", Offset = "0x11DC388", VA = "0x11DC388")]
		private void CheckQueuedCommands()
		{
		}

		[Token(Token = "0x6001194")]
		[Address(RVA = "0x11DE54C", Offset = "0x11DE54C", VA = "0x11DE54C")]
		public void OnSequencerMessage(string message)
		{
		}

		[Token(Token = "0x6001195")]
		[Address(RVA = "0x11DC5F0", Offset = "0x11DC5F0", VA = "0x11DC5F0")]
		private void CheckActiveCommands()
		{
		}

		[Token(Token = "0x6001196")]
		[Address(RVA = "0x11DC2D4", Offset = "0x11DC2D4", VA = "0x11DC2D4")]
		public void Stop()
		{
		}

		[Token(Token = "0x6001197")]
		[Address(RVA = "0x11DE818", Offset = "0x11DE818", VA = "0x11DE818")]
		public void StopQueued()
		{
		}

		[Token(Token = "0x6001198")]
		[Address(RVA = "0x11DE98C", Offset = "0x11DE98C", VA = "0x11DE98C")]
		public void StopActive()
		{
		}

		[Token(Token = "0x6001199")]
		[Address(RVA = "0x11DEB64", Offset = "0x11DEB64", VA = "0x11DEB64")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA2A504", Offset = "0xA2A504")]
		private IEnumerator DestroyAfterOneFrame(SequencerCommand command)
		{
			return null;
		}

		[Token(Token = "0x600119A")]
		[Address(RVA = "0x11DDB44", Offset = "0x11DDB44", VA = "0x11DDB44")]
		private bool HandleCommandInternally(string commandName, string[] args, out float duration)
		{
			return default(bool);
		}

		[Token(Token = "0x600119B")]
		[Address(RVA = "0x11DEBD4", Offset = "0x11DEBD4", VA = "0x11DEBD4")]
		private bool TryHandleCameraInternally(string commandName, string[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x600119C")]
		[Address(RVA = "0x11DF488", Offset = "0x11DF488", VA = "0x11DF488")]
		private bool HandleAnimationInternally(string commandName, string[] args, out float duration)
		{
			return default(bool);
		}

		[Token(Token = "0x600119D")]
		[Address(RVA = "0x11DF9B4", Offset = "0x11DF9B4", VA = "0x11DF9B4")]
		private bool HandleAnimatorControllerInternally(string commandName, string[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x600119E")]
		[Address(RVA = "0x11DFCE4", Offset = "0x11DFCE4", VA = "0x11DFCE4")]
		private bool TryHandleAnimatorLayerInternally(string commandName, string[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x600119F")]
		[Address(RVA = "0x11E01A4", Offset = "0x11E01A4", VA = "0x11E01A4")]
		private bool HandleAnimatorBoolInternally(string commandName, string[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x60011A0")]
		[Address(RVA = "0x11E06A4", Offset = "0x11E06A4", VA = "0x11E06A4")]
		private bool HandleAnimatorIntInternally(string commandName, string[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x60011A1")]
		[Address(RVA = "0x11E0BA4", Offset = "0x11E0BA4", VA = "0x11E0BA4")]
		private bool TryHandleAnimatorFloatInternally(string commandName, string[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x60011A2")]
		[Address(RVA = "0x11E1104", Offset = "0x11E1104", VA = "0x11E1104")]
		private bool HandleAnimatorTriggerInternally(string commandName, string[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x60011A3")]
		[Address(RVA = "0x11E14C8", Offset = "0x11E14C8", VA = "0x11E14C8")]
		private bool HandleAnimatorPlayInternally(string commandName, string[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x60011A4")]
		[Address(RVA = "0x11E1A70", Offset = "0x11E1A70", VA = "0x11E1A70")]
		private bool HandleAudioInternally(string commandName, string[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x60011A5")]
		[Address(RVA = "0x11E1E78", Offset = "0x11E1E78", VA = "0x11E1E78")]
		private bool HandleAudioStopInternally(string commandName, string[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x60011A6")]
		[Address(RVA = "0x11E2400", Offset = "0x11E2400", VA = "0x11E2400")]
		private bool TryHandleMoveToInternally(string commandName, string[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x60011A7")]
		[Address(RVA = "0x11E2A48", Offset = "0x11E2A48", VA = "0x11E2A48")]
		private bool TryHandleLookAtInternally(string commandName, string[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x60011A8")]
		[Address(RVA = "0x11E83A4", Offset = "0x11E83A4", VA = "0x11E83A4")]
		private void DoLookAt(Transform subject, Vector3 position, bool yAxisOnly)
		{
		}

		[Token(Token = "0x60011A9")]
		[Address(RVA = "0x11E3134", Offset = "0x11E3134", VA = "0x11E3134")]
		private bool HandleNavMeshAgentInternally(string commandName, string[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x60011AA")]
		[Address(RVA = "0x11E3EEC", Offset = "0x11E3EEC", VA = "0x11E3EEC")]
		private bool HandleSendMessageInternally(string commandName, bool upwards, string[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x60011AB")]
		[Address(RVA = "0x11E46DC", Offset = "0x11E46DC", VA = "0x11E46DC")]
		private bool HandleSetActiveInternally(string commandName, string[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x60011AC")]
		[Address(RVA = "0x11E4DFC", Offset = "0x11E4DFC", VA = "0x11E4DFC")]
		private bool HandleSetEnabledInternally(string commandName, string[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x60011AD")]
		[Address(RVA = "0x11E2054", Offset = "0x11E2054", VA = "0x11E2054")]
		private bool HandleClearSubtitleText(string commandName, string[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x60011AE")]
		[Address(RVA = "0x11E8448", Offset = "0x11E8448", VA = "0x11E8448")]
		public void SetDialoguePanel(bool show, bool immediate)
		{
		}

		[Token(Token = "0x60011AF")]
		[Address(RVA = "0x11E6508", Offset = "0x11E6508", VA = "0x11E6508")]
		private bool HandleSetDialoguePanelInternally(string commandName, string[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x60011B0")]
		[Address(RVA = "0x11E37AC", Offset = "0x11E37AC", VA = "0x11E37AC")]
		private bool HandleOpenPanelInternally(string commandName, string[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x60011B1")]
		[Address(RVA = "0x11E55A8", Offset = "0x11E55A8", VA = "0x11E55A8")]
		private bool HandleSetPanelInternally(string commandName, string[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x60011B2")]
		[Address(RVA = "0x11E5C3C", Offset = "0x11E5C3C", VA = "0x11E5C3C")]
		private bool HandleSetMenuPanelInternally(string commandName, string[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x60011B3")]
		[Address(RVA = "0x11E6824", Offset = "0x11E6824", VA = "0x11E6824")]
		private bool HandleSetPortraitInternally(string commandName, string[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x60011B4")]
		[Address(RVA = "0x11E7018", Offset = "0x11E7018", VA = "0x11E7018")]
		private bool HandleSetTimeoutInternally(string commandName, string[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x60011B5")]
		[Address(RVA = "0x11E71D4", Offset = "0x11E71D4", VA = "0x11E71D4")]
		private bool HandleSetContinueModeInternally(string commandName, string[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x60011B6")]
		[Address(RVA = "0x11E7874", Offset = "0x11E7874", VA = "0x11E7874")]
		private bool HandleContinueInternally()
		{
			return default(bool);
		}

		[Token(Token = "0x60011B7")]
		[Address(RVA = "0x11E79D8", Offset = "0x11E79D8", VA = "0x11E79D8")]
		private bool HandleSetVariableInternally(string commandName, string[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x60011B8")]
		[Address(RVA = "0x11E7D70", Offset = "0x11E7D70", VA = "0x11E7D70")]
		private bool HandleShowAlertInternally(string commandName, string[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x60011B9")]
		[Address(RVA = "0x11E80E4", Offset = "0x11E80E4", VA = "0x11E80E4")]
		private bool HandleUpdateTrackerInternally()
		{
			return default(bool);
		}

		[Token(Token = "0x60011BA")]
		[Address(RVA = "0x11E822C", Offset = "0x11E822C", VA = "0x11E822C")]
		private bool HandleRandomizeNextEntryInternally()
		{
			return default(bool);
		}

		[Token(Token = "0x60011BB")]
		[Address(RVA = "0x11E8A2C", Offset = "0x11E8A2C", VA = "0x11E8A2C")]
		public Sequencer()
		{
		}

		[Token(Token = "0x60011BD")]
		[Address(RVA = "0x11E8C54", Offset = "0x11E8C54", VA = "0x11E8C54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A568", Offset = "0xA2A568")]
		private void <GetCameraAngles>b__86_0(UnityEngine.Object asset)
		{
		}
	}
	[Token(Token = "0x20001E6")]
	public class SequencerKeywords
	{
		[Token(Token = "0x4000AF3")]
		public const string Speaker = "speaker";

		[Token(Token = "0x4000AF4")]
		public const string Listener = "listener";

		[Token(Token = "0x4000AF5")]
		public const string DefaultSequence = "{{default}}";

		[Token(Token = "0x4000AF6")]
		public const string End = "{{end}}";

		[Token(Token = "0x4000AF7")]
		public const string Required = "required";

		[Token(Token = "0x4000AF8")]
		public const string Require = "require";

		[Token(Token = "0x4000AF9")]
		public const string Message = "Message";

		[Token(Token = "0x4000AFA")]
		public const string Entrytag = "entrytag";

		[Token(Token = "0x4000AFB")]
		public const string EntrytagLocal = "entrytaglocal";

		[Token(Token = "0x4000AFC")]
		public const string DelayEndCommand = "Delay({{end}})";

		[Token(Token = "0x4000AFD")]
		public const string NoneCommand = "None()";

		[Token(Token = "0x60011BE")]
		[Address(RVA = "0x1397CF8", Offset = "0x1397CF8", VA = "0x1397CF8")]
		public SequencerKeywords()
		{
		}
	}
	[Token(Token = "0x20001E7")]
	public class SequencerMessages
	{
		[Token(Token = "0x4000AFE")]
		public const string Typed = "Typed";

		[Token(Token = "0x60011BF")]
		[Address(RVA = "0x1397D00", Offset = "0x1397D00", VA = "0x1397D00")]
		public SequencerMessages()
		{
		}
	}
	[Token(Token = "0x20001E8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA07CD0", Offset = "0xA07CD0")]
	public class SequencerShortcuts : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20005CD")]
		public class Shortcut
		{
			[Token(Token = "0x4001D63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA24688", Offset = "0xA24688")]
			public string shortcut;

			[Token(Token = "0x4001D64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA246C0", Offset = "0xA246C0")]
			[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0xA246C0", Offset = "0xA246C0")]
			public string value;

			[Token(Token = "0x60029DC")]
			[Address(RVA = "0x1397EF4", Offset = "0x1397EF4", VA = "0x1397EF4")]
			public Shortcut()
			{
			}
		}

		[Token(Token = "0x4000AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Shortcut[] shortcuts;

		[Token(Token = "0x60011C0")]
		[Address(RVA = "0x1397D08", Offset = "0x1397D08", VA = "0x1397D08")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60011C1")]
		[Address(RVA = "0x1397DD4", Offset = "0x1397DD4", VA = "0x1397DD4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60011C2")]
		[Address(RVA = "0x1397E94", Offset = "0x1397E94", VA = "0x1397E94")]
		public SequencerShortcuts()
		{
		}
	}
	[Token(Token = "0x20001E9")]
	public static class SequencerTools
	{
		[Token(Token = "0x60011C3")]
		[Address(RVA = "0x138A1F8", Offset = "0x138A1F8", VA = "0x138A1F8")]
		public static Transform GetSubject(string specifier, Transform speaker, Transform listener, [Optional] Transform defaultSubject)
		{
			return null;
		}

		[Token(Token = "0x60011C4")]
		[Address(RVA = "0x1398188", Offset = "0x1398188", VA = "0x1398188")]
		public static bool SpecifierSpecifiesTag(string specifier)
		{
			return default(bool);
		}

		[Token(Token = "0x60011C5")]
		[Address(RVA = "0x1398208", Offset = "0x1398208", VA = "0x1398208")]
		public static string GetSpecifiedTag(string specifier)
		{
			return null;
		}

		[Token(Token = "0x60011C6")]
		[Address(RVA = "0x1397EFC", Offset = "0x1397EFC", VA = "0x1397EFC")]
		public static GameObject FindSpecifier(string specifier, bool onlyActiveInScene = false)
		{
			return null;
		}

		[Token(Token = "0x60011C7")]
		[Address(RVA = "0x138F400", Offset = "0x138F400", VA = "0x138F400")]
		public static string GetDefaultCameraAngle(Transform subject)
		{
			return null;
		}

		[Token(Token = "0x60011C8")]
		[Address(RVA = "0x138A39C", Offset = "0x138A39C", VA = "0x138A39C")]
		public static string GetParameter(string[] parameters, int i, [Optional] string defaultValue)
		{
			return null;
		}

		[Token(Token = "0x60011C9")]
		public static T GetParameterAs<T>(string[] parameters, int i, T defaultValue)
		{
			return (T)null;
		}

		[Token(Token = "0x60011CA")]
		[Address(RVA = "0x139826C", Offset = "0x139826C", VA = "0x139826C")]
		public static float GetParameterAsFloat(string[] parameters, int i, float defaultValue = 0f)
		{
			return default(float);
		}

		[Token(Token = "0x60011CB")]
		[Address(RVA = "0x13982DC", Offset = "0x13982DC", VA = "0x13982DC")]
		public static int GetParameterAsInt(string[] parameters, int i, int defaultValue = 0)
		{
			return default(int);
		}

		[Token(Token = "0x60011CC")]
		[Address(RVA = "0x1398344", Offset = "0x1398344", VA = "0x1398344")]
		public static bool GetParameterAsBool(string[] parameters, int i, bool defaultValue = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60011CD")]
		[Address(RVA = "0x138936C", Offset = "0x138936C", VA = "0x138936C")]
		public static AudioSource GetAudioSource(Transform subject)
		{
			return null;
		}

		[Token(Token = "0x60011CE")]
		[Address(RVA = "0x138A5A4", Offset = "0x138A5A4", VA = "0x138A5A4")]
		public static bool IsAudioMuted()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001EA")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA07D08", Offset = "0xA07D08")]
	public class BarkDialogueUI : MonoBehaviour, IDialogueUI
	{
		[Token(Token = "0x1400000A")]
		public event EventHandler<SelectedResponseEventArgs> SelectedResponseHandler
		{
			[Token(Token = "0x60011CF")]
			[Address(RVA = "0x142E59C", Offset = "0x142E59C", VA = "0x142E59C", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A578", Offset = "0xA2A578")]
			add
			{
			}
			[Token(Token = "0x60011D0")]
			[Address(RVA = "0x142E640", Offset = "0x142E640", VA = "0x142E640", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A588", Offset = "0xA2A588")]
			remove
			{
			}
		}

		[Token(Token = "0x60011D1")]
		[Address(RVA = "0x142E6E4", Offset = "0x142E6E4", VA = "0x142E6E4", Slot = "6")]
		public void Open()
		{
		}

		[Token(Token = "0x60011D2")]
		[Address(RVA = "0x142E6E8", Offset = "0x142E6E8", VA = "0x142E6E8", Slot = "7")]
		public void Close()
		{
		}

		[Token(Token = "0x60011D3")]
		[Address(RVA = "0x142E6EC", Offset = "0x142E6EC", VA = "0x142E6EC", Slot = "8")]
		public void ShowSubtitle(Subtitle subtitle)
		{
		}

		[Token(Token = "0x60011D4")]
		[Address(RVA = "0x142E770", Offset = "0x142E770", VA = "0x142E770", Slot = "9")]
		public void HideSubtitle(Subtitle subtitle)
		{
		}

		[Token(Token = "0x60011D5")]
		[Address(RVA = "0x142E774", Offset = "0x142E774", VA = "0x142E774", Slot = "10")]
		public void ShowResponses(Subtitle subtitle, Response[] responses, float timeout)
		{
		}

		[Token(Token = "0x60011D6")]
		[Address(RVA = "0x142E834", Offset = "0x142E834", VA = "0x142E834", Slot = "11")]
		public void HideResponses()
		{
		}

		[Token(Token = "0x60011D7")]
		[Address(RVA = "0x142E838", Offset = "0x142E838", VA = "0x142E838", Slot = "12")]
		public void ShowQTEIndicator(int index)
		{
		}

		[Token(Token = "0x60011D8")]
		[Address(RVA = "0x142E83C", Offset = "0x142E83C", VA = "0x142E83C", Slot = "13")]
		public void HideQTEIndicator(int index)
		{
		}

		[Token(Token = "0x60011D9")]
		[Address(RVA = "0x142E840", Offset = "0x142E840", VA = "0x142E840", Slot = "14")]
		public void ShowAlert(string message, float duration)
		{
		}

		[Token(Token = "0x60011DA")]
		[Address(RVA = "0x142E844", Offset = "0x142E844", VA = "0x142E844", Slot = "15")]
		public void HideAlert()
		{
		}

		[Token(Token = "0x60011DB")]
		[Address(RVA = "0x142E848", Offset = "0x142E848", VA = "0x142E848")]
		public BarkDialogueUI()
		{
		}
	}
	[Token(Token = "0x20001EB")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA07D40", Offset = "0xA07D40")]
	public class BarkGroupManager : MonoBehaviour
	{
		[Token(Token = "0x20005CE")]
		private class BarkRequest
		{
			[Token(Token = "0x4001D65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public BarkGroupMember member;

			[Token(Token = "0x4001D66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform listener;

			[Token(Token = "0x4001D67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string conversation;

			[Token(Token = "0x4001D68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public BarkHistory barkHistory;

			[Token(Token = "0x4001D69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string barkText;

			[Token(Token = "0x4001D6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string sequence;

			[Token(Token = "0x4001D6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public AbstractBarkUI barkUI;

			[Token(Token = "0x4001D6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public float delayTime;

			[Token(Token = "0x4001D6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public bool isPlaying;

			[Token(Token = "0x60029DD")]
			[Address(RVA = "0x142F204", Offset = "0x142F204", VA = "0x142F204")]
			public BarkRequest(string conversation, BarkGroupMember member, Transform listener, BarkHistory barkHistory, float delayTime = -1f)
			{
			}

			[Token(Token = "0x60029DE")]
			[Address(RVA = "0x142F518", Offset = "0x142F518", VA = "0x142F518")]
			public BarkRequest(string barkText, BarkGroupMember member, Transform listener, string sequence, float delayTime = -1f)
			{
			}

			[Token(Token = "0x60029DF")]
			[Address(RVA = "0x142FA78", Offset = "0x142FA78", VA = "0x142FA78")]
			private AbstractBarkUI GetBarkUI(BarkGroupMember member)
			{
				return null;
			}

			[Token(Token = "0x60029E0")]
			[Address(RVA = "0x142FBAC", Offset = "0x142FBAC", VA = "0x142FBAC")]
			private float GetDelayTime(BarkGroupMember member, float delayTime)
			{
				return default(float);
			}
		}

		[Token(Token = "0x4000B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool s_applicationIsQuitting;

		[Token(Token = "0x4000B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static BarkGroupManager s_instance;

		[Token(Token = "0x4000B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Dictionary<string, HashSet<BarkGroupMember>> groups;

		[Token(Token = "0x4000B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<string, Queue<BarkRequest>> queues;

		[Token(Token = "0x17000205")]
		public static BarkGroupManager instance
		{
			[Token(Token = "0x60011DC")]
			[Address(RVA = "0x142E850", Offset = "0x142E850", VA = "0x142E850")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011DD")]
		[Address(RVA = "0x142EA50", Offset = "0x142EA50", VA = "0x142EA50")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xA2A598", Offset = "0xA2A598")]
		private static void InitStaticVariables()
		{
		}

		[Token(Token = "0x60011DE")]
		[Address(RVA = "0x142EAB8", Offset = "0x142EAB8", VA = "0x142EAB8")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x60011DF")]
		[Address(RVA = "0x142EB24", Offset = "0x142EB24", VA = "0x142EB24")]
		public void AddToGroup(string groupId, BarkGroupMember member)
		{
		}

		[Token(Token = "0x60011E0")]
		[Address(RVA = "0x142EC70", Offset = "0x142EC70", VA = "0x142EC70")]
		public void RemoveFromGroup(string groupId, BarkGroupMember member)
		{
		}

		[Token(Token = "0x60011E1")]
		[Address(RVA = "0x142EDD4", Offset = "0x142EDD4", VA = "0x142EDD4")]
		public void MutexBark(string groupId, BarkGroupMember member)
		{
		}

		[Token(Token = "0x60011E2")]
		[Address(RVA = "0x142F090", Offset = "0x142F090", VA = "0x142F090")]
		public void GroupBark(string conversation, BarkGroupMember member, Transform listener, BarkHistory barkHistory, float delayTime = 0f)
		{
		}

		[Token(Token = "0x60011E3")]
		[Address(RVA = "0x142F3A4", Offset = "0x142F3A4", VA = "0x142F3A4")]
		public void GroupBarkString(string barkText, BarkGroupMember member, Transform listener, string sequence, float delayTime = 0f)
		{
		}

		[Token(Token = "0x60011E4")]
		[Address(RVA = "0x142F27C", Offset = "0x142F27C", VA = "0x142F27C")]
		private void Enqueue(BarkRequest barkRequest)
		{
		}

		[Token(Token = "0x60011E5")]
		[Address(RVA = "0x142F6FC", Offset = "0x142F6FC", VA = "0x142F6FC")]
		private void Update()
		{
		}

		[Token(Token = "0x60011E6")]
		[Address(RVA = "0x142F9DC", Offset = "0x142F9DC", VA = "0x142F9DC")]
		public BarkGroupManager()
		{
		}
	}
	[Token(Token = "0x20001EC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA07D78", Offset = "0xA07D78")]
	public class BarkGroupMember : MonoBehaviour
	{
		[Token(Token = "0x4000B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA17FD8", Offset = "0xA17FD8")]
		public string groupId;

		[Token(Token = "0x4000B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18010", Offset = "0xA18010")]
		public bool evaluateIdEveryBark;

		[Token(Token = "0x4000B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18048", Offset = "0xA18048")]
		public float forcedHideDelay;

		[Token(Token = "0x4000B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18080", Offset = "0xA18080")]
		public bool queueBarks;

		[Token(Token = "0x4000B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float minDelayBetweenQueuedBarks;

		[Token(Token = "0x4000B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float maxDelayBetweenQueuedBarks;

		[Token(Token = "0x4000B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string m_currentIdValue;

		[Token(Token = "0x4000B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private IBarkUI m_barkUI;

		[Token(Token = "0x4000B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool m_ignoreOnDisable;

		[Token(Token = "0x17000206")]
		public string currentIdValue
		{
			[Token(Token = "0x60011E8")]
			[Address(RVA = "0x142FC5C", Offset = "0x142FC5C", VA = "0x142FC5C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000207")]
		private IBarkUI barkUI
		{
			[Token(Token = "0x60011E9")]
			[Address(RVA = "0x142FC64", Offset = "0x142FC64", VA = "0x142FC64")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011EA")]
		[Address(RVA = "0x142FD08", Offset = "0x142FD08", VA = "0x142FD08", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60011EB")]
		[Address(RVA = "0x142FD14", Offset = "0x142FD14", VA = "0x142FD14", Slot = "5")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x60011EC")]
		[Address(RVA = "0x142FDA4", Offset = "0x142FDA4", VA = "0x142FDA4")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x60011ED")]
		[Address(RVA = "0x142FDB0", Offset = "0x142FDB0", VA = "0x142FDB0")]
		private void OnLevelWillBeUnloaded()
		{
		}

		[Token(Token = "0x60011EE")]
		[Address(RVA = "0x142FDBC", Offset = "0x142FDBC", VA = "0x142FDBC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60011EF")]
		[Address(RVA = "0x142FEA8", Offset = "0x142FEA8", VA = "0x142FEA8")]
		public void GroupBark(string conversation, Transform listener, BarkHistory barkHistory, float delayTime = -1f)
		{
		}

		[Token(Token = "0x60011F0")]
		[Address(RVA = "0x142FF50", Offset = "0x142FF50", VA = "0x142FF50")]
		public void GroupBarkString(string barkText, Transform listener, string sequence, float delayTime = -1f)
		{
		}

		[Token(Token = "0x60011F1")]
		[Address(RVA = "0x142FFF8", Offset = "0x142FFF8", VA = "0x142FFF8")]
		private void OnBarkStart(Transform listener)
		{
		}

		[Token(Token = "0x60011F2")]
		[Address(RVA = "0x142F590", Offset = "0x142F590", VA = "0x142F590")]
		public void UpdateMembership()
		{
		}

		[Token(Token = "0x60011F3")]
		[Address(RVA = "0x142EF8C", Offset = "0x142EF8C", VA = "0x142EF8C")]
		public void CancelBark()
		{
		}

		[Token(Token = "0x60011F4")]
		[Address(RVA = "0x143008C", Offset = "0x143008C", VA = "0x143008C")]
		private void HideBarkNow()
		{
		}

		[Token(Token = "0x60011F5")]
		[Address(RVA = "0x1430308", Offset = "0x1430308", VA = "0x1430308")]
		public BarkGroupMember()
		{
		}
	}
	[Token(Token = "0x20001ED")]
	public interface IBarkUI
	{
		[Token(Token = "0x17000208")]
		bool isPlaying
		{
			[Token(Token = "0x60011F8")]
			get;
		}

		[Token(Token = "0x60011F6")]
		void Bark(Subtitle subtitle);

		[Token(Token = "0x60011F7")]
		void Hide();
	}
	[Token(Token = "0x20001EE")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA07DB0", Offset = "0xA07DB0")]
	public class TextlessBarkUI : MonoBehaviour, IBarkUI
	{
		[Token(Token = "0x17000209")]
		public bool isPlaying
		{
			[Token(Token = "0x60011F9")]
			[Address(RVA = "0x12F3180", Offset = "0x12F3180", VA = "0x12F3180", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60011FA")]
		[Address(RVA = "0x12F3188", Offset = "0x12F3188", VA = "0x12F3188", Slot = "4")]
		public void Bark(Subtitle subtitle)
		{
		}

		[Token(Token = "0x60011FB")]
		[Address(RVA = "0x12F318C", Offset = "0x12F318C", VA = "0x12F318C", Slot = "5")]
		public void Hide()
		{
		}

		[Token(Token = "0x60011FC")]
		[Address(RVA = "0x12F3190", Offset = "0x12F3190", VA = "0x12F3190")]
		public TextlessBarkUI()
		{
		}
	}
	[Token(Token = "0x20001EF")]
	public interface IDialogueUI
	{
		[Token(Token = "0x1400000B")]
		event EventHandler<SelectedResponseEventArgs> SelectedResponseHandler;

		[Token(Token = "0x60011FF")]
		void Open();

		[Token(Token = "0x6001200")]
		void Close();

		[Token(Token = "0x6001201")]
		void ShowSubtitle(Subtitle subtitle);

		[Token(Token = "0x6001202")]
		void HideSubtitle(Subtitle subtitle);

		[Token(Token = "0x6001203")]
		void ShowResponses(Subtitle subtitle, Response[] responses, float timeout);

		[Token(Token = "0x6001204")]
		void HideResponses();

		[Token(Token = "0x6001205")]
		void ShowQTEIndicator(int index);

		[Token(Token = "0x6001206")]
		void HideQTEIndicator(int index);

		[Token(Token = "0x6001207")]
		void ShowAlert(string message, float duration);

		[Token(Token = "0x6001208")]
		void HideAlert();
	}
	[Token(Token = "0x20001F0")]
	public delegate void AcceptedTextDelegate(string text);
	[Token(Token = "0x20001F1")]
	public interface ITextFieldUI
	{
		[Token(Token = "0x600120D")]
		void StartTextInput(string labelText, string text, int maxLength, AcceptedTextDelegate acceptedText);

		[Token(Token = "0x600120E")]
		void CancelTextInput();
	}
	[Token(Token = "0x20001F2")]
	public enum ResponseButtonAlignment
	{
		[Token(Token = "0x4000B0F")]
		ToFirst,
		[Token(Token = "0x4000B10")]
		ToLast
	}
	[Token(Token = "0x20001F3")]
	public class SelectedResponseEventArgs : EventArgs
	{
		[Token(Token = "0x4000B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Response response;

		[Token(Token = "0x1700020A")]
		public DialogueEntry DestinationEntry
		{
			[Token(Token = "0x600120F")]
			[Address(RVA = "0x11D3928", Offset = "0x11D3928", VA = "0x11D3928")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001210")]
		[Address(RVA = "0x11D3940", Offset = "0x11D3940", VA = "0x11D3940")]
		public SelectedResponseEventArgs(Response response)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001F4")]
	public class DisplaySettings
	{
		[Serializable]
		[Token(Token = "0x20005CF")]
		public class LocalizationSettings
		{
			[Token(Token = "0x4001D6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA2470C", Offset = "0xA2470C")]
			public string language;

			[Token(Token = "0x4001D6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA24744", Offset = "0xA24744")]
			public bool useSystemLanguage;

			[Token(Token = "0x4001D70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA2477C", Offset = "0xA2477C")]
			public TextTable textTable;

			[Token(Token = "0x60029E1")]
			[Address(RVA = "0x15F4730", Offset = "0x15F4730", VA = "0x15F4730")]
			public LocalizationSettings()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005D0")]
		public class SubtitleSettings
		{
			[Token(Token = "0x20006CF")]
			public enum ContinueButtonMode
			{
				[Token(Token = "0x4002136")]
				Never,
				[Token(Token = "0x4002137")]
				Always,
				[Token(Token = "0x4002138")]
				Optional,
				[Token(Token = "0x4002139")]
				OptionalBeforeResponseMenu,
				[Token(Token = "0x400213A")]
				NotBeforeResponseMenu,
				[Token(Token = "0x400213B")]
				OptionalBeforePCAutoresponseOrMenu,
				[Token(Token = "0x400213C")]
				NotBeforePCAutoresponseOrMenu,
				[Token(Token = "0x400213D")]
				OptionalForPC,
				[Token(Token = "0x400213E")]
				NotForPC,
				[Token(Token = "0x400213F")]
				OptionalForPCOrBeforeResponseMenu,
				[Token(Token = "0x4002140")]
				NotForPCOrBeforeResponseMenu,
				[Token(Token = "0x4002141")]
				OptionalForPCOrBeforePCAutoresponseOrMenu,
				[Token(Token = "0x4002142")]
				NotForPCOrBeforePCAutoresponseOrMenu,
				[Token(Token = "0x4002143")]
				OnlyForPC
			}

			[Token(Token = "0x4001D71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA247B4", Offset = "0xA247B4")]
			public bool showNPCSubtitlesDuringLine;

			[Token(Token = "0x4001D72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA247EC", Offset = "0xA247EC")]
			public bool showNPCSubtitlesWithResponses;

			[Token(Token = "0x4001D73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA24824", Offset = "0xA24824")]
			public bool showPCSubtitlesDuringLine;

			[Token(Token = "0x4001D74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA2485C", Offset = "0xA2485C")]
			public bool allowPCSubtitleReminders;

			[Token(Token = "0x4001D75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA24894", Offset = "0xA24894")]
			public bool skipPCSubtitleAfterResponseMenu;

			[Token(Token = "0x4001D76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA248CC", Offset = "0xA248CC")]
			public float subtitleCharsPerSecond;

			[Token(Token = "0x4001D77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA24904", Offset = "0xA24904")]
			public float minSubtitleSeconds;

			[Token(Token = "0x4001D78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA2493C", Offset = "0xA2493C")]
			public ContinueButtonMode continueButton;

			[Token(Token = "0x4001D79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA24974", Offset = "0xA24974")]
			public bool richTextEmphases;

			[Token(Token = "0x4001D7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA249AC", Offset = "0xA249AC")]
			public bool informSequenceStartAndEnd;

			[Token(Token = "0x60029E2")]
			[Address(RVA = "0x15F470C", Offset = "0x15F470C", VA = "0x15F470C")]
			public SubtitleSettings()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005D1")]
		public class CameraSettings
		{
			[Token(Token = "0x4001D7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA249E4", Offset = "0xA249E4")]
			public Camera sequencerCamera;

			[Token(Token = "0x4001D7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA24A1C", Offset = "0xA24A1C")]
			public GameObject alternateCameraObject;

			[Token(Token = "0x4001D7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA24A54", Offset = "0xA24A54")]
			public GameObject cameraAngles;

			[Token(Token = "0x4001D7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA24A8C", Offset = "0xA24A8C")]
			[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0xA24A8C", Offset = "0xA24A8C")]
			public string defaultSequence;

			[Token(Token = "0x4001D7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA24AD8", Offset = "0xA24AD8")]
			[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0xA24AD8", Offset = "0xA24AD8")]
			public string defaultPlayerSequence;

			[Token(Token = "0x4001D80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA24B24", Offset = "0xA24B24")]
			[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0xA24B24", Offset = "0xA24B24")]
			public string defaultResponseMenuSequence;

			[Token(Token = "0x4001D81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA24B70", Offset = "0xA24B70")]
			public EntrytagFormat entrytagFormat;

			[Token(Token = "0x4001D82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			[HideInInspector]
			public bool disableInternalSequencerCommands;

			[Token(Token = "0x60029E3")]
			[Address(RVA = "0x15F4558", Offset = "0x15F4558", VA = "0x15F4558")]
			public CameraSettings()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005D2")]
		public class InputSettings
		{
			[Token(Token = "0x4001D83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA24BB8", Offset = "0xA24BB8")]
			public bool alwaysForceResponseMenu;

			[Token(Token = "0x4001D84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA24BF0", Offset = "0xA24BF0")]
			public bool includeInvalidEntries;

			[Token(Token = "0x4001D85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA24C28", Offset = "0xA24C28")]
			public float responseTimeout;

			[Token(Token = "0x4001D86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA24C60", Offset = "0xA24C60")]
			public ResponseTimeoutAction responseTimeoutAction;

			[Token(Token = "0x4001D87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA24C98", Offset = "0xA24C98")]
			public EmTag emTagForOldResponses;

			[Token(Token = "0x4001D88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA24CD0", Offset = "0xA24CD0")]
			public EmTag emTagForInvalidResponses;

			[Token(Token = "0x4001D89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA24D08", Offset = "0xA24D08")]
			public string[] qteButtons;

			[Token(Token = "0x4001D8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA24D40", Offset = "0xA24D40")]
			public InputTrigger cancel;

			[Token(Token = "0x4001D8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA24D78", Offset = "0xA24D78")]
			public InputTrigger cancelConversation;

			[Token(Token = "0x60029E4")]
			[Address(RVA = "0x15F45D4", Offset = "0x15F45D4", VA = "0x15F45D4")]
			public InputSettings()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005D3")]
		public class BarkSettings
		{
			[Token(Token = "0x4001D8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA24DB0", Offset = "0xA24DB0")]
			public bool allowBarksDuringConversations;

			[Token(Token = "0x4001D8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA24DE8", Offset = "0xA24DE8")]
			public float barkCharsPerSecond;

			[Token(Token = "0x4001D8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA24E20", Offset = "0xA24E20")]
			public float minBarkSeconds;

			[Token(Token = "0x60029E5")]
			[Address(RVA = "0x15FE12C", Offset = "0x15FE12C", VA = "0x15FE12C")]
			public BarkSettings()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005D4")]
		public class AlertSettings
		{
			[Token(Token = "0x4001D8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA24E58", Offset = "0xA24E58")]
			public bool allowAlertsDuringConversations;

			[Token(Token = "0x4001D90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA24E90", Offset = "0xA24E90")]
			public float alertCheckFrequency;

			[Token(Token = "0x4001D91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA24EC8", Offset = "0xA24EC8")]
			public float alertCharsPerSecond;

			[Token(Token = "0x4001D92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA24F00", Offset = "0xA24F00")]
			public float minAlertSeconds;

			[Token(Token = "0x60029E6")]
			[Address(RVA = "0x15FE13C", Offset = "0x15FE13C", VA = "0x15FE13C")]
			public AlertSettings()
			{
			}
		}

		[Token(Token = "0x4000B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public ConversationOverrideDisplaySettings conversationOverrideSettings;

		[Token(Token = "0x4000B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA180C8", Offset = "0xA180C8")]
		public GameObject dialogueUI;

		[Token(Token = "0x4000B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocalizationSettings localizationSettings;

		[Token(Token = "0x4000B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SubtitleSettings subtitleSettings;

		[Token(Token = "0x4000B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public CameraSettings cameraSettings;

		[Token(Token = "0x4000B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public InputSettings inputSettings;

		[Token(Token = "0x4000B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public BarkSettings barkSettings;

		[Token(Token = "0x4000B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AlertSettings alertSettings;

		[Token(Token = "0x6001211")]
		[Address(RVA = "0x15FDC7C", Offset = "0x15FDC7C", VA = "0x15FDC7C")]
		public bool ShouldUseOverrides()
		{
			return default(bool);
		}

		[Token(Token = "0x6001212")]
		[Address(RVA = "0x15FDC9C", Offset = "0x15FDC9C", VA = "0x15FDC9C")]
		public bool ShouldUseSubtitleOverrides()
		{
			return default(bool);
		}

		[Token(Token = "0x6001213")]
		[Address(RVA = "0x15FDCC4", Offset = "0x15FDCC4", VA = "0x15FDCC4")]
		public bool GetShowNPCSubtitlesDuringLine()
		{
			return default(bool);
		}

		[Token(Token = "0x6001214")]
		[Address(RVA = "0x15FDD04", Offset = "0x15FDD04", VA = "0x15FDD04")]
		public bool GetShowNPCSubtitlesWithResponses()
		{
			return default(bool);
		}

		[Token(Token = "0x6001215")]
		[Address(RVA = "0x15FDD48", Offset = "0x15FDD48", VA = "0x15FDD48")]
		public bool GetShowPCSubtitlesDuringLine()
		{
			return default(bool);
		}

		[Token(Token = "0x6001216")]
		[Address(RVA = "0x15FDD88", Offset = "0x15FDD88", VA = "0x15FDD88")]
		public bool GetSkipPCSubtitleAfterResponseMenu()
		{
			return default(bool);
		}

		[Token(Token = "0x6001217")]
		[Address(RVA = "0x15FDDC8", Offset = "0x15FDDC8", VA = "0x15FDDC8")]
		public float GetSubtitleCharsPerSecond()
		{
			return default(float);
		}

		[Token(Token = "0x6001218")]
		[Address(RVA = "0x15FDDF8", Offset = "0x15FDDF8", VA = "0x15FDDF8")]
		public float GetMinSubtitleSeconds()
		{
			return default(float);
		}

		[Token(Token = "0x6001219")]
		[Address(RVA = "0x15FDE28", Offset = "0x15FDE28", VA = "0x15FDE28")]
		public SubtitleSettings.ContinueButtonMode GetContinueButtonMode()
		{
			return default(SubtitleSettings.ContinueButtonMode);
		}

		[Token(Token = "0x600121A")]
		[Address(RVA = "0x15FDE58", Offset = "0x15FDE58", VA = "0x15FDE58")]
		public bool ShouldUseSequenceOverrides()
		{
			return default(bool);
		}

		[Token(Token = "0x600121B")]
		[Address(RVA = "0x15FDE80", Offset = "0x15FDE80", VA = "0x15FDE80")]
		public string GetDefaultSequence()
		{
			return null;
		}

		[Token(Token = "0x600121C")]
		[Address(RVA = "0x15FDF18", Offset = "0x15FDF18", VA = "0x15FDF18")]
		public string GetDefaultPlayerSequence()
		{
			return null;
		}

		[Token(Token = "0x600121D")]
		[Address(RVA = "0x15FDFB0", Offset = "0x15FDFB0", VA = "0x15FDFB0")]
		public string GetDefaultResponseMenuSequence()
		{
			return null;
		}

		[Token(Token = "0x600121E")]
		[Address(RVA = "0x15FE048", Offset = "0x15FE048", VA = "0x15FE048")]
		public bool ShouldUseInputOverrides()
		{
			return default(bool);
		}

		[Token(Token = "0x600121F")]
		[Address(RVA = "0x15FE070", Offset = "0x15FE070", VA = "0x15FE070")]
		public bool GetAlwaysForceResponseMenu()
		{
			return default(bool);
		}

		[Token(Token = "0x6001220")]
		[Address(RVA = "0x15FE0B0", Offset = "0x15FE0B0", VA = "0x15FE0B0")]
		public bool GetIncludeInvalidEntries()
		{
			return default(bool);
		}

		[Token(Token = "0x6001221")]
		[Address(RVA = "0x15FE0F0", Offset = "0x15FE0F0", VA = "0x15FE0F0")]
		public float GetResponseTimeout()
		{
			return default(float);
		}

		[Token(Token = "0x6001222")]
		[Address(RVA = "0x15F4434", Offset = "0x15F4434", VA = "0x15F4434")]
		public DisplaySettings()
		{
		}
	}
	[Token(Token = "0x20001F5")]
	public enum ResponseTimeoutAction
	{
		[Token(Token = "0x4000B1B")]
		ChooseFirstResponse,
		[Token(Token = "0x4000B1C")]
		ChooseRandomResponse,
		[Token(Token = "0x4000B1D")]
		EndConversation,
		[Token(Token = "0x4000B1E")]
		ChooseCurrentResponse,
		[Token(Token = "0x4000B1F")]
		ChooseLastResponse,
		[Token(Token = "0x4000B20")]
		Custom
	}
	[Token(Token = "0x20001F6")]
	public enum EmTag
	{
		[Token(Token = "0x4000B22")]
		None,
		[Token(Token = "0x4000B23")]
		Em1,
		[Token(Token = "0x4000B24")]
		Em2,
		[Token(Token = "0x4000B25")]
		Em3,
		[Token(Token = "0x4000B26")]
		Em4
	}
	[Serializable]
	[Token(Token = "0x20001F7")]
	public class InputTrigger
	{
		[Token(Token = "0x4000B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18100", Offset = "0xA18100")]
		public KeyCode key;

		[Token(Token = "0x4000B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18138", Offset = "0xA18138")]
		public string buttonName;

		[Token(Token = "0x1700020B")]
		public bool isDown
		{
			[Token(Token = "0x6001227")]
			[Address(RVA = "0x1719660", Offset = "0x1719660", VA = "0x1719660")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700020C")]
		public bool IsDown
		{
			[Token(Token = "0x6001228")]
			[Address(RVA = "0x1719760", Offset = "0x1719760", VA = "0x1719760")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001223")]
		[Address(RVA = "0x171949C", Offset = "0x171949C", VA = "0x171949C")]
		public InputTrigger()
		{
		}

		[Token(Token = "0x6001224")]
		[Address(RVA = "0x17194FC", Offset = "0x17194FC", VA = "0x17194FC")]
		public InputTrigger(KeyCode key)
		{
		}

		[Token(Token = "0x6001225")]
		[Address(RVA = "0x1719570", Offset = "0x1719570", VA = "0x1719570")]
		public InputTrigger(string buttonName)
		{
		}

		[Token(Token = "0x6001226")]
		[Address(RVA = "0x17195E4", Offset = "0x17195E4", VA = "0x17195E4")]
		public InputTrigger(KeyCode key, string buttonName)
		{
		}
	}
	[Token(Token = "0x20001F8")]
	public delegate void DialogueEntrySpokenDelegate(Subtitle subtitle);
	[Token(Token = "0x20001F9")]
	public delegate float GetDefaultSubtitleDurationDelegate(string text);
	[Token(Token = "0x20001FA")]
	public class ConversationView : MonoBehaviour
	{
		[Token(Token = "0x20005D5")]
		private delegate bool IsCancelKeyDownDelegate();

		[Token(Token = "0x4000B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static GetDefaultSubtitleDurationDelegate overrideGetDefaultSubtitleDuration;

		[Token(Token = "0x4000B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private IDialogueUI ui;

		[Token(Token = "0x4000B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Sequencer m_sequencer;

		[Token(Token = "0x4000B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private DisplaySettings settings;

		[Token(Token = "0x4000B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Subtitle lastNPCSubtitle;

		[Token(Token = "0x4000B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Subtitle lastPCSubtitle;

		[Token(Token = "0x4000B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Subtitle lastSubtitle;

		[Token(Token = "0x4000B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private IsCancelKeyDownDelegate IsCancelKeyDown;

		[Token(Token = "0x4000B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Action CancelledHandler;

		[Token(Token = "0x4000B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private DialogueEntrySpokenDelegate dialogueEntrySpokenHandler;

		[Token(Token = "0x4000B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool waitForContinue;

		[Token(Token = "0x4000B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool notifyOnFinishSubtitle;

		[Token(Token = "0x4000B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		private bool isPlayingResponseMenuSequence;

		[Token(Token = "0x4000B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int initialFrameCount;

		[Token(Token = "0x4000B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Subtitle _subtitle;

		[Token(Token = "0x4000B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool _isPCResponseMenuNext;

		[Token(Token = "0x4000B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		private bool _isPCAutoResponseNext;

		[Token(Token = "0x4000B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
		private bool _lastModeWasResponseMenu;

		[Token(Token = "0x1700020D")]
		public DisplaySettings displaySettings
		{
			[Token(Token = "0x6001235")]
			[Address(RVA = "0x147375C", Offset = "0x147375C", VA = "0x147375C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020E")]
		public bool isWaitingForContinue
		{
			[Token(Token = "0x6001236")]
			[Address(RVA = "0x1473764", Offset = "0x1473764", VA = "0x1473764")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700020F")]
		public Sequencer sequencer
		{
			[Token(Token = "0x6001237")]
			[Address(RVA = "0x147376C", Offset = "0x147376C", VA = "0x147376C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400000C")]
		public event EventHandler FinishedSubtitleHandler
		{
			[Token(Token = "0x6001231")]
			[Address(RVA = "0x1469640", Offset = "0x1469640", VA = "0x1469640")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A5CC", Offset = "0xA2A5CC")]
			add
			{
			}
			[Token(Token = "0x6001232")]
			[Address(RVA = "0x1469DFC", Offset = "0x1469DFC", VA = "0x1469DFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A5DC", Offset = "0xA2A5DC")]
			remove
			{
			}
		}

		[Token(Token = "0x1400000D")]
		public event EventHandler<SelectedResponseEventArgs> SelectedResponseHandler
		{
			[Token(Token = "0x6001233")]
			[Address(RVA = "0x14696E4", Offset = "0x14696E4", VA = "0x14696E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A5EC", Offset = "0xA2A5EC")]
			add
			{
			}
			[Token(Token = "0x6001234")]
			[Address(RVA = "0x1469EA0", Offset = "0x1469EA0", VA = "0x1469EA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A5FC", Offset = "0xA2A5FC")]
			remove
			{
			}
		}

		[Token(Token = "0x6001238")]
		[Address(RVA = "0x1473774", Offset = "0x1473774", VA = "0x1473774")]
		public void Initialize(IDialogueUI ui, Sequencer sequencer, DisplaySettings displaySettings, DialogueEntrySpokenDelegate dialogueEntrySpokenHandler)
		{
		}

		[Token(Token = "0x6001239")]
		[Address(RVA = "0x1469F44", Offset = "0x1469F44", VA = "0x1469F44")]
		public void Close()
		{
		}

		[Token(Token = "0x600123A")]
		[Address(RVA = "0x1473940", Offset = "0x1473940", VA = "0x1473940")]
		public void Update()
		{
		}

		[Token(Token = "0x600123B")]
		[Address(RVA = "0x1473984", Offset = "0x1473984", VA = "0x1473984")]
		private bool Cancelled()
		{
			return default(bool);
		}

		[Token(Token = "0x600123C")]
		[Address(RVA = "0x1473BAC", Offset = "0x1473BAC", VA = "0x1473BAC")]
		private bool IsSubtitleCancelKeyDown()
		{
			return default(bool);
		}

		[Token(Token = "0x600123D")]
		[Address(RVA = "0x1473BDC", Offset = "0x1473BDC", VA = "0x1473BDC")]
		private bool IsConversationCancelKeyDown()
		{
			return default(bool);
		}

		[Token(Token = "0x600123E")]
		[Address(RVA = "0x146AA54", Offset = "0x146AA54", VA = "0x146AA54")]
		public void StartSubtitle(Subtitle subtitle, bool isPCResponseMenuNext, bool isPCAutoResponseNext)
		{
		}

		[Token(Token = "0x600123F")]
		[Address(RVA = "0x14744E8", Offset = "0x14744E8", VA = "0x14744E8")]
		public void SetupContinueButton()
		{
		}

		[Token(Token = "0x6001240")]
		[Address(RVA = "0x1473D94", Offset = "0x1473D94", VA = "0x1473D94")]
		private void SetupContinueButton(Subtitle subtitle, bool isPCResponseMenuNext, bool isPCAutoResponseNext)
		{
		}

		[Token(Token = "0x6001241")]
		[Address(RVA = "0x14744F8", Offset = "0x14744F8", VA = "0x14744F8")]
		private bool ShouldWaitForContinueButton(bool isPCLine, bool isPCResponseMenuNext, bool isPCAutoResponseNext)
		{
			return default(bool);
		}

		[Token(Token = "0x6001242")]
		[Address(RVA = "0x147459C", Offset = "0x147459C", VA = "0x147459C")]
		private bool ShouldShowContinueButton(bool isPCLine, bool isPCResponseMenuNext, bool isPCAutoResponseNext)
		{
			return default(bool);
		}

		[Token(Token = "0x6001243")]
		[Address(RVA = "0x146A7E4", Offset = "0x146A7E4", VA = "0x146A7E4")]
		public void ShowLastNPCSubtitle()
		{
		}

		[Token(Token = "0x6001244")]
		[Address(RVA = "0x147463C", Offset = "0x147463C", VA = "0x147463C")]
		private bool ShouldShowLastNPCSubtitle()
		{
			return default(bool);
		}

		[Token(Token = "0x6001245")]
		[Address(RVA = "0x1474694", Offset = "0x1474694", VA = "0x1474694")]
		private bool ShouldShowLastPCSubtitle()
		{
			return default(bool);
		}

		[Token(Token = "0x6001246")]
		[Address(RVA = "0x1473C6C", Offset = "0x1473C6C", VA = "0x1473C6C")]
		private bool ShouldShowSubtitle(Subtitle subtitle)
		{
			return default(bool);
		}

		[Token(Token = "0x6001247")]
		[Address(RVA = "0x1474710", Offset = "0x1474710", VA = "0x1474710")]
		public void OnConversationContinue(IDialogueUI dialogueUI)
		{
		}

		[Token(Token = "0x6001248")]
		[Address(RVA = "0x147480C", Offset = "0x147480C", VA = "0x147480C")]
		public void OnConversationContinueAll()
		{
		}

		[Token(Token = "0x6001249")]
		[Address(RVA = "0x1474724", Offset = "0x1474724", VA = "0x1474724")]
		private void HandleContinueButtonClick()
		{
		}

		[Token(Token = "0x600124A")]
		[Address(RVA = "0x1474810", Offset = "0x1474810", VA = "0x1474810")]
		private void OnCancelSubtitle()
		{
		}

		[Token(Token = "0x600124B")]
		[Address(RVA = "0x1474350", Offset = "0x1474350", VA = "0x1474350")]
		private void FinishSubtitle()
		{
		}

		[Token(Token = "0x600124C")]
		[Address(RVA = "0x1474944", Offset = "0x1474944", VA = "0x1474944")]
		private void OnFinishedSubtitle()
		{
		}

		[Token(Token = "0x600124D")]
		[Address(RVA = "0x146B168", Offset = "0x146B168", VA = "0x146B168")]
		public void StartResponses(Subtitle subtitle, Response[] responses)
		{
		}

		[Token(Token = "0x600124E")]
		[Address(RVA = "0x1474948", Offset = "0x1474948", VA = "0x1474948")]
		private void PlayResponseMenuSequence(string responseMenuSequence)
		{
		}

		[Token(Token = "0x600124F")]
		[Address(RVA = "0x1474C10", Offset = "0x1474C10", VA = "0x1474C10")]
		private void StopResponseMenuSequence()
		{
		}

		[Token(Token = "0x6001250")]
		[Address(RVA = "0x1474CD8", Offset = "0x1474CD8", VA = "0x1474CD8")]
		private void OnCancelResponseMenu()
		{
		}

		[Token(Token = "0x6001251")]
		[Address(RVA = "0x1474F54", Offset = "0x1474F54", VA = "0x1474F54")]
		private void OnSelectedResponse(object sender, SelectedResponseEventArgs e)
		{
		}

		[Token(Token = "0x6001252")]
		[Address(RVA = "0x146B418", Offset = "0x146B418", VA = "0x146B418")]
		public void SelectResponse(SelectedResponseEventArgs e)
		{
		}

		[Token(Token = "0x6001253")]
		[Address(RVA = "0x1473FA8", Offset = "0x1473FA8", VA = "0x1473FA8")]
		public string GetDefaultSequence(Subtitle subtitle)
		{
			return null;
		}

		[Token(Token = "0x6001254")]
		[Address(RVA = "0x1473F30", Offset = "0x1473F30", VA = "0x1473F30")]
		public float GetDefaultSubtitleDuration(string text)
		{
			return default(float);
		}

		[Token(Token = "0x6001255")]
		[Address(RVA = "0x1474F5C", Offset = "0x1474F5C", VA = "0x1474F5C")]
		public static float GetDefaultSubtitleDurationInSeconds(string text, [Optional] DisplaySettings displaySettings)
		{
			return default(float);
		}

		[Token(Token = "0x6001256")]
		[Address(RVA = "0x1474214", Offset = "0x1474214", VA = "0x1474214")]
		private string PreprocessSequence(Subtitle subtitle)
		{
			return null;
		}

		[Token(Token = "0x6001257")]
		[Address(RVA = "0x1473C0C", Offset = "0x1473C0C", VA = "0x1473C0C")]
		private void NotifyParticipantsOnConversationLine(Subtitle subtitle)
		{
		}

		[Token(Token = "0x6001258")]
		[Address(RVA = "0x14748E4", Offset = "0x14748E4", VA = "0x14748E4")]
		private void NotifyParticipantsOnConversationLineEnd(Subtitle subtitle)
		{
		}

		[Token(Token = "0x6001259")]
		[Address(RVA = "0x14751E0", Offset = "0x14751E0", VA = "0x14751E0")]
		private void NotifyParticipants(string message, Subtitle subtitle)
		{
		}

		[Token(Token = "0x600125A")]
		[Address(RVA = "0x1474A58", Offset = "0x1474A58", VA = "0x1474A58")]
		private void NotifyOnResponseMenu(Response[] responses)
		{
		}

		[Token(Token = "0x600125B")]
		[Address(RVA = "0x1474D48", Offset = "0x1474D48", VA = "0x1474D48")]
		private void NotifyParticipantsOnConversationCancelled()
		{
		}

		[Token(Token = "0x600125C")]
		[Address(RVA = "0x1475358", Offset = "0x1475358", VA = "0x1475358")]
		private bool CharacterInfoHasValidTransform(CharacterInfo characterInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x600125D")]
		[Address(RVA = "0x146A6CC", Offset = "0x146A6CC", VA = "0x146A6CC")]
		public void SetPCPortrait(Sprite pcSprite, string pcName)
		{
		}

		[Token(Token = "0x600125E")]
		[Address(RVA = "0x146BA6C", Offset = "0x146BA6C", VA = "0x146BA6C")]
		public void SetActorPortraitSprite(string actorName, Sprite sprite)
		{
		}

		[Token(Token = "0x600125F")]
		[Address(RVA = "0x14753DC", Offset = "0x14753DC", VA = "0x14753DC")]
		public ConversationView()
		{
		}
	}
	[Token(Token = "0x20001FB")]
	public class ActiveConversationRecord
	{
		[Token(Token = "0x4000B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA18190", Offset = "0xA18190")]
		private Transform <actor>k__BackingField;

		[Token(Token = "0x4000B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA181A0", Offset = "0xA181A0")]
		private Transform <conversant>k__BackingField;

		[Token(Token = "0x4000B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA181B0", Offset = "0xA181B0")]
		private ConversationController <conversationController>k__BackingField;

		[Token(Token = "0x4000B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IDialogueUI originalDialogueUI;

		[Token(Token = "0x4000B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public DisplaySettings originalDisplaySettings;

		[Token(Token = "0x4000B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool isOverrideUIPrefab;

		[Token(Token = "0x17000210")]
		public Transform actor
		{
			[Token(Token = "0x6001261")]
			[Address(RVA = "0x1427580", Offset = "0x1427580", VA = "0x1427580")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A60C", Offset = "0xA2A60C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001262")]
			[Address(RVA = "0x1427588", Offset = "0x1427588", VA = "0x1427588")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A61C", Offset = "0xA2A61C")]
			set
			{
			}
		}

		[Token(Token = "0x17000211")]
		public Transform conversant
		{
			[Token(Token = "0x6001263")]
			[Address(RVA = "0x1427590", Offset = "0x1427590", VA = "0x1427590")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A62C", Offset = "0xA2A62C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001264")]
			[Address(RVA = "0x1427598", Offset = "0x1427598", VA = "0x1427598")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A63C", Offset = "0xA2A63C")]
			set
			{
			}
		}

		[Token(Token = "0x17000212")]
		public ConversationController conversationController
		{
			[Token(Token = "0x6001265")]
			[Address(RVA = "0x14275A0", Offset = "0x14275A0", VA = "0x14275A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A64C", Offset = "0xA2A64C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001266")]
			[Address(RVA = "0x14275A8", Offset = "0x14275A8", VA = "0x14275A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A65C", Offset = "0xA2A65C")]
			set
			{
			}
		}

		[Token(Token = "0x17000213")]
		public ConversationModel conversationModel
		{
			[Token(Token = "0x6001267")]
			[Address(RVA = "0x14275B0", Offset = "0x14275B0", VA = "0x14275B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000214")]
		public ConversationView conversationView
		{
			[Token(Token = "0x6001268")]
			[Address(RVA = "0x14275C8", Offset = "0x14275C8", VA = "0x14275C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000215")]
		public bool isConversationActive
		{
			[Token(Token = "0x6001269")]
			[Address(RVA = "0x14275E0", Offset = "0x14275E0", VA = "0x14275E0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000216")]
		public Transform Actor
		{
			[Token(Token = "0x600126A")]
			[Address(RVA = "0x1427600", Offset = "0x1427600", VA = "0x1427600")]
			get
			{
				return null;
			}
			[Token(Token = "0x600126B")]
			[Address(RVA = "0x1427608", Offset = "0x1427608", VA = "0x1427608")]
			set
			{
			}
		}

		[Token(Token = "0x17000217")]
		public Transform Conversant
		{
			[Token(Token = "0x600126C")]
			[Address(RVA = "0x1427610", Offset = "0x1427610", VA = "0x1427610")]
			get
			{
				return null;
			}
			[Token(Token = "0x600126D")]
			[Address(RVA = "0x1427618", Offset = "0x1427618", VA = "0x1427618")]
			set
			{
			}
		}

		[Token(Token = "0x17000218")]
		public ConversationController ConversationController
		{
			[Token(Token = "0x600126E")]
			[Address(RVA = "0x1427620", Offset = "0x1427620", VA = "0x1427620")]
			get
			{
				return null;
			}
			[Token(Token = "0x600126F")]
			[Address(RVA = "0x1427628", Offset = "0x1427628", VA = "0x1427628")]
			set
			{
			}
		}

		[Token(Token = "0x17000219")]
		public ConversationModel ConversationModel
		{
			[Token(Token = "0x6001270")]
			[Address(RVA = "0x1427630", Offset = "0x1427630", VA = "0x1427630")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021A")]
		public ConversationView ConversationView
		{
			[Token(Token = "0x6001271")]
			[Address(RVA = "0x1427648", Offset = "0x1427648", VA = "0x1427648")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021B")]
		public bool IsConversationActive
		{
			[Token(Token = "0x6001272")]
			[Address(RVA = "0x1427660", Offset = "0x1427660", VA = "0x1427660")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001273")]
		[Address(RVA = "0x1427680", Offset = "0x1427680", VA = "0x1427680")]
		public ActiveConversationRecord()
		{
		}
	}
	[Token(Token = "0x20001FC")]
	public class AssetBundleManager
	{
		[Token(Token = "0x4000B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private HashSet<AssetBundle> m_bundles;

		[Token(Token = "0x6001274")]
		[Address(RVA = "0x1429C70", Offset = "0x1429C70", VA = "0x1429C70")]
		public void RegisterAssetBundle(AssetBundle bundle)
		{
		}

		[Token(Token = "0x6001275")]
		[Address(RVA = "0x1429D1C", Offset = "0x1429D1C", VA = "0x1429D1C")]
		public void UnregisterAssetBundle(AssetBundle bundle)
		{
		}

		[Token(Token = "0x6001276")]
		[Address(RVA = "0x1429DC8", Offset = "0x1429DC8", VA = "0x1429DC8")]
		public UnityEngine.Object Load(string name)
		{
			return null;
		}

		[Token(Token = "0x6001277")]
		[Address(RVA = "0x1429F38", Offset = "0x1429F38", VA = "0x1429F38")]
		public UnityEngine.Object Load(string name, Type type)
		{
			return null;
		}

		[Token(Token = "0x6001278")]
		[Address(RVA = "0x1429F18", Offset = "0x1429F18", VA = "0x1429F18")]
		private UnityEngine.Object LoadFromBundle(AssetBundle bundle, string name)
		{
			return null;
		}

		[Token(Token = "0x6001279")]
		[Address(RVA = "0x142A094", Offset = "0x142A094", VA = "0x142A094")]
		private UnityEngine.Object LoadFromBundle(AssetBundle bundle, string name, Type type)
		{
			return null;
		}

		[Token(Token = "0x600127A")]
		[Address(RVA = "0x142A0B8", Offset = "0x142A0B8", VA = "0x142A0B8")]
		public AssetBundleManager()
		{
		}
	}
	[Token(Token = "0x20001FD")]
	public static class DialogueManager
	{
		[Token(Token = "0x4000B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static DialogueSystemController m_instance;

		[Token(Token = "0x1700021C")]
		public static DialogueSystemController instance
		{
			[Token(Token = "0x600127B")]
			[Address(RVA = "0x15EB8A4", Offset = "0x15EB8A4", VA = "0x15EB8A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021D")]
		public static bool hasInstance
		{
			[Token(Token = "0x600127C")]
			[Address(RVA = "0x15EB9C4", Offset = "0x15EB9C4", VA = "0x15EB9C4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700021E")]
		public static DatabaseManager databaseManager
		{
			[Token(Token = "0x600127D")]
			[Address(RVA = "0x15EBA58", Offset = "0x15EBA58", VA = "0x15EBA58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021F")]
		public static DialogueDatabase masterDatabase
		{
			[Token(Token = "0x600127E")]
			[Address(RVA = "0x15E7A04", Offset = "0x15E7A04", VA = "0x15E7A04")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000220")]
		public static IDialogueUI dialogueUI
		{
			[Token(Token = "0x600127F")]
			[Address(RVA = "0x15EBB08", Offset = "0x15EBB08", VA = "0x15EBB08")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001280")]
			[Address(RVA = "0x15EBC00", Offset = "0x15EBC00", VA = "0x15EBC00")]
			set
			{
			}
		}

		[Token(Token = "0x17000221")]
		public static DisplaySettings displaySettings
		{
			[Token(Token = "0x6001281")]
			[Address(RVA = "0x15EBC74", Offset = "0x15EBC74", VA = "0x15EBC74")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000222")]
		public static bool isConversationActive
		{
			[Token(Token = "0x6001282")]
			[Address(RVA = "0x15EBD08", Offset = "0x15EBD08", VA = "0x15EBD08")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000223")]
		public static bool allowSimultaneousConversations
		{
			[Token(Token = "0x6001283")]
			[Address(RVA = "0x15EBDCC", Offset = "0x15EBDCC", VA = "0x15EBDCC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000224")]
		public static IsDialogueEntryValidDelegate isDialogueEntryValid
		{
			[Token(Token = "0x6001284")]
			[Address(RVA = "0x15EBE68", Offset = "0x15EBE68", VA = "0x15EBE68")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001285")]
			[Address(RVA = "0x15EBEFC", Offset = "0x15EBEFC", VA = "0x15EBEFC")]
			set
			{
			}
		}

		[Token(Token = "0x17000225")]
		public static GetInputButtonDownDelegate getInputButtonDown
		{
			[Token(Token = "0x6001286")]
			[Address(RVA = "0x15EBFA8", Offset = "0x15EBFA8", VA = "0x15EBFA8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001287")]
			[Address(RVA = "0x15EC03C", Offset = "0x15EC03C", VA = "0x15EC03C")]
			set
			{
			}
		}

		[Token(Token = "0x17000226")]
		public static Transform currentActor
		{
			[Token(Token = "0x6001288")]
			[Address(RVA = "0x15EC0AC", Offset = "0x15EC0AC", VA = "0x15EC0AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000227")]
		public static Transform currentConversant
		{
			[Token(Token = "0x6001289")]
			[Address(RVA = "0x15EC140", Offset = "0x15EC140", VA = "0x15EC140")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000228")]
		public static ConversationState currentConversationState
		{
			[Token(Token = "0x600128A")]
			[Address(RVA = "0x15EC1D4", Offset = "0x15EC1D4", VA = "0x15EC1D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000229")]
		public static string lastConversationStarted
		{
			[Token(Token = "0x600128B")]
			[Address(RVA = "0x15EC268", Offset = "0x15EC268", VA = "0x15EC268")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022A")]
		public static int lastConversationID
		{
			[Token(Token = "0x600128C")]
			[Address(RVA = "0x15EC30C", Offset = "0x15EC30C", VA = "0x15EC30C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700022B")]
		public static ConversationController conversationController
		{
			[Token(Token = "0x600128D")]
			[Address(RVA = "0x15EC3A0", Offset = "0x15EC3A0", VA = "0x15EC3A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022C")]
		public static ConversationModel conversationModel
		{
			[Token(Token = "0x600128E")]
			[Address(RVA = "0x15EC434", Offset = "0x15EC434", VA = "0x15EC434")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022D")]
		public static ConversationView conversationView
		{
			[Token(Token = "0x600128F")]
			[Address(RVA = "0x15EC4E8", Offset = "0x15EC4E8", VA = "0x15EC4E8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022E")]
		public static DialogueDebug.DebugLevel debugLevel
		{
			[Token(Token = "0x6001290")]
			[Address(RVA = "0x15EC59C", Offset = "0x15EC59C", VA = "0x15EC59C")]
			get
			{
				return default(DialogueDebug.DebugLevel);
			}
			[Token(Token = "0x6001291")]
			[Address(RVA = "0x15EC694", Offset = "0x15EC694", VA = "0x15EC694")]
			set
			{
			}
		}

		[Token(Token = "0x1700022F")]
		public static bool allowLuaExceptions
		{
			[Token(Token = "0x6001292")]
			[Address(RVA = "0x15EC794", Offset = "0x15EC794", VA = "0x15EC794")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001293")]
			[Address(RVA = "0x15EC830", Offset = "0x15EC830", VA = "0x15EC830")]
			set
			{
			}
		}

		[Token(Token = "0x17000230")]
		public static DialogueSystemController Instance
		{
			[Token(Token = "0x6001294")]
			[Address(RVA = "0x15EC8A4", Offset = "0x15EC8A4", VA = "0x15EC8A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000231")]
		public static bool HasInstance
		{
			[Token(Token = "0x6001295")]
			[Address(RVA = "0x15EC900", Offset = "0x15EC900", VA = "0x15EC900")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000232")]
		public static DatabaseManager DatabaseManager
		{
			[Token(Token = "0x6001296")]
			[Address(RVA = "0x15EC95C", Offset = "0x15EC95C", VA = "0x15EC95C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000233")]
		public static DialogueDatabase MasterDatabase
		{
			[Token(Token = "0x6001297")]
			[Address(RVA = "0x15E7C78", Offset = "0x15E7C78", VA = "0x15E7C78")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000234")]
		public static IDialogueUI DialogueUI
		{
			[Token(Token = "0x6001298")]
			[Address(RVA = "0x15EC9B8", Offset = "0x15EC9B8", VA = "0x15EC9B8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001299")]
			[Address(RVA = "0x15ECA14", Offset = "0x15ECA14", VA = "0x15ECA14")]
			set
			{
			}
		}

		[Token(Token = "0x17000235")]
		public static DisplaySettings DisplaySettings
		{
			[Token(Token = "0x600129A")]
			[Address(RVA = "0x15ECA78", Offset = "0x15ECA78", VA = "0x15ECA78")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000236")]
		public static bool IsConversationActive
		{
			[Token(Token = "0x600129B")]
			[Address(RVA = "0x15ECAD4", Offset = "0x15ECAD4", VA = "0x15ECAD4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000237")]
		public static bool AllowSimultaneousConversations
		{
			[Token(Token = "0x600129C")]
			[Address(RVA = "0x15ECB30", Offset = "0x15ECB30", VA = "0x15ECB30")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000238")]
		public static IsDialogueEntryValidDelegate IsDialogueEntryValid
		{
			[Token(Token = "0x600129D")]
			[Address(RVA = "0x15ECB8C", Offset = "0x15ECB8C", VA = "0x15ECB8C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600129E")]
			[Address(RVA = "0x15ECBE8", Offset = "0x15ECBE8", VA = "0x15ECBE8")]
			set
			{
			}
		}

		[Token(Token = "0x17000239")]
		public static GetInputButtonDownDelegate GetInputButtonDown
		{
			[Token(Token = "0x600129F")]
			[Address(RVA = "0x15ECC4C", Offset = "0x15ECC4C", VA = "0x15ECC4C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012A0")]
			[Address(RVA = "0x15ECCA8", Offset = "0x15ECCA8", VA = "0x15ECCA8")]
			set
			{
			}
		}

		[Token(Token = "0x1700023A")]
		public static Transform CurrentActor
		{
			[Token(Token = "0x60012A1")]
			[Address(RVA = "0x15ECD0C", Offset = "0x15ECD0C", VA = "0x15ECD0C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023B")]
		public static Transform CurrentConversant
		{
			[Token(Token = "0x60012A2")]
			[Address(RVA = "0x15ECD68", Offset = "0x15ECD68", VA = "0x15ECD68")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023C")]
		public static ConversationState CurrentConversationState
		{
			[Token(Token = "0x60012A3")]
			[Address(RVA = "0x15ECDC4", Offset = "0x15ECDC4", VA = "0x15ECDC4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023D")]
		public static string LastConversationStarted
		{
			[Token(Token = "0x60012A4")]
			[Address(RVA = "0x15ECE20", Offset = "0x15ECE20", VA = "0x15ECE20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023E")]
		public static int LastConversationID
		{
			[Token(Token = "0x60012A5")]
			[Address(RVA = "0x15ECE7C", Offset = "0x15ECE7C", VA = "0x15ECE7C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700023F")]
		public static ConversationController ConversationController
		{
			[Token(Token = "0x60012A6")]
			[Address(RVA = "0x15ECED8", Offset = "0x15ECED8", VA = "0x15ECED8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000240")]
		public static ConversationModel ConversationModel
		{
			[Token(Token = "0x60012A7")]
			[Address(RVA = "0x15ECF34", Offset = "0x15ECF34", VA = "0x15ECF34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000241")]
		public static ConversationView ConversationView
		{
			[Token(Token = "0x60012A8")]
			[Address(RVA = "0x15ECF90", Offset = "0x15ECF90", VA = "0x15ECF90")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000242")]
		public static DialogueDebug.DebugLevel DebugLevel
		{
			[Token(Token = "0x60012A9")]
			[Address(RVA = "0x15ECFEC", Offset = "0x15ECFEC", VA = "0x15ECFEC")]
			get
			{
				return default(DialogueDebug.DebugLevel);
			}
			[Token(Token = "0x60012AA")]
			[Address(RVA = "0x15ED048", Offset = "0x15ED048", VA = "0x15ED048")]
			set
			{
			}
		}

		[Token(Token = "0x17000243")]
		public static bool AllowLuaExceptions
		{
			[Token(Token = "0x60012AB")]
			[Address(RVA = "0x15ED0AC", Offset = "0x15ED0AC", VA = "0x15ED0AC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60012AC")]
			[Address(RVA = "0x15ED108", Offset = "0x15ED108", VA = "0x15ED108")]
			set
			{
			}
		}

		[Token(Token = "0x60012AD")]
		[Address(RVA = "0x15ED16C", Offset = "0x15ED16C", VA = "0x15ED16C")]
		public static void SetLanguage(string language)
		{
		}

		[Token(Token = "0x60012AE")]
		[Address(RVA = "0x15ED324", Offset = "0x15ED324", VA = "0x15ED324")]
		public static void SetDialogueSystemInput(bool value)
		{
		}

		[Token(Token = "0x60012AF")]
		[Address(RVA = "0x15ED49C", Offset = "0x15ED49C", VA = "0x15ED49C")]
		public static bool IsDialogueSystemInputDisabled()
		{
			return default(bool);
		}

		[Token(Token = "0x60012B0")]
		[Address(RVA = "0x15ED538", Offset = "0x15ED538", VA = "0x15ED538")]
		public static void AddDatabase(DialogueDatabase database)
		{
		}

		[Token(Token = "0x60012B1")]
		[Address(RVA = "0x15ED5F4", Offset = "0x15ED5F4", VA = "0x15ED5F4")]
		public static void RemoveDatabase(DialogueDatabase database)
		{
		}

		[Token(Token = "0x60012B2")]
		[Address(RVA = "0x15ED6B0", Offset = "0x15ED6B0", VA = "0x15ED6B0")]
		public static void ResetDatabase(DatabaseResetOptions databaseResetOptions)
		{
		}

		[Token(Token = "0x60012B3")]
		[Address(RVA = "0x15ED76C", Offset = "0x15ED76C", VA = "0x15ED76C")]
		public static void ResetDatabase()
		{
		}

		[Token(Token = "0x60012B4")]
		[Address(RVA = "0x15ED828", Offset = "0x15ED828", VA = "0x15ED828")]
		public static void PreloadMasterDatabase()
		{
		}

		[Token(Token = "0x60012B5")]
		[Address(RVA = "0x15EDA44", Offset = "0x15EDA44", VA = "0x15EDA44")]
		public static void PreloadDialogueUI()
		{
		}

		[Token(Token = "0x60012B6")]
		[Address(RVA = "0x15EDBB0", Offset = "0x15EDBB0", VA = "0x15EDBB0")]
		public static bool ConversationHasValidEntry(string title, Transform actor, Transform conversant)
		{
			return default(bool);
		}

		[Token(Token = "0x60012B7")]
		[Address(RVA = "0x15EDD78", Offset = "0x15EDD78", VA = "0x15EDD78")]
		public static bool ConversationHasValidEntry(string title, Transform actor)
		{
			return default(bool);
		}

		[Token(Token = "0x60012B8")]
		[Address(RVA = "0x15EDDF0", Offset = "0x15EDDF0", VA = "0x15EDDF0")]
		public static bool ConversationHasValidEntry(string title)
		{
			return default(bool);
		}

		[Token(Token = "0x60012B9")]
		[Address(RVA = "0x15EDE5C", Offset = "0x15EDE5C", VA = "0x15EDE5C")]
		public static void StartConversation(string title, Transform actor, Transform conversant, int initialDialogueEntryID)
		{
		}

		[Token(Token = "0x60012BA")]
		[Address(RVA = "0x15EE82C", Offset = "0x15EE82C", VA = "0x15EE82C")]
		public static void StartConversation(string title, Transform actor, Transform conversant)
		{
		}

		[Token(Token = "0x60012BB")]
		[Address(RVA = "0x15EE8F0", Offset = "0x15EE8F0", VA = "0x15EE8F0")]
		public static void StartConversation(string title, Transform actor)
		{
		}

		[Token(Token = "0x60012BC")]
		[Address(RVA = "0x15EE9B4", Offset = "0x15EE9B4", VA = "0x15EE9B4")]
		public static void StartConversation(string title)
		{
		}

		[Token(Token = "0x60012BD")]
		[Address(RVA = "0x15EEA5C", Offset = "0x15EEA5C", VA = "0x15EEA5C")]
		public static void StopConversation()
		{
		}

		[Token(Token = "0x60012BE")]
		[Address(RVA = "0x15EEB2C", Offset = "0x15EEB2C", VA = "0x15EEB2C")]
		public static void UpdateResponses()
		{
		}

		[Token(Token = "0x60012BF")]
		[Address(RVA = "0x15EEBE0", Offset = "0x15EEBE0", VA = "0x15EEBE0")]
		public static void Bark(string conversationTitle, Transform speaker, Transform listener, BarkHistory barkHistory)
		{
		}

		[Token(Token = "0x60012C0")]
		[Address(RVA = "0x15EED60", Offset = "0x15EED60", VA = "0x15EED60")]
		public static void Bark(string conversationTitle, Transform speaker, Transform listener)
		{
		}

		[Token(Token = "0x60012C1")]
		[Address(RVA = "0x15EEEA8", Offset = "0x15EEEA8", VA = "0x15EEEA8")]
		public static void Bark(string conversationTitle, Transform speaker)
		{
		}

		[Token(Token = "0x60012C2")]
		[Address(RVA = "0x15EEFDC", Offset = "0x15EEFDC", VA = "0x15EEFDC")]
		public static void Bark(string conversationTitle, Transform speaker, BarkHistory barkHistory)
		{
		}

		[Token(Token = "0x60012C3")]
		[Address(RVA = "0x15EF0A4", Offset = "0x15EF0A4", VA = "0x15EF0A4")]
		public static void BarkString(string barkText, Transform speaker, [Optional] Transform listener, [Optional] string sequence)
		{
		}

		[Token(Token = "0x60012C4")]
		[Address(RVA = "0x15EF568", Offset = "0x15EF568", VA = "0x15EF568")]
		public static float GetBarkDuration(string barkText)
		{
			return default(float);
		}

		[Token(Token = "0x60012C5")]
		[Address(RVA = "0x15EF768", Offset = "0x15EF768", VA = "0x15EF768")]
		public static void ShowAlert(string message, float duration)
		{
		}

		[Token(Token = "0x60012C6")]
		[Address(RVA = "0x15EF9BC", Offset = "0x15EF9BC", VA = "0x15EF9BC")]
		public static void ShowAlert(string message)
		{
		}

		[Token(Token = "0x60012C7")]
		[Address(RVA = "0x15EFBC0", Offset = "0x15EFBC0", VA = "0x15EFBC0")]
		public static void CheckAlerts()
		{
		}

		[Token(Token = "0x60012C8")]
		[Address(RVA = "0x15EFD7C", Offset = "0x15EFD7C", VA = "0x15EFD7C")]
		public static void HideAlert()
		{
		}

		[Token(Token = "0x60012C9")]
		[Address(RVA = "0x15EFEE8", Offset = "0x15EFEE8", VA = "0x15EFEE8")]
		public static string GetLocalizedText(string s)
		{
			return null;
		}

		[Token(Token = "0x60012CA")]
		[Address(RVA = "0x15F0094", Offset = "0x15F0094", VA = "0x15F0094")]
		public static Sequencer PlaySequence(string sequence, Transform speaker, Transform listener, bool informParticipants, bool destroyWhenDone, string entrytag)
		{
			return null;
		}

		[Token(Token = "0x60012CB")]
		[Address(RVA = "0x15F0214", Offset = "0x15F0214", VA = "0x15F0214")]
		public static Sequencer PlaySequence(string sequence, Transform speaker, Transform listener, bool informParticipants, bool destroyWhenDone)
		{
			return null;
		}

		[Token(Token = "0x60012CC")]
		[Address(RVA = "0x15F0384", Offset = "0x15F0384", VA = "0x15F0384")]
		public static Sequencer PlaySequence(string sequence, Transform speaker, Transform listener, bool informParticipants)
		{
			return null;
		}

		[Token(Token = "0x60012CD")]
		[Address(RVA = "0x15F04E0", Offset = "0x15F04E0", VA = "0x15F04E0")]
		public static Sequencer PlaySequence(string sequence, Transform speaker, Transform listener)
		{
			return null;
		}

		[Token(Token = "0x60012CE")]
		[Address(RVA = "0x15F05A8", Offset = "0x15F05A8", VA = "0x15F05A8")]
		public static Sequencer PlaySequence(string sequence)
		{
			return null;
		}

		[Token(Token = "0x60012CF")]
		[Address(RVA = "0x15F0664", Offset = "0x15F0664", VA = "0x15F0664")]
		public static void StopSequence(Sequencer sequencer)
		{
		}

		[Token(Token = "0x60012D0")]
		[Address(RVA = "0x15F0764", Offset = "0x15F0764", VA = "0x15F0764")]
		public static void Pause()
		{
		}

		[Token(Token = "0x60012D1")]
		[Address(RVA = "0x15F0870", Offset = "0x15F0870", VA = "0x15F0870")]
		public static void Unpause()
		{
		}

		[Token(Token = "0x60012D2")]
		[Address(RVA = "0x15F097C", Offset = "0x15F097C", VA = "0x15F097C")]
		public static void UseDialogueUI(GameObject gameObject)
		{
		}

		[Token(Token = "0x60012D3")]
		[Address(RVA = "0x15F0A0C", Offset = "0x15F0A0C", VA = "0x15F0A0C")]
		public static void SetDialoguePanel(bool show, bool immediate = false)
		{
		}

		[Token(Token = "0x60012D4")]
		[Address(RVA = "0x15F0BC8", Offset = "0x15F0BC8", VA = "0x15F0BC8")]
		public static void SetPortrait(string actorName, string portraitName)
		{
		}

		[Token(Token = "0x60012D5")]
		[Address(RVA = "0x15F11A8", Offset = "0x15F11A8", VA = "0x15F11A8")]
		public static void AddLuaObserver(string luaExpression, LuaWatchFrequency frequency, LuaChangedDelegate luaChangedHandler)
		{
		}

		[Token(Token = "0x60012D6")]
		[Address(RVA = "0x15F12A0", Offset = "0x15F12A0", VA = "0x15F12A0")]
		public static void RemoveLuaObserver(string luaExpression, LuaWatchFrequency frequency, LuaChangedDelegate luaChangedHandler)
		{
		}

		[Token(Token = "0x60012D7")]
		[Address(RVA = "0x15F1380", Offset = "0x15F1380", VA = "0x15F1380")]
		public static void RemoveAllObservers(LuaWatchFrequency frequency)
		{
		}

		[Token(Token = "0x60012D8")]
		[Address(RVA = "0x15F1444", Offset = "0x15F1444", VA = "0x15F1444")]
		public static void RemoveAllObservers()
		{
		}

		[Token(Token = "0x60012D9")]
		[Address(RVA = "0x15F1500", Offset = "0x15F1500", VA = "0x15F1500")]
		public static void RegisterAssetBundle(AssetBundle bundle)
		{
		}

		[Token(Token = "0x60012DA")]
		[Address(RVA = "0x15F15C4", Offset = "0x15F15C4", VA = "0x15F15C4")]
		public static void UnregisterAssetBundle(AssetBundle bundle)
		{
		}

		[Token(Token = "0x60012DB")]
		[Address(RVA = "0x15F1688", Offset = "0x15F1688", VA = "0x15F1688")]
		public static UnityEngine.Object LoadAsset(string name)
		{
			return null;
		}

		[Token(Token = "0x60012DC")]
		[Address(RVA = "0x15F1750", Offset = "0x15F1750", VA = "0x15F1750")]
		public static UnityEngine.Object LoadAsset(string name, Type type)
		{
			return null;
		}

		[Token(Token = "0x60012DD")]
		[Address(RVA = "0x15F182C", Offset = "0x15F182C", VA = "0x15F182C")]
		public static void LoadAsset(string name, Type type, AssetLoadedDelegate assetLoaded)
		{
		}

		[Token(Token = "0x60012DE")]
		[Address(RVA = "0x15F19BC", Offset = "0x15F19BC", VA = "0x15F19BC")]
		public static void UnloadAsset(object obj)
		{
		}

		[Token(Token = "0x60012DF")]
		[Address(RVA = "0x15F1A48", Offset = "0x15F1A48", VA = "0x15F1A48")]
		public static void SendUpdateTracker()
		{
		}
	}
	[Token(Token = "0x20001FE")]
	public delegate bool GetInputButtonDownDelegate(string buttonName);
	[Token(Token = "0x20001FF")]
	public delegate void TransformDelegate(Transform t);
	[Token(Token = "0x2000200")]
	public delegate void AssetLoadedDelegate(UnityEngine.Object asset);
	[Token(Token = "0x2000201")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA07DE8", Offset = "0xA07DE8")]
	public class DialogueSystemController : MonoBehaviour
	{
		[Token(Token = "0x20005D6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DB08", Offset = "0xA0DB08")]
		private sealed class <>c__DisplayClass167_0
		{
			[Token(Token = "0x4001D93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DialogueSystemController <>4__this;

			[Token(Token = "0x4001D94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string actorName;

			[Token(Token = "0x60029EB")]
			[Address(RVA = "0x15F4B4C", Offset = "0x15F4B4C", VA = "0x15F4B4C")]
			public <>c__DisplayClass167_0()
			{
			}

			[Token(Token = "0x60029EC")]
			[Address(RVA = "0x15F6EBC", Offset = "0x15F6EBC", VA = "0x15F6EBC")]
			internal void <SetPortrait>b__0(UnityEngine.Object asset)
			{
			}
		}

		[Token(Token = "0x20005D7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DB18", Offset = "0xA0DB18")]
		private sealed class <>c__DisplayClass175_0
		{
			[Token(Token = "0x4001D95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ConversationController endingConversationController;

			[Token(Token = "0x60029ED")]
			[Address(RVA = "0x15F551C", Offset = "0x15F551C", VA = "0x15F551C")]
			public <>c__DisplayClass175_0()
			{
			}

			[Token(Token = "0x60029EE")]
			[Address(RVA = "0x15F6F90", Offset = "0x15F6F90", VA = "0x15F6F90")]
			internal bool <OnEndConversation>b__0(ActiveConversationRecord r)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DB28", Offset = "0xA0DB28")]
		private sealed class <ChooseResponseAfterOneFrame>d__179 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DialogueSystemController <>4__this;

			[Token(Token = "0x4001D99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ResponseTimeoutAction responseTimeoutAction;

			[Token(Token = "0x17000530")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60029F2")]
				[Address(RVA = "0x15F71AC", Offset = "0x15F71AC", VA = "0x15F71AC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000531")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60029F4")]
				[Address(RVA = "0x15F7214", Offset = "0x15F7214", VA = "0x15F7214", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60029EF")]
			[Address(RVA = "0x15F5654", Offset = "0x15F5654", VA = "0x15F5654")]
			[DebuggerHidden]
			public <ChooseResponseAfterOneFrame>d__179(int <>1__state)
			{
			}

			[Token(Token = "0x60029F0")]
			[Address(RVA = "0x15F70F4", Offset = "0x15F70F4", VA = "0x15F70F4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60029F1")]
			[Address(RVA = "0x15F70F8", Offset = "0x15F70F8", VA = "0x15F70F8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60029F3")]
			[Address(RVA = "0x15F71B4", Offset = "0x15F71B4", VA = "0x15F71B4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005D9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DB38", Offset = "0xA0DB38")]
		private sealed class <MonitorAlerts>d__190 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DialogueSystemController <>4__this;

			[Token(Token = "0x4001D9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <currentFrequency>5__2;

			[Token(Token = "0x4001D9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private WaitForSeconds <waitForSeconds>5__3;

			[Token(Token = "0x17000532")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60029F8")]
				[Address(RVA = "0x15F73A8", Offset = "0x15F73A8", VA = "0x15F73A8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000533")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60029FA")]
				[Address(RVA = "0x15F7410", Offset = "0x15F7410", VA = "0x15F7410", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60029F5")]
			[Address(RVA = "0x15F5760", Offset = "0x15F5760", VA = "0x15F5760")]
			[DebuggerHidden]
			public <MonitorAlerts>d__190(int <>1__state)
			{
			}

			[Token(Token = "0x60029F6")]
			[Address(RVA = "0x15F721C", Offset = "0x15F721C", VA = "0x15F721C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60029F7")]
			[Address(RVA = "0x15F7220", Offset = "0x15F7220", VA = "0x15F7220", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60029F9")]
			[Address(RVA = "0x15F73B0", Offset = "0x15F73B0", VA = "0x15F73B0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005DA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DB48", Offset = "0xA0DB48")]
		private sealed class <>c
		{
			[Token(Token = "0x4001D9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001DA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__237_0;

			[Token(Token = "0x4001DA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static TransformDelegate <>9__237_1;

			[Token(Token = "0x4001DA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static TransformDelegate <>9__237_2;

			[Token(Token = "0x4001DA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Action <>9__237_3;

			[Token(Token = "0x60029FC")]
			[Address(RVA = "0x15F6EA4", Offset = "0x15F6EA4", VA = "0x15F6EA4")]
			public <>c()
			{
			}

			[Token(Token = "0x60029FD")]
			[Address(RVA = "0x15F6EAC", Offset = "0x15F6EAC", VA = "0x15F6EAC")]
			internal void <.ctor>b__237_0()
			{
			}

			[Token(Token = "0x60029FE")]
			[Address(RVA = "0x15F6EB0", Offset = "0x15F6EB0", VA = "0x15F6EB0")]
			internal void <.ctor>b__237_1(Transform <p0>)
			{
			}

			[Token(Token = "0x60029FF")]
			[Address(RVA = "0x15F6EB4", Offset = "0x15F6EB4", VA = "0x15F6EB4")]
			internal void <.ctor>b__237_2(Transform <p0>)
			{
			}

			[Token(Token = "0x6002A00")]
			[Address(RVA = "0x15F6EB8", Offset = "0x15F6EB8", VA = "0x15F6EB8")]
			internal void <.ctor>b__237_3()
			{
			}
		}

		[Token(Token = "0x20005DB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DB58", Offset = "0xA0DB58")]
		private sealed class <AddLuaObserverAfterStart>d__223 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001DA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DialogueSystemController <>4__this;

			[Token(Token = "0x4001DA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string luaExpression;

			[Token(Token = "0x4001DA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public LuaWatchFrequency frequency;

			[Token(Token = "0x4001DA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public LuaChangedDelegate luaChangedHandler;

			[Token(Token = "0x4001DAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int <MaxFramesToWait>5__2;

			[Token(Token = "0x4001DAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private int <framesWaited>5__3;

			[Token(Token = "0x17000534")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002A04")]
				[Address(RVA = "0x15F7084", Offset = "0x15F7084", VA = "0x15F7084", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000535")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002A06")]
				[Address(RVA = "0x15F70EC", Offset = "0x15F70EC", VA = "0x15F70EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002A01")]
			[Address(RVA = "0x15F69B0", Offset = "0x15F69B0", VA = "0x15F69B0")]
			[DebuggerHidden]
			public <AddLuaObserverAfterStart>d__223(int <>1__state)
			{
			}

			[Token(Token = "0x6002A02")]
			[Address(RVA = "0x15F6FB4", Offset = "0x15F6FB4", VA = "0x15F6FB4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002A03")]
			[Address(RVA = "0x15F6FB8", Offset = "0x15F6FB8", VA = "0x15F6FB8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002A05")]
			[Address(RVA = "0x15F708C", Offset = "0x15F708C", VA = "0x15F708C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA181C0", Offset = "0xA181C0")]
		public DialogueDatabase initialDatabase;

		[Token(Token = "0x4000B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DisplaySettings displaySettings;

		[Token(Token = "0x4000B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PersistentDataSettings persistentDataSettings;

		[Token(Token = "0x4000B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA181F8", Offset = "0xA181F8")]
		public bool allowSimultaneousConversations;

		[Token(Token = "0x4000B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18230", Offset = "0xA18230")]
		public bool includeSimStatus;

		[Token(Token = "0x4000B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18268", Offset = "0xA18268")]
		public bool preloadResources;

		[Token(Token = "0x4000B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA182A0", Offset = "0xA182A0")]
		public bool instantiateDatabase;

		[Token(Token = "0x4000B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA182D8", Offset = "0xA182D8")]
		public bool dontDestroyOnLoad;

		[Token(Token = "0x4000B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18310", Offset = "0xA18310")]
		public bool allowOnlyOneInstance;

		[Token(Token = "0x4000B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18348", Offset = "0xA18348")]
		public DialogueTime.TimeMode dialogueTimeMode;

		[Token(Token = "0x4000B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18380", Offset = "0xA18380")]
		public DialogueDebug.DebugLevel debugLevel;

		[Token(Token = "0x4000B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isInitialized;

		[Token(Token = "0x4000B55")]
		private const string DefaultDialogueUIResourceName = "Default Dialogue UI";

		[Token(Token = "0x4000B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private DatabaseManager m_databaseManager;

		[Token(Token = "0x4000B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private IDialogueUI m_currentDialogueUI;

		[Token(Token = "0x4000B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		private IDialogueUI m_originalDialogueUI;

		[Token(Token = "0x4000B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		private DisplaySettings m_originalDisplaySettings;

		[Token(Token = "0x4000B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool m_overrodeDisplaySettings;

		[Token(Token = "0x4000B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		private bool m_isOverrideUIPrefab;

		[Token(Token = "0x4000B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private ConversationController m_conversationController;

		[Token(Token = "0x4000B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private IsDialogueEntryValidDelegate m_isDialogueEntryValid;

		[Token(Token = "0x4000B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private GetInputButtonDownDelegate m_savedGetInputButtonDownDelegate;

		[Token(Token = "0x4000B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private LuaWatchers m_luaWatchers;

		[Token(Token = "0x4000B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private AssetBundleManager m_assetBundleManager;

		[Token(Token = "0x4000B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool m_started;

		[Token(Token = "0x4000B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private DialogueDebug.DebugLevel m_lastDebugLevelSet;

		[Token(Token = "0x4000B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private List<ActiveConversationRecord> m_activeConversations;

		[Token(Token = "0x4000B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private UILocalizationManager m_uiLocalizationManager;

		[Token(Token = "0x4000B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private bool m_calledRandomizeNextEntry;

		[Token(Token = "0x4000B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool applicationIsQuitting;

		[Token(Token = "0x4000B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string lastInitialDatabaseName;

		[Token(Token = "0x4000B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA18418", Offset = "0xA18418")]
		private GetInputButtonDownDelegate <getInputButtonDown>k__BackingField;

		[Token(Token = "0x4000B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA18428", Offset = "0xA18428")]
		private Transform <currentActor>k__BackingField;

		[Token(Token = "0x4000B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA18438", Offset = "0xA18438")]
		private Transform <currentConversant>k__BackingField;

		[Token(Token = "0x4000B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA18448", Offset = "0xA18448")]
		private ConversationState <currentConversationState>k__BackingField;

		[Token(Token = "0x4000B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA18458", Offset = "0xA18458")]
		private string <lastConversationStarted>k__BackingField;

		[Token(Token = "0x4000B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA18468", Offset = "0xA18468")]
		private int <lastConversationID>k__BackingField;

		[Token(Token = "0x4000B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA18478", Offset = "0xA18478")]
		private bool <allowLuaExceptions>k__BackingField;

		[Token(Token = "0x4000B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x105")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA18488", Offset = "0xA18488")]
		private bool <warnIfActorAndConversantSame>k__BackingField;

		[Token(Token = "0x4000B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x106")]
		private bool m_disableInput;

		[Token(Token = "0x4000B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		protected AssetLoadedDelegate m_assetLoaded;

		[Token(Token = "0x17000244")]
		public bool isInitialized
		{
			[Token(Token = "0x60012F5")]
			[Address(RVA = "0x15F2014", Offset = "0x15F2014", VA = "0x15F2014")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000245")]
		public DatabaseManager databaseManager
		{
			[Token(Token = "0x60012F7")]
			[Address(RVA = "0x15F2090", Offset = "0x15F2090", VA = "0x15F2090")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000246")]
		public DialogueDatabase masterDatabase
		{
			[Token(Token = "0x60012F8")]
			[Address(RVA = "0x15EBAEC", Offset = "0x15EBAEC", VA = "0x15EBAEC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000247")]
		public IDialogueUI dialogueUI
		{
			[Token(Token = "0x60012F9")]
			[Address(RVA = "0x15EBBDC", Offset = "0x15EBBDC", VA = "0x15EBBDC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012FA")]
			[Address(RVA = "0x15EBC70", Offset = "0x15EBC70", VA = "0x15EBC70")]
			set
			{
			}
		}

		[Token(Token = "0x17000248")]
		public IsDialogueEntryValidDelegate isDialogueEntryValid
		{
			[Token(Token = "0x60012FB")]
			[Address(RVA = "0x15F23E0", Offset = "0x15F23E0", VA = "0x15F23E0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012FC")]
			[Address(RVA = "0x15EBF8C", Offset = "0x15EBF8C", VA = "0x15EBF8C")]
			set
			{
			}
		}

		[Token(Token = "0x17000249")]
		public GetInputButtonDownDelegate getInputButtonDown
		{
			[Token(Token = "0x60012FD")]
			[Address(RVA = "0x15F23E8", Offset = "0x15F23E8", VA = "0x15F23E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A700", Offset = "0xA2A700")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012FE")]
			[Address(RVA = "0x15F23F0", Offset = "0x15F23F0", VA = "0x15F23F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A710", Offset = "0xA2A710")]
			set
			{
			}
		}

		[Token(Token = "0x1700024A")]
		public bool isConversationActive
		{
			[Token(Token = "0x60012FF")]
			[Address(RVA = "0x15EBDAC", Offset = "0x15EBDAC", VA = "0x15EBDAC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700024B")]
		public Transform currentActor
		{
			[Token(Token = "0x6001300")]
			[Address(RVA = "0x15F23F8", Offset = "0x15F23F8", VA = "0x15F23F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A720", Offset = "0xA2A720")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001301")]
			[Address(RVA = "0x15F2400", Offset = "0x15F2400", VA = "0x15F2400")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A730", Offset = "0xA2A730")]
			private set
			{
			}
		}

		[Token(Token = "0x1700024C")]
		public Transform currentConversant
		{
			[Token(Token = "0x6001302")]
			[Address(RVA = "0x15F2408", Offset = "0x15F2408", VA = "0x15F2408")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A740", Offset = "0xA2A740")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001303")]
			[Address(RVA = "0x15F2410", Offset = "0x15F2410", VA = "0x15F2410")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A750", Offset = "0xA2A750")]
			private set
			{
			}
		}

		[Token(Token = "0x1700024D")]
		public ConversationState currentConversationState
		{
			[Token(Token = "0x6001304")]
			[Address(RVA = "0x15F2418", Offset = "0x15F2418", VA = "0x15F2418")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A760", Offset = "0xA2A760")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001305")]
			[Address(RVA = "0x15F2420", Offset = "0x15F2420", VA = "0x15F2420")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A770", Offset = "0xA2A770")]
			set
			{
			}
		}

		[Token(Token = "0x1700024E")]
		public string lastConversationStarted
		{
			[Token(Token = "0x6001306")]
			[Address(RVA = "0x15F2428", Offset = "0x15F2428", VA = "0x15F2428")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A780", Offset = "0xA2A780")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001307")]
			[Address(RVA = "0x15F2430", Offset = "0x15F2430", VA = "0x15F2430")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A790", Offset = "0xA2A790")]
			private set
			{
			}
		}

		[Token(Token = "0x1700024F")]
		public int lastConversationID
		{
			[Token(Token = "0x6001308")]
			[Address(RVA = "0x15F2438", Offset = "0x15F2438", VA = "0x15F2438")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A7A0", Offset = "0xA2A7A0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001309")]
			[Address(RVA = "0x15F2440", Offset = "0x15F2440", VA = "0x15F2440")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A7B0", Offset = "0xA2A7B0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000250")]
		public ConversationController conversationController
		{
			[Token(Token = "0x600130A")]
			[Address(RVA = "0x15F2448", Offset = "0x15F2448", VA = "0x15F2448")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000251")]
		public ConversationModel conversationModel
		{
			[Token(Token = "0x600130B")]
			[Address(RVA = "0x15EC4D0", Offset = "0x15EC4D0", VA = "0x15EC4D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000252")]
		public ConversationView conversationView
		{
			[Token(Token = "0x600130C")]
			[Address(RVA = "0x15EC584", Offset = "0x15EC584", VA = "0x15EC584")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000253")]
		public List<ActiveConversationRecord> activeConversations
		{
			[Token(Token = "0x600130D")]
			[Address(RVA = "0x15F2450", Offset = "0x15F2450", VA = "0x15F2450")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000254")]
		public DatabaseManager DatabaseManager
		{
			[Token(Token = "0x600130E")]
			[Address(RVA = "0x15F2458", Offset = "0x15F2458", VA = "0x15F2458")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000255")]
		public DialogueDatabase MasterDatabase
		{
			[Token(Token = "0x600130F")]
			[Address(RVA = "0x15F2460", Offset = "0x15F2460", VA = "0x15F2460")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000256")]
		public IDialogueUI DialogueUI
		{
			[Token(Token = "0x6001310")]
			[Address(RVA = "0x15F247C", Offset = "0x15F247C", VA = "0x15F247C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001311")]
			[Address(RVA = "0x15F24A0", Offset = "0x15F24A0", VA = "0x15F24A0")]
			set
			{
			}
		}

		[Token(Token = "0x17000257")]
		public IsDialogueEntryValidDelegate IsDialogueEntryValid
		{
			[Token(Token = "0x6001312")]
			[Address(RVA = "0x15F24A4", Offset = "0x15F24A4", VA = "0x15F24A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001313")]
			[Address(RVA = "0x15F24AC", Offset = "0x15F24AC", VA = "0x15F24AC")]
			set
			{
			}
		}

		[Token(Token = "0x17000258")]
		public GetInputButtonDownDelegate GetInputButtonDown
		{
			[Token(Token = "0x6001314")]
			[Address(RVA = "0x15F24C8", Offset = "0x15F24C8", VA = "0x15F24C8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001315")]
			[Address(RVA = "0x15F24D0", Offset = "0x15F24D0", VA = "0x15F24D0")]
			set
			{
			}
		}

		[Token(Token = "0x17000259")]
		public bool IsConversationActive
		{
			[Token(Token = "0x6001316")]
			[Address(RVA = "0x15F24D8", Offset = "0x15F24D8", VA = "0x15F24D8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700025A")]
		public Transform CurrentActor
		{
			[Token(Token = "0x6001317")]
			[Address(RVA = "0x15F24F8", Offset = "0x15F24F8", VA = "0x15F24F8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001318")]
			[Address(RVA = "0x15F2500", Offset = "0x15F2500", VA = "0x15F2500")]
			private set
			{
			}
		}

		[Token(Token = "0x1700025B")]
		public Transform CurrentConversant
		{
			[Token(Token = "0x6001319")]
			[Address(RVA = "0x15F2508", Offset = "0x15F2508", VA = "0x15F2508")]
			get
			{
				return null;
			}
			[Token(Token = "0x600131A")]
			[Address(RVA = "0x15F2510", Offset = "0x15F2510", VA = "0x15F2510")]
			set
			{
			}
		}

		[Token(Token = "0x1700025C")]
		public ConversationState CurrentConversationState
		{
			[Token(Token = "0x600131B")]
			[Address(RVA = "0x15F2518", Offset = "0x15F2518", VA = "0x15F2518")]
			get
			{
				return null;
			}
			[Token(Token = "0x600131C")]
			[Address(RVA = "0x15F2520", Offset = "0x15F2520", VA = "0x15F2520")]
			set
			{
			}
		}

		[Token(Token = "0x1700025D")]
		public string LastConversationStarted
		{
			[Token(Token = "0x600131D")]
			[Address(RVA = "0x15F2528", Offset = "0x15F2528", VA = "0x15F2528")]
			get
			{
				return null;
			}
			[Token(Token = "0x600131E")]
			[Address(RVA = "0x15F2530", Offset = "0x15F2530", VA = "0x15F2530")]
			set
			{
			}
		}

		[Token(Token = "0x1700025E")]
		public int LastConversationID
		{
			[Token(Token = "0x600131F")]
			[Address(RVA = "0x15F2538", Offset = "0x15F2538", VA = "0x15F2538")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001320")]
			[Address(RVA = "0x15F2540", Offset = "0x15F2540", VA = "0x15F2540")]
			set
			{
			}
		}

		[Token(Token = "0x1700025F")]
		public ConversationController ConversationController
		{
			[Token(Token = "0x6001321")]
			[Address(RVA = "0x15F2548", Offset = "0x15F2548", VA = "0x15F2548")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000260")]
		public ConversationModel ConversationModel
		{
			[Token(Token = "0x6001322")]
			[Address(RVA = "0x15F2550", Offset = "0x15F2550", VA = "0x15F2550")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000261")]
		public ConversationView ConversationView
		{
			[Token(Token = "0x6001323")]
			[Address(RVA = "0x15F2568", Offset = "0x15F2568", VA = "0x15F2568")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000262")]
		public List<ActiveConversationRecord> ActiveConversations
		{
			[Token(Token = "0x6001324")]
			[Address(RVA = "0x15F2580", Offset = "0x15F2580", VA = "0x15F2580")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000263")]
		public bool allowLuaExceptions
		{
			[Token(Token = "0x6001325")]
			[Address(RVA = "0x15F2588", Offset = "0x15F2588", VA = "0x15F2588")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A7C0", Offset = "0xA2A7C0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001326")]
			[Address(RVA = "0x15F2590", Offset = "0x15F2590", VA = "0x15F2590")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A7D0", Offset = "0xA2A7D0")]
			set
			{
			}
		}

		[Token(Token = "0x17000264")]
		public bool warnIfActorAndConversantSame
		{
			[Token(Token = "0x6001327")]
			[Address(RVA = "0x15F259C", Offset = "0x15F259C", VA = "0x15F259C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A7E0", Offset = "0xA2A7E0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001328")]
			[Address(RVA = "0x15F25A4", Offset = "0x15F25A4", VA = "0x15F25A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A7F0", Offset = "0xA2A7F0")]
			set
			{
			}
		}

		[Token(Token = "0x1400000E")]
		public event Action receivedUpdateTracker
		{
			[Token(Token = "0x60012ED")]
			[Address(RVA = "0x15F1AF4", Offset = "0x15F1AF4", VA = "0x15F1AF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A66C", Offset = "0xA2A66C")]
			add
			{
			}
			[Token(Token = "0x60012EE")]
			[Address(RVA = "0x15F1B98", Offset = "0x15F1B98", VA = "0x15F1B98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A67C", Offset = "0xA2A67C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400000F")]
		public event TransformDelegate conversationStarted
		{
			[Token(Token = "0x60012EF")]
			[Address(RVA = "0x15F1C3C", Offset = "0x15F1C3C", VA = "0x15F1C3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A68C", Offset = "0xA2A68C")]
			add
			{
			}
			[Token(Token = "0x60012F0")]
			[Address(RVA = "0x15F1CE0", Offset = "0x15F1CE0", VA = "0x15F1CE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A69C", Offset = "0xA2A69C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000010")]
		public event TransformDelegate conversationEnded
		{
			[Token(Token = "0x60012F1")]
			[Address(RVA = "0x15F1D84", Offset = "0x15F1D84", VA = "0x15F1D84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A6AC", Offset = "0xA2A6AC")]
			add
			{
			}
			[Token(Token = "0x60012F2")]
			[Address(RVA = "0x15F1E28", Offset = "0x15F1E28", VA = "0x15F1E28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A6BC", Offset = "0xA2A6BC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000011")]
		public event Action initializationComplete
		{
			[Token(Token = "0x60012F3")]
			[Address(RVA = "0x15F1ECC", Offset = "0x15F1ECC", VA = "0x15F1ECC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A6CC", Offset = "0xA2A6CC")]
			add
			{
			}
			[Token(Token = "0x60012F4")]
			[Address(RVA = "0x15F1F70", Offset = "0x15F1F70", VA = "0x15F1F70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A6DC", Offset = "0xA2A6DC")]
			remove
			{
			}
		}

		[Token(Token = "0x60012F6")]
		[Address(RVA = "0x15F201C", Offset = "0x15F201C", VA = "0x15F201C")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xA2A6EC", Offset = "0xA2A6EC")]
		private static void InitStaticVariables()
		{
		}

		[Token(Token = "0x6001329")]
		[Address(RVA = "0x15F25B0", Offset = "0x15F25B0", VA = "0x15F25B0")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x600132A")]
		[Address(RVA = "0x15F268C", Offset = "0x15F268C", VA = "0x15F268C")]
		public void Awake()
		{
		}

		[Token(Token = "0x600132B")]
		[Address(RVA = "0x15F3480", Offset = "0x15F3480", VA = "0x15F3480")]
		private void OnSceneLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x600132C")]
		[Address(RVA = "0x15F3488", Offset = "0x15F3488", VA = "0x15F3488")]
		public bool StandardGetInputButtonDown(string buttonName)
		{
			return default(bool);
		}

		[Token(Token = "0x600132D")]
		[Address(RVA = "0x15F34F0", Offset = "0x15F34F0", VA = "0x15F34F0")]
		private bool DisabledGetInputButtonDown(string buttonName)
		{
			return default(bool);
		}

		[Token(Token = "0x600132E")]
		[Address(RVA = "0x15F34F8", Offset = "0x15F34F8", VA = "0x15F34F8")]
		public bool IsDialogueSystemInputDisabled()
		{
			return default(bool);
		}

		[Token(Token = "0x600132F")]
		[Address(RVA = "0x15ED3C0", Offset = "0x15ED3C0", VA = "0x15ED3C0")]
		public void SetDialogueSystemInput(bool value)
		{
		}

		[Token(Token = "0x6001330")]
		[Address(RVA = "0x15F3500", Offset = "0x15F3500", VA = "0x15F3500")]
		public void Start()
		{
		}

		[Token(Token = "0x6001331")]
		[Address(RVA = "0x15F2FFC", Offset = "0x15F2FFC", VA = "0x15F2FFC")]
		private void InitializeDisplaySettings()
		{
		}

		[Token(Token = "0x6001332")]
		[Address(RVA = "0x15F31F8", Offset = "0x15F31F8", VA = "0x15F31F8")]
		private void InitializeLocalization()
		{
		}

		[Token(Token = "0x6001333")]
		[Address(RVA = "0x15ED208", Offset = "0x15ED208", VA = "0x15ED208")]
		public void SetLanguage(string language)
		{
		}

		[Token(Token = "0x6001334")]
		[Address(RVA = "0x15F4790", Offset = "0x15F4790", VA = "0x15F4790")]
		private void CheckDebugLevel()
		{
		}

		[Token(Token = "0x6001335")]
		[Address(RVA = "0x15F2D44", Offset = "0x15F2D44", VA = "0x15F2D44")]
		private void InitializeDatabase()
		{
		}

		[Token(Token = "0x6001336")]
		[Address(RVA = "0x15ED5E0", Offset = "0x15ED5E0", VA = "0x15ED5E0")]
		public void AddDatabase(DialogueDatabase database)
		{
		}

		[Token(Token = "0x6001337")]
		[Address(RVA = "0x15ED69C", Offset = "0x15ED69C", VA = "0x15ED69C")]
		public void RemoveDatabase(DialogueDatabase database)
		{
		}

		[Token(Token = "0x6001338")]
		[Address(RVA = "0x15ED758", Offset = "0x15ED758", VA = "0x15ED758")]
		public void ResetDatabase(DatabaseResetOptions databaseResetOptions)
		{
		}

		[Token(Token = "0x6001339")]
		[Address(RVA = "0x15ED810", Offset = "0x15ED810", VA = "0x15ED810")]
		public void ResetDatabase()
		{
		}

		[Token(Token = "0x600133A")]
		[Address(RVA = "0x15ED8BC", Offset = "0x15ED8BC", VA = "0x15ED8BC")]
		public void PreloadMasterDatabase()
		{
		}

		[Token(Token = "0x600133B")]
		[Address(RVA = "0x15EDAD8", Offset = "0x15EDAD8", VA = "0x15EDAD8")]
		public void PreloadDialogueUI()
		{
		}

		[Token(Token = "0x600133C")]
		[Address(RVA = "0x15EDC6C", Offset = "0x15EDC6C", VA = "0x15EDC6C")]
		public bool ConversationHasValidEntry(string title, Transform actor, Transform conversant)
		{
			return default(bool);
		}

		[Token(Token = "0x600133D")]
		[Address(RVA = "0x15F4858", Offset = "0x15F4858", VA = "0x15F4858")]
		public bool ConversationHasValidEntry(string title, Transform actor)
		{
			return default(bool);
		}

		[Token(Token = "0x600133E")]
		[Address(RVA = "0x15F4860", Offset = "0x15F4860", VA = "0x15F4860")]
		public bool ConversationHasValidEntry(string title)
		{
			return default(bool);
		}

		[Token(Token = "0x600133F")]
		[Address(RVA = "0x15F3628", Offset = "0x15F3628", VA = "0x15F3628")]
		public void PreloadResources()
		{
		}

		[Token(Token = "0x6001340")]
		[Address(RVA = "0x15EDF28", Offset = "0x15EDF28", VA = "0x15EDF28")]
		public void StartConversation(string title, Transform actor, Transform conversant, int initialDialogueEntryID)
		{
		}

		[Token(Token = "0x6001341")]
		[Address(RVA = "0x15EE8E8", Offset = "0x15EE8E8", VA = "0x15EE8E8")]
		public void StartConversation(string title, Transform actor, Transform conversant)
		{
		}

		[Token(Token = "0x6001342")]
		[Address(RVA = "0x15EE9A8", Offset = "0x15EE9A8", VA = "0x15EE9A8")]
		public void StartConversation(string title, Transform actor)
		{
		}

		[Token(Token = "0x6001343")]
		[Address(RVA = "0x15F4B3C", Offset = "0x15F4B3C", VA = "0x15F4B3C")]
		public void StartConversation(string title)
		{
		}

		[Token(Token = "0x6001344")]
		[Address(RVA = "0x15EEAFC", Offset = "0x15EEAFC", VA = "0x15EEAFC")]
		public void StopConversation()
		{
		}

		[Token(Token = "0x6001345")]
		[Address(RVA = "0x15EEBCC", Offset = "0x15EEBCC", VA = "0x15EEBCC")]
		public void UpdateResponses()
		{
		}

		[Token(Token = "0x6001346")]
		[Address(RVA = "0x15F486C", Offset = "0x15F486C", VA = "0x15F486C")]
		public Transform FindActorTransformFromConversation(string conversationTitle, string actorField)
		{
			return null;
		}

		[Token(Token = "0x6001347")]
		[Address(RVA = "0x15F0C78", Offset = "0x15F0C78", VA = "0x15F0C78")]
		public void SetPortrait(string actorName, string portraitName)
		{
		}

		[Token(Token = "0x6001348")]
		[Address(RVA = "0x15F4B54", Offset = "0x15F4B54", VA = "0x15F4B54")]
		public void SetActorPortraitSprite(string actorName, Sprite sprite)
		{
		}

		[Token(Token = "0x6001349")]
		[Address(RVA = "0x15F4994", Offset = "0x15F4994", VA = "0x15F4994")]
		private void SetConversationUI(Transform actor, Transform conversant)
		{
		}

		[Token(Token = "0x600134A")]
		[Address(RVA = "0x15F4B70", Offset = "0x15F4B70", VA = "0x15F4B70")]
		private OverrideUIBase FindHighestPriorityOverrideUI(Transform actor, Transform conversant)
		{
			return null;
		}

		[Token(Token = "0x600134B")]
		[Address(RVA = "0x15F4FE8", Offset = "0x15F4FE8", VA = "0x15F4FE8")]
		private OverrideUIBase FindOverrideUI(Transform character)
		{
			return null;
		}

		[Token(Token = "0x600134C")]
		[Address(RVA = "0x15F4C60", Offset = "0x15F4C60", VA = "0x15F4C60")]
		private void ApplyOverrideUI(OverrideUIBase overrideUI)
		{
		}

		[Token(Token = "0x600134D")]
		[Address(RVA = "0x15F5204", Offset = "0x15F5204", VA = "0x15F5204")]
		private void RestoreOriginalUI()
		{
		}

		[Token(Token = "0x600134E")]
		[Address(RVA = "0x15F538C", Offset = "0x15F538C", VA = "0x15F538C")]
		private void OnDialogueEntrySpoken(Subtitle subtitle)
		{
		}

		[Token(Token = "0x600134F")]
		[Address(RVA = "0x15F53AC", Offset = "0x15F53AC", VA = "0x15F53AC")]
		public void OnEndConversation(ConversationController endingConversationController)
		{
		}

		[Token(Token = "0x6001350")]
		[Address(RVA = "0x15F5524", Offset = "0x15F5524", VA = "0x15F5524")]
		public void OnConversationTimeout()
		{
		}

		[Token(Token = "0x6001351")]
		[Address(RVA = "0x15F561C", Offset = "0x15F561C", VA = "0x15F561C")]
		private void OnConversationStart(Transform actor)
		{
		}

		[Token(Token = "0x6001352")]
		[Address(RVA = "0x15F5638", Offset = "0x15F5638", VA = "0x15F5638")]
		private void OnConversationEnd(Transform actor)
		{
		}

		[Token(Token = "0x6001353")]
		[Address(RVA = "0x15F559C", Offset = "0x15F559C", VA = "0x15F559C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA2A800", Offset = "0xA2A800")]
		private IEnumerator ChooseResponseAfterOneFrame(ResponseTimeoutAction responseTimeoutAction)
		{
			return null;
		}

		[Token(Token = "0x6001354")]
		[Address(RVA = "0x15EECAC", Offset = "0x15EECAC", VA = "0x15EECAC")]
		public void Bark(string conversationTitle, Transform speaker, Transform listener, BarkHistory barkHistory)
		{
		}

		[Token(Token = "0x6001355")]
		[Address(RVA = "0x15EEE18", Offset = "0x15EEE18", VA = "0x15EEE18")]
		public void Bark(string conversationTitle, Transform speaker, Transform listener)
		{
		}

		[Token(Token = "0x6001356")]
		[Address(RVA = "0x15EEF58", Offset = "0x15EEF58", VA = "0x15EEF58")]
		public void Bark(string conversationTitle, Transform speaker)
		{
		}

		[Token(Token = "0x6001357")]
		[Address(RVA = "0x15EF098", Offset = "0x15EF098", VA = "0x15EF098")]
		public void Bark(string conversationTitle, Transform speaker, BarkHistory barkHistory)
		{
		}

		[Token(Token = "0x6001358")]
		[Address(RVA = "0x15EF170", Offset = "0x15EF170", VA = "0x15EF170")]
		public void BarkString(string barkText, Transform speaker, [Optional] Transform listener, [Optional] string sequence)
		{
		}

		[Token(Token = "0x6001359")]
		[Address(RVA = "0x15EF608", Offset = "0x15EF608", VA = "0x15EF608")]
		public float GetBarkDuration(string barkText)
		{
			return default(float);
		}

		[Token(Token = "0x600135A")]
		[Address(RVA = "0x15F5680", Offset = "0x15F5680", VA = "0x15F5680")]
		private CharacterInfo GetCharacterInfoFromTransform(Transform actorTransform)
		{
			return null;
		}

		[Token(Token = "0x600135B")]
		[Address(RVA = "0x15EF818", Offset = "0x15EF818", VA = "0x15EF818")]
		public void ShowAlert(string message, float duration)
		{
		}

		[Token(Token = "0x600135C")]
		[Address(RVA = "0x15EFA58", Offset = "0x15EFA58", VA = "0x15EFA58")]
		public void ShowAlert(string message)
		{
		}

		[Token(Token = "0x600135D")]
		[Address(RVA = "0x15EFC54", Offset = "0x15EFC54", VA = "0x15EFC54")]
		public void CheckAlerts()
		{
		}

		[Token(Token = "0x600135E")]
		[Address(RVA = "0x15F35B8", Offset = "0x15F35B8", VA = "0x15F35B8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA2A864", Offset = "0xA2A864")]
		private IEnumerator MonitorAlerts()
		{
			return null;
		}

		[Token(Token = "0x600135F")]
		[Address(RVA = "0x15EFE10", Offset = "0x15EFE10", VA = "0x15EFE10")]
		public void HideAlert()
		{
		}

		[Token(Token = "0x6001360")]
		[Address(RVA = "0x15EFF88", Offset = "0x15EFF88", VA = "0x15EFF88")]
		public string GetLocalizedText(string s)
		{
			return null;
		}

		[Token(Token = "0x6001361")]
		[Address(RVA = "0x15F0180", Offset = "0x15F0180", VA = "0x15F0180")]
		public Sequencer PlaySequence(string sequence, Transform speaker, Transform listener, bool informParticipants, bool destroyWhenDone, string entrytag)
		{
			return null;
		}

		[Token(Token = "0x6001362")]
		[Address(RVA = "0x15F02EC", Offset = "0x15F02EC", VA = "0x15F02EC")]
		public Sequencer PlaySequence(string sequence, Transform speaker, Transform listener, bool informParticipants, bool destroyWhenDone)
		{
			return null;
		}

		[Token(Token = "0x6001363")]
		[Address(RVA = "0x15F0454", Offset = "0x15F0454", VA = "0x15F0454")]
		public Sequencer PlaySequence(string sequence, Transform speaker, Transform listener, bool informParticipants)
		{
			return null;
		}

		[Token(Token = "0x6001364")]
		[Address(RVA = "0x15F05A0", Offset = "0x15F05A0", VA = "0x15F05A0")]
		public Sequencer PlaySequence(string sequence, Transform speaker, Transform listener)
		{
			return null;
		}

		[Token(Token = "0x6001365")]
		[Address(RVA = "0x15F0654", Offset = "0x15F0654", VA = "0x15F0654")]
		public Sequencer PlaySequence(string sequence)
		{
			return null;
		}

		[Token(Token = "0x6001366")]
		[Address(RVA = "0x15F06D4", Offset = "0x15F06D4", VA = "0x15F06D4")]
		public void StopSequence(Sequencer sequencer)
		{
		}

		[Token(Token = "0x6001367")]
		[Address(RVA = "0x15F07F8", Offset = "0x15F07F8", VA = "0x15F07F8")]
		public void Pause()
		{
		}

		[Token(Token = "0x6001368")]
		[Address(RVA = "0x15F0904", Offset = "0x15F0904", VA = "0x15F0904")]
		public void Unpause()
		{
		}

		[Token(Token = "0x6001369")]
		[Address(RVA = "0x15F59A0", Offset = "0x15F59A0", VA = "0x15F59A0")]
		private void BroadcastDialogueSystemMessage(string message)
		{
		}

		[Token(Token = "0x600136A")]
		[Address(RVA = "0x15F09EC", Offset = "0x15F09EC", VA = "0x15F09EC")]
		public void UseDialogueUI(GameObject gameObject)
		{
		}

		[Token(Token = "0x600136B")]
		[Address(RVA = "0x15F2098", Offset = "0x15F2098", VA = "0x15F2098")]
		private IDialogueUI GetDialogueUI()
		{
			return null;
		}

		[Token(Token = "0x600136C")]
		[Address(RVA = "0x15F20BC", Offset = "0x15F20BC", VA = "0x15F20BC")]
		private void SetDialogueUI(IDialogueUI ui)
		{
		}

		[Token(Token = "0x600136D")]
		[Address(RVA = "0x15F4EF0", Offset = "0x15F4EF0", VA = "0x15F4EF0")]
		private void ValidateCurrentDialogueUI()
		{
		}

		[Token(Token = "0x600136E")]
		[Address(RVA = "0x15F5C28", Offset = "0x15F5C28", VA = "0x15F5C28")]
		private void GetDialogueUIFromDisplaySettings()
		{
		}

		[Token(Token = "0x600136F")]
		[Address(RVA = "0x15F5EF8", Offset = "0x15F5EF8", VA = "0x15F5EF8")]
		private IDialogueUI LoadDefaultDialogueUI()
		{
			return null;
		}

		[Token(Token = "0x6001370")]
		[Address(RVA = "0x15F612C", Offset = "0x15F612C", VA = "0x15F612C")]
		private IDialogueUI LoadDialogueUIPrefab(GameObject prefab)
		{
			return null;
		}

		[Token(Token = "0x6001371")]
		[Address(RVA = "0x15F5AB8", Offset = "0x15F5AB8", VA = "0x15F5AB8")]
		private Canvas GetOrCreateDefaultCanvas()
		{
			return null;
		}

		[Token(Token = "0x6001372")]
		[Address(RVA = "0x15F0A8C", Offset = "0x15F0A8C", VA = "0x15F0A8C")]
		public void SetDialoguePanel(bool show, bool immediate = false)
		{
		}

		[Token(Token = "0x6001373")]
		[Address(RVA = "0x15F4A40", Offset = "0x15F4A40", VA = "0x15F4A40")]
		private Sequencer GetNewSequencer()
		{
			return null;
		}

		[Token(Token = "0x6001374")]
		[Address(RVA = "0x15F369C", Offset = "0x15F369C", VA = "0x15F369C")]
		private void RegisterLuaFunctions()
		{
		}

		[Token(Token = "0x6001375")]
		[Address(RVA = "0x15F6418", Offset = "0x15F6418", VA = "0x15F6418")]
		private void UnregisterLuaFunctions()
		{
		}

		[Token(Token = "0x6001376")]
		[Address(RVA = "0x15F64FC", Offset = "0x15F64FC", VA = "0x15F64FC")]
		public void SendUpdateTracker()
		{
		}

		[Token(Token = "0x6001377")]
		[Address(RVA = "0x15F6554", Offset = "0x15F6554", VA = "0x15F6554")]
		public static void LuaShowAlert(string message)
		{
		}

		[Token(Token = "0x6001378")]
		[Address(RVA = "0x15F65B8", Offset = "0x15F65B8", VA = "0x15F65B8")]
		public static void LuaHideAlert()
		{
		}

		[Token(Token = "0x6001379")]
		[Address(RVA = "0x15F6614", Offset = "0x15F6614", VA = "0x15F6614")]
		private static DialogueEntry GetDialogueEntryInCurrentConversation(double entryID)
		{
			return null;
		}

		[Token(Token = "0x600137A")]
		[Address(RVA = "0x15F66D4", Offset = "0x15F66D4", VA = "0x15F66D4")]
		private static string GetEntryText(double entryID, string fieldName)
		{
			return null;
		}

		[Token(Token = "0x600137B")]
		[Address(RVA = "0x15F67A4", Offset = "0x15F67A4", VA = "0x15F67A4")]
		private static bool GetEntryBool(double entryID, string fieldName)
		{
			return default(bool);
		}

		[Token(Token = "0x600137C")]
		[Address(RVA = "0x15F6860", Offset = "0x15F6860", VA = "0x15F6860")]
		private static double GetEntryNumber(double entryID, string fieldName)
		{
			return default(double);
		}

		[Token(Token = "0x600137D")]
		[Address(RVA = "0x15F4B24", Offset = "0x15F4B24", VA = "0x15F4B24")]
		public void RandomizeNextEntry()
		{
		}

		[Token(Token = "0x600137E")]
		[Address(RVA = "0x15F1274", Offset = "0x15F1274", VA = "0x15F1274")]
		public void AddLuaObserver(string luaExpression, LuaWatchFrequency frequency, LuaChangedDelegate luaChangedHandler)
		{
		}

		[Token(Token = "0x600137F")]
		[Address(RVA = "0x15F691C", Offset = "0x15F691C", VA = "0x15F691C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA2A8C8", Offset = "0xA2A8C8")]
		private IEnumerator AddLuaObserverAfterStart(string luaExpression, LuaWatchFrequency frequency, LuaChangedDelegate luaChangedHandler)
		{
			return null;
		}

		[Token(Token = "0x6001380")]
		[Address(RVA = "0x15F1364", Offset = "0x15F1364", VA = "0x15F1364")]
		public void RemoveLuaObserver(string luaExpression, LuaWatchFrequency frequency, LuaChangedDelegate luaChangedHandler)
		{
		}

		[Token(Token = "0x6001381")]
		[Address(RVA = "0x15F1428", Offset = "0x15F1428", VA = "0x15F1428")]
		public void RemoveAllObservers(LuaWatchFrequency frequency)
		{
		}

		[Token(Token = "0x6001382")]
		[Address(RVA = "0x15F14E4", Offset = "0x15F14E4", VA = "0x15F14E4")]
		public void RemoveAllObservers()
		{
		}

		[Token(Token = "0x6001383")]
		[Address(RVA = "0x15F69DC", Offset = "0x15F69DC", VA = "0x15F69DC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001384")]
		[Address(RVA = "0x15F6B08", Offset = "0x15F6B08", VA = "0x15F6B08")]
		private void UpdateTracker()
		{
		}

		[Token(Token = "0x6001385")]
		[Address(RVA = "0x15F15A8", Offset = "0x15F15A8", VA = "0x15F15A8")]
		public void RegisterAssetBundle(AssetBundle bundle)
		{
		}

		[Token(Token = "0x6001386")]
		[Address(RVA = "0x15F166C", Offset = "0x15F166C", VA = "0x15F166C")]
		public void UnregisterAssetBundle(AssetBundle bundle)
		{
		}

		[Token(Token = "0x6001387")]
		[Address(RVA = "0x15F1734", Offset = "0x15F1734", VA = "0x15F1734")]
		public UnityEngine.Object LoadAsset(string name)
		{
			return null;
		}

		[Token(Token = "0x6001388")]
		[Address(RVA = "0x15F1810", Offset = "0x15F1810", VA = "0x15F1810")]
		public UnityEngine.Object LoadAsset(string name, Type type)
		{
			return null;
		}

		[Token(Token = "0x6001389")]
		[Address(RVA = "0x15F18FC", Offset = "0x15F18FC", VA = "0x15F18FC")]
		public void LoadAsset(string name, Type type, AssetLoadedDelegate assetLoaded)
		{
		}

		[Token(Token = "0x600138A")]
		[Address(RVA = "0x15F1A44", Offset = "0x15F1A44", VA = "0x15F1A44")]
		public void UnloadAsset(object obj)
		{
		}

		[Token(Token = "0x600138B")]
		[Address(RVA = "0x15F3484", Offset = "0x15F3484", VA = "0x15F3484")]
		public void ClearLoadedAssetHashes()
		{
		}

		[Token(Token = "0x600138C")]
		[Address(RVA = "0x15F6B24", Offset = "0x15F6B24", VA = "0x15F6B24")]
		public DialogueSystemController()
		{
		}
	}
	[Token(Token = "0x2000202")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA07E20", Offset = "0xA07E20")]
	public class DialogueSystemEvents : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20005DC")]
		public class StringEvent : UnityEvent<string>
		{
			[Token(Token = "0x6002A07")]
			[Address(RVA = "0x15F80FC", Offset = "0x15F80FC", VA = "0x15F80FC")]
			public StringEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005DD")]
		public class TransformEvent : UnityEvent<Transform>
		{
			[Token(Token = "0x6002A08")]
			[Address(RVA = "0x15F800C", Offset = "0x15F800C", VA = "0x15F800C")]
			public TransformEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005DE")]
		public class SubtitleEvent : UnityEvent<Subtitle>
		{
			[Token(Token = "0x6002A09")]
			[Address(RVA = "0x15F805C", Offset = "0x15F805C", VA = "0x15F805C")]
			public SubtitleEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005DF")]
		public class ResponsesEvent : UnityEvent<Response[]>
		{
			[Token(Token = "0x6002A0A")]
			[Address(RVA = "0x15F80AC", Offset = "0x15F80AC", VA = "0x15F80AC")]
			public ResponsesEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005E0")]
		public class ConversationEvents
		{
			[Token(Token = "0x4001DAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA24F38", Offset = "0xA24F38")]
			public TransformEvent onConversationStart;

			[Token(Token = "0x4001DAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA24F70", Offset = "0xA24F70")]
			public TransformEvent onConversationEnd;

			[Token(Token = "0x4001DAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA24FA8", Offset = "0xA24FA8")]
			public TransformEvent onConversationCancelled;

			[Token(Token = "0x4001DAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA24FE0", Offset = "0xA24FE0")]
			public SubtitleEvent onConversationLine;

			[Token(Token = "0x4001DB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA25018", Offset = "0xA25018")]
			public SubtitleEvent onConversationLineEnd;

			[Token(Token = "0x4001DB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA25050", Offset = "0xA25050")]
			public SubtitleEvent onConversationLineCancelled;

			[Token(Token = "0x4001DB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA25088", Offset = "0xA25088")]
			public ResponsesEvent onConversationResponseMenu;

			[Token(Token = "0x4001DB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA250C0", Offset = "0xA250C0")]
			public UnityEvent onConversationResponseMenuTimeout;

			[Token(Token = "0x4001DB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA250F8", Offset = "0xA250F8")]
			public TransformEvent onLinkedConversationStart;

			[Token(Token = "0x6002A0B")]
			[Address(RVA = "0x15F7C8C", Offset = "0x15F7C8C", VA = "0x15F7C8C")]
			public ConversationEvents()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005E1")]
		public class BarkEvents
		{
			[Token(Token = "0x4001DB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA25130", Offset = "0xA25130")]
			public TransformEvent onBarkStart;

			[Token(Token = "0x4001DB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA25168", Offset = "0xA25168")]
			public TransformEvent onBarkEnd;

			[Token(Token = "0x4001DB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA251A0", Offset = "0xA251A0")]
			public SubtitleEvent onBarkLine;

			[Token(Token = "0x6002A0C")]
			[Address(RVA = "0x15F7DB4", Offset = "0x15F7DB4", VA = "0x15F7DB4")]
			public BarkEvents()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005E2")]
		public class SequenceEvents
		{
			[Token(Token = "0x4001DB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA251D8", Offset = "0xA251D8")]
			public TransformEvent onSequenceStart;

			[Token(Token = "0x4001DB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA25210", Offset = "0xA25210")]
			public TransformEvent onSequenceEnd;

			[Token(Token = "0x6002A0D")]
			[Address(RVA = "0x15F7E50", Offset = "0x15F7E50", VA = "0x15F7E50")]
			public SequenceEvents()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005E3")]
		public class QuestEvents
		{
			[Token(Token = "0x4001DBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA25248", Offset = "0xA25248")]
			public StringEvent onQuestStateChange;

			[Token(Token = "0x4001DBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA25280", Offset = "0xA25280")]
			public StringEvent onQuestTrackingEnabled;

			[Token(Token = "0x4001DBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA252B8", Offset = "0xA252B8")]
			public StringEvent onQuestTrackingDisabled;

			[Token(Token = "0x4001DBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA252F0", Offset = "0xA252F0")]
			public UnityEvent onUpdateQuestTracker;

			[Token(Token = "0x6002A0E")]
			[Address(RVA = "0x15F7ED0", Offset = "0x15F7ED0", VA = "0x15F7ED0")]
			public QuestEvents()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005E4")]
		public class PauseEvents
		{
			[Token(Token = "0x4001DBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA25328", Offset = "0xA25328")]
			public UnityEvent onDialogueSystemPause;

			[Token(Token = "0x4001DBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA25360", Offset = "0xA25360")]
			public UnityEvent onDialogueSystemUnpause;

			[Token(Token = "0x6002A0F")]
			[Address(RVA = "0x15F7F84", Offset = "0x15F7F84", VA = "0x15F7F84")]
			public PauseEvents()
			{
			}
		}

		[Token(Token = "0x4000B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ConversationEvents conversationEvents;

		[Token(Token = "0x4000B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BarkEvents barkEvents;

		[Token(Token = "0x4000B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SequenceEvents sequenceEvents;

		[Token(Token = "0x4000B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public QuestEvents questEvents;

		[Token(Token = "0x4000B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public PauseEvents pauseEvents;

		[Token(Token = "0x600138E")]
		[Address(RVA = "0x15F7418", Offset = "0x15F7418", VA = "0x15F7418")]
		public void OnConversationStart(Transform actor)
		{
		}

		[Token(Token = "0x600138F")]
		[Address(RVA = "0x15F7488", Offset = "0x15F7488", VA = "0x15F7488")]
		public void OnConversationEnd(Transform actor)
		{
		}

		[Token(Token = "0x6001390")]
		[Address(RVA = "0x15F74F8", Offset = "0x15F74F8", VA = "0x15F74F8")]
		public void OnConversationCancelled(Transform actor)
		{
		}

		[Token(Token = "0x6001391")]
		[Address(RVA = "0x15F7568", Offset = "0x15F7568", VA = "0x15F7568")]
		public void OnConversationLine(Subtitle subtitle)
		{
		}

		[Token(Token = "0x6001392")]
		[Address(RVA = "0x15F75D8", Offset = "0x15F75D8", VA = "0x15F75D8")]
		public void OnConversationLineEnd(Subtitle subtitle)
		{
		}

		[Token(Token = "0x6001393")]
		[Address(RVA = "0x15F7648", Offset = "0x15F7648", VA = "0x15F7648")]
		public void OnConversationLineCancelled(Subtitle subtitle)
		{
		}

		[Token(Token = "0x6001394")]
		[Address(RVA = "0x15F76B8", Offset = "0x15F76B8", VA = "0x15F76B8")]
		public void OnConversationResponseMenu(Response[] responses)
		{
		}

		[Token(Token = "0x6001395")]
		[Address(RVA = "0x15F7728", Offset = "0x15F7728", VA = "0x15F7728")]
		public void OnConversationTimeout()
		{
		}

		[Token(Token = "0x6001396")]
		[Address(RVA = "0x15F7750", Offset = "0x15F7750", VA = "0x15F7750")]
		public void OnLinkedConversationStart(Transform actor)
		{
		}

		[Token(Token = "0x6001397")]
		[Address(RVA = "0x15F77C0", Offset = "0x15F77C0", VA = "0x15F77C0")]
		public void OnBarkStart(Transform actor)
		{
		}

		[Token(Token = "0x6001398")]
		[Address(RVA = "0x15F7830", Offset = "0x15F7830", VA = "0x15F7830")]
		public void OnBarkEnd(Transform actor)
		{
		}

		[Token(Token = "0x6001399")]
		[Address(RVA = "0x15F78A0", Offset = "0x15F78A0", VA = "0x15F78A0")]
		public void OnBarkLine(Subtitle subtitle)
		{
		}

		[Token(Token = "0x600139A")]
		[Address(RVA = "0x15F7910", Offset = "0x15F7910", VA = "0x15F7910")]
		public void OnSequenceStart(Transform actor)
		{
		}

		[Token(Token = "0x600139B")]
		[Address(RVA = "0x15F7980", Offset = "0x15F7980", VA = "0x15F7980")]
		public void OnSequenceEnd(Transform actor)
		{
		}

		[Token(Token = "0x600139C")]
		[Address(RVA = "0x15F79F0", Offset = "0x15F79F0", VA = "0x15F79F0")]
		public void OnQuestStateChange(string title)
		{
		}

		[Token(Token = "0x600139D")]
		[Address(RVA = "0x15F7A60", Offset = "0x15F7A60", VA = "0x15F7A60")]
		public void OnQuestTrackingEnabled(string title)
		{
		}

		[Token(Token = "0x600139E")]
		[Address(RVA = "0x15F7AD0", Offset = "0x15F7AD0", VA = "0x15F7AD0")]
		public void OnQuestTrackingDisabled(string title)
		{
		}

		[Token(Token = "0x600139F")]
		[Address(RVA = "0x15F7B40", Offset = "0x15F7B40", VA = "0x15F7B40")]
		public void UpdateTracker()
		{
		}

		[Token(Token = "0x60013A0")]
		[Address(RVA = "0x15F7B68", Offset = "0x15F7B68", VA = "0x15F7B68")]
		public void OnDialogueSystemPause()
		{
		}

		[Token(Token = "0x60013A1")]
		[Address(RVA = "0x15F7B90", Offset = "0x15F7B90", VA = "0x15F7B90")]
		public void OnDialogueSystemUnpause()
		{
		}

		[Token(Token = "0x60013A2")]
		[Address(RVA = "0x15F7BB8", Offset = "0x15F7BB8", VA = "0x15F7BB8")]
		public DialogueSystemEvents()
		{
		}
	}
	[Token(Token = "0x2000203")]
	public class DialogueSystemMessages
	{
		[Token(Token = "0x4000B77")]
		public const string OnConversationStart = "OnConversationStart";

		[Token(Token = "0x4000B78")]
		public const string OnConversationEnd = "OnConversationEnd";

		[Token(Token = "0x4000B79")]
		public const string OnConversationCancelled = "OnConversationCancelled";

		[Token(Token = "0x4000B7A")]
		public const string OnPrepareConversationLine = "OnPrepareConversationLine";

		[Token(Token = "0x4000B7B")]
		public const string OnConversationLine = "OnConversationLine";

		[Token(Token = "0x4000B7C")]
		public const string OnConversationLineEnd = "OnConversationLineEnd";

		[Token(Token = "0x4000B7D")]
		public const string OnConversationLineCancelled = "OnConversationLineCancelled";

		[Token(Token = "0x4000B7E")]
		public const string OnTextChange = "OnTextChange";

		[Token(Token = "0x4000B7F")]
		public const string OnConversationContinue = "OnConversationContinue";

		[Token(Token = "0x4000B80")]
		public const string OnConversationContinueAll = "OnConversationContinueAll";

		[Token(Token = "0x4000B81")]
		public const string OnConversationResponseMenu = "OnConversationResponseMenu";

		[Token(Token = "0x4000B82")]
		public const string OnConversationTimeout = "OnConversationTimeout";

		[Token(Token = "0x4000B83")]
		public const string OnLinkedConversationStart = "OnLinkedConversationStart";

		[Token(Token = "0x4000B84")]
		public const string OnBarkStart = "OnBarkStart";

		[Token(Token = "0x4000B85")]
		public const string OnBarkEnd = "OnBarkEnd";

		[Token(Token = "0x4000B86")]
		public const string OnBarkLine = "OnBarkLine";

		[Token(Token = "0x4000B87")]
		public const string OnSequenceStart = "OnSequenceStart";

		[Token(Token = "0x4000B88")]
		public const string OnSequenceEnd = "OnSequenceEnd";

		[Token(Token = "0x4000B89")]
		public const string OnSequencerMessage = "OnSequencerMessage";

		[Token(Token = "0x4000B8A")]
		public const string OnQuestStateChange = "OnQuestStateChange";

		[Token(Token = "0x4000B8B")]
		public const string OnQuestEntryStateChange = "OnQuestEntryStateChange";

		[Token(Token = "0x4000B8C")]
		public const string OnQuestTrackingEnabled = "OnQuestTrackingEnabled";

		[Token(Token = "0x4000B8D")]
		public const string OnQuestTrackingDisabled = "OnQuestTrackingDisabled";

		[Token(Token = "0x4000B8E")]
		public const string UpdateTracker = "UpdateTracker";

		[Token(Token = "0x4000B8F")]
		public const string OnDialogueSystemPause = "OnDialogueSystemPause";

		[Token(Token = "0x4000B90")]
		public const string OnDialogueSystemUnpause = "OnDialogueSystemUnpause";

		[Token(Token = "0x60013A3")]
		[Address(RVA = "0x15F8154", Offset = "0x15F8154", VA = "0x15F8154")]
		public DialogueSystemMessages()
		{
		}
	}
	[Token(Token = "0x2000204")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA07E58", Offset = "0xA07E58")]
	public class ExtraDatabases : MonoBehaviour
	{
		[Token(Token = "0x20005E5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DB68", Offset = "0xA0DB68")]
		private sealed class <AddDatabasesCoroutine>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001DC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ExtraDatabases <>4__this;

			[Token(Token = "0x4001DC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private DialogueDatabase[] <>7__wrap1;

			[Token(Token = "0x4001DC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <>7__wrap2;

			[Token(Token = "0x17000536")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002A13")]
				[Address(RVA = "0x15FF7BC", Offset = "0x15FF7BC", VA = "0x15FF7BC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000537")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002A15")]
				[Address(RVA = "0x15FF824", Offset = "0x15FF824", VA = "0x15FF824", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002A10")]
			[Address(RVA = "0x15FECB8", Offset = "0x15FECB8", VA = "0x15FECB8")]
			[DebuggerHidden]
			public <AddDatabasesCoroutine>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6002A11")]
			[Address(RVA = "0x15FF69C", Offset = "0x15FF69C", VA = "0x15FF69C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002A12")]
			[Address(RVA = "0x15FF6A0", Offset = "0x15FF6A0", VA = "0x15FF6A0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002A14")]
			[Address(RVA = "0x15FF7C4", Offset = "0x15FF7C4", VA = "0x15FF7C4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005E6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DB78", Offset = "0xA0DB78")]
		private sealed class <RemoveDatabasesCoroutine>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001DC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ExtraDatabases <>4__this;

			[Token(Token = "0x4001DC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private DialogueDatabase[] <>7__wrap1;

			[Token(Token = "0x4001DC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <>7__wrap2;

			[Token(Token = "0x17000538")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002A19")]
				[Address(RVA = "0x1712FD0", Offset = "0x1712FD0", VA = "0x1712FD0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000539")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002A1B")]
				[Address(RVA = "0x1713038", Offset = "0x1713038", VA = "0x1713038", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002A16")]
			[Address(RVA = "0x1712E80", Offset = "0x1712E80", VA = "0x1712E80")]
			[DebuggerHidden]
			public <RemoveDatabasesCoroutine>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6002A17")]
			[Address(RVA = "0x1712EAC", Offset = "0x1712EAC", VA = "0x1712EAC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002A18")]
			[Address(RVA = "0x1712EB0", Offset = "0x1712EB0", VA = "0x1712EB0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002A1A")]
			[Address(RVA = "0x1712FD8", Offset = "0x1712FD8", VA = "0x1712FD8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005E7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DB88", Offset = "0xA0DB88")]
		private sealed class <>c
		{
			[Token(Token = "0x4001DCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x6002A1D")]
			[Address(RVA = "0x15FF68C", Offset = "0x15FF68C", VA = "0x15FF68C")]
			public <>c()
			{
			}

			[Token(Token = "0x6002A1E")]
			[Address(RVA = "0x15FF694", Offset = "0x15FF694", VA = "0x15FF694")]
			internal void <.cctor>b__33_0()
			{
			}

			[Token(Token = "0x6002A1F")]
			[Address(RVA = "0x15FF698", Offset = "0x15FF698", VA = "0x15FF698")]
			internal void <.cctor>b__33_1()
			{
			}
		}

		[Token(Token = "0x4000B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DialogueTriggerEvent addTrigger;

		[Token(Token = "0x4000B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public DialogueTriggerEvent removeTrigger;

		[Token(Token = "0x4000B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DialogueDatabase[] databases;

		[Token(Token = "0x4000B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Condition condition;

		[Token(Token = "0x4000B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18498", Offset = "0xA18498")]
		public bool once;

		[Token(Token = "0x4000B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA184D0", Offset = "0xA184D0")]
		public bool onePerFrame;

		[Token(Token = "0x4000B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		private bool m_trying;

		[Token(Token = "0x14000012")]
		public static event Action addedDatabases
		{
			[Token(Token = "0x60013A4")]
			[Address(RVA = "0x15FE508", Offset = "0x15FE508", VA = "0x15FE508")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A92C", Offset = "0xA2A92C")]
			add
			{
			}
			[Token(Token = "0x60013A5")]
			[Address(RVA = "0x15FE5F4", Offset = "0x15FE5F4", VA = "0x15FE5F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A93C", Offset = "0xA2A93C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000013")]
		public static event Action removedDatabases
		{
			[Token(Token = "0x60013A6")]
			[Address(RVA = "0x15FE6E0", Offset = "0x15FE6E0", VA = "0x15FE6E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A94C", Offset = "0xA2A94C")]
			add
			{
			}
			[Token(Token = "0x60013A7")]
			[Address(RVA = "0x15FE7D0", Offset = "0x15FE7D0", VA = "0x15FE7D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2A95C", Offset = "0xA2A95C")]
			remove
			{
			}
		}

		[Token(Token = "0x60013A8")]
		[Address(RVA = "0x15FE8C0", Offset = "0x15FE8C0", VA = "0x15FE8C0")]
		private void TryAddDatabases(Transform interactor, bool immediate)
		{
		}

		[Token(Token = "0x60013A9")]
		[Address(RVA = "0x15FE9B0", Offset = "0x15FE9B0", VA = "0x15FE9B0")]
		public void AddDatabases(bool immediate)
		{
		}

		[Token(Token = "0x60013AA")]
		[Address(RVA = "0x15FEA30", Offset = "0x15FEA30", VA = "0x15FEA30")]
		private void AddDatabasesImmediate()
		{
		}

		[Token(Token = "0x60013AB")]
		[Address(RVA = "0x15FEB00", Offset = "0x15FEB00", VA = "0x15FEB00")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA2A96C", Offset = "0xA2A96C")]
		private IEnumerator AddDatabasesCoroutine()
		{
			return null;
		}

		[Token(Token = "0x60013AC")]
		[Address(RVA = "0x15FEB70", Offset = "0x15FEB70", VA = "0x15FEB70")]
		private void AddDatabase(DialogueDatabase database)
		{
		}

		[Token(Token = "0x60013AD")]
		[Address(RVA = "0x15FECE4", Offset = "0x15FECE4", VA = "0x15FECE4")]
		private void TryRemoveDatabases(Transform interactor, bool immediate)
		{
		}

		[Token(Token = "0x60013AE")]
		[Address(RVA = "0x15FEDD4", Offset = "0x15FEDD4", VA = "0x15FEDD4")]
		public void RemoveDatabases(bool immediate)
		{
		}

		[Token(Token = "0x60013AF")]
		[Address(RVA = "0x15FEE54", Offset = "0x15FEE54", VA = "0x15FEE54")]
		private void RemoveDatabasesImmediate()
		{
		}

		[Token(Token = "0x60013B0")]
		[Address(RVA = "0x15FEF24", Offset = "0x15FEF24", VA = "0x15FEF24")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA2A9D0", Offset = "0xA2A9D0")]
		private IEnumerator RemoveDatabasesCoroutine()
		{
			return null;
		}

		[Token(Token = "0x60013B1")]
		[Address(RVA = "0x15FEF94", Offset = "0x15FEF94", VA = "0x15FEF94")]
		private void RemoveDatabase(DialogueDatabase database)
		{
		}

		[Token(Token = "0x60013B2")]
		[Address(RVA = "0x15FF0DC", Offset = "0x15FF0DC", VA = "0x15FF0DC")]
		public void Start()
		{
		}

		[Token(Token = "0x60013B3")]
		[Address(RVA = "0x15FF138", Offset = "0x15FF138", VA = "0x15FF138")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x60013B4")]
		[Address(RVA = "0x15FF194", Offset = "0x15FF194", VA = "0x15FF194")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x60013B5")]
		[Address(RVA = "0x15FF1F0", Offset = "0x15FF1F0", VA = "0x15FF1F0")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x60013B6")]
		[Address(RVA = "0x15FF24C", Offset = "0x15FF24C", VA = "0x15FF24C")]
		public void OnUse(Transform actor)
		{
		}

		[Token(Token = "0x60013B7")]
		[Address(RVA = "0x15FF2B8", Offset = "0x15FF2B8", VA = "0x15FF2B8")]
		public void OnUse(string message)
		{
		}

		[Token(Token = "0x60013B8")]
		[Address(RVA = "0x15FF320", Offset = "0x15FF320", VA = "0x15FF320")]
		public void OnUse()
		{
		}

		[Token(Token = "0x60013B9")]
		[Address(RVA = "0x15FF388", Offset = "0x15FF388", VA = "0x15FF388")]
		public void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60013BA")]
		[Address(RVA = "0x15FF418", Offset = "0x15FF418", VA = "0x15FF418")]
		public void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60013BB")]
		[Address(RVA = "0x15FF4A8", Offset = "0x15FF4A8", VA = "0x15FF4A8")]
		public ExtraDatabases()
		{
		}
	}
	[Token(Token = "0x2000205")]
	public static class Localization
	{
		[Token(Token = "0x4000B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string m_language;

		[Token(Token = "0x4000B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int m_currentLanguageID;

		[Token(Token = "0x4000B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static bool m_useDefaultIfUndefined;

		[Token(Token = "0x17000265")]
		public static string language
		{
			[Token(Token = "0x60013BD")]
			[Address(RVA = "0x171B144", Offset = "0x171B144", VA = "0x171B144")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013BE")]
			[Address(RVA = "0x171B1AC", Offset = "0x171B1AC", VA = "0x171B1AC")]
			set
			{
			}
		}

		[Token(Token = "0x17000266")]
		public static bool isDefaultLanguage
		{
			[Token(Token = "0x60013BF")]
			[Address(RVA = "0x1713E70", Offset = "0x1713E70", VA = "0x1713E70")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000267")]
		public static bool useDefaultIfUndefined
		{
			[Token(Token = "0x60013C0")]
			[Address(RVA = "0x171B394", Offset = "0x171B394", VA = "0x171B394")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013C1")]
			[Address(RVA = "0x171B3FC", Offset = "0x171B3FC", VA = "0x171B3FC")]
			set
			{
			}
		}

		[Token(Token = "0x17000268")]
		public static string Language
		{
			[Token(Token = "0x60013C2")]
			[Address(RVA = "0x171B46C", Offset = "0x171B46C", VA = "0x171B46C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013C3")]
			[Address(RVA = "0x171B510", Offset = "0x171B510", VA = "0x171B510")]
			set
			{
			}
		}

		[Token(Token = "0x17000269")]
		public static bool IsDefaultLanguage
		{
			[Token(Token = "0x60013C4")]
			[Address(RVA = "0x171B574", Offset = "0x171B574", VA = "0x171B574")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700026A")]
		public static bool UseDefaultIfUndefined
		{
			[Token(Token = "0x60013C5")]
			[Address(RVA = "0x171B5D0", Offset = "0x171B5D0", VA = "0x171B5D0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013C6")]
			[Address(RVA = "0x171B674", Offset = "0x171B674", VA = "0x171B674")]
			set
			{
			}
		}

		[Token(Token = "0x60013C7")]
		[Address(RVA = "0x171B728", Offset = "0x171B728", VA = "0x171B728")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xA2AA34", Offset = "0xA2AA34")]
		private static void InitStaticVariables()
		{
		}

		[Token(Token = "0x60013C8")]
		[Address(RVA = "0x171B7C0", Offset = "0x171B7C0", VA = "0x171B7C0")]
		public static int GetCurrentLanguageID(TextTable textTable)
		{
			return default(int);
		}

		[Token(Token = "0x60013C9")]
		[Address(RVA = "0x171B950", Offset = "0x171B950", VA = "0x171B950")]
		public static string GetLanguage(SystemLanguage systemLanguage)
		{
			return null;
		}
	}
	[Token(Token = "0x2000206")]
	public enum LuaWatchFrequency
	{
		[Token(Token = "0x4000B9E")]
		EveryUpdate,
		[Token(Token = "0x4000B9F")]
		EveryDialogueEntry,
		[Token(Token = "0x4000BA0")]
		EndOfConversation
	}
	[Token(Token = "0x2000207")]
	public class LuaWatchers
	{
		[Token(Token = "0x4000BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private LuaWatchList m_everyUpdateList;

		[Token(Token = "0x4000BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private LuaWatchList m_everyDialogueEntryList;

		[Token(Token = "0x4000BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LuaWatchList m_endOfConversationList;

		[Token(Token = "0x60013CB")]
		[Address(RVA = "0x17226B0", Offset = "0x17226B0", VA = "0x17226B0")]
		public void AddObserver(string luaExpression, LuaWatchFrequency frequency, LuaChangedDelegate luaChangedHandler)
		{
		}

		[Token(Token = "0x60013CC")]
		[Address(RVA = "0x17227C4", Offset = "0x17227C4", VA = "0x17227C4")]
		public void RemoveObserver(string luaExpression, LuaWatchFrequency frequency, LuaChangedDelegate luaChangedHandler)
		{
		}

		[Token(Token = "0x60013CD")]
		[Address(RVA = "0x17228D8", Offset = "0x17228D8", VA = "0x17228D8")]
		public void RemoveAllObservers(LuaWatchFrequency frequency)
		{
		}

		[Token(Token = "0x60013CE")]
		[Address(RVA = "0x17229D0", Offset = "0x17229D0", VA = "0x17229D0")]
		public void RemoveAllObservers()
		{
		}

		[Token(Token = "0x60013CF")]
		[Address(RVA = "0x1722A10", Offset = "0x1722A10", VA = "0x1722A10")]
		public void NotifyObservers(LuaWatchFrequency frequency)
		{
		}

		[Token(Token = "0x60013D0")]
		[Address(RVA = "0x1722B08", Offset = "0x1722B08", VA = "0x1722B08")]
		public LuaWatchers()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000208")]
	public class PersistentDataSettings
	{
		[Token(Token = "0x4000BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18528", Offset = "0xA18528")]
		public PersistentDataManager.RecordPersistentDataOn recordPersistentDataOn;

		[Token(Token = "0x4000BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18560", Offset = "0xA18560")]
		public bool includeActorData;

		[Token(Token = "0x4000BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18598", Offset = "0xA18598")]
		public bool includeAllItemData;

		[Token(Token = "0x4000BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA185D0", Offset = "0xA185D0")]
		public bool includeLocationData;

		[Token(Token = "0x4000BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18608", Offset = "0xA18608")]
		public bool includeStatusAndRelationshipData;

		[Token(Token = "0x4000BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18640", Offset = "0xA18640")]
		public bool includeAllConversationFields;

		[Token(Token = "0x4000BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18678", Offset = "0xA18678")]
		public string saveConversationSimStatusWithField;

		[Token(Token = "0x4000BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA186B0", Offset = "0xA186B0")]
		public string saveDialogueEntrySimStatusWithField;

		[Token(Token = "0x4000BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA186E8", Offset = "0xA186E8")]
		public int asyncGameObjectBatchSize;

		[Token(Token = "0x4000BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18720", Offset = "0xA18720")]
		public int asyncDialogueEntryBatchSize;

		[Token(Token = "0x4000BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18758", Offset = "0xA18758")]
		public bool initializeNewVariables;

		[Token(Token = "0x60013D1")]
		[Address(RVA = "0x11C3A94", Offset = "0x11C3A94", VA = "0x11C3A94")]
		public PersistentDataSettings()
		{
		}
	}
	[Token(Token = "0x2000209")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA07E90", Offset = "0xA07E90")]
	public class CinemachineCameraPriorityOnDialogueEvent : ActOnDialogueEvent
	{
		[Token(Token = "0x60013D2")]
		[Address(RVA = "0x1436ACC", Offset = "0x1436ACC", VA = "0x1436ACC", Slot = "4")]
		public override void TryStartActions(Transform actor)
		{
		}

		[Token(Token = "0x60013D3")]
		[Address(RVA = "0x1436AD0", Offset = "0x1436AD0", VA = "0x1436AD0", Slot = "5")]
		public override void TryEndActions(Transform actor)
		{
		}

		[Token(Token = "0x60013D4")]
		[Address(RVA = "0x1436AD4", Offset = "0x1436AD4", VA = "0x1436AD4")]
		public CinemachineCameraPriorityOnDialogueEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200020A")]
	public class BarkBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x4000BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18790", Offset = "0xA18790")]
		public bool useConversation;

		[Token(Token = "0x4000BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA187C8", Offset = "0xA187C8")]
		[AttributeAttribute(Name = "ConversationPopupAttribute", RVA = "0xA187C8", Offset = "0xA187C8")]
		public string conversation;

		[Token(Token = "0x4000BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18818", Offset = "0xA18818")]
		public string text;

		[Token(Token = "0x4000BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18850", Offset = "0xA18850")]
		public Transform listener;

		[Token(Token = "0x60013D5")]
		[Address(RVA = "0x142A4EC", Offset = "0x142A4EC", VA = "0x142A4EC")]
		public string GetEditorBarkText()
		{
			return null;
		}

		[Token(Token = "0x60013D6")]
		[Address(RVA = "0x142A694", Offset = "0x142A694", VA = "0x142A694")]
		public BarkBehaviour()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200020B")]
	public class BarkClip : PlayableAsset, ITimelineClipAsset
	{
		[Token(Token = "0x4000BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BarkBehaviour template;

		[Token(Token = "0x4000BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ExposedReference<Transform> listener;

		[Token(Token = "0x1700026B")]
		public ClipCaps clipCaps
		{
			[Token(Token = "0x60013D7")]
			[Address(RVA = "0x142A6A4", Offset = "0x142A6A4", VA = "0x142A6A4", Slot = "9")]
			get
			{
				return default(ClipCaps);
			}
		}

		[Token(Token = "0x60013D8")]
		[Address(RVA = "0x142A6AC", Offset = "0x142A6AC", VA = "0x142A6AC", Slot = "6")]
		public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
		{
			return default(Playable);
		}

		[Token(Token = "0x60013D9")]
		[Address(RVA = "0x142A7B8", Offset = "0x142A7B8", VA = "0x142A7B8")]
		public BarkClip()
		{
		}
	}
	[Token(Token = "0x200020C")]
	public class BarkMixerBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x4000BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private HashSet<int> played;

		[Token(Token = "0x60013DA")]
		[Address(RVA = "0x1430378", Offset = "0x1430378", VA = "0x1430378", Slot = "20")]
		public override void ProcessFrame(Playable playable, FrameData info, object playerData)
		{
		}

		[Token(Token = "0x60013DB")]
		[Address(RVA = "0x14306F4", Offset = "0x14306F4", VA = "0x14306F4", Slot = "13")]
		public override void OnGraphStart(Playable playable)
		{
		}

		[Token(Token = "0x60013DC")]
		[Address(RVA = "0x1430770", Offset = "0x1430770", VA = "0x1430770", Slot = "14")]
		public override void OnGraphStop(Playable playable)
		{
		}

		[Token(Token = "0x60013DD")]
		[Address(RVA = "0x14307EC", Offset = "0x14307EC", VA = "0x14307EC")]
		public BarkMixerBehaviour()
		{
		}
	}
	[Token(Token = "0x200020D")]
	[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0xA07EC8", Offset = "0xA07EC8")]
	[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0xA07EC8", Offset = "0xA07EC8")]
	[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0xA07EC8", Offset = "0xA07EC8")]
	public class BarkTrack : TrackAsset
	{
		[Token(Token = "0x60013DE")]
		[Address(RVA = "0x1432538", Offset = "0x1432538", VA = "0x1432538", Slot = "24")]
		public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
		{
			return default(Playable);
		}

		[Token(Token = "0x60013DF")]
		[Address(RVA = "0x14325D0", Offset = "0x14325D0", VA = "0x14325D0")]
		public BarkTrack()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200020E")]
	public class ContinueConversationBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x20005E8")]
		public enum Operation
		{
			[Token(Token = "0x4001DCC")]
			Continue,
			[Token(Token = "0x4001DCD")]
			ClearSubtitleText
		}

		[Token(Token = "0x4000BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18888", Offset = "0xA18888")]
		public Operation operation;

		[Token(Token = "0x4000BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA188C0", Offset = "0xA188C0")]
		public int clearPanelNumber;

		[Token(Token = "0x4000BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool clearAllPanels;

		[Token(Token = "0x60013E0")]
		[Address(RVA = "0x14382EC", Offset = "0x14382EC", VA = "0x14382EC")]
		public ContinueConversationBehaviour()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200020F")]
	public class ContinueConversationClip : PlayableAsset, ITimelineClipAsset
	{
		[Token(Token = "0x4000BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ContinueConversationBehaviour template;

		[Token(Token = "0x1700026C")]
		public ClipCaps clipCaps
		{
			[Token(Token = "0x60013E1")]
			[Address(RVA = "0x14382F4", Offset = "0x14382F4", VA = "0x14382F4", Slot = "9")]
			get
			{
				return default(ClipCaps);
			}
		}

		[Token(Token = "0x60013E2")]
		[Address(RVA = "0x14382FC", Offset = "0x14382FC", VA = "0x14382FC", Slot = "6")]
		public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
		{
			return default(Playable);
		}

		[Token(Token = "0x60013E3")]
		[Address(RVA = "0x143839C", Offset = "0x143839C", VA = "0x143839C")]
		public ContinueConversationClip()
		{
		}
	}
	[Token(Token = "0x2000210")]
	[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0xA07F7C", Offset = "0xA07F7C")]
	[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0xA07F7C", Offset = "0xA07F7C")]
	[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0xA07F7C", Offset = "0xA07F7C")]
	public class ContinueConversationTrack : TrackAsset
	{
		[Token(Token = "0x60013E4")]
		[Address(RVA = "0x1438A64", Offset = "0x1438A64", VA = "0x1438A64", Slot = "24")]
		public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
		{
			return default(Playable);
		}

		[Token(Token = "0x60013E5")]
		[Address(RVA = "0x1438AFC", Offset = "0x1438AFC", VA = "0x1438AFC")]
		public ContinueConversationTrack()
		{
		}
	}
	[Token(Token = "0x2000211")]
	public class ContinueConversationMixerBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x4000BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private HashSet<int> played;

		[Token(Token = "0x60013E6")]
		[Address(RVA = "0x1438404", Offset = "0x1438404", VA = "0x1438404", Slot = "20")]
		public override void ProcessFrame(Playable playable, FrameData info, object playerData)
		{
		}

		[Token(Token = "0x60013E7")]
		[Address(RVA = "0x14388B4", Offset = "0x14388B4", VA = "0x14388B4")]
		private string GetEditorContinueText(Playable playable)
		{
			return null;
		}

		[Token(Token = "0x60013E8")]
		[Address(RVA = "0x14388FC", Offset = "0x14388FC", VA = "0x14388FC", Slot = "13")]
		public override void OnGraphStart(Playable playable)
		{
		}

		[Token(Token = "0x60013E9")]
		[Address(RVA = "0x1438978", Offset = "0x1438978", VA = "0x1438978", Slot = "14")]
		public override void OnGraphStop(Playable playable)
		{
		}

		[Token(Token = "0x60013EA")]
		[Address(RVA = "0x14389F4", Offset = "0x14389F4", VA = "0x14389F4")]
		public ContinueConversationMixerBehaviour()
		{
		}
	}
	[Token(Token = "0x2000212")]
	public class ConversationMixerBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x4000BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private HashSet<int> played;

		[Token(Token = "0x60013EB")]
		[Address(RVA = "0x146C820", Offset = "0x146C820", VA = "0x146C820", Slot = "20")]
		public override void ProcessFrame(Playable playable, FrameData info, object playerData)
		{
		}

		[Token(Token = "0x60013EC")]
		[Address(RVA = "0x146CEA4", Offset = "0x146CEA4", VA = "0x146CEA4", Slot = "13")]
		public override void OnGraphStart(Playable playable)
		{
		}

		[Token(Token = "0x60013ED")]
		[Address(RVA = "0x146CF20", Offset = "0x146CF20", VA = "0x146CF20", Slot = "14")]
		public override void OnGraphStop(Playable playable)
		{
		}

		[Token(Token = "0x60013EE")]
		[Address(RVA = "0x146CF9C", Offset = "0x146CF9C", VA = "0x146CF9C")]
		public ConversationMixerBehaviour()
		{
		}
	}
	[Token(Token = "0x2000213")]
	[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0xA08030", Offset = "0xA08030")]
	[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0xA08030", Offset = "0xA08030")]
	[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0xA08030", Offset = "0xA08030")]
	public class ConversationTrack : TrackAsset
	{
		[Token(Token = "0x60013EF")]
		[Address(RVA = "0x14728C4", Offset = "0x14728C4", VA = "0x14728C4", Slot = "24")]
		public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
		{
			return default(Playable);
		}

		[Token(Token = "0x60013F0")]
		[Address(RVA = "0x147295C", Offset = "0x147295C", VA = "0x147295C")]
		public ConversationTrack()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000214")]
	public class StartConversationBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x4000BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA188F8", Offset = "0xA188F8")]
		public Transform conversant;

		[Token(Token = "0x4000BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18930", Offset = "0xA18930")]
		[AttributeAttribute(Name = "ConversationPopupAttribute", RVA = "0xA18930", Offset = "0xA18930")]
		public string conversation;

		[Token(Token = "0x4000BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18980", Offset = "0xA18980")]
		public bool jumpToSpecificEntry;

		[Token(Token = "0x4000BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA189B8", Offset = "0xA189B8")]
		public int entryID;

		[Token(Token = "0x60013F1")]
		[Address(RVA = "0x12EE838", Offset = "0x12EE838", VA = "0x12EE838")]
		public string GetEditorDialogueText()
		{
			return null;
		}

		[Token(Token = "0x60013F2")]
		[Address(RVA = "0x12EE9D8", Offset = "0x12EE9D8", VA = "0x12EE9D8")]
		public StartConversationBehaviour()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000215")]
	public class StartConversationClip : PlayableAsset, ITimelineClipAsset
	{
		[Token(Token = "0x4000BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StartConversationBehaviour template;

		[Token(Token = "0x4000BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ExposedReference<Transform> conversant;

		[Token(Token = "0x1700026D")]
		public ClipCaps clipCaps
		{
			[Token(Token = "0x60013F3")]
			[Address(RVA = "0x12EE9E0", Offset = "0x12EE9E0", VA = "0x12EE9E0", Slot = "9")]
			get
			{
				return default(ClipCaps);
			}
		}

		[Token(Token = "0x60013F4")]
		[Address(RVA = "0x12EE9E8", Offset = "0x12EE9E8", VA = "0x12EE9E8", Slot = "6")]
		public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
		{
			return default(Playable);
		}

		[Token(Token = "0x60013F5")]
		[Address(RVA = "0x12EEAF4", Offset = "0x12EEAF4", VA = "0x12EEAF4")]
		public StartConversationClip()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000216")]
	public class PlaySequenceBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x4000BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA189F0", Offset = "0xA189F0")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0xA189F0", Offset = "0xA189F0")]
		public string sequence;

		[Token(Token = "0x4000BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18A44", Offset = "0xA18A44")]
		public Transform listener;

		[Token(Token = "0x60013F6")]
		[Address(RVA = "0x11C5538", Offset = "0x11C5538", VA = "0x11C5538")]
		public PlaySequenceBehaviour()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000217")]
	public class PlaySequenceClip : PlayableAsset, ITimelineClipAsset
	{
		[Token(Token = "0x4000BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlaySequenceBehaviour template;

		[Token(Token = "0x4000BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ExposedReference<Transform> listener;

		[Token(Token = "0x1700026E")]
		public ClipCaps clipCaps
		{
			[Token(Token = "0x60013F7")]
			[Address(RVA = "0x11C5540", Offset = "0x11C5540", VA = "0x11C5540", Slot = "9")]
			get
			{
				return default(ClipCaps);
			}
		}

		[Token(Token = "0x60013F8")]
		[Address(RVA = "0x11C5548", Offset = "0x11C5548", VA = "0x11C5548", Slot = "6")]
		public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
		{
			return default(Playable);
		}

		[Token(Token = "0x60013F9")]
		[Address(RVA = "0x11C5654", Offset = "0x11C5654", VA = "0x11C5654")]
		public PlaySequenceClip()
		{
		}
	}
	[Token(Token = "0x2000218")]
	public class PlaySequenceMixerBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x4000BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private HashSet<int> played;

		[Token(Token = "0x60013FA")]
		[Address(RVA = "0x11C56BC", Offset = "0x11C56BC", VA = "0x11C56BC", Slot = "20")]
		public override void ProcessFrame(Playable playable, FrameData info, object playerData)
		{
		}

		[Token(Token = "0x60013FB")]
		[Address(RVA = "0x11C5A64", Offset = "0x11C5A64", VA = "0x11C5A64", Slot = "13")]
		public override void OnGraphStart(Playable playable)
		{
		}

		[Token(Token = "0x60013FC")]
		[Address(RVA = "0x11C5AE0", Offset = "0x11C5AE0", VA = "0x11C5AE0", Slot = "14")]
		public override void OnGraphStop(Playable playable)
		{
		}

		[Token(Token = "0x60013FD")]
		[Address(RVA = "0x11C5B5C", Offset = "0x11C5B5C", VA = "0x11C5B5C")]
		public PlaySequenceMixerBehaviour()
		{
		}
	}
	[Token(Token = "0x2000219")]
	[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0xA080E4", Offset = "0xA080E4")]
	[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0xA080E4", Offset = "0xA080E4")]
	[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0xA080E4", Offset = "0xA080E4")]
	public class PlaySequenceTrack : TrackAsset
	{
		[Token(Token = "0x60013FE")]
		[Address(RVA = "0x11C5BCC", Offset = "0x11C5BCC", VA = "0x11C5BCC", Slot = "24")]
		public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
		{
			return default(Playable);
		}

		[Token(Token = "0x60013FF")]
		[Address(RVA = "0x11C5C64", Offset = "0x11C5C64", VA = "0x11C5C64")]
		public PlaySequenceTrack()
		{
		}
	}
	[Token(Token = "0x200021A")]
	public class QuestStateMixerBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x4000BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private HashSet<int> played;

		[Token(Token = "0x6001400")]
		[Address(RVA = "0x11D1420", Offset = "0x11D1420", VA = "0x11D1420", Slot = "20")]
		public override void ProcessFrame(Playable playable, FrameData info, object playerData)
		{
		}

		[Token(Token = "0x6001401")]
		[Address(RVA = "0x11D1B00", Offset = "0x11D1B00", VA = "0x11D1B00", Slot = "13")]
		public override void OnGraphStart(Playable playable)
		{
		}

		[Token(Token = "0x6001402")]
		[Address(RVA = "0x11D1B7C", Offset = "0x11D1B7C", VA = "0x11D1B7C", Slot = "14")]
		public override void OnGraphStop(Playable playable)
		{
		}

		[Token(Token = "0x6001403")]
		[Address(RVA = "0x11D1BF8", Offset = "0x11D1BF8", VA = "0x11D1BF8")]
		public QuestStateMixerBehaviour()
		{
		}
	}
	[Token(Token = "0x200021B")]
	[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0xA08198", Offset = "0xA08198")]
	[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0xA08198", Offset = "0xA08198")]
	public class QuestStateTrack : TrackAsset
	{
		[Token(Token = "0x6001404")]
		[Address(RVA = "0x11D1C68", Offset = "0x11D1C68", VA = "0x11D1C68", Slot = "24")]
		public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
		{
			return default(Playable);
		}

		[Token(Token = "0x6001405")]
		[Address(RVA = "0x11D1D00", Offset = "0x11D1D00", VA = "0x11D1D00")]
		public QuestStateTrack()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200021C")]
	public class SetQuestStateBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x4000BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "QuestPopupAttribute", RVA = "0xA18A7C", Offset = "0xA18A7C")]
		public string quest;

		[Token(Token = "0x4000BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18A90", Offset = "0xA18A90")]
		public bool setQuestState;

		[Token(Token = "0x4000BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[QuestState]
		public QuestState questState;

		[Token(Token = "0x4000BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18AD8", Offset = "0xA18AD8")]
		public bool setQuestEntryState;

		[Token(Token = "0x4000BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int questEntryNumber;

		[Token(Token = "0x4000BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[QuestState]
		public QuestState questEntryState;

		[Token(Token = "0x6001406")]
		[Address(RVA = "0x139A1BC", Offset = "0x139A1BC", VA = "0x139A1BC")]
		public SetQuestStateBehaviour()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200021D")]
	public class SetQuestStateClip : PlayableAsset, ITimelineClipAsset
	{
		[Token(Token = "0x4000BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SetQuestStateBehaviour template;

		[Token(Token = "0x1700026F")]
		public ClipCaps clipCaps
		{
			[Token(Token = "0x6001407")]
			[Address(RVA = "0x139A1C4", Offset = "0x139A1C4", VA = "0x139A1C4", Slot = "9")]
			get
			{
				return default(ClipCaps);
			}
		}

		[Token(Token = "0x6001408")]
		[Address(RVA = "0x139A1CC", Offset = "0x139A1CC", VA = "0x139A1CC", Slot = "6")]
		public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
		{
			return default(Playable);
		}

		[Token(Token = "0x6001409")]
		[Address(RVA = "0x139A26C", Offset = "0x139A26C", VA = "0x139A26C")]
		public SetQuestStateClip()
		{
		}
	}
	[Token(Token = "0x200021E")]
	public class AlertMixerBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x4000BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private HashSet<int> played;

		[Token(Token = "0x600140A")]
		[Address(RVA = "0x1428954", Offset = "0x1428954", VA = "0x1428954", Slot = "20")]
		public override void ProcessFrame(Playable playable, FrameData info, object playerData)
		{
		}

		[Token(Token = "0x600140B")]
		[Address(RVA = "0x1428BAC", Offset = "0x1428BAC", VA = "0x1428BAC", Slot = "13")]
		public override void OnGraphStart(Playable playable)
		{
		}

		[Token(Token = "0x600140C")]
		[Address(RVA = "0x1428C28", Offset = "0x1428C28", VA = "0x1428C28", Slot = "14")]
		public override void OnGraphStop(Playable playable)
		{
		}

		[Token(Token = "0x600140D")]
		[Address(RVA = "0x1428CA4", Offset = "0x1428CA4", VA = "0x1428CA4")]
		public AlertMixerBehaviour()
		{
		}
	}
	[Token(Token = "0x200021F")]
	[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0xA08224", Offset = "0xA08224")]
	[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0xA08224", Offset = "0xA08224")]
	public class AlertTrack : TrackAsset
	{
		[Token(Token = "0x600140E")]
		[Address(RVA = "0x1428D14", Offset = "0x1428D14", VA = "0x1428D14", Slot = "24")]
		public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
		{
			return default(Playable);
		}

		[Token(Token = "0x600140F")]
		[Address(RVA = "0x1428DAC", Offset = "0x1428DAC", VA = "0x1428DAC")]
		public AlertTrack()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000220")]
	public class ShowAlertBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x4000BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18B20", Offset = "0xA18B20")]
		public string message;

		[Token(Token = "0x4000BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18B58", Offset = "0xA18B58")]
		public bool useTextLengthForDuration;

		[Token(Token = "0x6001410")]
		[Address(RVA = "0x139A940", Offset = "0x139A940", VA = "0x139A940")]
		public ShowAlertBehaviour()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000221")]
	public class ShowAlertClip : PlayableAsset, ITimelineClipAsset
	{
		[Token(Token = "0x4000BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ShowAlertBehaviour template;

		[Token(Token = "0x17000270")]
		public ClipCaps clipCaps
		{
			[Token(Token = "0x6001411")]
			[Address(RVA = "0x139A948", Offset = "0x139A948", VA = "0x139A948", Slot = "9")]
			get
			{
				return default(ClipCaps);
			}
		}

		[Token(Token = "0x6001412")]
		[Address(RVA = "0x139A950", Offset = "0x139A950", VA = "0x139A950", Slot = "6")]
		public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
		{
			return default(Playable);
		}

		[Token(Token = "0x6001413")]
		[Address(RVA = "0x139A9F0", Offset = "0x139A9F0", VA = "0x139A9F0")]
		public ShowAlertClip()
		{
		}
	}
	[Token(Token = "0x2000222")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA082B0", Offset = "0xA082B0")]
	[ExecuteInEditMode]
	public class PreviewUI : MonoBehaviour
	{
		[Token(Token = "0x4000BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string message;

		[Token(Token = "0x4000BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float endTime;

		[Token(Token = "0x4000BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int lineOffset;

		[Token(Token = "0x4000BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool computedRect;

		[Token(Token = "0x4000BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Rect rect;

		[Token(Token = "0x6001414")]
		[Address(RVA = "0x11C6208", Offset = "0x11C6208", VA = "0x11C6208")]
		public static string GetDialogueText(string conversationTitle, int startingEntryID, int numContinues = 0)
		{
			return null;
		}

		[Token(Token = "0x6001415")]
		[Address(RVA = "0x11C5978", Offset = "0x11C5978", VA = "0x11C5978")]
		public static void ShowMessage(string message, float duration, int lineOffset)
		{
		}

		[Token(Token = "0x6001416")]
		[Address(RVA = "0x11C644C", Offset = "0x11C644C", VA = "0x11C644C")]
		protected void Show(string message, float duration, int lineOffset)
		{
		}

		[Token(Token = "0x6001417")]
		[Address(RVA = "0x11C6504", Offset = "0x11C6504", VA = "0x11C6504")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001418")]
		[Address(RVA = "0x11C66C8", Offset = "0x11C66C8", VA = "0x11C66C8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001419")]
		[Address(RVA = "0x11C67B8", Offset = "0x11C67B8", VA = "0x11C67B8")]
		public PreviewUI()
		{
		}
	}
	[Token(Token = "0x2000223")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA082FC", Offset = "0xA082FC")]
	public class TimelineTrigger : DialogueEventStarter
	{
		[Token(Token = "0x20005E9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DB98", Offset = "0xA0DB98")]
		private sealed class <StartAfterOneFrame>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001DD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TimelineTrigger <>4__this;

			[Token(Token = "0x1700053A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002A23")]
				[Address(RVA = "0x12F3B6C", Offset = "0x12F3B6C", VA = "0x12F3B6C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700053B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002A25")]
				[Address(RVA = "0x12F3BD4", Offset = "0x12F3BD4", VA = "0x12F3BD4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002A20")]
			[Address(RVA = "0x12F3894", Offset = "0x12F3894", VA = "0x12F3894")]
			[DebuggerHidden]
			public <StartAfterOneFrame>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x6002A21")]
			[Address(RVA = "0x12F3B10", Offset = "0x12F3B10", VA = "0x12F3B10", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002A22")]
			[Address(RVA = "0x12F3B14", Offset = "0x12F3B14", VA = "0x12F3B14", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002A24")]
			[Address(RVA = "0x12F3B74", Offset = "0x12F3B74", VA = "0x12F3B74", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[DialogueTriggerEvent]
		public DialogueTriggerEvent trigger;

		[Token(Token = "0x4000BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18BA0", Offset = "0xA18BA0")]
		public PlayableDirector playableDirector;

		[Token(Token = "0x4000BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18BD8", Offset = "0xA18BD8")]
		public TimelineAsset timelineAsset;

		[Token(Token = "0x4000BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Condition condition;

		[Token(Token = "0x4000BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18C10", Offset = "0xA18C10")]
		public List<GameObject> bindings;

		[Token(Token = "0x4000BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool tryingToStart;

		[Token(Token = "0x4000BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool listenForOnDestroy;

		[Token(Token = "0x600141A")]
		[Address(RVA = "0x12F3198", Offset = "0x12F3198", VA = "0x12F3198")]
		public void OnBarkEnd(Transform actor)
		{
		}

		[Token(Token = "0x600141B")]
		[Address(RVA = "0x12F3284", Offset = "0x12F3284", VA = "0x12F3284")]
		public void OnConversationEnd(Transform actor)
		{
		}

		[Token(Token = "0x600141C")]
		[Address(RVA = "0x12F32D0", Offset = "0x12F32D0", VA = "0x12F32D0")]
		public void OnSequenceEnd(Transform actor)
		{
		}

		[Token(Token = "0x600141D")]
		[Address(RVA = "0x12F331C", Offset = "0x12F331C", VA = "0x12F331C")]
		public void OnUse(Transform actor)
		{
		}

		[Token(Token = "0x600141E")]
		[Address(RVA = "0x12F3368", Offset = "0x12F3368", VA = "0x12F3368")]
		public void OnUse(string message)
		{
		}

		[Token(Token = "0x600141F")]
		[Address(RVA = "0x12F33B0", Offset = "0x12F33B0", VA = "0x12F33B0")]
		public void OnUse()
		{
		}

		[Token(Token = "0x6001420")]
		[Address(RVA = "0x12F33F8", Offset = "0x12F33F8", VA = "0x12F33F8")]
		public void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001421")]
		[Address(RVA = "0x12F3458", Offset = "0x12F3458", VA = "0x12F3458")]
		public void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001422")]
		[Address(RVA = "0x12F34B8", Offset = "0x12F34B8", VA = "0x12F34B8")]
		public void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001423")]
		[Address(RVA = "0x12F3524", Offset = "0x12F3524", VA = "0x12F3524")]
		public void OnCollisionExit(Collision collision)
		{
		}

		[Token(Token = "0x6001424")]
		[Address(RVA = "0x12F3590", Offset = "0x12F3590", VA = "0x12F3590")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001425")]
		[Address(RVA = "0x12F374C", Offset = "0x12F374C", VA = "0x12F374C")]
		public void Start()
		{
		}

		[Token(Token = "0x6001426")]
		[Address(RVA = "0x12F37F8", Offset = "0x12F37F8", VA = "0x12F37F8")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001427")]
		[Address(RVA = "0x12F3844", Offset = "0x12F3844", VA = "0x12F3844")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001428")]
		[Address(RVA = "0x12F3864", Offset = "0x12F3864", VA = "0x12F3864")]
		public void OnLevelWillBeUnloaded()
		{
		}

		[Token(Token = "0x6001429")]
		[Address(RVA = "0x12F386C", Offset = "0x12F386C", VA = "0x12F386C")]
		public void OnApplicationQuit()
		{
		}

		[Token(Token = "0x600142A")]
		[Address(RVA = "0x12F3874", Offset = "0x12F3874", VA = "0x12F3874")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x600142B")]
		[Address(RVA = "0x12F3788", Offset = "0x12F3788", VA = "0x12F3788")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA2AA48", Offset = "0xA2AA48")]
		private IEnumerator StartAfterOneFrame()
		{
			return null;
		}

		[Token(Token = "0x600142C")]
		[Address(RVA = "0x12F31E4", Offset = "0x12F31E4", VA = "0x12F31E4")]
		public void TryStart(Transform actor)
		{
		}

		[Token(Token = "0x600142D")]
		[Address(RVA = "0x12F38C0", Offset = "0x12F38C0", VA = "0x12F38C0")]
		private void SetBindings()
		{
		}

		[Token(Token = "0x600142E")]
		[Address(RVA = "0x12F3A98", Offset = "0x12F3A98", VA = "0x12F3A98")]
		public TimelineTrigger()
		{
		}
	}
	[Token(Token = "0x2000224")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA08334", Offset = "0xA08334")]
	public class IncrementOnDestroy : MonoBehaviour
	{
		[Token(Token = "0x20005EA")]
		public enum IncrementOn
		{
			[Token(Token = "0x4001DD2")]
			Destroy,
			[Token(Token = "0x4001DD3")]
			Disable,
			[Token(Token = "0x4001DD4")]
			Manually
		}

		[Token(Token = "0x4000BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18C48", Offset = "0xA18C48")]
		public IncrementOn incrementOn;

		[Token(Token = "0x4000BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18C80", Offset = "0xA18C80")]
		[AttributeAttribute(Name = "VariablePopupAttribute", RVA = "0xA18C80", Offset = "0xA18C80")]
		public string variable;

		[Token(Token = "0x4000BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18CD0", Offset = "0xA18CD0")]
		public int increment;

		[Token(Token = "0x4000BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18D08", Offset = "0xA18D08")]
		public int min;

		[Token(Token = "0x4000BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18D40", Offset = "0xA18D40")]
		public int max;

		[Token(Token = "0x4000BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18D78", Offset = "0xA18D78")]
		public string alertMessage;

		[Token(Token = "0x4000BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18DB0", Offset = "0xA18DB0")]
		public float alertDuration;

		[Token(Token = "0x4000BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18DE8", Offset = "0xA18DE8")]
		public Condition condition;

		[Token(Token = "0x4000BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public UnityEvent onIncrement;

		[Token(Token = "0x4000BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool listenForOnDestroy;

		[Token(Token = "0x17000271")]
		protected string actualVariableName
		{
			[Token(Token = "0x600142F")]
			[Address(RVA = "0x1718D94", Offset = "0x1718D94", VA = "0x1718D94")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000272")]
		protected string ActualVariableName
		{
			[Token(Token = "0x6001430")]
			[Address(RVA = "0x1718DE0", Offset = "0x1718DE0", VA = "0x1718DE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001431")]
		[Address(RVA = "0x1718DE4", Offset = "0x1718DE4", VA = "0x1718DE4")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001432")]
		[Address(RVA = "0x1718F34", Offset = "0x1718F34", VA = "0x1718F34")]
		public void OnLevelWillBeUnloaded()
		{
		}

		[Token(Token = "0x6001433")]
		[Address(RVA = "0x1718F3C", Offset = "0x1718F3C", VA = "0x1718F3C")]
		public void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001434")]
		[Address(RVA = "0x1718F44", Offset = "0x1718F44", VA = "0x1718F44")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6001435")]
		[Address(RVA = "0x17192AC", Offset = "0x17192AC", VA = "0x17192AC")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001436")]
		[Address(RVA = "0x1718F54", Offset = "0x1718F54", VA = "0x1718F54")]
		public void TryIncrement()
		{
		}

		[Token(Token = "0x6001437")]
		[Address(RVA = "0x17193E0", Offset = "0x17193E0", VA = "0x17193E0")]
		public IncrementOnDestroy()
		{
		}
	}
	[Token(Token = "0x2000225")]
	public class QuestGroupRecord : IComparable
	{
		[Token(Token = "0x4000BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string groupName;

		[Token(Token = "0x4000BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string questTitle;

		[Token(Token = "0x6001438")]
		[Address(RVA = "0x11C8464", Offset = "0x11C8464", VA = "0x11C8464")]
		public QuestGroupRecord()
		{
		}

		[Token(Token = "0x6001439")]
		[Address(RVA = "0x11C846C", Offset = "0x11C846C", VA = "0x11C846C")]
		public QuestGroupRecord(string groupName, string questTitle)
		{
		}

		[Token(Token = "0x600143A")]
		[Address(RVA = "0x11C84A4", Offset = "0x11C84A4", VA = "0x11C84A4", Slot = "4")]
		public int CompareTo(object obj)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000226")]
	public delegate QuestState StringToQuestStateDelegate(string s);
	[Token(Token = "0x2000227")]
	public delegate string CurrentQuestStateDelegate(string quest);
	[Token(Token = "0x2000228")]
	public delegate void SetQuestStateDelegate(string quest, string state);
	[Token(Token = "0x2000229")]
	public delegate void SetQuestEntryStateDelegate(string quest, int entryNumber, string state);
	[Token(Token = "0x200022A")]
	public delegate string CurrentQuestEntryStateDelegate(string quest, int entryNumber);
	[Token(Token = "0x200022B")]
	public struct QuestEntryArgs
	{
		[Token(Token = "0x4000BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string questName;

		[Token(Token = "0x4000BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int entryNumber;

		[Token(Token = "0x600144F")]
		[Address(RVA = "0xB8F2DC", Offset = "0xB8F2DC", VA = "0xB8F2DC")]
		public QuestEntryArgs(string questName, int entryNumber)
		{
		}
	}
	[Token(Token = "0x200022C")]
	public static class QuestLog
	{
		[Token(Token = "0x20005EB")]
		public delegate void QuestChangedDelegate(string questName, QuestState newState);

		[Token(Token = "0x20005EC")]
		public class QuestWatchItem
		{
			[Token(Token = "0x4001DD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private string questName;

			[Token(Token = "0x4001DD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int entryNumber;

			[Token(Token = "0x4001DD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private LuaWatchFrequency frequency;

			[Token(Token = "0x4001DD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private string luaExpression;

			[Token(Token = "0x4001DD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private QuestChangedDelegate questChangedHandler;

			[Token(Token = "0x6002A2A")]
			[Address(RVA = "0x11CCF34", Offset = "0x11CCF34", VA = "0x11CCF34")]
			public QuestWatchItem(string questName, LuaWatchFrequency frequency, QuestChangedDelegate questChangedHandler)
			{
			}

			[Token(Token = "0x6002A2B")]
			[Address(RVA = "0x11CD17C", Offset = "0x11CD17C", VA = "0x11CD17C")]
			public QuestWatchItem(string questName, int entryNumber, LuaWatchFrequency frequency, QuestChangedDelegate questChangedHandler)
			{
			}

			[Token(Token = "0x6002A2C")]
			[Address(RVA = "0x11CD540", Offset = "0x11CD540", VA = "0x11CD540")]
			public bool Matches(string questName, LuaWatchFrequency frequency, QuestChangedDelegate questChangedHandler)
			{
				return default(bool);
			}

			[Token(Token = "0x6002A2D")]
			[Address(RVA = "0x11CD85C", Offset = "0x11CD85C", VA = "0x11CD85C")]
			public bool Matches(string questName, int entryNumber, LuaWatchFrequency frequency, QuestChangedDelegate questChangedHandler)
			{
				return default(bool);
			}

			[Token(Token = "0x6002A2E")]
			[Address(RVA = "0x11CD5B0", Offset = "0x11CD5B0", VA = "0x11CD5B0")]
			public void StopObserving()
			{
			}

			[Token(Token = "0x6002A2F")]
			[Address(RVA = "0x11CE170", Offset = "0x11CE170", VA = "0x11CE170")]
			private void OnLuaChanged(LuaWatchItem luaWatchItem, Lua.Result newResult)
			{
			}
		}

		[Token(Token = "0x20005ED")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DBA8", Offset = "0xA0DBA8")]
		private sealed class <>c__DisplayClass78_0
		{
			[Token(Token = "0x4001DDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string questName;

			[Token(Token = "0x4001DDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LuaWatchFrequency frequency;

			[Token(Token = "0x4001DDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public QuestChangedDelegate questChangedHandler;

			[Token(Token = "0x6002A30")]
			[Address(RVA = "0x11CD538", Offset = "0x11CD538", VA = "0x11CD538")]
			public <>c__DisplayClass78_0()
			{
			}

			[Token(Token = "0x6002A31")]
			[Address(RVA = "0x11CDC5C", Offset = "0x11CDC5C", VA = "0x11CDC5C")]
			internal bool <RemoveQuestStateObserver>b__0(QuestWatchItem questWatchItem)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005EE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DBB8", Offset = "0xA0DBB8")]
		private sealed class <>c__DisplayClass79_0
		{
			[Token(Token = "0x4001DDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string questName;

			[Token(Token = "0x4001DDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int entryNumber;

			[Token(Token = "0x4001DDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public LuaWatchFrequency frequency;

			[Token(Token = "0x4001DE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public QuestChangedDelegate questChangedHandler;

			[Token(Token = "0x6002A32")]
			[Address(RVA = "0x11CD854", Offset = "0x11CD854", VA = "0x11CD854")]
			public <>c__DisplayClass79_0()
			{
			}

			[Token(Token = "0x6002A33")]
			[Address(RVA = "0x11CDC84", Offset = "0x11CDC84", VA = "0x11CDC84")]
			internal bool <RemoveQuestStateObserver>b__0(QuestWatchItem questWatchItem)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000BED")]
		public const string UnassignedStateString = "unassigned";

		[Token(Token = "0x4000BEE")]
		public const string ActiveStateString = "active";

		[Token(Token = "0x4000BEF")]
		public const string SuccessStateString = "success";

		[Token(Token = "0x4000BF0")]
		public const string FailureStateString = "failure";

		[Token(Token = "0x4000BF1")]
		public const string AbandonedStateString = "abandoned";

		[Token(Token = "0x4000BF2")]
		public const string GrantableStateString = "grantable";

		[Token(Token = "0x4000BF3")]
		public const string DoneStateString = "done";

		[Token(Token = "0x4000BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static StringToQuestStateDelegate StringToState;

		[Token(Token = "0x4000BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static CurrentQuestStateDelegate CurrentQuestStateOverride;

		[Token(Token = "0x4000BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static SetQuestStateDelegate SetQuestStateOverride;

		[Token(Token = "0x4000BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static CurrentQuestEntryStateDelegate CurrentQuestEntryStateOverride;

		[Token(Token = "0x4000BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static SetQuestEntryStateDelegate SetQuestEntryStateOverride;

		[Token(Token = "0x4000BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static bool trackOneQuestAtATime;

		[Token(Token = "0x4000BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static readonly List<QuestWatchItem> questWatchList;

		[Token(Token = "0x6001450")]
		[Address(RVA = "0x11C8574", Offset = "0x11C8574", VA = "0x11C8574")]
		public static void RegisterQuestLogFunctions()
		{
		}

		[Token(Token = "0x6001451")]
		[Address(RVA = "0x11C8928", Offset = "0x11C8928", VA = "0x11C8928")]
		public static void AddQuest(string questName, string description, string successDescription, string failureDescription, QuestState state)
		{
		}

		[Token(Token = "0x6001452")]
		[Address(RVA = "0x11C8C94", Offset = "0x11C8C94", VA = "0x11C8C94")]
		public static void AddQuest(string questName, string description, QuestState state)
		{
		}

		[Token(Token = "0x6001453")]
		[Address(RVA = "0x11C8EE0", Offset = "0x11C8EE0", VA = "0x11C8EE0")]
		public static void AddQuest(string questName, string description)
		{
		}

		[Token(Token = "0x6001454")]
		[Address(RVA = "0x11C8F58", Offset = "0x11C8F58", VA = "0x11C8F58")]
		public static void DeleteQuest(string questName)
		{
		}

		[Token(Token = "0x6001455")]
		[Address(RVA = "0x11C90C0", Offset = "0x11C90C0", VA = "0x11C90C0")]
		public static QuestState GetQuestState(string questName)
		{
			return default(QuestState);
		}

		[Token(Token = "0x6001456")]
		[Address(RVA = "0x11C9148", Offset = "0x11C9148", VA = "0x11C9148")]
		public static string CurrentQuestState(string questName)
		{
			return null;
		}

		[Token(Token = "0x6001457")]
		[Address(RVA = "0x11C9218", Offset = "0x11C9218", VA = "0x11C9218")]
		public static string DefaultCurrentQuestState(string questName)
		{
			return null;
		}

		[Token(Token = "0x6001458")]
		[Address(RVA = "0x11C92AC", Offset = "0x11C92AC", VA = "0x11C92AC")]
		public static void SetQuestState(string questName, QuestState state)
		{
		}

		[Token(Token = "0x6001459")]
		[Address(RVA = "0x11C9328", Offset = "0x11C9328", VA = "0x11C9328")]
		public static void SetQuestState(string questName, string state)
		{
		}

		[Token(Token = "0x600145A")]
		[Address(RVA = "0x11C9410", Offset = "0x11C9410", VA = "0x11C9410")]
		public static void DefaultSetQuestState(string questName, string state)
		{
		}

		[Token(Token = "0x600145B")]
		[Address(RVA = "0x11C9598", Offset = "0x11C9598", VA = "0x11C9598")]
		private static void SendUpdateTracker()
		{
		}

		[Token(Token = "0x600145C")]
		[Address(RVA = "0x11C95F8", Offset = "0x11C95F8", VA = "0x11C95F8")]
		public static void InformQuestStateChange(string questName)
		{
		}

		[Token(Token = "0x600145D")]
		[Address(RVA = "0x11C9680", Offset = "0x11C9680", VA = "0x11C9680")]
		public static void InformQuestEntryStateChange(string questName, int entryNumber)
		{
		}

		[Token(Token = "0x600145E")]
		[Address(RVA = "0x11C9744", Offset = "0x11C9744", VA = "0x11C9744")]
		public static bool IsQuestUnassigned(string questName)
		{
			return default(bool);
		}

		[Token(Token = "0x600145F")]
		[Address(RVA = "0x11C97B4", Offset = "0x11C97B4", VA = "0x11C97B4")]
		public static bool IsQuestActive(string questName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001460")]
		[Address(RVA = "0x11C9824", Offset = "0x11C9824", VA = "0x11C9824")]
		public static bool IsQuestSuccessful(string questName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001461")]
		[Address(RVA = "0x11C9894", Offset = "0x11C9894", VA = "0x11C9894")]
		public static bool IsQuestFailed(string questName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001462")]
		[Address(RVA = "0x11C9904", Offset = "0x11C9904", VA = "0x11C9904")]
		public static bool IsQuestAbandoned(string questName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001463")]
		[Address(RVA = "0x11C9974", Offset = "0x11C9974", VA = "0x11C9974")]
		public static bool IsQuestDone(string questName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001464")]
		[Address(RVA = "0x11C8374", Offset = "0x11C8374", VA = "0x11C8374")]
		public static bool IsQuestInStateMask(string questName, QuestState stateMask)
		{
			return default(bool);
		}

		[Token(Token = "0x6001465")]
		[Address(RVA = "0x11C99F0", Offset = "0x11C99F0", VA = "0x11C99F0")]
		public static void StartQuest(string questName)
		{
		}

		[Token(Token = "0x6001466")]
		[Address(RVA = "0x11C9A58", Offset = "0x11C9A58", VA = "0x11C9A58")]
		public static void CompleteQuest(string questName)
		{
		}

		[Token(Token = "0x6001467")]
		[Address(RVA = "0x11C9AC0", Offset = "0x11C9AC0", VA = "0x11C9AC0")]
		public static void FailQuest(string questName)
		{
		}

		[Token(Token = "0x6001468")]
		[Address(RVA = "0x11C9B28", Offset = "0x11C9B28", VA = "0x11C9B28")]
		public static void AbandonQuest(string questName)
		{
		}

		[Token(Token = "0x6001469")]
		[Address(RVA = "0x11C9B90", Offset = "0x11C9B90", VA = "0x11C9B90")]
		public static QuestState DefaultStringToState(string s)
		{
			return default(QuestState);
		}

		[Token(Token = "0x600146A")]
		[Address(RVA = "0x11C8BF8", Offset = "0x11C8BF8", VA = "0x11C8BF8")]
		public static string StateToString(QuestState state)
		{
			return null;
		}

		[Token(Token = "0x600146B")]
		[Address(RVA = "0x11C9CA0", Offset = "0x11C9CA0", VA = "0x11C9CA0")]
		public static string GetQuestTitle(string questName)
		{
			return null;
		}

		[Token(Token = "0x600146C")]
		[Address(RVA = "0x11C9D94", Offset = "0x11C9D94", VA = "0x11C9D94")]
		public static string GetQuestDescription(string questName)
		{
			return null;
		}

		[Token(Token = "0x600146D")]
		[Address(RVA = "0x11C9E80", Offset = "0x11C9E80", VA = "0x11C9E80")]
		public static string GetQuestDescription(string questName, QuestState state)
		{
			return null;
		}

		[Token(Token = "0x600146E")]
		[Address(RVA = "0x11C9FBC", Offset = "0x11C9FBC", VA = "0x11C9FBC")]
		private static string GetDefaultDescriptionFieldForState(QuestState state)
		{
			return null;
		}

		[Token(Token = "0x600146F")]
		[Address(RVA = "0x11CA028", Offset = "0x11CA028", VA = "0x11CA028")]
		public static void SetQuestDescription(string questName, QuestState state, string description)
		{
		}

		[Token(Token = "0x6001470")]
		[Address(RVA = "0x11CA118", Offset = "0x11CA118", VA = "0x11CA118")]
		public static string GetQuestAbandonSequence(string questName)
		{
			return null;
		}

		[Token(Token = "0x6001471")]
		[Address(RVA = "0x11CA1AC", Offset = "0x11CA1AC", VA = "0x11CA1AC")]
		public static void SetQuestAbandonSequence(string questName, string sequence)
		{
		}

		[Token(Token = "0x6001472")]
		[Address(RVA = "0x11CA230", Offset = "0x11CA230", VA = "0x11CA230")]
		public static int GetQuestEntryCount(string questName)
		{
			return default(int);
		}

		[Token(Token = "0x6001473")]
		[Address(RVA = "0x11CA2C4", Offset = "0x11CA2C4", VA = "0x11CA2C4")]
		public static void AddQuestEntry(string questName, string description)
		{
		}

		[Token(Token = "0x6001474")]
		[Address(RVA = "0x11CA5A4", Offset = "0x11CA5A4", VA = "0x11CA5A4")]
		public static string GetQuestEntry(string questName, int entryNumber)
		{
			return null;
		}

		[Token(Token = "0x6001475")]
		[Address(RVA = "0x11CA66C", Offset = "0x11CA66C", VA = "0x11CA66C")]
		public static void SetQuestEntry(string questName, int entryNumber, string description)
		{
		}

		[Token(Token = "0x6001476")]
		[Address(RVA = "0x11CA728", Offset = "0x11CA728", VA = "0x11CA728")]
		public static QuestState GetQuestEntryState(string questName, int entryNumber)
		{
			return default(QuestState);
		}

		[Token(Token = "0x6001477")]
		[Address(RVA = "0x11CA7C0", Offset = "0x11CA7C0", VA = "0x11CA7C0")]
		public static string CurrentQuestEntryState(string questName, double entryNumber)
		{
			return null;
		}

		[Token(Token = "0x6001478")]
		[Address(RVA = "0x11CA8A8", Offset = "0x11CA8A8", VA = "0x11CA8A8")]
		public static string DefaultCurrentQuestEntryState(string questName, int entryNumber)
		{
			return null;
		}

		[Token(Token = "0x6001479")]
		[Address(RVA = "0x11CA970", Offset = "0x11CA970", VA = "0x11CA970")]
		public static void SetQuestEntryState(string questName, int entryNumber, QuestState state)
		{
		}

		[Token(Token = "0x600147A")]
		[Address(RVA = "0x11CA9F4", Offset = "0x11CA9F4", VA = "0x11CA9F4")]
		public static void SetQuestEntryState(string questName, double entryNumber, string state)
		{
		}

		[Token(Token = "0x600147B")]
		[Address(RVA = "0x11CAAF4", Offset = "0x11CAAF4", VA = "0x11CAAF4")]
		public static void DefaultSetQuestEntryState(string questName, int entryNumber, string state)
		{
		}

		[Token(Token = "0x600147C")]
		[Address(RVA = "0x11CA3F4", Offset = "0x11CA3F4", VA = "0x11CA3F4")]
		public static string GetEntryFieldName(int entryNumber)
		{
			return null;
		}

		[Token(Token = "0x600147D")]
		[Address(RVA = "0x11CA4CC", Offset = "0x11CA4CC", VA = "0x11CA4CC")]
		public static string GetEntryStateFieldName(int entryNumber)
		{
			return null;
		}

		[Token(Token = "0x600147E")]
		[Address(RVA = "0x11CADDC", Offset = "0x11CADDC", VA = "0x11CADDC")]
		public static bool IsQuestTrackingAvailable(string questName)
		{
			return default(bool);
		}

		[Token(Token = "0x600147F")]
		[Address(RVA = "0x11CAE74", Offset = "0x11CAE74", VA = "0x11CAE74")]
		public static void SetQuestTrackingAvailable(string questName, bool value)
		{
		}

		[Token(Token = "0x6001480")]
		[Address(RVA = "0x11CAF40", Offset = "0x11CAF40", VA = "0x11CAF40")]
		public static bool IsQuestTrackingEnabled(string questName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001481")]
		[Address(RVA = "0x11CB00C", Offset = "0x11CB00C", VA = "0x11CB00C")]
		public static void SetQuestTracking(string questName, bool value)
		{
		}

		[Token(Token = "0x6001482")]
		[Address(RVA = "0x11CB378", Offset = "0x11CB378", VA = "0x11CB378")]
		public static bool IsQuestAbandonable(string questName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001483")]
		[Address(RVA = "0x11CB410", Offset = "0x11CB410", VA = "0x11CB410")]
		public static string GetQuestGroup(string questName)
		{
			return null;
		}

		[Token(Token = "0x6001484")]
		[Address(RVA = "0x11CB4A4", Offset = "0x11CB4A4", VA = "0x11CB4A4")]
		public static string[] GetAllGroups()
		{
			return null;
		}

		[Token(Token = "0x6001485")]
		[Address(RVA = "0x11CBC54", Offset = "0x11CBC54", VA = "0x11CBC54")]
		public static string[] GetAllGroups(QuestState flags)
		{
			return null;
		}

		[Token(Token = "0x6001486")]
		[Address(RVA = "0x11CB508", Offset = "0x11CB508", VA = "0x11CB508")]
		public static string[] GetAllGroups(QuestState flags, bool sortByGroupName)
		{
			return null;
		}

		[Token(Token = "0x6001487")]
		[Address(RVA = "0x11CB310", Offset = "0x11CB310", VA = "0x11CB310")]
		public static string[] GetAllQuests()
		{
			return null;
		}

		[Token(Token = "0x6001488")]
		[Address(RVA = "0x11CC52C", Offset = "0x11CC52C", VA = "0x11CC52C")]
		public static string[] GetAllQuests(QuestState flags)
		{
			return null;
		}

		[Token(Token = "0x6001489")]
		[Address(RVA = "0x11CC598", Offset = "0x11CC598", VA = "0x11CC598")]
		public static string[] GetAllQuests(QuestState flags, bool sortByName)
		{
			return null;
		}

		[Token(Token = "0x600148A")]
		[Address(RVA = "0x11CBCBC", Offset = "0x11CBCBC", VA = "0x11CBCBC")]
		public static string[] GetAllQuests(QuestState flags, bool sortByName, string group)
		{
			return null;
		}

		[Token(Token = "0x600148B")]
		[Address(RVA = "0x11CC610", Offset = "0x11CC610", VA = "0x11CC610")]
		public static QuestGroupRecord[] GetAllGroupsAndQuests(QuestState flags, bool sort = true)
		{
			return null;
		}

		[Token(Token = "0x600148C")]
		[Address(RVA = "0x11CCE70", Offset = "0x11CCE70", VA = "0x11CCE70")]
		public static void AddQuestStateObserver(string questName, LuaWatchFrequency frequency, QuestChangedDelegate questChangedHandler)
		{
		}

		[Token(Token = "0x600148D")]
		[Address(RVA = "0x11CD0B0", Offset = "0x11CD0B0", VA = "0x11CD0B0")]
		public static void AddQuestStateObserver(string questName, int entryNumber, LuaWatchFrequency frequency, QuestChangedDelegate questChangedHandler)
		{
		}

		[Token(Token = "0x600148E")]
		[Address(RVA = "0x11CD34C", Offset = "0x11CD34C", VA = "0x11CD34C")]
		public static void RemoveQuestStateObserver(string questName, LuaWatchFrequency frequency, QuestChangedDelegate questChangedHandler)
		{
		}

		[Token(Token = "0x600148F")]
		[Address(RVA = "0x11CD65C", Offset = "0x11CD65C", VA = "0x11CD65C")]
		public static void RemoveQuestStateObserver(string questName, int entryNumber, LuaWatchFrequency frequency, QuestChangedDelegate questChangedHandler)
		{
		}

		[Token(Token = "0x6001490")]
		[Address(RVA = "0x11CD8DC", Offset = "0x11CD8DC", VA = "0x11CD8DC")]
		public static void RemoveAllQuestStateObservers()
		{
		}

		[Token(Token = "0x6001491")]
		[Address(RVA = "0x11CDA2C", Offset = "0x11CDA2C", VA = "0x11CDA2C")]
		public static void UpdateQuestIndicators(string questName)
		{
		}
	}
	[Token(Token = "0x200022D")]
	public abstract class QuestLogWindow : MonoBehaviour
	{
		[Token(Token = "0x20005EF")]
		public enum QuestHeadingSource
		{
			[Token(Token = "0x4001DE2")]
			Name,
			[Token(Token = "0x4001DE3")]
			Description
		}

		[Serializable]
		[Token(Token = "0x20005F0")]
		public class QuestInfo
		{
			[Token(Token = "0x4001DE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA25398", Offset = "0xA25398")]
			private string <Group>k__BackingField;

			[Token(Token = "0x4001DE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA253A8", Offset = "0xA253A8")]
			private string <Title>k__BackingField;

			[Token(Token = "0x4001DE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA253B8", Offset = "0xA253B8")]
			private FormattedText <Heading>k__BackingField;

			[Token(Token = "0x4001DE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA253C8", Offset = "0xA253C8")]
			private FormattedText <Description>k__BackingField;

			[Token(Token = "0x4001DE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA253D8", Offset = "0xA253D8")]
			private FormattedText[] <Entries>k__BackingField;

			[Token(Token = "0x4001DE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA253E8", Offset = "0xA253E8")]
			private QuestState[] <EntryStates>k__BackingField;

			[Token(Token = "0x4001DEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA253F8", Offset = "0xA253F8")]
			private bool <Trackable>k__BackingField;

			[Token(Token = "0x4001DEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA25408", Offset = "0xA25408")]
			private bool <Track>k__BackingField;

			[Token(Token = "0x4001DEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA25418", Offset = "0xA25418")]
			private bool <Abandonable>k__BackingField;

			[Token(Token = "0x1700053C")]
			public string Group
			{
				[Token(Token = "0x6002A34")]
				[Address(RVA = "0x11CF4F8", Offset = "0x11CF4F8", VA = "0x11CF4F8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA305B0", Offset = "0xA305B0")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002A35")]
				[Address(RVA = "0x11CF500", Offset = "0x11CF500", VA = "0x11CF500")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA305C0", Offset = "0xA305C0")]
				set
				{
				}
			}

			[Token(Token = "0x1700053D")]
			public string Title
			{
				[Token(Token = "0x6002A36")]
				[Address(RVA = "0x11CF508", Offset = "0x11CF508", VA = "0x11CF508")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA305D0", Offset = "0xA305D0")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002A37")]
				[Address(RVA = "0x11CF510", Offset = "0x11CF510", VA = "0x11CF510")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA305E0", Offset = "0xA305E0")]
				set
				{
				}
			}

			[Token(Token = "0x1700053E")]
			public FormattedText Heading
			{
				[Token(Token = "0x6002A38")]
				[Address(RVA = "0x11CF518", Offset = "0x11CF518", VA = "0x11CF518")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA305F0", Offset = "0xA305F0")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002A39")]
				[Address(RVA = "0x11CF520", Offset = "0x11CF520", VA = "0x11CF520")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA30600", Offset = "0xA30600")]
				set
				{
				}
			}

			[Token(Token = "0x1700053F")]
			public FormattedText Description
			{
				[Token(Token = "0x6002A3A")]
				[Address(RVA = "0x11CF528", Offset = "0x11CF528", VA = "0x11CF528")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA30610", Offset = "0xA30610")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002A3B")]
				[Address(RVA = "0x11CF530", Offset = "0x11CF530", VA = "0x11CF530")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA30620", Offset = "0xA30620")]
				set
				{
				}
			}

			[Token(Token = "0x17000540")]
			public FormattedText[] Entries
			{
				[Token(Token = "0x6002A3C")]
				[Address(RVA = "0x11CF538", Offset = "0x11CF538", VA = "0x11CF538")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA30630", Offset = "0xA30630")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002A3D")]
				[Address(RVA = "0x11CF540", Offset = "0x11CF540", VA = "0x11CF540")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA30640", Offset = "0xA30640")]
				set
				{
				}
			}

			[Token(Token = "0x17000541")]
			public QuestState[] EntryStates
			{
				[Token(Token = "0x6002A3E")]
				[Address(RVA = "0x11CF548", Offset = "0x11CF548", VA = "0x11CF548")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA30650", Offset = "0xA30650")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002A3F")]
				[Address(RVA = "0x11CF550", Offset = "0x11CF550", VA = "0x11CF550")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA30660", Offset = "0xA30660")]
				set
				{
				}
			}

			[Token(Token = "0x17000542")]
			public bool Trackable
			{
				[Token(Token = "0x6002A40")]
				[Address(RVA = "0x11CF558", Offset = "0x11CF558", VA = "0x11CF558")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA30670", Offset = "0xA30670")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6002A41")]
				[Address(RVA = "0x11CF560", Offset = "0x11CF560", VA = "0x11CF560")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA30680", Offset = "0xA30680")]
				set
				{
				}
			}

			[Token(Token = "0x17000543")]
			public bool Track
			{
				[Token(Token = "0x6002A42")]
				[Address(RVA = "0x11CF56C", Offset = "0x11CF56C", VA = "0x11CF56C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA30690", Offset = "0xA30690")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6002A43")]
				[Address(RVA = "0x11CF574", Offset = "0x11CF574", VA = "0x11CF574")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA306A0", Offset = "0xA306A0")]
				set
				{
				}
			}

			[Token(Token = "0x17000544")]
			public bool Abandonable
			{
				[Token(Token = "0x6002A44")]
				[Address(RVA = "0x11CF580", Offset = "0x11CF580", VA = "0x11CF580")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA306B0", Offset = "0xA306B0")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6002A45")]
				[Address(RVA = "0x11CF588", Offset = "0x11CF588", VA = "0x11CF588")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA306C0", Offset = "0xA306C0")]
				set
				{
				}
			}

			[Token(Token = "0x6002A46")]
			[Address(RVA = "0x11CEDBC", Offset = "0x11CEDBC", VA = "0x11CEDBC")]
			public QuestInfo(string group, string title, FormattedText heading, FormattedText description, FormattedText[] entries, QuestState[] entryStates, bool trackable, bool track, bool abandonable)
			{
			}

			[Token(Token = "0x6002A47")]
			[Address(RVA = "0x11CF594", Offset = "0x11CF594", VA = "0x11CF594")]
			public QuestInfo(string title, FormattedText heading, FormattedText description, FormattedText[] entries, QuestState[] entryStates, bool trackable, bool track, bool abandonable)
			{
			}
		}

		[Token(Token = "0x4000BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18E20", Offset = "0xA18E20")]
		public TextTable textTable;

		[Token(Token = "0x4000BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18E58", Offset = "0xA18E58")]
		public string noActiveQuestsText;

		[Token(Token = "0x4000BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18E90", Offset = "0xA18E90")]
		public string noCompletedQuestsText;

		[Token(Token = "0x4000BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18EC8", Offset = "0xA18EC8")]
		public bool checkVisibleField;

		[Token(Token = "0x4000BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public QuestHeadingSource questHeadingSource;

		[Token(Token = "0x4000C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18F00", Offset = "0xA18F00")]
		[QuestState]
		public QuestState abandonQuestState;

		[Token(Token = "0x4000C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool pauseWhileOpen;

		[Token(Token = "0x4000C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		public bool unlockCursorWhileOpen;

		[Token(Token = "0x4000C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18F4C", Offset = "0xA18F4C")]
		public bool useGroups;

		[Token(Token = "0x4000C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18F84", Offset = "0xA18F84")]
		public bool trackOneQuestAtATime;

		[Token(Token = "0x4000C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA18FBC", Offset = "0xA18FBC")]
		private bool <isOpen>k__BackingField;

		[Token(Token = "0x4000C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA18FCC", Offset = "0xA18FCC")]
		private QuestInfo[] <quests>k__BackingField;

		[Token(Token = "0x4000C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA18FDC", Offset = "0xA18FDC")]
		private string[] <groups>k__BackingField;

		[Token(Token = "0x4000C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA18FEC", Offset = "0xA18FEC")]
		private string <selectedQuest>k__BackingField;

		[Token(Token = "0x4000C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA18FFC", Offset = "0xA18FFC")]
		private string <noQuestsMessage>k__BackingField;

		[Token(Token = "0x4000C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected QuestState currentQuestStateMask;

		[Token(Token = "0x4000C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float previousTimeScale;

		[Token(Token = "0x4000C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool wasCursorActive;

		[Token(Token = "0x17000273")]
		public bool isOpen
		{
			[Token(Token = "0x6001493")]
			[Address(RVA = "0x11CE24C", Offset = "0x11CE24C", VA = "0x11CE24C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2AAAC", Offset = "0xA2AAAC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001494")]
			[Address(RVA = "0x11CE254", Offset = "0x11CE254", VA = "0x11CE254")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2AABC", Offset = "0xA2AABC")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000274")]
		public QuestInfo[] quests
		{
			[Token(Token = "0x6001495")]
			[Address(RVA = "0x11CE260", Offset = "0x11CE260", VA = "0x11CE260")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2AACC", Offset = "0xA2AACC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001496")]
			[Address(RVA = "0x11CE268", Offset = "0x11CE268", VA = "0x11CE268")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2AADC", Offset = "0xA2AADC")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000275")]
		public string[] groups
		{
			[Token(Token = "0x6001497")]
			[Address(RVA = "0x11CE270", Offset = "0x11CE270", VA = "0x11CE270")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2AAEC", Offset = "0xA2AAEC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001498")]
			[Address(RVA = "0x11CE278", Offset = "0x11CE278", VA = "0x11CE278")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2AAFC", Offset = "0xA2AAFC")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000276")]
		public string selectedQuest
		{
			[Token(Token = "0x6001499")]
			[Address(RVA = "0x11CE280", Offset = "0x11CE280", VA = "0x11CE280")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2AB0C", Offset = "0xA2AB0C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600149A")]
			[Address(RVA = "0x11CE288", Offset = "0x11CE288", VA = "0x11CE288")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2AB1C", Offset = "0xA2AB1C")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000277")]
		public string noQuestsMessage
		{
			[Token(Token = "0x600149B")]
			[Address(RVA = "0x11CE290", Offset = "0x11CE290", VA = "0x11CE290")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2AB2C", Offset = "0xA2AB2C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600149C")]
			[Address(RVA = "0x11CE298", Offset = "0x11CE298", VA = "0x11CE298")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2AB3C", Offset = "0xA2AB3C")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000278")]
		public virtual bool isShowingActiveQuests
		{
			[Token(Token = "0x600149D")]
			[Address(RVA = "0x11CE2A0", Offset = "0x11CE2A0", VA = "0x11CE2A0", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000279")]
		public bool IsOpen
		{
			[Token(Token = "0x600149E")]
			[Address(RVA = "0x11CE2B0", Offset = "0x11CE2B0", VA = "0x11CE2B0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600149F")]
			[Address(RVA = "0x11CE2B8", Offset = "0x11CE2B8", VA = "0x11CE2B8")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700027A")]
		public QuestInfo[] Quests
		{
			[Token(Token = "0x60014A0")]
			[Address(RVA = "0x11CE2C4", Offset = "0x11CE2C4", VA = "0x11CE2C4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014A1")]
			[Address(RVA = "0x11CE2CC", Offset = "0x11CE2CC", VA = "0x11CE2CC")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700027B")]
		public string[] Groups
		{
			[Token(Token = "0x60014A2")]
			[Address(RVA = "0x11CE2D4", Offset = "0x11CE2D4", VA = "0x11CE2D4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014A3")]
			[Address(RVA = "0x11CE2DC", Offset = "0x11CE2DC", VA = "0x11CE2DC")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700027C")]
		public string SelectedQuest
		{
			[Token(Token = "0x60014A4")]
			[Address(RVA = "0x11CE2E4", Offset = "0x11CE2E4", VA = "0x11CE2E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014A5")]
			[Address(RVA = "0x11CE2EC", Offset = "0x11CE2EC", VA = "0x11CE2EC")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700027D")]
		public string NoQuestsMessage
		{
			[Token(Token = "0x60014A6")]
			[Address(RVA = "0x11CE2F4", Offset = "0x11CE2F4", VA = "0x11CE2F4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014A7")]
			[Address(RVA = "0x11CE2FC", Offset = "0x11CE2FC", VA = "0x11CE2FC")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700027E")]
		public bool IsShowingActiveQuests
		{
			[Token(Token = "0x60014A8")]
			[Address(RVA = "0x11CE304", Offset = "0x11CE304", VA = "0x11CE304")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60014A9")]
		[Address(RVA = "0x11CE310", Offset = "0x11CE310", VA = "0x11CE310", Slot = "5")]
		public virtual void OpenWindow(Action openedWindowHandler)
		{
		}

		[Token(Token = "0x60014AA")]
		[Address(RVA = "0x11CE32C", Offset = "0x11CE32C", VA = "0x11CE32C", Slot = "6")]
		public virtual void CloseWindow(Action closedWindowHandler)
		{
		}

		[Token(Token = "0x60014AB")]
		[Address(RVA = "0x11CE348", Offset = "0x11CE348", VA = "0x11CE348", Slot = "7")]
		public virtual void OnQuestListUpdated()
		{
		}

		[Token(Token = "0x60014AC")]
		[Address(RVA = "0x11CE34C", Offset = "0x11CE34C", VA = "0x11CE34C", Slot = "8")]
		public virtual void ConfirmAbandonQuest(string title, Action confirmedAbandonQuestHandler)
		{
		}

		[Token(Token = "0x60014AD")]
		[Address(RVA = "0x11CE350", Offset = "0x11CE350", VA = "0x11CE350", Slot = "9")]
		public virtual void Awake()
		{
		}

		[Token(Token = "0x60014AE")]
		[Address(RVA = "0x11CE3E8", Offset = "0x11CE3E8", VA = "0x11CE3E8", Slot = "10")]
		public virtual void Open()
		{
		}

		[Token(Token = "0x60014AF")]
		[Address(RVA = "0x11CE4AC", Offset = "0x11CE4AC", VA = "0x11CE4AC", Slot = "11")]
		protected virtual void OnOpenedWindow()
		{
		}

		[Token(Token = "0x60014B0")]
		[Address(RVA = "0x11CE4C8", Offset = "0x11CE4C8", VA = "0x11CE4C8", Slot = "12")]
		public virtual void Close()
		{
		}

		[Token(Token = "0x60014B1")]
		[Address(RVA = "0x11CE548", Offset = "0x11CE548", VA = "0x11CE548", Slot = "13")]
		protected virtual void OnClosedWindow()
		{
		}

		[Token(Token = "0x60014B2")]
		[Address(RVA = "0x11CE55C", Offset = "0x11CE55C", VA = "0x11CE55C", Slot = "14")]
		protected virtual void PauseGameplay()
		{
		}

		[Token(Token = "0x60014B3")]
		[Address(RVA = "0x11CE608", Offset = "0x11CE608", VA = "0x11CE608", Slot = "15")]
		protected virtual void ResumeGameplay()
		{
		}

		[Token(Token = "0x60014B4")]
		[Address(RVA = "0x11CE6A0", Offset = "0x11CE6A0", VA = "0x11CE6A0", Slot = "16")]
		public virtual bool IsQuestVisible(string questTitle)
		{
			return default(bool);
		}

		[Token(Token = "0x60014B5")]
		[Address(RVA = "0x11CE78C", Offset = "0x11CE78C", VA = "0x11CE78C", Slot = "17")]
		protected virtual void ShowQuests(QuestState questStateMask)
		{
		}

		[Token(Token = "0x60014B6")]
		[Address(RVA = "0x11CE9E8", Offset = "0x11CE9E8", VA = "0x11CE9E8", Slot = "18")]
		protected virtual QuestInfo GetQuestInfo(string group, string title)
		{
			return null;
		}

		[Token(Token = "0x60014B7")]
		[Address(RVA = "0x11CEE48", Offset = "0x11CEE48", VA = "0x11CEE48", Slot = "19")]
		protected virtual string GetNoQuestsMessage(QuestState questStateMask)
		{
			return null;
		}

		[Token(Token = "0x60014B8")]
		[Address(RVA = "0x11CEE70", Offset = "0x11CEE70", VA = "0x11CEE70", Slot = "20")]
		public virtual string GetLocalizedText(string fieldName)
		{
			return null;
		}

		[Token(Token = "0x60014B9")]
		[Address(RVA = "0x11CEFB8", Offset = "0x11CEFB8", VA = "0x11CEFB8", Slot = "21")]
		public virtual bool IsSelectedQuest(QuestInfo questInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x60014BA")]
		[Address(RVA = "0x11CEFDC", Offset = "0x11CEFDC", VA = "0x11CEFDC")]
		public void ClickClose(object data)
		{
		}

		[Token(Token = "0x60014BB")]
		[Address(RVA = "0x11CEFE8", Offset = "0x11CEFE8", VA = "0x11CEFE8", Slot = "22")]
		public virtual void ClickShowActiveQuests(object data)
		{
		}

		[Token(Token = "0x60014BC")]
		[Address(RVA = "0x11CEFFC", Offset = "0x11CEFFC", VA = "0x11CEFFC", Slot = "23")]
		public virtual void ClickShowCompletedQuests(object data)
		{
		}

		[Token(Token = "0x60014BD")]
		[Address(RVA = "0x11CF010", Offset = "0x11CF010", VA = "0x11CF010", Slot = "24")]
		public virtual void ClickQuest(object data)
		{
		}

		[Token(Token = "0x60014BE")]
		[Address(RVA = "0x11CF178", Offset = "0x11CF178", VA = "0x11CF178", Slot = "25")]
		public virtual void ClickAbandonQuest(object data)
		{
		}

		[Token(Token = "0x60014BF")]
		[Address(RVA = "0x11CF220", Offset = "0x11CF220", VA = "0x11CF220", Slot = "26")]
		protected virtual void OnConfirmAbandonQuest()
		{
		}

		[Token(Token = "0x60014C0")]
		[Address(RVA = "0x11CF360", Offset = "0x11CF360", VA = "0x11CF360", Slot = "27")]
		public virtual void ClickTrackQuest(object data)
		{
		}

		[Token(Token = "0x60014C1")]
		[Address(RVA = "0x11CF0CC", Offset = "0x11CF0CC", VA = "0x11CF0CC")]
		private bool IsString(object data)
		{
			return default(bool);
		}

		[Token(Token = "0x60014C2")]
		[Address(RVA = "0x11CF3F8", Offset = "0x11CF3F8", VA = "0x11CF3F8", Slot = "28")]
		public virtual void ClickShowActiveQuestsButton()
		{
		}

		[Token(Token = "0x60014C3")]
		[Address(RVA = "0x11CF40C", Offset = "0x11CF40C", VA = "0x11CF40C")]
		public void ClickShowCompletedQuestsButton()
		{
		}

		[Token(Token = "0x60014C4")]
		[Address(RVA = "0x11CF420", Offset = "0x11CF420", VA = "0x11CF420")]
		public void ClickCloseButton()
		{
		}

		[Token(Token = "0x60014C5")]
		[Address(RVA = "0x11CF42C", Offset = "0x11CF42C", VA = "0x11CF42C")]
		public void ClickAbandonQuestButton()
		{
		}

		[Token(Token = "0x60014C6")]
		[Address(RVA = "0x11CF440", Offset = "0x11CF440", VA = "0x11CF440")]
		public void ClickTrackQuestButton()
		{
		}

		[Token(Token = "0x60014C7")]
		[Address(RVA = "0x11CF454", Offset = "0x11CF454", VA = "0x11CF454")]
		public void UpdateTracker()
		{
		}

		[Token(Token = "0x60014C8")]
		[Address(RVA = "0x11CF474", Offset = "0x11CF474", VA = "0x11CF474")]
		protected QuestLogWindow()
		{
		}
	}
	[Token(Token = "0x200022E")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0836C", Offset = "0xA0836C")]
	public class QuestLogWindowHotkey : MonoBehaviour
	{
		[Token(Token = "0x4000C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1900C", Offset = "0xA1900C")]
		public KeyCode key;

		[Token(Token = "0x4000C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA19044", Offset = "0xA19044")]
		public string buttonName;

		[Token(Token = "0x4000C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1907C", Offset = "0xA1907C")]
		public QuestLogWindow questLogWindow;

		[Token(Token = "0x1700027F")]
		public QuestLogWindow runtimeQuestLogWindow
		{
			[Token(Token = "0x60014C9")]
			[Address(RVA = "0x11CF658", Offset = "0x11CF658", VA = "0x11CF658")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014CA")]
		[Address(RVA = "0x11CF70C", Offset = "0x11CF70C", VA = "0x11CF70C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014CB")]
		[Address(RVA = "0x11CF7B8", Offset = "0x11CF7B8", VA = "0x11CF7B8")]
		private void Update()
		{
		}

		[Token(Token = "0x60014CC")]
		[Address(RVA = "0x11CF930", Offset = "0x11CF930", VA = "0x11CF930")]
		public QuestLogWindowHotkey()
		{
		}
	}
	[Token(Token = "0x200022F")]
	[Flags]
	public enum QuestState
	{
		[Token(Token = "0x4000C11")]
		Unassigned = 1,
		[Token(Token = "0x4000C12")]
		Active = 2,
		[Token(Token = "0x4000C13")]
		Success = 4,
		[Token(Token = "0x4000C14")]
		Failure = 8,
		[Token(Token = "0x4000C15")]
		Abandoned = 0x10,
		[Token(Token = "0x4000C16")]
		Grantable = 0x20
	}
	[Token(Token = "0x2000230")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA083B4", Offset = "0xA083B4")]
	public class QuestStateDispatcher : MonoBehaviour
	{
		[Token(Token = "0x4000C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<QuestStateListener> m_listeners;

		[Token(Token = "0x60014CD")]
		[Address(RVA = "0x11CF9D0", Offset = "0x11CF9D0", VA = "0x11CF9D0")]
		public void AddListener(QuestStateListener listener)
		{
		}

		[Token(Token = "0x60014CE")]
		[Address(RVA = "0x11CFA7C", Offset = "0x11CFA7C", VA = "0x11CFA7C")]
		public void RemoveListener(QuestStateListener listener)
		{
		}

		[Token(Token = "0x60014CF")]
		[Address(RVA = "0x11CDACC", Offset = "0x11CDACC", VA = "0x11CDACC")]
		public void OnQuestStateChange(string questName)
		{
		}

		[Token(Token = "0x60014D0")]
		[Address(RVA = "0x11CFAE4", Offset = "0x11CFAE4", VA = "0x11CFAE4")]
		public QuestStateDispatcher()
		{
		}
	}
	[Token(Token = "0x2000231")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA083EC", Offset = "0xA083EC")]
	public class QuestStateIndicator : MonoBehaviour
	{
		[Token(Token = "0x4000C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA190B4", Offset = "0xA190B4")]
		public GameObject[] indicators;

		[Token(Token = "0x4000C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<List<QuestStateListener>> m_currentIndicatorCount;

		[Token(Token = "0x60014D1")]
		[Address(RVA = "0x11CFB54", Offset = "0x11CFB54", VA = "0x11CFB54")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014D2")]
		[Address(RVA = "0x11CFC34", Offset = "0x11CFC34", VA = "0x11CFC34")]
		private void Start()
		{
		}

		[Token(Token = "0x60014D3")]
		[Address(RVA = "0x11CFB58", Offset = "0x11CFB58", VA = "0x11CFB58")]
		private void InitializeCurrentIndicatorCount()
		{
		}

		[Token(Token = "0x60014D4")]
		[Address(RVA = "0x11CFF64", Offset = "0x11CFF64", VA = "0x11CFF64")]
		public void SetIndicatorLevel(QuestStateListener listener, int indicatorLevel)
		{
		}

		[Token(Token = "0x60014D5")]
		[Address(RVA = "0x11CFC38", Offset = "0x11CFC38", VA = "0x11CFC38")]
		public void UpdateIndicator()
		{
		}

		[Token(Token = "0x60014D6")]
		[Address(RVA = "0x11D02E0", Offset = "0x11D02E0", VA = "0x11D02E0")]
		public QuestStateIndicator()
		{
		}
	}
	[Token(Token = "0x2000232")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA08424", Offset = "0xA08424")]
	public class QuestStateListener : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20005F1")]
		public class QuestStateIndicatorLevel
		{
			[Token(Token = "0x4001DED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA25428", Offset = "0xA25428")]
			public QuestState questState;

			[Token(Token = "0x4001DEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA25460", Offset = "0xA25460")]
			public Condition condition;

			[Token(Token = "0x4001DEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA25498", Offset = "0xA25498")]
			public int indicatorLevel;

			[Token(Token = "0x4001DF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UnityEvent onEnterState;

			[Token(Token = "0x6002A48")]
			[Address(RVA = "0x11D13B8", Offset = "0x11D13B8", VA = "0x11D13B8")]
			public QuestStateIndicatorLevel()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005F2")]
		public class QuestEntryStateIndicatorLevel
		{
			[Token(Token = "0x4001DF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA254D0", Offset = "0xA254D0")]
			public int entryNumber;

			[Token(Token = "0x4001DF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA25508", Offset = "0xA25508")]
			public QuestState questState;

			[Token(Token = "0x4001DF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA25540", Offset = "0xA25540")]
			public Condition condition;

			[Token(Token = "0x4001DF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA25578", Offset = "0xA25578")]
			public int indicatorLevel;

			[Token(Token = "0x4001DF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UnityEvent onEnterState;

			[Token(Token = "0x6002A49")]
			[Address(RVA = "0x11D1350", Offset = "0x11D1350", VA = "0x11D1350")]
			public QuestEntryStateIndicatorLevel()
			{
			}
		}

		[Token(Token = "0x20005F3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DBC8", Offset = "0xA0DBC8")]
		private sealed class <Start>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001DF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public QuestStateListener <>4__this;

			[Token(Token = "0x17000545")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002A4D")]
				[Address(RVA = "0x11D12E0", Offset = "0x11D12E0", VA = "0x11D12E0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000546")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002A4F")]
				[Address(RVA = "0x11D1348", Offset = "0x11D1348", VA = "0x11D1348", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002A4A")]
			[Address(RVA = "0x11D06F8", Offset = "0x11D06F8", VA = "0x11D06F8")]
			[DebuggerHidden]
			public <Start>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6002A4B")]
			[Address(RVA = "0x11D0FA8", Offset = "0x11D0FA8", VA = "0x11D0FA8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002A4C")]
			[Address(RVA = "0x11D0FAC", Offset = "0x11D0FAC", VA = "0x11D0FAC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002A4E")]
			[Address(RVA = "0x11D12E8", Offset = "0x11D12E8", VA = "0x11D12E8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "QuestPopupAttribute", RVA = "0xA190EC", Offset = "0xA190EC")]
		public string questName;

		[Token(Token = "0x4000C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public QuestStateIndicatorLevel[] questStateIndicatorLevels;

		[Token(Token = "0x4000C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public QuestEntryStateIndicatorLevel[] questEntryStateIndicatorLevels;

		[Token(Token = "0x4000C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected QuestStateDispatcher m_questStateDispatcher;

		[Token(Token = "0x4000C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected QuestStateIndicator m_questStateIndicator;

		[Token(Token = "0x4000C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_started;

		[Token(Token = "0x17000280")]
		protected QuestStateDispatcher questStateDispatcher
		{
			[Token(Token = "0x60014D7")]
			[Address(RVA = "0x11D0368", Offset = "0x11D0368", VA = "0x11D0368")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000281")]
		protected QuestStateIndicator questStateIndicator
		{
			[Token(Token = "0x60014D8")]
			[Address(RVA = "0x11D05D0", Offset = "0x11D05D0", VA = "0x11D05D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000282")]
		protected bool started
		{
			[Token(Token = "0x60014D9")]
			[Address(RVA = "0x11D0668", Offset = "0x11D0668", VA = "0x11D0668")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60014DA")]
			[Address(RVA = "0x11D0670", Offset = "0x11D0670", VA = "0x11D0670")]
			set
			{
			}
		}

		[Token(Token = "0x60014DB")]
		[Address(RVA = "0x11D067C", Offset = "0x11D067C", VA = "0x11D067C", Slot = "4")]
		protected virtual void OnApplicationQuit()
		{
		}

		[Token(Token = "0x60014DC")]
		[Address(RVA = "0x11D0688", Offset = "0x11D0688", VA = "0x11D0688", Slot = "5")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA2AB4C", Offset = "0xA2AB4C")]
		protected virtual IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x60014DD")]
		[Address(RVA = "0x11D0724", Offset = "0x11D0724", VA = "0x11D0724", Slot = "6")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60014DE")]
		[Address(RVA = "0x11D0764", Offset = "0x11D0764", VA = "0x11D0764", Slot = "7")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60014DF")]
		[Address(RVA = "0x11D07F8", Offset = "0x11D07F8", VA = "0x11D07F8", Slot = "8")]
		public virtual void OnChange()
		{
		}

		[Token(Token = "0x60014E0")]
		[Address(RVA = "0x11D0804", Offset = "0x11D0804", VA = "0x11D0804", Slot = "9")]
		public virtual void UpdateIndicator()
		{
		}

		[Token(Token = "0x60014E1")]
		[Address(RVA = "0x11D0F30", Offset = "0x11D0F30", VA = "0x11D0F30")]
		public QuestStateListener()
		{
		}
	}
	[Token(Token = "0x2000233")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0845C", Offset = "0xA0845C")]
	public class ConversationStateSaver : Saver
	{
		[Serializable]
		[Token(Token = "0x20005F4")]
		public class Data
		{
			[Token(Token = "0x4001DF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int conversationID;

			[Token(Token = "0x4001DFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int entryID;

			[Token(Token = "0x4001DFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string actorName;

			[Token(Token = "0x4001DFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string conversantName;

			[Token(Token = "0x4001DFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public List<string> actorGOs;

			[Token(Token = "0x4001DFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public List<SubtitlePanelNumber> actorGOPanels;

			[Token(Token = "0x4001DFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public List<int> actorIDs;

			[Token(Token = "0x4001E00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public List<SubtitlePanelNumber> actorIDPanels;

			[Token(Token = "0x6002A50")]
			[Address(RVA = "0x14722D8", Offset = "0x14722D8", VA = "0x14722D8")]
			public Data()
			{
			}
		}

		[Token(Token = "0x17000283")]
		public override string key
		{
			[Token(Token = "0x60014E2")]
			[Address(RVA = "0x1471EAC", Offset = "0x1471EAC", VA = "0x1471EAC", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014E3")]
			[Address(RVA = "0x1471FB0", Offset = "0x1471FB0", VA = "0x1471FB0", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x60014E4")]
		[Address(RVA = "0x1471FBC", Offset = "0x1471FBC", VA = "0x1471FBC", Slot = "16")]
		public override string RecordData()
		{
			return null;
		}

		[Token(Token = "0x60014E5")]
		[Address(RVA = "0x14722E0", Offset = "0x14722E0", VA = "0x14722E0", Slot = "17")]
		public override void ApplyData(string s)
		{
		}

		[Token(Token = "0x60014E6")]
		[Address(RVA = "0x14728BC", Offset = "0x14728BC", VA = "0x14728BC")]
		public ConversationStateSaver()
		{
		}
	}
	[Token(Token = "0x2000234")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA08494", Offset = "0xA08494")]
	public class DialogueSystemSaver : Saver
	{
		[Serializable]
		[Token(Token = "0x20005F5")]
		public class RawData
		{
			[Token(Token = "0x4001E01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public byte[] bytes;

			[Token(Token = "0x6002A51")]
			[Address(RVA = "0x15F8280", Offset = "0x15F8280", VA = "0x15F8280")]
			public RawData()
			{
			}
		}

		[Token(Token = "0x4000C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA19100", Offset = "0xA19100")]
		public bool saveRawData;

		[Token(Token = "0x4000C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool m_changingScenes;

		[Token(Token = "0x60014E7")]
		[Address(RVA = "0x15F815C", Offset = "0x15F815C", VA = "0x15F815C", Slot = "12")]
		public override void Reset()
		{
		}

		[Token(Token = "0x60014E8")]
		[Address(RVA = "0x15F8190", Offset = "0x15F8190", VA = "0x15F8190", Slot = "16")]
		public override string RecordData()
		{
			return null;
		}

		[Token(Token = "0x60014E9")]
		[Address(RVA = "0x15F8288", Offset = "0x15F8288", VA = "0x15F8288", Slot = "18")]
		public override void ApplyDataImmediate()
		{
		}

		[Token(Token = "0x60014EA")]
		[Address(RVA = "0x15F83E0", Offset = "0x15F83E0", VA = "0x15F83E0", Slot = "17")]
		public override void ApplyData(string data)
		{
		}

		[Token(Token = "0x60014EB")]
		[Address(RVA = "0x15F84EC", Offset = "0x15F84EC", VA = "0x15F84EC", Slot = "19")]
		public override void OnBeforeSceneChange()
		{
		}

		[Token(Token = "0x60014EC")]
		[Address(RVA = "0x15F855C", Offset = "0x15F855C", VA = "0x15F855C", Slot = "20")]
		public override void OnRestartGame()
		{
		}

		[Token(Token = "0x60014ED")]
		[Address(RVA = "0x15F85B8", Offset = "0x15F85B8", VA = "0x15F85B8")]
		public DialogueSystemSaver()
		{
		}
	}
	[Token(Token = "0x2000235")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA084CC", Offset = "0xA084CC")]
	public class GameSaver : MonoBehaviour
	{
		[Token(Token = "0x20005F6")]
		public enum FunctionOnUse
		{
			[Token(Token = "0x4001E03")]
			None,
			[Token(Token = "0x4001E04")]
			Save,
			[Token(Token = "0x4001E05")]
			Load,
			[Token(Token = "0x4001E06")]
			Restart
		}

		[Token(Token = "0x4000C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string playerPrefsKey;

		[Token(Token = "0x4000C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int slot;

		[Token(Token = "0x4000C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public FunctionOnUse functionOnUse;

		[Token(Token = "0x4000C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool includeAllItemData;

		[Token(Token = "0x4000C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool includeLocationData;

		[Token(Token = "0x4000C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool includeSimStatus;

		[Token(Token = "0x4000C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string startingLevel;

		[Token(Token = "0x4000C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool dontDestroyOnLoad;

		[Token(Token = "0x60014EE")]
		[Address(RVA = "0x1716D38", Offset = "0x1716D38", VA = "0x1716D38")]
		public void Awake()
		{
		}

		[Token(Token = "0x60014EF")]
		[Address(RVA = "0x1716E38", Offset = "0x1716E38", VA = "0x1716E38")]
		public void OnUse()
		{
		}

		[Token(Token = "0x60014F0")]
		[Address(RVA = "0x1716E70", Offset = "0x1716E70", VA = "0x1716E70")]
		public void SaveGame(int slot)
		{
		}

		[Token(Token = "0x60014F1")]
		[Address(RVA = "0x1716E60", Offset = "0x1716E60", VA = "0x1716E60")]
		public void SaveGame()
		{
		}

		[Token(Token = "0x60014F2")]
		[Address(RVA = "0x1717370", Offset = "0x1717370", VA = "0x1717370")]
		public void LoadGame(int slot)
		{
		}

		[Token(Token = "0x60014F3")]
		[Address(RVA = "0x1716E68", Offset = "0x1716E68", VA = "0x1716E68")]
		public void LoadGame()
		{
		}

		[Token(Token = "0x60014F4")]
		[Address(RVA = "0x1717C2C", Offset = "0x1717C2C", VA = "0x1717C2C")]
		public void SaveGame(string slotString)
		{
		}

		[Token(Token = "0x60014F5")]
		[Address(RVA = "0x1717C9C", Offset = "0x1717C9C", VA = "0x1717C9C")]
		public void LoadGame(string slotString)
		{
		}

		[Token(Token = "0x60014F6")]
		[Address(RVA = "0x1717CDC", Offset = "0x1717CDC", VA = "0x1717CDC")]
		public void RestartGame()
		{
		}

		[Token(Token = "0x60014F7")]
		[Address(RVA = "0x1717848", Offset = "0x1717848", VA = "0x1717848")]
		private LevelManager FindLevelManager()
		{
			return null;
		}

		[Token(Token = "0x60014F8")]
		[Address(RVA = "0x1717C6C", Offset = "0x1717C6C", VA = "0x1717C6C")]
		private int StringToSlot(string slotString)
		{
			return default(int);
		}

		[Token(Token = "0x60014F9")]
		[Address(RVA = "0x1717F5C", Offset = "0x1717F5C", VA = "0x1717F5C")]
		public void Record()
		{
		}

		[Token(Token = "0x60014FA")]
		[Address(RVA = "0x1718100", Offset = "0x1718100", VA = "0x1718100")]
		public void Apply()
		{
		}

		[Token(Token = "0x60014FB")]
		[Address(RVA = "0x17182CC", Offset = "0x17182CC", VA = "0x17182CC")]
		public GameSaver()
		{
		}
	}
	[Token(Token = "0x2000236")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA08504", Offset = "0xA08504")]
	public class LevelManager : MonoBehaviour
	{
		[Token(Token = "0x20005F7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DBD8", Offset = "0xA0DBD8")]
		private sealed class <LoadLevelFromSaveData>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LevelManager <>4__this;

			[Token(Token = "0x4001E0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string saveData;

			[Token(Token = "0x4001E0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private string <levelName>5__2;

			[Token(Token = "0x4001E0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private AsyncOperation <async>5__3;

			[Token(Token = "0x17000547")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002A55")]
				[Address(RVA = "0x171ABE0", Offset = "0x171ABE0", VA = "0x171ABE0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000548")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002A57")]
				[Address(RVA = "0x171AC48", Offset = "0x171AC48", VA = "0x171AC48", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002A52")]
			[Address(RVA = "0x1719F54", Offset = "0x1719F54", VA = "0x1719F54")]
			[DebuggerHidden]
			public <LoadLevelFromSaveData>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6002A53")]
			[Address(RVA = "0x171A628", Offset = "0x171A628", VA = "0x171A628", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002A54")]
			[Address(RVA = "0x171A62C", Offset = "0x171A62C", VA = "0x171A62C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002A56")]
			[Address(RVA = "0x171ABE8", Offset = "0x171ABE8", VA = "0x171ABE8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DBE8", Offset = "0xA0DBE8")]
		private sealed class <LoadLevelCoroutine>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LevelManager <>4__this;

			[Token(Token = "0x4001E10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string levelName;

			[Token(Token = "0x4001E11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int levelIndex;

			[Token(Token = "0x4001E12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private AsyncOperation <async>5__2;

			[Token(Token = "0x17000549")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002A5B")]
				[Address(RVA = "0x171A5B8", Offset = "0x171A5B8", VA = "0x171A5B8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700054A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002A5D")]
				[Address(RVA = "0x171A620", Offset = "0x171A620", VA = "0x171A620", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002A58")]
			[Address(RVA = "0x171A068", Offset = "0x171A068", VA = "0x171A068")]
			[DebuggerHidden]
			public <LoadLevelCoroutine>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6002A59")]
			[Address(RVA = "0x171A14C", Offset = "0x171A14C", VA = "0x171A14C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002A5A")]
			[Address(RVA = "0x171A150", Offset = "0x171A150", VA = "0x171A150", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002A5C")]
			[Address(RVA = "0x171A5C0", Offset = "0x171A5C0", VA = "0x171A5C0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA19138", Offset = "0xA19138")]
		public string defaultStartingLevel;

		[Token(Token = "0x4000C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA19170", Offset = "0xA19170")]
		public bool useAsyncLoad;

		[Token(Token = "0x4000C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA191A8", Offset = "0xA191A8")]
		private bool <isLoading>k__BackingField;

		[Token(Token = "0x17000284")]
		public bool isLoading
		{
			[Token(Token = "0x60014FC")]
			[Address(RVA = "0x1719DB8", Offset = "0x1719DB8", VA = "0x1719DB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2ABB0", Offset = "0xA2ABB0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60014FD")]
			[Address(RVA = "0x1719DC0", Offset = "0x1719DC0", VA = "0x1719DC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2ABC0", Offset = "0xA2ABC0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000285")]
		public bool IsLoading
		{
			[Token(Token = "0x60014FE")]
			[Address(RVA = "0x1719DCC", Offset = "0x1719DCC", VA = "0x1719DCC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60014FF")]
			[Address(RVA = "0x1719DD4", Offset = "0x1719DD4", VA = "0x1719DD4")]
			set
			{
			}
		}

		[Token(Token = "0x6001500")]
		[Address(RVA = "0x1719DE0", Offset = "0x1719DE0", VA = "0x1719DE0", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001501")]
		[Address(RVA = "0x1719DE8", Offset = "0x1719DE8", VA = "0x1719DE8", Slot = "5")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001502")]
		[Address(RVA = "0x1719E60", Offset = "0x1719E60", VA = "0x1719E60", Slot = "6")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001503")]
		[Address(RVA = "0x171790C", Offset = "0x171790C", VA = "0x171790C")]
		public void LoadGame(string saveData)
		{
		}

		[Token(Token = "0x6001504")]
		[Address(RVA = "0x1717F2C", Offset = "0x1717F2C", VA = "0x1717F2C")]
		public void RestartGame()
		{
		}

		[Token(Token = "0x6001505")]
		[Address(RVA = "0x1719ED8", Offset = "0x1719ED8", VA = "0x1719ED8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA2ABD0", Offset = "0xA2ABD0")]
		private IEnumerator LoadLevelFromSaveData(string saveData)
		{
			return null;
		}

		[Token(Token = "0x6001506")]
		[Address(RVA = "0x1719F80", Offset = "0x1719F80", VA = "0x1719F80")]
		public void LoadLevel(string levelName)
		{
		}

		[Token(Token = "0x6001507")]
		[Address(RVA = "0x171A034", Offset = "0x171A034", VA = "0x171A034")]
		public void LoadLevel(int levelIndex)
		{
		}

		[Token(Token = "0x6001508")]
		[Address(RVA = "0x1719FB0", Offset = "0x1719FB0", VA = "0x1719FB0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA2AC34", Offset = "0xA2AC34")]
		private IEnumerator LoadLevelCoroutine(string levelName, int levelIndex)
		{
			return null;
		}

		[Token(Token = "0x6001509")]
		[Address(RVA = "0x171A094", Offset = "0x171A094", VA = "0x171A094")]
		private bool CanLoadAsync()
		{
			return default(bool);
		}

		[Token(Token = "0x600150A")]
		[Address(RVA = "0x171A09C", Offset = "0x171A09C", VA = "0x171A09C", Slot = "7")]
		public virtual void OnRecordPersistentData()
		{
		}

		[Token(Token = "0x600150B")]
		[Address(RVA = "0x171A13C", Offset = "0x171A13C", VA = "0x171A13C")]
		public LevelManager()
		{
		}
	}
	[Token(Token = "0x2000237")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0853C", Offset = "0xA0853C")]
	public class PersistentActiveData : MonoBehaviour
	{
		[Token(Token = "0x4000C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA191B8", Offset = "0xA191B8")]
		public GameObject target;

		[Token(Token = "0x4000C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA191F0", Offset = "0xA191F0")]
		public Condition condition;

		[Token(Token = "0x4000C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA19228", Offset = "0xA19228")]
		public bool checkOnStart;

		[Token(Token = "0x600150C")]
		[Address(RVA = "0x1723038", Offset = "0x1723038", VA = "0x1723038", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x600150D")]
		[Address(RVA = "0x1723050", Offset = "0x1723050", VA = "0x1723050", Slot = "5")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x600150E")]
		[Address(RVA = "0x17230C8", Offset = "0x17230C8", VA = "0x17230C8", Slot = "6")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x600150F")]
		[Address(RVA = "0x1723140", Offset = "0x1723140", VA = "0x1723140")]
		public void OnApplyPersistentData()
		{
		}

		[Token(Token = "0x6001510")]
		[Address(RVA = "0x172314C", Offset = "0x172314C", VA = "0x172314C", Slot = "7")]
		public virtual void Check()
		{
		}

		[Token(Token = "0x6001511")]
		[Address(RVA = "0x17232AC", Offset = "0x17232AC", VA = "0x17232AC")]
		public PersistentActiveData()
		{
		}
	}
	[Token(Token = "0x2000238")]
	public delegate string GetCustomSaveDataDelegate();
	[Token(Token = "0x2000239")]
	public static class PersistentDataManager
	{
		[Token(Token = "0x20005F9")]
		public enum RecordPersistentDataOn
		{
			[Token(Token = "0x4001E14")]
			AllGameObjects,
			[Token(Token = "0x4001E15")]
			OnlyRegisteredGameObjects,
			[Token(Token = "0x4001E16")]
			NoGameObjects
		}

		[Token(Token = "0x20005FA")]
		public class AsyncSaveOperation
		{
			[Token(Token = "0x4001E17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool isDone;

			[Token(Token = "0x4001E18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string content;

			[Token(Token = "0x6002A5E")]
			[Address(RVA = "0x11C3A34", Offset = "0x11C3A34", VA = "0x11C3A34")]
			public AsyncSaveOperation()
			{
			}
		}

		[Token(Token = "0x20005FB")]
		public class AsyncRawDataOperation
		{
			[Token(Token = "0x4001E19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool isDone;

			[Token(Token = "0x4001E1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public byte[] content;

			[Token(Token = "0x6002A5F")]
			[Address(RVA = "0x11C3A2C", Offset = "0x11C3A2C", VA = "0x11C3A2C")]
			public AsyncRawDataOperation()
			{
			}
		}

		[Token(Token = "0x20005FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DBF8", Offset = "0xA0DBF8")]
		private sealed class <>c__DisplayClass27_0
		{
			[Token(Token = "0x4001E1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string title;

			[Token(Token = "0x6002A60")]
			[Address(RVA = "0x1727D70", Offset = "0x1727D70", VA = "0x1727D70")]
			public <>c__DisplayClass27_0()
			{
			}

			[Token(Token = "0x6002A61")]
			[Address(RVA = "0x172D840", Offset = "0x172D840", VA = "0x172D840")]
			internal bool <AppendItemData>b__0(Item i)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005FD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DC08", Offset = "0xA0DC08")]
		private sealed class <GetSaveDataAsyncCoroutine>d__55 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AsyncSaveOperation asyncOp;

			[Token(Token = "0x4001E1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private StringBuilder <sb>5__2;

			[Token(Token = "0x4001E20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <count>5__3;

			[Token(Token = "0x4001E21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private HashSet<GameObject>.Enumerator <>7__wrap3;

			[Token(Token = "0x1700054B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002A66")]
				[Address(RVA = "0x172F408", Offset = "0x172F408", VA = "0x172F408", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700054C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002A68")]
				[Address(RVA = "0x172F470", Offset = "0x172F470", VA = "0x172F470", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002A62")]
			[Address(RVA = "0x172AC58", Offset = "0x172AC58", VA = "0x172AC58")]
			[DebuggerHidden]
			public <GetSaveDataAsyncCoroutine>d__55(int <>1__state)
			{
			}

			[Token(Token = "0x6002A63")]
			[Address(RVA = "0x172EA70", Offset = "0x172EA70", VA = "0x172EA70", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002A64")]
			[Address(RVA = "0x172EAE4", Offset = "0x172EAE4", VA = "0x172EAE4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002A65")]
			[Address(RVA = "0x172EA8C", Offset = "0x172EA8C", VA = "0x172EA8C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002A67")]
			[Address(RVA = "0x172F410", Offset = "0x172F410", VA = "0x172F410", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005FE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DC18", Offset = "0xA0DC18")]
		private sealed class <AppendConversationDataAsync>d__57 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public StringBuilder sb;

			[Token(Token = "0x4001E25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <count>5__2;

			[Token(Token = "0x4001E26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private LuaTable <conversationTable>5__3;

			[Token(Token = "0x4001E27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <i>5__4;

			[Token(Token = "0x4001E28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Dictionary<LuaValue, LuaValue>.Enumerator <>7__wrap4;

			[Token(Token = "0x1700054D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002A6D")]
				[Address(RVA = "0x172DFD4", Offset = "0x172DFD4", VA = "0x172DFD4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700054E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002A6F")]
				[Address(RVA = "0x172E03C", Offset = "0x172E03C", VA = "0x172E03C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002A69")]
			[Address(RVA = "0x172AF30", Offset = "0x172AF30", VA = "0x172AF30")]
			[DebuggerHidden]
			public <AppendConversationDataAsync>d__57(int <>1__state)
			{
			}

			[Token(Token = "0x6002A6A")]
			[Address(RVA = "0x172D8DC", Offset = "0x172D8DC", VA = "0x172D8DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002A6B")]
			[Address(RVA = "0x172D950", Offset = "0x172D950", VA = "0x172D950", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002A6C")]
			[Address(RVA = "0x172D8F8", Offset = "0x172D8F8", VA = "0x172D8F8")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002A6E")]
			[Address(RVA = "0x172DFDC", Offset = "0x172DFDC", VA = "0x172DFDC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005FF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DC28", Offset = "0xA0DC28")]
		private sealed class <GetRawDataAsyncCoroutine>d__61 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AsyncRawDataOperation asyncOp;

			[Token(Token = "0x4001E2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <count>5__2;

			[Token(Token = "0x4001E2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private HashSet<GameObject>.Enumerator <>7__wrap2;

			[Token(Token = "0x4001E2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private MemoryStream <ms>5__4;

			[Token(Token = "0x4001E2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private BinaryWriter <writer>5__5;

			[Token(Token = "0x4001E30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private LuaTable <conversationTable>5__6;

			[Token(Token = "0x1700054F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002A75")]
				[Address(RVA = "0x172EA00", Offset = "0x172EA00", VA = "0x172EA00", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000550")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002A77")]
				[Address(RVA = "0x172EA68", Offset = "0x172EA68", VA = "0x172EA68", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002A70")]
			[Address(RVA = "0x172BC98", Offset = "0x172BC98", VA = "0x172BC98")]
			[DebuggerHidden]
			public <GetRawDataAsyncCoroutine>d__61(int <>1__state)
			{
			}

			[Token(Token = "0x6002A71")]
			[Address(RVA = "0x172E044", Offset = "0x172E044", VA = "0x172E044", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002A72")]
			[Address(RVA = "0x172E198", Offset = "0x172E198", VA = "0x172E198", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002A73")]
			[Address(RVA = "0x172E080", Offset = "0x172E080", VA = "0x172E080")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002A74")]
			[Address(RVA = "0x172E0D8", Offset = "0x172E0D8", VA = "0x172E0D8")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x6002A76")]
			[Address(RVA = "0x172EA08", Offset = "0x172EA08", VA = "0x172EA08", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000600")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DC38", Offset = "0xA0DC38")]
		private sealed class <PrepSimStatusForRawDataAsync>d__70 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LuaTable conversationTable;

			[Token(Token = "0x4001E34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Dictionary<int, DialogueEntry> <dialogueEntryCache>5__2;

			[Token(Token = "0x4001E35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private StringBuilder <sb>5__3;

			[Token(Token = "0x4001E36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <numEntriesDone>5__4;

			[Token(Token = "0x4001E37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private int <i>5__5;

			[Token(Token = "0x4001E38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Dictionary<LuaValue, LuaValue>.Enumerator <>7__wrap5;

			[Token(Token = "0x17000551")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002A7C")]
				[Address(RVA = "0x11C39BC", Offset = "0x11C39BC", VA = "0x11C39BC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000552")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002A7E")]
				[Address(RVA = "0x11C3A24", Offset = "0x11C3A24", VA = "0x11C3A24", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002A78")]
			[Address(RVA = "0x11C3374", Offset = "0x11C3374", VA = "0x11C3374")]
			[DebuggerHidden]
			public <PrepSimStatusForRawDataAsync>d__70(int <>1__state)
			{
			}

			[Token(Token = "0x6002A79")]
			[Address(RVA = "0x11C33A0", Offset = "0x11C33A0", VA = "0x11C33A0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002A7A")]
			[Address(RVA = "0x11C3414", Offset = "0x11C3414", VA = "0x11C3414", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002A7B")]
			[Address(RVA = "0x11C33BC", Offset = "0x11C33BC", VA = "0x11C33BC")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002A7D")]
			[Address(RVA = "0x11C39C4", Offset = "0x11C39C4", VA = "0x11C39C4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool includeActorData;

		[Token(Token = "0x4000C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public static bool includeAllItemData;

		[Token(Token = "0x4000C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public static bool includeLocationData;

		[Token(Token = "0x4000C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
		public static bool includeAllConversationFields;

		[Token(Token = "0x4000C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static bool includeSimStatus;

		[Token(Token = "0x4000C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string saveConversationSimStatusWithField;

		[Token(Token = "0x4000C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static string saveDialogueEntrySimStatusWithField;

		[Token(Token = "0x4000C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static bool includeRelationshipAndStatusData;

		[Token(Token = "0x4000C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public static bool initializeNewVariables;

		[Token(Token = "0x4000C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public static bool initializeNewSimStatus;

		[Token(Token = "0x4000C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static GetCustomSaveDataDelegate GetCustomSaveData;

		[Token(Token = "0x4000C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static RecordPersistentDataOn recordPersistentDataOn;

		[Token(Token = "0x4000C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static HashSet<GameObject> listeners;

		[Token(Token = "0x4000C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static bool useConversationID;

		[Token(Token = "0x4000C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private static bool useEntryID;

		[Token(Token = "0x4000C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static Dictionary<int, string> s_dialogueEntrySimStatusFieldLookupTable;

		[Token(Token = "0x4000C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static int asyncGameObjectBatchSize;

		[Token(Token = "0x4000C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public static int asyncDialogueEntryBatchSize;

		[Token(Token = "0x6001516")]
		[Address(RVA = "0x17232B4", Offset = "0x17232B4", VA = "0x17232B4")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xA2AC98", Offset = "0xA2AC98")]
		private static void InitStaticVariables()
		{
		}

		[Token(Token = "0x6001517")]
		[Address(RVA = "0x1718E64", Offset = "0x1718E64", VA = "0x1718E64")]
		public static void RegisterPersistentData(GameObject go)
		{
		}

		[Token(Token = "0x6001518")]
		[Address(RVA = "0x1719344", Offset = "0x1719344", VA = "0x1719344")]
		public static void UnregisterPersistentData(GameObject go)
		{
		}

		[Token(Token = "0x6001519")]
		[Address(RVA = "0x172334C", Offset = "0x172334C", VA = "0x172334C")]
		public static void Reset(DatabaseResetOptions databaseResetOptions)
		{
		}

		[Token(Token = "0x600151A")]
		[Address(RVA = "0x17233B4", Offset = "0x17233B4", VA = "0x17233B4")]
		public static void Reset()
		{
		}

		[Token(Token = "0x600151B")]
		[Address(RVA = "0x1717FB8", Offset = "0x1717FB8", VA = "0x1717FB8")]
		public static void Record()
		{
		}

		[Token(Token = "0x600151C")]
		[Address(RVA = "0x171815C", Offset = "0x171815C", VA = "0x171815C")]
		public static void Apply()
		{
		}

		[Token(Token = "0x600151D")]
		[Address(RVA = "0x1723414", Offset = "0x1723414", VA = "0x1723414")]
		private static void SendPersistentDataMessage(string message)
		{
		}

		[Token(Token = "0x600151E")]
		[Address(RVA = "0x171A470", Offset = "0x171A470", VA = "0x171A470")]
		public static void LevelWillBeUnloaded()
		{
		}

		[Token(Token = "0x600151F")]
		[Address(RVA = "0x1717938", Offset = "0x1717938", VA = "0x1717938")]
		public static void ApplySaveData(string saveData, DatabaseResetOptions databaseResetOptions = DatabaseResetOptions.KeepAllLoaded)
		{
		}

		[Token(Token = "0x6001520")]
		[Address(RVA = "0x17171BC", Offset = "0x17171BC", VA = "0x17171BC")]
		public static string GetSaveData()
		{
			return null;
		}

		[Token(Token = "0x6001521")]
		[Address(RVA = "0x172506C", Offset = "0x172506C", VA = "0x172506C")]
		public static void AppendDialogueSystemData(StringBuilder sb)
		{
		}

		[Token(Token = "0x6001522")]
		[Address(RVA = "0x17251D0", Offset = "0x17251D0", VA = "0x17251D0")]
		public static void AppendVariableData(StringBuilder sb)
		{
		}

		[Token(Token = "0x6001523")]
		[Address(RVA = "0x17258B4", Offset = "0x17258B4", VA = "0x17258B4")]
		public static void AppendItemData(StringBuilder sb)
		{
		}

		[Token(Token = "0x6001524")]
		[Address(RVA = "0x1727D78", Offset = "0x1727D78", VA = "0x1727D78")]
		private static void AppendFields(StringBuilder sb, LuaTableWrapper fields)
		{
		}

		[Token(Token = "0x6001525")]
		[Address(RVA = "0x1727884", Offset = "0x1727884", VA = "0x1727884")]
		private static string GetFieldKeyString(string key)
		{
			return null;
		}

		[Token(Token = "0x6001526")]
		[Address(RVA = "0x1728230", Offset = "0x1728230", VA = "0x1728230")]
		private static bool IsValidVarName(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001527")]
		[Address(RVA = "0x1727954", Offset = "0x1727954", VA = "0x1727954")]
		private static string GetFieldValueString(object o)
		{
			return null;
		}

		[Token(Token = "0x6001528")]
		[Address(RVA = "0x1726690", Offset = "0x1726690", VA = "0x1726690")]
		public static void AppendLocationData(StringBuilder sb)
		{
		}

		[Token(Token = "0x6001529")]
		[Address(RVA = "0x1726DF4", Offset = "0x1726DF4", VA = "0x1726DF4")]
		public static void AppendActorData(StringBuilder sb)
		{
		}

		[Token(Token = "0x600152A")]
		[Address(RVA = "0x1728300", Offset = "0x1728300", VA = "0x1728300")]
		private static void AppendAssetFieldData(StringBuilder sb, LuaTableWrapper fields)
		{
		}

		[Token(Token = "0x600152B")]
		[Address(RVA = "0x1727670", Offset = "0x1727670", VA = "0x1727670")]
		public static void AppendRelationshipAndStatusTables(StringBuilder sb)
		{
		}

		[Token(Token = "0x600152C")]
		[Address(RVA = "0x1723D38", Offset = "0x1723D38", VA = "0x1723D38")]
		public static void RefreshRelationshipAndStatusTablesFromLua()
		{
		}

		[Token(Token = "0x600152D")]
		[Address(RVA = "0x172751C", Offset = "0x172751C", VA = "0x172751C")]
		public static void AppendConversationData(StringBuilder sb)
		{
		}

		[Token(Token = "0x600152E")]
		[Address(RVA = "0x17286F8", Offset = "0x17286F8", VA = "0x17286F8")]
		private static void AppendAllConversationFields(StringBuilder sb)
		{
		}

		[Token(Token = "0x600152F")]
		[Address(RVA = "0x17291BC", Offset = "0x17291BC", VA = "0x17291BC")]
		private static void AppendSimStatus(StringBuilder sb)
		{
		}

		[Token(Token = "0x6001530")]
		[Address(RVA = "0x1729748", Offset = "0x1729748", VA = "0x1729748")]
		private static int AppendSimStatusForConversation(StringBuilder sb, LuaTable conversationTable, int conversationID, LuaTable fieldTable)
		{
			return default(int);
		}

		[Token(Token = "0x6001531")]
		[Address(RVA = "0x17235E0", Offset = "0x17235E0", VA = "0x17235E0")]
		private static void ExpandCompressedSimStatusData()
		{
		}

		[Token(Token = "0x6001532")]
		[Address(RVA = "0x172A214", Offset = "0x172A214", VA = "0x172A214")]
		private static void ExpandSimStatusForConversation(StringBuilder sb, int conversationID, string conversationIDString, LuaTable fieldTable, LuaString luaStringSimX, Dictionary<int, DialogueEntry> dialogueEntryCache)
		{
		}

		[Token(Token = "0x6001533")]
		[Address(RVA = "0x172A164", Offset = "0x172A164", VA = "0x172A164")]
		private static char SimStatusToChar(string simStatus)
		{
			return default(char);
		}

		[Token(Token = "0x6001534")]
		[Address(RVA = "0x172AA90", Offset = "0x172AA90", VA = "0x172AA90")]
		private static string CharToSimStatus(char c)
		{
			return null;
		}

		[Token(Token = "0x6001535")]
		[Address(RVA = "0x1723DA0", Offset = "0x1723DA0", VA = "0x1723DA0")]
		public static void InitializeNewVariablesFromDatabase()
		{
		}

		[Token(Token = "0x6001536")]
		[Address(RVA = "0x172434C", Offset = "0x172434C", VA = "0x172434C")]
		public static void InitializeNewQuestEntriesFromDatabase()
		{
		}

		[Token(Token = "0x6001537")]
		[Address(RVA = "0x1725068", Offset = "0x1725068", VA = "0x1725068")]
		public static void InitializeNewSimStatusFromDatabase()
		{
		}

		[Token(Token = "0x6001538")]
		[Address(RVA = "0x172AB1C", Offset = "0x172AB1C", VA = "0x172AB1C")]
		public static AsyncSaveOperation GetSaveDataAsync()
		{
			return null;
		}

		[Token(Token = "0x6001539")]
		[Address(RVA = "0x172ABE8", Offset = "0x172ABE8", VA = "0x172ABE8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA2ACAC", Offset = "0xA2ACAC")]
		private static IEnumerator GetSaveDataAsyncCoroutine(AsyncSaveOperation asyncOp)
		{
			return null;
		}

		[Token(Token = "0x600153A")]
		[Address(RVA = "0x172AC84", Offset = "0x172AC84", VA = "0x172AC84")]
		public static void RecordAsync()
		{
		}

		[Token(Token = "0x600153B")]
		[Address(RVA = "0x172AEC0", Offset = "0x172AEC0", VA = "0x172AEC0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA2AD10", Offset = "0xA2AD10")]
		private static IEnumerator AppendConversationDataAsync(StringBuilder sb)
		{
			return null;
		}

		[Token(Token = "0x600153C")]
		[Address(RVA = "0x172AF5C", Offset = "0x172AF5C", VA = "0x172AF5C")]
		public static byte[] GetRawData()
		{
			return null;
		}

		[Token(Token = "0x600153D")]
		[Address(RVA = "0x172BB5C", Offset = "0x172BB5C", VA = "0x172BB5C")]
		public static AsyncRawDataOperation GetRawDataAsync()
		{
			return null;
		}

		[Token(Token = "0x600153E")]
		[Address(RVA = "0x172BC28", Offset = "0x172BC28", VA = "0x172BC28")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA2AD74", Offset = "0xA2AD74")]
		private static IEnumerator GetRawDataAsyncCoroutine(AsyncRawDataOperation asyncOp)
		{
			return null;
		}

		[Token(Token = "0x600153F")]
		[Address(RVA = "0x172B684", Offset = "0x172B684", VA = "0x172B684")]
		private static void WriteValue(BinaryWriter writer, LuaValue value)
		{
		}

		[Token(Token = "0x6001540")]
		[Address(RVA = "0x172BCC4", Offset = "0x172BCC4", VA = "0x172BCC4")]
		private static void WriteTable(BinaryWriter writer, LuaTable table)
		{
		}

		[Token(Token = "0x6001541")]
		[Address(RVA = "0x172BF24", Offset = "0x172BF24", VA = "0x172BF24")]
		public static void ApplyRawData(byte[] bytes)
		{
		}

		[Token(Token = "0x6001542")]
		[Address(RVA = "0x172C70C", Offset = "0x172C70C", VA = "0x172C70C")]
		private static LuaValue ReadValue(BinaryReader reader)
		{
			return null;
		}

		[Token(Token = "0x6001543")]
		[Address(RVA = "0x172C2E4", Offset = "0x172C2E4", VA = "0x172C2E4")]
		private static void ReadTable(BinaryReader reader, LuaTable table)
		{
		}

		[Token(Token = "0x6001544")]
		[Address(RVA = "0x172B9F8", Offset = "0x172B9F8", VA = "0x172B9F8")]
		private static void WriteExtraData(BinaryWriter writer)
		{
		}

		[Token(Token = "0x6001545")]
		[Address(RVA = "0x172C598", Offset = "0x172C598", VA = "0x172C598")]
		private static void ApplyExtraData(BinaryReader reader)
		{
		}

		[Token(Token = "0x6001546")]
		[Address(RVA = "0x172B274", Offset = "0x172B274", VA = "0x172B274")]
		private static void PrepSimStatusForRawData(LuaTable conversationTable)
		{
		}

		[Token(Token = "0x6001547")]
		[Address(RVA = "0x172D664", Offset = "0x172D664", VA = "0x172D664")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA2ADD8", Offset = "0xA2ADD8")]
		private static IEnumerator PrepSimStatusForRawDataAsync(LuaTable conversationTable)
		{
			return null;
		}

		[Token(Token = "0x6001548")]
		[Address(RVA = "0x172C97C", Offset = "0x172C97C", VA = "0x172C97C")]
		private static int PrepConversationSimStatusForRawData(LuaTable conversationTable, int conversationID, LuaTable fieldTable, Dictionary<int, DialogueEntry> dialogueEntryCache, StringBuilder sb)
		{
			return default(int);
		}

		[Token(Token = "0x6001549")]
		[Address(RVA = "0x172C470", Offset = "0x172C470", VA = "0x172C470")]
		private static void ApplySimStatusFromRawData()
		{
		}
	}
	[Token(Token = "0x200023A")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA08574", Offset = "0xA08574")]
	public class PersistentDestructible : MonoBehaviour
	{
		[Token(Token = "0x2000601")]
		public enum RecordOn
		{
			[Token(Token = "0x4001E3A")]
			Destroy,
			[Token(Token = "0x4001E3B")]
			Disable
		}

		[Token(Token = "0x4000C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA19260", Offset = "0xA19260")]
		public RecordOn recordOn;

		[Token(Token = "0x4000C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA19298", Offset = "0xA19298")]
		public string variableName;

		[Token(Token = "0x4000C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA192D0", Offset = "0xA192D0")]
		public GameObject spawnWhenDestroyed;

		[Token(Token = "0x4000C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected bool listenForOnDestroy;

		[Token(Token = "0x17000286")]
		protected string ActualVariableName
		{
			[Token(Token = "0x600154B")]
			[Address(RVA = "0x11C3B1C", Offset = "0x11C3B1C", VA = "0x11C3B1C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600154C")]
		[Address(RVA = "0x11C3B68", Offset = "0x11C3B68", VA = "0x11C3B68", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x600154D")]
		[Address(RVA = "0x11C3BF0", Offset = "0x11C3BF0", VA = "0x11C3BF0")]
		public void OnApplyPersistentData()
		{
		}

		[Token(Token = "0x600154E")]
		[Address(RVA = "0x11C3E88", Offset = "0x11C3E88", VA = "0x11C3E88")]
		public void OnLevelWillBeUnloaded()
		{
		}

		[Token(Token = "0x600154F")]
		[Address(RVA = "0x11C3E90", Offset = "0x11C3E90", VA = "0x11C3E90")]
		public void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001550")]
		[Address(RVA = "0x11C3E98", Offset = "0x11C3E98", VA = "0x11C3E98")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6001551")]
		[Address(RVA = "0x11C3EB0", Offset = "0x11C3EB0", VA = "0x11C3EB0")]
		private void MarkDestroyed()
		{
		}

		[Token(Token = "0x6001552")]
		[Address(RVA = "0x11C4050", Offset = "0x11C4050", VA = "0x11C4050")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001553")]
		[Address(RVA = "0x11C3D30", Offset = "0x11C3D30", VA = "0x11C3D30")]
		private void SpawnCorpse()
		{
		}

		[Token(Token = "0x6001554")]
		[Address(RVA = "0x11C40F4", Offset = "0x11C40F4", VA = "0x11C40F4")]
		public PersistentDestructible()
		{
		}
	}
	[Token(Token = "0x200023B")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA085AC", Offset = "0xA085AC")]
	public class PersistentPositionData : MonoBehaviour
	{
		[Token(Token = "0x4000C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string overrideActorName;

		[Token(Token = "0x4000C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool recordCurrentLevel;

		[Token(Token = "0x4000C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[HideInInspector]
		public bool restoreCurrentLevelPosition;

		[Token(Token = "0x17000287")]
		private string actorName
		{
			[Token(Token = "0x6001555")]
			[Address(RVA = "0x11C4154", Offset = "0x11C4154", VA = "0x11C4154")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001556")]
		[Address(RVA = "0x11C41B0", Offset = "0x11C41B0", VA = "0x11C41B0", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001557")]
		[Address(RVA = "0x11C422C", Offset = "0x11C422C", VA = "0x11C422C", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001558")]
		[Address(RVA = "0x11C42A8", Offset = "0x11C42A8", VA = "0x11C42A8")]
		public void Start()
		{
		}

		[Token(Token = "0x6001559")]
		[Address(RVA = "0x11C42EC", Offset = "0x11C42EC", VA = "0x11C42EC")]
		public void OnRecordPersistentData()
		{
		}

		[Token(Token = "0x600155A")]
		[Address(RVA = "0x11C4A64", Offset = "0x11C4A64", VA = "0x11C4A64")]
		public void OnApplyPersistentData()
		{
		}

		[Token(Token = "0x600155B")]
		[Address(RVA = "0x11C45E4", Offset = "0x11C45E4", VA = "0x11C45E4")]
		private string GetPositionString()
		{
			return null;
		}

		[Token(Token = "0x600155C")]
		[Address(RVA = "0x11C5280", Offset = "0x11C5280", VA = "0x11C5280")]
		private void ApplyPositionString(string s)
		{
		}

		[Token(Token = "0x600155D")]
		[Address(RVA = "0x11C49D4", Offset = "0x11C49D4", VA = "0x11C49D4")]
		public static string SanitizeLevelName(string levelName)
		{
			return null;
		}

		[Token(Token = "0x600155E")]
		[Address(RVA = "0x11C5528", Offset = "0x11C5528", VA = "0x11C5528")]
		public PersistentPositionData()
		{
		}
	}
	[Token(Token = "0x200023C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA085E4", Offset = "0xA085E4")]
	public class ProximitySelector : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000602")]
		public class Reticle
		{
			[Token(Token = "0x4001E3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Texture2D inRange;

			[Token(Token = "0x4001E3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Texture2D outOfRange;

			[Token(Token = "0x4001E3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float width;

			[Token(Token = "0x4001E3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float height;

			[Token(Token = "0x6002A7F")]
			[Address(RVA = "0x11C82D0", Offset = "0x11C82D0", VA = "0x11C82D0")]
			public Reticle()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000603")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DC48", Offset = "0xA0DC48")]
		private sealed class <>c
		{
			[Token(Token = "0x4001E40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001E41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<Usable> <>9__50_0;

			[Token(Token = "0x6002A81")]
			[Address(RVA = "0x11C8224", Offset = "0x11C8224", VA = "0x11C8224")]
			public <>c()
			{
			}

			[Token(Token = "0x6002A82")]
			[Address(RVA = "0x11C822C", Offset = "0x11C822C", VA = "0x11C822C")]
			internal bool <RemoveUsableFromDetectedList>b__50_0(Usable x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA19318", Offset = "0xA19318")]
		public bool useDefaultGUI;

		[Token(Token = "0x4000C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA19350", Offset = "0xA19350")]
		public GUISkin guiSkin;

		[Token(Token = "0x4000C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA19388", Offset = "0xA19388")]
		public string guiStyleName;

		[Token(Token = "0x4000C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextAnchor alignment;

		[Token(Token = "0x4000C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA193C0", Offset = "0xA193C0")]
		public Color color;

		[Token(Token = "0x4000C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public TextStyle textStyle;

		[Token(Token = "0x4000C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA193F8", Offset = "0xA193F8")]
		public Color textStyleColor;

		[Token(Token = "0x4000C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA19430", Offset = "0xA19430")]
		public string defaultUseMessage;

		[Token(Token = "0x4000C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA19468", Offset = "0xA19468")]
		public KeyCode useKey;

		[Token(Token = "0x4000C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA194A0", Offset = "0xA194A0")]
		public string useButton;

		[Token(Token = "0x4000C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA194D8", Offset = "0xA194D8")]
		public bool enableTouch;

		[Token(Token = "0x4000C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public ScaledRect touchArea;

		[Token(Token = "0x4000C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA19510", Offset = "0xA19510")]
		public bool broadcastToChildren;

		[Token(Token = "0x4000C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA19548", Offset = "0xA19548")]
		public Transform actorTransform;

		[Token(Token = "0x4000C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public UsableUnityEvent onSelectedUsable;

		[Token(Token = "0x4000C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public UsableUnityEvent onDeselectedUsable;

		[Token(Token = "0x4000C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected List<Usable> usablesInRange;

		[Token(Token = "0x4000C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected Usable currentUsable;

		[Token(Token = "0x4000C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected string currentHeading;

		[Token(Token = "0x4000C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected string currentUseMessage;

		[Token(Token = "0x4000C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected bool toldListenersHaveUsable;

		[Token(Token = "0x4000C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected GUIStyle guiStyle;

		[Token(Token = "0x4000C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		protected float guiStyleLineHeight;

		[Token(Token = "0x4000C62")]
		protected const float MinTimeBetweenUseButton = 0.5f;

		[Token(Token = "0x4000C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		protected float timeToEnableUseButton;

		[Token(Token = "0x17000288")]
		public Usable CurrentUsable
		{
			[Token(Token = "0x6001563")]
			[Address(RVA = "0x11C6A50", Offset = "0x11C6A50", VA = "0x11C6A50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000289")]
		public GUIStyle GuiStyle
		{
			[Token(Token = "0x6001564")]
			[Address(RVA = "0x11C6A58", Offset = "0x11C6A58", VA = "0x11C6A58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000014")]
		public event SelectedUsableObjectDelegate SelectedUsableObject
		{
			[Token(Token = "0x600155F")]
			[Address(RVA = "0x11C67C0", Offset = "0x11C67C0", VA = "0x11C67C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2AE3C", Offset = "0xA2AE3C")]
			add
			{
			}
			[Token(Token = "0x6001560")]
			[Address(RVA = "0x11C6864", Offset = "0x11C6864", VA = "0x11C6864")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2AE4C", Offset = "0xA2AE4C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000015")]
		public event DeselectedUsableObjectDelegate DeselectedUsableObject
		{
			[Token(Token = "0x6001561")]
			[Address(RVA = "0x11C6908", Offset = "0x11C6908", VA = "0x11C6908")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2AE5C", Offset = "0xA2AE5C")]
			add
			{
			}
			[Token(Token = "0x6001562")]
			[Address(RVA = "0x11C69AC", Offset = "0x11C69AC", VA = "0x11C69AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2AE6C", Offset = "0xA2AE6C")]
			remove
			{
			}
		}

		[Token(Token = "0x6001565")]
		[Address(RVA = "0x11C6C38", Offset = "0x11C6C38", VA = "0x11C6C38", Slot = "4")]
		public virtual void Start()
		{
		}

		[Token(Token = "0x6001566")]
		[Address(RVA = "0x11C6D34", Offset = "0x11C6D34", VA = "0x11C6D34", Slot = "5")]
		public virtual void OnConversationStart(Transform actor)
		{
		}

		[Token(Token = "0x6001567")]
		[Address(RVA = "0x11C6D64", Offset = "0x11C6D64", VA = "0x11C6D64", Slot = "6")]
		public virtual void OnConversationEnd(Transform actor)
		{
		}

		[Token(Token = "0x6001568")]
		[Address(RVA = "0x11C6D94", Offset = "0x11C6D94", VA = "0x11C6D94", Slot = "7")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001569")]
		[Address(RVA = "0x11C6F80", Offset = "0x11C6F80", VA = "0x11C6F80")]
		protected void OnSelectedUsableObject(Usable usable)
		{
		}

		[Token(Token = "0x600156A")]
		[Address(RVA = "0x11C6EAC", Offset = "0x11C6EAC", VA = "0x11C6EAC")]
		protected void OnDeselectedUsableObject(Usable usable)
		{
		}

		[Token(Token = "0x600156B")]
		[Address(RVA = "0x11C73E4", Offset = "0x11C73E4", VA = "0x11C73E4", Slot = "8")]
		public virtual void UseCurrentSelection()
		{
		}

		[Token(Token = "0x600156C")]
		[Address(RVA = "0x11C7570", Offset = "0x11C7570", VA = "0x11C7570", Slot = "9")]
		protected virtual bool IsUseButtonDown()
		{
			return default(bool);
		}

		[Token(Token = "0x600156D")]
		[Address(RVA = "0x11C768C", Offset = "0x11C768C", VA = "0x11C768C")]
		protected bool IsTouchDown()
		{
			return default(bool);
		}

		[Token(Token = "0x600156E")]
		[Address(RVA = "0x11C77D0", Offset = "0x11C77D0", VA = "0x11C77D0")]
		protected void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600156F")]
		[Address(RVA = "0x11C7810", Offset = "0x11C7810", VA = "0x11C7810")]
		protected void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001570")]
		[Address(RVA = "0x11C7850", Offset = "0x11C7850", VA = "0x11C7850", Slot = "10")]
		protected virtual void CheckTriggerEnter(GameObject other)
		{
		}

		[Token(Token = "0x6001571")]
		[Address(RVA = "0x11C7980", Offset = "0x11C7980", VA = "0x11C7980", Slot = "11")]
		protected virtual void CheckTriggerExit(GameObject other)
		{
		}

		[Token(Token = "0x6001572")]
		[Address(RVA = "0x11C7A5C", Offset = "0x11C7A5C", VA = "0x11C7A5C", Slot = "12")]
		public virtual void RemoveGameObjectFromDetectedList(GameObject other)
		{
		}

		[Token(Token = "0x6001573")]
		[Address(RVA = "0x11C7B1C", Offset = "0x11C7B1C", VA = "0x11C7B1C", Slot = "13")]
		public virtual void RemoveUsableFromDetectedList(Usable usable)
		{
		}

		[Token(Token = "0x6001574")]
		[Address(RVA = "0x11C7D34", Offset = "0x11C7D34", VA = "0x11C7D34", Slot = "14")]
		protected virtual void SetCurrentUsable(Usable usable)
		{
		}

		[Token(Token = "0x6001575")]
		[Address(RVA = "0x11C7E58", Offset = "0x11C7E58", VA = "0x11C7E58", Slot = "15")]
		public virtual void OnGUI()
		{
		}

		[Token(Token = "0x6001576")]
		[Address(RVA = "0x11C6A7C", Offset = "0x11C6A7C", VA = "0x11C6A7C")]
		protected void SetGuiStyle()
		{
		}

		[Token(Token = "0x6001577")]
		[Address(RVA = "0x11C8034", Offset = "0x11C8034", VA = "0x11C8034")]
		public ProximitySelector()
		{
		}
	}
	[Token(Token = "0x200023D")]
	public delegate void SelectedUsableObjectDelegate(Usable usable);
	[Token(Token = "0x200023E")]
	public delegate void DeselectedUsableObjectDelegate(Usable usable);
	[Serializable]
	[Token(Token = "0x200023F")]
	public class UsableUnityEvent : UnityEvent<Usable>
	{
		[Token(Token = "0x6001580")]
		[Address(RVA = "0x11672FC", Offset = "0x11672FC", VA = "0x11672FC")]
		public UsableUnityEvent()
		{
		}
	}
	[Token(Token = "0x2000240")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0861C", Offset = "0xA0861C")]
	public class Selector : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000604")]
		public class Reticle
		{
			[Token(Token = "0x4001E42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Texture2D inRange;

			[Token(Token = "0x4001E43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Texture2D outOfRange;

			[Token(Token = "0x4001E44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float width;

			[Token(Token = "0x4001E45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float height;

			[Token(Token = "0x6002A83")]
			[Address(RVA = "0x11D56BC", Offset = "0x11D56BC", VA = "0x11D56BC")]
			public Reticle()
			{
			}
		}

		[Token(Token = "0x2000605")]
		public enum SelectAt
		{
			[Token(Token = "0x4001E47")]
			CenterOfScreen,
			[Token(Token = "0x4001E48")]
			MousePosition,
			[Token(Token = "0x4001E49")]
			CustomPosition
		}

		[Token(Token = "0x2000606")]
		public enum DistanceFrom
		{
			[Token(Token = "0x4001E4B")]
			Camera,
			[Token(Token = "0x4001E4C")]
			GameObject
		}

		[Token(Token = "0x2000607")]
		public enum Dimension
		{
			[Token(Token = "0x4001E4E")]
			In2D,
			[Token(Token = "0x4001E4F")]
			In3D
		}

		[Token(Token = "0x4000C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static LayerMask DefaultLayer;

		[Token(Token = "0x4000C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA195A0", Offset = "0xA195A0")]
		public SelectAt selectAt;

		[Token(Token = "0x4000C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA195D8", Offset = "0xA195D8")]
		public LayerMask layerMask;

		[Token(Token = "0x4000C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA19610", Offset = "0xA19610")]
		public DistanceFrom distanceFrom;

		[Token(Token = "0x4000C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA19648", Offset = "0xA19648")]
		public float maxSelectionDistance;

		[Token(Token = "0x4000C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Dimension runRaycasts;

		[Token(Token = "0x4000C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA19680", Offset = "0xA19680")]
		public bool raycastAll;

		[Token(Token = "0x4000C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA196B8", Offset = "0xA196B8")]
		public bool useDefaultGUI;

		[Token(Token = "0x4000C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA196F0", Offset = "0xA196F0")]
		public GUISkin guiSkin;

		[Token(Token = "0x4000C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA19728", Offset = "0xA19728")]
		public string guiStyleName;

		[Token(Token = "0x4000C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TextAnchor alignment;

		[Token(Token = "0x4000C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public TextStyle textStyle;

		[Token(Token = "0x4000C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Color textStyleColor;

		[Token(Token = "0x4000C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA19760", Offset = "0xA19760")]
		public Color inRangeColor;

		[Token(Token = "0x4000C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA19798", Offset = "0xA19798")]
		public Color outOfRangeColor;

		[Token(Token = "0x4000C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Reticle reticle;

		[Token(Token = "0x4000C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public KeyCode useKey;

		[Token(Token = "0x4000C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public string useButton;

		[Token(Token = "0x4000C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA197D0", Offset = "0xA197D0")]
		public string defaultUseMessage;

		[Token(Token = "0x4000C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA19808", Offset = "0xA19808")]
		public bool broadcastToChildren;

		[Token(Token = "0x4000C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA19840", Offset = "0xA19840")]
		public Transform actorTransform;

		[Token(Token = "0x4000C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA19878", Offset = "0xA19878")]
		public string tooFarMessage;

		[Token(Token = "0x4000C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public UsableUnityEvent onSelectedUsable;

		[Token(Token = "0x4000C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public UsableUnityEvent onDeselectedUsable;

		[Token(Token = "0x4000C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public UnityEvent tooFarEvent;

		[Token(Token = "0x4000C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA198B0", Offset = "0xA198B0")]
		public bool debug;

		[Token(Token = "0x4000C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA198E8", Offset = "0xA198E8")]
		private Vector3 <CustomPosition>k__BackingField;

		[Token(Token = "0x4000C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		protected GameObject selection;

		[Token(Token = "0x4000C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected Usable usable;

		[Token(Token = "0x4000C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected GameObject clickedDownOn;

		[Token(Token = "0x4000C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		protected string heading;

		[Token(Token = "0x4000C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		protected string useMessage;

		[Token(Token = "0x4000C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		protected float distance;

		[Token(Token = "0x4000C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		protected GUIStyle guiStyle;

		[Token(Token = "0x4000C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		protected float guiStyleLineHeight;

		[Token(Token = "0x4000C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		protected Ray lastRay;

		[Token(Token = "0x4000C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		protected RaycastHit lastHit;

		[Token(Token = "0x4000C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		protected RaycastHit[] lastHits;

		[Token(Token = "0x4000C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		protected int numLastHits;

		[Token(Token = "0x4000C8D")]
		private const int MaxHits = 100;

		[Token(Token = "0x1700028A")]
		public Vector3 CustomPosition
		{
			[Token(Token = "0x6001581")]
			[Address(RVA = "0x11D39FC", Offset = "0x11D39FC", VA = "0x11D39FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2AE7C", Offset = "0xA2AE7C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001582")]
			[Address(RVA = "0x11D3A08", Offset = "0x11D3A08", VA = "0x11D3A08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2AE8C", Offset = "0xA2AE8C")]
			set
			{
			}
		}

		[Token(Token = "0x1700028B")]
		public Usable CurrentUsable
		{
			[Token(Token = "0x6001583")]
			[Address(RVA = "0x11D3A14", Offset = "0x11D3A14", VA = "0x11D3A14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700028C")]
		public float CurrentDistance
		{
			[Token(Token = "0x6001584")]
			[Address(RVA = "0x11D3A1C", Offset = "0x11D3A1C", VA = "0x11D3A1C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700028D")]
		public GUIStyle GuiStyle
		{
			[Token(Token = "0x6001585")]
			[Address(RVA = "0x11D3A24", Offset = "0x11D3A24", VA = "0x11D3A24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000016")]
		public event SelectedUsableObjectDelegate SelectedUsableObject
		{
			[Token(Token = "0x6001586")]
			[Address(RVA = "0x11D3BE0", Offset = "0x11D3BE0", VA = "0x11D3BE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2AE9C", Offset = "0xA2AE9C")]
			add
			{
			}
			[Token(Token = "0x6001587")]
			[Address(RVA = "0x11D3C84", Offset = "0x11D3C84", VA = "0x11D3C84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2AEAC", Offset = "0xA2AEAC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000017")]
		public event DeselectedUsableObjectDelegate DeselectedUsableObject
		{
			[Token(Token = "0x6001588")]
			[Address(RVA = "0x11D3D28", Offset = "0x11D3D28", VA = "0x11D3D28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2AEBC", Offset = "0xA2AEBC")]
			add
			{
			}
			[Token(Token = "0x6001589")]
			[Address(RVA = "0x11D3DCC", Offset = "0x11D3DCC", VA = "0x11D3DCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2AECC", Offset = "0xA2AECC")]
			remove
			{
			}
		}

		[Token(Token = "0x600158A")]
		[Address(RVA = "0x11D3E70", Offset = "0x11D3E70", VA = "0x11D3E70", Slot = "4")]
		public virtual void Start()
		{
		}

		[Token(Token = "0x600158B")]
		[Address(RVA = "0x11D3F34", Offset = "0x11D3F34", VA = "0x11D3F34", Slot = "5")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x600158C")]
		[Address(RVA = "0x11D40CC", Offset = "0x11D40CC", VA = "0x11D40CC", Slot = "6")]
		public virtual void UseCurrentSelection()
		{
		}

		[Token(Token = "0x600158D")]
		[Address(RVA = "0x11D4270", Offset = "0x11D4270", VA = "0x11D4270", Slot = "7")]
		protected virtual void Run2DRaycast()
		{
		}

		[Token(Token = "0x600158E")]
		[Address(RVA = "0x11D4274", Offset = "0x11D4274", VA = "0x11D4274", Slot = "8")]
		protected virtual void Run3DRaycast()
		{
		}

		[Token(Token = "0x600158F")]
		[Address(RVA = "0x11D4860", Offset = "0x11D4860", VA = "0x11D4860")]
		protected void OnSelectedUsableObject(Usable usable)
		{
		}

		[Token(Token = "0x6001590")]
		[Address(RVA = "0x11D4930", Offset = "0x11D4930", VA = "0x11D4930")]
		protected void OnDeselectedUsableObject(Usable usable)
		{
		}

		[Token(Token = "0x6001591")]
		[Address(RVA = "0x11D4A04", Offset = "0x11D4A04", VA = "0x11D4A04", Slot = "9")]
		protected virtual void DeselectTarget()
		{
		}

		[Token(Token = "0x6001592")]
		[Address(RVA = "0x11D4A78", Offset = "0x11D4A78", VA = "0x11D4A78", Slot = "10")]
		protected virtual bool IsUseButtonDown()
		{
			return default(bool);
		}

		[Token(Token = "0x6001593")]
		[Address(RVA = "0x11D4D1C", Offset = "0x11D4D1C", VA = "0x11D4D1C", Slot = "11")]
		protected virtual Vector3 GetSelectionPoint()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001594")]
		[Address(RVA = "0x11D4DD4", Offset = "0x11D4DD4", VA = "0x11D4DD4", Slot = "12")]
		public virtual void OnGUI()
		{
		}

		[Token(Token = "0x6001595")]
		[Address(RVA = "0x11D3A48", Offset = "0x11D3A48", VA = "0x11D3A48")]
		protected void SetGuiStyle()
		{
		}

		[Token(Token = "0x6001596")]
		[Address(RVA = "0x11D5154", Offset = "0x11D5154", VA = "0x11D5154", Slot = "13")]
		public virtual void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001597")]
		[Address(RVA = "0x11D54C4", Offset = "0x11D54C4", VA = "0x11D54C4")]
		public Selector()
		{
		}
	}
	[Token(Token = "0x2000241")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA08654", Offset = "0xA08654")]
	public class SelectorFollowTarget : MonoBehaviour
	{
		[Token(Token = "0x4000C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 offset;

		[Token(Token = "0x4000C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Selector selector;

		[Token(Token = "0x4000C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ProximitySelector proximitySelector;

		[Token(Token = "0x4000C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool previousUseDefaultGUI;

		[Token(Token = "0x4000C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Usable lastUsable;

		[Token(Token = "0x4000C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string heading;

		[Token(Token = "0x4000C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string useMessage;

		[Token(Token = "0x4000C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GameObject lastSelectionDrawn;

		[Token(Token = "0x4000C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float selectionHeight;

		[Token(Token = "0x4000C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector2 selectionHeadingSize;

		[Token(Token = "0x4000C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector2 selectionUseMessageSize;

		[Token(Token = "0x4000C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private SelectorUseStandardUIElements selectorUseStandardUIElements;

		[Token(Token = "0x6001599")]
		[Address(RVA = "0x11D56D0", Offset = "0x11D56D0", VA = "0x11D56D0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600159A")]
		[Address(RVA = "0x11D5758", Offset = "0x11D5758", VA = "0x11D5758")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600159B")]
		[Address(RVA = "0x11D5834", Offset = "0x11D5834", VA = "0x11D5834")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600159C")]
		[Address(RVA = "0x11D5908", Offset = "0x11D5908", VA = "0x11D5908", Slot = "4")]
		public virtual void Update()
		{
		}

		[Token(Token = "0x600159D")]
		[Address(RVA = "0x11D5C98", Offset = "0x11D5C98", VA = "0x11D5C98", Slot = "5")]
		public virtual void OnGUI()
		{
		}

		[Token(Token = "0x600159E")]
		[Address(RVA = "0x11D5E78", Offset = "0x11D5E78", VA = "0x11D5E78")]
		protected void DrawOnSelection(Usable usable, float distance, Selector.Reticle reticle, GUIStyle guiStyle, string defaultUseMessage, Color inRangeColor, Color outOfRangeColor, TextStyle textStyle, Color textStyleColor)
		{
		}

		[Token(Token = "0x600159F")]
		[Address(RVA = "0x11D64FC", Offset = "0x11D64FC", VA = "0x11D64FC")]
		public SelectorFollowTarget()
		{
		}
	}
	[Token(Token = "0x2000242")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0868C", Offset = "0xA0868C")]
	public class Usable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000608")]
		public class UsableEvents
		{
			[Token(Token = "0x4001E50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UnityEvent onSelect;

			[Token(Token = "0x4001E51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UnityEvent onDeselect;

			[Token(Token = "0x4001E52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UnityEvent onUse;

			[Token(Token = "0x6002A84")]
			[Address(RVA = "0x116725C", Offset = "0x116725C", VA = "0x116725C")]
			public UsableEvents()
			{
			}
		}

		[Token(Token = "0x4000C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string overrideName;

		[Token(Token = "0x4000C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string overrideUseMessage;

		[Token(Token = "0x4000C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float maxUseDistance;

		[Token(Token = "0x4000C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UsableEvents events;

		[Token(Token = "0x60015A0")]
		[Address(RVA = "0x11671F4", Offset = "0x11671F4", VA = "0x11671F4", Slot = "4")]
		public virtual void Start()
		{
		}

		[Token(Token = "0x60015A1")]
		[Address(RVA = "0x1162198", Offset = "0x1162198", VA = "0x1162198")]
		public string GetName()
		{
			return null;
		}

		[Token(Token = "0x60015A2")]
		[Address(RVA = "0x11671F8", Offset = "0x11671F8", VA = "0x11671F8", Slot = "5")]
		public virtual void OnSelectUsable()
		{
		}

		[Token(Token = "0x60015A3")]
		[Address(RVA = "0x1167214", Offset = "0x1167214", VA = "0x1167214", Slot = "6")]
		public virtual void OnDeselectUsable()
		{
		}

		[Token(Token = "0x60015A4")]
		[Address(RVA = "0x1167230", Offset = "0x1167230", VA = "0x1167230", Slot = "7")]
		public virtual void OnUseUsable()
		{
		}

		[Token(Token = "0x60015A5")]
		[Address(RVA = "0x116724C", Offset = "0x116724C", VA = "0x116724C")]
		public Usable()
		{
		}
	}
	[Token(Token = "0x2000243")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA086C4", Offset = "0xA086C4")]
	public class RangeTrigger : MonoBehaviour
	{
		[Token(Token = "0x4000C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA19918", Offset = "0xA19918")]
		public Condition condition;

		[Token(Token = "0x4000C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA19950", Offset = "0xA19950")]
		public GameObject[] gameObjects;

		[Token(Token = "0x4000CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA19988", Offset = "0xA19988")]
		public Component[] components;

		[Token(Token = "0x4000CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent onEnter;

		[Token(Token = "0x4000CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEvent onExit;

		[Token(Token = "0x60015A6")]
		[Address(RVA = "0x11D3620", Offset = "0x11D3620", VA = "0x11D3620")]
		public void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60015A7")]
		[Address(RVA = "0x11D37FC", Offset = "0x11D37FC", VA = "0x11D37FC")]
		public void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60015A8")]
		[Address(RVA = "0x11D3680", Offset = "0x11D3680", VA = "0x11D3680")]
		private void SetTargets(bool value)
		{
		}

		[Token(Token = "0x60015A9")]
		[Address(RVA = "0x11D385C", Offset = "0x11D385C", VA = "0x11D385C")]
		public RangeTrigger()
		{
		}
	}
	[Token(Token = "0x2000244")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA086FC", Offset = "0xA086FC")]
	public class BarkOnIdle : BarkStarter
	{
		[Token(Token = "0x2000609")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DC58", Offset = "0xA0DC58")]
		private sealed class <BarkLoop>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public BarkOnIdle <>4__this;

			[Token(Token = "0x17000553")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002A88")]
				[Address(RVA = "0x1430FC4", Offset = "0x1430FC4", VA = "0x1430FC4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000554")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002A8A")]
				[Address(RVA = "0x143102C", Offset = "0x143102C", VA = "0x143102C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002A85")]
			[Address(RVA = "0x1430E30", Offset = "0x1430E30", VA = "0x1430E30")]
			[DebuggerHidden]
			public <BarkLoop>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6002A86")]
			[Address(RVA = "0x1430E78", Offset = "0x1430E78", VA = "0x1430E78", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002A87")]
			[Address(RVA = "0x1430E7C", Offset = "0x1430E7C", VA = "0x1430E7C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002A89")]
			[Address(RVA = "0x1430FCC", Offset = "0x1430FCC", VA = "0x1430FCC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA199C0", Offset = "0xA199C0")]
		public float minSeconds;

		[Token(Token = "0x4000CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA199F8", Offset = "0xA199F8")]
		public float maxSeconds;

		[Token(Token = "0x4000CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA19A30", Offset = "0xA19A30")]
		public Transform target;

		[Token(Token = "0x4000CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool started;

		[Token(Token = "0x1700028E")]
		protected override bool useOnce
		{
			[Token(Token = "0x60015AA")]
			[Address(RVA = "0x1430C5C", Offset = "0x1430C5C", VA = "0x1430C5C", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60015AB")]
		[Address(RVA = "0x1430C64", Offset = "0x1430C64", VA = "0x1430C64", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60015AC")]
		[Address(RVA = "0x1430D20", Offset = "0x1430D20", VA = "0x1430D20", Slot = "7")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60015AD")]
		[Address(RVA = "0x1430CDC", Offset = "0x1430CDC", VA = "0x1430CDC")]
		public void StartBarkLoop()
		{
		}

		[Token(Token = "0x60015AE")]
		[Address(RVA = "0x1430DC0", Offset = "0x1430DC0", VA = "0x1430DC0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA2AEDC", Offset = "0xA2AEDC")]
		private IEnumerator BarkLoop()
		{
			return null;
		}

		[Token(Token = "0x60015AF")]
		[Address(RVA = "0x1430E5C", Offset = "0x1430E5C", VA = "0x1430E5C")]
		public BarkOnIdle()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000245")]
	public class Condition
	{
		[Token(Token = "0x200060A")]
		public enum LastEvaluationValue
		{
			[Token(Token = "0x4001E57")]
			None,
			[Token(Token = "0x4001E58")]
			True,
			[Token(Token = "0x4001E59")]
			False
		}

		[Token(Token = "0x4000CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string[] luaConditions;

		[Token(Token = "0x4000CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public QuestCondition[] questConditions;

		[Token(Token = "0x4000CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] acceptedTags;

		[Token(Token = "0x4000CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject[] acceptedGameObjects;

		[Token(Token = "0x4000CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public int luaWizardIndex;

		[Token(Token = "0x4000CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public LastEvaluationValue lastEvaluationValue;

		[Token(Token = "0x60015B0")]
		[Address(RVA = "0x1429558", Offset = "0x1429558", VA = "0x1429558")]
		public bool IsTrue(Transform interactor)
		{
			return default(bool);
		}

		[Token(Token = "0x60015B1")]
		[Address(RVA = "0x143763C", Offset = "0x143763C", VA = "0x143763C")]
		private bool LuaConditionsAreTrue()
		{
			return default(bool);
		}

		[Token(Token = "0x60015B2")]
		[Address(RVA = "0x1437740", Offset = "0x1437740", VA = "0x1437740")]
		private bool QuestConditionsAreTrue()
		{
			return default(bool);
		}

		[Token(Token = "0x60015B3")]
		[Address(RVA = "0x14377BC", Offset = "0x14377BC", VA = "0x14377BC")]
		private bool IsAcceptedTag(Transform interactor)
		{
			return default(bool);
		}

		[Token(Token = "0x60015B4")]
		[Address(RVA = "0x1437888", Offset = "0x1437888", VA = "0x1437888")]
		private bool IsAcceptedGameObject(Transform interactor)
		{
			return default(bool);
		}

		[Token(Token = "0x60015B5")]
		[Address(RVA = "0x14274D8", Offset = "0x14274D8", VA = "0x14274D8")]
		public Condition()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000246")]
	public class QuestCondition
	{
		[Token(Token = "0x4000CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string questName;

		[Token(Token = "0x4000CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "BitMaskAttribute", RVA = "0xA19A88", Offset = "0xA19A88")]
		[QuestState]
		public QuestState questState;

		[Token(Token = "0x1700028F")]
		public bool IsTrue
		{
			[Token(Token = "0x60015B6")]
			[Address(RVA = "0x11C82E4", Offset = "0x11C82E4", VA = "0x11C82E4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60015B7")]
		[Address(RVA = "0x11C83F0", Offset = "0x11C83F0", VA = "0x11C83F0")]
		public QuestCondition()
		{
		}
	}
	[Token(Token = "0x2000247")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA08734", Offset = "0xA08734")]
	public class ConditionObserver : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200060B")]
		public class SendMessageAction
		{
			[Token(Token = "0x4001E5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject gameObject;

			[Token(Token = "0x4001E5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string message;

			[Token(Token = "0x4001E5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string parameter;

			[Token(Token = "0x6002A8B")]
			[Address(RVA = "0x14381AC", Offset = "0x14381AC", VA = "0x14381AC")]
			public SendMessageAction()
			{
			}
		}

		[Token(Token = "0x200060C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DC68", Offset = "0xA0DC68")]
		private sealed class <Observe>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ConditionObserver <>4__this;

			[Token(Token = "0x17000555")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002A8F")]
				[Address(RVA = "0x143813C", Offset = "0x143813C", VA = "0x143813C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000556")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002A91")]
				[Address(RVA = "0x14381A4", Offset = "0x14381A4", VA = "0x14381A4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002A8C")]
			[Address(RVA = "0x1437A28", Offset = "0x1437A28", VA = "0x1437A28")]
			[DebuggerHidden]
			public <Observe>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x6002A8D")]
			[Address(RVA = "0x1438048", Offset = "0x1438048", VA = "0x1438048", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002A8E")]
			[Address(RVA = "0x143804C", Offset = "0x143804C", VA = "0x143804C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002A90")]
			[Address(RVA = "0x1438144", Offset = "0x1438144", VA = "0x1438144", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA19AFC", Offset = "0xA19AFC")]
		public float frequency;

		[Token(Token = "0x4000CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA19B34", Offset = "0xA19B34")]
		public bool once;

		[Token(Token = "0x4000CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA19B6C", Offset = "0xA19B6C")]
		public GameObject observeGameObject;

		[Token(Token = "0x4000CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Condition condition;

		[Token(Token = "0x4000CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA19BA4", Offset = "0xA19BA4")]
		public string questName;

		[Token(Token = "0x4000CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA19BDC", Offset = "0xA19BDC")]
		[QuestState]
		public QuestState questState;

		[Token(Token = "0x4000CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA19C28", Offset = "0xA19C28")]
		public string luaCode;

		[Token(Token = "0x4000CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA19C60", Offset = "0xA19C60")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0xA19C60", Offset = "0xA19C60")]
		public string sequence;

		[Token(Token = "0x4000CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA19CB4", Offset = "0xA19CB4")]
		public string alertMessage;

		[Token(Token = "0x4000CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA19CEC", Offset = "0xA19CEC")]
		public TextTable textTable;

		[Token(Token = "0x4000CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public SendMessageAction[] sendMessages;

		[Token(Token = "0x4000CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public bool useQuestNamePicker;

		[Token(Token = "0x4000CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		private bool started;

		[Token(Token = "0x60015B8")]
		[Address(RVA = "0x1437954", Offset = "0x1437954", VA = "0x1437954")]
		private void Start()
		{
		}

		[Token(Token = "0x60015B9")]
		[Address(RVA = "0x1437998", Offset = "0x1437998", VA = "0x1437998")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60015BA")]
		[Address(RVA = "0x14379A8", Offset = "0x14379A8", VA = "0x14379A8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60015BB")]
		[Address(RVA = "0x1437960", Offset = "0x1437960", VA = "0x1437960")]
		private void StartObserving()
		{
		}

		[Token(Token = "0x60015BC")]
		[Address(RVA = "0x14379B0", Offset = "0x14379B0", VA = "0x14379B0")]
		private void StopObserving()
		{
		}

		[Token(Token = "0x60015BD")]
		[Address(RVA = "0x14379B8", Offset = "0x14379B8", VA = "0x14379B8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA2AF40", Offset = "0xA2AF40")]
		private IEnumerator Observe()
		{
			return null;
		}

		[Token(Token = "0x60015BE")]
		[Address(RVA = "0x1437A54", Offset = "0x1437A54", VA = "0x1437A54")]
		public void Check()
		{
		}

		[Token(Token = "0x60015BF")]
		[Address(RVA = "0x1437EBC", Offset = "0x1437EBC", VA = "0x1437EBC")]
		public void Check(GameObject gameObject)
		{
		}

		[Token(Token = "0x60015C0")]
		[Address(RVA = "0x1437EC4", Offset = "0x1437EC4", VA = "0x1437EC4")]
		public void Check(string gameObjectName)
		{
		}

		[Token(Token = "0x60015C1")]
		[Address(RVA = "0x1437B08", Offset = "0x1437B08", VA = "0x1437B08")]
		public void Fire()
		{
		}

		[Token(Token = "0x60015C2")]
		[Address(RVA = "0x1437F80", Offset = "0x1437F80", VA = "0x1437F80")]
		public ConditionObserver()
		{
		}
	}
	[Token(Token = "0x2000248")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0876C", Offset = "0xA0876C")]
	public class DialogueSystemTrigger : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200060D")]
		public class SendMessageAction
		{
			[Token(Token = "0x4001E60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA255B0", Offset = "0xA255B0")]
			public GameObject gameObject;

			[Token(Token = "0x4001E61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA255E8", Offset = "0xA255E8")]
			public string message;

			[Token(Token = "0x4001E62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA25620", Offset = "0xA25620")]
			public string parameter;

			[Token(Token = "0x6002A92")]
			[Address(RVA = "0x15FD290", Offset = "0x15FD290", VA = "0x15FD290")]
			public SendMessageAction()
			{
			}
		}

		[Token(Token = "0x200060E")]
		public enum BarkSource
		{
			[Token(Token = "0x4001E64")]
			None,
			[Token(Token = "0x4001E65")]
			Conversation,
			[Token(Token = "0x4001E66")]
			Text
		}

		[Serializable]
		[Token(Token = "0x200060F")]
		public class SetGameObjectActiveAction
		{
			[Token(Token = "0x4001E67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Condition condition;

			[Token(Token = "0x4001E68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform target;

			[Token(Token = "0x4001E69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Toggle state;

			[Token(Token = "0x6002A93")]
			[Address(RVA = "0x15FD3DC", Offset = "0x15FD3DC", VA = "0x15FD3DC")]
			public SetGameObjectActiveAction()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000610")]
		public class SetComponentEnabledAction
		{
			[Token(Token = "0x4001E6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Condition condition;

			[Token(Token = "0x4001E6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Component target;

			[Token(Token = "0x4001E6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Toggle state;

			[Token(Token = "0x6002A94")]
			[Address(RVA = "0x15FD374", Offset = "0x15FD374", VA = "0x15FD374")]
			public SetComponentEnabledAction()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000611")]
		public class SetAnimatorStateAction
		{
			[Token(Token = "0x4001E6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Condition condition;

			[Token(Token = "0x4001E6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA25658", Offset = "0xA25658")]
			public Transform target;

			[Token(Token = "0x4001E6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA25690", Offset = "0xA25690")]
			public string stateName;

			[Token(Token = "0x4001E70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float crossFadeDuration;

			[Token(Token = "0x6002A95")]
			[Address(RVA = "0x15FD300", Offset = "0x15FD300", VA = "0x15FD300")]
			public SetAnimatorStateAction()
			{
			}
		}

		[Token(Token = "0x2000612")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DC78", Offset = "0xA0DC78")]
		private sealed class <ShowCursorAfterOneFrame>d__75 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x17000557")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002A99")]
				[Address(RVA = "0x15FD104", Offset = "0x15FD104", VA = "0x15FD104", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000558")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002A9B")]
				[Address(RVA = "0x15FD16C", Offset = "0x15FD16C", VA = "0x15FD16C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002A96")]
			[Address(RVA = "0x15F9400", Offset = "0x15F9400", VA = "0x15F9400")]
			[DebuggerHidden]
			public <ShowCursorAfterOneFrame>d__75(int <>1__state)
			{
			}

			[Token(Token = "0x6002A97")]
			[Address(RVA = "0x15FD0A0", Offset = "0x15FD0A0", VA = "0x15FD0A0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002A98")]
			[Address(RVA = "0x15FD0A4", Offset = "0x15FD0A4", VA = "0x15FD0A4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002A9A")]
			[Address(RVA = "0x15FD10C", Offset = "0x15FD10C", VA = "0x15FD10C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000613")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DC88", Offset = "0xA0DC88")]
		private sealed class <StartAtEndOfFrame>d__94 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DialogueSystemTrigger <>4__this;

			[Token(Token = "0x17000559")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002A9F")]
				[Address(RVA = "0x15FD220", Offset = "0x15FD220", VA = "0x15FD220", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700055A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002AA1")]
				[Address(RVA = "0x15FD288", Offset = "0x15FD288", VA = "0x15FD288", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002A9C")]
			[Address(RVA = "0x15F9C80", Offset = "0x15F9C80", VA = "0x15F9C80")]
			[DebuggerHidden]
			public <StartAtEndOfFrame>d__94(int <>1__state)
			{
			}

			[Token(Token = "0x6002A9D")]
			[Address(RVA = "0x15FD174", Offset = "0x15FD174", VA = "0x15FD174", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002A9E")]
			[Address(RVA = "0x15FD178", Offset = "0x15FD178", VA = "0x15FD178", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002AA0")]
			[Address(RVA = "0x15FD228", Offset = "0x15FD228", VA = "0x15FD228", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000614")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DC98", Offset = "0xA0DC98")]
		private sealed class <MonitorDistance>d__112 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform actor;

			[Token(Token = "0x4001E79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DialogueSystemTrigger <>4__this;

			[Token(Token = "0x4001E7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Transform <myTransform>5__2;

			[Token(Token = "0x1700055B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002AA5")]
				[Address(RVA = "0x15FD030", Offset = "0x15FD030", VA = "0x15FD030", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700055C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002AA7")]
				[Address(RVA = "0x15FD098", Offset = "0x15FD098", VA = "0x15FD098", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002AA2")]
			[Address(RVA = "0x15FC060", Offset = "0x15FC060", VA = "0x15FC060")]
			[DebuggerHidden]
			public <MonitorDistance>d__112(int <>1__state)
			{
			}

			[Token(Token = "0x6002AA3")]
			[Address(RVA = "0x15FCC40", Offset = "0x15FCC40", VA = "0x15FCC40", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002AA4")]
			[Address(RVA = "0x15FCC44", Offset = "0x15FCC44", VA = "0x15FCC44", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002AA6")]
			[Address(RVA = "0x15FD038", Offset = "0x15FD038", VA = "0x15FD038", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA19D34", Offset = "0xA19D34")]
		[DialogueSystemTriggerEvent]
		public DialogueSystemTriggerEvent trigger;

		[Token(Token = "0x4000CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Condition condition;

		[Token(Token = "0x4000CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA19D80", Offset = "0xA19D80")]
		public bool setQuestState;

		[Token(Token = "0x4000CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "QuestPopupAttribute", RVA = "0xA19DB8", Offset = "0xA19DB8")]
		public string questName;

		[Token(Token = "0x4000CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA19DCC", Offset = "0xA19DCC")]
		[QuestState]
		public QuestState questState;

		[Token(Token = "0x4000CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA19E18", Offset = "0xA19E18")]
		public bool setQuestEntryState;

		[Token(Token = "0x4000CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[QuestEntryPopup]
		public int questEntryNumber;

		[Token(Token = "0x4000CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[QuestState]
		public QuestState questEntryState;

		[Token(Token = "0x4000CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA19E70", Offset = "0xA19E70")]
		public string luaCode;

		[Token(Token = "0x4000CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0xA19EA8", Offset = "0xA19EA8")]
		public string sequence;

		[Token(Token = "0x4000CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA19EC0", Offset = "0xA19EC0")]
		public Transform sequenceSpeaker;

		[Token(Token = "0x4000CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA19EF8", Offset = "0xA19EF8")]
		public Transform sequenceListener;

		[Token(Token = "0x4000CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool waitOneFrameOnStartOrEnable;

		[Token(Token = "0x4000CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA19F30", Offset = "0xA19F30")]
		public string alertMessage;

		[Token(Token = "0x4000CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA19F68", Offset = "0xA19F68")]
		public TextTable textTable;

		[Token(Token = "0x4000CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float alertDuration;

		[Token(Token = "0x4000CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public SendMessageAction[] sendMessages;

		[Token(Token = "0x4000CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA19FA0", Offset = "0xA19FA0")]
		public BarkSource barkSource;

		[Token(Token = "0x4000CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA19FD8", Offset = "0xA19FD8")]
		[AttributeAttribute(Name = "ConversationPopupAttribute", RVA = "0xA19FD8", Offset = "0xA19FD8")]
		public string barkConversation;

		[Token(Token = "0x4000CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1A028", Offset = "0xA1A028")]
		public string barkText;

		[Token(Token = "0x4000CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1A060", Offset = "0xA1A060")]
		public string barkTextSequence;

		[Token(Token = "0x4000CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1A098", Offset = "0xA1A098")]
		public Transform barker;

		[Token(Token = "0x4000CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1A0D0", Offset = "0xA1A0D0")]
		public Transform barkTarget;

		[Token(Token = "0x4000CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public BarkOrder barkOrder;

		[Token(Token = "0x4000CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public bool allowBarksDuringConversations;

		[Token(Token = "0x4000CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC5")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1A108", Offset = "0xA1A108")]
		public bool skipBarkIfNoValidEntries;

		[Token(Token = "0x4000CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC6")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1A140", Offset = "0xA1A140")]
		public bool cacheBarkLines;

		[Token(Token = "0x4000CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1A178", Offset = "0xA1A178")]
		[AttributeAttribute(Name = "ConversationPopupAttribute", RVA = "0xA1A178", Offset = "0xA1A178")]
		public string conversation;

		[Token(Token = "0x4000CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1A1C8", Offset = "0xA1A1C8")]
		public Transform conversationConversant;

		[Token(Token = "0x4000CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1A200", Offset = "0xA1A200")]
		public Transform conversationActor;

		[Token(Token = "0x4000CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1A238", Offset = "0xA1A238")]
		public int startConversationEntryID;

		[Token(Token = "0x4000CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1A270", Offset = "0xA1A270")]
		public bool exclusive;

		[Token(Token = "0x4000CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE5")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1A2A8", Offset = "0xA1A2A8")]
		public bool skipIfNoValidEntries;

		[Token(Token = "0x4000CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE6")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1A2E0", Offset = "0xA1A2E0")]
		public bool stopConversationOnTriggerExit;

		[Token(Token = "0x4000CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE7")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1A318", Offset = "0xA1A318")]
		public bool stopConversationIfTooFar;

		[Token(Token = "0x4000CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1A350", Offset = "0xA1A350")]
		public float maxConversationDistance;

		[Token(Token = "0x4000CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1A388", Offset = "0xA1A388")]
		public float monitorConversationDistanceFrequency;

		[Token(Token = "0x4000CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1A3C0", Offset = "0xA1A3C0")]
		public bool showCursorDuringConversation;

		[Token(Token = "0x4000CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1A3F8", Offset = "0xA1A3F8")]
		public bool pauseGameDuringConversation;

		[Token(Token = "0x4000CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public SetGameObjectActiveAction[] setActiveActions;

		[Token(Token = "0x4000CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public SetComponentEnabledAction[] setEnabledActions;

		[Token(Token = "0x4000CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public SetAnimatorStateAction[] setAnimatorStateActions;

		[Token(Token = "0x4000CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public GameObjectUnityEvent onExecute;

		[Token(Token = "0x4000CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[HideInInspector]
		public bool useConversationTitlePicker;

		[Token(Token = "0x4000CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x119")]
		[HideInInspector]
		public bool useBarkTitlePicker;

		[Token(Token = "0x4000CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11A")]
		[HideInInspector]
		public bool useQuestNamePicker;

		[Token(Token = "0x4000CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[HideInInspector]
		public DialogueDatabase selectedDatabase;

		[Token(Token = "0x4000CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1A470", Offset = "0xA1A470")]
		private Sequencer <sequencer>k__BackingField;

		[Token(Token = "0x4000CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		protected BarkHistory barkHistory;

		[Token(Token = "0x4000CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		protected ConversationState cachedState;

		[Token(Token = "0x4000CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		protected BarkGroupMember barkGroupMember;

		[Token(Token = "0x4000CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		protected IBarkUI barkUI;

		[Token(Token = "0x4000CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		protected float earliestTimeToAllowTriggerExit;

		[Token(Token = "0x4000CF1")]
		protected const float MarginToAllowTriggerExit = 0.2f;

		[Token(Token = "0x4000CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		protected Coroutine monitorDistanceCoroutine;

		[Token(Token = "0x4000CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		protected bool wasCursorVisible;

		[Token(Token = "0x4000CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		protected CursorLockMode savedLockState;

		[Token(Token = "0x4000CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		protected bool didIPause;

		[Token(Token = "0x4000CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		protected float preConversationTimeScale;

		[Token(Token = "0x4000CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		protected bool tryingToStart;

		[Token(Token = "0x4000CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x171")]
		protected bool listenForOnDestroy;

		[Token(Token = "0x17000290")]
		public Sequencer sequencer
		{
			[Token(Token = "0x60015C3")]
			[Address(RVA = "0x15F8EA0", Offset = "0x15F8EA0", VA = "0x15F8EA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2AFA4", Offset = "0xA2AFA4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015C4")]
			[Address(RVA = "0x15F8EA8", Offset = "0x15F8EA8", VA = "0x15F8EA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2AFB4", Offset = "0xA2AFB4")]
			protected set
			{
			}
		}

		[Token(Token = "0x60015C5")]
		[Address(RVA = "0x15F8EB0", Offset = "0x15F8EB0", VA = "0x15F8EB0", Slot = "4")]
		public virtual void Awake()
		{
		}

		[Token(Token = "0x60015C6")]
		[Address(RVA = "0x15F8F20", Offset = "0x15F8F20", VA = "0x15F8F20", Slot = "5")]
		public virtual void Start()
		{
		}

		[Token(Token = "0x60015C7")]
		[Address(RVA = "0x15F9108", Offset = "0x15F9108", VA = "0x15F9108")]
		public void OnBarkStart(Transform actor)
		{
		}

		[Token(Token = "0x60015C8")]
		[Address(RVA = "0x15F9160", Offset = "0x15F9160", VA = "0x15F9160")]
		public void OnBarkEnd(Transform actor)
		{
		}

		[Token(Token = "0x60015C9")]
		[Address(RVA = "0x15F91B0", Offset = "0x15F91B0", VA = "0x15F91B0")]
		public void OnConversationStart(Transform actor)
		{
		}

		[Token(Token = "0x60015CA")]
		[Address(RVA = "0x15F9200", Offset = "0x15F9200", VA = "0x15F9200")]
		public void OnConversationEnd(Transform actor)
		{
		}

		[Token(Token = "0x60015CB")]
		[Address(RVA = "0x15F9250", Offset = "0x15F9250", VA = "0x15F9250")]
		private void OnConversationStartAnywhere(Transform actor)
		{
		}

		[Token(Token = "0x60015CC")]
		[Address(RVA = "0x15F93A0", Offset = "0x15F93A0", VA = "0x15F93A0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA2AFC4", Offset = "0xA2AFC4")]
		protected IEnumerator ShowCursorAfterOneFrame()
		{
			return null;
		}

		[Token(Token = "0x60015CD")]
		[Address(RVA = "0x15F942C", Offset = "0x15F942C", VA = "0x15F942C")]
		private void OnConversationEndAnywhere(Transform actor)
		{
		}

		[Token(Token = "0x60015CE")]
		[Address(RVA = "0x15F9578", Offset = "0x15F9578", VA = "0x15F9578")]
		public void OnSequenceStart(Transform actor)
		{
		}

		[Token(Token = "0x60015CF")]
		[Address(RVA = "0x15F95C8", Offset = "0x15F95C8", VA = "0x15F95C8")]
		public void OnSequenceEnd(Transform actor)
		{
		}

		[Token(Token = "0x60015D0")]
		[Address(RVA = "0x15F9618", Offset = "0x15F9618", VA = "0x15F9618")]
		public void OnSequenceEnd()
		{
		}

		[Token(Token = "0x60015D1")]
		[Address(RVA = "0x15F9620", Offset = "0x15F9620", VA = "0x15F9620")]
		public void OnUse(Transform actor)
		{
		}

		[Token(Token = "0x60015D2")]
		[Address(RVA = "0x15F9670", Offset = "0x15F9670", VA = "0x15F9670")]
		public void OnUse(string message)
		{
		}

		[Token(Token = "0x60015D3")]
		[Address(RVA = "0x15F96BC", Offset = "0x15F96BC", VA = "0x15F96BC")]
		public void OnUse()
		{
		}

		[Token(Token = "0x60015D4")]
		[Address(RVA = "0x15F9708", Offset = "0x15F9708", VA = "0x15F9708")]
		public void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60015D5")]
		[Address(RVA = "0x15F976C", Offset = "0x15F976C", VA = "0x15F976C")]
		public void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60015D6")]
		[Address(RVA = "0x15F97A4", Offset = "0x15F97A4", VA = "0x15F97A4")]
		protected void CheckOnTriggerExit(Transform otherTransform)
		{
		}

		[Token(Token = "0x60015D7")]
		[Address(RVA = "0x15F99E8", Offset = "0x15F99E8", VA = "0x15F99E8")]
		public void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x60015D8")]
		[Address(RVA = "0x15F9A58", Offset = "0x15F9A58", VA = "0x15F9A58")]
		public void OnCollisionExit(Collision collision)
		{
		}

		[Token(Token = "0x60015D9")]
		[Address(RVA = "0x15F9AC8", Offset = "0x15F9AC8", VA = "0x15F9AC8")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x60015DA")]
		[Address(RVA = "0x15F9B7C", Offset = "0x15F9B7C", VA = "0x15F9B7C")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x60015DB")]
		[Address(RVA = "0x15F9C4C", Offset = "0x15F9C4C", VA = "0x15F9C4C")]
		public void OnLevelWillBeUnloaded()
		{
		}

		[Token(Token = "0x60015DC")]
		[Address(RVA = "0x15F9C54", Offset = "0x15F9C54", VA = "0x15F9C54")]
		public void OnApplicationQuit()
		{
		}

		[Token(Token = "0x60015DD")]
		[Address(RVA = "0x15F9C5C", Offset = "0x15F9C5C", VA = "0x15F9C5C")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x60015DE")]
		[Address(RVA = "0x15F9098", Offset = "0x15F9098", VA = "0x15F9098")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA2C028", Offset = "0xA2C028")]
		protected IEnumerator StartAtEndOfFrame()
		{
			return null;
		}

		[Token(Token = "0x60015DF")]
		[Address(RVA = "0x15F9158", Offset = "0x15F9158", VA = "0x15F9158")]
		public void TryStart(Transform actor)
		{
		}

		[Token(Token = "0x60015E0")]
		[Address(RVA = "0x15F9CAC", Offset = "0x15F9CAC", VA = "0x15F9CAC")]
		public void TryStart(Transform actor, Transform interactor)
		{
		}

		[Token(Token = "0x60015E1")]
		[Address(RVA = "0x15F9D34", Offset = "0x15F9D34", VA = "0x15F9D34")]
		public void Fire(Transform actor)
		{
		}

		[Token(Token = "0x60015E2")]
		[Address(RVA = "0x15F9F80", Offset = "0x15F9F80", VA = "0x15F9F80", Slot = "6")]
		protected virtual void DoQuestAction()
		{
		}

		[Token(Token = "0x60015E3")]
		[Address(RVA = "0x15FA068", Offset = "0x15FA068", VA = "0x15FA068", Slot = "7")]
		protected virtual void DoLuaAction()
		{
		}

		[Token(Token = "0x60015E4")]
		[Address(RVA = "0x15FA124", Offset = "0x15FA124", VA = "0x15FA124", Slot = "8")]
		protected virtual void DoSequenceAction(Transform actor)
		{
		}

		[Token(Token = "0x60015E5")]
		[Address(RVA = "0x15FA310", Offset = "0x15FA310", VA = "0x15FA310", Slot = "9")]
		protected virtual void DoAlertAction()
		{
		}

		[Token(Token = "0x60015E6")]
		[Address(RVA = "0x15FA514", Offset = "0x15FA514", VA = "0x15FA514", Slot = "10")]
		protected virtual void DoSendMessageActions()
		{
		}

		[Token(Token = "0x60015E7")]
		[Address(RVA = "0x15FA60C", Offset = "0x15FA60C", VA = "0x15FA60C", Slot = "11")]
		protected virtual void DoBarkAction(Transform actor)
		{
		}

		[Token(Token = "0x60015E8")]
		[Address(RVA = "0x15FAD84", Offset = "0x15FAD84", VA = "0x15FAD84", Slot = "12")]
		protected virtual Transform GetBarker(string conversation)
		{
			return null;
		}

		[Token(Token = "0x60015E9")]
		[Address(RVA = "0x15FAF30", Offset = "0x15FAF30", VA = "0x15FAF30", Slot = "13")]
		protected virtual string GetBarkerName()
		{
			return null;
		}

		[Token(Token = "0x60015EA")]
		[Address(RVA = "0x15FAF68", Offset = "0x15FAF68", VA = "0x15FAF68", Slot = "14")]
		protected virtual void BarkCachedLine(Transform speaker, Transform listener)
		{
		}

		[Token(Token = "0x60015EB")]
		[Address(RVA = "0x15FB048", Offset = "0x15FB048", VA = "0x15FB048")]
		protected void PopulateCache(Transform speaker, Transform listener)
		{
		}

		[Token(Token = "0x60015EC")]
		[Address(RVA = "0x15FB538", Offset = "0x15FB538", VA = "0x15FB538")]
		protected void BarkNextCachedLine(Transform speaker, Transform listener)
		{
		}

		[Token(Token = "0x60015ED")]
		[Address(RVA = "0x15FBAC4", Offset = "0x15FBAC4", VA = "0x15FBAC4")]
		public void ResetBarkHistory()
		{
		}

		[Token(Token = "0x60015EE")]
		[Address(RVA = "0x15FBAE0", Offset = "0x15FBAE0", VA = "0x15FBAE0", Slot = "15")]
		protected virtual void DoConversationAction(Transform actor)
		{
		}

		[Token(Token = "0x60015EF")]
		[Address(RVA = "0x15F9544", Offset = "0x15F9544", VA = "0x15F9544")]
		protected void StopMonitoringConversationDistance()
		{
		}

		[Token(Token = "0x60015F0")]
		[Address(RVA = "0x15FBFE4", Offset = "0x15FBFE4", VA = "0x15FBFE4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA2C08C", Offset = "0xA2C08C")]
		protected IEnumerator MonitorDistance(Transform actor)
		{
			return null;
		}

		[Token(Token = "0x60015F1")]
		[Address(RVA = "0x15FC08C", Offset = "0x15FC08C", VA = "0x15FC08C", Slot = "16")]
		protected virtual void DoSetActiveActions(Transform actor)
		{
		}

		[Token(Token = "0x60015F2")]
		[Address(RVA = "0x15FC3AC", Offset = "0x15FC3AC", VA = "0x15FC3AC", Slot = "17")]
		protected virtual void DoSetEnabledActions(Transform actor)
		{
		}

		[Token(Token = "0x60015F3")]
		[Address(RVA = "0x15FC498", Offset = "0x15FC498", VA = "0x15FC498", Slot = "18")]
		protected virtual void DoSetAnimatorStateActions(Transform actor)
		{
		}

		[Token(Token = "0x60015F4")]
		[Address(RVA = "0x15FC8DC", Offset = "0x15FC8DC", VA = "0x15FC8DC")]
		public void OnRecordPersistentData()
		{
		}

		[Token(Token = "0x60015F5")]
		[Address(RVA = "0x15FC9C4", Offset = "0x15FC9C4", VA = "0x15FC9C4")]
		public void OnApplyPersistentData()
		{
		}

		[Token(Token = "0x60015F6")]
		[Address(RVA = "0x15FCAD4", Offset = "0x15FCAD4", VA = "0x15FCAD4")]
		public DialogueSystemTrigger()
		{
		}
	}
	[Token(Token = "0x2000249")]
	[Flags]
	public enum DialogueSystemTriggerEvent
	{
		[Token(Token = "0x4000CFA")]
		OnBarkEnd = 1,
		[Token(Token = "0x4000CFB")]
		OnConversationEnd = 2,
		[Token(Token = "0x4000CFC")]
		OnSequenceEnd = 4,
		[Token(Token = "0x4000CFD")]
		OnTriggerEnter = 8,
		[Token(Token = "0x4000CFE")]
		OnStart = 0x10,
		[Token(Token = "0x4000CFF")]
		OnUse = 0x20,
		[Token(Token = "0x4000D00")]
		OnEnable = 0x40,
		[Token(Token = "0x4000D01")]
		OnTriggerExit = 0x80,
		[Token(Token = "0x4000D02")]
		OnDisable = 0x100,
		[Token(Token = "0x4000D03")]
		OnDestroy = 0x200,
		[Token(Token = "0x4000D04")]
		None = 0x400,
		[Token(Token = "0x4000D05")]
		OnCollisionEnter = 0x800,
		[Token(Token = "0x4000D06")]
		OnCollisionExit = 0x1000,
		[Token(Token = "0x4000D07")]
		OnBarkStart = 0x2000,
		[Token(Token = "0x4000D08")]
		OnConversationStart = 0x4000,
		[Token(Token = "0x4000D09")]
		OnSequenceStart = 0x8000
	}
	[Token(Token = "0x200024A")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA087B4", Offset = "0xA087B4")]
	public class AlertTrigger : DialogueEventStarter
	{
		[Token(Token = "0x2000615")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DCA8", Offset = "0xA0DCA8")]
		private sealed class <StartAfterOneFrame>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AlertTrigger <>4__this;

			[Token(Token = "0x1700055D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002AAB")]
				[Address(RVA = "0x1429648", Offset = "0x1429648", VA = "0x1429648", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700055E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002AAD")]
				[Address(RVA = "0x14296B0", Offset = "0x14296B0", VA = "0x14296B0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002AA8")]
			[Address(RVA = "0x142952C", Offset = "0x142952C", VA = "0x142952C")]
			[DebuggerHidden]
			public <StartAfterOneFrame>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x6002AA9")]
			[Address(RVA = "0x14295EC", Offset = "0x14295EC", VA = "0x14295EC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002AAA")]
			[Address(RVA = "0x14295F0", Offset = "0x14295F0", VA = "0x14295F0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002AAC")]
			[Address(RVA = "0x1429650", Offset = "0x1429650", VA = "0x1429650", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[DialogueTriggerEvent]
		public DialogueTriggerEvent trigger;

		[Token(Token = "0x4000D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1A490", Offset = "0xA1A490")]
		public LocalizedTextTable localizedTextTable;

		[Token(Token = "0x4000D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1A4C8", Offset = "0xA1A4C8")]
		public string message;

		[Token(Token = "0x4000D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1A500", Offset = "0xA1A500")]
		public float duration;

		[Token(Token = "0x4000D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Condition condition;

		[Token(Token = "0x4000D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool tryingToStart;

		[Token(Token = "0x4000D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool listenForOnDestroy;

		[Token(Token = "0x60015F7")]
		[Address(RVA = "0x1428E14", Offset = "0x1428E14", VA = "0x1428E14")]
		public void OnBarkEnd(Transform actor)
		{
		}

		[Token(Token = "0x60015F8")]
		[Address(RVA = "0x14290D8", Offset = "0x14290D8", VA = "0x14290D8")]
		public void OnConversationEnd(Transform actor)
		{
		}

		[Token(Token = "0x60015F9")]
		[Address(RVA = "0x1429124", Offset = "0x1429124", VA = "0x1429124")]
		public void OnSequenceEnd(Transform actor)
		{
		}

		[Token(Token = "0x60015FA")]
		[Address(RVA = "0x1429170", Offset = "0x1429170", VA = "0x1429170")]
		public void OnUse(Transform actor)
		{
		}

		[Token(Token = "0x60015FB")]
		[Address(RVA = "0x14291BC", Offset = "0x14291BC", VA = "0x14291BC")]
		public void OnUse(string message)
		{
		}

		[Token(Token = "0x60015FC")]
		[Address(RVA = "0x1429204", Offset = "0x1429204", VA = "0x1429204")]
		public void OnUse()
		{
		}

		[Token(Token = "0x60015FD")]
		[Address(RVA = "0x142924C", Offset = "0x142924C", VA = "0x142924C")]
		public void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60015FE")]
		[Address(RVA = "0x14292AC", Offset = "0x14292AC", VA = "0x14292AC")]
		public void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60015FF")]
		[Address(RVA = "0x142930C", Offset = "0x142930C", VA = "0x142930C")]
		public void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001600")]
		[Address(RVA = "0x1429378", Offset = "0x1429378", VA = "0x1429378")]
		public void OnCollisionExit(Collision collision)
		{
		}

		[Token(Token = "0x6001601")]
		[Address(RVA = "0x14293E4", Offset = "0x14293E4", VA = "0x14293E4")]
		public void Start()
		{
		}

		[Token(Token = "0x6001602")]
		[Address(RVA = "0x1429490", Offset = "0x1429490", VA = "0x1429490")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001603")]
		[Address(RVA = "0x14294DC", Offset = "0x14294DC", VA = "0x14294DC")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001604")]
		[Address(RVA = "0x14294FC", Offset = "0x14294FC", VA = "0x14294FC")]
		public void OnLevelWillBeUnloaded()
		{
		}

		[Token(Token = "0x6001605")]
		[Address(RVA = "0x1429504", Offset = "0x1429504", VA = "0x1429504")]
		public void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001606")]
		[Address(RVA = "0x142950C", Offset = "0x142950C", VA = "0x142950C")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6001607")]
		[Address(RVA = "0x1429420", Offset = "0x1429420", VA = "0x1429420")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA2C0F0", Offset = "0xA2C0F0")]
		private IEnumerator StartAfterOneFrame()
		{
			return null;
		}

		[Token(Token = "0x6001608")]
		[Address(RVA = "0x1428E60", Offset = "0x1428E60", VA = "0x1428E60")]
		public void TryStart(Transform actor)
		{
		}

		[Token(Token = "0x6001609")]
		[Address(RVA = "0x14295D4", Offset = "0x14295D4", VA = "0x14295D4")]
		public AlertTrigger()
		{
		}
	}
	[Token(Token = "0x200024B")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA087EC", Offset = "0xA087EC")]
	public abstract class BarkStarter : ConversationStarter
	{
		[Token(Token = "0x4000D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1A538", Offset = "0xA1A538")]
		public BarkOrder barkOrder;

		[Token(Token = "0x4000D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1A570", Offset = "0xA1A570")]
		public bool allowDuringConversations;

		[Token(Token = "0x4000D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1A5A8", Offset = "0xA1A5A8")]
		public bool cacheBarkLines;

		[Token(Token = "0x4000D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1A5E0", Offset = "0xA1A5E0")]
		private Sequencer <sequencer>k__BackingField;

		[Token(Token = "0x4000D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private BarkHistory barkHistory;

		[Token(Token = "0x4000D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool tryingToBark;

		[Token(Token = "0x4000D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private ConversationState cachedState;

		[Token(Token = "0x4000D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private IBarkUI barkUI;

		[Token(Token = "0x4000D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected BarkGroupMember barkGroupMember;

		[Token(Token = "0x17000291")]
		public Sequencer sequencer
		{
			[Token(Token = "0x600160A")]
			[Address(RVA = "0x1431034", Offset = "0x1431034", VA = "0x1431034")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2C154", Offset = "0xA2C154")]
			get
			{
				return null;
			}
			[Token(Token = "0x600160B")]
			[Address(RVA = "0x143103C", Offset = "0x143103C", VA = "0x143103C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2C164", Offset = "0xA2C164")]
			private set
			{
			}
		}

		[Token(Token = "0x17000292")]
		public int BarkIndex
		{
			[Token(Token = "0x600160C")]
			[Address(RVA = "0x1431044", Offset = "0x1431044", VA = "0x1431044")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600160D")]
			[Address(RVA = "0x1431060", Offset = "0x1431060", VA = "0x1431060")]
			set
			{
			}
		}

		[Token(Token = "0x600160E")]
		[Address(RVA = "0x143107C", Offset = "0x143107C", VA = "0x143107C", Slot = "5")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600160F")]
		[Address(RVA = "0x1430C90", Offset = "0x1430C90", VA = "0x1430C90", Slot = "6")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6001610")]
		[Address(RVA = "0x1430D44", Offset = "0x1430D44", VA = "0x1430D44", Slot = "7")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001611")]
		[Address(RVA = "0x1431714", Offset = "0x1431714", VA = "0x1431714", Slot = "8")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001612")]
		[Address(RVA = "0x1430FBC", Offset = "0x1430FBC", VA = "0x1430FBC")]
		public void TryBark(Transform target)
		{
		}

		[Token(Token = "0x6001613")]
		[Address(RVA = "0x1431790", Offset = "0x1431790", VA = "0x1431790")]
		public void TryBark(Transform target, Transform interactor)
		{
		}

		[Token(Token = "0x6001614")]
		[Address(RVA = "0x1431110", Offset = "0x1431110", VA = "0x1431110")]
		private Transform GetBarker()
		{
			return null;
		}

		[Token(Token = "0x6001615")]
		[Address(RVA = "0x1431D78", Offset = "0x1431D78", VA = "0x1431D78")]
		private string GetBarkerName()
		{
			return null;
		}

		[Token(Token = "0x6001616")]
		[Address(RVA = "0x1431C98", Offset = "0x1431C98", VA = "0x1431C98")]
		private void BarkCachedLine(Transform speaker, Transform listener)
		{
		}

		[Token(Token = "0x6001617")]
		[Address(RVA = "0x1431218", Offset = "0x1431218", VA = "0x1431218")]
		private void PopulateCache(Transform speaker, Transform listener)
		{
		}

		[Token(Token = "0x6001618")]
		[Address(RVA = "0x1431D90", Offset = "0x1431D90", VA = "0x1431D90")]
		private void BarkNextCachedLine(Transform speaker, Transform listener)
		{
		}

		[Token(Token = "0x6001619")]
		[Address(RVA = "0x143233C", Offset = "0x143233C", VA = "0x143233C")]
		public void ResetBarkHistory()
		{
		}

		[Token(Token = "0x600161A")]
		[Address(RVA = "0x1432358", Offset = "0x1432358", VA = "0x1432358")]
		public void OnRecordPersistentData()
		{
		}

		[Token(Token = "0x600161B")]
		[Address(RVA = "0x1432438", Offset = "0x1432438", VA = "0x1432438")]
		public void OnApplyPersistentData()
		{
		}

		[Token(Token = "0x600161C")]
		[Address(RVA = "0x1430E70", Offset = "0x1430E70", VA = "0x1430E70")]
		protected BarkStarter()
		{
		}
	}
	[Token(Token = "0x200024C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA08824", Offset = "0xA08824")]
	public class BarkTrigger : BarkStarter
	{
		[Token(Token = "0x2000616")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DCB8", Offset = "0xA0DCB8")]
		private sealed class <BarkAfterOneFrame>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public BarkTrigger <>4__this;

			[Token(Token = "0x1700055F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002AB1")]
				[Address(RVA = "0x14334FC", Offset = "0x14334FC", VA = "0x14334FC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000560")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002AB3")]
				[Address(RVA = "0x1433564", Offset = "0x1433564", VA = "0x1433564", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002AAE")]
			[Address(RVA = "0x1433460", Offset = "0x1433460", VA = "0x1433460")]
			[DebuggerHidden]
			public <BarkAfterOneFrame>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x6002AAF")]
			[Address(RVA = "0x143349C", Offset = "0x143349C", VA = "0x143349C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002AB0")]
			[Address(RVA = "0x14334A0", Offset = "0x14334A0", VA = "0x14334A0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002AB2")]
			[Address(RVA = "0x1433504", Offset = "0x1433504", VA = "0x1433504", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1A5F0", Offset = "0xA1A5F0")]
		public Transform target;

		[Token(Token = "0x4000D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1A628", Offset = "0xA1A628")]
		[DialogueTriggerEvent]
		public DialogueTriggerEvent trigger;

		[Token(Token = "0x4000D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private bool listenForOnDestroy;

		[Token(Token = "0x600161D")]
		[Address(RVA = "0x1432638", Offset = "0x1432638", VA = "0x1432638")]
		public void OnBarkEnd(Transform actor)
		{
		}

		[Token(Token = "0x600161E")]
		[Address(RVA = "0x1432770", Offset = "0x1432770", VA = "0x1432770")]
		public void OnConversationEnd(Transform actor)
		{
		}

		[Token(Token = "0x600161F")]
		[Address(RVA = "0x14328A8", Offset = "0x14328A8", VA = "0x14328A8")]
		public void OnSequenceEnd(Transform actor)
		{
		}

		[Token(Token = "0x6001620")]
		[Address(RVA = "0x14329E0", Offset = "0x14329E0", VA = "0x14329E0")]
		public void OnUse(Transform actor)
		{
		}

		[Token(Token = "0x6001621")]
		[Address(RVA = "0x1432B18", Offset = "0x1432B18", VA = "0x1432B18")]
		public void OnUse(string message)
		{
		}

		[Token(Token = "0x6001622")]
		[Address(RVA = "0x1432C24", Offset = "0x1432C24", VA = "0x1432C24")]
		public void OnUse()
		{
		}

		[Token(Token = "0x6001623")]
		[Address(RVA = "0x1432D30", Offset = "0x1432D30", VA = "0x1432D30")]
		public void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001624")]
		[Address(RVA = "0x1432E8C", Offset = "0x1432E8C", VA = "0x1432E8C")]
		public void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001625")]
		[Address(RVA = "0x1432FE8", Offset = "0x1432FE8", VA = "0x1432FE8")]
		public void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001626")]
		[Address(RVA = "0x143315C", Offset = "0x143315C", VA = "0x143315C")]
		public void OnCollisionExit(Collision collision)
		{
		}

		[Token(Token = "0x6001627")]
		[Address(RVA = "0x14332D0", Offset = "0x14332D0", VA = "0x14332D0", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001628")]
		[Address(RVA = "0x143338C", Offset = "0x143338C", VA = "0x143338C", Slot = "7")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001629")]
		[Address(RVA = "0x14333E0", Offset = "0x14333E0", VA = "0x14333E0", Slot = "8")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x600162A")]
		[Address(RVA = "0x143342C", Offset = "0x143342C", VA = "0x143342C")]
		public void OnLevelWillBeUnloaded()
		{
		}

		[Token(Token = "0x600162B")]
		[Address(RVA = "0x1433434", Offset = "0x1433434", VA = "0x1433434")]
		public void OnApplicationQuit()
		{
		}

		[Token(Token = "0x600162C")]
		[Address(RVA = "0x143343C", Offset = "0x143343C", VA = "0x143343C")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x600162D")]
		[Address(RVA = "0x143331C", Offset = "0x143331C", VA = "0x143331C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA2C174", Offset = "0xA2C174")]
		private IEnumerator BarkAfterOneFrame()
		{
			return null;
		}

		[Token(Token = "0x600162E")]
		[Address(RVA = "0x143348C", Offset = "0x143348C", VA = "0x143348C")]
		public BarkTrigger()
		{
		}
	}
	[Token(Token = "0x200024D")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0885C", Offset = "0xA0885C")]
	public abstract class ConversationStarter : DialogueEventStarter
	{
		[Token(Token = "0x4000D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1A674", Offset = "0xA1A674")]
		[AttributeAttribute(Name = "ConversationPopupAttribute", RVA = "0xA1A674", Offset = "0xA1A674")]
		public string conversation;

		[Token(Token = "0x4000D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Condition condition;

		[Token(Token = "0x4000D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1A6C4", Offset = "0xA1A6C4")]
		public bool skipIfNoValidEntries;

		[Token(Token = "0x4000D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1A6FC", Offset = "0xA1A6FC")]
		public bool exclusive;

		[Token(Token = "0x4000D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1A734", Offset = "0xA1A734")]
		public Transform conversant;

		[Token(Token = "0x4000D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool tryingToStart;

		[Token(Token = "0x4000D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		[HideInInspector]
		public bool useConversationTitlePicker;

		[Token(Token = "0x4000D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public DialogueDatabase selectedDatabase;

		[Token(Token = "0x600162F")]
		[Address(RVA = "0x1471654", Offset = "0x1471654", VA = "0x1471654")]
		public void TryStartConversation(Transform actor)
		{
		}

		[Token(Token = "0x6001630")]
		[Address(RVA = "0x147165C", Offset = "0x147165C", VA = "0x147165C")]
		public void TryStartConversation(Transform actor, Transform interactor)
		{
		}

		[Token(Token = "0x6001631")]
		[Address(RVA = "0x1471A40", Offset = "0x1471A40", VA = "0x1471A40")]
		private void StartConversation(Transform actor)
		{
		}

		[Token(Token = "0x6001632")]
		[Address(RVA = "0x1471CE0", Offset = "0x1471CE0", VA = "0x1471CE0")]
		protected ConversationStarter()
		{
		}
	}
	[Token(Token = "0x200024E")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA08894", Offset = "0xA08894")]
	public class ConversationTrigger : ConversationStarter
	{
		[Token(Token = "0x2000617")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DCC8", Offset = "0xA0DCC8")]
		private sealed class <StartConversationAfterOneFrame>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ConversationTrigger <>4__this;

			[Token(Token = "0x17000561")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002AB7")]
				[Address(RVA = "0x14736EC", Offset = "0x14736EC", VA = "0x14736EC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000562")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002AB9")]
				[Address(RVA = "0x1473754", Offset = "0x1473754", VA = "0x1473754", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002AB4")]
			[Address(RVA = "0x1473648", Offset = "0x1473648", VA = "0x1473648")]
			[DebuggerHidden]
			public <StartConversationAfterOneFrame>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x6002AB5")]
			[Address(RVA = "0x147368C", Offset = "0x147368C", VA = "0x147368C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002AB6")]
			[Address(RVA = "0x1473690", Offset = "0x1473690", VA = "0x1473690", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002AB8")]
			[Address(RVA = "0x14736F4", Offset = "0x14736F4", VA = "0x14736F4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1A78C", Offset = "0xA1A78C")]
		public Transform actor;

		[Token(Token = "0x4000D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1A7C4", Offset = "0xA1A7C4")]
		[DialogueTriggerEvent]
		public DialogueTriggerEvent trigger;

		[Token(Token = "0x4000D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1A810", Offset = "0xA1A810")]
		public bool stopConversationOnTriggerExit;

		[Token(Token = "0x4000D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float earliestTimeToAllowTriggerExit;

		[Token(Token = "0x4000D29")]
		private const float MarginToAllowTriggerExit = 0.2f;

		[Token(Token = "0x4000D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool listenForOnDestroy;

		[Token(Token = "0x6001633")]
		[Address(RVA = "0x14729C4", Offset = "0x14729C4", VA = "0x14729C4")]
		public void OnBarkEnd(Transform actor)
		{
		}

		[Token(Token = "0x6001634")]
		[Address(RVA = "0x1472AFC", Offset = "0x1472AFC", VA = "0x1472AFC")]
		public void OnConversationEnd(Transform actor)
		{
		}

		[Token(Token = "0x6001635")]
		[Address(RVA = "0x1472C34", Offset = "0x1472C34", VA = "0x1472C34")]
		public void OnSequenceEnd(Transform actor)
		{
		}

		[Token(Token = "0x6001636")]
		[Address(RVA = "0x1472D6C", Offset = "0x1472D6C", VA = "0x1472D6C")]
		public void OnUse(Transform actor)
		{
		}

		[Token(Token = "0x6001637")]
		[Address(RVA = "0x1472EA4", Offset = "0x1472EA4", VA = "0x1472EA4")]
		public void OnUse(string message)
		{
		}

		[Token(Token = "0x6001638")]
		[Address(RVA = "0x1472EF0", Offset = "0x1472EF0", VA = "0x1472EF0")]
		public void OnUse()
		{
		}

		[Token(Token = "0x6001639")]
		[Address(RVA = "0x1472F3C", Offset = "0x1472F3C", VA = "0x1472F3C")]
		public void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600163A")]
		[Address(RVA = "0x1473114", Offset = "0x1473114", VA = "0x1473114")]
		public void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x600163B")]
		[Address(RVA = "0x1473418", Offset = "0x1473418", VA = "0x1473418")]
		public void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x600163C")]
		[Address(RVA = "0x1473488", Offset = "0x1473488", VA = "0x1473488")]
		public void OnCollisionExit(Collision collision)
		{
		}

		[Token(Token = "0x600163D")]
		[Address(RVA = "0x1472F9C", Offset = "0x1472F9C", VA = "0x1472F9C")]
		private void TryStartConversationOnTriggerEnter(Transform otherTransform)
		{
		}

		[Token(Token = "0x600163E")]
		[Address(RVA = "0x147314C", Offset = "0x147314C", VA = "0x147314C")]
		private void CheckOnTriggerExit(Transform otherTransform)
		{
		}

		[Token(Token = "0x600163F")]
		[Address(RVA = "0x14734F8", Offset = "0x14734F8", VA = "0x14734F8")]
		public void Start()
		{
		}

		[Token(Token = "0x6001640")]
		[Address(RVA = "0x14735A4", Offset = "0x14735A4", VA = "0x14735A4")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001641")]
		[Address(RVA = "0x14735F0", Offset = "0x14735F0", VA = "0x14735F0")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001642")]
		[Address(RVA = "0x1473614", Offset = "0x1473614", VA = "0x1473614")]
		public void OnLevelWillBeUnloaded()
		{
		}

		[Token(Token = "0x6001643")]
		[Address(RVA = "0x147361C", Offset = "0x147361C", VA = "0x147361C")]
		public void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001644")]
		[Address(RVA = "0x1473624", Offset = "0x1473624", VA = "0x1473624")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6001645")]
		[Address(RVA = "0x1473534", Offset = "0x1473534", VA = "0x1473534")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA2C1D8", Offset = "0xA2C1D8")]
		private IEnumerator StartConversationAfterOneFrame()
		{
			return null;
		}

		[Token(Token = "0x6001646")]
		[Address(RVA = "0x1473674", Offset = "0x1473674", VA = "0x1473674")]
		public ConversationTrigger()
		{
		}
	}
	[Token(Token = "0x200024F")]
	public abstract class DialogueEventStarter : MonoBehaviour
	{
		[Token(Token = "0x4000D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1A848", Offset = "0xA1A848")]
		public bool once;

		[Token(Token = "0x17000293")]
		protected virtual bool useOnce
		{
			[Token(Token = "0x6001647")]
			[Address(RVA = "0x15E63C8", Offset = "0x15E63C8", VA = "0x15E63C8", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001648")]
		[Address(RVA = "0x15E63D0", Offset = "0x15E63D0", VA = "0x15E63D0")]
		protected void DestroyIfOnce()
		{
		}

		[Token(Token = "0x6001649")]
		[Address(RVA = "0x15E644C", Offset = "0x15E644C", VA = "0x15E644C")]
		protected DialogueEventStarter()
		{
		}
	}
	[Token(Token = "0x2000250")]
	[Flags]
	public enum DialogueTriggerEvent
	{
		[Token(Token = "0x4000D2D")]
		OnBarkEnd = 1,
		[Token(Token = "0x4000D2E")]
		OnConversationEnd = 2,
		[Token(Token = "0x4000D2F")]
		OnSequenceEnd = 4,
		[Token(Token = "0x4000D30")]
		OnTriggerEnter = 8,
		[Token(Token = "0x4000D31")]
		OnStart = 0x10,
		[Token(Token = "0x4000D32")]
		OnUse = 0x20,
		[Token(Token = "0x4000D33")]
		OnEnable = 0x40,
		[Token(Token = "0x4000D34")]
		OnTriggerExit = 0x80,
		[Token(Token = "0x4000D35")]
		OnDisable = 0x100,
		[Token(Token = "0x4000D36")]
		OnDestroy = 0x200,
		[Token(Token = "0x4000D37")]
		None = 0x400,
		[Token(Token = "0x4000D38")]
		OnCollisionEnter = 0x800,
		[Token(Token = "0x4000D39")]
		OnCollisionExit = 0x1000
	}
	[Token(Token = "0x2000251")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA088DC", Offset = "0xA088DC")]
	public class LuaTrigger : DialogueEventStarter
	{
		[Token(Token = "0x2000618")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DCD8", Offset = "0xA0DCD8")]
		private sealed class <StartAfterOneFrame>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LuaTrigger <>4__this;

			[Token(Token = "0x17000563")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002ABD")]
				[Address(RVA = "0x1721F00", Offset = "0x1721F00", VA = "0x1721F00", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000564")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002ABF")]
				[Address(RVA = "0x1721F68", Offset = "0x1721F68", VA = "0x1721F68", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002ABA")]
			[Address(RVA = "0x1721E68", Offset = "0x1721E68", VA = "0x1721E68")]
			[DebuggerHidden]
			public <StartAfterOneFrame>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6002ABB")]
			[Address(RVA = "0x1721EA4", Offset = "0x1721EA4", VA = "0x1721EA4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002ABC")]
			[Address(RVA = "0x1721EA8", Offset = "0x1721EA8", VA = "0x1721EA8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002ABE")]
			[Address(RVA = "0x1721F08", Offset = "0x1721F08", VA = "0x1721F08", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[DialogueTriggerEvent]
		public DialogueTriggerEvent trigger;

		[Token(Token = "0x4000D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Condition condition;

		[Token(Token = "0x4000D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "LuaScriptWizardAttribute", RVA = "0xA1A890", Offset = "0xA1A890")]
		public string luaCode;

		[Token(Token = "0x4000D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool tryingToStart;

		[Token(Token = "0x4000D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool listenForOnDestroy;

		[Token(Token = "0x600164A")]
		[Address(RVA = "0x1721870", Offset = "0x1721870", VA = "0x1721870")]
		public void OnBarkEnd(Transform actor)
		{
		}

		[Token(Token = "0x600164B")]
		[Address(RVA = "0x1721A14", Offset = "0x1721A14", VA = "0x1721A14")]
		public void OnConversationEnd(Transform actor)
		{
		}

		[Token(Token = "0x600164C")]
		[Address(RVA = "0x1721A60", Offset = "0x1721A60", VA = "0x1721A60")]
		public void OnSequenceEnd(Transform actor)
		{
		}

		[Token(Token = "0x600164D")]
		[Address(RVA = "0x1721AAC", Offset = "0x1721AAC", VA = "0x1721AAC")]
		public void OnUse(Transform actor)
		{
		}

		[Token(Token = "0x600164E")]
		[Address(RVA = "0x1721AF8", Offset = "0x1721AF8", VA = "0x1721AF8")]
		public void OnUse(string message)
		{
		}

		[Token(Token = "0x600164F")]
		[Address(RVA = "0x1721B40", Offset = "0x1721B40", VA = "0x1721B40")]
		public void OnUse()
		{
		}

		[Token(Token = "0x6001650")]
		[Address(RVA = "0x1721B88", Offset = "0x1721B88", VA = "0x1721B88")]
		public void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001651")]
		[Address(RVA = "0x1721BE8", Offset = "0x1721BE8", VA = "0x1721BE8")]
		public void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001652")]
		[Address(RVA = "0x1721C48", Offset = "0x1721C48", VA = "0x1721C48")]
		public void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001653")]
		[Address(RVA = "0x1721CB4", Offset = "0x1721CB4", VA = "0x1721CB4")]
		public void OnCollisionExit(Collision collision)
		{
		}

		[Token(Token = "0x6001654")]
		[Address(RVA = "0x1721D20", Offset = "0x1721D20", VA = "0x1721D20")]
		public void Start()
		{
		}

		[Token(Token = "0x6001655")]
		[Address(RVA = "0x1721DCC", Offset = "0x1721DCC", VA = "0x1721DCC")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001656")]
		[Address(RVA = "0x1721E18", Offset = "0x1721E18", VA = "0x1721E18")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001657")]
		[Address(RVA = "0x1721E38", Offset = "0x1721E38", VA = "0x1721E38")]
		public void OnLevelWillBeUnloaded()
		{
		}

		[Token(Token = "0x6001658")]
		[Address(RVA = "0x1721E40", Offset = "0x1721E40", VA = "0x1721E40")]
		public void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001659")]
		[Address(RVA = "0x1721E48", Offset = "0x1721E48", VA = "0x1721E48")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x600165A")]
		[Address(RVA = "0x1721D5C", Offset = "0x1721D5C", VA = "0x1721D5C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA2C23C", Offset = "0xA2C23C")]
		private IEnumerator StartAfterOneFrame()
		{
			return null;
		}

		[Token(Token = "0x600165B")]
		[Address(RVA = "0x17218BC", Offset = "0x17218BC", VA = "0x17218BC")]
		public void TryStart(Transform actor)
		{
		}

		[Token(Token = "0x600165C")]
		[Address(RVA = "0x1721E94", Offset = "0x1721E94", VA = "0x1721E94")]
		public LuaTrigger()
		{
		}
	}
	[Token(Token = "0x2000252")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA08914", Offset = "0xA08914")]
	public class PauseGameOnConversation : MonoBehaviour
	{
		[Token(Token = "0x4000D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float preConversationTimeScale;

		[Token(Token = "0x600165D")]
		[Address(RVA = "0x1722FA0", Offset = "0x1722FA0", VA = "0x1722FA0")]
		public void OnConversationStart(Transform actor)
		{
		}

		[Token(Token = "0x600165E")]
		[Address(RVA = "0x1722FEC", Offset = "0x1722FEC", VA = "0x1722FEC")]
		public void OnConversationEnd(Transform actor)
		{
		}

		[Token(Token = "0x600165F")]
		[Address(RVA = "0x1723028", Offset = "0x1723028", VA = "0x1723028")]
		public PauseGameOnConversation()
		{
		}
	}
	[Token(Token = "0x2000253")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0894C", Offset = "0xA0894C")]
	public class QuestTrigger : DialogueEventStarter
	{
		[Serializable]
		[Token(Token = "0x2000619")]
		public class SendMessageAction
		{
			[Token(Token = "0x4001E87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject gameObject;

			[Token(Token = "0x4001E88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string message;

			[Token(Token = "0x4001E89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string parameter;

			[Token(Token = "0x6002AC0")]
			[Address(RVA = "0x11D3574", Offset = "0x11D3574", VA = "0x11D3574")]
			public SendMessageAction()
			{
			}
		}

		[Token(Token = "0x200061A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DCE8", Offset = "0xA0DCE8")]
		private sealed class <StartAfterOneFrame>d__33 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public QuestTrigger <>4__this;

			[Token(Token = "0x17000565")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002AC4")]
				[Address(RVA = "0x11D3504", Offset = "0x11D3504", VA = "0x11D3504", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000566")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002AC6")]
				[Address(RVA = "0x11D356C", Offset = "0x11D356C", VA = "0x11D356C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002AC1")]
			[Address(RVA = "0x11D2FC4", Offset = "0x11D2FC4", VA = "0x11D2FC4")]
			[DebuggerHidden]
			public <StartAfterOneFrame>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x6002AC2")]
			[Address(RVA = "0x11D34A8", Offset = "0x11D34A8", VA = "0x11D34A8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002AC3")]
			[Address(RVA = "0x11D34AC", Offset = "0x11D34AC", VA = "0x11D34AC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002AC5")]
			[Address(RVA = "0x11D350C", Offset = "0x11D350C", VA = "0x11D350C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[DialogueTriggerEvent]
		public DialogueTriggerEvent trigger;

		[Token(Token = "0x4000D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Condition condition;

		[Token(Token = "0x4000D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string questName;

		[Token(Token = "0x4000D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1A8B4", Offset = "0xA1A8B4")]
		public bool setQuestState;

		[Token(Token = "0x4000D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[QuestState]
		public QuestState questState;

		[Token(Token = "0x4000D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1A8FC", Offset = "0xA1A8FC")]
		public bool setQuestEntryState;

		[Token(Token = "0x4000D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1A934", Offset = "0xA1A934")]
		public int questEntryNumber;

		[Token(Token = "0x4000D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[QuestState]
		public QuestState questEntryState;

		[Token(Token = "0x4000D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1A97C", Offset = "0xA1A97C")]
		public string luaCode;

		[Token(Token = "0x4000D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1A9B4", Offset = "0xA1A9B4")]
		public string alertMessage;

		[Token(Token = "0x4000D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1A9EC", Offset = "0xA1A9EC")]
		public LocalizedTextTable localizedTextTable;

		[Token(Token = "0x4000D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public SendMessageAction[] sendMessages;

		[Token(Token = "0x4000D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public bool useQuestNamePicker;

		[Token(Token = "0x4000D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public DialogueDatabase selectedDatabase;

		[Token(Token = "0x4000D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool tryingToStart;

		[Token(Token = "0x4000D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		private bool listenForOnDestroy;

		[Token(Token = "0x6001660")]
		[Address(RVA = "0x11D2A94", Offset = "0x11D2A94", VA = "0x11D2A94")]
		public void OnBarkEnd(Transform actor)
		{
		}

		[Token(Token = "0x6001661")]
		[Address(RVA = "0x11D2B70", Offset = "0x11D2B70", VA = "0x11D2B70")]
		public void OnConversationEnd(Transform actor)
		{
		}

		[Token(Token = "0x6001662")]
		[Address(RVA = "0x11D2BBC", Offset = "0x11D2BBC", VA = "0x11D2BBC")]
		public void OnSequenceEnd(Transform actor)
		{
		}

		[Token(Token = "0x6001663")]
		[Address(RVA = "0x11D2C08", Offset = "0x11D2C08", VA = "0x11D2C08")]
		public void OnUse(Transform actor)
		{
		}

		[Token(Token = "0x6001664")]
		[Address(RVA = "0x11D2C54", Offset = "0x11D2C54", VA = "0x11D2C54")]
		public void OnUse(string message)
		{
		}

		[Token(Token = "0x6001665")]
		[Address(RVA = "0x11D2C9C", Offset = "0x11D2C9C", VA = "0x11D2C9C")]
		public void OnUse()
		{
		}

		[Token(Token = "0x6001666")]
		[Address(RVA = "0x11D2CE4", Offset = "0x11D2CE4", VA = "0x11D2CE4")]
		public void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001667")]
		[Address(RVA = "0x11D2D44", Offset = "0x11D2D44", VA = "0x11D2D44")]
		public void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001668")]
		[Address(RVA = "0x11D2DA4", Offset = "0x11D2DA4", VA = "0x11D2DA4")]
		public void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001669")]
		[Address(RVA = "0x11D2E10", Offset = "0x11D2E10", VA = "0x11D2E10")]
		public void OnCollisionExit(Collision collision)
		{
		}

		[Token(Token = "0x600166A")]
		[Address(RVA = "0x11D2E7C", Offset = "0x11D2E7C", VA = "0x11D2E7C")]
		public void Start()
		{
		}

		[Token(Token = "0x600166B")]
		[Address(RVA = "0x11D2F28", Offset = "0x11D2F28", VA = "0x11D2F28")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x600166C")]
		[Address(RVA = "0x11D2F74", Offset = "0x11D2F74", VA = "0x11D2F74")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x600166D")]
		[Address(RVA = "0x11D2F94", Offset = "0x11D2F94", VA = "0x11D2F94")]
		public void OnLevelWillBeUnloaded()
		{
		}

		[Token(Token = "0x600166E")]
		[Address(RVA = "0x11D2F9C", Offset = "0x11D2F9C", VA = "0x11D2F9C")]
		public void OnApplicationQuit()
		{
		}

		[Token(Token = "0x600166F")]
		[Address(RVA = "0x11D2FA4", Offset = "0x11D2FA4", VA = "0x11D2FA4")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6001670")]
		[Address(RVA = "0x11D2EB8", Offset = "0x11D2EB8", VA = "0x11D2EB8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA2C2A0", Offset = "0xA2C2A0")]
		private IEnumerator StartAfterOneFrame()
		{
			return null;
		}

		[Token(Token = "0x6001671")]
		[Address(RVA = "0x11D2AE0", Offset = "0x11D2AE0", VA = "0x11D2AE0")]
		public void TryStart(Transform actor)
		{
		}

		[Token(Token = "0x6001672")]
		[Address(RVA = "0x11D2FF0", Offset = "0x11D2FF0", VA = "0x11D2FF0")]
		public void Fire()
		{
		}

		[Token(Token = "0x6001673")]
		[Address(RVA = "0x11D3418", Offset = "0x11D3418", VA = "0x11D3418")]
		public QuestTrigger()
		{
		}
	}
	[Token(Token = "0x2000254")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA08984", Offset = "0xA08984")]
	public abstract class SequenceStarter : DialogueEventStarter
	{
		[Token(Token = "0x4000D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1AA44", Offset = "0xA1AA44")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0xA1AA44", Offset = "0xA1AA44")]
		public string sequence;

		[Token(Token = "0x4000D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1AA98", Offset = "0xA1AA98")]
		public Transform speaker;

		[Token(Token = "0x4000D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1AAD0", Offset = "0xA1AAD0")]
		public Transform listener;

		[Token(Token = "0x4000D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Condition condition;

		[Token(Token = "0x4000D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool tryingToStart;

		[Token(Token = "0x6001674")]
		[Address(RVA = "0x11D982C", Offset = "0x11D982C", VA = "0x11D982C")]
		public void TryStartSequence(Transform actor)
		{
		}

		[Token(Token = "0x6001675")]
		[Address(RVA = "0x11D9834", Offset = "0x11D9834", VA = "0x11D9834")]
		public void TryStartSequence(Transform actor, Transform interactor)
		{
		}

		[Token(Token = "0x6001676")]
		[Address(RVA = "0x11D9AE4", Offset = "0x11D9AE4", VA = "0x11D9AE4")]
		protected SequenceStarter()
		{
		}
	}
	[Token(Token = "0x2000255")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA089BC", Offset = "0xA089BC")]
	public class SequenceTrigger : SequenceStarter
	{
		[Token(Token = "0x200061B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DCF8", Offset = "0xA0DCF8")]
		private sealed class <StartSequenceAfterOneFrame>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SequenceTrigger <>4__this;

			[Token(Token = "0x17000567")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002ACA")]
				[Address(RVA = "0x11DA0FC", Offset = "0x11DA0FC", VA = "0x11DA0FC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000568")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002ACC")]
				[Address(RVA = "0x11DA164", Offset = "0x11DA164", VA = "0x11DA164", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002AC7")]
			[Address(RVA = "0x11DA044", Offset = "0x11DA044", VA = "0x11DA044")]
			[DebuggerHidden]
			public <StartSequenceAfterOneFrame>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x6002AC8")]
			[Address(RVA = "0x11DA088", Offset = "0x11DA088", VA = "0x11DA088", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002AC9")]
			[Address(RVA = "0x11DA08C", Offset = "0x11DA08C", VA = "0x11DA08C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002ACB")]
			[Address(RVA = "0x11DA104", Offset = "0x11DA104", VA = "0x11DA104", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1AB08", Offset = "0xA1AB08")]
		[DialogueTriggerEvent]
		public DialogueTriggerEvent trigger;

		[Token(Token = "0x4000D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1AB54", Offset = "0xA1AB54")]
		public bool waitOneFrameOnStartOrEnable;

		[Token(Token = "0x4000D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool listenForOnDestroy;

		[Token(Token = "0x6001677")]
		[Address(RVA = "0x11D9AEC", Offset = "0x11D9AEC", VA = "0x11D9AEC")]
		public void OnBarkEnd(Transform actor)
		{
		}

		[Token(Token = "0x6001678")]
		[Address(RVA = "0x11D9B3C", Offset = "0x11D9B3C", VA = "0x11D9B3C")]
		public void OnConversationEnd(Transform actor)
		{
		}

		[Token(Token = "0x6001679")]
		[Address(RVA = "0x11D9B8C", Offset = "0x11D9B8C", VA = "0x11D9B8C")]
		public void OnSequenceEnd(Transform actor)
		{
		}

		[Token(Token = "0x600167A")]
		[Address(RVA = "0x11D9BDC", Offset = "0x11D9BDC", VA = "0x11D9BDC")]
		public void OnUse(Transform actor)
		{
		}

		[Token(Token = "0x600167B")]
		[Address(RVA = "0x11D9C2C", Offset = "0x11D9C2C", VA = "0x11D9C2C")]
		public void OnUse(string message)
		{
		}

		[Token(Token = "0x600167C")]
		[Address(RVA = "0x11D9C78", Offset = "0x11D9C78", VA = "0x11D9C78")]
		public void OnUse()
		{
		}

		[Token(Token = "0x600167D")]
		[Address(RVA = "0x11D9CC4", Offset = "0x11D9CC4", VA = "0x11D9CC4")]
		public void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600167E")]
		[Address(RVA = "0x11D9D44", Offset = "0x11D9D44", VA = "0x11D9D44")]
		public void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x600167F")]
		[Address(RVA = "0x11D9DC4", Offset = "0x11D9DC4", VA = "0x11D9DC4")]
		public void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001680")]
		[Address(RVA = "0x11D9E5C", Offset = "0x11D9E5C", VA = "0x11D9E5C")]
		public void OnCollisionExit(Collision collision)
		{
		}

		[Token(Token = "0x6001681")]
		[Address(RVA = "0x11D9EF4", Offset = "0x11D9EF4", VA = "0x11D9EF4")]
		public void Start()
		{
		}

		[Token(Token = "0x6001682")]
		[Address(RVA = "0x11D9FA0", Offset = "0x11D9FA0", VA = "0x11D9FA0")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001683")]
		[Address(RVA = "0x11D9FEC", Offset = "0x11D9FEC", VA = "0x11D9FEC")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001684")]
		[Address(RVA = "0x11DA010", Offset = "0x11DA010", VA = "0x11DA010")]
		public void OnLevelWillBeUnloaded()
		{
		}

		[Token(Token = "0x6001685")]
		[Address(RVA = "0x11DA018", Offset = "0x11DA018", VA = "0x11DA018")]
		public void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001686")]
		[Address(RVA = "0x11DA020", Offset = "0x11DA020", VA = "0x11DA020")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6001687")]
		[Address(RVA = "0x11D9F30", Offset = "0x11D9F30", VA = "0x11D9F30")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA2C304", Offset = "0xA2C304")]
		private IEnumerator StartSequenceAfterOneFrame()
		{
			return null;
		}

		[Token(Token = "0x6001688")]
		[Address(RVA = "0x11DA070", Offset = "0x11DA070", VA = "0x11DA070")]
		public SequenceTrigger()
		{
		}
	}
	[Token(Token = "0x2000256")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA089F4", Offset = "0xA089F4")]
	public abstract class ActOnDialogueEvent : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200061C")]
		public class Action
		{
			[Token(Token = "0x4001E90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Condition condition;

			[Token(Token = "0x6002ACD")]
			[Address(RVA = "0x1427474", Offset = "0x1427474", VA = "0x1427474")]
			public Action()
			{
			}
		}

		[Token(Token = "0x4000D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1AB8C", Offset = "0xA1AB8C")]
		public DialogueEvent trigger;

		[Token(Token = "0x4000D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1ABC4", Offset = "0xA1ABC4")]
		public bool once;

		[Token(Token = "0x4000D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public DialogueDatabase selectedDatabase;

		[Token(Token = "0x6001689")]
		[Address(RVA = "0x14271E0", Offset = "0x14271E0", VA = "0x14271E0")]
		public void OnBarkStart(Transform actor)
		{
		}

		[Token(Token = "0x600168A")]
		[Address(RVA = "0x1427234", Offset = "0x1427234", VA = "0x1427234")]
		public void OnBarkEnd(Transform actor)
		{
		}

		[Token(Token = "0x600168B")]
		[Address(RVA = "0x142730C", Offset = "0x142730C", VA = "0x142730C")]
		public void OnConversationStart(Transform actor)
		{
		}

		[Token(Token = "0x600168C")]
		[Address(RVA = "0x1427360", Offset = "0x1427360", VA = "0x1427360")]
		public void OnConversationEnd(Transform actor)
		{
		}

		[Token(Token = "0x600168D")]
		[Address(RVA = "0x14273BC", Offset = "0x14273BC", VA = "0x14273BC")]
		public void OnSequenceStart(Transform actor)
		{
		}

		[Token(Token = "0x600168E")]
		[Address(RVA = "0x1427410", Offset = "0x1427410", VA = "0x1427410")]
		public void OnSequenceEnd(Transform actor)
		{
		}

		[Token(Token = "0x600168F")]
		public abstract void TryStartActions(Transform actor);

		[Token(Token = "0x6001690")]
		public abstract void TryEndActions(Transform actor);

		[Token(Token = "0x6001691")]
		[Address(RVA = "0x1427290", Offset = "0x1427290", VA = "0x1427290")]
		private void DestroyIfOnce()
		{
		}

		[Token(Token = "0x6001692")]
		[Address(RVA = "0x142746C", Offset = "0x142746C", VA = "0x142746C")]
		protected ActOnDialogueEvent()
		{
		}
	}
	[Token(Token = "0x2000257")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA08A2C", Offset = "0xA08A2C")]
	public class BarkOnDialogueEvent : ActOnDialogueEvent
	{
		[Serializable]
		[Token(Token = "0x200061D")]
		public class BarkAction : Action
		{
			[Token(Token = "0x4001E91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform speaker;

			[Token(Token = "0x4001E92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform listener;

			[Token(Token = "0x4001E93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "ConversationPopupAttribute", RVA = "0xA256C8", Offset = "0xA256C8")]
			public string conversation;

			[Token(Token = "0x6002ACE")]
			[Address(RVA = "0x1430C58", Offset = "0x1430C58", VA = "0x1430C58")]
			public BarkAction()
			{
			}
		}

		[Token(Token = "0x4000D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BarkAction[] onStart;

		[Token(Token = "0x4000D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public BarkAction[] onEnd;

		[Token(Token = "0x4000D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1AC0C", Offset = "0xA1AC0C")]
		public BarkOrder barkOrder;

		[Token(Token = "0x4000D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1AC44", Offset = "0xA1AC44")]
		private Sequencer <sequencer>k__BackingField;

		[Token(Token = "0x4000D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private BarkHistory barkHistory;

		[Token(Token = "0x17000294")]
		public Sequencer sequencer
		{
			[Token(Token = "0x6001693")]
			[Address(RVA = "0x143085C", Offset = "0x143085C", VA = "0x143085C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2C368", Offset = "0xA2C368")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001694")]
			[Address(RVA = "0x1430864", Offset = "0x1430864", VA = "0x1430864")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2C378", Offset = "0xA2C378")]
			private set
			{
			}
		}

		[Token(Token = "0x6001695")]
		[Address(RVA = "0x143086C", Offset = "0x143086C", VA = "0x143086C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001696")]
		[Address(RVA = "0x14308DC", Offset = "0x14308DC", VA = "0x14308DC", Slot = "4")]
		public override void TryStartActions(Transform actor)
		{
		}

		[Token(Token = "0x6001697")]
		[Address(RVA = "0x143098C", Offset = "0x143098C", VA = "0x143098C", Slot = "5")]
		public override void TryEndActions(Transform actor)
		{
		}

		[Token(Token = "0x6001698")]
		[Address(RVA = "0x14308EC", Offset = "0x14308EC", VA = "0x14308EC")]
		private void TryActions(BarkAction[] actions, Transform actor)
		{
		}

		[Token(Token = "0x6001699")]
		[Address(RVA = "0x143099C", Offset = "0x143099C", VA = "0x143099C")]
		public void DoAction(BarkAction action, Transform actor)
		{
		}

		[Token(Token = "0x600169A")]
		[Address(RVA = "0x1430BE8", Offset = "0x1430BE8", VA = "0x1430BE8")]
		public BarkOnDialogueEvent()
		{
		}
	}
	[Token(Token = "0x2000258")]
	[Flags]
	public enum DialogueEvent
	{
		[Token(Token = "0x4000D61")]
		OnBark = 1,
		[Token(Token = "0x4000D62")]
		OnConversation = 2,
		[Token(Token = "0x4000D63")]
		OnSequence = 4
	}
	[Token(Token = "0x2000259")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA08A74", Offset = "0xA08A74")]
	public class LuaOnDialogueEvent : ActOnDialogueEvent
	{
		[Serializable]
		[Token(Token = "0x200061E")]
		public class LuaAction : Action
		{
			[Token(Token = "0x4001E94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[Multiline]
			public string luaCode;

			[Token(Token = "0x6002ACF")]
			[Address(RVA = "0x171F6C0", Offset = "0x171F6C0", VA = "0x171F6C0")]
			public LuaAction()
			{
			}
		}

		[Token(Token = "0x4000D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LuaAction[] onStart;

		[Token(Token = "0x4000D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public LuaAction[] onEnd;

		[Token(Token = "0x4000D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool debugLua;

		[Token(Token = "0x600169B")]
		[Address(RVA = "0x171F4D4", Offset = "0x171F4D4", VA = "0x171F4D4", Slot = "4")]
		public override void TryStartActions(Transform actor)
		{
		}

		[Token(Token = "0x600169C")]
		[Address(RVA = "0x171F584", Offset = "0x171F584", VA = "0x171F584", Slot = "5")]
		public override void TryEndActions(Transform actor)
		{
		}

		[Token(Token = "0x600169D")]
		[Address(RVA = "0x171F4E4", Offset = "0x171F4E4", VA = "0x171F4E4")]
		private void TryActions(LuaAction[] actions, Transform actor)
		{
		}

		[Token(Token = "0x600169E")]
		[Address(RVA = "0x171F594", Offset = "0x171F594", VA = "0x171F594")]
		public void DoAction(LuaAction action, Transform actor)
		{
		}

		[Token(Token = "0x600169F")]
		[Address(RVA = "0x171F650", Offset = "0x171F650", VA = "0x171F650")]
		public LuaOnDialogueEvent()
		{
		}
	}
	[Token(Token = "0x200025A")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA08AAC", Offset = "0xA08AAC")]
	public class SendMessageOnDialogueEvent : ActOnDialogueEvent
	{
		[Serializable]
		[Token(Token = "0x200061F")]
		public class SendMessageAction : Action
		{
			[Token(Token = "0x4001E95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform target;

			[Token(Token = "0x4001E96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string methodName;

			[Token(Token = "0x4001E97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string parameter;

			[Token(Token = "0x6002AD0")]
			[Address(RVA = "0x11D83E4", Offset = "0x11D83E4", VA = "0x11D83E4")]
			public SendMessageAction()
			{
			}
		}

		[Token(Token = "0x4000D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SendMessageAction[] onStart;

		[Token(Token = "0x4000D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SendMessageAction[] onEnd;

		[Token(Token = "0x60016A0")]
		[Address(RVA = "0x11D8004", Offset = "0x11D8004", VA = "0x11D8004", Slot = "4")]
		public override void TryStartActions(Transform actor)
		{
		}

		[Token(Token = "0x60016A1")]
		[Address(RVA = "0x11D80B4", Offset = "0x11D80B4", VA = "0x11D80B4", Slot = "5")]
		public override void TryEndActions(Transform actor)
		{
		}

		[Token(Token = "0x60016A2")]
		[Address(RVA = "0x11D8014", Offset = "0x11D8014", VA = "0x11D8014")]
		private void TryActions(SendMessageAction[] actions, Transform actor)
		{
		}

		[Token(Token = "0x60016A3")]
		[Address(RVA = "0x11D80C4", Offset = "0x11D80C4", VA = "0x11D80C4")]
		private void DoAction(SendMessageAction action, Transform actor)
		{
		}

		[Token(Token = "0x60016A4")]
		[Address(RVA = "0x11D8374", Offset = "0x11D8374", VA = "0x11D8374")]
		public SendMessageOnDialogueEvent()
		{
		}
	}
	[Token(Token = "0x200025B")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA08AE4", Offset = "0xA08AE4")]
	public class SetActiveOnDialogueEvent : ActOnDialogueEvent
	{
		[Serializable]
		[Token(Token = "0x2000620")]
		public class SetActiveAction : Action
		{
			[Token(Token = "0x4001E98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform target;

			[Token(Token = "0x4001E99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Toggle state;

			[Token(Token = "0x6002AD1")]
			[Address(RVA = "0x1398788", Offset = "0x1398788", VA = "0x1398788")]
			public SetActiveAction()
			{
			}
		}

		[Token(Token = "0x4000D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SetActiveAction[] onStart;

		[Token(Token = "0x4000D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SetActiveAction[] onEnd;

		[Token(Token = "0x60016A5")]
		[Address(RVA = "0x13983AC", Offset = "0x13983AC", VA = "0x13983AC", Slot = "4")]
		public override void TryStartActions(Transform actor)
		{
		}

		[Token(Token = "0x60016A6")]
		[Address(RVA = "0x139845C", Offset = "0x139845C", VA = "0x139845C", Slot = "5")]
		public override void TryEndActions(Transform actor)
		{
		}

		[Token(Token = "0x60016A7")]
		[Address(RVA = "0x13983BC", Offset = "0x13983BC", VA = "0x13983BC")]
		private void TryActions(SetActiveAction[] actions, Transform actor)
		{
		}

		[Token(Token = "0x60016A8")]
		[Address(RVA = "0x139846C", Offset = "0x139846C", VA = "0x139846C")]
		public void DoAction(SetActiveAction action, Transform actor)
		{
		}

		[Token(Token = "0x60016A9")]
		[Address(RVA = "0x1398718", Offset = "0x1398718", VA = "0x1398718")]
		public SetActiveOnDialogueEvent()
		{
		}
	}
	[Token(Token = "0x200025C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA08B1C", Offset = "0xA08B1C")]
	public class SetAnimationOnDialogueEvent : ActOnDialogueEvent
	{
		[Serializable]
		[Token(Token = "0x2000621")]
		public class SetAnimationAction : Action
		{
			[Token(Token = "0x4001E9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform target;

			[Token(Token = "0x4001E9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AnimationClip animationClip;

			[Token(Token = "0x6002AD2")]
			[Address(RVA = "0x1398C98", Offset = "0x1398C98", VA = "0x1398C98")]
			public SetAnimationAction()
			{
			}
		}

		[Token(Token = "0x4000D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SetAnimationAction[] onStart;

		[Token(Token = "0x4000D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SetAnimationAction[] onEnd;

		[Token(Token = "0x60016AA")]
		[Address(RVA = "0x1398790", Offset = "0x1398790", VA = "0x1398790", Slot = "4")]
		public override void TryStartActions(Transform actor)
		{
		}

		[Token(Token = "0x60016AB")]
		[Address(RVA = "0x1398840", Offset = "0x1398840", VA = "0x1398840", Slot = "5")]
		public override void TryEndActions(Transform actor)
		{
		}

		[Token(Token = "0x60016AC")]
		[Address(RVA = "0x13987A0", Offset = "0x13987A0", VA = "0x13987A0")]
		private void TryActions(SetAnimationAction[] actions, Transform actor)
		{
		}

		[Token(Token = "0x60016AD")]
		[Address(RVA = "0x1398850", Offset = "0x1398850", VA = "0x1398850")]
		public void DoAction(SetAnimationAction action, Transform actor)
		{
		}

		[Token(Token = "0x60016AE")]
		[Address(RVA = "0x1398C28", Offset = "0x1398C28", VA = "0x1398C28")]
		public SetAnimationOnDialogueEvent()
		{
		}
	}
	[Token(Token = "0x200025D")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA08B54", Offset = "0xA08B54")]
	public class SetAnimatorStateOnDialogueEvent : ActOnDialogueEvent
	{
		[Serializable]
		[Token(Token = "0x2000622")]
		public class SetAnimatorStateAction : Action
		{
			[Token(Token = "0x4001E9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform target;

			[Token(Token = "0x4001E9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string stateName;

			[Token(Token = "0x4001E9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float crossFadeDuration;

			[Token(Token = "0x6002AD3")]
			[Address(RVA = "0x1399194", Offset = "0x1399194", VA = "0x1399194")]
			public SetAnimatorStateAction()
			{
			}
		}

		[Token(Token = "0x4000D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SetAnimatorStateAction[] onStart;

		[Token(Token = "0x4000D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SetAnimatorStateAction[] onEnd;

		[Token(Token = "0x60016AF")]
		[Address(RVA = "0x1398CA0", Offset = "0x1398CA0", VA = "0x1398CA0", Slot = "4")]
		public override void TryStartActions(Transform actor)
		{
		}

		[Token(Token = "0x60016B0")]
		[Address(RVA = "0x1398D50", Offset = "0x1398D50", VA = "0x1398D50", Slot = "5")]
		public override void TryEndActions(Transform actor)
		{
		}

		[Token(Token = "0x60016B1")]
		[Address(RVA = "0x1398CB0", Offset = "0x1398CB0", VA = "0x1398CB0")]
		private void TryActions(SetAnimatorStateAction[] actions, Transform actor)
		{
		}

		[Token(Token = "0x60016B2")]
		[Address(RVA = "0x1398D60", Offset = "0x1398D60", VA = "0x1398D60")]
		public void DoAction(SetAnimatorStateAction action, Transform actor)
		{
		}

		[Token(Token = "0x60016B3")]
		[Address(RVA = "0x1399124", Offset = "0x1399124", VA = "0x1399124")]
		public SetAnimatorStateOnDialogueEvent()
		{
		}
	}
	[Token(Token = "0x200025E")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA08B8C", Offset = "0xA08B8C")]
	public class SetComponentEnabledOnDialogueEvent : ActOnDialogueEvent
	{
		[Serializable]
		[Token(Token = "0x2000623")]
		public class SetComponentEnabledAction : Action
		{
			[Token(Token = "0x4001E9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Component target;

			[Token(Token = "0x4001EA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Toggle state;

			[Token(Token = "0x6002AD4")]
			[Address(RVA = "0x13995D0", Offset = "0x13995D0", VA = "0x13995D0")]
			public SetComponentEnabledAction()
			{
			}
		}

		[Token(Token = "0x2000624")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DD08", Offset = "0xA0DD08")]
		private sealed class <TryActionsAfterOneFrameCoroutine>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SetComponentEnabledOnDialogueEvent <>4__this;

			[Token(Token = "0x4001EA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SetComponentEnabledAction[] actions;

			[Token(Token = "0x4001EA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Transform actor;

			[Token(Token = "0x17000569")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002AD8")]
				[Address(RVA = "0x1399560", Offset = "0x1399560", VA = "0x1399560", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700056A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002ADA")]
				[Address(RVA = "0x13995C8", Offset = "0x13995C8", VA = "0x13995C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002AD5")]
			[Address(RVA = "0x1399400", Offset = "0x1399400", VA = "0x1399400")]
			[DebuggerHidden]
			public <TryActionsAfterOneFrameCoroutine>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6002AD6")]
			[Address(RVA = "0x139949C", Offset = "0x139949C", VA = "0x139949C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002AD7")]
			[Address(RVA = "0x13994A0", Offset = "0x13994A0", VA = "0x13994A0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002AD9")]
			[Address(RVA = "0x1399568", Offset = "0x1399568", VA = "0x1399568", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SetComponentEnabledAction[] onStart;

		[Token(Token = "0x4000D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1AC54", Offset = "0xA1AC54")]
		public bool waitOneFrameOnStart;

		[Token(Token = "0x4000D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SetComponentEnabledAction[] onEnd;

		[Token(Token = "0x4000D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1AC8C", Offset = "0xA1AC8C")]
		public bool waitOneFrameOnEnd;

		[Token(Token = "0x60016B4")]
		[Address(RVA = "0x13991A8", Offset = "0x13991A8", VA = "0x13991A8", Slot = "4")]
		public override void TryStartActions(Transform actor)
		{
		}

		[Token(Token = "0x60016B5")]
		[Address(RVA = "0x1399210", Offset = "0x1399210", VA = "0x1399210", Slot = "5")]
		public override void TryEndActions(Transform actor)
		{
		}

		[Token(Token = "0x60016B6")]
		[Address(RVA = "0x13991BC", Offset = "0x13991BC", VA = "0x13991BC")]
		private void TryActions(SetComponentEnabledAction[] actions, Transform actor, bool waitOneFrame)
		{
		}

		[Token(Token = "0x60016B7")]
		[Address(RVA = "0x13992A8", Offset = "0x13992A8", VA = "0x13992A8")]
		private void TryActionsNow(SetComponentEnabledAction[] actions, Transform actor)
		{
		}

		[Token(Token = "0x60016B8")]
		[Address(RVA = "0x1399224", Offset = "0x1399224", VA = "0x1399224")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA2C388", Offset = "0xA2C388")]
		private IEnumerator TryActionsAfterOneFrameCoroutine(SetComponentEnabledAction[] actions, Transform actor)
		{
			return null;
		}

		[Token(Token = "0x60016B9")]
		[Address(RVA = "0x1399344", Offset = "0x1399344", VA = "0x1399344")]
		public void DoAction(SetComponentEnabledAction action, Transform actor)
		{
		}

		[Token(Token = "0x60016BA")]
		[Address(RVA = "0x139942C", Offset = "0x139942C", VA = "0x139942C")]
		public SetComponentEnabledOnDialogueEvent()
		{
		}
	}
	[Token(Token = "0x200025F")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA08BC4", Offset = "0xA08BC4")]
	public class SetEnabledOnDialogueEvent : ActOnDialogueEvent
	{
		[Serializable]
		[Token(Token = "0x2000625")]
		public class SetEnabledAction : Action
		{
			[Token(Token = "0x4001EA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MonoBehaviour target;

			[Token(Token = "0x4001EA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Toggle state;

			[Token(Token = "0x6002ADB")]
			[Address(RVA = "0x1399CC4", Offset = "0x1399CC4", VA = "0x1399CC4")]
			public SetEnabledAction()
			{
			}
		}

		[Token(Token = "0x2000626")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DD18", Offset = "0xA0DD18")]
		private sealed class <TryActionsAfterOneFrameCoroutine>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SetEnabledOnDialogueEvent <>4__this;

			[Token(Token = "0x4001EAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SetEnabledAction[] actions;

			[Token(Token = "0x4001EAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Transform actor;

			[Token(Token = "0x1700056B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002ADF")]
				[Address(RVA = "0x1399C54", Offset = "0x1399C54", VA = "0x1399C54", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700056C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002AE1")]
				[Address(RVA = "0x1399CBC", Offset = "0x1399CBC", VA = "0x1399CBC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002ADC")]
			[Address(RVA = "0x1399A84", Offset = "0x1399A84", VA = "0x1399A84")]
			[DebuggerHidden]
			public <TryActionsAfterOneFrameCoroutine>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6002ADD")]
			[Address(RVA = "0x1399B20", Offset = "0x1399B20", VA = "0x1399B20", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002ADE")]
			[Address(RVA = "0x1399B24", Offset = "0x1399B24", VA = "0x1399B24", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002AE0")]
			[Address(RVA = "0x1399C5C", Offset = "0x1399C5C", VA = "0x1399C5C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SetEnabledAction[] onStart;

		[Token(Token = "0x4000D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1ACC4", Offset = "0xA1ACC4")]
		public bool waitOneFrameOnStart;

		[Token(Token = "0x4000D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SetEnabledAction[] onEnd;

		[Token(Token = "0x4000D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1ACFC", Offset = "0xA1ACFC")]
		public bool waitOneFrameOnEnd;

		[Token(Token = "0x60016BB")]
		[Address(RVA = "0x13995D8", Offset = "0x13995D8", VA = "0x13995D8", Slot = "4")]
		public override void TryStartActions(Transform actor)
		{
		}

		[Token(Token = "0x60016BC")]
		[Address(RVA = "0x1399640", Offset = "0x1399640", VA = "0x1399640", Slot = "5")]
		public override void TryEndActions(Transform actor)
		{
		}

		[Token(Token = "0x60016BD")]
		[Address(RVA = "0x13995EC", Offset = "0x13995EC", VA = "0x13995EC")]
		private void TryActions(SetEnabledAction[] actions, Transform actor, bool waitOneFrame)
		{
		}

		[Token(Token = "0x60016BE")]
		[Address(RVA = "0x13996D8", Offset = "0x13996D8", VA = "0x13996D8")]
		private void TryActionsNow(SetEnabledAction[] actions, Transform actor)
		{
		}

		[Token(Token = "0x60016BF")]
		[Address(RVA = "0x1399654", Offset = "0x1399654", VA = "0x1399654")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA2C3EC", Offset = "0xA2C3EC")]
		private IEnumerator TryActionsAfterOneFrameCoroutine(SetEnabledAction[] actions, Transform actor)
		{
			return null;
		}

		[Token(Token = "0x60016C0")]
		[Address(RVA = "0x139977C", Offset = "0x139977C", VA = "0x139977C")]
		public void DoAction(SetEnabledAction action, Transform actor)
		{
		}

		[Token(Token = "0x60016C1")]
		[Address(RVA = "0x1399AB0", Offset = "0x1399AB0", VA = "0x1399AB0")]
		public SetEnabledOnDialogueEvent()
		{
		}
	}
	[Token(Token = "0x2000260")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA08BFC", Offset = "0xA08BFC")]
	public class SetQuestStateOnDialogueEvent : ActOnDialogueEvent
	{
		[Serializable]
		[Token(Token = "0x2000627")]
		public class SetQuestStateAction : Action
		{
			[Token(Token = "0x4001EAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "QuestPopupAttribute", RVA = "0xA256EC", Offset = "0xA256EC")]
			public string questName;

			[Token(Token = "0x4001EAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[QuestState]
			public QuestState questState;

			[Token(Token = "0x4001EAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string alertMessage;

			[Token(Token = "0x6002AE2")]
			[Address(RVA = "0x139A938", Offset = "0x139A938", VA = "0x139A938")]
			public SetQuestStateAction()
			{
			}
		}

		[Token(Token = "0x4000D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SetQuestStateAction[] onStart;

		[Token(Token = "0x4000D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SetQuestStateAction[] onEnd;

		[Token(Token = "0x60016C2")]
		[Address(RVA = "0x139A708", Offset = "0x139A708", VA = "0x139A708", Slot = "4")]
		public override void TryStartActions(Transform actor)
		{
		}

		[Token(Token = "0x60016C3")]
		[Address(RVA = "0x139A7B0", Offset = "0x139A7B0", VA = "0x139A7B0", Slot = "5")]
		public override void TryEndActions(Transform actor)
		{
		}

		[Token(Token = "0x60016C4")]
		[Address(RVA = "0x139A718", Offset = "0x139A718", VA = "0x139A718")]
		private void TryActions(SetQuestStateAction[] actions, Transform actor)
		{
		}

		[Token(Token = "0x60016C5")]
		[Address(RVA = "0x139A7C0", Offset = "0x139A7C0", VA = "0x139A7C0")]
		public void DoAction(SetQuestStateAction action, Transform actor)
		{
		}

		[Token(Token = "0x60016C6")]
		[Address(RVA = "0x139A8C8", Offset = "0x139A8C8", VA = "0x139A8C8")]
		public SetQuestStateOnDialogueEvent()
		{
		}
	}
	[Token(Token = "0x2000261")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA08C34", Offset = "0xA08C34")]
	public class ShowCursorOnConversation : MonoBehaviour
	{
		[Token(Token = "0x2000628")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DD28", Offset = "0xA0DD28")]
		private sealed class <ShowCursorAfterOneFrame>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x1700056D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002AE6")]
				[Address(RVA = "0x139ABC8", Offset = "0x139ABC8", VA = "0x139ABC8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700056E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002AE8")]
				[Address(RVA = "0x139AC30", Offset = "0x139AC30", VA = "0x139AC30", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002AE3")]
			[Address(RVA = "0x139AB00", Offset = "0x139AB00", VA = "0x139AB00")]
			[DebuggerHidden]
			public <ShowCursorAfterOneFrame>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6002AE4")]
			[Address(RVA = "0x139AB64", Offset = "0x139AB64", VA = "0x139AB64", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002AE5")]
			[Address(RVA = "0x139AB68", Offset = "0x139AB68", VA = "0x139AB68", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002AE7")]
			[Address(RVA = "0x139ABD0", Offset = "0x139ABD0", VA = "0x139ABD0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool wasCursorVisible;

		[Token(Token = "0x4000D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private CursorLockMode savedLockState;

		[Token(Token = "0x60016C7")]
		[Address(RVA = "0x139AA58", Offset = "0x139AA58", VA = "0x139AA58")]
		public void OnConversationStart(Transform actor)
		{
		}

		[Token(Token = "0x60016C8")]
		[Address(RVA = "0x139AAA0", Offset = "0x139AAA0", VA = "0x139AAA0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA2C450", Offset = "0xA2C450")]
		private IEnumerator ShowCursorAfterOneFrame()
		{
			return null;
		}

		[Token(Token = "0x60016C9")]
		[Address(RVA = "0x139AB2C", Offset = "0x139AB2C", VA = "0x139AB2C")]
		public void OnConversationEnd(Transform actor)
		{
		}

		[Token(Token = "0x60016CA")]
		[Address(RVA = "0x139AB5C", Offset = "0x139AB5C", VA = "0x139AB5C")]
		public ShowCursorOnConversation()
		{
		}
	}
	[Token(Token = "0x2000262")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA08C6C", Offset = "0xA08C6C")]
	public class StartConversationOnDialogueEvent : ActOnDialogueEvent
	{
		[Serializable]
		[Token(Token = "0x2000629")]
		public class ConversationAction : Action
		{
			[Token(Token = "0x4001EB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform speaker;

			[Token(Token = "0x4001EB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform listener;

			[Token(Token = "0x4001EB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "ConversationPopupAttribute", RVA = "0xA25710", Offset = "0xA25710")]
			public string conversation;

			[Token(Token = "0x4001EB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool skipIfNoValidEntries;

			[Token(Token = "0x6002AE9")]
			[Address(RVA = "0x12EEF98", Offset = "0x12EEF98", VA = "0x12EEF98")]
			public ConversationAction()
			{
			}
		}

		[Token(Token = "0x4000D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ConversationAction[] onStart;

		[Token(Token = "0x4000D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ConversationAction[] onEnd;

		[Token(Token = "0x60016CB")]
		[Address(RVA = "0x12EEB5C", Offset = "0x12EEB5C", VA = "0x12EEB5C", Slot = "4")]
		public override void TryStartActions(Transform actor)
		{
		}

		[Token(Token = "0x60016CC")]
		[Address(RVA = "0x12EEC10", Offset = "0x12EEC10", VA = "0x12EEC10", Slot = "5")]
		public override void TryEndActions(Transform actor)
		{
		}

		[Token(Token = "0x60016CD")]
		[Address(RVA = "0x12EEB6C", Offset = "0x12EEB6C", VA = "0x12EEB6C")]
		private void TryActions(ConversationAction[] actions, Transform actor)
		{
		}

		[Token(Token = "0x60016CE")]
		[Address(RVA = "0x12EEC20", Offset = "0x12EEC20", VA = "0x12EEC20")]
		public void DoAction(ConversationAction action, Transform actor)
		{
		}

		[Token(Token = "0x60016CF")]
		[Address(RVA = "0x12EEF28", Offset = "0x12EEF28", VA = "0x12EEF28")]
		public StartConversationOnDialogueEvent()
		{
		}
	}
	[Token(Token = "0x2000263")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA08CA4", Offset = "0xA08CA4")]
	public class StartSequenceOnDialogueEvent : ActOnDialogueEvent
	{
		[Serializable]
		[Token(Token = "0x200062A")]
		public class SequenceAction : Action
		{
			[Token(Token = "0x4001EB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform actor;

			[Token(Token = "0x4001EB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform otherParticipant;

			[Token(Token = "0x4001EB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[Multiline]
			public string sequence;

			[Token(Token = "0x6002AEA")]
			[Address(RVA = "0x12EF2B4", Offset = "0x12EF2B4", VA = "0x12EF2B4")]
			public SequenceAction()
			{
			}
		}

		[Token(Token = "0x4000D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SequenceAction[] onStart;

		[Token(Token = "0x4000D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SequenceAction[] onEnd;

		[Token(Token = "0x60016D0")]
		[Address(RVA = "0x12EEFA0", Offset = "0x12EEFA0", VA = "0x12EEFA0", Slot = "4")]
		public override void TryStartActions(Transform actor)
		{
		}

		[Token(Token = "0x60016D1")]
		[Address(RVA = "0x12EF054", Offset = "0x12EF054", VA = "0x12EF054", Slot = "5")]
		public override void TryEndActions(Transform actor)
		{
		}

		[Token(Token = "0x60016D2")]
		[Address(RVA = "0x12EEFB0", Offset = "0x12EEFB0", VA = "0x12EEFB0")]
		private void TryActions(SequenceAction[] actions, Transform actor)
		{
		}

		[Token(Token = "0x60016D3")]
		[Address(RVA = "0x12EF064", Offset = "0x12EF064", VA = "0x12EF064")]
		public void DoAction(SequenceAction action, Transform actor)
		{
		}

		[Token(Token = "0x60016D4")]
		[Address(RVA = "0x12EF244", Offset = "0x12EF244", VA = "0x12EF244")]
		public StartSequenceOnDialogueEvent()
		{
		}
	}
	[Token(Token = "0x2000264")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA08CDC", Offset = "0xA08CDC")]
	public class StopConversationIfTooFar : MonoBehaviour
	{
		[Token(Token = "0x200062B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DD38", Offset = "0xA0DD38")]
		private sealed class <MonitorDistance>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform actor;

			[Token(Token = "0x4001EBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public StopConversationIfTooFar <>4__this;

			[Token(Token = "0x4001EBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Transform <myTransform>5__2;

			[Token(Token = "0x1700056F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002AEE")]
				[Address(RVA = "0x12EF748", Offset = "0x12EF748", VA = "0x12EF748", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000570")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002AF0")]
				[Address(RVA = "0x12EF7B0", Offset = "0x12EF7B0", VA = "0x12EF7B0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002AEB")]
			[Address(RVA = "0x12EF388", Offset = "0x12EF388", VA = "0x12EF388")]
			[DebuggerHidden]
			public <MonitorDistance>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6002AEC")]
			[Address(RVA = "0x12EF3C8", Offset = "0x12EF3C8", VA = "0x12EF3C8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002AED")]
			[Address(RVA = "0x12EF3CC", Offset = "0x12EF3CC", VA = "0x12EF3CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002AEF")]
			[Address(RVA = "0x12EF750", Offset = "0x12EF750", VA = "0x12EF750", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float maxDistance;

		[Token(Token = "0x4000D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float monitorFrequency;

		[Token(Token = "0x60016D5")]
		[Address(RVA = "0x12EF2BC", Offset = "0x12EF2BC", VA = "0x12EF2BC")]
		private void OnConversationStart(Transform actor)
		{
		}

		[Token(Token = "0x60016D6")]
		[Address(RVA = "0x12EF378", Offset = "0x12EF378", VA = "0x12EF378")]
		private void OnConversationEnd(Transform actor)
		{
		}

		[Token(Token = "0x60016D7")]
		[Address(RVA = "0x12EF380", Offset = "0x12EF380", VA = "0x12EF380")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60016D8")]
		[Address(RVA = "0x12EF2FC", Offset = "0x12EF2FC", VA = "0x12EF2FC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA2C4B4", Offset = "0xA2C4B4")]
		private IEnumerator MonitorDistance(Transform actor)
		{
			return null;
		}

		[Token(Token = "0x60016D9")]
		[Address(RVA = "0x12EF3B4", Offset = "0x12EF3B4", VA = "0x12EF3B4")]
		public StopConversationIfTooFar()
		{
		}
	}
	[Token(Token = "0x2000265")]
	public abstract class AbstractBarkUI : MonoBehaviour, IBarkUI
	{
		[Token(Token = "0x17000295")]
		public abstract bool isPlaying
		{
			[Token(Token = "0x60016DA")]
			get;
		}

		[Token(Token = "0x60016DB")]
		public abstract void Bark(Subtitle subtitle);

		[Token(Token = "0x60016DC")]
		public abstract void Hide();

		[Token(Token = "0x60016DD")]
		[Address(RVA = "0x1424C80", Offset = "0x1424C80", VA = "0x1424C80")]
		protected AbstractBarkUI()
		{
		}
	}
	[Token(Token = "0x2000266")]
	public abstract class AbstractDialogueUI : MonoBehaviour, IDialogueUI
	{
		[Token(Token = "0x4000D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1AD44", Offset = "0xA1AD44")]
		private bool <isOpen>k__BackingField;

		[Token(Token = "0x4000D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool m_hasOpenedBefore;

		[Token(Token = "0x17000296")]
		public abstract AbstractUIRoot uiRootControls
		{
			[Token(Token = "0x60016DE")]
			get;
		}

		[Token(Token = "0x17000297")]
		public abstract AbstractDialogueUIControls dialogueControls
		{
			[Token(Token = "0x60016DF")]
			get;
		}

		[Token(Token = "0x17000298")]
		public abstract AbstractUIQTEControls qteControls
		{
			[Token(Token = "0x60016E0")]
			get;
		}

		[Token(Token = "0x17000299")]
		public abstract AbstractUIAlertControls alertControls
		{
			[Token(Token = "0x60016E1")]
			get;
		}

		[Token(Token = "0x1700029A")]
		public bool isOpen
		{
			[Token(Token = "0x60016E4")]
			[Address(RVA = "0x1424DD0", Offset = "0x1424DD0", VA = "0x1424DD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2C538", Offset = "0xA2C538")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60016E5")]
			[Address(RVA = "0x1424DD8", Offset = "0x1424DD8", VA = "0x1424DD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2C548", Offset = "0xA2C548")]
			set
			{
			}
		}

		[Token(Token = "0x1700029B")]
		public bool IsOpen
		{
			[Token(Token = "0x60016E6")]
			[Address(RVA = "0x1424DE4", Offset = "0x1424DE4", VA = "0x1424DE4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60016E7")]
			[Address(RVA = "0x1424DEC", Offset = "0x1424DEC", VA = "0x1424DEC")]
			set
			{
			}
		}

		[Token(Token = "0x1700029C")]
		protected virtual bool AreNonDialogueControlsVisible
		{
			[Token(Token = "0x60016EC")]
			[Address(RVA = "0x14250E4", Offset = "0x14250E4", VA = "0x14250E4", Slot = "24")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000018")]
		public event EventHandler<SelectedResponseEventArgs> SelectedResponseHandler
		{
			[Token(Token = "0x60016E2")]
			[Address(RVA = "0x1424C88", Offset = "0x1424C88", VA = "0x1424C88", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2C518", Offset = "0xA2C518")]
			add
			{
			}
			[Token(Token = "0x60016E3")]
			[Address(RVA = "0x1424D2C", Offset = "0x1424D2C", VA = "0x1424D2C", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2C528", Offset = "0xA2C528")]
			remove
			{
			}
		}

		[Token(Token = "0x60016E8")]
		[Address(RVA = "0x1424DF8", Offset = "0x1424DF8", VA = "0x1424DF8", Slot = "20")]
		public virtual void Awake()
		{
		}

		[Token(Token = "0x60016E9")]
		[Address(RVA = "0x1424E04", Offset = "0x1424E04", VA = "0x1424E04", Slot = "21")]
		public virtual void Start()
		{
		}

		[Token(Token = "0x60016EA")]
		[Address(RVA = "0x1424FEC", Offset = "0x1424FEC", VA = "0x1424FEC", Slot = "22")]
		public virtual void Open()
		{
		}

		[Token(Token = "0x60016EB")]
		[Address(RVA = "0x1425060", Offset = "0x1425060", VA = "0x1425060", Slot = "23")]
		public virtual void Close()
		{
		}

		[Token(Token = "0x60016ED")]
		[Address(RVA = "0x1425158", Offset = "0x1425158", VA = "0x1425158", Slot = "25")]
		public virtual void ShowAlert(string message, float duration)
		{
		}

		[Token(Token = "0x60016EE")]
		[Address(RVA = "0x142520C", Offset = "0x142520C", VA = "0x142520C", Slot = "26")]
		public virtual void HideAlert()
		{
		}

		[Token(Token = "0x60016EF")]
		[Address(RVA = "0x14252D4", Offset = "0x14252D4", VA = "0x14252D4", Slot = "27")]
		public virtual void Update()
		{
		}

		[Token(Token = "0x60016F0")]
		[Address(RVA = "0x142537C", Offset = "0x142537C", VA = "0x142537C", Slot = "28")]
		public virtual void ShowSubtitle(Subtitle subtitle)
		{
		}

		[Token(Token = "0x60016F1")]
		[Address(RVA = "0x1425390", Offset = "0x1425390", VA = "0x1425390", Slot = "29")]
		public virtual void HideSubtitle(Subtitle subtitle)
		{
		}

		[Token(Token = "0x60016F2")]
		[Address(RVA = "0x14253A4", Offset = "0x14253A4", VA = "0x14253A4", Slot = "30")]
		public virtual void ShowContinueButton(Subtitle subtitle)
		{
		}

		[Token(Token = "0x60016F3")]
		[Address(RVA = "0x1425434", Offset = "0x1425434", VA = "0x1425434", Slot = "31")]
		public virtual void HideContinueButton(Subtitle subtitle)
		{
		}

		[Token(Token = "0x60016F4")]
		[Address(RVA = "0x142545C", Offset = "0x142545C", VA = "0x142545C", Slot = "32")]
		protected virtual void SetSubtitle(Subtitle subtitle, bool value)
		{
		}

		[Token(Token = "0x60016F5")]
		[Address(RVA = "0x14253CC", Offset = "0x14253CC", VA = "0x14253CC")]
		private AbstractUISubtitleControls GetSubtitleControls(Subtitle subtitle)
		{
			return null;
		}

		[Token(Token = "0x60016F6")]
		[Address(RVA = "0x14254B4", Offset = "0x14254B4", VA = "0x14254B4", Slot = "33")]
		public virtual void ShowResponses(Subtitle subtitle, Response[] responses, float timeout)
		{
		}

		[Token(Token = "0x60016F7")]
		[Address(RVA = "0x1425800", Offset = "0x1425800", VA = "0x1425800", Slot = "34")]
		public virtual void HideResponses()
		{
		}

		[Token(Token = "0x60016F8")]
		[Address(RVA = "0x1425844", Offset = "0x1425844", VA = "0x1425844", Slot = "35")]
		public virtual void ShowQTEIndicator(int index)
		{
		}

		[Token(Token = "0x60016F9")]
		[Address(RVA = "0x1425888", Offset = "0x1425888", VA = "0x1425888", Slot = "36")]
		public virtual void HideQTEIndicator(int index)
		{
		}

		[Token(Token = "0x60016FA")]
		[Address(RVA = "0x14258CC", Offset = "0x14258CC", VA = "0x14258CC", Slot = "37")]
		public virtual void OnClick(object data)
		{
		}

		[Token(Token = "0x60016FB")]
		[Address(RVA = "0x14259A8", Offset = "0x14259A8", VA = "0x14259A8", Slot = "38")]
		public virtual void OnContinue()
		{
		}

		[Token(Token = "0x60016FC")]
		[Address(RVA = "0x14259E4", Offset = "0x14259E4", VA = "0x14259E4", Slot = "39")]
		public virtual void OnContinueAlert()
		{
		}

		[Token(Token = "0x60016FD")]
		[Address(RVA = "0x1425A44", Offset = "0x1425A44", VA = "0x1425A44", Slot = "40")]
		public virtual void OnContinueConversation()
		{
		}

		[Token(Token = "0x60016FE")]
		[Address(RVA = "0x1425AE0", Offset = "0x1425AE0", VA = "0x1425AE0", Slot = "41")]
		public virtual void SetPCPortrait(Sprite portraitSprite, string portraitName)
		{
		}

		[Token(Token = "0x60016FF")]
		[Address(RVA = "0x1425B3C", Offset = "0x1425B3C", VA = "0x1425B3C", Slot = "42")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xA2C558", Offset = "0xA2C558")]
		public virtual void SetPCPortrait(Texture2D portraitTexture, string portraitName)
		{
		}

		[Token(Token = "0x6001700")]
		[Address(RVA = "0x1425C00", Offset = "0x1425C00", VA = "0x1425C00", Slot = "43")]
		public virtual void SetActorPortraitSprite(string actorName, Sprite portraitSprite)
		{
		}

		[Token(Token = "0x6001701")]
		[Address(RVA = "0x1425CE0", Offset = "0x1425CE0", VA = "0x1425CE0")]
		public static Sprite GetValidPortraitSprite(string actorName, Sprite portraitSprite)
		{
			return null;
		}

		[Token(Token = "0x6001702")]
		[Address(RVA = "0x1426080", Offset = "0x1426080", VA = "0x1426080")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xA2C590", Offset = "0xA2C590")]
		public static Texture2D GetValidPortraitTexture(string actorName, Texture2D portraitTexture)
		{
			return null;
		}

		[Token(Token = "0x6001703")]
		[Address(RVA = "0x1426150", Offset = "0x1426150", VA = "0x1426150")]
		protected AbstractDialogueUI()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000267")]
	public abstract class AbstractDialogueUIControls : AbstractUIControls
	{
		[Token(Token = "0x1700029D")]
		public abstract AbstractUISubtitleControls npcSubtitleControls
		{
			[Token(Token = "0x6001704")]
			get;
		}

		[Token(Token = "0x1700029E")]
		public abstract AbstractUISubtitleControls pcSubtitleControls
		{
			[Token(Token = "0x6001705")]
			get;
		}

		[Token(Token = "0x1700029F")]
		public abstract AbstractUIResponseMenuControls responseMenuControls
		{
			[Token(Token = "0x6001706")]
			get;
		}

		[Token(Token = "0x6001707")]
		public abstract void ShowPanel();

		[Token(Token = "0x6001708")]
		[Address(RVA = "0x1426158", Offset = "0x1426158", VA = "0x1426158", Slot = "4")]
		public override void SetActive(bool value)
		{
		}

		[Token(Token = "0x6001709")]
		[Address(RVA = "0x14261F0", Offset = "0x14261F0", VA = "0x14261F0")]
		protected AbstractDialogueUIControls()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000268")]
	public abstract class AbstractUIAlertControls : AbstractUIControls
	{
		[Token(Token = "0x4000D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected float m_alertDoneTime;

		[Token(Token = "0x170002A0")]
		public abstract bool isVisible
		{
			[Token(Token = "0x600170A")]
			get;
		}

		[Token(Token = "0x170002A1")]
		public virtual bool isDone
		{
			[Token(Token = "0x600170C")]
			[Address(RVA = "0x1426AFC", Offset = "0x1426AFC", VA = "0x1426AFC", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002A2")]
		public bool IsVisible
		{
			[Token(Token = "0x600170D")]
			[Address(RVA = "0x1426B70", Offset = "0x1426B70", VA = "0x1426B70")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002A3")]
		public bool IsDone
		{
			[Token(Token = "0x600170E")]
			[Address(RVA = "0x1425370", Offset = "0x1425370", VA = "0x1425370")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600170B")]
		public abstract void SetMessage(string message, float duration);

		[Token(Token = "0x600170F")]
		[Address(RVA = "0x1426B7C", Offset = "0x1426B7C", VA = "0x1426B7C", Slot = "8")]
		public virtual void ShowMessage(string message, float duration)
		{
		}

		[Token(Token = "0x6001710")]
		[Address(RVA = "0x1426C78", Offset = "0x1426C78", VA = "0x1426C78")]
		protected AbstractUIAlertControls()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000269")]
	public abstract class AbstractUIControls
	{
		[Token(Token = "0x6001711")]
		public abstract void SetActive(bool value);

		[Token(Token = "0x6001712")]
		[Address(RVA = "0x1426C68", Offset = "0x1426C68", VA = "0x1426C68")]
		public void Show()
		{
		}

		[Token(Token = "0x6001713")]
		[Address(RVA = "0x1424FDC", Offset = "0x1424FDC", VA = "0x1424FDC")]
		public void Hide()
		{
		}

		[Token(Token = "0x6001714")]
		[Address(RVA = "0x14261F8", Offset = "0x14261F8", VA = "0x14261F8")]
		protected AbstractUIControls()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200026A")]
	public abstract class AbstractUIQTEControls : AbstractUIControls
	{
		[Token(Token = "0x170002A4")]
		public abstract bool areVisible
		{
			[Token(Token = "0x6001715")]
			get;
		}

		[Token(Token = "0x6001716")]
		public abstract void ShowIndicator(int index);

		[Token(Token = "0x6001717")]
		public abstract void HideIndicator(int index);

		[Token(Token = "0x6001718")]
		[Address(RVA = "0x1426C80", Offset = "0x1426C80", VA = "0x1426C80")]
		protected AbstractUIQTEControls()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200026B")]
	public abstract class AbstractUIResponseMenuControls : AbstractUIControls
	{
		[Token(Token = "0x4000D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ResponseButtonAlignment buttonAlignment;

		[Token(Token = "0x4000D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool showUnusedButtons;

		[Token(Token = "0x170002A5")]
		public abstract AbstractUISubtitleControls subtitleReminderControls
		{
			[Token(Token = "0x6001719")]
			get;
		}

		[Token(Token = "0x600171A")]
		protected abstract void ClearResponseButtons();

		[Token(Token = "0x600171B")]
		protected abstract void SetResponseButtons(Response[] responses, Transform target);

		[Token(Token = "0x600171C")]
		public abstract void StartTimer(float timeout);

		[Token(Token = "0x600171D")]
		[Address(RVA = "0x1426C88", Offset = "0x1426C88", VA = "0x1426C88", Slot = "9")]
		public virtual void ShowResponses(Subtitle subtitle, Response[] responses, Transform target)
		{
		}

		[Token(Token = "0x600171E")]
		[Address(RVA = "0x1426D34", Offset = "0x1426D34", VA = "0x1426D34", Slot = "10")]
		public virtual void SetPCPortrait(Sprite sprite, string portraitName)
		{
		}

		[Token(Token = "0x600171F")]
		[Address(RVA = "0x1426D38", Offset = "0x1426D38", VA = "0x1426D38", Slot = "11")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xA2C5C8", Offset = "0xA2C5C8")]
		public virtual void SetPCPortrait(Texture2D texture, string portraitName)
		{
		}

		[Token(Token = "0x6001720")]
		[Address(RVA = "0x1426D3C", Offset = "0x1426D3C", VA = "0x1426D3C", Slot = "12")]
		public virtual void SetActorPortraitSprite(string actorName, Sprite sprite)
		{
		}

		[Token(Token = "0x6001721")]
		[Address(RVA = "0x1426D40", Offset = "0x1426D40", VA = "0x1426D40", Slot = "13")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xA2C600", Offset = "0xA2C600")]
		public virtual void SetActorPortraitTexture(string actorName, Texture2D texture)
		{
		}

		[Token(Token = "0x6001722")]
		[Address(RVA = "0x1426D44", Offset = "0x1426D44", VA = "0x1426D44")]
		protected AbstractUIResponseMenuControls()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200026C")]
	public abstract class AbstractUIRoot
	{
		[Token(Token = "0x6001723")]
		public abstract void Show();

		[Token(Token = "0x6001724")]
		public abstract void Hide();

		[Token(Token = "0x6001725")]
		[Address(RVA = "0x1426D4C", Offset = "0x1426D4C", VA = "0x1426D4C")]
		protected AbstractUIRoot()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200026D")]
	public abstract class AbstractUISubtitleControls : AbstractUIControls
	{
		[Token(Token = "0x4000D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected Subtitle currentSubtitle;

		[Token(Token = "0x170002A6")]
		public abstract bool hasText
		{
			[Token(Token = "0x6001726")]
			get;
		}

		[Token(Token = "0x170002A7")]
		public bool HasText
		{
			[Token(Token = "0x6001727")]
			[Address(RVA = "0x1426D54", Offset = "0x1426D54", VA = "0x1426D54")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001728")]
		public abstract void SetSubtitle(Subtitle subtitle);

		[Token(Token = "0x6001729")]
		public abstract void ClearSubtitle();

		[Token(Token = "0x600172A")]
		[Address(RVA = "0x1426D60", Offset = "0x1426D60", VA = "0x1426D60", Slot = "8")]
		public virtual void ShowContinueButton()
		{
		}

		[Token(Token = "0x600172B")]
		[Address(RVA = "0x1426D64", Offset = "0x1426D64", VA = "0x1426D64", Slot = "9")]
		public virtual void HideContinueButton()
		{
		}

		[Token(Token = "0x600172C")]
		[Address(RVA = "0x1426D68", Offset = "0x1426D68", VA = "0x1426D68", Slot = "10")]
		public virtual void ShowSubtitle(Subtitle subtitle)
		{
		}

		[Token(Token = "0x600172D")]
		[Address(RVA = "0x1426DF4", Offset = "0x1426DF4", VA = "0x1426DF4", Slot = "11")]
		public virtual void SetActorPortraitSprite(string actorName, Sprite sprite)
		{
		}

		[Token(Token = "0x600172E")]
		[Address(RVA = "0x1426DF8", Offset = "0x1426DF8", VA = "0x1426DF8", Slot = "12")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xA2C638", Offset = "0xA2C638")]
		public virtual void SetActorPortraitTexture(string actorName, Texture2D texture)
		{
		}

		[Token(Token = "0x600172F")]
		[Address(RVA = "0x1426DFC", Offset = "0x1426DFC", VA = "0x1426DFC")]
		protected AbstractUISubtitleControls()
		{
		}
	}
	[Token(Token = "0x200026E")]
	public abstract class CanvasDialogueUI : AbstractDialogueUI
	{
		[Token(Token = "0x6001730")]
		[Address(RVA = "0x1433598", Offset = "0x1433598", VA = "0x1433598")]
		protected CanvasDialogueUI()
		{
		}
	}
	[Token(Token = "0x200026F")]
	public abstract class AbstractUsableUI : MonoBehaviour
	{
		[Token(Token = "0x6001731")]
		public abstract void Show(string useMessage);

		[Token(Token = "0x6001732")]
		public abstract void Hide();

		[Token(Token = "0x6001733")]
		public abstract void UpdateDisplay(bool inRange);

		[Token(Token = "0x6001734")]
		[Address(RVA = "0x1426E04", Offset = "0x1426E04", VA = "0x1426E04")]
		protected AbstractUsableUI()
		{
		}
	}
	[Token(Token = "0x2000270")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA08D14", Offset = "0xA08D14")]
	public class QuestTracker : MonoBehaviour
	{
		[Token(Token = "0x200062C")]
		public enum QuestDescriptionSource
		{
			[Token(Token = "0x4001EBF")]
			Title,
			[Token(Token = "0x4001EC0")]
			Description
		}

		[Token(Token = "0x200062D")]
		private class QuestTrackerLine
		{
			[Token(Token = "0x4001EC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string guiStyleName;

			[Token(Token = "0x4001EC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GUIStyle guiStyle;

			[Token(Token = "0x4001EC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string text;

			[Token(Token = "0x6002AF1")]
			[Address(RVA = "0x11D23BC", Offset = "0x11D23BC", VA = "0x11D23BC")]
			public QuestTrackerLine()
			{
			}
		}

		[Token(Token = "0x200062E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DD48", Offset = "0xA0DD48")]
		private sealed class <UpdateTrackerAfterOneFrame>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public QuestTracker <>4__this;

			[Token(Token = "0x17000571")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002AF5")]
				[Address(RVA = "0x11D2A24", Offset = "0x11D2A24", VA = "0x11D2A24", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000572")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002AF7")]
				[Address(RVA = "0x11D2A8C", Offset = "0x11D2A8C", VA = "0x11D2A8C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002AF2")]
			[Address(RVA = "0x11D1E24", Offset = "0x11D1E24", VA = "0x11D1E24")]
			[DebuggerHidden]
			public <UpdateTrackerAfterOneFrame>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x6002AF3")]
			[Address(RVA = "0x11D29CC", Offset = "0x11D29CC", VA = "0x11D29CC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002AF4")]
			[Address(RVA = "0x11D29D0", Offset = "0x11D29D0", VA = "0x11D29D0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002AF6")]
			[Address(RVA = "0x11D2A2C", Offset = "0x11D2A2C", VA = "0x11D2A2C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1AD54", Offset = "0xA1AD54")]
		public string playerPrefsToggleKey;

		[Token(Token = "0x4000D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScaledRect rect;

		[Token(Token = "0x4000D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GUISkin guiSkin;

		[Token(Token = "0x4000D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string TitleStyle;

		[Token(Token = "0x4000D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string SuccessTitleStyle;

		[Token(Token = "0x4000D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string FailureTitleStyle;

		[Token(Token = "0x4000D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string ActiveEntryStyle;

		[Token(Token = "0x4000D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string SuccessEntryStyle;

		[Token(Token = "0x4000D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string FailureEntryStyle;

		[Token(Token = "0x4000D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool showActiveQuests;

		[Token(Token = "0x4000D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		public bool showCompletedQuests;

		[Token(Token = "0x4000D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		public bool showCompletedEntryText;

		[Token(Token = "0x4000D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public QuestDescriptionSource questDescriptionSource;

		[Token(Token = "0x4000D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Rect screenRect;

		[Token(Token = "0x4000D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<QuestTrackerLine> lines;

		[Token(Token = "0x4000D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool isVisible;

		[Token(Token = "0x6001735")]
		[Address(RVA = "0x11D1D68", Offset = "0x11D1D68", VA = "0x11D1D68")]
		public void Start()
		{
		}

		[Token(Token = "0x6001736")]
		[Address(RVA = "0x11D1DB4", Offset = "0x11D1DB4", VA = "0x11D1DB4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA2C670", Offset = "0xA2C670")]
		private IEnumerator UpdateTrackerAfterOneFrame()
		{
			return null;
		}

		[Token(Token = "0x6001737")]
		[Address(RVA = "0x11D1E50", Offset = "0x11D1E50", VA = "0x11D1E50")]
		public void ShowTracker()
		{
		}

		[Token(Token = "0x6001738")]
		[Address(RVA = "0x11D1E6C", Offset = "0x11D1E6C", VA = "0x11D1E6C")]
		public void HideTracker()
		{
		}

		[Token(Token = "0x6001739")]
		[Address(RVA = "0x11D1E84", Offset = "0x11D1E84", VA = "0x11D1E84")]
		public void ToggleTracker()
		{
		}

		[Token(Token = "0x600173A")]
		[Address(RVA = "0x11D1EC0", Offset = "0x11D1EC0", VA = "0x11D1EC0")]
		public void OnQuestTrackingEnabled(string quest)
		{
		}

		[Token(Token = "0x600173B")]
		[Address(RVA = "0x11D2014", Offset = "0x11D2014", VA = "0x11D2014")]
		public void OnQuestTrackingDisabled(string quest)
		{
		}

		[Token(Token = "0x600173C")]
		[Address(RVA = "0x11D2018", Offset = "0x11D2018", VA = "0x11D2018")]
		public void OnConversationEnd(Transform actor)
		{
		}

		[Token(Token = "0x600173D")]
		[Address(RVA = "0x11D1EC4", Offset = "0x11D1EC4", VA = "0x11D1EC4")]
		public void UpdateTracker()
		{
		}

		[Token(Token = "0x600173E")]
		[Address(RVA = "0x11D201C", Offset = "0x11D201C", VA = "0x11D201C")]
		private void AddQuestTitle(string quest)
		{
		}

		[Token(Token = "0x600173F")]
		[Address(RVA = "0x11D21BC", Offset = "0x11D21BC", VA = "0x11D21BC")]
		private void AddQuestEntries(string quest)
		{
		}

		[Token(Token = "0x6001740")]
		[Address(RVA = "0x11D23F4", Offset = "0x11D23F4", VA = "0x11D23F4")]
		private string GetQuestEntryText(string quest, int entryNum, QuestState entryState)
		{
			return null;
		}

		[Token(Token = "0x6001741")]
		[Address(RVA = "0x11D23C4", Offset = "0x11D23C4", VA = "0x11D23C4")]
		private string GetTitleStyleName(QuestState state)
		{
			return null;
		}

		[Token(Token = "0x6001742")]
		[Address(RVA = "0x11D25A4", Offset = "0x11D25A4", VA = "0x11D25A4")]
		private string GetEntryStyleName(QuestState entryState)
		{
			return null;
		}

		[Token(Token = "0x6001743")]
		[Address(RVA = "0x11D25D4", Offset = "0x11D25D4", VA = "0x11D25D4")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001744")]
		[Address(RVA = "0x11D2884", Offset = "0x11D2884", VA = "0x11D2884")]
		public QuestTracker()
		{
		}
	}
	[Token(Token = "0x2000271")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA08D4C", Offset = "0xA08D4C")]
	public class StandardBarkUI : AbstractBarkUI
	{
		[Serializable]
		[Token(Token = "0x200062F")]
		public class AnimationTransitions
		{
			[Token(Token = "0x4001EC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string showTrigger;

			[Token(Token = "0x4001EC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string hideTrigger;

			[Token(Token = "0x6002AF8")]
			[Address(RVA = "0x139BA58", Offset = "0x139BA58", VA = "0x139BA58")]
			public AnimationTransitions()
			{
			}
		}

		[Token(Token = "0x4000D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1AD8C", Offset = "0xA1AD8C")]
		public CanvasGroup canvasGroup;

		[Token(Token = "0x4000D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1ADC4", Offset = "0xA1ADC4")]
		public UITextField barkText;

		[Token(Token = "0x4000D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1ADFC", Offset = "0xA1ADFC")]
		public UITextField nameText;

		[Token(Token = "0x4000D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1AE34", Offset = "0xA1AE34")]
		public bool includeName;

		[Token(Token = "0x4000D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1AE6C", Offset = "0xA1AE6C")]
		public Image portraitImage;

		[Token(Token = "0x4000D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1AEA4", Offset = "0xA1AEA4")]
		public bool showPortraitImage;

		[Token(Token = "0x4000D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[HideInInspector]
		public float doneTime;

		[Token(Token = "0x4000D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AnimationTransitions animationTransitions;

		[Token(Token = "0x4000DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1AEEC", Offset = "0xA1AEEC")]
		public float duration;

		[Token(Token = "0x4000DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1AF24", Offset = "0xA1AF24")]
		public bool keepInView;

		[Token(Token = "0x4000DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1AF5C", Offset = "0xA1AF5C")]
		public bool waitUntilSequenceEnds;

		[Token(Token = "0x4000DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1AF94", Offset = "0xA1AF94")]
		public bool waitForContinueButton;

		[Token(Token = "0x4000DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public BarkSubtitleSetting textDisplaySetting;

		[Token(Token = "0x4000DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1AFCC", Offset = "0xA1AFCC")]
		private Canvas <canvas>k__BackingField;

		[Token(Token = "0x4000DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1AFDC", Offset = "0xA1AFDC")]
		private Animator <animator>k__BackingField;

		[Token(Token = "0x4000DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1AFEC", Offset = "0xA1AFEC")]
		private Vector3 <originalCanvasLocalPosition>k__BackingField;

		[Token(Token = "0x4000DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		protected int numSequencesActive;

		[Token(Token = "0x170002A8")]
		protected Canvas canvas
		{
			[Token(Token = "0x6001745")]
			[Address(RVA = "0x139AC38", Offset = "0x139AC38", VA = "0x139AC38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2C6D4", Offset = "0xA2C6D4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001746")]
			[Address(RVA = "0x139AC40", Offset = "0x139AC40", VA = "0x139AC40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2C6E4", Offset = "0xA2C6E4")]
			set
			{
			}
		}

		[Token(Token = "0x170002A9")]
		protected Animator animator
		{
			[Token(Token = "0x6001747")]
			[Address(RVA = "0x139AC48", Offset = "0x139AC48", VA = "0x139AC48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2C6F4", Offset = "0xA2C6F4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001748")]
			[Address(RVA = "0x139AC50", Offset = "0x139AC50", VA = "0x139AC50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2C704", Offset = "0xA2C704")]
			set
			{
			}
		}

		[Token(Token = "0x170002AA")]
		protected Vector3 originalCanvasLocalPosition
		{
			[Token(Token = "0x6001749")]
			[Address(RVA = "0x139AC58", Offset = "0x139AC58", VA = "0x139AC58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2C714", Offset = "0xA2C714")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600174A")]
			[Address(RVA = "0x139AC64", Offset = "0x139AC64", VA = "0x139AC64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2C724", Offset = "0xA2C724")]
			set
			{
			}
		}

		[Token(Token = "0x170002AB")]
		public override bool isPlaying
		{
			[Token(Token = "0x600174B")]
			[Address(RVA = "0x139AC70", Offset = "0x139AC70", VA = "0x139AC70", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600174C")]
		[Address(RVA = "0x139AD3C", Offset = "0x139AD3C", VA = "0x139AD3C", Slot = "10")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600174D")]
		[Address(RVA = "0x139AE34", Offset = "0x139AE34", VA = "0x139AE34", Slot = "11")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x600174E")]
		[Address(RVA = "0x139AFA8", Offset = "0x139AFA8", VA = "0x139AFA8")]
		protected void Update()
		{
		}

		[Token(Token = "0x600174F")]
		[Address(RVA = "0x139B0F4", Offset = "0x139B0F4", VA = "0x139B0F4", Slot = "12")]
		public virtual bool ShouldShowText(Subtitle subtitle)
		{
			return default(bool);
		}

		[Token(Token = "0x6001750")]
		[Address(RVA = "0x139B1C0", Offset = "0x139B1C0", VA = "0x139B1C0", Slot = "8")]
		public override void Bark(Subtitle subtitle)
		{
		}

		[Token(Token = "0x6001751")]
		[Address(RVA = "0x139B55C", Offset = "0x139B55C", VA = "0x139B55C", Slot = "13")]
		protected virtual void SetUIElementsActive(bool value)
		{
		}

		[Token(Token = "0x6001752")]
		[Address(RVA = "0x139B790", Offset = "0x139B790", VA = "0x139B790", Slot = "14")]
		public virtual void OnBarkEnd(Transform actor)
		{
		}

		[Token(Token = "0x6001753")]
		[Address(RVA = "0x139B7C4", Offset = "0x139B7C4", VA = "0x139B7C4", Slot = "15")]
		public virtual void OnContinue()
		{
		}

		[Token(Token = "0x6001754")]
		[Address(RVA = "0x139B7D0", Offset = "0x139B7D0", VA = "0x139B7D0", Slot = "9")]
		public override void Hide()
		{
		}

		[Token(Token = "0x6001755")]
		[Address(RVA = "0x139B960", Offset = "0x139B960", VA = "0x139B960", Slot = "16")]
		protected virtual bool CanTriggerAnimations()
		{
			return default(bool);
		}

		[Token(Token = "0x6001756")]
		[Address(RVA = "0x139B9EC", Offset = "0x139B9EC", VA = "0x139B9EC")]
		public StandardBarkUI()
		{
		}
	}
	[Token(Token = "0x2000272")]
	public interface IStandardDialogueUI
	{
		[Token(Token = "0x6001757")]
		void SetActorSubtitlePanelNumber(DialogueActor dialogueActor, SubtitlePanelNumber subtitlePanelNumber);

		[Token(Token = "0x6001758")]
		void SetActorMenuPanelNumber(DialogueActor dialogueActor, MenuPanelNumber menuPanelNumber);

		[Token(Token = "0x6001759")]
		void OverrideActorPanel(Actor actor, SubtitlePanelNumber subtitlePanelNumber);

		[Token(Token = "0x600175A")]
		void OverrideActorMenuPanel(Transform actorTransform, MenuPanelNumber menuPanelNumber, StandardUIMenuPanel customPanel);
	}
	[Token(Token = "0x2000273")]
	public enum MenuPanelNumber
	{
		[Token(Token = "0x4000DAA")]
		Default,
		[Token(Token = "0x4000DAB")]
		Custom,
		[Token(Token = "0x4000DAC")]
		Panel0,
		[Token(Token = "0x4000DAD")]
		Panel1,
		[Token(Token = "0x4000DAE")]
		Panel2,
		[Token(Token = "0x4000DAF")]
		Panel3,
		[Token(Token = "0x4000DB0")]
		Panel4,
		[Token(Token = "0x4000DB1")]
		Panel5,
		[Token(Token = "0x4000DB2")]
		Panel6,
		[Token(Token = "0x4000DB3")]
		Panel7,
		[Token(Token = "0x4000DB4")]
		Panel8,
		[Token(Token = "0x4000DB5")]
		Panel9,
		[Token(Token = "0x4000DB6")]
		Panel10,
		[Token(Token = "0x4000DB7")]
		Panel11,
		[Token(Token = "0x4000DB8")]
		Panel12,
		[Token(Token = "0x4000DB9")]
		Panel13,
		[Token(Token = "0x4000DBA")]
		Panel14,
		[Token(Token = "0x4000DBB")]
		Panel15,
		[Token(Token = "0x4000DBC")]
		Panel16,
		[Token(Token = "0x4000DBD")]
		Panel17,
		[Token(Token = "0x4000DBE")]
		Panel18,
		[Token(Token = "0x4000DBF")]
		Panel19,
		[Token(Token = "0x4000DC0")]
		Panel20,
		[Token(Token = "0x4000DC1")]
		Panel21,
		[Token(Token = "0x4000DC2")]
		Panel22,
		[Token(Token = "0x4000DC3")]
		Panel23,
		[Token(Token = "0x4000DC4")]
		Panel24,
		[Token(Token = "0x4000DC5")]
		Panel25,
		[Token(Token = "0x4000DC6")]
		Panel26,
		[Token(Token = "0x4000DC7")]
		Panel27,
		[Token(Token = "0x4000DC8")]
		Panel28,
		[Token(Token = "0x4000DC9")]
		Panel29,
		[Token(Token = "0x4000DCA")]
		Panel30,
		[Token(Token = "0x4000DCB")]
		Panel31
	}
	[Token(Token = "0x2000274")]
	public static class PanelNumberUtility
	{
		[Token(Token = "0x600175B")]
		[Address(RVA = "0x1722ED0", Offset = "0x1722ED0", VA = "0x1722ED0")]
		public static SubtitlePanelNumber IntToSubtitlePanelNumber(int i)
		{
			return default(SubtitlePanelNumber);
		}

		[Token(Token = "0x600175C")]
		[Address(RVA = "0x1722EEC", Offset = "0x1722EEC", VA = "0x1722EEC")]
		public static MenuPanelNumber IntToMenuPanelNumber(int i)
		{
			return default(MenuPanelNumber);
		}

		[Token(Token = "0x600175D")]
		[Address(RVA = "0x1722F08", Offset = "0x1722F08", VA = "0x1722F08")]
		public static int GetSubtitlePanelIndex(SubtitlePanelNumber subtitlePanelNumber)
		{
			return default(int);
		}

		[Token(Token = "0x600175E")]
		[Address(RVA = "0x1722F18", Offset = "0x1722F18", VA = "0x1722F18")]
		public static int GetMenuPanelIndex(MenuPanelNumber menuPanelNumber)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000275")]
	public enum SubtitlePanelNumber
	{
		[Token(Token = "0x4000DCD")]
		Default,
		[Token(Token = "0x4000DCE")]
		UseBarkUI,
		[Token(Token = "0x4000DCF")]
		Custom,
		[Token(Token = "0x4000DD0")]
		Panel0,
		[Token(Token = "0x4000DD1")]
		Panel1,
		[Token(Token = "0x4000DD2")]
		Panel2,
		[Token(Token = "0x4000DD3")]
		Panel3,
		[Token(Token = "0x4000DD4")]
		Panel4,
		[Token(Token = "0x4000DD5")]
		Panel5,
		[Token(Token = "0x4000DD6")]
		Panel6,
		[Token(Token = "0x4000DD7")]
		Panel7,
		[Token(Token = "0x4000DD8")]
		Panel8,
		[Token(Token = "0x4000DD9")]
		Panel9,
		[Token(Token = "0x4000DDA")]
		Panel10,
		[Token(Token = "0x4000DDB")]
		Panel11,
		[Token(Token = "0x4000DDC")]
		Panel12,
		[Token(Token = "0x4000DDD")]
		Panel13,
		[Token(Token = "0x4000DDE")]
		Panel14,
		[Token(Token = "0x4000DDF")]
		Panel15,
		[Token(Token = "0x4000DE0")]
		Panel16,
		[Token(Token = "0x4000DE1")]
		Panel17,
		[Token(Token = "0x4000DE2")]
		Panel18,
		[Token(Token = "0x4000DE3")]
		Panel19,
		[Token(Token = "0x4000DE4")]
		Panel20,
		[Token(Token = "0x4000DE5")]
		Panel21,
		[Token(Token = "0x4000DE6")]
		Panel22,
		[Token(Token = "0x4000DE7")]
		Panel23,
		[Token(Token = "0x4000DE8")]
		Panel24,
		[Token(Token = "0x4000DE9")]
		Panel25,
		[Token(Token = "0x4000DEA")]
		Panel26,
		[Token(Token = "0x4000DEB")]
		Panel27,
		[Token(Token = "0x4000DEC")]
		Panel28,
		[Token(Token = "0x4000DED")]
		Panel29,
		[Token(Token = "0x4000DEE")]
		Panel30,
		[Token(Token = "0x4000DEF")]
		Panel31
	}
	[Token(Token = "0x2000276")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA08D84", Offset = "0xA08D84")]
	public class StandardDialogueUI : CanvasDialogueUI, IStandardDialogueUI
	{
		[Token(Token = "0x4000DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public StandardUIAlertControls alertUIElements;

		[Token(Token = "0x4000DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public StandardUIDialogueControls conversationUIElements;

		[Token(Token = "0x4000DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public StandardUIQTEControls QTEIndicatorElements;

		[Token(Token = "0x4000DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1AFFC", Offset = "0xA1AFFC")]
		public bool addEventSystemIfNeeded;

		[Token(Token = "0x4000DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Queue<QueuedUIAlert> m_alertQueue;

		[Token(Token = "0x4000DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private StandardUIRoot m_uiRoot;

		[Token(Token = "0x170002AC")]
		public override AbstractUIRoot uiRootControls
		{
			[Token(Token = "0x600175F")]
			[Address(RVA = "0x139BAC0", Offset = "0x139BAC0", VA = "0x139BAC0", Slot = "16")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002AD")]
		public override AbstractUIAlertControls alertControls
		{
			[Token(Token = "0x6001760")]
			[Address(RVA = "0x139BAC8", Offset = "0x139BAC8", VA = "0x139BAC8", Slot = "19")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002AE")]
		public override AbstractDialogueUIControls dialogueControls
		{
			[Token(Token = "0x6001761")]
			[Address(RVA = "0x139BAD0", Offset = "0x139BAD0", VA = "0x139BAD0", Slot = "17")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002AF")]
		public override AbstractUIQTEControls qteControls
		{
			[Token(Token = "0x6001762")]
			[Address(RVA = "0x139BAD8", Offset = "0x139BAD8", VA = "0x139BAD8", Slot = "18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B0")]
		protected Queue<QueuedUIAlert> alertQueue
		{
			[Token(Token = "0x6001763")]
			[Address(RVA = "0x139BAE0", Offset = "0x139BAE0", VA = "0x139BAE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001764")]
		[Address(RVA = "0x139BAE8", Offset = "0x139BAE8", VA = "0x139BAE8", Slot = "20")]
		public override void Awake()
		{
		}

		[Token(Token = "0x6001765")]
		[Address(RVA = "0x139BB44", Offset = "0x139BB44", VA = "0x139BB44")]
		private void VerifyAssignments()
		{
		}

		[Token(Token = "0x6001766")]
		[Address(RVA = "0x139BF18", Offset = "0x139BF18", VA = "0x139BF18", Slot = "48")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001767")]
		[Address(RVA = "0x139BFEC", Offset = "0x139BFEC", VA = "0x139BFEC", Slot = "49")]
		public virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001768")]
		[Address(RVA = "0x139C088", Offset = "0x139C088", VA = "0x139C088")]
		public void OnSceneLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x6001769")]
		[Address(RVA = "0x139C100", Offset = "0x139C100", VA = "0x139C100", Slot = "22")]
		public override void Open()
		{
		}

		[Token(Token = "0x600176A")]
		[Address(RVA = "0x139C158", Offset = "0x139C158", VA = "0x139C158", Slot = "23")]
		public override void Close()
		{
		}

		[Token(Token = "0x600176B")]
		[Address(RVA = "0x139C194", Offset = "0x139C194", VA = "0x139C194", Slot = "27")]
		public override void Update()
		{
		}

		[Token(Token = "0x600176C")]
		[Address(RVA = "0x139C25C", Offset = "0x139C25C", VA = "0x139C25C", Slot = "25")]
		public override void ShowAlert(string message, float duration)
		{
		}

		[Token(Token = "0x600176D")]
		[Address(RVA = "0x139C1BC", Offset = "0x139C1BC", VA = "0x139C1BC")]
		private void UpdateAlertQueue()
		{
		}

		[Token(Token = "0x600176E")]
		[Address(RVA = "0x139C588", Offset = "0x139C588", VA = "0x139C588")]
		private void ShowNextQueuedAlert()
		{
		}

		[Token(Token = "0x600176F")]
		[Address(RVA = "0x139C610", Offset = "0x139C610", VA = "0x139C610", Slot = "28")]
		public override void ShowSubtitle(Subtitle subtitle)
		{
		}

		[Token(Token = "0x6001770")]
		[Address(RVA = "0x139C668", Offset = "0x139C668", VA = "0x139C668", Slot = "29")]
		public override void HideSubtitle(Subtitle subtitle)
		{
		}

		[Token(Token = "0x6001771")]
		[Address(RVA = "0x139C690", Offset = "0x139C690", VA = "0x139C690", Slot = "50")]
		public virtual float GetTypewriterSpeed()
		{
			return default(float);
		}

		[Token(Token = "0x6001772")]
		[Address(RVA = "0x139C6C0", Offset = "0x139C6C0", VA = "0x139C6C0", Slot = "51")]
		public virtual void SetTypewriterSpeed(float charactersPerSecond)
		{
		}

		[Token(Token = "0x6001773")]
		[Address(RVA = "0x139C6F0", Offset = "0x139C6F0", VA = "0x139C6F0", Slot = "52")]
		public virtual void SetActorSubtitlePanelNumber(DialogueActor dialogueActor, SubtitlePanelNumber subtitlePanelNumber)
		{
		}

		[Token(Token = "0x6001774")]
		[Address(RVA = "0x139C720", Offset = "0x139C720", VA = "0x139C720", Slot = "53")]
		public virtual void SetActorMenuPanelNumber(DialogueActor dialogueActor, MenuPanelNumber menuPanelNumber)
		{
		}

		[Token(Token = "0x6001775")]
		[Address(RVA = "0x139C750", Offset = "0x139C750", VA = "0x139C750", Slot = "54")]
		public virtual void OverrideActorPanel(Actor actor, SubtitlePanelNumber subtitlePanelNumber)
		{
		}

		[Token(Token = "0x6001776")]
		[Address(RVA = "0x139C778", Offset = "0x139C778", VA = "0x139C778", Slot = "33")]
		public override void ShowResponses(Subtitle subtitle, Response[] responses, float timeout)
		{
		}

		[Token(Token = "0x6001777")]
		[Address(RVA = "0x139C7E8", Offset = "0x139C7E8", VA = "0x139C7E8", Slot = "37")]
		public override void OnClick(object data)
		{
		}

		[Token(Token = "0x6001778")]
		[Address(RVA = "0x139C838", Offset = "0x139C838", VA = "0x139C838", Slot = "55")]
		public virtual void OverrideActorMenuPanel(Transform actorTransform, MenuPanelNumber menuPanelNumber, StandardUIMenuPanel customPanel)
		{
		}

		[Token(Token = "0x6001779")]
		[Address(RVA = "0x139C868", Offset = "0x139C868", VA = "0x139C868", Slot = "56")]
		public virtual void OverrideActorMenuPanel(Actor actor, MenuPanelNumber menuPanelNumber, StandardUIMenuPanel customPanel)
		{
		}

		[Token(Token = "0x600177A")]
		[Address(RVA = "0x139C898", Offset = "0x139C898", VA = "0x139C898")]
		public StandardDialogueUI()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000277")]
	public class StandardUIAlertControls : AbstractUIAlertControls
	{
		[Token(Token = "0x4000DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1B034", Offset = "0xA1B034")]
		public UIPanel panel;

		[Token(Token = "0x4000DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1B06C", Offset = "0xA1B06C")]
		public UITextField alertText;

		[Token(Token = "0x4000DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1B0A4", Offset = "0xA1B0A4")]
		public bool queueAlerts;

		[Token(Token = "0x4000DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1B0DC", Offset = "0xA1B0DC")]
		public bool dontQueueDuplicates;

		[Token(Token = "0x4000DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1B114", Offset = "0xA1B114")]
		public bool waitForHideAnimation;

		[Token(Token = "0x4000DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1B14C", Offset = "0xA1B14C")]
		public bool allowForceImmediate;

		[Token(Token = "0x4000DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool m_initializedAnimator;

		[Token(Token = "0x170002B1")]
		public override bool isVisible
		{
			[Token(Token = "0x600177B")]
			[Address(RVA = "0x139C930", Offset = "0x139C930", VA = "0x139C930", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002B2")]
		public bool isHiding
		{
			[Token(Token = "0x600177C")]
			[Address(RVA = "0x139C4D4", Offset = "0x139C4D4", VA = "0x139C4D4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600177D")]
		[Address(RVA = "0x139C9DC", Offset = "0x139C9DC", VA = "0x139C9DC", Slot = "4")]
		public override void SetActive(bool value)
		{
		}

		[Token(Token = "0x600177E")]
		[Address(RVA = "0x139BD64", Offset = "0x139BD64", VA = "0x139BD64")]
		public void HideImmediate()
		{
		}

		[Token(Token = "0x600177F")]
		[Address(RVA = "0x139CB04", Offset = "0x139CB04", VA = "0x139CB04", Slot = "6")]
		public override void SetMessage(string message, float duration)
		{
		}

		[Token(Token = "0x6001780")]
		[Address(RVA = "0x139CB9C", Offset = "0x139CB9C", VA = "0x139CB9C")]
		public StandardUIAlertControls()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000278")]
	public class StandardUIDialogueControls : AbstractDialogueUIControls
	{
		[Token(Token = "0x4000DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1B184", Offset = "0xA1B184")]
		public UIPanel mainPanel;

		[Token(Token = "0x4000DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1B1BC", Offset = "0xA1B1BC")]
		public bool dontDeactivateMainPanel;

		[Token(Token = "0x4000DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StandardUISubtitlePanel[] subtitlePanels;

		[Token(Token = "0x4000E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1B1F4", Offset = "0xA1B1F4")]
		public StandardUISubtitlePanel defaultNPCSubtitlePanel;

		[Token(Token = "0x4000E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1B22C", Offset = "0xA1B22C")]
		public StandardUISubtitlePanel defaultPCSubtitlePanel;

		[Token(Token = "0x4000E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1B264", Offset = "0xA1B264")]
		public bool allowOpenSubtitlePanelsOnStartConversation;

		[Token(Token = "0x4000E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public StandardUIMenuPanel[] menuPanels;

		[Token(Token = "0x4000E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1B29C", Offset = "0xA1B29C")]
		public StandardUIMenuPanel defaultMenuPanel;

		[Token(Token = "0x4000E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1B2D4", Offset = "0xA1B2D4")]
		public bool useFirstResponseForMenuPortrait;

		[Token(Token = "0x4000E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private StandardUISubtitleControls m_standardSubtitleControls;

		[Token(Token = "0x4000E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private StandardUIResponseMenuControls m_standardMenuControls;

		[Token(Token = "0x4000E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool m_initializedAnimator;

		[Token(Token = "0x170002B3")]
		public StandardUISubtitleControls standardSubtitleControls
		{
			[Token(Token = "0x6001781")]
			[Address(RVA = "0x139D594", Offset = "0x139D594", VA = "0x139D594")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B4")]
		public override AbstractUISubtitleControls npcSubtitleControls
		{
			[Token(Token = "0x6001782")]
			[Address(RVA = "0x139D59C", Offset = "0x139D59C", VA = "0x139D59C", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B5")]
		public override AbstractUISubtitleControls pcSubtitleControls
		{
			[Token(Token = "0x6001783")]
			[Address(RVA = "0x139D5A4", Offset = "0x139D5A4", VA = "0x139D5A4", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B6")]
		public StandardUIResponseMenuControls standardMenuControls
		{
			[Token(Token = "0x6001784")]
			[Address(RVA = "0x139D5AC", Offset = "0x139D5AC", VA = "0x139D5AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B7")]
		public override AbstractUIResponseMenuControls responseMenuControls
		{
			[Token(Token = "0x6001785")]
			[Address(RVA = "0x139D5B4", Offset = "0x139D5B4", VA = "0x139D5B4", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001786")]
		[Address(RVA = "0x139BD18", Offset = "0x139BD18", VA = "0x139BD18")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001787")]
		[Address(RVA = "0x139D5BC", Offset = "0x139D5BC", VA = "0x139D5BC", Slot = "4")]
		public override void SetActive(bool value)
		{
		}

		[Token(Token = "0x6001788")]
		[Address(RVA = "0x139D704", Offset = "0x139D704", VA = "0x139D704", Slot = "8")]
		public override void ShowPanel()
		{
		}

		[Token(Token = "0x6001789")]
		[Address(RVA = "0x139D5D0", Offset = "0x139D5D0", VA = "0x139D5D0")]
		private void HidePanel()
		{
		}

		[Token(Token = "0x600178A")]
		[Address(RVA = "0x139BD84", Offset = "0x139BD84", VA = "0x139BD84")]
		public void HideImmediate()
		{
		}

		[Token(Token = "0x600178B")]
		[Address(RVA = "0x139D7B0", Offset = "0x139D7B0", VA = "0x139D7B0")]
		private void HideSubtitlePanelsImmediate()
		{
		}

		[Token(Token = "0x600178C")]
		[Address(RVA = "0x139D888", Offset = "0x139D888", VA = "0x139D888")]
		private void HideMenuPanelsImmediate()
		{
		}

		[Token(Token = "0x600178D")]
		[Address(RVA = "0x139C130", Offset = "0x139C130", VA = "0x139C130")]
		public void OpenSubtitlePanelsOnStart()
		{
		}

		[Token(Token = "0x600178E")]
		[Address(RVA = "0x139D960", Offset = "0x139D960", VA = "0x139D960")]
		public StandardUIDialogueControls()
		{
		}
	}
	[Token(Token = "0x2000279")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA08DBC", Offset = "0xA08DBC")]
	public class StandardUIInputField : UIPanel, ITextFieldUI
	{
		[Token(Token = "0x4000E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1B30C", Offset = "0xA1B30C")]
		public Graphic panel;

		[Token(Token = "0x4000E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1B344", Offset = "0xA1B344")]
		public UITextField label;

		[Token(Token = "0x4000E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1B37C", Offset = "0xA1B37C")]
		public UIInputField inputField;

		[Token(Token = "0x4000E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1B3B4", Offset = "0xA1B3B4")]
		public KeyCode acceptKey;

		[Token(Token = "0x4000E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1B3EC", Offset = "0xA1B3EC")]
		public KeyCode cancelKey;

		[Token(Token = "0x4000E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1B424", Offset = "0xA1B424")]
		public bool showTouchScreenKeyboard;

		[Token(Token = "0x4000E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public UnityEvent onAccept;

		[Token(Token = "0x4000E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public UnityEvent onCancel;

		[Token(Token = "0x4000E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private AcceptedTextDelegate m_acceptedText;

		[Token(Token = "0x4000E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private bool m_isAwaitingInput;

		[Token(Token = "0x4000E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private TouchScreenKeyboard m_touchScreenKeyboard;

		[Token(Token = "0x600178F")]
		[Address(RVA = "0x139E234", Offset = "0x139E234", VA = "0x139E234", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001790")]
		[Address(RVA = "0x139E3DC", Offset = "0x139E3DC", VA = "0x139E3DC", Slot = "16")]
		public void StartTextInput(string labelText, string text, int maxLength, AcceptedTextDelegate acceptedText)
		{
		}

		[Token(Token = "0x6001791")]
		[Address(RVA = "0x139E53C", Offset = "0x139E53C", VA = "0x139E53C", Slot = "14")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6001792")]
		[Address(RVA = "0x139E6A4", Offset = "0x139E6A4", VA = "0x139E6A4", Slot = "17")]
		public void CancelTextInput()
		{
		}

		[Token(Token = "0x6001793")]
		[Address(RVA = "0x139E640", Offset = "0x139E640", VA = "0x139E640")]
		public void AcceptTextInput()
		{
		}

		[Token(Token = "0x6001794")]
		[Address(RVA = "0x139E458", Offset = "0x139E458", VA = "0x139E458")]
		private void Show()
		{
		}

		[Token(Token = "0x6001795")]
		[Address(RVA = "0x139E6D8", Offset = "0x139E6D8", VA = "0x139E6D8")]
		private void Hide()
		{
		}

		[Token(Token = "0x6001796")]
		[Address(RVA = "0x139E318", Offset = "0x139E318", VA = "0x139E318")]
		private void SetActive(bool value)
		{
		}

		[Token(Token = "0x6001797")]
		[Address(RVA = "0x139E724", Offset = "0x139E724", VA = "0x139E724")]
		public StandardUIInputField()
		{
		}
	}
	[Token(Token = "0x200027A")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA08DF4", Offset = "0xA08DF4")]
	public class StandardUIMenuPanel : UIPanel
	{
		[Token(Token = "0x2000630")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DD58", Offset = "0xA0DD58")]
		private sealed class <FocusWhenOpen>d__43 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001ECA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001ECB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public StandardUIMenuPanel <>4__this;

			[Token(Token = "0x4001ECC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <timeout>5__2;

			[Token(Token = "0x17000573")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002AFC")]
				[Address(RVA = "0x13A0C88", Offset = "0x13A0C88", VA = "0x13A0C88", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000574")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002AFE")]
				[Address(RVA = "0x13A0CF0", Offset = "0x13A0CF0", VA = "0x13A0CF0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002AF9")]
			[Address(RVA = "0x139EFA8", Offset = "0x139EFA8", VA = "0x139EFA8")]
			[DebuggerHidden]
			public <FocusWhenOpen>d__43(int <>1__state)
			{
			}

			[Token(Token = "0x6002AFA")]
			[Address(RVA = "0x13A0BD8", Offset = "0x13A0BD8", VA = "0x13A0BD8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002AFB")]
			[Address(RVA = "0x13A0BDC", Offset = "0x13A0BDC", VA = "0x13A0BDC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002AFD")]
			[Address(RVA = "0x13A0C90", Offset = "0x13A0C90", VA = "0x13A0C90", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1B45C", Offset = "0xA1B45C")]
		public Graphic panel;

		[Token(Token = "0x4000E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1B494", Offset = "0xA1B494")]
		public Image pcImage;

		[Token(Token = "0x4000E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1B4CC", Offset = "0xA1B4CC")]
		public UITextField pcName;

		[Token(Token = "0x4000E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1B504", Offset = "0xA1B504")]
		public Slider timerSlider;

		[Token(Token = "0x4000E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1B53C", Offset = "0xA1B53C")]
		public ResponseButtonAlignment buttonAlignment;

		[Token(Token = "0x4000E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1B574", Offset = "0xA1B574")]
		public bool showUnusedButtons;

		[Token(Token = "0x4000E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1B5AC", Offset = "0xA1B5AC")]
		public StandardUIResponseButton[] buttons;

		[Token(Token = "0x4000E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1B5E4", Offset = "0xA1B5E4")]
		public StandardUIResponseButton buttonTemplate;

		[Token(Token = "0x4000E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1B61C", Offset = "0xA1B61C")]
		public Graphic buttonTemplateHolder;

		[Token(Token = "0x4000E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1B654", Offset = "0xA1B654")]
		public Scrollbar buttonTemplateScrollbar;

		[Token(Token = "0x4000E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1B68C", Offset = "0xA1B68C")]
		public UIScrollbarEnabler scrollbarEnabler;

		[Token(Token = "0x4000E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1B6C4", Offset = "0xA1B6C4")]
		public float buttonTemplateScrollbarResetValue;

		[Token(Token = "0x4000E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1B6FC", Offset = "0xA1B6FC")]
		public bool explicitNavigationForTemplateButtons;

		[Token(Token = "0x4000E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE5")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1B734", Offset = "0xA1B734")]
		public bool loopExplicitNavigation;

		[Token(Token = "0x4000E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public UIAutonumberSettings autonumber;

		[Token(Token = "0x4000E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1B76C", Offset = "0xA1B76C")]
		public float blockInputDuration;

		[Token(Token = "0x4000E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public UnityEvent onContentChanged;

		[Token(Token = "0x4000E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1B7A4", Offset = "0xA1B7A4")]
		public string focusAnimationTrigger;

		[Token(Token = "0x4000E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1B7DC", Offset = "0xA1B7DC")]
		public string unfocusAnimationTrigger;

		[Token(Token = "0x4000E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public UnityEvent onFocus;

		[Token(Token = "0x4000E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public UnityEvent onUnfocus;

		[Token(Token = "0x4000E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1B814", Offset = "0xA1B814")]
		private bool m_hasFocus;

		[Token(Token = "0x4000E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private List<GameObject> m_instantiatedButtons;

		[Token(Token = "0x4000E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private List<GameObject> m_instantiatedButtonPool;

		[Token(Token = "0x4000E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		protected StandardUITimer m_timer;

		[Token(Token = "0x4000E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		protected Action m_timeoutHandler;

		[Token(Token = "0x4000E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		protected CanvasGroup m_mainCanvasGroup;

		[Token(Token = "0x170002B8")]
		public virtual bool hasFocus
		{
			[Token(Token = "0x6001798")]
			[Address(RVA = "0x139EA28", Offset = "0x139EA28", VA = "0x139EA28", Slot = "16")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001799")]
			[Address(RVA = "0x139EA30", Offset = "0x139EA30", VA = "0x139EA30", Slot = "17")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002B9")]
		public override bool waitForShowAnimation
		{
			[Token(Token = "0x600179A")]
			[Address(RVA = "0x139EA3C", Offset = "0x139EA3C", VA = "0x139EA3C", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002BA")]
		public List<GameObject> instantiatedButtons
		{
			[Token(Token = "0x600179B")]
			[Address(RVA = "0x139EA44", Offset = "0x139EA44", VA = "0x139EA44")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002BB")]
		protected List<GameObject> instantiatedButtonPool
		{
			[Token(Token = "0x600179C")]
			[Address(RVA = "0x139EA4C", Offset = "0x139EA4C", VA = "0x139EA4C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600179D")]
		[Address(RVA = "0x139EA54", Offset = "0x139EA54", VA = "0x139EA54", Slot = "18")]
		public virtual void Awake()
		{
		}

		[Token(Token = "0x600179E")]
		[Address(RVA = "0x139EAC4", Offset = "0x139EAC4", VA = "0x139EAC4", Slot = "19")]
		public virtual void SetPCPortrait(Sprite portraitSprite, string portraitName)
		{
		}

		[Token(Token = "0x600179F")]
		[Address(RVA = "0x139EBE0", Offset = "0x139EBE0", VA = "0x139EBE0", Slot = "20")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xA2C734", Offset = "0xA2C734")]
		public virtual void SetPCPortrait(Texture2D portraitTexture, string portraitName)
		{
		}

		[Token(Token = "0x60017A0")]
		[Address(RVA = "0x139EC74", Offset = "0x139EC74", VA = "0x139EC74", Slot = "21")]
		public virtual void ShowResponses(Subtitle subtitle, Response[] responses, Transform target)
		{
		}

		[Token(Token = "0x60017A1")]
		[Address(RVA = "0x139EE08", Offset = "0x139EE08", VA = "0x139EE08", Slot = "22")]
		public virtual void HideResponses()
		{
		}

		[Token(Token = "0x60017A2")]
		[Address(RVA = "0x139EE54", Offset = "0x139EE54", VA = "0x139EE54", Slot = "9")]
		public override void Close()
		{
		}

		[Token(Token = "0x60017A3")]
		[Address(RVA = "0x139EE90", Offset = "0x139EE90", VA = "0x139EE90", Slot = "23")]
		public virtual void Focus()
		{
		}

		[Token(Token = "0x60017A4")]
		[Address(RVA = "0x139EF38", Offset = "0x139EF38", VA = "0x139EF38")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA2C76C", Offset = "0xA2C76C")]
		protected IEnumerator FocusWhenOpen()
		{
			return null;
		}

		[Token(Token = "0x60017A5")]
		[Address(RVA = "0x139EFD4", Offset = "0x139EFD4", VA = "0x139EFD4", Slot = "24")]
		protected virtual void FocusNow()
		{
		}

		[Token(Token = "0x60017A6")]
		[Address(RVA = "0x139F14C", Offset = "0x139F14C", VA = "0x139F14C")]
		private void OnFocused()
		{
		}

		[Token(Token = "0x60017A7")]
		[Address(RVA = "0x139F160", Offset = "0x139F160", VA = "0x139F160", Slot = "25")]
		public virtual void Unfocus()
		{
		}

		[Token(Token = "0x60017A8")]
		[Address(RVA = "0x139EDEC", Offset = "0x139EDEC", VA = "0x139EDEC")]
		protected void ActivateUIElements()
		{
		}

		[Token(Token = "0x60017A9")]
		[Address(RVA = "0x139F1E8", Offset = "0x139F1E8", VA = "0x139F1E8")]
		protected void DeactivateUIElements()
		{
		}

		[Token(Token = "0x60017AA")]
		[Address(RVA = "0x139F1FC", Offset = "0x139F1FC", VA = "0x139F1FC", Slot = "26")]
		protected virtual void SetUIElementsActive(bool value)
		{
		}

		[Token(Token = "0x60017AB")]
		[Address(RVA = "0x139F378", Offset = "0x139F378", VA = "0x139F378", Slot = "27")]
		public virtual void HideImmediate()
		{
		}

		[Token(Token = "0x60017AC")]
		[Address(RVA = "0x139F38C", Offset = "0x139F38C", VA = "0x139F38C", Slot = "28")]
		protected virtual void ClearResponseButtons()
		{
		}

		[Token(Token = "0x60017AD")]
		[Address(RVA = "0x139F5B8", Offset = "0x139F5B8", VA = "0x139F5B8", Slot = "29")]
		protected virtual void SetResponseButtons(Response[] responses, Transform target)
		{
		}

		[Token(Token = "0x60017AE")]
		[Address(RVA = "0x139FF90", Offset = "0x139FF90", VA = "0x139FF90", Slot = "30")]
		protected virtual void SetResponseButton(StandardUIResponseButton button, Response response, Transform target, int buttonNumber)
		{
		}

		[Token(Token = "0x60017AF")]
		[Address(RVA = "0x139FF04", Offset = "0x139FF04", VA = "0x139FF04")]
		protected int GetNextAvailableResponseButtonPosition(int start, int direction)
		{
			return default(int);
		}

		[Token(Token = "0x60017B0")]
		[Address(RVA = "0x13A01E4", Offset = "0x13A01E4", VA = "0x13A01E4", Slot = "31")]
		public virtual void SetupTemplateButtonNavigation()
		{
		}

		[Token(Token = "0x60017B1")]
		[Address(RVA = "0x139FE38", Offset = "0x139FE38", VA = "0x139FE38")]
		protected GameObject InstantiateButton()
		{
			return null;
		}

		[Token(Token = "0x60017B2")]
		[Address(RVA = "0x139F4D8", Offset = "0x139F4D8", VA = "0x139F4D8")]
		public void DestroyInstantiatedButtons()
		{
		}

		[Token(Token = "0x60017B3")]
		[Address(RVA = "0x13A03E0", Offset = "0x13A03E0", VA = "0x13A03E0")]
		public void MakeButtonsNonclickable()
		{
		}

		[Token(Token = "0x60017B4")]
		[Address(RVA = "0x139FF74", Offset = "0x139FF74", VA = "0x139FF74")]
		protected void NotifyContentChanged()
		{
		}

		[Token(Token = "0x60017B5")]
		[Address(RVA = "0x139EE00", Offset = "0x139EE00", VA = "0x139EE00")]
		protected void DisableInput()
		{
		}

		[Token(Token = "0x60017B6")]
		[Address(RVA = "0x13A07A8", Offset = "0x13A07A8", VA = "0x13A07A8")]
		protected void EnableInput()
		{
		}

		[Token(Token = "0x60017B7")]
		[Address(RVA = "0x13A05C4", Offset = "0x13A05C4", VA = "0x13A05C4")]
		protected void SetInput(bool value)
		{
		}

		[Token(Token = "0x60017B8")]
		[Address(RVA = "0x13A07B0", Offset = "0x13A07B0", VA = "0x13A07B0", Slot = "32")]
		public virtual void StartTimer(float timeout, Action timeoutHandler)
		{
		}

		[Token(Token = "0x60017B9")]
		[Address(RVA = "0x13A09B8", Offset = "0x13A09B8", VA = "0x13A09B8", Slot = "33")]
		public virtual void StopTimer()
		{
		}

		[Token(Token = "0x60017BA")]
		[Address(RVA = "0x13A0A84", Offset = "0x13A0A84", VA = "0x13A0A84")]
		public StandardUIMenuPanel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200027B")]
	public class StandardUIQTEControls : AbstractUIQTEControls
	{
		[Token(Token = "0x4000E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1B860", Offset = "0xA1B860")]
		public GameObject[] QTEIndicators;

		[Token(Token = "0x4000E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int m_numVisibleQTEIndicators;

		[Token(Token = "0x170002BC")]
		public override bool areVisible
		{
			[Token(Token = "0x60017BB")]
			[Address(RVA = "0x13A0CF8", Offset = "0x13A0CF8", VA = "0x13A0CF8", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60017BC")]
		[Address(RVA = "0x13A0D08", Offset = "0x13A0D08", VA = "0x13A0D08", Slot = "4")]
		public override void SetActive(bool value)
		{
		}

		[Token(Token = "0x60017BD")]
		[Address(RVA = "0x139BE48", Offset = "0x139BE48", VA = "0x139BE48")]
		public void HideImmediate()
		{
		}

		[Token(Token = "0x60017BE")]
		[Address(RVA = "0x13A0D14", Offset = "0x13A0D14", VA = "0x13A0D14", Slot = "6")]
		public override void ShowIndicator(int index)
		{
		}

		[Token(Token = "0x60017BF")]
		[Address(RVA = "0x13A0E3C", Offset = "0x13A0E3C", VA = "0x13A0E3C", Slot = "7")]
		public override void HideIndicator(int index)
		{
		}

		[Token(Token = "0x60017C0")]
		[Address(RVA = "0x13A0DD8", Offset = "0x13A0DD8", VA = "0x13A0DD8")]
		private bool IsQTEIndicatorVisible(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x60017C1")]
		[Address(RVA = "0x13A0F18", Offset = "0x13A0F18", VA = "0x13A0F18")]
		private bool IsValidQTEIndex(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x60017C2")]
		[Address(RVA = "0x13A0F48", Offset = "0x13A0F48", VA = "0x13A0F48")]
		public StandardUIQTEControls()
		{
		}
	}
	[Token(Token = "0x200027C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA08E2C", Offset = "0xA08E2C")]
	public class StandardUIResponseButton : MonoBehaviour
	{
		[Token(Token = "0x4000E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Button button;

		[Token(Token = "0x4000E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1B898", Offset = "0xA1B898")]
		public UITextField label;

		[Token(Token = "0x4000E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1B8D0", Offset = "0xA1B8D0")]
		public bool setLabelColor;

		[Token(Token = "0x4000E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1B908", Offset = "0xA1B908")]
		public Color defaultColor;

		[Token(Token = "0x4000E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1B940", Offset = "0xA1B940")]
		private bool <isVisible>k__BackingField;

		[Token(Token = "0x4000E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1B950", Offset = "0xA1B950")]
		private Response <response>k__BackingField;

		[Token(Token = "0x4000E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1B960", Offset = "0xA1B960")]
		private Transform <target>k__BackingField;

		[Token(Token = "0x170002BD")]
		public string text
		{
			[Token(Token = "0x60017C3")]
			[Address(RVA = "0x12E4FE0", Offset = "0x12E4FE0", VA = "0x12E4FE0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60017C4")]
			[Address(RVA = "0x12E4FFC", Offset = "0x12E4FFC", VA = "0x12E4FFC")]
			set
			{
			}
		}

		[Token(Token = "0x170002BE")]
		public bool isClickable
		{
			[Token(Token = "0x60017C5")]
			[Address(RVA = "0x12E5290", Offset = "0x12E5290", VA = "0x12E5290")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60017C6")]
			[Address(RVA = "0x12E5328", Offset = "0x12E5328", VA = "0x12E5328")]
			set
			{
			}
		}

		[Token(Token = "0x170002BF")]
		public bool isVisible
		{
			[Token(Token = "0x60017C7")]
			[Address(RVA = "0x12E53D0", Offset = "0x12E53D0", VA = "0x12E53D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2C7D0", Offset = "0xA2C7D0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60017C8")]
			[Address(RVA = "0x12E53D8", Offset = "0x12E53D8", VA = "0x12E53D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2C7E0", Offset = "0xA2C7E0")]
			set
			{
			}
		}

		[Token(Token = "0x170002C0")]
		public Response response
		{
			[Token(Token = "0x60017C9")]
			[Address(RVA = "0x12E53E4", Offset = "0x12E53E4", VA = "0x12E53E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2C7F0", Offset = "0xA2C7F0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60017CA")]
			[Address(RVA = "0x12E53EC", Offset = "0x12E53EC", VA = "0x12E53EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2C800", Offset = "0xA2C800")]
			set
			{
			}
		}

		[Token(Token = "0x170002C1")]
		public Transform target
		{
			[Token(Token = "0x60017CB")]
			[Address(RVA = "0x12E53F4", Offset = "0x12E53F4", VA = "0x12E53F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2C810", Offset = "0xA2C810")]
			get
			{
				return null;
			}
			[Token(Token = "0x60017CC")]
			[Address(RVA = "0x12E53FC", Offset = "0x12E53FC", VA = "0x12E53FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2C820", Offset = "0xA2C820")]
			set
			{
			}
		}

		[Token(Token = "0x60017CD")]
		[Address(RVA = "0x12E5404", Offset = "0x12E5404", VA = "0x12E5404")]
		public void Reset()
		{
		}

		[Token(Token = "0x60017CE")]
		[Address(RVA = "0x12E549C", Offset = "0x12E549C", VA = "0x12E549C", Slot = "4")]
		public virtual void Awake()
		{
		}

		[Token(Token = "0x60017CF")]
		[Address(RVA = "0x12E55E4", Offset = "0x12E55E4", VA = "0x12E55E4", Slot = "5")]
		public virtual void Start()
		{
		}

		[Token(Token = "0x60017D0")]
		[Address(RVA = "0x12E56BC", Offset = "0x12E56BC", VA = "0x12E56BC", Slot = "6")]
		public virtual void SetFormattedText(FormattedText formattedText)
		{
		}

		[Token(Token = "0x60017D1")]
		[Address(RVA = "0x12E5848", Offset = "0x12E5848", VA = "0x12E5848", Slot = "7")]
		public virtual void SetUnformattedText(string unformattedText)
		{
		}

		[Token(Token = "0x60017D2")]
		[Address(RVA = "0x12E587C", Offset = "0x12E587C", VA = "0x12E587C", Slot = "8")]
		protected virtual void SetColor(Color currentColor)
		{
		}

		[Token(Token = "0x60017D3")]
		[Address(RVA = "0x12E58A4", Offset = "0x12E58A4", VA = "0x12E58A4", Slot = "9")]
		public virtual void OnClick()
		{
		}

		[Token(Token = "0x60017D4")]
		[Address(RVA = "0x12E594C", Offset = "0x12E594C", VA = "0x12E594C")]
		public StandardUIResponseButton()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200027D")]
	public class StandardUIResponseMenuControls : AbstractUIResponseMenuControls
	{
		[Token(Token = "0x4000E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action timeoutHandler;

		[Token(Token = "0x4000E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected List<StandardUIMenuPanel> m_builtinPanels;

		[Token(Token = "0x4000E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected StandardUIMenuPanel m_defaultPanel;

		[Token(Token = "0x4000E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Dictionary<Transform, StandardUIMenuPanel> m_actorPanelCache;

		[Token(Token = "0x4000E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Dictionary<int, StandardUIMenuPanel> m_actorIdPanelCache;

		[Token(Token = "0x4000E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected StandardUIMenuPanel m_currentPanel;

		[Token(Token = "0x4000E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Sprite m_pcPortraitSprite;

		[Token(Token = "0x4000E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected string m_pcPortraitName;

		[Token(Token = "0x4000E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected bool useFirstResponseForPortrait;

		[Token(Token = "0x170002C2")]
		public override AbstractUISubtitleControls subtitleReminderControls
		{
			[Token(Token = "0x60017D5")]
			[Address(RVA = "0x12E5988", Offset = "0x12E5988", VA = "0x12E5988", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017D6")]
		[Address(RVA = "0x12E5990", Offset = "0x12E5990", VA = "0x12E5990")]
		public void Initialize(StandardUIMenuPanel[] menuPanels, StandardUIMenuPanel defaultMenuPanel, bool useFirstResponseForMenuPortrait)
		{
		}

		[Token(Token = "0x60017D7")]
		[Address(RVA = "0x12E5AC8", Offset = "0x12E5AC8", VA = "0x12E5AC8")]
		public void ClearCache()
		{
		}

		[Token(Token = "0x60017D8")]
		[Address(RVA = "0x12E5B38", Offset = "0x12E5B38", VA = "0x12E5B38", Slot = "14")]
		public virtual void SetActorMenuPanelNumber(DialogueActor dialogueActor, MenuPanelNumber menuPanelNumber)
		{
		}

		[Token(Token = "0x60017D9")]
		[Address(RVA = "0x12E5BF8", Offset = "0x12E5BF8", VA = "0x12E5BF8")]
		public void OverrideActorMenuPanel(Transform actorTransform, MenuPanelNumber menuPanelNumber, StandardUIMenuPanel customPanel)
		{
		}

		[Token(Token = "0x60017DA")]
		[Address(RVA = "0x12E5D88", Offset = "0x12E5D88", VA = "0x12E5D88")]
		public void OverrideActorMenuPanel(Actor actor, MenuPanelNumber menuPanelNumber, StandardUIMenuPanel customPanel)
		{
		}

		[Token(Token = "0x60017DB")]
		[Address(RVA = "0x12E5E34", Offset = "0x12E5E34", VA = "0x12E5E34")]
		protected Transform GetActorTransformFromID(int actorID)
		{
			return null;
		}

		[Token(Token = "0x60017DC")]
		[Address(RVA = "0x12E5FF0", Offset = "0x12E5FF0", VA = "0x12E5FF0", Slot = "15")]
		public virtual StandardUIMenuPanel GetPanel(Subtitle lastSubtitle, Response[] responses)
		{
			return null;
		}

		[Token(Token = "0x60017DD")]
		[Address(RVA = "0x12E6564", Offset = "0x12E6564", VA = "0x12E6564")]
		protected StandardUIMenuPanel GetDialogueActorPanel(DialogueActor dialogueActor)
		{
			return null;
		}

		[Token(Token = "0x60017DE")]
		[Address(RVA = "0x12E5CD0", Offset = "0x12E5CD0", VA = "0x12E5CD0")]
		protected StandardUIMenuPanel GetPanelFromNumber(MenuPanelNumber menuPanelNumber, StandardUIMenuPanel customMenuPanel)
		{
			return null;
		}

		[Token(Token = "0x60017DF")]
		[Address(RVA = "0x12E6614", Offset = "0x12E6614", VA = "0x12E6614", Slot = "10")]
		public override void SetPCPortrait(Sprite portraitSprite, string portraitName)
		{
		}

		[Token(Token = "0x60017E0")]
		[Address(RVA = "0x12E661C", Offset = "0x12E661C", VA = "0x12E661C", Slot = "12")]
		public override void SetActorPortraitSprite(string actorName, Sprite portraitSprite)
		{
		}

		[Token(Token = "0x60017E1")]
		[Address(RVA = "0x12E6780", Offset = "0x12E6780", VA = "0x12E6780", Slot = "6")]
		protected override void ClearResponseButtons()
		{
		}

		[Token(Token = "0x60017E2")]
		[Address(RVA = "0x12E6784", Offset = "0x12E6784", VA = "0x12E6784", Slot = "7")]
		protected override void SetResponseButtons(Response[] responses, Transform target)
		{
		}

		[Token(Token = "0x60017E3")]
		[Address(RVA = "0x12E6788", Offset = "0x12E6788", VA = "0x12E6788", Slot = "4")]
		public override void SetActive(bool value)
		{
		}

		[Token(Token = "0x60017E4")]
		[Address(RVA = "0x12E6838", Offset = "0x12E6838", VA = "0x12E6838", Slot = "9")]
		public override void ShowResponses(Subtitle lastSubtitle, Response[] responses, Transform target)
		{
		}

		[Token(Token = "0x60017E5")]
		[Address(RVA = "0x12E6A44", Offset = "0x12E6A44", VA = "0x12E6A44", Slot = "16")]
		public virtual void MakeButtonsNonclickable()
		{
		}

		[Token(Token = "0x60017E6")]
		[Address(RVA = "0x12E6AD8", Offset = "0x12E6AD8", VA = "0x12E6AD8")]
		public void Close()
		{
		}

		[Token(Token = "0x60017E7")]
		[Address(RVA = "0x12E6F18", Offset = "0x12E6F18", VA = "0x12E6F18", Slot = "8")]
		public override void StartTimer(float timeout)
		{
		}

		[Token(Token = "0x60017E8")]
		[Address(RVA = "0x12E6FCC", Offset = "0x12E6FCC", VA = "0x12E6FCC")]
		public void DefaultTimeoutHandler()
		{
		}

		[Token(Token = "0x60017E9")]
		[Address(RVA = "0x12E7048", Offset = "0x12E7048", VA = "0x12E7048")]
		public StandardUIResponseMenuControls()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200027E")]
	public class StandardUIRoot : AbstractUIRoot
	{
		[Token(Token = "0x60017EA")]
		[Address(RVA = "0x12E7108", Offset = "0x12E7108", VA = "0x12E7108", Slot = "4")]
		public override void Show()
		{
		}

		[Token(Token = "0x60017EB")]
		[Address(RVA = "0x12E710C", Offset = "0x12E710C", VA = "0x12E710C", Slot = "5")]
		public override void Hide()
		{
		}

		[Token(Token = "0x60017EC")]
		[Address(RVA = "0x12E7110", Offset = "0x12E7110", VA = "0x12E7110")]
		public StandardUIRoot()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200027F")]
	public class StandardUISubtitleControls : AbstractUISubtitleControls
	{
		[Token(Token = "0x4000E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<StandardUISubtitlePanel> m_builtinPanels;

		[Token(Token = "0x4000E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<StandardUISubtitlePanel> m_customPanels;

		[Token(Token = "0x4000E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private StandardUISubtitlePanel m_defaultNPCPanel;

		[Token(Token = "0x4000E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private StandardUISubtitlePanel m_defaultPCPanel;

		[Token(Token = "0x4000E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private StandardUISubtitlePanel m_focusedPanel;

		[Token(Token = "0x4000E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Dictionary<Transform, StandardUISubtitlePanel> m_actorPanelCache;

		[Token(Token = "0x4000E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Dictionary<int, StandardUISubtitlePanel> m_actorIdOverridePanel;

		[Token(Token = "0x4000E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Dictionary<int, StandardUISubtitlePanel> m_lastPanelUsedByActor;

		[Token(Token = "0x4000E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<StandardUISubtitlePanel, int> m_lastActorToUsePanel;

		[Token(Token = "0x4000E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Transform, DialogueActor> m_dialogueActorCache;

		[Token(Token = "0x4000E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<Transform> m_useBarkUIs;

		[Token(Token = "0x4000E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<string> m_queuedActorGOs;

		[Token(Token = "0x4000E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<SubtitlePanelNumber> m_queuedActorGOPanels;

		[Token(Token = "0x4000E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private List<int> m_queuedActorIDs;

		[Token(Token = "0x4000E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private List<SubtitlePanelNumber> m_queuedActorIDPanels;

		[Token(Token = "0x170002C3")]
		public override bool hasText
		{
			[Token(Token = "0x60017ED")]
			[Address(RVA = "0x12E7510", Offset = "0x12E7510", VA = "0x12E7510", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60017EE")]
		[Address(RVA = "0x12E75BC", Offset = "0x12E75BC", VA = "0x12E75BC")]
		public void Initialize(StandardUISubtitlePanel[] subtitlePanels, StandardUISubtitlePanel defaultNPCSubtitlePanel, StandardUISubtitlePanel defaultPCSubtitlePanel)
		{
		}

		[Token(Token = "0x60017EF")]
		[Address(RVA = "0x12E7824", Offset = "0x12E7824", VA = "0x12E7824")]
		private void ClearCache()
		{
		}

		[Token(Token = "0x60017F0")]
		[Address(RVA = "0x12E7904", Offset = "0x12E7904", VA = "0x12E7904")]
		public void OverrideActorPanel(Actor actor, SubtitlePanelNumber subtitlePanelNumber)
		{
		}

		[Token(Token = "0x60017F1")]
		[Address(RVA = "0x12E7AAC", Offset = "0x12E7AAC", VA = "0x12E7AAC", Slot = "13")]
		public virtual StandardUISubtitlePanel GetPanel(Subtitle subtitle, out DialogueActor dialogueActor)
		{
			return null;
		}

		[Token(Token = "0x60017F2")]
		[Address(RVA = "0x12E7C10", Offset = "0x12E7C10", VA = "0x12E7C10")]
		private StandardUISubtitlePanel GetActorTransformPanel(Transform speakerTransform, StandardUISubtitlePanel defaultPanel, out DialogueActor dialogueActor)
		{
			return null;
		}

		[Token(Token = "0x60017F3")]
		[Address(RVA = "0x12E7E1C", Offset = "0x12E7E1C", VA = "0x12E7E1C")]
		private bool DialogueActorUsesBarkUI(DialogueActor dialogueActor)
		{
			return default(bool);
		}

		[Token(Token = "0x60017F4")]
		[Address(RVA = "0x12E7EB8", Offset = "0x12E7EB8", VA = "0x12E7EB8")]
		private StandardUISubtitlePanel GetDialogueActorPanel(DialogueActor dialogueActor)
		{
			return null;
		}

		[Token(Token = "0x60017F5")]
		[Address(RVA = "0x12E79BC", Offset = "0x12E79BC", VA = "0x12E79BC")]
		private StandardUISubtitlePanel GetPanelFromNumber(SubtitlePanelNumber subtitlePanelNumber, StandardUISubtitlePanel customPanel)
		{
			return null;
		}

		[Token(Token = "0x60017F6")]
		[Address(RVA = "0x12E7F68", Offset = "0x12E7F68", VA = "0x12E7F68")]
		private bool SubtitleUsesBarkUI(Subtitle subtitle)
		{
			return default(bool);
		}

		[Token(Token = "0x60017F7")]
		[Address(RVA = "0x12E7FF0", Offset = "0x12E7FF0", VA = "0x12E7FF0")]
		private string GetSubtitleTextSummary(Subtitle subtitle)
		{
			return null;
		}

		[Token(Token = "0x60017F8")]
		[Address(RVA = "0x12E8198", Offset = "0x12E8198", VA = "0x12E8198", Slot = "14")]
		public virtual void SetActorSubtitlePanelNumber(DialogueActor dialogueActor, SubtitlePanelNumber subtitlePanelNumber)
		{
		}

		[Token(Token = "0x60017F9")]
		[Address(RVA = "0x12E8350", Offset = "0x12E8350", VA = "0x12E8350", Slot = "15")]
		public virtual void RecordActorPanelCache(out List<string> actorGOs, out List<SubtitlePanelNumber> actorGOPanels, out List<int> actorIDs, out List<SubtitlePanelNumber> actorIDPanels)
		{
		}

		[Token(Token = "0x60017FA")]
		[Address(RVA = "0x12E86D4", Offset = "0x12E86D4", VA = "0x12E86D4", Slot = "16")]
		public virtual void QueueSavedActorPanelCache(List<string> actorGOs, List<SubtitlePanelNumber> actorGOPanels, List<int> actorIDs, List<SubtitlePanelNumber> actorIDPanels)
		{
		}

		[Token(Token = "0x60017FB")]
		[Address(RVA = "0x12E86E0", Offset = "0x12E86E0", VA = "0x12E86E0", Slot = "17")]
		public virtual void ApplyQueuedActorPanelCache()
		{
		}

		[Token(Token = "0x60017FC")]
		[Address(RVA = "0x12E89E0", Offset = "0x12E89E0", VA = "0x12E89E0", Slot = "18")]
		protected virtual SubtitlePanelNumber GetSubtitlePanelNumberFromPanel(StandardUISubtitlePanel panel)
		{
			return default(SubtitlePanelNumber);
		}

		[Token(Token = "0x60017FD")]
		[Address(RVA = "0x12E8B38", Offset = "0x12E8B38", VA = "0x12E8B38", Slot = "10")]
		public override void ShowSubtitle(Subtitle subtitle)
		{
		}

		[Token(Token = "0x60017FE")]
		[Address(RVA = "0x12E8FE8", Offset = "0x12E8FE8", VA = "0x12E8FE8")]
		public void HideSubtitle(Subtitle subtitle)
		{
		}

		[Token(Token = "0x60017FF")]
		[Address(RVA = "0x12E9170", Offset = "0x12E9170", VA = "0x12E9170")]
		public void Close()
		{
		}

		[Token(Token = "0x6001800")]
		[Address(RVA = "0x12E93F8", Offset = "0x12E93F8", VA = "0x12E93F8", Slot = "19")]
		protected virtual void SupercedeOtherPanels(StandardUISubtitlePanel newPanel)
		{
		}

		[Token(Token = "0x6001801")]
		[Address(RVA = "0x12E944C", Offset = "0x12E944C", VA = "0x12E944C", Slot = "20")]
		protected virtual void SupercedeOtherPanelsInList(List<StandardUISubtitlePanel> list, StandardUISubtitlePanel newPanel)
		{
		}

		[Token(Token = "0x6001802")]
		[Address(RVA = "0x12E9580", Offset = "0x12E9580", VA = "0x12E9580", Slot = "21")]
		public virtual void UnfocusAll()
		{
		}

		[Token(Token = "0x6001803")]
		[Address(RVA = "0x12E9674", Offset = "0x12E9674", VA = "0x12E9674", Slot = "8")]
		public override void ShowContinueButton()
		{
		}

		[Token(Token = "0x6001804")]
		[Address(RVA = "0x12E9710", Offset = "0x12E9710", VA = "0x12E9710", Slot = "9")]
		public override void HideContinueButton()
		{
		}

		[Token(Token = "0x6001805")]
		[Address(RVA = "0x12E97AC", Offset = "0x12E97AC", VA = "0x12E97AC", Slot = "4")]
		public override void SetActive(bool value)
		{
		}

		[Token(Token = "0x6001806")]
		[Address(RVA = "0x12E97B0", Offset = "0x12E97B0", VA = "0x12E97B0", Slot = "6")]
		public override void SetSubtitle(Subtitle subtitle)
		{
		}

		[Token(Token = "0x6001807")]
		[Address(RVA = "0x12E97B4", Offset = "0x12E97B4", VA = "0x12E97B4", Slot = "7")]
		public override void ClearSubtitle()
		{
		}

		[Token(Token = "0x6001808")]
		[Address(RVA = "0x12E97B8", Offset = "0x12E97B8", VA = "0x12E97B8", Slot = "11")]
		public override void SetActorPortraitSprite(string actorName, Sprite portraitSprite)
		{
		}

		[Token(Token = "0x6001809")]
		[Address(RVA = "0x12E9ABC", Offset = "0x12E9ABC", VA = "0x12E9ABC")]
		public void OpenSubtitlePanelsOnStartConversation()
		{
		}

		[Token(Token = "0x600180A")]
		[Address(RVA = "0x12E9CB4", Offset = "0x12E9CB4", VA = "0x12E9CB4")]
		private void CheckActorIDOnStartConversation(int actorID, HashSet<int> checkedActorIDs, HashSet<StandardUISubtitlePanel> checkedPanels)
		{
		}

		[Token(Token = "0x600180B")]
		[Address(RVA = "0x12EA098", Offset = "0x12EA098", VA = "0x12EA098")]
		protected Transform GetActorTransform(string actorName)
		{
			return null;
		}

		[Token(Token = "0x600180C")]
		[Address(RVA = "0x12EA1AC", Offset = "0x12EA1AC", VA = "0x12EA1AC")]
		public void OpenSubtitlePanelLikeStart(SubtitlePanelNumber subtitlePanelNumber)
		{
		}

		[Token(Token = "0x600180D")]
		[Address(RVA = "0x12EA524", Offset = "0x12EA524", VA = "0x12EA524", Slot = "22")]
		public virtual float GetTypewriterSpeed()
		{
			return default(float);
		}

		[Token(Token = "0x600180E")]
		[Address(RVA = "0x12EA768", Offset = "0x12EA768", VA = "0x12EA768", Slot = "23")]
		public virtual void SetTypewriterSpeed(float charactersPerSecond)
		{
		}

		[Token(Token = "0x600180F")]
		[Address(RVA = "0x12EA640", Offset = "0x12EA640", VA = "0x12EA640")]
		private AbstractTypewriterEffect GetTypewriter(StandardUISubtitlePanel panel)
		{
			return null;
		}

		[Token(Token = "0x6001810")]
		[Address(RVA = "0x12EAA7C", Offset = "0x12EAA7C", VA = "0x12EAA7C")]
		public StandardUISubtitleControls()
		{
		}
	}
	[Token(Token = "0x2000280")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA08E64", Offset = "0xA08E64")]
	public class StandardUISubtitlePanel : UIPanel
	{
		[Token(Token = "0x2000631")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DD68", Offset = "0xA0DD68")]
		private sealed class <FocusWhenOpen>d__77 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001ECD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001ECE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001ECF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public StandardUISubtitlePanel <>4__this;

			[Token(Token = "0x4001ED0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <timeout>5__2;

			[Token(Token = "0x17000575")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B02")]
				[Address(RVA = "0x12ECF4C", Offset = "0x12ECF4C", VA = "0x12ECF4C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000576")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B04")]
				[Address(RVA = "0x12ECFB4", Offset = "0x12ECFB4", VA = "0x12ECFB4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002AFF")]
			[Address(RVA = "0x12EB830", Offset = "0x12EB830", VA = "0x12EB830")]
			[DebuggerHidden]
			public <FocusWhenOpen>d__77(int <>1__state)
			{
			}

			[Token(Token = "0x6002B00")]
			[Address(RVA = "0x12ECE98", Offset = "0x12ECE98", VA = "0x12ECE98", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B01")]
			[Address(RVA = "0x12ECE9C", Offset = "0x12ECE9C", VA = "0x12ECE9C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B03")]
			[Address(RVA = "0x12ECF54", Offset = "0x12ECF54", VA = "0x12ECF54", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000632")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DD78", Offset = "0xA0DD78")]
		private sealed class <StartTypingWhenFocused>d__91 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001ED1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001ED2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001ED3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UITextField subtitleText;

			[Token(Token = "0x4001ED4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public StandardUISubtitlePanel <>4__this;

			[Token(Token = "0x4001ED5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string text;

			[Token(Token = "0x4001ED6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int fromIndex;

			[Token(Token = "0x4001ED7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <timeout>5__2;

			[Token(Token = "0x17000577")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B08")]
				[Address(RVA = "0x12ED2C0", Offset = "0x12ED2C0", VA = "0x12ED2C0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000578")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B0A")]
				[Address(RVA = "0x12ED328", Offset = "0x12ED328", VA = "0x12ED328", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B05")]
			[Address(RVA = "0x12ECA4C", Offset = "0x12ECA4C", VA = "0x12ECA4C")]
			[DebuggerHidden]
			public <StartTypingWhenFocused>d__91(int <>1__state)
			{
			}

			[Token(Token = "0x6002B06")]
			[Address(RVA = "0x12ED1B0", Offset = "0x12ED1B0", VA = "0x12ED1B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B07")]
			[Address(RVA = "0x12ED1B4", Offset = "0x12ED1B4", VA = "0x12ED1B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B09")]
			[Address(RVA = "0x12ED2C8", Offset = "0x12ED2C8", VA = "0x12ED2C8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000633")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DD88", Offset = "0xA0DD88")]
		private sealed class <SetAnimatorAtEndOfFrame>d__96 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001ED8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001ED9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public StandardUISubtitlePanel <>4__this;

			[Token(Token = "0x4001EDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RuntimeAnimatorController animatorController;

			[Token(Token = "0x17000579")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B0E")]
				[Address(RVA = "0x12ED140", Offset = "0x12ED140", VA = "0x12ED140", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700057A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B10")]
				[Address(RVA = "0x12ED1A8", Offset = "0x12ED1A8", VA = "0x12ED1A8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B0B")]
			[Address(RVA = "0x12ECD64", Offset = "0x12ECD64", VA = "0x12ECD64")]
			[DebuggerHidden]
			public <SetAnimatorAtEndOfFrame>d__96(int <>1__state)
			{
			}

			[Token(Token = "0x6002B0C")]
			[Address(RVA = "0x12ECFBC", Offset = "0x12ECFBC", VA = "0x12ECFBC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B0D")]
			[Address(RVA = "0x12ECFC0", Offset = "0x12ECFC0", VA = "0x12ECFC0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B0F")]
			[Address(RVA = "0x12ED148", Offset = "0x12ED148", VA = "0x12ED148", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1B970", Offset = "0xA1B970")]
		public RectTransform panel;

		[Token(Token = "0x4000E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1B9A8", Offset = "0xA1B9A8")]
		public Image portraitImage;

		[Token(Token = "0x4000E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1B9E0", Offset = "0xA1B9E0")]
		public UITextField portraitName;

		[Token(Token = "0x4000E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1BA18", Offset = "0xA1BA18")]
		public UITextField subtitleText;

		[Token(Token = "0x4000E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1BA50", Offset = "0xA1BA50")]
		public bool addSpeakerName;

		[Token(Token = "0x4000E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1BA88", Offset = "0xA1BA88")]
		public string addSpeakerNameFormat;

		[Token(Token = "0x4000E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1BAC0", Offset = "0xA1BAC0")]
		public bool accumulateText;

		[Token(Token = "0x4000E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1BAF8", Offset = "0xA1BAF8")]
		public bool delayTypewriterUntilOpen;

		[Token(Token = "0x4000E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1BB30", Offset = "0xA1BB30")]
		public Button continueButton;

		[Token(Token = "0x4000E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1BB68", Offset = "0xA1BB68")]
		public UIVisibility visibility;

		[Token(Token = "0x4000E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1BBA0", Offset = "0xA1BBA0")]
		public string focusAnimationTrigger;

		[Token(Token = "0x4000E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1BBD8", Offset = "0xA1BBD8")]
		public string unfocusAnimationTrigger;

		[Token(Token = "0x4000E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1BC10", Offset = "0xA1BC10")]
		public bool useAnimatedPortraits;

		[Token(Token = "0x4000E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE9")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1BC48", Offset = "0xA1BC48")]
		public bool onlyShowNPCPortraits;

		[Token(Token = "0x4000E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEA")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1BC80", Offset = "0xA1BC80")]
		public bool clearTextOnClose;

		[Token(Token = "0x4000E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public UnityEvent onFocus;

		[Token(Token = "0x4000E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public UnityEvent onUnfocus;

		[Token(Token = "0x4000E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1BCB8", Offset = "0xA1BCB8")]
		private bool m_hasFocus;

		[Token(Token = "0x4000E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Subtitle m_currentSubtitle;

		[Token(Token = "0x4000E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1BD04", Offset = "0xA1BD04")]
		private string <portraitActorName>k__BackingField;

		[Token(Token = "0x4000E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private bool m_haveSavedOriginalColor;

		[Token(Token = "0x4000E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1BD14", Offset = "0xA1BD14")]
		private Color <originalColor>k__BackingField;

		[Token(Token = "0x4000E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private string m_accumulatedText;

		[Token(Token = "0x4000E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private Animator m_animator;

		[Token(Token = "0x4000E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private bool m_isDefaultNPCPanel;

		[Token(Token = "0x4000E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x141")]
		private bool m_isDefaultPCPanel;

		[Token(Token = "0x4000E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private int m_panelNumber;

		[Token(Token = "0x4000E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public Transform m_actorOverridingPanel;

		[Token(Token = "0x4000E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private Coroutine m_focusWhenOpenCoroutine;

		[Token(Token = "0x170002C4")]
		public bool hasFocus
		{
			[Token(Token = "0x6001811")]
			[Address(RVA = "0x12EABEC", Offset = "0x12EABEC", VA = "0x12EABEC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001812")]
			[Address(RVA = "0x12EABF4", Offset = "0x12EABF4", VA = "0x12EABF4")]
			set
			{
			}
		}

		[Token(Token = "0x170002C5")]
		public override bool waitForShowAnimation
		{
			[Token(Token = "0x6001813")]
			[Address(RVA = "0x12EAC00", Offset = "0x12EAC00", VA = "0x12EAC00", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002C6")]
		public virtual Subtitle currentSubtitle
		{
			[Token(Token = "0x6001814")]
			[Address(RVA = "0x12EAC08", Offset = "0x12EAC08", VA = "0x12EAC08", Slot = "16")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001815")]
			[Address(RVA = "0x12EAC10", Offset = "0x12EAC10", VA = "0x12EAC10", Slot = "17")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002C7")]
		public string portraitActorName
		{
			[Token(Token = "0x6001816")]
			[Address(RVA = "0x12EAC18", Offset = "0x12EAC18", VA = "0x12EAC18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2C830", Offset = "0xA2C830")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001817")]
			[Address(RVA = "0x12EAC20", Offset = "0x12EAC20", VA = "0x12EAC20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2C840", Offset = "0xA2C840")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002C8")]
		protected bool haveSavedOriginalColor
		{
			[Token(Token = "0x6001818")]
			[Address(RVA = "0x12EAC28", Offset = "0x12EAC28", VA = "0x12EAC28")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001819")]
			[Address(RVA = "0x12EAC30", Offset = "0x12EAC30", VA = "0x12EAC30")]
			set
			{
			}
		}

		[Token(Token = "0x170002C9")]
		protected Color originalColor
		{
			[Token(Token = "0x600181A")]
			[Address(RVA = "0x12EAC3C", Offset = "0x12EAC3C", VA = "0x12EAC3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2C850", Offset = "0xA2C850")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x600181B")]
			[Address(RVA = "0x12EAC50", Offset = "0x12EAC50", VA = "0x12EAC50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2C860", Offset = "0xA2C860")]
			set
			{
			}
		}

		[Token(Token = "0x170002CA")]
		public string accumulatedText
		{
			[Token(Token = "0x600181C")]
			[Address(RVA = "0x12EAC64", Offset = "0x12EAC64", VA = "0x12EAC64")]
			get
			{
				return null;
			}
			[Token(Token = "0x600181D")]
			[Address(RVA = "0x12EAC6C", Offset = "0x12EAC6C", VA = "0x12EAC6C")]
			set
			{
			}
		}

		[Token(Token = "0x170002CB")]
		private Animator animator
		{
			[Token(Token = "0x600181E")]
			[Address(RVA = "0x12EAC74", Offset = "0x12EAC74", VA = "0x12EAC74")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002CC")]
		public bool isDefaultNPCPanel
		{
			[Token(Token = "0x600181F")]
			[Address(RVA = "0x12EAD48", Offset = "0x12EAD48", VA = "0x12EAD48")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001820")]
			[Address(RVA = "0x12EAD50", Offset = "0x12EAD50", VA = "0x12EAD50")]
			set
			{
			}
		}

		[Token(Token = "0x170002CD")]
		public bool isDefaultPCPanel
		{
			[Token(Token = "0x6001821")]
			[Address(RVA = "0x12EAD5C", Offset = "0x12EAD5C", VA = "0x12EAD5C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001822")]
			[Address(RVA = "0x12EAD64", Offset = "0x12EAD64", VA = "0x12EAD64")]
			set
			{
			}
		}

		[Token(Token = "0x170002CE")]
		public int panelNumber
		{
			[Token(Token = "0x6001823")]
			[Address(RVA = "0x12EAD70", Offset = "0x12EAD70", VA = "0x12EAD70")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001824")]
			[Address(RVA = "0x12EAD78", Offset = "0x12EAD78", VA = "0x12EAD78")]
			set
			{
			}
		}

		[Token(Token = "0x170002CF")]
		public Transform actorOverridingPanel
		{
			[Token(Token = "0x6001825")]
			[Address(RVA = "0x12EAD80", Offset = "0x12EAD80", VA = "0x12EAD80")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001826")]
			[Address(RVA = "0x12EAD88", Offset = "0x12EAD88", VA = "0x12EAD88")]
			set
			{
			}
		}

		[Token(Token = "0x6001827")]
		[Address(RVA = "0x12EAD90", Offset = "0x12EAD90", VA = "0x12EAD90")]
		public AbstractTypewriterEffect GetTypewriter()
		{
			return null;
		}

		[Token(Token = "0x6001828")]
		[Address(RVA = "0x12EAD98", Offset = "0x12EAD98", VA = "0x12EAD98")]
		public bool HasTypewriter()
		{
			return default(bool);
		}

		[Token(Token = "0x6001829")]
		[Address(RVA = "0x12EAE14", Offset = "0x12EAE14", VA = "0x12EAE14")]
		public float GetTypewriterSpeed()
		{
			return default(float);
		}

		[Token(Token = "0x600182A")]
		[Address(RVA = "0x12EAE2C", Offset = "0x12EAE2C", VA = "0x12EAE2C")]
		public void SetTypewriterSpeed(float charactersPerSecond)
		{
		}

		[Token(Token = "0x600182B")]
		[Address(RVA = "0x12EAEEC", Offset = "0x12EAEEC", VA = "0x12EAEEC", Slot = "18")]
		public virtual void OpenOnStartConversation(Sprite portraitSprite, string portraitName, DialogueActor dialogueActor)
		{
		}

		[Token(Token = "0x600182C")]
		[Address(RVA = "0x12EB27C", Offset = "0x12EB27C", VA = "0x12EB27C", Slot = "19")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xA2C870", Offset = "0xA2C870")]
		public virtual void OpenOnStartConversation(Texture2D portraitTexture, string portraitName, DialogueActor dialogueActor)
		{
		}

		[Token(Token = "0x600182D")]
		[Address(RVA = "0x12EB514", Offset = "0x12EB514", VA = "0x12EB514", Slot = "20")]
		public virtual void OnConversationEnd(Transform actor)
		{
		}

		[Token(Token = "0x600182E")]
		[Address(RVA = "0x12EB524", Offset = "0x12EB524", VA = "0x12EB524", Slot = "21")]
		public virtual void ShowSubtitle(Subtitle subtitle)
		{
		}

		[Token(Token = "0x600182F")]
		[Address(RVA = "0x12EB5AC", Offset = "0x12EB5AC", VA = "0x12EB5AC", Slot = "22")]
		public virtual void HideSubtitle(Subtitle subtitle)
		{
		}

		[Token(Token = "0x6001830")]
		[Address(RVA = "0x12EB5F4", Offset = "0x12EB5F4", VA = "0x12EB5F4", Slot = "23")]
		public virtual void HideImmediate()
		{
		}

		[Token(Token = "0x6001831")]
		[Address(RVA = "0x12EB674", Offset = "0x12EB674", VA = "0x12EB674", Slot = "13")]
		protected override void OnHidden()
		{
		}

		[Token(Token = "0x6001832")]
		[Address(RVA = "0x12EB6C0", Offset = "0x12EB6C0", VA = "0x12EB6C0", Slot = "8")]
		public override void Open()
		{
		}

		[Token(Token = "0x6001833")]
		[Address(RVA = "0x12EB6C8", Offset = "0x12EB6C8", VA = "0x12EB6C8", Slot = "9")]
		public override void Close()
		{
		}

		[Token(Token = "0x6001834")]
		[Address(RVA = "0x12EB71C", Offset = "0x12EB71C", VA = "0x12EB71C", Slot = "24")]
		public virtual void Focus()
		{
		}

		[Token(Token = "0x6001835")]
		[Address(RVA = "0x12EB7C0", Offset = "0x12EB7C0", VA = "0x12EB7C0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA2C8A8", Offset = "0xA2C8A8")]
		protected IEnumerator FocusWhenOpen()
		{
			return null;
		}

		[Token(Token = "0x6001836")]
		[Address(RVA = "0x12EB85C", Offset = "0x12EB85C", VA = "0x12EB85C", Slot = "25")]
		protected virtual void FocusNow()
		{
		}

		[Token(Token = "0x6001837")]
		[Address(RVA = "0x12EB950", Offset = "0x12EB950", VA = "0x12EB950")]
		private void OnFocused()
		{
		}

		[Token(Token = "0x6001838")]
		[Address(RVA = "0x12EB95C", Offset = "0x12EB95C", VA = "0x12EB95C", Slot = "26")]
		public virtual void Unfocus()
		{
		}

		[Token(Token = "0x6001839")]
		[Address(RVA = "0x12EBA40", Offset = "0x12EBA40", VA = "0x12EBA40")]
		protected void ActivateUIElements()
		{
		}

		[Token(Token = "0x600183A")]
		[Address(RVA = "0x12EB634", Offset = "0x12EB634", VA = "0x12EB634")]
		protected void DeactivateUIElements()
		{
		}

		[Token(Token = "0x600183B")]
		[Address(RVA = "0x12EBA54", Offset = "0x12EBA54", VA = "0x12EBA54", Slot = "27")]
		protected virtual void SetUIElementsActive(bool value)
		{
		}

		[Token(Token = "0x600183C")]
		[Address(RVA = "0x12EBBB0", Offset = "0x12EBBB0", VA = "0x12EBBB0", Slot = "28")]
		public virtual void ClearText()
		{
		}

		[Token(Token = "0x600183D")]
		[Address(RVA = "0x12EBC20", Offset = "0x12EBC20", VA = "0x12EBC20", Slot = "29")]
		public virtual void ShowContinueButton()
		{
		}

		[Token(Token = "0x600183E")]
		[Address(RVA = "0x12EBE18", Offset = "0x12EBE18", VA = "0x12EBE18", Slot = "30")]
		public virtual void HideContinueButton()
		{
		}

		[Token(Token = "0x600183F")]
		[Address(RVA = "0x12EBE84", Offset = "0x12EBE84", VA = "0x12EBE84", Slot = "31")]
		public virtual void FinishSubtitle()
		{
		}

		[Token(Token = "0x6001840")]
		[Address(RVA = "0x12EBF50", Offset = "0x12EBF50", VA = "0x12EBF50", Slot = "32")]
		public virtual void Select(bool allowStealFocus = true)
		{
		}

		[Token(Token = "0x6001841")]
		[Address(RVA = "0x12EBFC8", Offset = "0x12EBFC8", VA = "0x12EBFC8", Slot = "33")]
		public virtual void OnContinue()
		{
		}

		[Token(Token = "0x6001842")]
		[Address(RVA = "0x12EC110", Offset = "0x12EC110", VA = "0x12EC110", Slot = "34")]
		public virtual void SetContent(Subtitle subtitle)
		{
		}

		[Token(Token = "0x6001843")]
		[Address(RVA = "0x12EC9B8", Offset = "0x12EC9B8", VA = "0x12EC9B8", Slot = "35")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA2C90C", Offset = "0xA2C90C")]
		protected virtual IEnumerator StartTypingWhenFocused(UITextField subtitleText, string text, int fromIndex)
		{
			return null;
		}

		[Token(Token = "0x6001844")]
		[Address(RVA = "0x12ECA78", Offset = "0x12ECA78", VA = "0x12ECA78", Slot = "36")]
		protected virtual void SetFormattedText(UITextField textField, string previousText, FormattedText formattedText)
		{
		}

		[Token(Token = "0x6001845")]
		[Address(RVA = "0x12ECBB8", Offset = "0x12ECBB8", VA = "0x12ECBB8", Slot = "37")]
		public virtual void SetActorPortraitSprite(string actorName, Sprite portraitSprite)
		{
		}

		[Token(Token = "0x6001846")]
		[Address(RVA = "0x12EC43C", Offset = "0x12EC43C", VA = "0x12EC43C")]
		public void CheckSubtitleAnimator(Subtitle subtitle)
		{
		}

		[Token(Token = "0x6001847")]
		[Address(RVA = "0x12EB148", Offset = "0x12EB148", VA = "0x12EB148")]
		protected void CheckDialogueActorAnimator(DialogueActor dialogueActor)
		{
		}

		[Token(Token = "0x6001848")]
		[Address(RVA = "0x12ECCE8", Offset = "0x12ECCE8", VA = "0x12ECCE8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA2C970", Offset = "0xA2C970")]
		private IEnumerator SetAnimatorAtEndOfFrame(RuntimeAnimatorController animatorController)
		{
			return null;
		}

		[Token(Token = "0x6001849")]
		[Address(RVA = "0x12ECD90", Offset = "0x12ECD90", VA = "0x12ECD90")]
		public StandardUISubtitlePanel()
		{
		}
	}
	[Token(Token = "0x2000281")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA08E9C", Offset = "0xA08E9C")]
	public class StandardUITimer : MonoBehaviour
	{
		[Token(Token = "0x2000634")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DD98", Offset = "0xA0DD98")]
		private sealed class <Countdown>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public StandardUITimer <>4__this;

			[Token(Token = "0x4001EDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float duration;

			[Token(Token = "0x4001EE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action timeoutHandler;

			[Token(Token = "0x4001EE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <endTime>5__2;

			[Token(Token = "0x1700057B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B14")]
				[Address(RVA = "0x12ED808", Offset = "0x12ED808", VA = "0x12ED808", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700057C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B16")]
				[Address(RVA = "0x12ED870", Offset = "0x12ED870", VA = "0x12ED870", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B11")]
			[Address(RVA = "0x12ED580", Offset = "0x12ED580", VA = "0x12ED580")]
			[DebuggerHidden]
			public <Countdown>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6002B12")]
			[Address(RVA = "0x12ED67C", Offset = "0x12ED67C", VA = "0x12ED67C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B13")]
			[Address(RVA = "0x12ED680", Offset = "0x12ED680", VA = "0x12ED680", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B15")]
			[Address(RVA = "0x12ED810", Offset = "0x12ED810", VA = "0x12ED810", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Slider slider;

		[Token(Token = "0x4000E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_startTime;

		[Token(Token = "0x600184A")]
		[Address(RVA = "0x12ED46C", Offset = "0x12ED46C", VA = "0x12ED46C", Slot = "4")]
		public virtual void Awake()
		{
		}

		[Token(Token = "0x600184B")]
		[Address(RVA = "0x12ED4C4", Offset = "0x12ED4C4", VA = "0x12ED4C4", Slot = "5")]
		public virtual void StartCountdown(float duration, Action timeoutHandler)
		{
		}

		[Token(Token = "0x600184C")]
		[Address(RVA = "0x12ED4F0", Offset = "0x12ED4F0", VA = "0x12ED4F0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA2C9D4", Offset = "0xA2C9D4")]
		private IEnumerator Countdown(float duration, Action timeoutHandler)
		{
			return null;
		}

		[Token(Token = "0x600184D")]
		[Address(RVA = "0x12ED5AC", Offset = "0x12ED5AC", VA = "0x12ED5AC", Slot = "6")]
		public virtual void StopCountdown()
		{
		}

		[Token(Token = "0x600184E")]
		[Address(RVA = "0x12ED5B4", Offset = "0x12ED5B4", VA = "0x12ED5B4")]
		public void SkipTime(float amountToSkip)
		{
		}

		[Token(Token = "0x600184F")]
		[Address(RVA = "0x12ED5C4", Offset = "0x12ED5C4", VA = "0x12ED5C4", Slot = "7")]
		public virtual void UpdateTimeLeft(float normalizedTimeLeft)
		{
		}

		[Token(Token = "0x6001850")]
		[Address(RVA = "0x12ED674", Offset = "0x12ED674", VA = "0x12ED674")]
		public StandardUITimer()
		{
		}
	}
	[Token(Token = "0x2000282")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA08ED4", Offset = "0xA08ED4")]
	public class StandardUIColorText : MonoBehaviour
	{
		[Token(Token = "0x4000E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color color;

		[Token(Token = "0x4000E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UITextField text;

		[Token(Token = "0x4000E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color originalColor;

		[Token(Token = "0x6001851")]
		[Address(RVA = "0x139CCB4", Offset = "0x139CCB4", VA = "0x139CCB4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001852")]
		[Address(RVA = "0x139CDE8", Offset = "0x139CDE8", VA = "0x139CDE8")]
		public void ApplyColor()
		{
		}

		[Token(Token = "0x6001853")]
		[Address(RVA = "0x139CE34", Offset = "0x139CE34", VA = "0x139CE34")]
		public void UndoColor()
		{
		}

		[Token(Token = "0x6001854")]
		[Address(RVA = "0x139CE5C", Offset = "0x139CE5C", VA = "0x139CE5C")]
		public StandardUIColorText()
		{
		}
	}
	[Token(Token = "0x2000283")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA08F0C", Offset = "0xA08F0C")]
	public class StandardUIContinueButtonFastForward : MonoBehaviour
	{
		[Token(Token = "0x4000E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1BD24", Offset = "0xA1BD24")]
		public StandardDialogueUI dialogueUI;

		[Token(Token = "0x4000E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1BD5C", Offset = "0xA1BD5C")]
		public AbstractTypewriterEffect typewriterEffect;

		[Token(Token = "0x4000E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1BD94", Offset = "0xA1BD94")]
		public bool hideContinueButtonOnContinue;

		[Token(Token = "0x4000E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1BDCC", Offset = "0xA1BDCC")]
		public bool continueSubtitlePanel;

		[Token(Token = "0x4000E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1BE04", Offset = "0xA1BE04")]
		public bool continueAlertPanel;

		[Token(Token = "0x4000E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Button continueButton;

		[Token(Token = "0x4000E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AbstractDialogueUI m_runtimeDialogueUI;

		[Token(Token = "0x170002D0")]
		private AbstractDialogueUI runtimeDialogueUI
		{
			[Token(Token = "0x6001855")]
			[Address(RVA = "0x139D1C0", Offset = "0x139D1C0", VA = "0x139D1C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001856")]
		[Address(RVA = "0x139D32C", Offset = "0x139D32C", VA = "0x139D32C", Slot = "4")]
		public virtual void Awake()
		{
		}

		[Token(Token = "0x6001857")]
		[Address(RVA = "0x139D3D4", Offset = "0x139D3D4", VA = "0x139D3D4", Slot = "5")]
		public virtual void OnFastForward()
		{
		}

		[Token(Token = "0x6001858")]
		[Address(RVA = "0x139D584", Offset = "0x139D584", VA = "0x139D584")]
		public StandardUIContinueButtonFastForward()
		{
		}
	}
	[Token(Token = "0x2000284")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA08F44", Offset = "0xA08F44")]
	[DisallowMultipleComponent]
	public class StandardUIIgnorePauseCodes : MonoBehaviour
	{
		[Token(Token = "0x2000635")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DDA8", Offset = "0xA0DDA8")]
		private sealed class <Clean>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public StandardUIIgnorePauseCodes <>4__this;

			[Token(Token = "0x1700057D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B1A")]
				[Address(RVA = "0x139E1C4", Offset = "0x139E1C4", VA = "0x139E1C4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700057E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B1C")]
				[Address(RVA = "0x139E22C", Offset = "0x139E22C", VA = "0x139E22C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B17")]
			[Address(RVA = "0x139DFF0", Offset = "0x139DFF0", VA = "0x139DFF0")]
			[DebuggerHidden]
			public <Clean>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6002B18")]
			[Address(RVA = "0x139E084", Offset = "0x139E084", VA = "0x139E084", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B19")]
			[Address(RVA = "0x139E088", Offset = "0x139E088", VA = "0x139E088", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B1B")]
			[Address(RVA = "0x139E1CC", Offset = "0x139E1CC", VA = "0x139E1CC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private UITextField text;

		[Token(Token = "0x6001859")]
		[Address(RVA = "0x139DE48", Offset = "0x139DE48", VA = "0x139DE48")]
		public void Start()
		{
		}

		[Token(Token = "0x600185A")]
		[Address(RVA = "0x139DF7C", Offset = "0x139DF7C", VA = "0x139DF7C")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x600185B")]
		[Address(RVA = "0x139DED0", Offset = "0x139DED0", VA = "0x139DED0")]
		public void CheckText()
		{
		}

		[Token(Token = "0x600185C")]
		[Address(RVA = "0x139DF80", Offset = "0x139DF80", VA = "0x139DF80")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA2CA38", Offset = "0xA2CA38")]
		private IEnumerator Clean()
		{
			return null;
		}

		[Token(Token = "0x600185D")]
		[Address(RVA = "0x139E01C", Offset = "0x139E01C", VA = "0x139E01C")]
		public StandardUIIgnorePauseCodes()
		{
		}
	}
	[Token(Token = "0x2000285")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA08F90", Offset = "0xA08F90")]
	public class StandardUIButtonTemplate : StandardUIContentTemplate
	{
		[Token(Token = "0x4000E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1BE3C", Offset = "0xA1BE3C")]
		public Button button;

		[Token(Token = "0x4000E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UITextField label;

		[Token(Token = "0x600185E")]
		[Address(RVA = "0x139CBA4", Offset = "0x139CBA4", VA = "0x139CBA4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600185F")]
		[Address(RVA = "0x139CC88", Offset = "0x139CC88", VA = "0x139CC88")]
		public void Assign(string labelText)
		{
		}

		[Token(Token = "0x6001860")]
		[Address(RVA = "0x139CCA4", Offset = "0x139CCA4", VA = "0x139CCA4")]
		public StandardUIButtonTemplate()
		{
		}
	}
	[Token(Token = "0x2000286")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA08FC8", Offset = "0xA08FC8")]
	public class StandardUIContainerTemplate : StandardUIContentTemplate
	{
		[Serializable]
		[Token(Token = "0x2000636")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DDB8", Offset = "0xA0DDB8")]
		private sealed class <>c
		{
			[Token(Token = "0x4001EE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001EE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<StandardUIContentTemplate> <>9__4_0;

			[Token(Token = "0x6002B1E")]
			[Address(RVA = "0x139D198", Offset = "0x139D198", VA = "0x139D198")]
			public <>c()
			{
			}

			[Token(Token = "0x6002B1F")]
			[Address(RVA = "0x139D1A0", Offset = "0x139D1A0", VA = "0x139D1A0")]
			internal void <Despawn>b__4_0(StandardUIContentTemplate instance)
			{
			}
		}

		[NonSerialized]
		[Token(Token = "0x4000E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<StandardUIContentTemplate> m_instances;

		[Token(Token = "0x170002D1")]
		public List<StandardUIContentTemplate> instances
		{
			[Token(Token = "0x6001861")]
			[Address(RVA = "0x139CE64", Offset = "0x139CE64", VA = "0x139CE64")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001862")]
		[Address(RVA = "0x139CE6C", Offset = "0x139CE6C", VA = "0x139CE6C")]
		public void AddInstanceToContainer(StandardUIContentTemplate instance)
		{
		}

		[Token(Token = "0x6001863")]
		[Address(RVA = "0x139CF28", Offset = "0x139CF28", VA = "0x139CF28", Slot = "4")]
		public override void Despawn()
		{
		}

		[Token(Token = "0x6001864")]
		[Address(RVA = "0x139D0C4", Offset = "0x139D0C4", VA = "0x139D0C4")]
		public StandardUIContainerTemplate()
		{
		}
	}
	[Token(Token = "0x2000287")]
	public abstract class StandardUIContentTemplate : MonoBehaviour
	{
		[Token(Token = "0x6001865")]
		[Address(RVA = "0x139D048", Offset = "0x139D048", VA = "0x139D048", Slot = "4")]
		public virtual void Despawn()
		{
		}

		[Token(Token = "0x6001866")]
		[Address(RVA = "0x139CCAC", Offset = "0x139CCAC", VA = "0x139CCAC")]
		protected StandardUIContentTemplate()
		{
		}
	}
	[Token(Token = "0x2000288")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA09000", Offset = "0xA09000")]
	public class StandardUIFoldoutTemplate : StandardUIContentTemplate
	{
		[Token(Token = "0x4000E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Button foldoutButton;

		[Token(Token = "0x4000E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UITextField foldoutText;

		[Token(Token = "0x4000E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RectTransform interiorPanel;

		[Token(Token = "0x4000E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1BE74", Offset = "0xA1BE74")]
		private StandardUIInstancedContentManager <contentManager>k__BackingField;

		[Token(Token = "0x170002D2")]
		protected StandardUIInstancedContentManager contentManager
		{
			[Token(Token = "0x6001867")]
			[Address(RVA = "0x139D9F0", Offset = "0x139D9F0", VA = "0x139D9F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2CA9C", Offset = "0xA2CA9C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001868")]
			[Address(RVA = "0x139D9F8", Offset = "0x139D9F8", VA = "0x139D9F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2CAAC", Offset = "0xA2CAAC")]
			set
			{
			}
		}

		[Token(Token = "0x6001869")]
		[Address(RVA = "0x139DA00", Offset = "0x139DA00", VA = "0x139DA00", Slot = "5")]
		public virtual void Awake()
		{
		}

		[Token(Token = "0x600186A")]
		[Address(RVA = "0x139DBF8", Offset = "0x139DBF8", VA = "0x139DBF8")]
		public void Assign(string text, bool expanded)
		{
		}

		[Token(Token = "0x600186B")]
		[Address(RVA = "0x139DDD8", Offset = "0x139DDD8", VA = "0x139DDD8")]
		public void ToggleInterior()
		{
		}

		[Token(Token = "0x600186C")]
		[Address(RVA = "0x139DE40", Offset = "0x139DE40", VA = "0x139DE40")]
		public StandardUIFoldoutTemplate()
		{
		}
	}
	[Token(Token = "0x2000289")]
	public class StandardUIInstancedContentManager
	{
		[Token(Token = "0x4000E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected List<StandardUIContentTemplate> instances;

		[Token(Token = "0x170002D3")]
		public List<StandardUIContentTemplate> instancedContent
		{
			[Token(Token = "0x600186D")]
			[Address(RVA = "0x139E7D8", Offset = "0x139E7D8", VA = "0x139E7D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600186E")]
		[Address(RVA = "0x139DD2C", Offset = "0x139DD2C", VA = "0x139DD2C")]
		public void Clear()
		{
		}

		[Token(Token = "0x600186F")]
		public T Instantiate<T>(T template) where T : StandardUIContentTemplate
		{
			return null;
		}

		[Token(Token = "0x6001870")]
		[Address(RVA = "0x139E7E0", Offset = "0x139E7E0", VA = "0x139E7E0")]
		public void Add(StandardUIContentTemplate instance, RectTransform container)
		{
		}

		[Token(Token = "0x6001871")]
		[Address(RVA = "0x139E940", Offset = "0x139E940", VA = "0x139E940")]
		public void Remove(StandardUIContentTemplate instance)
		{
		}

		[Token(Token = "0x6001872")]
		[Address(RVA = "0x139E9BC", Offset = "0x139E9BC", VA = "0x139E9BC")]
		public StandardUIContentTemplate GetLastAdded()
		{
			return null;
		}

		[Token(Token = "0x6001873")]
		[Address(RVA = "0x139DCBC", Offset = "0x139DCBC", VA = "0x139DCBC")]
		public StandardUIInstancedContentManager()
		{
		}
	}
	[Token(Token = "0x200028A")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA09038", Offset = "0xA09038")]
	public class StandardUITextTemplate : StandardUIContentTemplate
	{
		[Token(Token = "0x4000E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1BE84", Offset = "0xA1BE84")]
		[SerializeField]
		private UITextField m_text;

		[Token(Token = "0x170002D4")]
		public UITextField text
		{
			[Token(Token = "0x6001874")]
			[Address(RVA = "0x12ED330", Offset = "0x12ED330", VA = "0x12ED330")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001875")]
			[Address(RVA = "0x12ED338", Offset = "0x12ED338", VA = "0x12ED338")]
			set
			{
			}
		}

		[Token(Token = "0x6001876")]
		[Address(RVA = "0x12ED340", Offset = "0x12ED340", VA = "0x12ED340", Slot = "5")]
		public virtual void Awake()
		{
		}

		[Token(Token = "0x6001877")]
		[Address(RVA = "0x12ED428", Offset = "0x12ED428", VA = "0x12ED428")]
		public void Assign(string text)
		{
		}

		[Token(Token = "0x6001878")]
		[Address(RVA = "0x12ED464", Offset = "0x12ED464", VA = "0x12ED464")]
		public StandardUITextTemplate()
		{
		}
	}
	[Token(Token = "0x200028B")]
	public delegate void ToggleChangedDelegate(bool value, object data);
	[Token(Token = "0x200028C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA09070", Offset = "0xA09070")]
	public class StandardUIToggleTemplate : StandardUIContentTemplate
	{
		[Serializable]
		[Token(Token = "0x2000637")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DDC8", Offset = "0xA0DDC8")]
		private sealed class <>c
		{
			[Token(Token = "0x4001EE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001EE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static ToggleChangedDelegate <>9__8_0;

			[Token(Token = "0x6002B21")]
			[Address(RVA = "0x12EE10C", Offset = "0x12EE10C", VA = "0x12EE10C")]
			public <>c()
			{
			}

			[Token(Token = "0x6002B22")]
			[Address(RVA = "0x12EE114", Offset = "0x12EE114", VA = "0x12EE114")]
			internal void <.ctor>b__8_0(bool <p0>, object <p1>)
			{
			}
		}

		[Token(Token = "0x4000E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1BED0", Offset = "0xA1BED0")]
		public UnityEngine.UI.Toggle toggle;

		[Token(Token = "0x4000E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected object m_data;

		[Token(Token = "0x14000019")]
		public event ToggleChangedDelegate onToggleChanged
		{
			[Token(Token = "0x600187D")]
			[Address(RVA = "0x12ED878", Offset = "0x12ED878", VA = "0x12ED878")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2CABC", Offset = "0xA2CABC")]
			add
			{
			}
			[Token(Token = "0x600187E")]
			[Address(RVA = "0x12ED91C", Offset = "0x12ED91C", VA = "0x12ED91C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2CACC", Offset = "0xA2CACC")]
			remove
			{
			}
		}

		[Token(Token = "0x600187F")]
		[Address(RVA = "0x12ED9C0", Offset = "0x12ED9C0", VA = "0x12ED9C0", Slot = "5")]
		public virtual void Awake()
		{
		}

		[Token(Token = "0x6001880")]
		[Address(RVA = "0x12EDAA4", Offset = "0x12EDAA4", VA = "0x12EDAA4", Slot = "6")]
		public virtual void Assign(bool isVisible, bool isOn, object data, ToggleChangedDelegate toggleDelegate)
		{
		}

		[Token(Token = "0x6001881")]
		[Address(RVA = "0x12EDBFC", Offset = "0x12EDBFC", VA = "0x12EDBFC", Slot = "7")]
		protected virtual void OnToggleChanged(bool value)
		{
		}

		[Token(Token = "0x6001882")]
		[Address(RVA = "0x12EDFB4", Offset = "0x12EDFB4", VA = "0x12EDFB4")]
		public StandardUIToggleTemplate()
		{
		}
	}
	[Token(Token = "0x200028D")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA090A8", Offset = "0xA090A8")]
	public class StandardUIQuestLogWindow : QuestLogWindow
	{
		[Token(Token = "0x2000638")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DDD8", Offset = "0xA0DDD8")]
		private sealed class <RefreshAtEndOfFrame>d__48 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public StandardUIQuestLogWindow <>4__this;

			[Token(Token = "0x1700057F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B26")]
				[Address(RVA = "0x12E2A74", Offset = "0x12E2A74", VA = "0x12E2A74", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000580")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B28")]
				[Address(RVA = "0x12E2ADC", Offset = "0x12E2ADC", VA = "0x12E2ADC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B23")]
			[Address(RVA = "0x12E2998", Offset = "0x12E2998", VA = "0x12E2998")]
			[DebuggerHidden]
			public <RefreshAtEndOfFrame>d__48(int <>1__state)
			{
			}

			[Token(Token = "0x6002B24")]
			[Address(RVA = "0x12E29C4", Offset = "0x12E29C4", VA = "0x12E29C4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B25")]
			[Address(RVA = "0x12E29C8", Offset = "0x12E29C8", VA = "0x12E29C8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B27")]
			[Address(RVA = "0x12E2A7C", Offset = "0x12E2A7C", VA = "0x12E2A7C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000639")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DDE8", Offset = "0xA0DDE8")]
		private sealed class <>c__DisplayClass51_0
		{
			[Token(Token = "0x4001EEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string targetGroupName;

			[Token(Token = "0x4001EED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public StandardUIFoldoutTemplate targetGroupFoldout;

			[Token(Token = "0x4001EEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public StandardUIQuestLogWindow <>4__this;

			[Token(Token = "0x6002B29")]
			[Address(RVA = "0x12E2890", Offset = "0x12E2890", VA = "0x12E2890")]
			public <>c__DisplayClass51_0()
			{
			}

			[Token(Token = "0x6002B2A")]
			[Address(RVA = "0x12E2898", Offset = "0x12E2898", VA = "0x12E2898")]
			internal void <OnQuestListUpdated>b__0()
			{
			}
		}

		[Token(Token = "0x200063A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DDF8", Offset = "0xA0DDF8")]
		private sealed class <>c__DisplayClass51_1
		{
			[Token(Token = "0x4001EEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string target;

			[Token(Token = "0x4001EF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass51_0 CS$<>8__locals1;

			[Token(Token = "0x6002B2B")]
			[Address(RVA = "0x12E28C4", Offset = "0x12E28C4", VA = "0x12E28C4")]
			public <>c__DisplayClass51_1()
			{
			}

			[Token(Token = "0x6002B2C")]
			[Address(RVA = "0x12E28CC", Offset = "0x12E28CC", VA = "0x12E28CC")]
			internal void <OnQuestListUpdated>b__1()
			{
			}
		}

		[Token(Token = "0x200063B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DE08", Offset = "0xA0DE08")]
		private sealed class <>c__DisplayClass51_2
		{
			[Token(Token = "0x4001EF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string target;

			[Token(Token = "0x4001EF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public StandardUIQuestLogWindow <>4__this;

			[Token(Token = "0x6002B2D")]
			[Address(RVA = "0x12E2904", Offset = "0x12E2904", VA = "0x12E2904")]
			public <>c__DisplayClass51_2()
			{
			}

			[Token(Token = "0x6002B2E")]
			[Address(RVA = "0x12E290C", Offset = "0x12E290C", VA = "0x12E290C")]
			internal void <OnQuestListUpdated>b__2()
			{
			}
		}

		[Token(Token = "0x200063C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DE18", Offset = "0xA0DE18")]
		private sealed class <SelectElement>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Selectable elementToSelect;

			[Token(Token = "0x17000581")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B32")]
				[Address(RVA = "0x12E2D28", Offset = "0x12E2D28", VA = "0x12E2D28", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000582")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B34")]
				[Address(RVA = "0x12E2D90", Offset = "0x12E2D90", VA = "0x12E2D90", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B2F")]
			[Address(RVA = "0x12E2AE4", Offset = "0x12E2AE4", VA = "0x12E2AE4")]
			[DebuggerHidden]
			public <SelectElement>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x6002B30")]
			[Address(RVA = "0x12E2B10", Offset = "0x12E2B10", VA = "0x12E2B10", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B31")]
			[Address(RVA = "0x12E2B14", Offset = "0x12E2B14", VA = "0x12E2B14", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B33")]
			[Address(RVA = "0x12E2D30", Offset = "0x12E2D30", VA = "0x12E2D30", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200063D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DE28", Offset = "0xA0DE28")]
		private sealed class <>c__DisplayClass53_0
		{
			[Token(Token = "0x4001EF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public StandardUIQuestLogWindow <>4__this;

			[Token(Token = "0x4001EF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string target;

			[Token(Token = "0x6002B35")]
			[Address(RVA = "0x12E2938", Offset = "0x12E2938", VA = "0x12E2938")]
			public <>c__DisplayClass53_0()
			{
			}

			[Token(Token = "0x6002B36")]
			[Address(RVA = "0x12E2940", Offset = "0x12E2940", VA = "0x12E2940")]
			internal void <AddShowDetailsOnSelect>b__0(BaseEventData eventData)
			{
			}

			[Token(Token = "0x6002B37")]
			[Address(RVA = "0x12E296C", Offset = "0x12E296C", VA = "0x12E296C")]
			internal void <AddShowDetailsOnSelect>b__1(BaseEventData eventData)
			{
			}
		}

		[Token(Token = "0x4000E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA1BF18", Offset = "0xA1BF18")]
		public UIPanel mainPanel;

		[Token(Token = "0x4000E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public UITextField showingActiveQuestsHeading;

		[Token(Token = "0x4000E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public UITextField showingCompletedQuestHeading;

		[Token(Token = "0x4000E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1BF50", Offset = "0xA1BF50")]
		public Button activeQuestsButton;

		[Token(Token = "0x4000E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1BF88", Offset = "0xA1BF88")]
		public Button completedQuestsButton;

		[Token(Token = "0x4000E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA1BFC0", Offset = "0xA1BFC0")]
		public RectTransform questSelectionContentContainer;

		[Token(Token = "0x4000E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public StandardUIFoldoutTemplate questGroupTemplate;

		[Token(Token = "0x4000E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1BFF8", Offset = "0xA1BFF8")]
		public StandardUIQuestTitleButtonTemplate activeQuestHeadingTemplate;

		[Token(Token = "0x4000E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1C030", Offset = "0xA1C030")]
		public StandardUIQuestTitleButtonTemplate selectedActiveQuestHeadingTemplate;

		[Token(Token = "0x4000E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1C068", Offset = "0xA1C068")]
		public StandardUIQuestTitleButtonTemplate completedQuestHeadingTemplate;

		[Token(Token = "0x4000E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1C0A0", Offset = "0xA1C0A0")]
		public StandardUIQuestTitleButtonTemplate selectedCompletedQuestHeadingTemplate;

		[Token(Token = "0x4000E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1C0D8", Offset = "0xA1C0D8")]
		public bool showNoQuestsText;

		[Token(Token = "0x4000E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1C110", Offset = "0xA1C110")]
		public bool selectFirstQuestOnOpen;

		[Token(Token = "0x4000E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD2")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1C148", Offset = "0xA1C148")]
		public bool showDetailsOnSelect;

		[Token(Token = "0x4000E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD3")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1C180", Offset = "0xA1C180")]
		public bool keepGroupsExpanded;

		[Token(Token = "0x4000E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA1C1B8", Offset = "0xA1C1B8")]
		public RectTransform questDetailsContentContainer;

		[Token(Token = "0x4000E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public StandardUITextTemplate questHeadingTextTemplate;

		[Token(Token = "0x4000E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public StandardUITextTemplate questDescriptionTextTemplate;

		[Token(Token = "0x4000E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public StandardUITextTemplate questEntryActiveTextTemplate;

		[Token(Token = "0x4000E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public StandardUITextTemplate questEntrySuccessTextTemplate;

		[Token(Token = "0x4000E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public StandardUITextTemplate questEntryFailureTextTemplate;

		[Token(Token = "0x4000E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public StandardUIButtonTemplate abandonButtonTemplate;

		[Token(Token = "0x4000E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA1C1F0", Offset = "0xA1C1F0")]
		public UIPanel abandonQuestPanel;

		[Token(Token = "0x4000E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public UITextField abandonQuestTitleText;

		[Token(Token = "0x4000E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA1C228", Offset = "0xA1C228")]
		public UnityEvent onOpen;

		[Token(Token = "0x4000E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public UnityEvent onClose;

		[Token(Token = "0x4000EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1C260", Offset = "0xA1C260")]
		public bool addEventSystemIfNeeded;

		[Token(Token = "0x4000EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private StandardUIInstancedContentManager m_selectionPanelContentManager;

		[Token(Token = "0x4000EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private StandardUIInstancedContentManager m_detailsPanelContentManager;

		[Token(Token = "0x4000EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		protected List<string> expandedGroupNames;

		[Token(Token = "0x4000EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		protected Action confirmAbandonQuestHandler;

		[Token(Token = "0x4000EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private Coroutine m_refreshCoroutine;

		[Token(Token = "0x4000EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private bool m_isAwake;

		[Token(Token = "0x4000EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public string foldoutToSelect;

		[Token(Token = "0x4000EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public string questTitleToSelect;

		[Token(Token = "0x170002D5")]
		protected StandardUIInstancedContentManager selectionPanelContentManager
		{
			[Token(Token = "0x6001883")]
			[Address(RVA = "0x13A0F50", Offset = "0x13A0F50", VA = "0x13A0F50")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001884")]
			[Address(RVA = "0x13A0F58", Offset = "0x13A0F58", VA = "0x13A0F58")]
			set
			{
			}
		}

		[Token(Token = "0x170002D6")]
		protected StandardUIInstancedContentManager detailsPanelContentManager
		{
			[Token(Token = "0x6001885")]
			[Address(RVA = "0x13A0F60", Offset = "0x13A0F60", VA = "0x13A0F60")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001886")]
			[Address(RVA = "0x13A0F68", Offset = "0x13A0F68", VA = "0x13A0F68")]
			set
			{
			}
		}

		[Token(Token = "0x6001887")]
		[Address(RVA = "0x13A0F70", Offset = "0x13A0F70", VA = "0x13A0F70", Slot = "9")]
		public override void Awake()
		{
		}

		[Token(Token = "0x6001888")]
		[Address(RVA = "0x13A1004", Offset = "0x13A1004", VA = "0x13A1004", Slot = "29")]
		protected virtual void InitializeTemplates()
		{
		}

		[Token(Token = "0x6001889")]
		[Address(RVA = "0x13A1544", Offset = "0x13A1544", VA = "0x13A1544", Slot = "5")]
		public override void OpenWindow(Action openedWindowHandler)
		{
		}

		[Token(Token = "0x600188A")]
		[Address(RVA = "0x13A1598", Offset = "0x13A1598", VA = "0x13A1598", Slot = "6")]
		public override void CloseWindow(Action closedWindowHandler)
		{
		}

		[Token(Token = "0x600188B")]
		[Address(RVA = "0x13A15E8", Offset = "0x13A15E8", VA = "0x13A15E8", Slot = "30")]
		public virtual void Toggle()
		{
		}

		[Token(Token = "0x600188C")]
		[Address(RVA = "0x13A1604", Offset = "0x13A1604", VA = "0x13A1604", Slot = "31")]
		public virtual bool IsGroupExpanded(string groupName)
		{
			return default(bool);
		}

		[Token(Token = "0x600188D")]
		[Address(RVA = "0x13A1688", Offset = "0x13A1688", VA = "0x13A1688", Slot = "32")]
		public virtual void ToggleGroup(string groupName)
		{
		}

		[Token(Token = "0x600188E")]
		[Address(RVA = "0x13A1734", Offset = "0x13A1734", VA = "0x13A1734")]
		protected void SetStateToggleButtons()
		{
		}

		[Token(Token = "0x600188F")]
		[Address(RVA = "0x13A1848", Offset = "0x13A1848", VA = "0x13A1848", Slot = "33")]
		public virtual void Repaint()
		{
		}

		[Token(Token = "0x6001890")]
		[Address(RVA = "0x13A1890", Offset = "0x13A1890", VA = "0x13A1890")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA2CADC", Offset = "0xA2CADC")]
		private IEnumerator RefreshAtEndOfFrame()
		{
			return null;
		}

		[Token(Token = "0x6001891")]
		[Address(RVA = "0x13A1900", Offset = "0x13A1900", VA = "0x13A1900", Slot = "7")]
		public override void OnQuestListUpdated()
		{
		}

		[Token(Token = "0x6001892")]
		[Address(RVA = "0x13A24F4", Offset = "0x13A24F4", VA = "0x13A24F4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA2CB40", Offset = "0xA2CB40")]
		protected IEnumerator SelectElement(Selectable elementToSelect)
		{
			return null;
		}

		[Token(Token = "0x6001893")]
		[Address(RVA = "0x13A2564", Offset = "0x13A2564", VA = "0x13A2564", Slot = "34")]
		protected virtual void AddShowDetailsOnSelect(Button button, string target)
		{
		}

		[Token(Token = "0x6001894")]
		[Address(RVA = "0x13A274C", Offset = "0x13A274C", VA = "0x13A274C", Slot = "35")]
		protected virtual void OnClickGroup(string groupName, StandardUIFoldoutTemplate groupFoldout)
		{
		}

		[Token(Token = "0x6001895")]
		[Address(RVA = "0x13A2784", Offset = "0x13A2784", VA = "0x13A2784", Slot = "36")]
		protected virtual void ShowDetailsOnSelect(string questTitle)
		{
		}

		[Token(Token = "0x6001896")]
		[Address(RVA = "0x13A27D4", Offset = "0x13A27D4", VA = "0x13A27D4", Slot = "37")]
		protected virtual void OnClickQuest(string questTitle)
		{
		}

		[Token(Token = "0x6001897")]
		[Address(RVA = "0x13A27E4", Offset = "0x13A27E4", VA = "0x13A27E4", Slot = "38")]
		public virtual void SelectQuest(string questTitle)
		{
		}

		[Token(Token = "0x6001898")]
		[Address(RVA = "0x13A27F8", Offset = "0x13A27F8", VA = "0x13A27F8", Slot = "39")]
		protected virtual void RepaintSelectedQuest(QuestInfo quest)
		{
		}

		[Token(Token = "0x6001899")]
		[Address(RVA = "0x13A2ACC", Offset = "0x13A2ACC", VA = "0x13A2ACC", Slot = "40")]
		protected virtual StandardUITextTemplate GetEntryTemplate(QuestState state)
		{
			return null;
		}

		[Token(Token = "0x600189A")]
		[Address(RVA = "0x13A2B9C", Offset = "0x13A2B9C", VA = "0x13A2B9C", Slot = "41")]
		public virtual void OnToggleTracking(bool value, object data)
		{
		}

		[Token(Token = "0x600189B")]
		[Address(RVA = "0x13A2C40", Offset = "0x13A2C40", VA = "0x13A2C40", Slot = "8")]
		public override void ConfirmAbandonQuest(string title, Action confirmAbandonQuestHandler)
		{
		}

		[Token(Token = "0x600189C")]
		[Address(RVA = "0x13A2D38", Offset = "0x13A2D38", VA = "0x13A2D38", Slot = "42")]
		public virtual void AbandonQuestConfirmed()
		{
		}

		[Token(Token = "0x600189D")]
		[Address(RVA = "0x13A2D70", Offset = "0x13A2D70", VA = "0x13A2D70", Slot = "17")]
		protected override void ShowQuests(QuestState questStateMask)
		{
		}

		[Token(Token = "0x600189E")]
		[Address(RVA = "0x13A2DB8", Offset = "0x13A2DB8", VA = "0x13A2DB8")]
		public StandardUIQuestLogWindow()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200028E")]
	public class StandardUIQuestTemplateAlternateDescriptions
	{
		[Token(Token = "0x4000EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1C298", Offset = "0xA1C298")]
		public UITextField successDescription;

		[Token(Token = "0x4000EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1C2D0", Offset = "0xA1C2D0")]
		public UITextField failureDescription;

		[Token(Token = "0x600189F")]
		[Address(RVA = "0x12E2D98", Offset = "0x12E2D98", VA = "0x12E2D98")]
		public void SetActive(bool value)
		{
		}

		[Token(Token = "0x60018A0")]
		[Address(RVA = "0x12E2DE0", Offset = "0x12E2DE0", VA = "0x12E2DE0")]
		public StandardUIQuestTemplateAlternateDescriptions()
		{
		}
	}
	[Token(Token = "0x200028F")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA090E0", Offset = "0xA090E0")]
	public class StandardUIQuestTitleButtonTemplate : StandardUIContentTemplate
	{
		[Token(Token = "0x4000EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA1C308", Offset = "0xA1C308")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1C308", Offset = "0xA1C308")]
		public Button button;

		[Token(Token = "0x4000EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1C368", Offset = "0xA1C368")]
		public UITextField label;

		[Token(Token = "0x4000EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA1C3A0", Offset = "0xA1C3A0")]
		public StandardUIToggleTemplate trackToggleTemplate;

		[Token(Token = "0x60018A1")]
		[Address(RVA = "0x12E2DE8", Offset = "0x12E2DE8", VA = "0x12E2DE8", Slot = "5")]
		public virtual void Awake()
		{
		}

		[Token(Token = "0x60018A2")]
		[Address(RVA = "0x12E2F6C", Offset = "0x12E2F6C", VA = "0x12E2F6C", Slot = "6")]
		public virtual void Assign(string questName, string displayName, ToggleChangedDelegate trackToggleDelegate)
		{
		}

		[Token(Token = "0x60018A3")]
		[Address(RVA = "0x12E30CC", Offset = "0x12E30CC", VA = "0x12E30CC")]
		public StandardUIQuestTitleButtonTemplate()
		{
		}
	}
	[Token(Token = "0x2000290")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA09118", Offset = "0xA09118")]
	public class StandardUIQuestTrackTemplate : MonoBehaviour
	{
		[Token(Token = "0x4000EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA1C3D8", Offset = "0xA1C3D8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1C3D8", Offset = "0xA1C3D8")]
		public UITextField description;

		[Token(Token = "0x4000EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StandardUIQuestTemplateAlternateDescriptions alternateDescriptions;

		[Token(Token = "0x4000EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA1C438", Offset = "0xA1C438")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1C438", Offset = "0xA1C438")]
		public Transform entryContainer;

		[Token(Token = "0x4000EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1C498", Offset = "0xA1C498")]
		public UITextField entryDescription;

		[Token(Token = "0x4000EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public StandardUIQuestTemplateAlternateDescriptions alternateEntryDescriptions;

		[Token(Token = "0x4000EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected List<GameObject> m_instances;

		[Token(Token = "0x4000EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected int numEntries;

		[Token(Token = "0x170002D7")]
		public bool arePropertiesAssigned
		{
			[Token(Token = "0x60018A4")]
			[Address(RVA = "0x12E30D4", Offset = "0x12E30D4", VA = "0x12E30D4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60018A5")]
		[Address(RVA = "0x12E30F4", Offset = "0x12E30F4", VA = "0x12E30F4", Slot = "4")]
		public virtual void Initialize()
		{
		}

		[Token(Token = "0x60018A6")]
		[Address(RVA = "0x12E32E0", Offset = "0x12E32E0", VA = "0x12E32E0", Slot = "5")]
		public virtual void SetDescription(string text, QuestState questState)
		{
		}

		[Token(Token = "0x60018A7")]
		[Address(RVA = "0x12E35A8", Offset = "0x12E35A8", VA = "0x12E35A8", Slot = "6")]
		public virtual void AddEntryDescription(string text, QuestState entryState)
		{
		}

		[Token(Token = "0x60018A8")]
		[Address(RVA = "0x12E3470", Offset = "0x12E3470", VA = "0x12E3470")]
		protected void SetFirstValidTextElement(string text, params UITextField[] textElements)
		{
		}

		[Token(Token = "0x60018A9")]
		[Address(RVA = "0x12E3860", Offset = "0x12E3860", VA = "0x12E3860")]
		protected void InstantiateFirstValidTextElement(string text, Transform container, params UITextField[] textElements)
		{
		}

		[Token(Token = "0x60018AA")]
		[Address(RVA = "0x12E3A44", Offset = "0x12E3A44", VA = "0x12E3A44")]
		public StandardUIQuestTrackTemplate()
		{
		}
	}
	[Token(Token = "0x2000291")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA09150", Offset = "0xA09150")]
	public class StandardUIQuestTracker : MonoBehaviour
	{
		[Token(Token = "0x200063E")]
		public enum QuestDescriptionSource
		{
			[Token(Token = "0x4001EF9")]
			Title,
			[Token(Token = "0x4001EFA")]
			Description
		}

		[Token(Token = "0x200063F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DE38", Offset = "0xA0DE38")]
		private sealed class <RefreshAtEndOfFrame>d__28 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public StandardUIQuestTracker <>4__this;

			[Token(Token = "0x17000583")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B3B")]
				[Address(RVA = "0x12E4F70", Offset = "0x12E4F70", VA = "0x12E4F70", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000584")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B3D")]
				[Address(RVA = "0x12E4FD8", Offset = "0x12E4FD8", VA = "0x12E4FD8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B38")]
			[Address(RVA = "0x12E4334", Offset = "0x12E4334", VA = "0x12E4334")]
			[DebuggerHidden]
			public <RefreshAtEndOfFrame>d__28(int <>1__state)
			{
			}

			[Token(Token = "0x6002B39")]
			[Address(RVA = "0x12E4CA0", Offset = "0x12E4CA0", VA = "0x12E4CA0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B3A")]
			[Address(RVA = "0x12E4CA4", Offset = "0x12E4CA4", VA = "0x12E4CA4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B3C")]
			[Address(RVA = "0x12E4F78", Offset = "0x12E4F78", VA = "0x12E4F78", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1C4D0", Offset = "0xA1C4D0")]
		public string playerPrefsToggleKey;

		[Token(Token = "0x4000EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1C508", Offset = "0xA1C508")]
		public Transform container;

		[Token(Token = "0x4000EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1C540", Offset = "0xA1C540")]
		public bool showContainerIfEmpty;

		[Token(Token = "0x4000EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1C578", Offset = "0xA1C578")]
		public StandardUIQuestTrackTemplate questTrackTemplate;

		[Token(Token = "0x4000EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1C5B0", Offset = "0xA1C5B0")]
		public bool showActiveQuests;

		[Token(Token = "0x4000EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1C5E8", Offset = "0xA1C5E8")]
		public bool showCompletedQuests;

		[Token(Token = "0x4000EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1C620", Offset = "0xA1C620")]
		public bool showCompletedEntryText;

		[Token(Token = "0x4000EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1C658", Offset = "0xA1C658")]
		public QuestDescriptionSource questDescriptionSource;

		[Token(Token = "0x4000EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool visibleOnStart;

		[Token(Token = "0x4000EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected List<StandardUIQuestTrackTemplate> instantiatedItems;

		[Token(Token = "0x4000EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected List<StandardUIQuestTrackTemplate> unusedInstances;

		[Token(Token = "0x4000EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected int siblingIndexCounter;

		[Token(Token = "0x4000EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		protected bool m_started;

		[Token(Token = "0x4000EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
		protected bool isVisible;

		[Token(Token = "0x4000EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected Coroutine refreshCoroutine;

		[Token(Token = "0x60018AB")]
		[Address(RVA = "0x12E3ACC", Offset = "0x12E3ACC", VA = "0x12E3ACC", Slot = "4")]
		public virtual void Start()
		{
		}

		[Token(Token = "0x60018AC")]
		[Address(RVA = "0x12E3F7C", Offset = "0x12E3F7C", VA = "0x12E3F7C", Slot = "5")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60018AD")]
		[Address(RVA = "0x12E3F8C", Offset = "0x12E3F8C", VA = "0x12E3F8C", Slot = "6")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60018AE")]
		[Address(RVA = "0x12E3DC8", Offset = "0x12E3DC8", VA = "0x12E3DC8")]
		protected void RegisterForUpdateTrackerEvents()
		{
		}

		[Token(Token = "0x60018AF")]
		[Address(RVA = "0x12E3F90", Offset = "0x12E3F90", VA = "0x12E3F90")]
		protected void UnregisterFromUpdateTrackerEvents()
		{
		}

		[Token(Token = "0x60018B0")]
		[Address(RVA = "0x12E40B8", Offset = "0x12E40B8", VA = "0x12E40B8", Slot = "7")]
		public virtual void ShowTracker()
		{
		}

		[Token(Token = "0x60018B1")]
		[Address(RVA = "0x12E4178", Offset = "0x12E4178", VA = "0x12E4178", Slot = "8")]
		public virtual void HideTracker()
		{
		}

		[Token(Token = "0x60018B2")]
		[Address(RVA = "0x12E4230", Offset = "0x12E4230", VA = "0x12E4230", Slot = "9")]
		public virtual void ToggleTracker()
		{
		}

		[Token(Token = "0x60018B3")]
		[Address(RVA = "0x12E424C", Offset = "0x12E424C", VA = "0x12E424C", Slot = "10")]
		public virtual void OnQuestTrackingEnabled(string quest)
		{
		}

		[Token(Token = "0x60018B4")]
		[Address(RVA = "0x12E4258", Offset = "0x12E4258", VA = "0x12E4258", Slot = "11")]
		public virtual void OnQuestTrackingDisabled(string quest)
		{
		}

		[Token(Token = "0x60018B5")]
		[Address(RVA = "0x12E4264", Offset = "0x12E4264", VA = "0x12E4264")]
		public void OnConversationEnd(Transform actor)
		{
		}

		[Token(Token = "0x60018B6")]
		[Address(RVA = "0x12E4270", Offset = "0x12E4270", VA = "0x12E4270", Slot = "12")]
		public virtual void UpdateTracker()
		{
		}

		[Token(Token = "0x60018B7")]
		[Address(RVA = "0x12E42C4", Offset = "0x12E42C4", VA = "0x12E42C4", Slot = "13")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA2CBA4", Offset = "0xA2CBA4")]
		protected virtual IEnumerator RefreshAtEndOfFrame()
		{
			return null;
		}

		[Token(Token = "0x60018B8")]
		[Address(RVA = "0x12E4360", Offset = "0x12E4360", VA = "0x12E4360", Slot = "14")]
		protected virtual void AddQuestTrack(string quest)
		{
		}

		[Token(Token = "0x60018B9")]
		[Address(RVA = "0x12E46F8", Offset = "0x12E46F8", VA = "0x12E46F8", Slot = "15")]
		protected virtual string GetQuestHeading(string quest)
		{
			return null;
		}

		[Token(Token = "0x60018BA")]
		[Address(RVA = "0x12E480C", Offset = "0x12E480C", VA = "0x12E480C", Slot = "16")]
		protected virtual void SetupQuestTrackInstance(StandardUIQuestTrackTemplate questTrack, string quest, string heading)
		{
		}

		[Token(Token = "0x60018BB")]
		[Address(RVA = "0x12E4A20", Offset = "0x12E4A20", VA = "0x12E4A20", Slot = "17")]
		protected virtual string GetQuestEntryText(string quest, int entryNum, QuestState entryState)
		{
			return null;
		}

		[Token(Token = "0x60018BC")]
		[Address(RVA = "0x12E4BE4", Offset = "0x12E4BE4", VA = "0x12E4BE4")]
		public StandardUIQuestTracker()
		{
		}
	}
	[Token(Token = "0x2000292")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA09188", Offset = "0xA09188")]
	public class SelectorUseStandardUIElements : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000640")]
		public class TagInfo
		{
			[Token(Token = "0x4001EFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA25734", Offset = "0xA25734")]
			public string tag;

			[Token(Token = "0x4001EFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string defaultUseMessage;

			[Token(Token = "0x4001F00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public StandardUISelectorElements UIElements;

			[Token(Token = "0x6002B3E")]
			[Address(RVA = "0x11D7FFC", Offset = "0x11D7FFC", VA = "0x11D7FFC")]
			public TagInfo()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000641")]
		public class LayerInfo
		{
			[Token(Token = "0x4001F01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA2576C", Offset = "0xA2576C")]
			public LayerMask layerMask;

			[Token(Token = "0x4001F02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string defaultUseMessage;

			[Token(Token = "0x4001F03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public StandardUISelectorElements UIElements;

			[Token(Token = "0x6002B3F")]
			[Address(RVA = "0x11D7FF4", Offset = "0x11D7FF4", VA = "0x11D7FF4")]
			public LayerInfo()
			{
			}
		}

		[Token(Token = "0x2000642")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DE48", Offset = "0xA0DE48")]
		private sealed class <>c__DisplayClass20_0
		{
			[Token(Token = "0x4001F04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public StandardUISelectorElements instance;

			[Token(Token = "0x6002B40")]
			[Address(RVA = "0x11D7308", Offset = "0x11D7308", VA = "0x11D7308")]
			public <>c__DisplayClass20_0()
			{
			}

			[Token(Token = "0x6002B41")]
			[Address(RVA = "0x11D7EE4", Offset = "0x11D7EE4", VA = "0x11D7EE4")]
			internal bool <SetElementsForUsable>b__0(LayerInfo x)
			{
				return default(bool);
			}

			[Token(Token = "0x6002B42")]
			[Address(RVA = "0x11D7F6C", Offset = "0x11D7F6C", VA = "0x11D7F6C")]
			internal bool <SetElementsForUsable>b__1(TagInfo x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<TagInfo> tagSpecificElements;

		[Token(Token = "0x4000EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<LayerInfo> layerSpecificElements;

		[Token(Token = "0x4000EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Selector selector;

		[Token(Token = "0x4000EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ProximitySelector proximitySelector;

		[Token(Token = "0x4000EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string defaultUseMessage;

		[Token(Token = "0x4000EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Usable usable;

		[Token(Token = "0x4000ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool lastInRange;

		[Token(Token = "0x4000ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private AbstractUsableUI usableUI;

		[Token(Token = "0x4000ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool started;

		[Token(Token = "0x4000ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private string originalDefaultUseMessage;

		[Token(Token = "0x4000ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private StandardUISelectorElements elements;

		[Token(Token = "0x170002D8")]
		protected float CurrentDistance
		{
			[Token(Token = "0x60018BD")]
			[Address(RVA = "0x11D65D0", Offset = "0x11D65D0", VA = "0x11D65D0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60018BE")]
		[Address(RVA = "0x11D665C", Offset = "0x11D665C", VA = "0x11D665C")]
		private void Start()
		{
		}

		[Token(Token = "0x60018BF")]
		[Address(RVA = "0x11D6C10", Offset = "0x11D6C10", VA = "0x11D6C10")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60018C0")]
		[Address(RVA = "0x11D6C20", Offset = "0x11D6C20", VA = "0x11D6C20")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60018C1")]
		[Address(RVA = "0x11D68A8", Offset = "0x11D68A8", VA = "0x11D68A8")]
		private void ConnectDelegates()
		{
		}

		[Token(Token = "0x60018C2")]
		[Address(RVA = "0x11D6C24", Offset = "0x11D6C24", VA = "0x11D6C24")]
		private void DisconnectDelegates()
		{
		}

		[Token(Token = "0x60018C3")]
		[Address(RVA = "0x11D6EFC", Offset = "0x11D6EFC", VA = "0x11D6EFC")]
		private void SetElementsForUsable(Usable usable)
		{
		}

		[Token(Token = "0x60018C4")]
		[Address(RVA = "0x11D7310", Offset = "0x11D7310", VA = "0x11D7310")]
		private void OnSelectedUsable(Usable usable)
		{
		}

		[Token(Token = "0x60018C5")]
		[Address(RVA = "0x11D7958", Offset = "0x11D7958", VA = "0x11D7958")]
		private void OnDeselectedUsable(Usable usable)
		{
		}

		[Token(Token = "0x60018C6")]
		[Address(RVA = "0x11D74D4", Offset = "0x11D74D4", VA = "0x11D74D4")]
		private string GetUseMessage()
		{
			return null;
		}

		[Token(Token = "0x60018C7")]
		[Address(RVA = "0x11D7570", Offset = "0x11D7570", VA = "0x11D7570")]
		private void ShowControls()
		{
		}

		[Token(Token = "0x60018C8")]
		[Address(RVA = "0x11D6E24", Offset = "0x11D6E24", VA = "0x11D6E24")]
		private void HideControls()
		{
		}

		[Token(Token = "0x60018C9")]
		[Address(RVA = "0x11D6AE8", Offset = "0x11D6AE8", VA = "0x11D6AE8")]
		private void DeactivateControls()
		{
		}

		[Token(Token = "0x60018CA")]
		[Address(RVA = "0x11D7798", Offset = "0x11D7798", VA = "0x11D7798")]
		private bool IsUsableInRange()
		{
			return default(bool);
		}

		[Token(Token = "0x60018CB")]
		[Address(RVA = "0x11D7AD0", Offset = "0x11D7AD0", VA = "0x11D7AD0")]
		public void Update()
		{
		}

		[Token(Token = "0x60018CC")]
		[Address(RVA = "0x11D7B64", Offset = "0x11D7B64", VA = "0x11D7B64")]
		public void OnConversationStart(Transform actor)
		{
		}

		[Token(Token = "0x60018CD")]
		[Address(RVA = "0x11D7B68", Offset = "0x11D7B68", VA = "0x11D7B68")]
		public void OnConversationEnd(Transform actor)
		{
		}

		[Token(Token = "0x60018CE")]
		[Address(RVA = "0x11D7838", Offset = "0x11D7838", VA = "0x11D7838")]
		private void UpdateDisplay(bool inRange)
		{
		}

		[Token(Token = "0x60018CF")]
		[Address(RVA = "0x11D7C14", Offset = "0x11D7C14", VA = "0x11D7C14")]
		private void UpdateText(bool inRange)
		{
		}

		[Token(Token = "0x60018D0")]
		[Address(RVA = "0x11D7D48", Offset = "0x11D7D48", VA = "0x11D7D48")]
		private void UpdateReticle(bool inRange)
		{
		}

		[Token(Token = "0x60018D1")]
		[Address(RVA = "0x11D79F8", Offset = "0x11D79F8", VA = "0x11D79F8")]
		private bool CanTriggerAnimations()
		{
			return default(bool);
		}

		[Token(Token = "0x60018D2")]
		[Address(RVA = "0x11D7E34", Offset = "0x11D7E34", VA = "0x11D7E34")]
		public SelectorUseStandardUIElements()
		{
		}
	}
	[Token(Token = "0x2000293")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA091C0", Offset = "0xA091C0")]
	public class StandardUISelectorElements : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000643")]
		public class AnimationTransitions
		{
			[Token(Token = "0x4001F05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string showTrigger;

			[Token(Token = "0x4001F06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string hideTrigger;

			[Token(Token = "0x6002B43")]
			[Address(RVA = "0x12E7434", Offset = "0x12E7434", VA = "0x12E7434")]
			public AnimationTransitions()
			{
			}
		}

		[Token(Token = "0x4000ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HelpBoxAttribute", RVA = "0xA1C690", Offset = "0xA1C690")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1C690", Offset = "0xA1C690")]
		public Graphic mainGraphic;

		[Token(Token = "0x4000ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1C6F4", Offset = "0xA1C6F4")]
		public UITextField nameText;

		[Token(Token = "0x4000ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1C72C", Offset = "0xA1C72C")]
		public UITextField useMessageText;

		[Token(Token = "0x4000ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1C764", Offset = "0xA1C764")]
		public Color inRangeColor;

		[Token(Token = "0x4000ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1C79C", Offset = "0xA1C79C")]
		public Color outOfRangeColor;

		[Token(Token = "0x4000ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1C7D4", Offset = "0xA1C7D4")]
		public Graphic reticleInRange;

		[Token(Token = "0x4000ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1C80C", Offset = "0xA1C80C")]
		public Graphic reticleOutOfRange;

		[Token(Token = "0x4000ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AnimationTransitions animationTransitions;

		[Token(Token = "0x4000ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1C844", Offset = "0xA1C844")]
		private Animator <animator>k__BackingField;

		[Token(Token = "0x4000ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<StandardUISelectorElements> m_instances;

		[Token(Token = "0x170002D9")]
		public Animator animator
		{
			[Token(Token = "0x60018D3")]
			[Address(RVA = "0x12E7118", Offset = "0x12E7118", VA = "0x12E7118")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2CC08", Offset = "0xA2CC08")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018D4")]
			[Address(RVA = "0x12E7120", Offset = "0x12E7120", VA = "0x12E7120")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2CC18", Offset = "0xA2CC18")]
			private set
			{
			}
		}

		[Token(Token = "0x170002DA")]
		public static List<StandardUISelectorElements> instances
		{
			[Token(Token = "0x60018D5")]
			[Address(RVA = "0x12E7128", Offset = "0x12E7128", VA = "0x12E7128")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002DB")]
		public static StandardUISelectorElements instance
		{
			[Token(Token = "0x60018D6")]
			[Address(RVA = "0x12E7190", Offset = "0x12E7190", VA = "0x12E7190")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018D7")]
		[Address(RVA = "0x12E7250", Offset = "0x12E7250", VA = "0x12E7250")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018D8")]
		[Address(RVA = "0x12E72A8", Offset = "0x12E72A8", VA = "0x12E72A8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60018D9")]
		[Address(RVA = "0x12E732C", Offset = "0x12E732C", VA = "0x12E732C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60018DA")]
		[Address(RVA = "0x12E73B0", Offset = "0x12E73B0", VA = "0x12E73B0")]
		public StandardUISelectorElements()
		{
		}
	}
	[Token(Token = "0x2000294")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA091F8", Offset = "0xA091F8")]
	public class StandardUsableUI : AbstractUsableUI
	{
		[Serializable]
		[Token(Token = "0x2000644")]
		public class AnimationTransitions
		{
			[Token(Token = "0x4001F07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string showTrigger;

			[Token(Token = "0x4001F08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string hideTrigger;

			[Token(Token = "0x6002B44")]
			[Address(RVA = "0x12EE7D0", Offset = "0x12EE7D0", VA = "0x12EE7D0")]
			public AnimationTransitions()
			{
			}
		}

		[Token(Token = "0x4000ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UITextField nameText;

		[Token(Token = "0x4000EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UITextField useMessageText;

		[Token(Token = "0x4000EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color inRangeColor;

		[Token(Token = "0x4000EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color outOfRangeColor;

		[Token(Token = "0x4000EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Graphic reticleInRange;

		[Token(Token = "0x4000EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Graphic reticleOutOfRange;

		[Token(Token = "0x4000EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AnimationTransitions animationTransitions;

		[Token(Token = "0x4000EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1C854", Offset = "0xA1C854")]
		public Canvas canvas;

		[Token(Token = "0x4000EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected Animator animator;

		[Token(Token = "0x60018DC")]
		[Address(RVA = "0x12EE118", Offset = "0x12EE118", VA = "0x12EE118", Slot = "7")]
		public virtual void Awake()
		{
		}

		[Token(Token = "0x60018DD")]
		[Address(RVA = "0x12EE240", Offset = "0x12EE240", VA = "0x12EE240", Slot = "8")]
		public virtual void Start()
		{
		}

		[Token(Token = "0x60018DE")]
		[Address(RVA = "0x12EE388", Offset = "0x12EE388", VA = "0x12EE388", Slot = "4")]
		public override void Show(string useMessage)
		{
		}

		[Token(Token = "0x60018DF")]
		[Address(RVA = "0x12EE540", Offset = "0x12EE540", VA = "0x12EE540", Slot = "5")]
		public override void Hide()
		{
		}

		[Token(Token = "0x60018E0")]
		[Address(RVA = "0x12EE620", Offset = "0x12EE620", VA = "0x12EE620")]
		public void OnBarkStart(Transform actor)
		{
		}

		[Token(Token = "0x60018E1")]
		[Address(RVA = "0x12EE62C", Offset = "0x12EE62C", VA = "0x12EE62C")]
		public void OnConversationStart(Transform actor)
		{
		}

		[Token(Token = "0x60018E2")]
		[Address(RVA = "0x12EE638", Offset = "0x12EE638", VA = "0x12EE638", Slot = "6")]
		public override void UpdateDisplay(bool inRange)
		{
		}

		[Token(Token = "0x60018E3")]
		[Address(RVA = "0x12EE4B4", Offset = "0x12EE4B4", VA = "0x12EE4B4")]
		private bool CanTriggerAnimations()
		{
			return default(bool);
		}

		[Token(Token = "0x60018E4")]
		[Address(RVA = "0x12EE74C", Offset = "0x12EE74C", VA = "0x12EE74C")]
		public StandardUsableUI()
		{
		}
	}
	[Token(Token = "0x2000295")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA09230", Offset = "0xA09230")]
	public class LocalizeTextMesh : LocalizeUI
	{
		[Token(Token = "0x60018E5")]
		[Address(RVA = "0x171BC18", Offset = "0x171BC18", VA = "0x171BC18", Slot = "10")]
		public virtual void LocalizeText()
		{
		}

		[Token(Token = "0x60018E6")]
		[Address(RVA = "0x171BC1C", Offset = "0x171BC1C", VA = "0x171BC1C", Slot = "11")]
		public virtual void UpdateFieldName(string newFieldName = "")
		{
		}

		[Token(Token = "0x60018E7")]
		[Address(RVA = "0x171BC20", Offset = "0x171BC20", VA = "0x171BC20")]
		public LocalizeTextMesh()
		{
		}
	}
	[Token(Token = "0x2000296")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA09268", Offset = "0xA09268")]
	public class UnityUIBarkUI : AbstractBarkUI
	{
		[Serializable]
		[Token(Token = "0x2000645")]
		public class AnimationTransitions
		{
			[Token(Token = "0x4001F09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string showTrigger;

			[Token(Token = "0x4001F0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string hideTrigger;

			[Token(Token = "0x6002B45")]
			[Address(RVA = "0x15DDBD4", Offset = "0x15DDBD4", VA = "0x15DDBD4")]
			public AnimationTransitions()
			{
			}
		}

		[Token(Token = "0x4000EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1C88C", Offset = "0xA1C88C")]
		public CanvasGroup canvasGroup;

		[Token(Token = "0x4000EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1C8C4", Offset = "0xA1C8C4")]
		public Text barkText;

		[Token(Token = "0x4000EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1C8FC", Offset = "0xA1C8FC")]
		public Text nameText;

		[Token(Token = "0x4000EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1C934", Offset = "0xA1C934")]
		public bool includeName;

		[Token(Token = "0x4000EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public float doneTime;

		[Token(Token = "0x4000EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AnimationTransitions animationTransitions;

		[Token(Token = "0x4000EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1C97C", Offset = "0xA1C97C")]
		public float duration;

		[Token(Token = "0x4000EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1C9B4", Offset = "0xA1C9B4")]
		public bool waitUntilSequenceEnds;

		[Token(Token = "0x4000EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		public bool waitForContinueButton;

		[Token(Token = "0x4000EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public BarkSubtitleSetting textDisplaySetting;

		[Token(Token = "0x4000EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Canvas canvas;

		[Token(Token = "0x4000EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Animator animator;

		[Token(Token = "0x170002DC")]
		public override bool isPlaying
		{
			[Token(Token = "0x60018E8")]
			[Address(RVA = "0x15DD038", Offset = "0x15DD038", VA = "0x15DD038", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60018E9")]
		[Address(RVA = "0x15DD104", Offset = "0x15DD104", VA = "0x15DD104")]
		public void Awake()
		{
		}

		[Token(Token = "0x60018EA")]
		[Address(RVA = "0x15DD230", Offset = "0x15DD230", VA = "0x15DD230")]
		public void Start()
		{
		}

		[Token(Token = "0x60018EB")]
		[Address(RVA = "0x15DD390", Offset = "0x15DD390", VA = "0x15DD390")]
		public bool ShouldShowText(Subtitle subtitle)
		{
			return default(bool);
		}

		[Token(Token = "0x60018EC")]
		[Address(RVA = "0x15DD45C", Offset = "0x15DD45C", VA = "0x15DD45C", Slot = "8")]
		public override void Bark(Subtitle subtitle)
		{
		}

		[Token(Token = "0x60018ED")]
		[Address(RVA = "0x15DD6EC", Offset = "0x15DD6EC", VA = "0x15DD6EC")]
		private void SetUIElementsActive(bool value)
		{
		}

		[Token(Token = "0x60018EE")]
		[Address(RVA = "0x15DDA1C", Offset = "0x15DDA1C", VA = "0x15DDA1C")]
		public void OnBarkEnd(Transform actor)
		{
		}

		[Token(Token = "0x60018EF")]
		[Address(RVA = "0x15DDA3C", Offset = "0x15DDA3C", VA = "0x15DDA3C")]
		public void OnContinue()
		{
		}

		[Token(Token = "0x60018F0")]
		[Address(RVA = "0x15DDA48", Offset = "0x15DDA48", VA = "0x15DDA48", Slot = "9")]
		public override void Hide()
		{
		}

		[Token(Token = "0x60018F1")]
		[Address(RVA = "0x15DD990", Offset = "0x15DD990", VA = "0x15DD990")]
		private bool CanTriggerAnimations()
		{
			return default(bool);
		}

		[Token(Token = "0x60018F2")]
		[Address(RVA = "0x15DDB68", Offset = "0x15DDB68", VA = "0x15DDB68")]
		public UnityUIBarkUI()
		{
		}
	}
	[Token(Token = "0x2000297")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA092A0", Offset = "0xA092A0")]
	public class OverrideUnityUIDialogueControls : MonoBehaviour
	{
		[Token(Token = "0x4000EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1C9EC", Offset = "0xA1C9EC")]
		public UnityUISubtitleControls subtitle;

		[Token(Token = "0x4000EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1CA24", Offset = "0xA1CA24")]
		public UnityUISubtitleControls subtitleReminder;

		[Token(Token = "0x4000EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1CA5C", Offset = "0xA1CA5C")]
		public UnityUIResponseMenuControls responseMenu;

		[Token(Token = "0x4000EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool checkedContinueButton;

		[Token(Token = "0x60018F3")]
		[Address(RVA = "0x1722BE4", Offset = "0x1722BE4", VA = "0x1722BE4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018F4")]
		[Address(RVA = "0x1722C58", Offset = "0x1722C58", VA = "0x1722C58", Slot = "4")]
		public virtual void Start()
		{
		}

		[Token(Token = "0x60018F5")]
		[Address(RVA = "0x1722CC4", Offset = "0x1722CC4", VA = "0x1722CC4", Slot = "5")]
		public virtual void ApplyToDialogueUI(UnityUIDialogueUI ui)
		{
		}

		[Token(Token = "0x60018F6")]
		[Address(RVA = "0x1722EC8", Offset = "0x1722EC8", VA = "0x1722EC8")]
		public OverrideUnityUIDialogueControls()
		{
		}
	}
	[Token(Token = "0x2000298")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA092D8", Offset = "0xA092D8")]
	public class AnimatedPortrait : MonoBehaviour
	{
		[Token(Token = "0x4000EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1CA94", Offset = "0xA1CA94")]
		public RuntimeAnimatorController animatorController;

		[Token(Token = "0x60018F7")]
		[Address(RVA = "0x14296C0", Offset = "0x14296C0", VA = "0x14296C0")]
		public AnimatedPortrait()
		{
		}
	}
	[Token(Token = "0x2000299")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA09310", Offset = "0xA09310")]
	public class UseAnimatedPortraits : MonoBehaviour
	{
		[Token(Token = "0x2000646")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DE58", Offset = "0xA0DE58")]
		private sealed class <SetAnimatorAtEndOfFrame>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UseAnimatedPortraits <>4__this;

			[Token(Token = "0x4001F0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Subtitle subtitle;

			[Token(Token = "0x17000585")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B49")]
				[Address(RVA = "0x1168288", Offset = "0x1168288", VA = "0x1168288", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000586")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B4B")]
				[Address(RVA = "0x11682F0", Offset = "0x11682F0", VA = "0x11682F0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B46")]
			[Address(RVA = "0x1167CAC", Offset = "0x1167CAC", VA = "0x1167CAC")]
			[DebuggerHidden]
			public <SetAnimatorAtEndOfFrame>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6002B47")]
			[Address(RVA = "0x11680D0", Offset = "0x11680D0", VA = "0x11680D0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B48")]
			[Address(RVA = "0x11680D4", Offset = "0x11680D4", VA = "0x11680D4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B4A")]
			[Address(RVA = "0x1168290", Offset = "0x1168290", VA = "0x1168290", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private UnityUIDialogueUI dialogueUI;

		[Token(Token = "0x4000EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator npcPortraitAnimator;

		[Token(Token = "0x4000EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Animator npcReminderPortraitAnimator;

		[Token(Token = "0x4000EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Animator pcPortraitAnimator;

		[Token(Token = "0x4000EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Animator otherAnimator;

		[Token(Token = "0x4000EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Dictionary<Transform, AnimatedPortrait> animatedPortraits;

		[Token(Token = "0x4000EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform lastSpeaker;

		[Token(Token = "0x60018F8")]
		[Address(RVA = "0x1167A9C", Offset = "0x1167A9C", VA = "0x1167A9C")]
		public void OnConversationLine(Subtitle subtitle)
		{
		}

		[Token(Token = "0x60018F9")]
		[Address(RVA = "0x1167C30", Offset = "0x1167C30", VA = "0x1167C30")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA2CC28", Offset = "0xA2CC28")]
		private IEnumerator SetAnimatorAtEndOfFrame(Subtitle subtitle)
		{
			return null;
		}

		[Token(Token = "0x60018FA")]
		[Address(RVA = "0x1167CD8", Offset = "0x1167CD8", VA = "0x1167CD8")]
		public void OnConversationResponseMenu(Response[] responses)
		{
		}

		[Token(Token = "0x60018FB")]
		[Address(RVA = "0x1168008", Offset = "0x1168008", VA = "0x1168008")]
		public void OnConversationEnd(Transform actor)
		{
		}

		[Token(Token = "0x60018FC")]
		[Address(RVA = "0x1167AE8", Offset = "0x1167AE8", VA = "0x1167AE8")]
		private bool FindDialogueUI()
		{
			return default(bool);
		}

		[Token(Token = "0x60018FD")]
		[Address(RVA = "0x1167D3C", Offset = "0x1167D3C", VA = "0x1167D3C")]
		private void SetAnimatorController(Image image, Transform speaker, ref Animator animator)
		{
		}

		[Token(Token = "0x60018FE")]
		[Address(RVA = "0x1168060", Offset = "0x1168060", VA = "0x1168060")]
		public UseAnimatedPortraits()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200029A")]
	public class UnityUIAlertControls : AbstractUIAlertControls
	{
		[Token(Token = "0x4000EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1CACC", Offset = "0xA1CACC")]
		public Graphic panel;

		[Token(Token = "0x4000EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1CB04", Offset = "0xA1CB04")]
		public Text line;

		[Token(Token = "0x4000EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1CB3C", Offset = "0xA1CB3C")]
		public Button continueButton;

		[Token(Token = "0x4000EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1CB74", Offset = "0xA1CB74")]
		public bool queueAlerts;

		[Token(Token = "0x4000EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1CBAC", Offset = "0xA1CBAC")]
		public bool waitForHideAnimation;

		[Token(Token = "0x4000EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1CBE4", Offset = "0xA1CBE4")]
		public UIAnimationTransitions animationTransitions;

		[Token(Token = "0x4000F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private UIShowHideController m_showHideController;

		[Token(Token = "0x170002DD")]
		public override bool isVisible
		{
			[Token(Token = "0x60018FF")]
			[Address(RVA = "0x15DC6C4", Offset = "0x15DC6C4", VA = "0x15DC6C4", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002DE")]
		public bool IsHiding
		{
			[Token(Token = "0x6001900")]
			[Address(RVA = "0x15DC790", Offset = "0x15DC790", VA = "0x15DC790")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002DF")]
		private UIShowHideController showHideController
		{
			[Token(Token = "0x6001901")]
			[Address(RVA = "0x15DC6EC", Offset = "0x15DC6EC", VA = "0x15DC6EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001902")]
		[Address(RVA = "0x15DC7B8", Offset = "0x15DC7B8", VA = "0x15DC7B8", Slot = "4")]
		public override void SetActive(bool value)
		{
		}

		[Token(Token = "0x6001903")]
		[Address(RVA = "0x15DC81C", Offset = "0x15DC81C", VA = "0x15DC81C")]
		private void ShowPanel()
		{
		}

		[Token(Token = "0x6001904")]
		[Address(RVA = "0x15DC888", Offset = "0x15DC888", VA = "0x15DC888")]
		private void HidePanel()
		{
		}

		[Token(Token = "0x6001905")]
		[Address(RVA = "0x15DC94C", Offset = "0x15DC94C", VA = "0x15DC94C")]
		public void ActivateUIElements()
		{
		}

		[Token(Token = "0x6001906")]
		[Address(RVA = "0x15DC9CC", Offset = "0x15DC9CC", VA = "0x15DC9CC")]
		public void DeactivateUIElements()
		{
		}

		[Token(Token = "0x6001907")]
		[Address(RVA = "0x15DCA4C", Offset = "0x15DCA4C", VA = "0x15DCA4C", Slot = "6")]
		public override void SetMessage(string message, float duration)
		{
		}

		[Token(Token = "0x6001908")]
		[Address(RVA = "0x15DCB68", Offset = "0x15DCB68", VA = "0x15DCB68")]
		public void AutoFocus(bool allowStealFocus = true)
		{
		}

		[Token(Token = "0x6001909")]
		[Address(RVA = "0x15DCBE4", Offset = "0x15DCBE4", VA = "0x15DCBE4")]
		public UnityUIAlertControls()
		{
		}
	}
	[Token(Token = "0x200029B")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA09348", Offset = "0xA09348")]
	public class UnityUIBarkSubtitleDialogueUI : UnityUIDialogueUI
	{
		[Token(Token = "0x600190A")]
		[Address(RVA = "0x15DCC4C", Offset = "0x15DCC4C", VA = "0x15DCC4C", Slot = "20")]
		public override void Awake()
		{
		}

		[Token(Token = "0x600190B")]
		[Address(RVA = "0x15DCD64", Offset = "0x15DCD64", VA = "0x15DCD64", Slot = "28")]
		public override void ShowSubtitle(Subtitle subtitle)
		{
		}

		[Token(Token = "0x600190C")]
		[Address(RVA = "0x15DCF8C", Offset = "0x15DCF8C", VA = "0x15DCF8C")]
		public UnityUIBarkSubtitleDialogueUI()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200029C")]
	public class UnityUIDialogueControls : AbstractDialogueUIControls
	{
		[Token(Token = "0x4000F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1CC1C", Offset = "0xA1CC1C")]
		public Graphic panel;

		[Token(Token = "0x4000F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1CC54", Offset = "0xA1CC54")]
		public UIAnimationTransitions animationTransitions;

		[Token(Token = "0x4000F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityUISubtitleControls npcSubtitle;

		[Token(Token = "0x4000F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityUISubtitleControls pcSubtitle;

		[Token(Token = "0x4000F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityUIResponseMenuControls responseMenu;

		[Token(Token = "0x4000F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UIShowHideController m_showHideController;

		[Token(Token = "0x170002E0")]
		public override AbstractUISubtitleControls npcSubtitleControls
		{
			[Token(Token = "0x600190D")]
			[Address(RVA = "0x15DDEFC", Offset = "0x15DDEFC", VA = "0x15DDEFC", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E1")]
		public override AbstractUISubtitleControls pcSubtitleControls
		{
			[Token(Token = "0x600190E")]
			[Address(RVA = "0x15DDF04", Offset = "0x15DDF04", VA = "0x15DDF04", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E2")]
		public override AbstractUIResponseMenuControls responseMenuControls
		{
			[Token(Token = "0x600190F")]
			[Address(RVA = "0x15DDF0C", Offset = "0x15DDF0C", VA = "0x15DDF0C", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E3")]
		private UIShowHideController showHideController
		{
			[Token(Token = "0x6001910")]
			[Address(RVA = "0x15DDF14", Offset = "0x15DDF14", VA = "0x15DDF14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001911")]
		[Address(RVA = "0x15DDFB8", Offset = "0x15DDFB8", VA = "0x15DDFB8", Slot = "4")]
		public override void SetActive(bool value)
		{
		}

		[Token(Token = "0x6001912")]
		[Address(RVA = "0x15DE090", Offset = "0x15DE090", VA = "0x15DE090", Slot = "8")]
		public override void ShowPanel()
		{
		}

		[Token(Token = "0x6001913")]
		[Address(RVA = "0x15DDFCC", Offset = "0x15DDFCC", VA = "0x15DDFCC")]
		private void HidePanel()
		{
		}

		[Token(Token = "0x6001914")]
		[Address(RVA = "0x15DE0FC", Offset = "0x15DE0FC", VA = "0x15DE0FC")]
		public void ActivateUIElements()
		{
		}

		[Token(Token = "0x6001915")]
		[Address(RVA = "0x15DE16C", Offset = "0x15DE16C", VA = "0x15DE16C")]
		public void DeactivateUIElements()
		{
		}

		[Token(Token = "0x6001916")]
		[Address(RVA = "0x15DE1EC", Offset = "0x15DE1EC", VA = "0x15DE1EC")]
		public UnityUIDialogueControls()
		{
		}
	}
	[Token(Token = "0x200029D")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA09380", Offset = "0xA09380")]
	public class UnityUIDialogueUI : CanvasDialogueUI
	{
		[Token(Token = "0x2000647")]
		private class QueuedAlert
		{
			[Token(Token = "0x4001F0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string message;

			[Token(Token = "0x4001F10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float duration;

			[Token(Token = "0x6002B4C")]
			[Address(RVA = "0x15DEA98", Offset = "0x15DEA98", VA = "0x15DEA98")]
			public QueuedAlert(string message, float duration)
			{
			}
		}

		[Token(Token = "0x2000648")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DE68", Offset = "0xA0DE68")]
		private sealed class <ShowResponsesAfterHidden>d__45 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UnityUIDialogueUI <>4__this;

			[Token(Token = "0x4001F14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Subtitle subtitle;

			[Token(Token = "0x4001F15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Response[] responses;

			[Token(Token = "0x4001F16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float timeout;

			[Token(Token = "0x4001F17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <safeguardTime>5__2;

			[Token(Token = "0x17000587")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B50")]
				[Address(RVA = "0x15DF76C", Offset = "0x15DF76C", VA = "0x15DF76C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000588")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B52")]
				[Address(RVA = "0x15DF7D4", Offset = "0x15DF7D4", VA = "0x15DF7D4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B4D")]
			[Address(RVA = "0x15DF318", Offset = "0x15DF318", VA = "0x15DF318")]
			[DebuggerHidden]
			public <ShowResponsesAfterHidden>d__45(int <>1__state)
			{
			}

			[Token(Token = "0x6002B4E")]
			[Address(RVA = "0x15DF690", Offset = "0x15DF690", VA = "0x15DF690", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B4F")]
			[Address(RVA = "0x15DF694", Offset = "0x15DF694", VA = "0x15DF694", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B51")]
			[Address(RVA = "0x15DF774", Offset = "0x15DF774", VA = "0x15DF774", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public UnityUIRoot unityUIRoot;

		[Token(Token = "0x4000F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityUIDialogueControls dialogue;

		[Token(Token = "0x4000F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Graphic[] qteIndicators;

		[Token(Token = "0x4000F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityUIAlertControls alert;

		[Token(Token = "0x4000F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1CC9C", Offset = "0xA1CC9C")]
		public bool autoFocus;

		[Token(Token = "0x4000F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1CCD4", Offset = "0xA1CCD4")]
		public bool allowStealFocus;

		[Token(Token = "0x4000F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1CD0C", Offset = "0xA1CD0C")]
		public float autoFocusCheckFrequency;

		[Token(Token = "0x4000F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1CD44", Offset = "0xA1CD44")]
		public bool findActorOverrides;

		[Token(Token = "0x4000F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1CD7C", Offset = "0xA1CD7C")]
		public bool addEventSystemIfNeeded;

		[Token(Token = "0x4000F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private UnityUIQTEControls m_qteControls;

		[Token(Token = "0x4000F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float m_nextAutoFocusCheckTime;

		[Token(Token = "0x4000F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject m_lastSelection;

		[Token(Token = "0x4000F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Queue<QueuedAlert> alertQueue;

		[Token(Token = "0x4000F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected UnityUISubtitleControls originalNPCSubtitle;

		[Token(Token = "0x4000F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected UnityUISubtitleControls originalPCSubtitle;

		[Token(Token = "0x4000F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected UnityUIResponseMenuControls originalResponseMenu;

		[Token(Token = "0x4000F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Dictionary<Transform, OverrideUnityUIDialogueControls> overrideCache;

		[Token(Token = "0x4000F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool isShowingNpcSubtitle;

		[Token(Token = "0x4000F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		private bool isShowingPcSubtitle;

		[Token(Token = "0x4000F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
		private bool isShowingResponses;

		[Token(Token = "0x4000F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		protected int alertQueueCount;

		[Token(Token = "0x4000F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected bool alertIsVisible;

		[Token(Token = "0x4000F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		protected bool alertIsHiding;

		[Token(Token = "0x170002E4")]
		public override AbstractUIRoot uiRootControls
		{
			[Token(Token = "0x6001917")]
			[Address(RVA = "0x15DE254", Offset = "0x15DE254", VA = "0x15DE254", Slot = "16")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E5")]
		public override AbstractDialogueUIControls dialogueControls
		{
			[Token(Token = "0x6001918")]
			[Address(RVA = "0x15DE25C", Offset = "0x15DE25C", VA = "0x15DE25C", Slot = "17")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E6")]
		public override AbstractUIQTEControls qteControls
		{
			[Token(Token = "0x6001919")]
			[Address(RVA = "0x15DE264", Offset = "0x15DE264", VA = "0x15DE264", Slot = "18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E7")]
		public override AbstractUIAlertControls alertControls
		{
			[Token(Token = "0x600191A")]
			[Address(RVA = "0x15DE26C", Offset = "0x15DE26C", VA = "0x15DE26C", Slot = "19")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600191B")]
		[Address(RVA = "0x15DCCC0", Offset = "0x15DCCC0", VA = "0x15DCCC0", Slot = "20")]
		public override void Awake()
		{
		}

		[Token(Token = "0x600191C")]
		[Address(RVA = "0x15DE5E8", Offset = "0x15DE5E8", VA = "0x15DE5E8", Slot = "44")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x600191D")]
		[Address(RVA = "0x15DE6BC", Offset = "0x15DE6BC", VA = "0x15DE6BC", Slot = "45")]
		public virtual void OnDisable()
		{
		}

		[Token(Token = "0x600191E")]
		[Address(RVA = "0x15DE274", Offset = "0x15DE274", VA = "0x15DE274")]
		private void FindControls()
		{
		}

		[Token(Token = "0x600191F")]
		[Address(RVA = "0x15DE784", Offset = "0x15DE784", VA = "0x15DE784")]
		public OverrideUnityUIDialogueControls FindActorOverride(Transform actor)
		{
			return null;
		}

		[Token(Token = "0x6001920")]
		[Address(RVA = "0x15DE8B8", Offset = "0x15DE8B8", VA = "0x15DE8B8")]
		public void OnSceneLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x6001921")]
		[Address(RVA = "0x15DE930", Offset = "0x15DE930", VA = "0x15DE930", Slot = "22")]
		public override void Open()
		{
		}

		[Token(Token = "0x6001922")]
		[Address(RVA = "0x15DE9CC", Offset = "0x15DE9CC", VA = "0x15DE9CC", Slot = "25")]
		public override void ShowAlert(string message, float duration)
		{
		}

		[Token(Token = "0x6001923")]
		[Address(RVA = "0x15DEB1C", Offset = "0x15DEB1C", VA = "0x15DEB1C")]
		private void ShowNextQueuedAlert()
		{
		}

		[Token(Token = "0x6001924")]
		[Address(RVA = "0x15DEAD4", Offset = "0x15DEAD4", VA = "0x15DEAD4")]
		private void StartShowingAlert(string message, float duration)
		{
		}

		[Token(Token = "0x6001925")]
		[Address(RVA = "0x15DEBA0", Offset = "0x15DEBA0", VA = "0x15DEBA0", Slot = "28")]
		public override void ShowSubtitle(Subtitle subtitle)
		{
		}

		[Token(Token = "0x6001926")]
		[Address(RVA = "0x15DEDC8", Offset = "0x15DEDC8", VA = "0x15DEDC8")]
		protected void CheckForSupercededSubtitle(CharacterType characterType)
		{
		}

		[Token(Token = "0x6001927")]
		[Address(RVA = "0x15DEEBC", Offset = "0x15DEEBC", VA = "0x15DEEBC")]
		public void CheckSubtitleAutoFocus(Subtitle subtitle)
		{
		}

		[Token(Token = "0x6001928")]
		[Address(RVA = "0x15DED7C", Offset = "0x15DED7C", VA = "0x15DED7C")]
		protected void SetIsShowingSubtitle(Subtitle subtitle, bool value)
		{
		}

		[Token(Token = "0x6001929")]
		[Address(RVA = "0x15DEF28", Offset = "0x15DEF28", VA = "0x15DEF28", Slot = "29")]
		public override void HideSubtitle(Subtitle subtitle)
		{
		}

		[Token(Token = "0x600192A")]
		[Address(RVA = "0x15DEF5C", Offset = "0x15DEF5C", VA = "0x15DEF5C", Slot = "33")]
		public override void ShowResponses(Subtitle subtitle, Response[] responses, float timeout)
		{
		}

		[Token(Token = "0x600192B")]
		[Address(RVA = "0x15DF240", Offset = "0x15DF240", VA = "0x15DF240")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA2CC8C", Offset = "0xA2CC8C")]
		private IEnumerator ShowResponsesAfterHidden(Subtitle subtitle, Response[] responses, float timeout)
		{
			return null;
		}

		[Token(Token = "0x600192C")]
		[Address(RVA = "0x15DF2D4", Offset = "0x15DF2D4", VA = "0x15DF2D4")]
		public void CheckResponseMenuAutoFocus()
		{
		}

		[Token(Token = "0x600192D")]
		[Address(RVA = "0x15DF344", Offset = "0x15DF344", VA = "0x15DF344", Slot = "34")]
		public override void HideResponses()
		{
		}

		[Token(Token = "0x600192E")]
		[Address(RVA = "0x15DEE34", Offset = "0x15DEE34", VA = "0x15DEE34")]
		public void ClearSelection()
		{
		}

		[Token(Token = "0x600192F")]
		[Address(RVA = "0x15DF440", Offset = "0x15DF440", VA = "0x15DF440", Slot = "27")]
		public override void Update()
		{
		}

		[Token(Token = "0x6001930")]
		[Address(RVA = "0x15DCF90", Offset = "0x15DCF90", VA = "0x15DCF90")]
		public UnityUIDialogueUI()
		{
		}

		[Token(Token = "0x6001931")]
		[Address(RVA = "0x15DF688", Offset = "0x15DF688", VA = "0x15DF688")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2CCF0", Offset = "0xA2CCF0")]
		[DebuggerHidden]
		private void <>n__0(Subtitle subtitle, Response[] responses, float timeout)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200029E")]
	public class UnityUIQTEControls : AbstractUIQTEControls
	{
		[Token(Token = "0x4000F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Graphic[] qteIndicators;

		[Token(Token = "0x4000F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int numVisibleQTEIndicators;

		[Token(Token = "0x170002E8")]
		public override bool areVisible
		{
			[Token(Token = "0x6001933")]
			[Address(RVA = "0x15DFBAC", Offset = "0x15DFBAC", VA = "0x15DFBAC", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001932")]
		[Address(RVA = "0x15DE758", Offset = "0x15DE758", VA = "0x15DE758")]
		public UnityUIQTEControls(Graphic[] qteIndicators)
		{
		}

		[Token(Token = "0x6001934")]
		[Address(RVA = "0x15DFBBC", Offset = "0x15DFBBC", VA = "0x15DFBBC", Slot = "4")]
		public override void SetActive(bool value)
		{
		}

		[Token(Token = "0x6001935")]
		[Address(RVA = "0x15DFC94", Offset = "0x15DFC94", VA = "0x15DFC94", Slot = "6")]
		public override void ShowIndicator(int index)
		{
		}

		[Token(Token = "0x6001936")]
		[Address(RVA = "0x15DFE04", Offset = "0x15DFE04", VA = "0x15DFE04", Slot = "7")]
		public override void HideIndicator(int index)
		{
		}

		[Token(Token = "0x6001937")]
		[Address(RVA = "0x15DFDA0", Offset = "0x15DFDA0", VA = "0x15DFDA0")]
		private bool IsQTEIndicatorVisible(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001938")]
		[Address(RVA = "0x15DFD70", Offset = "0x15DFD70", VA = "0x15DFD70")]
		private bool IsValidQTEIndex(int index)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200029F")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA093B8", Offset = "0xA093B8")]
	public class UnityUIResponseButton : MonoBehaviour
	{
		[Token(Token = "0x4000F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Button button;

		[Token(Token = "0x4000F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text label;

		[Token(Token = "0x4000F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1CDB4", Offset = "0xA1CDB4")]
		public Color defaultColor;

		[Token(Token = "0x4000F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1CDEC", Offset = "0xA1CDEC")]
		public bool setButtonColor;

		[Token(Token = "0x4000F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1CE24", Offset = "0xA1CE24")]
		public bool setLabelColor;

		[Token(Token = "0x4000F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1CE5C", Offset = "0xA1CE5C")]
		private bool <visible>k__BackingField;

		[Token(Token = "0x4000F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1CE6C", Offset = "0xA1CE6C")]
		private Response <response>k__BackingField;

		[Token(Token = "0x4000F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1CE7C", Offset = "0xA1CE7C")]
		private Transform <target>k__BackingField;

		[Token(Token = "0x170002E9")]
		public string Text
		{
			[Token(Token = "0x6001939")]
			[Address(RVA = "0x115E060", Offset = "0x115E060", VA = "0x115E060")]
			get
			{
				return null;
			}
			[Token(Token = "0x600193A")]
			[Address(RVA = "0x115E110", Offset = "0x115E110", VA = "0x115E110")]
			set
			{
			}
		}

		[Token(Token = "0x170002EA")]
		public bool clickable
		{
			[Token(Token = "0x600193B")]
			[Address(RVA = "0x115E31C", Offset = "0x115E31C", VA = "0x115E31C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600193C")]
			[Address(RVA = "0x115E3B4", Offset = "0x115E3B4", VA = "0x115E3B4")]
			set
			{
			}
		}

		[Token(Token = "0x170002EB")]
		public bool visible
		{
			[Token(Token = "0x600193D")]
			[Address(RVA = "0x115E45C", Offset = "0x115E45C", VA = "0x115E45C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2CD28", Offset = "0xA2CD28")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600193E")]
			[Address(RVA = "0x115E464", Offset = "0x115E464", VA = "0x115E464")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2CD38", Offset = "0xA2CD38")]
			set
			{
			}
		}

		[Token(Token = "0x170002EC")]
		public Response response
		{
			[Token(Token = "0x600193F")]
			[Address(RVA = "0x115E470", Offset = "0x115E470", VA = "0x115E470")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2CD48", Offset = "0xA2CD48")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001940")]
			[Address(RVA = "0x115E478", Offset = "0x115E478", VA = "0x115E478")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2CD58", Offset = "0xA2CD58")]
			set
			{
			}
		}

		[Token(Token = "0x170002ED")]
		public Transform target
		{
			[Token(Token = "0x6001941")]
			[Address(RVA = "0x115E480", Offset = "0x115E480", VA = "0x115E480")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2CD68", Offset = "0xA2CD68")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001942")]
			[Address(RVA = "0x115E488", Offset = "0x115E488", VA = "0x115E488")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2CD78", Offset = "0xA2CD78")]
			set
			{
			}
		}

		[Token(Token = "0x6001943")]
		[Address(RVA = "0x115E490", Offset = "0x115E490", VA = "0x115E490")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001944")]
		[Address(RVA = "0x115E514", Offset = "0x115E514", VA = "0x115E514")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001945")]
		[Address(RVA = "0x115E67C", Offset = "0x115E67C", VA = "0x115E67C")]
		public void SetFormattedText(FormattedText formattedText)
		{
		}

		[Token(Token = "0x6001946")]
		[Address(RVA = "0x115E77C", Offset = "0x115E77C", VA = "0x115E77C")]
		public void SetUnformattedText(string unformattedText)
		{
		}

		[Token(Token = "0x6001947")]
		[Address(RVA = "0x115E7B0", Offset = "0x115E7B0", VA = "0x115E7B0", Slot = "4")]
		protected virtual void SetColor(Color currentColor)
		{
		}

		[Token(Token = "0x6001948")]
		[Address(RVA = "0x115EAEC", Offset = "0x115EAEC", VA = "0x115EAEC")]
		public void OnClick()
		{
		}

		[Token(Token = "0x6001949")]
		[Address(RVA = "0x115EB94", Offset = "0x115EB94", VA = "0x115EB94")]
		public UnityUIResponseButton()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002A0")]
	public class UnityUIResponseMenuControls : AbstractUIResponseMenuControls
	{
		[Token(Token = "0x2000649")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DE78", Offset = "0xA0DE78")]
		private sealed class <>c__DisplayClass44_0
		{
			[Token(Token = "0x4001F18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject currentSelection;

			[Token(Token = "0x6002B53")]
			[Address(RVA = "0x1160B1C", Offset = "0x1160B1C", VA = "0x1160B1C")]
			public <>c__DisplayClass44_0()
			{
			}

			[Token(Token = "0x6002B54")]
			[Address(RVA = "0x1160D28", Offset = "0x1160D28", VA = "0x1160D28")]
			internal bool <AutoFocus>b__0(GameObject x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1CE8C", Offset = "0xA1CE8C")]
		public Graphic panel;

		[Token(Token = "0x4000F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1CEC4", Offset = "0xA1CEC4")]
		public Image pcImage;

		[Token(Token = "0x4000F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1CEFC", Offset = "0xA1CEFC")]
		public Text pcName;

		[Token(Token = "0x4000F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1CF34", Offset = "0xA1CF34")]
		public UnityUISubtitleControls subtitleReminder;

		[Token(Token = "0x4000F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1CF6C", Offset = "0xA1CF6C")]
		public Slider timer;

		[Token(Token = "0x4000F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1CFA4", Offset = "0xA1CFA4")]
		public bool selectCurrentOnTimeout;

		[Token(Token = "0x4000F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1CFDC", Offset = "0xA1CFDC")]
		public UnityUIResponseButton[] buttons;

		[Token(Token = "0x4000F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1D014", Offset = "0xA1D014")]
		public UnityUIResponseButton buttonTemplate;

		[Token(Token = "0x4000F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1D04C", Offset = "0xA1D04C")]
		public Graphic buttonTemplateHolder;

		[Token(Token = "0x4000F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1D084", Offset = "0xA1D084")]
		public Scrollbar buttonTemplateScrollbar;

		[Token(Token = "0x4000F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1D0BC", Offset = "0xA1D0BC")]
		public float buttonTemplateScrollbarResetValue;

		[Token(Token = "0x4000F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1D0F4", Offset = "0xA1D0F4")]
		public bool explicitNavigationForTemplateButtons;

		[Token(Token = "0x4000F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1D12C", Offset = "0xA1D12C")]
		public bool loopExplicitNavigation;

		[Token(Token = "0x4000F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public UIAutonumberSettings autonumber;

		[Token(Token = "0x4000F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public UIAnimationTransitions animationTransitions;

		[Token(Token = "0x4000F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public UnityEvent onContentChanged;

		[Token(Token = "0x4000F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[HideInInspector]
		public List<GameObject> instantiatedButtons;

		[Token(Token = "0x4000F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Action TimeoutHandler;

		[Token(Token = "0x4000F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private UIShowHideController m_showHideController;

		[Token(Token = "0x4000F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private UnityUITimer unityUITimer;

		[Token(Token = "0x4000F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Sprite pcPortraitSprite;

		[Token(Token = "0x4000F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private string pcPortraitName;

		[Token(Token = "0x4000F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Animator animator;

		[Token(Token = "0x4000F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool lookedForAnimator;

		[Token(Token = "0x170002EE")]
		public bool isVisible
		{
			[Token(Token = "0x600194A")]
			[Address(RVA = "0x115EBD0", Offset = "0x115EBD0", VA = "0x115EBD0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002EF")]
		public UIShowHideController showHideController
		{
			[Token(Token = "0x600194B")]
			[Address(RVA = "0x115EC74", Offset = "0x115EC74", VA = "0x115EC74")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F0")]
		public override AbstractUISubtitleControls subtitleReminderControls
		{
			[Token(Token = "0x600194E")]
			[Address(RVA = "0x115EE40", Offset = "0x115EE40", VA = "0x115EE40", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600194C")]
		[Address(RVA = "0x115ED24", Offset = "0x115ED24", VA = "0x115ED24", Slot = "10")]
		public override void SetPCPortrait(Sprite portraitSprite, string portraitName)
		{
		}

		[Token(Token = "0x600194D")]
		[Address(RVA = "0x115ED2C", Offset = "0x115ED2C", VA = "0x115ED2C", Slot = "12")]
		public override void SetActorPortraitSprite(string actorName, Sprite portraitSprite)
		{
		}

		[Token(Token = "0x600194F")]
		[Address(RVA = "0x115EE48", Offset = "0x115EE48", VA = "0x115EE48", Slot = "4")]
		public override void SetActive(bool value)
		{
		}

		[Token(Token = "0x6001950")]
		[Address(RVA = "0x115F520", Offset = "0x115F520", VA = "0x115F520")]
		private void DeactivateUIElements()
		{
		}

		[Token(Token = "0x6001951")]
		[Address(RVA = "0x115F5D8", Offset = "0x115F5D8", VA = "0x115F5D8", Slot = "6")]
		protected override void ClearResponseButtons()
		{
		}

		[Token(Token = "0x6001952")]
		[Address(RVA = "0x115F82C", Offset = "0x115F82C", VA = "0x115F82C", Slot = "7")]
		protected override void SetResponseButtons(Response[] responses, Transform target)
		{
		}

		[Token(Token = "0x6001953")]
		[Address(RVA = "0x115FF14", Offset = "0x115FF14", VA = "0x115FF14")]
		private void SetResponseButton(UnityUIResponseButton button, Response response, Transform target, int buttonNumber)
		{
		}

		[Token(Token = "0x6001954")]
		[Address(RVA = "0x1160138", Offset = "0x1160138", VA = "0x1160138")]
		private int GetNextAvailableResponseButtonPosition(int start, int direction)
		{
			return default(int);
		}

		[Token(Token = "0x6001955")]
		[Address(RVA = "0x115F2E4", Offset = "0x115F2E4", VA = "0x115F2E4")]
		public void SetupTemplateButtonNavigation()
		{
		}

		[Token(Token = "0x6001956")]
		[Address(RVA = "0x115F6EC", Offset = "0x115F6EC", VA = "0x115F6EC")]
		public void DestroyInstantiatedButtons()
		{
		}

		[Token(Token = "0x6001957")]
		[Address(RVA = "0x11601A8", Offset = "0x11601A8", VA = "0x11601A8")]
		public void NotifyContentChanged()
		{
		}

		[Token(Token = "0x6001958")]
		[Address(RVA = "0x11601C4", Offset = "0x11601C4", VA = "0x11601C4", Slot = "8")]
		public override void StartTimer(float timeout)
		{
		}

		[Token(Token = "0x6001959")]
		[Address(RVA = "0x11604A4", Offset = "0x11604A4", VA = "0x11604A4", Slot = "14")]
		public virtual void OnTimeout()
		{
		}

		[Token(Token = "0x600195A")]
		[Address(RVA = "0x11604C0", Offset = "0x11604C0", VA = "0x11604C0")]
		public void DefaultTimeoutHandler()
		{
		}

		[Token(Token = "0x600195B")]
		[Address(RVA = "0x11606D8", Offset = "0x11606D8", VA = "0x11606D8")]
		public void AutoFocus([Optional] GameObject lastSelection, bool allowStealFocus = true)
		{
		}

		[Token(Token = "0x600195C")]
		[Address(RVA = "0x115F4E0", Offset = "0x115F4E0", VA = "0x115F4E0")]
		private bool CanTriggerAnimation(string triggerName)
		{
			return default(bool);
		}

		[Token(Token = "0x600195D")]
		[Address(RVA = "0x1160B24", Offset = "0x1160B24", VA = "0x1160B24")]
		private bool CanTriggerAnimations()
		{
			return default(bool);
		}

		[Token(Token = "0x600195E")]
		[Address(RVA = "0x1160C48", Offset = "0x1160C48", VA = "0x1160C48")]
		public UnityUIResponseMenuControls()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002A1")]
	public class UnityUIRoot : AbstractUIRoot
	{
		[Token(Token = "0x600195F")]
		[Address(RVA = "0x1160DC0", Offset = "0x1160DC0", VA = "0x1160DC0", Slot = "4")]
		public override void Show()
		{
		}

		[Token(Token = "0x6001960")]
		[Address(RVA = "0x1160DC4", Offset = "0x1160DC4", VA = "0x1160DC4", Slot = "5")]
		public override void Hide()
		{
		}

		[Token(Token = "0x6001961")]
		[Address(RVA = "0x1160DC8", Offset = "0x1160DC8", VA = "0x1160DC8")]
		public UnityUIRoot()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002A2")]
	public class UnityUISubtitleControls : AbstractUISubtitleControls
	{
		[Token(Token = "0x200064A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DE88", Offset = "0xA0DE88")]
		private sealed class <SetSubtitlePortrait>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UnityUISubtitleControls <>4__this;

			[Token(Token = "0x4001F1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CharacterType characterType;

			[Token(Token = "0x17000589")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B58")]
				[Address(RVA = "0x1163908", Offset = "0x1163908", VA = "0x1163908", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700058A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B5A")]
				[Address(RVA = "0x1163970", Offset = "0x1163970", VA = "0x1163970", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B55")]
			[Address(RVA = "0x1162B98", Offset = "0x1162B98", VA = "0x1162B98")]
			[DebuggerHidden]
			public <SetSubtitlePortrait>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6002B56")]
			[Address(RVA = "0x11635FC", Offset = "0x11635FC", VA = "0x11635FC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B57")]
			[Address(RVA = "0x1163600", Offset = "0x1163600", VA = "0x1163600", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B59")]
			[Address(RVA = "0x1163910", Offset = "0x1163910", VA = "0x1163910", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1D174", Offset = "0xA1D174")]
		public Graphic panel;

		[Token(Token = "0x4000F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1D1AC", Offset = "0xA1D1AC")]
		public Text line;

		[Token(Token = "0x4000F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1D1E4", Offset = "0xA1D1E4")]
		public Image portraitImage;

		[Token(Token = "0x4000F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1D21C", Offset = "0xA1D21C")]
		public Text portraitName;

		[Token(Token = "0x4000F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1D254", Offset = "0xA1D254")]
		public Button continueButton;

		[Token(Token = "0x4000F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1D28C", Offset = "0xA1D28C")]
		public bool ignorePauseCodes;

		[Token(Token = "0x4000F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1D2C4", Offset = "0xA1D2C4")]
		public UIAnimationTransitions animationTransitions;

		[Token(Token = "0x4000F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1D2FC", Offset = "0xA1D2FC")]
		public UIVisibility uiVisibility;

		[Token(Token = "0x4000F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private UIShowHideController m_showHideController;

		[Token(Token = "0x4000F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_haveSavedOriginalColor;

		[Token(Token = "0x4000F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Color m_originalColor;

		[Token(Token = "0x170002F1")]
		public bool isVisible
		{
			[Token(Token = "0x6001962")]
			[Address(RVA = "0x1162828", Offset = "0x1162828", VA = "0x1162828")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002F2")]
		public override bool hasText
		{
			[Token(Token = "0x6001963")]
			[Address(RVA = "0x1162914", Offset = "0x1162914", VA = "0x1162914", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002F3")]
		private UIShowHideController showHideController
		{
			[Token(Token = "0x6001964")]
			[Address(RVA = "0x11629C0", Offset = "0x11629C0", VA = "0x11629C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001965")]
		[Address(RVA = "0x1162A64", Offset = "0x1162A64", VA = "0x1162A64")]
		public void CheckSubtitlePortrait(CharacterType characterType)
		{
		}

		[Token(Token = "0x6001966")]
		[Address(RVA = "0x1162B18", Offset = "0x1162B18", VA = "0x1162B18")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA2CD88", Offset = "0xA2CD88")]
		private IEnumerator SetSubtitlePortrait(CharacterType characterType)
		{
			return null;
		}

		[Token(Token = "0x6001967")]
		[Address(RVA = "0x1162BC4", Offset = "0x1162BC4", VA = "0x1162BC4", Slot = "4")]
		public override void SetActive(bool value)
		{
		}

		[Token(Token = "0x6001968")]
		[Address(RVA = "0x1162D50", Offset = "0x1162D50", VA = "0x1162D50")]
		public void ForceHide()
		{
		}

		[Token(Token = "0x6001969")]
		[Address(RVA = "0x1162D54", Offset = "0x1162D54", VA = "0x1162D54")]
		public void ForceShow()
		{
		}

		[Token(Token = "0x600196A")]
		[Address(RVA = "0x1162C1C", Offset = "0x1162C1C", VA = "0x1162C1C")]
		private void ShowPanel()
		{
		}

		[Token(Token = "0x600196B")]
		[Address(RVA = "0x1162C8C", Offset = "0x1162C8C", VA = "0x1162C8C")]
		private void HidePanel()
		{
		}

		[Token(Token = "0x600196C")]
		[Address(RVA = "0x1162D8C", Offset = "0x1162D8C", VA = "0x1162D8C")]
		public void ActivateUIElements()
		{
		}

		[Token(Token = "0x600196D")]
		[Address(RVA = "0x1162E54", Offset = "0x1162E54", VA = "0x1162E54")]
		public void DeactivateUIElements()
		{
		}

		[Token(Token = "0x600196E")]
		[Address(RVA = "0x1162D94", Offset = "0x1162D94", VA = "0x1162D94")]
		private void SetUIElementsActive(bool value)
		{
		}

		[Token(Token = "0x600196F")]
		[Address(RVA = "0x1162E5C", Offset = "0x1162E5C", VA = "0x1162E5C", Slot = "8")]
		public override void ShowContinueButton()
		{
		}

		[Token(Token = "0x6001970")]
		[Address(RVA = "0x1162ECC", Offset = "0x1162ECC", VA = "0x1162ECC", Slot = "9")]
		public override void HideContinueButton()
		{
		}

		[Token(Token = "0x6001971")]
		[Address(RVA = "0x1162F3C", Offset = "0x1162F3C", VA = "0x1162F3C", Slot = "6")]
		public override void SetSubtitle(Subtitle subtitle)
		{
		}

		[Token(Token = "0x6001972")]
		[Address(RVA = "0x1163418", Offset = "0x1163418", VA = "0x1163418", Slot = "7")]
		public override void ClearSubtitle()
		{
		}

		[Token(Token = "0x6001973")]
		[Address(RVA = "0x1163204", Offset = "0x1163204", VA = "0x1163204")]
		private void SetFormattedText(Text label, FormattedText formattedText)
		{
		}

		[Token(Token = "0x6001974")]
		[Address(RVA = "0x1163424", Offset = "0x1163424", VA = "0x1163424", Slot = "11")]
		public override void SetActorPortraitSprite(string actorName, Sprite portraitSprite)
		{
		}

		[Token(Token = "0x6001975")]
		[Address(RVA = "0x1163508", Offset = "0x1163508", VA = "0x1163508")]
		public void AutoFocus(bool allowStealFocus = true)
		{
		}

		[Token(Token = "0x6001976")]
		[Address(RVA = "0x1163584", Offset = "0x1163584", VA = "0x1163584")]
		public UnityUISubtitleControls()
		{
		}
	}
	[Token(Token = "0x20002A3")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA093F0", Offset = "0xA093F0")]
	public class UnityUITextFieldUI : MonoBehaviour, ITextFieldUI
	{
		[Token(Token = "0x4000F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1D334", Offset = "0xA1D334")]
		public Graphic panel;

		[Token(Token = "0x4000F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1D36C", Offset = "0xA1D36C")]
		public Text label;

		[Token(Token = "0x4000F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public InputField textField;

		[Token(Token = "0x4000F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1D3A4", Offset = "0xA1D3A4")]
		public KeyCode acceptKey;

		[Token(Token = "0x4000F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1D3DC", Offset = "0xA1D3DC")]
		public KeyCode cancelKey;

		[Token(Token = "0x4000F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1D414", Offset = "0xA1D414")]
		public bool showTouchScreenKeyboard;

		[Token(Token = "0x4000F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEvent onAccept;

		[Token(Token = "0x4000F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UnityEvent onCancel;

		[Token(Token = "0x4000F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private AcceptedTextDelegate acceptedText;

		[Token(Token = "0x4000F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool isAwaitingInput;

		[Token(Token = "0x4000F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private TouchScreenKeyboard touchScreenKeyboard;

		[Token(Token = "0x6001977")]
		[Address(RVA = "0x1163978", Offset = "0x1163978", VA = "0x1163978")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001978")]
		[Address(RVA = "0x11639E4", Offset = "0x11639E4", VA = "0x11639E4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001979")]
		[Address(RVA = "0x1163BBC", Offset = "0x1163BBC", VA = "0x1163BBC", Slot = "4")]
		public void StartTextInput(string labelText, string text, int maxLength, AcceptedTextDelegate acceptedText)
		{
		}

		[Token(Token = "0x600197A")]
		[Address(RVA = "0x1163E60", Offset = "0x1163E60", VA = "0x1163E60")]
		public void Update()
		{
		}

		[Token(Token = "0x600197B")]
		[Address(RVA = "0x1163FD0", Offset = "0x1163FD0", VA = "0x1163FD0", Slot = "5")]
		public void CancelTextInput()
		{
		}

		[Token(Token = "0x600197C")]
		[Address(RVA = "0x1163F14", Offset = "0x1163F14", VA = "0x1163F14")]
		public void AcceptTextInput()
		{
		}

		[Token(Token = "0x600197D")]
		[Address(RVA = "0x1163CE8", Offset = "0x1163CE8", VA = "0x1163CE8")]
		private void Show()
		{
		}

		[Token(Token = "0x600197E")]
		[Address(RVA = "0x1163B80", Offset = "0x1163B80", VA = "0x1163B80")]
		private void Hide()
		{
		}

		[Token(Token = "0x600197F")]
		[Address(RVA = "0x1164004", Offset = "0x1164004", VA = "0x1164004")]
		private void SetActive(bool value)
		{
		}

		[Token(Token = "0x6001980")]
		[Address(RVA = "0x116413C", Offset = "0x116413C", VA = "0x116413C")]
		public UnityUITextFieldUI()
		{
		}
	}
	[Token(Token = "0x20002A4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA09428", Offset = "0xA09428")]
	public class UnityUITimer : MonoBehaviour
	{
		[Token(Token = "0x200064B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DE98", Offset = "0xA0DE98")]
		private sealed class <Countdown>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UnityUITimer <>4__this;

			[Token(Token = "0x4001F20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float duration;

			[Token(Token = "0x4001F21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action timeoutHandler;

			[Token(Token = "0x4001F22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <endTime>5__2;

			[Token(Token = "0x1700058B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B5E")]
				[Address(RVA = "0x1164598", Offset = "0x1164598", VA = "0x1164598", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700058C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B60")]
				[Address(RVA = "0x1164600", Offset = "0x1164600", VA = "0x1164600", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B5B")]
			[Address(RVA = "0x1164310", Offset = "0x1164310", VA = "0x1164310")]
			[DebuggerHidden]
			public <Countdown>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6002B5C")]
			[Address(RVA = "0x116440C", Offset = "0x116440C", VA = "0x116440C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B5D")]
			[Address(RVA = "0x1164410", Offset = "0x1164410", VA = "0x1164410", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B5F")]
			[Address(RVA = "0x11645A0", Offset = "0x11645A0", VA = "0x11645A0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Slider slider;

		[Token(Token = "0x4000F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float startTime;

		[Token(Token = "0x6001981")]
		[Address(RVA = "0x11641D0", Offset = "0x11641D0", VA = "0x11641D0", Slot = "4")]
		public virtual void Awake()
		{
		}

		[Token(Token = "0x6001982")]
		[Address(RVA = "0x1164254", Offset = "0x1164254", VA = "0x1164254", Slot = "5")]
		public virtual void StartCountdown(float duration, Action timeoutHandler)
		{
		}

		[Token(Token = "0x6001983")]
		[Address(RVA = "0x1164280", Offset = "0x1164280", VA = "0x1164280")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA2CDEC", Offset = "0xA2CDEC")]
		private IEnumerator Countdown(float duration, Action timeoutHandler)
		{
			return null;
		}

		[Token(Token = "0x6001984")]
		[Address(RVA = "0x116433C", Offset = "0x116433C", VA = "0x116433C")]
		public void SkipTime(float amountToSkip)
		{
		}

		[Token(Token = "0x6001985")]
		[Address(RVA = "0x116434C", Offset = "0x116434C", VA = "0x116434C", Slot = "6")]
		public virtual void UpdateTimeLeft(float normalizedTimeLeft)
		{
		}

		[Token(Token = "0x6001986")]
		[Address(RVA = "0x11643FC", Offset = "0x11643FC", VA = "0x11643FC", Slot = "7")]
		public virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001987")]
		[Address(RVA = "0x1164404", Offset = "0x1164404", VA = "0x1164404")]
		public UnityUITimer()
		{
		}
	}
	[Token(Token = "0x20002A5")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA09460", Offset = "0xA09460")]
	public class LocalizeUIText : LocalizeUI
	{
		[Token(Token = "0x6001988")]
		[Address(RVA = "0x171BC28", Offset = "0x171BC28", VA = "0x171BC28")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001989")]
		[Address(RVA = "0x171BC9C", Offset = "0x171BC9C", VA = "0x171BC9C", Slot = "10")]
		public virtual void LocalizeText()
		{
		}

		[Token(Token = "0x600198A")]
		[Address(RVA = "0x171BCA8", Offset = "0x171BCA8", VA = "0x171BCA8")]
		public LocalizeUIText()
		{
		}
	}
	[Token(Token = "0x20002A6")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA09498", Offset = "0xA09498")]
	public class UnityUIContinueButtonFastForward : MonoBehaviour
	{
		[Token(Token = "0x4000F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1D44C", Offset = "0xA1D44C")]
		public UnityUIDialogueUI dialogueUI;

		[Token(Token = "0x4000F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1D484", Offset = "0xA1D484")]
		public UnityUITypewriterEffect typewriterEffect;

		[Token(Token = "0x4000F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1D4BC", Offset = "0xA1D4BC")]
		public bool hideContinueButtonOnContinue;

		[Token(Token = "0x4000F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Button continueButton;

		[Token(Token = "0x600198B")]
		[Address(RVA = "0x15DDC44", Offset = "0x15DDC44", VA = "0x15DDC44", Slot = "4")]
		public virtual void Awake()
		{
		}

		[Token(Token = "0x600198C")]
		[Address(RVA = "0x15DDD9C", Offset = "0x15DDD9C", VA = "0x15DDD9C", Slot = "5")]
		public virtual void OnFastForward()
		{
		}

		[Token(Token = "0x600198D")]
		[Address(RVA = "0x15DDEF4", Offset = "0x15DDEF4", VA = "0x15DDEF4")]
		public UnityUIContinueButtonFastForward()
		{
		}
	}
	[Token(Token = "0x20002A7")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA094D0", Offset = "0xA094D0")]
	public class UpdateLocalizedUITexts : MonoBehaviour
	{
		[Token(Token = "0x200064C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DEA8", Offset = "0xA0DEA8")]
		private sealed class <Start>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UpdateLocalizedUITexts <>4__this;

			[Token(Token = "0x1700058D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B64")]
				[Address(RVA = "0x1167184", Offset = "0x1167184", VA = "0x1167184", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700058E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B66")]
				[Address(RVA = "0x11671EC", Offset = "0x11671EC", VA = "0x11671EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B61")]
			[Address(RVA = "0x1166DF4", Offset = "0x1166DF4", VA = "0x1166DF4")]
			[DebuggerHidden]
			public <Start>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6002B62")]
			[Address(RVA = "0x1167070", Offset = "0x1167070", VA = "0x1167070", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B63")]
			[Address(RVA = "0x1167074", Offset = "0x1167074", VA = "0x1167074", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B65")]
			[Address(RVA = "0x116718C", Offset = "0x116718C", VA = "0x116718C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string languagePlayerPrefsKey;

		[Token(Token = "0x600198E")]
		[Address(RVA = "0x1166D10", Offset = "0x1166D10", VA = "0x1166D10")]
		private void Awake()
		{
		}

		[Token(Token = "0x600198F")]
		[Address(RVA = "0x1166D84", Offset = "0x1166D84", VA = "0x1166D84")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA2CE50", Offset = "0xA2CE50")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6001990")]
		[Address(RVA = "0x1166E20", Offset = "0x1166E20", VA = "0x1166E20")]
		public void UpdateTexts(string languageCode)
		{
		}

		[Token(Token = "0x6001991")]
		[Address(RVA = "0x1167018", Offset = "0x1167018", VA = "0x1167018")]
		public UpdateLocalizedUITexts()
		{
		}
	}
	[Token(Token = "0x20002A8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA09508", Offset = "0xA09508")]
	public class UnityUIQuestGroupTemplate : MonoBehaviour
	{
		[Token(Token = "0x4000F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA1D4F4", Offset = "0xA1D4F4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1D4F4", Offset = "0xA1D4F4")]
		public Text heading;

		[Token(Token = "0x170002F4")]
		public bool ArePropertiesAssigned
		{
			[Token(Token = "0x6001992")]
			[Address(RVA = "0x15DFEE0", Offset = "0x15DFEE0", VA = "0x15DFEE0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001993")]
		[Address(RVA = "0x15DFF50", Offset = "0x15DFF50", VA = "0x15DFF50")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001994")]
		[Address(RVA = "0x15DFF54", Offset = "0x15DFF54", VA = "0x15DFF54")]
		public UnityUIQuestGroupTemplate()
		{
		}
	}
	[Token(Token = "0x20002A9")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA09540", Offset = "0xA09540")]
	public class UnityUIQuestLogWindow : QuestLogWindow
	{
		[Serializable]
		[Token(Token = "0x200064D")]
		public class AnimationTransitions
		{
			[Token(Token = "0x4001F26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string showTrigger;

			[Token(Token = "0x4001F27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string hideTrigger;

			[Token(Token = "0x4001F28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA257A4", Offset = "0xA257A4")]
			public UIShowHideController.TransitionMode transitionMode;

			[Token(Token = "0x4001F29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public bool debug;

			[Token(Token = "0x6002B67")]
			[Address(RVA = "0x15E2A70", Offset = "0x15E2A70", VA = "0x15E2A70")]
			public AnimationTransitions()
			{
			}
		}

		[Token(Token = "0x200064E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DEB8", Offset = "0xA0DEB8")]
		private sealed class <>c__DisplayClass38_0
		{
			[Token(Token = "0x4001F2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string group;

			[Token(Token = "0x4001F2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UnityUIQuestLogWindow <>4__this;

			[Token(Token = "0x6002B68")]
			[Address(RVA = "0x15E1AB8", Offset = "0x15E1AB8", VA = "0x15E1AB8")]
			public <>c__DisplayClass38_0()
			{
			}

			[Token(Token = "0x6002B69")]
			[Address(RVA = "0x15E2B18", Offset = "0x15E2B18", VA = "0x15E2B18")]
			internal bool <AddQuestGroupToTable>b__0(UnityUIQuestGroupTemplate x)
			{
				return default(bool);
			}

			[Token(Token = "0x6002B6A")]
			[Address(RVA = "0x15E2B5C", Offset = "0x15E2B5C", VA = "0x15E2B5C")]
			internal void <AddQuestGroupToTable>b__1()
			{
			}
		}

		[Token(Token = "0x200064F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DEC8", Offset = "0xA0DEC8")]
		private sealed class <>c__DisplayClass39_0
		{
			[Token(Token = "0x4001F2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public QuestInfo questInfo;

			[Token(Token = "0x4001F2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UnityUIQuestLogWindow <>4__this;

			[Token(Token = "0x6002B6B")]
			[Address(RVA = "0x15E2024", Offset = "0x15E2024", VA = "0x15E2024")]
			public <>c__DisplayClass39_0()
			{
			}

			[Token(Token = "0x6002B6C")]
			[Address(RVA = "0x15E2B7C", Offset = "0x15E2B7C", VA = "0x15E2B7C")]
			internal bool <AddQuestToTable>b__0(UnityUIQuestTemplate x)
			{
				return default(bool);
			}

			[Token(Token = "0x6002B6D")]
			[Address(RVA = "0x15E2C74", Offset = "0x15E2C74", VA = "0x15E2C74")]
			internal void <AddQuestToTable>b__1()
			{
			}
		}

		[Token(Token = "0x4000F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Graphic mainPanel;

		[Token(Token = "0x4000F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Button activeQuestsButton;

		[Token(Token = "0x4000F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Button completedQuestsButton;

		[Token(Token = "0x4000F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Graphic questTable;

		[Token(Token = "0x4000F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public UnityUIQuestGroupTemplate questGroupTemplate;

		[Token(Token = "0x4000F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public UnityUIQuestTemplate questTemplate;

		[Token(Token = "0x4000F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Graphic abandonPopup;

		[Token(Token = "0x4000F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Text abandonQuestTitle;

		[Token(Token = "0x4000F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public AnimationTransitions animationTransitions;

		[Token(Token = "0x4000F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1D554", Offset = "0xA1D554")]
		public bool autoFocus;

		[Token(Token = "0x4000F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1D58C", Offset = "0xA1D58C")]
		public float autoFocusCheckFrequency;

		[Token(Token = "0x4000F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public UnityEvent onOpen;

		[Token(Token = "0x4000F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public UnityEvent onClose;

		[Token(Token = "0x4000F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public UnityEvent onContentChanged;

		[Token(Token = "0x4000F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1D5C4", Offset = "0xA1D5C4")]
		public bool addEventSystemIfNeeded;

		[Token(Token = "0x4000F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		protected Action confirmAbandonQuestHandler;

		[Token(Token = "0x4000F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private UIShowHideController m_showHideController;

		[Token(Token = "0x4000F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected List<string> collapsedGroups;

		[Token(Token = "0x4000F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		protected List<UnityUIQuestGroupTemplate> groupTemplateInstances;

		[Token(Token = "0x4000F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		protected List<UnityUIQuestTemplate> questTemplateInstances;

		[Token(Token = "0x4000F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		protected List<UnityUIQuestGroupTemplate> unusedGroupTemplateInstances;

		[Token(Token = "0x4000F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		protected List<UnityUIQuestTemplate> unusedQuestTemplateInstances;

		[Token(Token = "0x4000F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		protected int siblingIndexCounter;

		[Token(Token = "0x4000F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private float nextAutoFocusCheckTime;

		[Token(Token = "0x170002F5")]
		protected UIShowHideController showHideController
		{
			[Token(Token = "0x6001995")]
			[Address(RVA = "0x15DFF5C", Offset = "0x15DFF5C", VA = "0x15DFF5C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001996")]
		[Address(RVA = "0x15E0010", Offset = "0x15E0010", VA = "0x15E0010", Slot = "9")]
		public override void Awake()
		{
		}

		[Token(Token = "0x6001997")]
		[Address(RVA = "0x15E0088", Offset = "0x15E0088", VA = "0x15E0088", Slot = "29")]
		public virtual void Start()
		{
		}

		[Token(Token = "0x6001998")]
		[Address(RVA = "0x15E0A58", Offset = "0x15E0A58", VA = "0x15E0A58", Slot = "30")]
		public virtual void Update()
		{
		}

		[Token(Token = "0x6001999")]
		[Address(RVA = "0x15E0C88", Offset = "0x15E0C88", VA = "0x15E0C88", Slot = "5")]
		public override void OpenWindow(Action openedWindowHandler)
		{
		}

		[Token(Token = "0x600199A")]
		[Address(RVA = "0x15E0BC0", Offset = "0x15E0BC0", VA = "0x15E0BC0")]
		public void AutoFocus()
		{
		}

		[Token(Token = "0x600199B")]
		[Address(RVA = "0x15E0CF0", Offset = "0x15E0CF0", VA = "0x15E0CF0", Slot = "6")]
		public override void CloseWindow(Action closedWindowHandler)
		{
		}

		[Token(Token = "0x600199C")]
		[Address(RVA = "0x15E0D5C", Offset = "0x15E0D5C", VA = "0x15E0D5C", Slot = "7")]
		public override void OnQuestListUpdated()
		{
		}

		[Token(Token = "0x600199D")]
		[Address(RVA = "0x15E060C", Offset = "0x15E060C", VA = "0x15E060C")]
		protected void SetStateButtonListeners()
		{
		}

		[Token(Token = "0x600199E")]
		[Address(RVA = "0x15E07F8", Offset = "0x15E07F8", VA = "0x15E07F8")]
		protected void SetStateToggleButtons()
		{
		}

		[Token(Token = "0x600199F")]
		[Address(RVA = "0x15E1124", Offset = "0x15E1124", VA = "0x15E1124", Slot = "31")]
		protected virtual void ClearQuestTable()
		{
		}

		[Token(Token = "0x60019A0")]
		[Address(RVA = "0x15E1450", Offset = "0x15E1450", VA = "0x15E1450", Slot = "32")]
		protected virtual void AddQuestsToTable()
		{
		}

		[Token(Token = "0x60019A1")]
		[Address(RVA = "0x15E15F4", Offset = "0x15E15F4", VA = "0x15E15F4", Slot = "33")]
		protected virtual void AddQuestGroupToTable(string group)
		{
		}

		[Token(Token = "0x60019A2")]
		[Address(RVA = "0x15E1AC0", Offset = "0x15E1AC0", VA = "0x15E1AC0", Slot = "34")]
		protected virtual void AddQuestToTable(QuestInfo questInfo)
		{
		}

		[Token(Token = "0x60019A3")]
		[Address(RVA = "0x15E202C", Offset = "0x15E202C", VA = "0x15E202C", Slot = "35")]
		protected virtual void SetQuestDetails(UnityUIQuestTemplate questControl, QuestInfo questInfo)
		{
		}

		[Token(Token = "0x60019A4")]
		[Address(RVA = "0x15E1434", Offset = "0x15E1434", VA = "0x15E1434")]
		public void NotifyContentChanged()
		{
		}

		[Token(Token = "0x60019A5")]
		[Address(RVA = "0x15E2420", Offset = "0x15E2420", VA = "0x15E2420")]
		public void ClickQuestFoldout(string questTitle)
		{
		}

		[Token(Token = "0x60019A6")]
		[Address(RVA = "0x15E2430", Offset = "0x15E2430", VA = "0x15E2430")]
		public void ClickQuestGroupFoldout(string group)
		{
		}

		[Token(Token = "0x60019A7")]
		[Address(RVA = "0x15E24E8", Offset = "0x15E24E8", VA = "0x15E24E8")]
		protected void OnTrackButtonClicked(GameObject button)
		{
		}

		[Token(Token = "0x60019A8")]
		[Address(RVA = "0x15E256C", Offset = "0x15E256C", VA = "0x15E256C")]
		protected void OnAbandonButtonClicked(GameObject button)
		{
		}

		[Token(Token = "0x60019A9")]
		[Address(RVA = "0x15E25F0", Offset = "0x15E25F0", VA = "0x15E25F0", Slot = "8")]
		public override void ConfirmAbandonQuest(string title, Action confirmAbandonQuestHandler)
		{
		}

		[Token(Token = "0x60019AA")]
		[Address(RVA = "0x15E25F8", Offset = "0x15E25F8", VA = "0x15E25F8")]
		protected void OpenAbandonPopup(string title)
		{
		}

		[Token(Token = "0x60019AB")]
		[Address(RVA = "0x15E2850", Offset = "0x15E2850", VA = "0x15E2850")]
		protected void CloseAbandonPopup()
		{
		}

		[Token(Token = "0x60019AC")]
		[Address(RVA = "0x15E28C0", Offset = "0x15E28C0", VA = "0x15E28C0")]
		public void ClickConfirmAbandonQuestButton()
		{
		}

		[Token(Token = "0x60019AD")]
		[Address(RVA = "0x15E28F0", Offset = "0x15E28F0", VA = "0x15E28F0")]
		public void ClickCancelAbandonQuestButton()
		{
		}

		[Token(Token = "0x60019AE")]
		[Address(RVA = "0x15E28F4", Offset = "0x15E28F4", VA = "0x15E28F4")]
		public UnityUIQuestLogWindow()
		{
		}

		[Token(Token = "0x60019AF")]
		[Address(RVA = "0x15E2AD8", Offset = "0x15E2AD8", VA = "0x15E2AD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2CEB4", Offset = "0xA2CEB4")]
		private void <SetStateButtonListeners>b__34_0()
		{
		}

		[Token(Token = "0x60019B0")]
		[Address(RVA = "0x15E2AE8", Offset = "0x15E2AE8", VA = "0x15E2AE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2CEC4", Offset = "0xA2CEC4")]
		private void <SetStateButtonListeners>b__34_1()
		{
		}

		[Token(Token = "0x60019B1")]
		[Address(RVA = "0x15E2AF8", Offset = "0x15E2AF8", VA = "0x15E2AF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2CED4", Offset = "0xA2CED4")]
		private void <SetStateButtonListeners>b__34_2()
		{
		}

		[Token(Token = "0x60019B2")]
		[Address(RVA = "0x15E2B00", Offset = "0x15E2B00", VA = "0x15E2B00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2CEE4", Offset = "0xA2CEE4")]
		private void <SetStateButtonListeners>b__34_3()
		{
		}

		[Token(Token = "0x60019B3")]
		[Address(RVA = "0x15E2B08", Offset = "0x15E2B08", VA = "0x15E2B08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2CEF4", Offset = "0xA2CEF4")]
		private void <SetQuestDetails>b__40_0()
		{
		}

		[Token(Token = "0x60019B4")]
		[Address(RVA = "0x15E2B10", Offset = "0x15E2B10", VA = "0x15E2B10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2CF04", Offset = "0xA2CF04")]
		private void <SetQuestDetails>b__40_1()
		{
		}
	}
	[Token(Token = "0x20002AA")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA09578", Offset = "0xA09578")]
	public class UnityUIQuestTemplate : MonoBehaviour
	{
		[Token(Token = "0x4000F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA1D5FC", Offset = "0xA1D5FC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1D5FC", Offset = "0xA1D5FC")]
		public Button heading;

		[Token(Token = "0x4000F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1D65C", Offset = "0xA1D65C")]
		public Text description;

		[Token(Token = "0x4000F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityUIQuestTemplateAlternateDescriptions alternateDescriptions;

		[Token(Token = "0x4000F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA1D694", Offset = "0xA1D694")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1D694", Offset = "0xA1D694")]
		public Transform entryContainer;

		[Token(Token = "0x4000F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1D6F4", Offset = "0xA1D6F4")]
		public Text entryDescription;

		[Token(Token = "0x4000F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityUIQuestTemplateAlternateDescriptions alternateEntryDescriptions;

		[Token(Token = "0x4000F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA1D72C", Offset = "0xA1D72C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1D72C", Offset = "0xA1D72C")]
		public Button trackButton;

		[Token(Token = "0x4000F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1D78C", Offset = "0xA1D78C")]
		public Button abandonButton;

		[Token(Token = "0x4000F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected List<GameObject> entryInstances;

		[Token(Token = "0x4000F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected int numEntries;

		[Token(Token = "0x170002F6")]
		public bool ArePropertiesAssigned
		{
			[Token(Token = "0x60019B5")]
			[Address(RVA = "0x15E090C", Offset = "0x15E090C", VA = "0x15E090C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60019B6")]
		[Address(RVA = "0x15E2CA8", Offset = "0x15E2CA8", VA = "0x15E2CA8", Slot = "4")]
		public virtual void Initialize()
		{
		}

		[Token(Token = "0x60019B7")]
		[Address(RVA = "0x15E2F0C", Offset = "0x15E2F0C", VA = "0x15E2F0C", Slot = "5")]
		public virtual void ClearQuestDetails()
		{
		}

		[Token(Token = "0x60019B8")]
		[Address(RVA = "0x15E3070", Offset = "0x15E3070", VA = "0x15E3070", Slot = "6")]
		public virtual void AddEntryDescription(string text, QuestState entryState)
		{
		}

		[Token(Token = "0x60019B9")]
		[Address(RVA = "0x15E33A8", Offset = "0x15E33A8", VA = "0x15E33A8")]
		protected void InstantiateFirstValidTextElement(string text, Transform container, params Text[] textElements)
		{
		}

		[Token(Token = "0x60019BA")]
		[Address(RVA = "0x15E35A8", Offset = "0x15E35A8", VA = "0x15E35A8")]
		public UnityUIQuestTemplate()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002AB")]
	public class UnityUIQuestTemplateAlternateDescriptions
	{
		[Token(Token = "0x4000F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1D7C4", Offset = "0xA1D7C4")]
		public Text successDescription;

		[Token(Token = "0x4000F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1D7FC", Offset = "0xA1D7FC")]
		public Text failureDescription;

		[Token(Token = "0x60019BB")]
		[Address(RVA = "0x15E2E08", Offset = "0x15E2E08", VA = "0x15E2E08")]
		public void SetActive(bool value)
		{
		}

		[Token(Token = "0x60019BC")]
		[Address(RVA = "0x15E3658", Offset = "0x15E3658", VA = "0x15E3658")]
		public UnityUIQuestTemplateAlternateDescriptions()
		{
		}
	}
	[Token(Token = "0x20002AC")]
	public class UnityUIQuestTitle : MonoBehaviour
	{
		[Token(Token = "0x4000F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string questTitle;

		[Token(Token = "0x60019BD")]
		[Address(RVA = "0x15E3660", Offset = "0x15E3660", VA = "0x15E3660")]
		public UnityUIQuestTitle()
		{
		}
	}
	[Token(Token = "0x20002AD")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA095B0", Offset = "0xA095B0")]
	public class UnityUIQuestTrackTemplate : MonoBehaviour
	{
		[Token(Token = "0x4000F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA1D834", Offset = "0xA1D834")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1D834", Offset = "0xA1D834")]
		public Text description;

		[Token(Token = "0x4000F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityUIQuestTemplateAlternateDescriptions alternateDescriptions;

		[Token(Token = "0x4000F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA1D894", Offset = "0xA1D894")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1D894", Offset = "0xA1D894")]
		public Transform entryContainer;

		[Token(Token = "0x4000F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1D8F4", Offset = "0xA1D8F4")]
		public Text entryDescription;

		[Token(Token = "0x4000F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityUIQuestTemplateAlternateDescriptions alternateEntryDescriptions;

		[Token(Token = "0x4000F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Text> instances;

		[Token(Token = "0x4000F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int numEntries;

		[Token(Token = "0x170002F7")]
		public bool ArePropertiesAssigned
		{
			[Token(Token = "0x60019BE")]
			[Address(RVA = "0x15E3668", Offset = "0x15E3668", VA = "0x15E3668")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60019BF")]
		[Address(RVA = "0x15E3724", Offset = "0x15E3724", VA = "0x15E3724")]
		public void Initialize()
		{
		}

		[Token(Token = "0x60019C0")]
		[Address(RVA = "0x15E3988", Offset = "0x15E3988", VA = "0x15E3988")]
		public void SetDescription(string text, QuestState questState)
		{
		}

		[Token(Token = "0x60019C1")]
		[Address(RVA = "0x15E3B18", Offset = "0x15E3B18", VA = "0x15E3B18")]
		private void SetFirstValidTextElement(string text, params Text[] textElements)
		{
		}

		[Token(Token = "0x60019C2")]
		[Address(RVA = "0x15E3C50", Offset = "0x15E3C50", VA = "0x15E3C50")]
		public void AddEntryDescription(string text, QuestState entryState)
		{
		}

		[Token(Token = "0x60019C3")]
		[Address(RVA = "0x15E3F90", Offset = "0x15E3F90", VA = "0x15E3F90")]
		private void InstantiateFirstValidTextElement(string text, Transform container, params Text[] textElements)
		{
		}

		[Token(Token = "0x60019C4")]
		[Address(RVA = "0x15E4184", Offset = "0x15E4184", VA = "0x15E4184")]
		public UnityUIQuestTrackTemplate()
		{
		}
	}
	[Token(Token = "0x20002AE")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA095E8", Offset = "0xA095E8")]
	public class UnityUIQuestTracker : MonoBehaviour
	{
		[Token(Token = "0x2000650")]
		public enum QuestDescriptionSource
		{
			[Token(Token = "0x4001F2F")]
			Title,
			[Token(Token = "0x4001F30")]
			Description
		}

		[Token(Token = "0x2000651")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DED8", Offset = "0xA0DED8")]
		private sealed class <RefreshAtEndOfFrame>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UnityUIQuestTracker <>4__this;

			[Token(Token = "0x1700058F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B71")]
				[Address(RVA = "0x115DFF0", Offset = "0x115DFF0", VA = "0x115DFF0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000590")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B73")]
				[Address(RVA = "0x115E058", Offset = "0x115E058", VA = "0x115E058", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B6E")]
			[Address(RVA = "0x115DCF8", Offset = "0x115DCF8", VA = "0x115DCF8")]
			[DebuggerHidden]
			public <RefreshAtEndOfFrame>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x6002B6F")]
			[Address(RVA = "0x115DD24", Offset = "0x115DD24", VA = "0x115DD24", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B70")]
			[Address(RVA = "0x115DD28", Offset = "0x115DD28", VA = "0x115DD28", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B72")]
			[Address(RVA = "0x115DFF8", Offset = "0x115DFF8", VA = "0x115DFF8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1D92C", Offset = "0xA1D92C")]
		public string playerPrefsToggleKey;

		[Token(Token = "0x4000F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1D964", Offset = "0xA1D964")]
		public Transform container;

		[Token(Token = "0x4000F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1D99C", Offset = "0xA1D99C")]
		public bool showContainerIfEmpty;

		[Token(Token = "0x4000F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1D9D4", Offset = "0xA1D9D4")]
		public UnityUIQuestTrackTemplate questTrackTemplate;

		[Token(Token = "0x4000F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1DA0C", Offset = "0xA1DA0C")]
		public bool showActiveQuests;

		[Token(Token = "0x4000F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1DA44", Offset = "0xA1DA44")]
		public bool showCompletedQuests;

		[Token(Token = "0x4000F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1DA7C", Offset = "0xA1DA7C")]
		public bool showCompletedEntryText;

		[Token(Token = "0x4000F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1DAB4", Offset = "0xA1DAB4")]
		public QuestDescriptionSource questDescriptionSource;

		[Token(Token = "0x4000F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool visibleOnStart;

		[Token(Token = "0x4000F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected List<UnityUIQuestTrackTemplate> instantiatedItems;

		[Token(Token = "0x4000F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected List<UnityUIQuestTrackTemplate> unusedInstances;

		[Token(Token = "0x4000F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected int siblingIndexCounter;

		[Token(Token = "0x4000F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		protected bool isVisible;

		[Token(Token = "0x4000F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected Coroutine refreshCoroutine;

		[Token(Token = "0x60019C5")]
		[Address(RVA = "0x15E420C", Offset = "0x15E420C", VA = "0x15E420C", Slot = "4")]
		public virtual void Start()
		{
		}

		[Token(Token = "0x60019C6")]
		[Address(RVA = "0x15E44F8", Offset = "0x15E44F8", VA = "0x15E44F8", Slot = "5")]
		public virtual void ShowTracker()
		{
		}

		[Token(Token = "0x60019C7")]
		[Address(RVA = "0x15E45B8", Offset = "0x15E45B8", VA = "0x15E45B8", Slot = "6")]
		public virtual void HideTracker()
		{
		}

		[Token(Token = "0x60019C8")]
		[Address(RVA = "0x15E4670", Offset = "0x15E4670", VA = "0x15E4670", Slot = "7")]
		public virtual void ToggleTracker()
		{
		}

		[Token(Token = "0x60019C9")]
		[Address(RVA = "0x15E468C", Offset = "0x15E468C", VA = "0x15E468C", Slot = "8")]
		public virtual void OnQuestTrackingEnabled(string quest)
		{
		}

		[Token(Token = "0x60019CA")]
		[Address(RVA = "0x15E4698", Offset = "0x15E4698", VA = "0x15E4698", Slot = "9")]
		public virtual void OnQuestTrackingDisabled(string quest)
		{
		}

		[Token(Token = "0x60019CB")]
		[Address(RVA = "0x15E46A4", Offset = "0x15E46A4", VA = "0x15E46A4")]
		public void OnConversationEnd(Transform actor)
		{
		}

		[Token(Token = "0x60019CC")]
		[Address(RVA = "0x15E46B0", Offset = "0x15E46B0", VA = "0x15E46B0", Slot = "10")]
		public virtual void UpdateTracker()
		{
		}

		[Token(Token = "0x60019CD")]
		[Address(RVA = "0x15E4700", Offset = "0x15E4700", VA = "0x15E4700", Slot = "11")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA2CF14", Offset = "0xA2CF14")]
		protected virtual IEnumerator RefreshAtEndOfFrame()
		{
			return null;
		}

		[Token(Token = "0x60019CE")]
		[Address(RVA = "0x15E4770", Offset = "0x15E4770", VA = "0x15E4770", Slot = "12")]
		protected virtual void AddQuestTrack(string quest)
		{
		}

		[Token(Token = "0x60019CF")]
		[Address(RVA = "0x15E4CF4", Offset = "0x15E4CF4", VA = "0x15E4CF4", Slot = "13")]
		protected virtual string GetQuestEntryText(string quest, int entryNum, QuestState entryState)
		{
			return null;
		}

		[Token(Token = "0x60019D0")]
		[Address(RVA = "0x15E4EB8", Offset = "0x15E4EB8", VA = "0x15E4EB8")]
		public UnityUIQuestTracker()
		{
		}
	}
	[Token(Token = "0x20002AF")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA09620", Offset = "0xA09620")]
	public class UnityUISelectorDisplay : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000652")]
		public class AnimationTransitions
		{
			[Token(Token = "0x4001F34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string showTrigger;

			[Token(Token = "0x4001F35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string hideTrigger;

			[Token(Token = "0x6002B74")]
			[Address(RVA = "0x11626A0", Offset = "0x11626A0", VA = "0x11626A0")]
			public AnimationTransitions()
			{
			}
		}

		[Token(Token = "0x4000F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Graphic mainGraphic;

		[Token(Token = "0x4000F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text nameText;

		[Token(Token = "0x4000F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Text useMessageText;

		[Token(Token = "0x4000F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color inRangeColor;

		[Token(Token = "0x4000F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color outOfRangeColor;

		[Token(Token = "0x4000F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Graphic reticleInRange;

		[Token(Token = "0x4000F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Graphic reticleOutOfRange;

		[Token(Token = "0x4000F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AnimationTransitions animationTransitions;

		[Token(Token = "0x4000FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Selector selector;

		[Token(Token = "0x4000FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private ProximitySelector proximitySelector;

		[Token(Token = "0x4000FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private string defaultUseMessage;

		[Token(Token = "0x4000FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Usable usable;

		[Token(Token = "0x4000FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool lastInRange;

		[Token(Token = "0x4000FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private UsableUnityUI usableUnityUI;

		[Token(Token = "0x4000FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Animator animator;

		[Token(Token = "0x4000FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool started;

		[Token(Token = "0x170002F8")]
		protected float CurrentDistance
		{
			[Token(Token = "0x60019D1")]
			[Address(RVA = "0x1160DD8", Offset = "0x1160DD8", VA = "0x1160DD8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60019D2")]
		[Address(RVA = "0x1160E64", Offset = "0x1160E64", VA = "0x1160E64")]
		private void Awake()
		{
		}

		[Token(Token = "0x60019D3")]
		[Address(RVA = "0x1160ED0", Offset = "0x1160ED0", VA = "0x1160ED0")]
		public void Start()
		{
		}

		[Token(Token = "0x60019D4")]
		[Address(RVA = "0x1160F04", Offset = "0x1160F04", VA = "0x1160F04")]
		public void FindUIElements()
		{
		}

		[Token(Token = "0x60019D5")]
		[Address(RVA = "0x11615F0", Offset = "0x11615F0", VA = "0x11615F0")]
		private UnityUISelectorElements SearchForElements(Transform t)
		{
			return null;
		}

		[Token(Token = "0x60019D6")]
		[Address(RVA = "0x1161954", Offset = "0x1161954", VA = "0x1161954")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x60019D7")]
		[Address(RVA = "0x1161964", Offset = "0x1161964", VA = "0x1161964")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x60019D8")]
		[Address(RVA = "0x11612FC", Offset = "0x11612FC", VA = "0x11612FC")]
		private void ConnectDelegates()
		{
		}

		[Token(Token = "0x60019D9")]
		[Address(RVA = "0x1161968", Offset = "0x1161968", VA = "0x1161968")]
		private void DisconnectDelegates()
		{
		}

		[Token(Token = "0x60019DA")]
		[Address(RVA = "0x1161BE8", Offset = "0x1161BE8", VA = "0x1161BE8")]
		private void OnSelectedUsable(Usable usable)
		{
		}

		[Token(Token = "0x60019DB")]
		[Address(RVA = "0x11620F4", Offset = "0x11620F4", VA = "0x11620F4")]
		private void OnDeselectedUsable(Usable usable)
		{
		}

		[Token(Token = "0x60019DC")]
		[Address(RVA = "0x1161D0C", Offset = "0x1161D0C", VA = "0x1161D0C")]
		private string GetUseMessage()
		{
			return null;
		}

		[Token(Token = "0x60019DD")]
		[Address(RVA = "0x1161D5C", Offset = "0x1161D5C", VA = "0x1161D5C")]
		private void ShowControls()
		{
		}

		[Token(Token = "0x60019DE")]
		[Address(RVA = "0x1161B80", Offset = "0x1161B80", VA = "0x1161B80")]
		private void HideControls()
		{
		}

		[Token(Token = "0x60019DF")]
		[Address(RVA = "0x1161540", Offset = "0x1161540", VA = "0x1161540")]
		private void DeactivateControls()
		{
		}

		[Token(Token = "0x60019E0")]
		[Address(RVA = "0x1161F34", Offset = "0x1161F34", VA = "0x1161F34")]
		private bool IsUsableInRange()
		{
			return default(bool);
		}

		[Token(Token = "0x60019E1")]
		[Address(RVA = "0x1162374", Offset = "0x1162374", VA = "0x1162374")]
		public void Update()
		{
		}

		[Token(Token = "0x60019E2")]
		[Address(RVA = "0x1162408", Offset = "0x1162408", VA = "0x1162408")]
		public void OnConversationStart(Transform actor)
		{
		}

		[Token(Token = "0x60019E3")]
		[Address(RVA = "0x116240C", Offset = "0x116240C", VA = "0x116240C")]
		public void OnConversationEnd(Transform actor)
		{
		}

		[Token(Token = "0x60019E4")]
		[Address(RVA = "0x1161FD4", Offset = "0x1161FD4", VA = "0x1161FD4")]
		private void UpdateDisplay(bool inRange)
		{
		}

		[Token(Token = "0x60019E5")]
		[Address(RVA = "0x1162410", Offset = "0x1162410", VA = "0x1162410")]
		private void UpdateText(bool inRange)
		{
		}

		[Token(Token = "0x60019E6")]
		[Address(RVA = "0x1162574", Offset = "0x1162574", VA = "0x1162574")]
		private void UpdateReticle(bool inRange)
		{
		}

		[Token(Token = "0x60019E7")]
		[Address(RVA = "0x11622E8", Offset = "0x11622E8", VA = "0x11622E8")]
		private bool CanTriggerAnimations()
		{
			return default(bool);
		}

		[Token(Token = "0x60019E8")]
		[Address(RVA = "0x1162604", Offset = "0x1162604", VA = "0x1162604")]
		public UnityUISelectorDisplay()
		{
		}
	}
	[Token(Token = "0x20002B0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA09658", Offset = "0xA09658")]
	public class UnityUISelectorElements : MonoBehaviour
	{
		[Token(Token = "0x4000FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Graphic mainGraphic;

		[Token(Token = "0x4000FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text nameText;

		[Token(Token = "0x4000FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Text useMessageText;

		[Token(Token = "0x4000FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color inRangeColor;

		[Token(Token = "0x4000FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color outOfRangeColor;

		[Token(Token = "0x4000FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Graphic reticleInRange;

		[Token(Token = "0x4000FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Graphic reticleOutOfRange;

		[Token(Token = "0x4000FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public UnityUISelectorDisplay.AnimationTransitions animationTransitions;

		[Token(Token = "0x4000FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static UnityUISelectorElements instance;

		[Token(Token = "0x60019E9")]
		[Address(RVA = "0x1162708", Offset = "0x1162708", VA = "0x1162708")]
		private void Awake()
		{
		}

		[Token(Token = "0x60019EA")]
		[Address(RVA = "0x11627A0", Offset = "0x11627A0", VA = "0x11627A0")]
		public UnityUISelectorElements()
		{
		}
	}
	[Token(Token = "0x20002B1")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA09690", Offset = "0xA09690")]
	public class UsableUnityUI : AbstractUsableUI
	{
		[Serializable]
		[Token(Token = "0x2000653")]
		public class AnimationTransitions
		{
			[Token(Token = "0x4001F36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string showTrigger;

			[Token(Token = "0x4001F37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string hideTrigger;

			[Token(Token = "0x6002B75")]
			[Address(RVA = "0x1167A34", Offset = "0x1167A34", VA = "0x1167A34")]
			public AnimationTransitions()
			{
			}
		}

		[Token(Token = "0x4000FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text nameText;

		[Token(Token = "0x4000FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text useMessageText;

		[Token(Token = "0x4000FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color inRangeColor;

		[Token(Token = "0x4000FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color outOfRangeColor;

		[Token(Token = "0x4000FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Graphic reticleInRange;

		[Token(Token = "0x4000FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Graphic reticleOutOfRange;

		[Token(Token = "0x4000FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AnimationTransitions animationTransitions;

		[Token(Token = "0x4000FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Canvas canvas;

		[Token(Token = "0x4000FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Animator animator;

		[Token(Token = "0x60019EC")]
		[Address(RVA = "0x116734C", Offset = "0x116734C", VA = "0x116734C")]
		public void Awake()
		{
		}

		[Token(Token = "0x60019ED")]
		[Address(RVA = "0x11673E8", Offset = "0x11673E8", VA = "0x11673E8")]
		public void Start()
		{
		}

		[Token(Token = "0x60019EE")]
		[Address(RVA = "0x1167564", Offset = "0x1167564", VA = "0x1167564", Slot = "4")]
		public override void Show(string useMessage)
		{
		}

		[Token(Token = "0x60019EF")]
		[Address(RVA = "0x1167724", Offset = "0x1167724", VA = "0x1167724", Slot = "5")]
		public override void Hide()
		{
		}

		[Token(Token = "0x60019F0")]
		[Address(RVA = "0x1167804", Offset = "0x1167804", VA = "0x1167804")]
		public void OnBarkStart(Transform actor)
		{
		}

		[Token(Token = "0x60019F1")]
		[Address(RVA = "0x1167810", Offset = "0x1167810", VA = "0x1167810")]
		public void OnConversationStart(Transform actor)
		{
		}

		[Token(Token = "0x60019F2")]
		[Address(RVA = "0x116781C", Offset = "0x116781C", VA = "0x116781C", Slot = "6")]
		public override void UpdateDisplay(bool inRange)
		{
		}

		[Token(Token = "0x60019F3")]
		[Address(RVA = "0x1167698", Offset = "0x1167698", VA = "0x1167698")]
		private bool CanTriggerAnimations()
		{
			return default(bool);
		}

		[Token(Token = "0x60019F4")]
		[Address(RVA = "0x11679B0", Offset = "0x11679B0", VA = "0x11679B0")]
		public UsableUnityUI()
		{
		}
	}
	[Token(Token = "0x20002B2")]
	public abstract class AbstractTypewriterEffect : MonoBehaviour
	{
		[Token(Token = "0x2000654")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DEE8", Offset = "0xA0DEE8")]
		private sealed class <PauseForDuration>d__36 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AbstractTypewriterEffect <>4__this;

			[Token(Token = "0x4001F3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float duration;

			[Token(Token = "0x4001F3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <continueTime>5__2;

			[Token(Token = "0x4001F3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <pauseSafeguard>5__3;

			[Token(Token = "0x17000591")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B79")]
				[Address(RVA = "0x1426A8C", Offset = "0x1426A8C", VA = "0x1426A8C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000592")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B7B")]
				[Address(RVA = "0x1426AF4", Offset = "0x1426AF4", VA = "0x1426AF4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B76")]
			[Address(RVA = "0x1426894", Offset = "0x1426894", VA = "0x1426894")]
			[DebuggerHidden]
			public <PauseForDuration>d__36(int <>1__state)
			{
			}

			[Token(Token = "0x6002B77")]
			[Address(RVA = "0x142696C", Offset = "0x142696C", VA = "0x142696C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B78")]
			[Address(RVA = "0x1426970", Offset = "0x1426970", VA = "0x1426970", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B7A")]
			[Address(RVA = "0x1426A94", Offset = "0x1426A94", VA = "0x1426A94", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1DAEC", Offset = "0xA1DAEC")]
		public bool rightToLeft;

		[Token(Token = "0x4000FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1DB24", Offset = "0xA1DB24")]
		public float charactersPerSecond;

		[Token(Token = "0x4000FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1DB5C", Offset = "0xA1DB5C")]
		public AudioClip audioClip;

		[Token(Token = "0x4000FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1DB94", Offset = "0xA1DB94")]
		public AudioClip[] alternateAudioClips;

		[Token(Token = "0x4000FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1DBCC", Offset = "0xA1DBCC")]
		public AudioSource audioSource;

		[Token(Token = "0x4000FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1DC04", Offset = "0xA1DC04")]
		public bool interruptAudioClip;

		[Token(Token = "0x4000FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1DC3C", Offset = "0xA1DC3C")]
		public bool usePlayOneShot;

		[Token(Token = "0x4000FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1DC74", Offset = "0xA1DC74")]
		public string silentCharacters;

		[Token(Token = "0x4000FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1DCAC", Offset = "0xA1DCAC")]
		public string fullPauseCharacters;

		[Token(Token = "0x4000FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1DCE4", Offset = "0xA1DCE4")]
		public string quarterPauseCharacters;

		[Token(Token = "0x4000FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1DD1C", Offset = "0xA1DD1C")]
		public float fullPauseDuration;

		[Token(Token = "0x4000FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1DD54", Offset = "0xA1DD54")]
		public float quarterPauseDuration;

		[Token(Token = "0x4000FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1DD8C", Offset = "0xA1DD8C")]
		public bool removeDuplicateTypewriterEffects;

		[Token(Token = "0x4000FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1DDC4", Offset = "0xA1DDC4")]
		public bool playOnEnable;

		[Token(Token = "0x4000FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1DDFC", Offset = "0xA1DDFC")]
		public bool waitOneFrameBeforeStarting;

		[Token(Token = "0x4000FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1DE34", Offset = "0xA1DE34")]
		public bool stopOnConversationEnd;

		[Token(Token = "0x4000FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		protected bool paused;

		[Token(Token = "0x170002F9")]
		public abstract bool isPlaying
		{
			[Token(Token = "0x60019F5")]
			get;
		}

		[Token(Token = "0x60019F6")]
		[Address(RVA = "0x1426200", Offset = "0x1426200", VA = "0x1426200", Slot = "5")]
		public virtual float GetSpeed()
		{
			return default(float);
		}

		[Token(Token = "0x60019F7")]
		[Address(RVA = "0x1426208", Offset = "0x1426208", VA = "0x1426208", Slot = "6")]
		public virtual void SetSpeed(float charactersPerSecond)
		{
		}

		[Token(Token = "0x60019F8")]
		public abstract void Awake();

		[Token(Token = "0x60019F9")]
		public abstract void Start();

		[Token(Token = "0x60019FA")]
		[Address(RVA = "0x1426210", Offset = "0x1426210", VA = "0x1426210", Slot = "9")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x60019FB")]
		[Address(RVA = "0x1426344", Offset = "0x1426344", VA = "0x1426344", Slot = "10")]
		public virtual void OnDisable()
		{
		}

		[Token(Token = "0x60019FC")]
		[Address(RVA = "0x1426434", Offset = "0x1426434", VA = "0x1426434", Slot = "11")]
		public virtual void StopOnConversationEnd(Transform actor)
		{
		}

		[Token(Token = "0x60019FD")]
		public abstract void Stop();

		[Token(Token = "0x60019FE")]
		public abstract void StartTyping(string text, int fromIndex = 0);

		[Token(Token = "0x60019FF")]
		public abstract void StopTyping();

		[Token(Token = "0x6001A00")]
		[Address(RVA = "0x1426478", Offset = "0x1426478", VA = "0x1426478")]
		public static string StripRPGMakerCodes(string s)
		{
			return null;
		}

		[Token(Token = "0x6001A01")]
		[Address(RVA = "0x14264E0", Offset = "0x14264E0", VA = "0x14264E0")]
		protected bool IsFullPauseCharacter(char c)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A02")]
		[Address(RVA = "0x1426570", Offset = "0x1426570", VA = "0x1426570")]
		protected bool IsQuarterPauseCharacter(char c)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A03")]
		[Address(RVA = "0x1426578", Offset = "0x1426578", VA = "0x1426578")]
		protected bool IsSilentCharacter(char c)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A04")]
		[Address(RVA = "0x14264E8", Offset = "0x14264E8", VA = "0x14264E8")]
		protected bool IsCharacterInString(char c, string s)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A05")]
		[Address(RVA = "0x1426580", Offset = "0x1426580", VA = "0x1426580", Slot = "15")]
		protected virtual void PlayCharacterAudio(char c)
		{
		}

		[Token(Token = "0x6001A06")]
		[Address(RVA = "0x1426590", Offset = "0x1426590", VA = "0x1426590", Slot = "16")]
		protected virtual void PlayCharacterAudio()
		{
		}

		[Token(Token = "0x6001A07")]
		[Address(RVA = "0x1426814", Offset = "0x1426814", VA = "0x1426814")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA2CF78", Offset = "0xA2CF78")]
		protected IEnumerator PauseForDuration(float duration)
		{
			return null;
		}

		[Token(Token = "0x6001A08")]
		[Address(RVA = "0x14268C0", Offset = "0x14268C0", VA = "0x14268C0")]
		protected AbstractTypewriterEffect()
		{
		}
	}
	[Token(Token = "0x20002B3")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA096C8", Offset = "0xA096C8")]
	public class PreloadActorPortraits : MonoBehaviour
	{
		[Token(Token = "0x4000FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1DE6C", Offset = "0xA1DE6C")]
		public bool supportUnityUI;

		[Token(Token = "0x4000FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1DEA4", Offset = "0xA1DEA4")]
		public bool collapseLegacyTextures;

		[Token(Token = "0x4000FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Texture2D> legacyPortraits;

		[Token(Token = "0x6001A09")]
		[Address(RVA = "0x11C5CCC", Offset = "0x11C5CCC", VA = "0x11C5CCC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A0A")]
		[Address(RVA = "0x11C5EFC", Offset = "0x11C5EFC", VA = "0x11C5EFC")]
		public void PreloadActor(Actor actor)
		{
		}

		[Token(Token = "0x6001A0B")]
		[Address(RVA = "0x11C5FD0", Offset = "0x11C5FD0", VA = "0x11C5FD0")]
		public Texture2D PreloadTexture(Texture2D texture)
		{
			return null;
		}

		[Token(Token = "0x6001A0C")]
		[Address(RVA = "0x11C6198", Offset = "0x11C6198", VA = "0x11C6198")]
		public PreloadActorPortraits()
		{
		}
	}
	[Token(Token = "0x20002B4")]
	public class QueuedUIAlert
	{
		[Token(Token = "0x4000FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string message;

		[Token(Token = "0x4000FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float duration;

		[Token(Token = "0x6001A0D")]
		[Address(RVA = "0x11D35E4", Offset = "0x11D35E4", VA = "0x11D35E4")]
		public QueuedUIAlert(string message, float duration)
		{
		}
	}
	[Token(Token = "0x20002B5")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA09700", Offset = "0xA09700")]
	[DisallowMultipleComponent]
	public class TextMeshProTypewriterEffect : AbstractTypewriterEffect
	{
		[Serializable]
		[Token(Token = "0x2000655")]
		public class AutoScrollSettings
		{
			[Token(Token = "0x4001F3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA257DC", Offset = "0xA257DC")]
			public bool autoScrollEnabled;

			[Token(Token = "0x4001F3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ScrollRect scrollRect;

			[Token(Token = "0x4001F40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA25814", Offset = "0xA25814")]
			public UIScrollbarEnabler scrollbarEnabler;

			[Token(Token = "0x6002B7C")]
			[Address(RVA = "0x12F2958", Offset = "0x12F2958", VA = "0x12F2958")]
			public AutoScrollSettings()
			{
			}
		}

		[Token(Token = "0x2000656")]
		protected enum RPGMakerTokenType
		{
			[Token(Token = "0x4001F42")]
			None,
			[Token(Token = "0x4001F43")]
			QuarterPause,
			[Token(Token = "0x4001F44")]
			FullPause,
			[Token(Token = "0x4001F45")]
			SkipToEnd,
			[Token(Token = "0x4001F46")]
			InstantOpen,
			[Token(Token = "0x4001F47")]
			InstantClose
		}

		[Token(Token = "0x2000657")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DEF8", Offset = "0xA0DEF8")]
		private sealed class <Play>d__41 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TextMeshProTypewriterEffect <>4__this;

			[Token(Token = "0x4001F4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int fromIndex;

			[Token(Token = "0x4001F4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <delay>5__2;

			[Token(Token = "0x4001F4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <lastTime>5__3;

			[Token(Token = "0x4001F4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <elapsed>5__4;

			[Token(Token = "0x4001F4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private string <parsedText>5__5;

			[Token(Token = "0x4001F50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int <totalVisibleCharacters>5__6;

			[Token(Token = "0x4001F51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private int <skippedCharacters>5__7;

			[Token(Token = "0x4001F52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <delayTime>5__8;

			[Token(Token = "0x4001F53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private int <delaySafeguard>5__9;

			[Token(Token = "0x4001F54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private float <goal>5__10;

			[Token(Token = "0x4001F55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private List<RPGMakerTokenType> <tokens>5__11;

			[Token(Token = "0x4001F56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private int <i>5__12;

			[Token(Token = "0x17000593")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B80")]
				[Address(RVA = "0x12F3110", Offset = "0x12F3110", VA = "0x12F3110", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000594")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B82")]
				[Address(RVA = "0x12F3178", Offset = "0x12F3178", VA = "0x12F3178", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B7D")]
			[Address(RVA = "0x12F20B8", Offset = "0x12F20B8", VA = "0x12F20B8")]
			[DebuggerHidden]
			public <Play>d__41(int <>1__state)
			{
			}

			[Token(Token = "0x6002B7E")]
			[Address(RVA = "0x12F2960", Offset = "0x12F2960", VA = "0x12F2960", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B7F")]
			[Address(RVA = "0x12F2964", Offset = "0x12F2964", VA = "0x12F2964", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B81")]
			[Address(RVA = "0x12F3118", Offset = "0x12F3118", VA = "0x12F3118", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AutoScrollSettings autoScrollSettings;

		[Token(Token = "0x4000FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public UnityEvent onBegin;

		[Token(Token = "0x4000FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public UnityEvent onCharacter;

		[Token(Token = "0x4000FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public UnityEvent onEnd;

		[Token(Token = "0x4000FD4")]
		protected const string RPGMakerCodeQuarterPause = "\\,";

		[Token(Token = "0x4000FD5")]
		protected const string RPGMakerCodeFullPause = "\\.";

		[Token(Token = "0x4000FD6")]
		protected const string RPGMakerCodeSkipToEnd = "\\^";

		[Token(Token = "0x4000FD7")]
		protected const string RPGMakerCodeInstantOpen = "\\>";

		[Token(Token = "0x4000FD8")]
		protected const string RPGMakerCodeInstantClose = "\\<";

		[Token(Token = "0x4000FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected Dictionary<int, List<RPGMakerTokenType>> rpgMakerTokens;

		[Token(Token = "0x4000FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected TMP_Text m_textComponent;

		[Token(Token = "0x4000FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected LayoutElement m_layoutElement;

		[Token(Token = "0x4000FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected bool started;

		[Token(Token = "0x4000FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		protected int charactersTyped;

		[Token(Token = "0x4000FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected Coroutine typewriterCoroutine;

		[Token(Token = "0x4000FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected MonoBehaviour coroutineController;

		[Token(Token = "0x4000FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float lastStartTime;

		[Token(Token = "0x170002FA")]
		public override bool isPlaying
		{
			[Token(Token = "0x6001A0E")]
			[Address(RVA = "0x12F170C", Offset = "0x12F170C", VA = "0x12F170C", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002FB")]
		public bool IsPlaying
		{
			[Token(Token = "0x6001A0F")]
			[Address(RVA = "0x12F171C", Offset = "0x12F171C", VA = "0x12F171C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002FC")]
		protected TMP_Text textComponent
		{
			[Token(Token = "0x6001A10")]
			[Address(RVA = "0x12F1728", Offset = "0x12F1728", VA = "0x12F1728")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002FD")]
		protected LayoutElement layoutElement
		{
			[Token(Token = "0x6001A11")]
			[Address(RVA = "0x12F17C0", Offset = "0x12F17C0", VA = "0x12F17C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002FE")]
		protected AudioSource runtimeAudioSource
		{
			[Token(Token = "0x6001A12")]
			[Address(RVA = "0x12F18B4", Offset = "0x12F18B4", VA = "0x12F18B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A13")]
		[Address(RVA = "0x12F1A04", Offset = "0x12F1A04", VA = "0x12F1A04", Slot = "7")]
		public override void Awake()
		{
		}

		[Token(Token = "0x6001A14")]
		[Address(RVA = "0x12F1A14", Offset = "0x12F1A14", VA = "0x12F1A14")]
		protected void RemoveIfDuplicate()
		{
		}

		[Token(Token = "0x6001A15")]
		[Address(RVA = "0x12F1B94", Offset = "0x12F1B94", VA = "0x12F1B94", Slot = "8")]
		public override void Start()
		{
		}

		[Token(Token = "0x6001A16")]
		[Address(RVA = "0x12F1E24", Offset = "0x12F1E24", VA = "0x12F1E24", Slot = "9")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x6001A17")]
		[Address(RVA = "0x12F1E88", Offset = "0x12F1E88", VA = "0x12F1E88", Slot = "10")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x6001A18")]
		[Address(RVA = "0x12F1EB8", Offset = "0x12F1EB8", VA = "0x12F1EB8")]
		public void Pause()
		{
		}

		[Token(Token = "0x6001A19")]
		[Address(RVA = "0x12F1EC4", Offset = "0x12F1EC4", VA = "0x12F1EC4")]
		public void Unpause()
		{
		}

		[Token(Token = "0x6001A1A")]
		[Address(RVA = "0x12F1ECC", Offset = "0x12F1ECC", VA = "0x12F1ECC")]
		public void Rewind()
		{
		}

		[Token(Token = "0x6001A1B")]
		[Address(RVA = "0x12F1ED4", Offset = "0x12F1ED4", VA = "0x12F1ED4", Slot = "13")]
		public override void StartTyping(string text, int fromIndex = 0)
		{
		}

		[Token(Token = "0x6001A1C")]
		[Address(RVA = "0x12F1F88", Offset = "0x12F1F88", VA = "0x12F1F88", Slot = "14")]
		public override void StopTyping()
		{
		}

		[Token(Token = "0x6001A1D")]
		[Address(RVA = "0x12F1F94", Offset = "0x12F1F94", VA = "0x12F1F94", Slot = "17")]
		public virtual void PlayText(string text, int fromIndex = 0)
		{
		}

		[Token(Token = "0x6001A1E")]
		[Address(RVA = "0x12F1C98", Offset = "0x12F1C98", VA = "0x12F1C98")]
		protected void StartTypewriterCoroutine(int fromIndex)
		{
		}

		[Token(Token = "0x6001A1F")]
		[Address(RVA = "0x12F2038", Offset = "0x12F2038", VA = "0x12F2038", Slot = "18")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA2CFDC", Offset = "0xA2CFDC")]
		public virtual IEnumerator Play(int fromIndex)
		{
			return null;
		}

		[Token(Token = "0x6001A20")]
		[Address(RVA = "0x12F20E4", Offset = "0x12F20E4", VA = "0x12F20E4")]
		protected void ProcessRPGMakerCodes()
		{
		}

		[Token(Token = "0x6001A21")]
		[Address(RVA = "0x12F23C0", Offset = "0x12F23C0", VA = "0x12F23C0")]
		protected bool PeelRPGMakerTokenFromFront(ref string source, out RPGMakerTokenType token)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A22")]
		[Address(RVA = "0x12F1BE4", Offset = "0x12F1BE4", VA = "0x12F1BE4")]
		protected void StopTypewriterCoroutine()
		{
		}

		[Token(Token = "0x6001A23")]
		[Address(RVA = "0x12F2550", Offset = "0x12F2550", VA = "0x12F2550", Slot = "12")]
		public override void Stop()
		{
		}

		[Token(Token = "0x6001A24")]
		[Address(RVA = "0x12F2670", Offset = "0x12F2670", VA = "0x12F2670")]
		protected void HandleAutoScroll()
		{
		}

		[Token(Token = "0x6001A25")]
		[Address(RVA = "0x12F2870", Offset = "0x12F2870", VA = "0x12F2870")]
		public TextMeshProTypewriterEffect()
		{
		}
	}
	[Token(Token = "0x20002B6")]
	public static class TypewriterUtility
	{
		[Token(Token = "0x6001A26")]
		[Address(RVA = "0x12EA958", Offset = "0x12EA958", VA = "0x12EA958")]
		public static AbstractTypewriterEffect GetTypewriter(UITextField textField)
		{
			return null;
		}

		[Token(Token = "0x6001A27")]
		[Address(RVA = "0x12F67F8", Offset = "0x12F67F8", VA = "0x12F67F8")]
		public static bool HasTypewriter(UITextField textField)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A28")]
		[Address(RVA = "0x12EA6D0", Offset = "0x12EA6D0", VA = "0x12EA6D0")]
		public static float GetTypewriterSpeed(AbstractTypewriterEffect typewriter)
		{
			return default(float);
		}

		[Token(Token = "0x6001A29")]
		[Address(RVA = "0x12EA944", Offset = "0x12EA944", VA = "0x12EA944")]
		public static float GetTypewriterSpeed(UITextField textField)
		{
			return default(float);
		}

		[Token(Token = "0x6001A2A")]
		[Address(RVA = "0x12EAE34", Offset = "0x12EAE34", VA = "0x12EAE34")]
		public static void SetTypewriterSpeed(UITextField textField, float charactersPerSecond)
		{
		}

		[Token(Token = "0x6001A2B")]
		[Address(RVA = "0x12EC8E4", Offset = "0x12EC8E4", VA = "0x12EC8E4")]
		public static void StartTyping(UITextField textField, string text, int fromIndex = 0)
		{
		}

		[Token(Token = "0x6001A2C")]
		[Address(RVA = "0x12EC6AC", Offset = "0x12EC6AC", VA = "0x12EC6AC")]
		public static void StopTyping(UITextField textField)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002B7")]
	public class UIAnimationTransitions
	{
		[Token(Token = "0x4000FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1DEDC", Offset = "0xA1DEDC")]
		public string showTrigger;

		[Token(Token = "0x4000FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1DF14", Offset = "0xA1DF14")]
		public string hideTrigger;

		[Token(Token = "0x4000FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1DF4C", Offset = "0xA1DF4C")]
		public UIShowHideController.TransitionMode transitionMode;

		[Token(Token = "0x4000FE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool debug;

		[Token(Token = "0x6001A2D")]
		[Address(RVA = "0x12F6874", Offset = "0x12F6874", VA = "0x12F6874")]
		public void ClearTriggers(UIShowHideController showHideController)
		{
		}

		[Token(Token = "0x6001A2E")]
		[Address(RVA = "0x12F6930", Offset = "0x12F6930", VA = "0x12F6930")]
		public UIAnimationTransitions()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002B8")]
	public class UIAutonumberSettings
	{
		[Token(Token = "0x4000FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1DF84", Offset = "0xA1DF84")]
		public bool enabled;

		[Token(Token = "0x4000FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1DFBC", Offset = "0xA1DFBC")]
		public bool regularNumberHotkeys;

		[Token(Token = "0x4000FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1DFF4", Offset = "0xA1DFF4")]
		public bool numpadHotkeys;

		[Token(Token = "0x4000FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1E02C", Offset = "0xA1E02C")]
		public string format;

		[Token(Token = "0x6001A2F")]
		[Address(RVA = "0x12F6998", Offset = "0x12F6998", VA = "0x12F6998")]
		public UIAutonumberSettings()
		{
		}
	}
	[Token(Token = "0x20002B9")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0974C", Offset = "0xA0974C")]
	public class UIButtonKeyTrigger : PixelCrushers.UIButtonKeyTrigger
	{
		[Token(Token = "0x6001A30")]
		[Address(RVA = "0x12F69F8", Offset = "0x12F69F8", VA = "0x12F69F8")]
		public UIButtonKeyTrigger()
		{
		}
	}
	[Token(Token = "0x20002BA")]
	public class UIShowHideController
	{
		[Token(Token = "0x2000658")]
		public enum TransitionMode
		{
			[Token(Token = "0x4001F58")]
			State,
			[Token(Token = "0x4001F59")]
			Trigger
		}

		[Token(Token = "0x2000659")]
		public enum State
		{
			[Token(Token = "0x4001F5B")]
			Undefined,
			[Token(Token = "0x4001F5C")]
			Showing,
			[Token(Token = "0x4001F5D")]
			Shown,
			[Token(Token = "0x4001F5E")]
			Hiding,
			[Token(Token = "0x4001F5F")]
			Hidden
		}

		[Token(Token = "0x200065A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DF08", Offset = "0xA0DF08")]
		private sealed class <WaitForAnimationState>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIShowHideController <>4__this;

			[Token(Token = "0x4001F63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public State stateWhenEnd;

			[Token(Token = "0x4001F64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public State stateWhenBegin;

			[Token(Token = "0x4001F65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string stateName;

			[Token(Token = "0x4001F66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool wait;

			[Token(Token = "0x4001F67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
			public bool panelActive;

			[Token(Token = "0x4001F68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
			public bool pauseAfterAnimation;

			[Token(Token = "0x4001F69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Action callback;

			[Token(Token = "0x4001F6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <timeout>5__2;

			[Token(Token = "0x17000595")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B86")]
				[Address(RVA = "0x12F7C30", Offset = "0x12F7C30", VA = "0x12F7C30", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000596")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B88")]
				[Address(RVA = "0x12F7C98", Offset = "0x12F7C98", VA = "0x12F7C98", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B83")]
			[Address(RVA = "0x12F7088", Offset = "0x12F7088", VA = "0x12F7088")]
			[DebuggerHidden]
			public <WaitForAnimationState>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x6002B84")]
			[Address(RVA = "0x12F74CC", Offset = "0x12F74CC", VA = "0x12F74CC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B85")]
			[Address(RVA = "0x12F74D0", Offset = "0x12F74D0", VA = "0x12F74D0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B87")]
			[Address(RVA = "0x12F7C38", Offset = "0x12F7C38", VA = "0x12F7C38", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200065B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DF18", Offset = "0xA0DF18")]
		private sealed class <WaitForAnimationTrigger>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIShowHideController <>4__this;

			[Token(Token = "0x4001F6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public State stateWhenEnd;

			[Token(Token = "0x4001F6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public State stateWhenBegin;

			[Token(Token = "0x4001F70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool panelActive;

			[Token(Token = "0x4001F71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string triggerName;

			[Token(Token = "0x4001F72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public bool wait;

			[Token(Token = "0x4001F73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
			public bool pauseAfterAnimation;

			[Token(Token = "0x4001F74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Action callback;

			[Token(Token = "0x4001F75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private float <timeout>5__2;

			[Token(Token = "0x4001F76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private int <goalHashID>5__3;

			[Token(Token = "0x4001F77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private int <oldHashId>5__4;

			[Token(Token = "0x4001F78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			private int <currentHashID>5__5;

			[Token(Token = "0x17000597")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B8C")]
				[Address(RVA = "0x12F85F4", Offset = "0x12F85F4", VA = "0x12F85F4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000598")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B8E")]
				[Address(RVA = "0x12F865C", Offset = "0x12F865C", VA = "0x12F865C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B89")]
			[Address(RVA = "0x12F70B4", Offset = "0x12F70B4", VA = "0x12F70B4")]
			[DebuggerHidden]
			public <WaitForAnimationTrigger>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x6002B8A")]
			[Address(RVA = "0x12F7CA0", Offset = "0x12F7CA0", VA = "0x12F7CA0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B8B")]
			[Address(RVA = "0x12F7CA4", Offset = "0x12F7CA4", VA = "0x12F7CA4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B8D")]
			[Address(RVA = "0x12F85FC", Offset = "0x12F85FC", VA = "0x12F85FC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float maxWaitDuration;

		[Token(Token = "0x4000FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1E064", Offset = "0xA1E064")]
		private Component <panel>k__BackingField;

		[Token(Token = "0x4000FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1E074", Offset = "0xA1E074")]
		private State <state>k__BackingField;

		[Token(Token = "0x4000FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1E084", Offset = "0xA1E084")]
		private bool <debug>k__BackingField;

		[Token(Token = "0x4000FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TransitionMode m_transitionMode;

		[Token(Token = "0x4000FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Animator m_animator;

		[Token(Token = "0x4000FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_lookedForAnimator;

		[Token(Token = "0x4000FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Coroutine m_animCoroutine;

		[Token(Token = "0x170002FF")]
		public Component panel
		{
			[Token(Token = "0x6001A31")]
			[Address(RVA = "0x12F6A60", Offset = "0x12F6A60", VA = "0x12F6A60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2E040", Offset = "0xA2E040")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A32")]
			[Address(RVA = "0x12F6A68", Offset = "0x12F6A68", VA = "0x12F6A68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2E050", Offset = "0xA2E050")]
			set
			{
			}
		}

		[Token(Token = "0x17000300")]
		public State state
		{
			[Token(Token = "0x6001A33")]
			[Address(RVA = "0x12F6A70", Offset = "0x12F6A70", VA = "0x12F6A70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2E060", Offset = "0xA2E060")]
			get
			{
				return default(State);
			}
			[Token(Token = "0x6001A34")]
			[Address(RVA = "0x12F6A78", Offset = "0x12F6A78", VA = "0x12F6A78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2E070", Offset = "0xA2E070")]
			set
			{
			}
		}

		[Token(Token = "0x17000301")]
		public bool debug
		{
			[Token(Token = "0x6001A35")]
			[Address(RVA = "0x12F6A80", Offset = "0x12F6A80", VA = "0x12F6A80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2E080", Offset = "0xA2E080")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A36")]
			[Address(RVA = "0x12F6A88", Offset = "0x12F6A88", VA = "0x12F6A88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2E090", Offset = "0xA2E090")]
			set
			{
			}
		}

		[Token(Token = "0x6001A37")]
		[Address(RVA = "0x12F6A94", Offset = "0x12F6A94", VA = "0x12F6A94")]
		public UIShowHideController(GameObject gameObjectToControl, Component panelToControl, TransitionMode animationMode = TransitionMode.Trigger, bool debug = false)
		{
		}

		[Token(Token = "0x6001A38")]
		[Address(RVA = "0x12F6BF0", Offset = "0x12F6BF0", VA = "0x12F6BF0")]
		public void Show(string showState, bool pauseAfterAnimation, Action callback, bool wait = true)
		{
		}

		[Token(Token = "0x6001A39")]
		[Address(RVA = "0x12F6F58", Offset = "0x12F6F58", VA = "0x12F6F58")]
		public void Hide(string hideState, Action callback)
		{
		}

		[Token(Token = "0x6001A3A")]
		[Address(RVA = "0x12F6DB8", Offset = "0x12F6DB8", VA = "0x12F6DB8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA2E0A0", Offset = "0xA2E0A0")]
		private IEnumerator WaitForAnimationState(State stateWhenBegin, State stateWhenEnd, string stateName, bool pauseAfterAnimation, bool panelActive, bool wait, Action callback)
		{
			return null;
		}

		[Token(Token = "0x6001A3B")]
		[Address(RVA = "0x12F6E88", Offset = "0x12F6E88", VA = "0x12F6E88")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA2E104", Offset = "0xA2E104")]
		private IEnumerator WaitForAnimationTrigger(State stateWhenBegin, State stateWhenEnd, string triggerName, bool pauseAfterAnimation, bool panelActive, bool wait, Action callback)
		{
			return null;
		}

		[Token(Token = "0x6001A3C")]
		[Address(RVA = "0x12F70E0", Offset = "0x12F70E0", VA = "0x12F70E0")]
		private void CheckAnimatorModeAndTimescale(string triggerName)
		{
		}

		[Token(Token = "0x6001A3D")]
		[Address(RVA = "0x12F6D30", Offset = "0x12F6D30", VA = "0x12F6D30")]
		private void CancelCurrentAnim()
		{
		}

		[Token(Token = "0x6001A3E")]
		[Address(RVA = "0x12F68C4", Offset = "0x12F68C4", VA = "0x12F68C4")]
		public void ClearTrigger(string triggerName)
		{
		}

		[Token(Token = "0x6001A3F")]
		[Address(RVA = "0x12F7438", Offset = "0x12F7438", VA = "0x12F7438")]
		private bool CanTriggerAnimation(string stateName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A40")]
		[Address(RVA = "0x12F722C", Offset = "0x12F722C", VA = "0x12F722C")]
		private bool HasAnimator()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002BB")]
	public static class UITools
	{
		[Token(Token = "0x4000FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Dictionary<Texture2D, Sprite> spriteCache;

		[Token(Token = "0x4000FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static AbstractDialogueUI dialogueUI;

		[Token(Token = "0x4000FF3")]
		public const string RPGMakerCodeQuarterPause = "\\,";

		[Token(Token = "0x4000FF4")]
		public const string RPGMakerCodeFullPause = "\\.";

		[Token(Token = "0x4000FF5")]
		public const string RPGMakerCodeSkipToEnd = "\\^";

		[Token(Token = "0x4000FF6")]
		public const string RPGMakerCodeInstantOpen = "\\>";

		[Token(Token = "0x4000FF7")]
		public const string RPGMakerCodeInstantClose = "\\<";

		[Token(Token = "0x6001A42")]
		[Address(RVA = "0x12F8664", Offset = "0x12F8664", VA = "0x12F8664")]
		public static void RequireEventSystem()
		{
		}

		[Token(Token = "0x6001A43")]
		[Address(RVA = "0x12F85EC", Offset = "0x12F85EC", VA = "0x12F85EC")]
		public static int GetAnimatorNameHash(AnimatorStateInfo animatorStateInfo)
		{
			return default(int);
		}

		[Token(Token = "0x6001A44")]
		[Address(RVA = "0x12F884C", Offset = "0x12F884C", VA = "0x12F884C")]
		public static void ClearSpriteCache()
		{
		}

		[Token(Token = "0x6001A45")]
		[Address(RVA = "0x12EB31C", Offset = "0x12EB31C", VA = "0x12EB31C")]
		public static Sprite CreateSprite(Texture2D texture)
		{
			return null;
		}

		[Token(Token = "0x6001A46")]
		[Address(RVA = "0x12F88C8", Offset = "0x12F88C8", VA = "0x12F88C8")]
		public static Sprite GetSprite(Texture2D texture, Sprite sprite)
		{
			return null;
		}

		[Token(Token = "0x6001A47")]
		[Address(RVA = "0x12F8980", Offset = "0x12F8980", VA = "0x12F8980")]
		public static Texture2D GetTexture2D(Sprite sprite)
		{
			return null;
		}

		[Token(Token = "0x6001A48")]
		[Address(RVA = "0x12E57B8", Offset = "0x12E57B8", VA = "0x12E57B8")]
		public static string GetUIFormattedText(FormattedText formattedText)
		{
			return null;
		}

		[Token(Token = "0x6001A49")]
		[Address(RVA = "0x12F8A14", Offset = "0x12F8A14", VA = "0x12F8A14")]
		public static void SendTextChangeMessage(Text text)
		{
		}

		[Token(Token = "0x6001A4A")]
		[Address(RVA = "0x12E51CC", Offset = "0x12E51CC", VA = "0x12E51CC")]
		public static void SendTextChangeMessage(UITextField textField)
		{
		}

		[Token(Token = "0x6001A4B")]
		[Address(RVA = "0x12E2BB0", Offset = "0x12E2BB0", VA = "0x12E2BB0")]
		public static void Select(Selectable selectable, bool allowStealFocus = true)
		{
		}

		[Token(Token = "0x6001A4C")]
		[Address(RVA = "0x12E5090", Offset = "0x12E5090", VA = "0x12E5090")]
		public static string StripRPGMakerCodes(string s)
		{
			return null;
		}

		[Token(Token = "0x6001A4D")]
		[Address(RVA = "0x12F8BDC", Offset = "0x12F8BDC", VA = "0x12F8BDC")]
		public static string WrapTextInColor(string text, Color color)
		{
			return null;
		}

		[Token(Token = "0x6001A4E")]
		[Address(RVA = "0x12F91E8", Offset = "0x12F91E8", VA = "0x12F91E8")]
		public static void EnableInteractivity(GameObject go)
		{
		}
	}
	[Token(Token = "0x20002BC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA09784", Offset = "0xA09784")]
	public class UnityUIColorText : UITextColor
	{
		[Token(Token = "0x6001A50")]
		[Address(RVA = "0x15DDC3C", Offset = "0x15DDC3C", VA = "0x15DDC3C")]
		public UnityUIColorText()
		{
		}
	}
	[Token(Token = "0x20002BD")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA097BC", Offset = "0xA097BC")]
	[DisallowMultipleComponent]
	public class UnityUIIgnorePauseCodes : MonoBehaviour
	{
		[Token(Token = "0x200065C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DF28", Offset = "0xA0DF28")]
		private sealed class <Clean>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UnityUIIgnorePauseCodes <>4__this;

			[Token(Token = "0x17000599")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B92")]
				[Address(RVA = "0x15DFB3C", Offset = "0x15DFB3C", VA = "0x15DFB3C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700059A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B94")]
				[Address(RVA = "0x15DFBA4", Offset = "0x15DFBA4", VA = "0x15DFBA4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B8F")]
			[Address(RVA = "0x15DF9A8", Offset = "0x15DF9A8", VA = "0x15DF9A8")]
			[DebuggerHidden]
			public <Clean>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6002B90")]
			[Address(RVA = "0x15DF9DC", Offset = "0x15DF9DC", VA = "0x15DF9DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B91")]
			[Address(RVA = "0x15DF9E0", Offset = "0x15DF9E0", VA = "0x15DF9E0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B93")]
			[Address(RVA = "0x15DFB44", Offset = "0x15DFB44", VA = "0x15DFB44", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Text control;

		[Token(Token = "0x6001A51")]
		[Address(RVA = "0x15DF7DC", Offset = "0x15DF7DC", VA = "0x15DF7DC")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001A52")]
		[Address(RVA = "0x15DF860", Offset = "0x15DF860", VA = "0x15DF860")]
		public void Start()
		{
		}

		[Token(Token = "0x6001A53")]
		[Address(RVA = "0x15DF934", Offset = "0x15DF934", VA = "0x15DF934")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001A54")]
		[Address(RVA = "0x15DF864", Offset = "0x15DF864", VA = "0x15DF864")]
		public void CheckText()
		{
		}

		[Token(Token = "0x6001A55")]
		[Address(RVA = "0x15DF938", Offset = "0x15DF938", VA = "0x15DF938")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA2E168", Offset = "0xA2E168")]
		private IEnumerator Clean()
		{
			return null;
		}

		[Token(Token = "0x6001A56")]
		[Address(RVA = "0x15DF9D4", Offset = "0x15DF9D4", VA = "0x15DF9D4")]
		public UnityUIIgnorePauseCodes()
		{
		}
	}
	[Token(Token = "0x20002BE")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA09808", Offset = "0xA09808")]
	public class UnityUIScrollbarEnabler : UIScrollbarEnabler
	{
		[Token(Token = "0x6001A57")]
		[Address(RVA = "0x1160DD0", Offset = "0x1160DD0", VA = "0x1160DD0")]
		public UnityUIScrollbarEnabler()
		{
		}
	}
	[Token(Token = "0x20002BF")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA09840", Offset = "0xA09840")]
	[DisallowMultipleComponent]
	public class UnityUITypewriterEffect : AbstractTypewriterEffect
	{
		[Serializable]
		[Token(Token = "0x200065D")]
		public class AutoScrollSettings
		{
			[Token(Token = "0x4001F7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA2584C", Offset = "0xA2584C")]
			public bool autoScrollEnabled;

			[Token(Token = "0x4001F7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ScrollRect scrollRect;

			[Token(Token = "0x4001F7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA25884", Offset = "0xA25884")]
			public UIScrollbarEnabler scrollbarEnabler;

			[Token(Token = "0x4001F7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA258BC", Offset = "0xA258BC")]
			public Text sizerText;

			[Token(Token = "0x6002B95")]
			[Address(RVA = "0x11663F0", Offset = "0x11663F0", VA = "0x11663F0")]
			public AutoScrollSettings()
			{
			}
		}

		[Token(Token = "0x200065E")]
		protected enum TokenType
		{
			[Token(Token = "0x4001F81")]
			Character,
			[Token(Token = "0x4001F82")]
			BoldOpen,
			[Token(Token = "0x4001F83")]
			BoldClose,
			[Token(Token = "0x4001F84")]
			ItalicOpen,
			[Token(Token = "0x4001F85")]
			ItalicClose,
			[Token(Token = "0x4001F86")]
			ColorOpen,
			[Token(Token = "0x4001F87")]
			ColorClose,
			[Token(Token = "0x4001F88")]
			SizeOpen,
			[Token(Token = "0x4001F89")]
			SizeClose,
			[Token(Token = "0x4001F8A")]
			Quad,
			[Token(Token = "0x4001F8B")]
			Pause,
			[Token(Token = "0x4001F8C")]
			InstantOpen,
			[Token(Token = "0x4001F8D")]
			InstantClose
		}

		[Token(Token = "0x200065F")]
		protected class Token
		{
			[Token(Token = "0x4001F8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TokenType tokenType;

			[Token(Token = "0x4001F8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public char character;

			[Token(Token = "0x4001F90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string code;

			[Token(Token = "0x4001F91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float duration;

			[Token(Token = "0x6002B96")]
			[Address(RVA = "0x1165CAC", Offset = "0x1165CAC", VA = "0x1165CAC")]
			public Token(TokenType tokenType, char character, string code, float duration)
			{
			}
		}

		[Token(Token = "0x2000660")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DF38", Offset = "0xA0DF38")]
		private sealed class <Play>d__41 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UnityUITypewriterEffect <>4__this;

			[Token(Token = "0x4001F95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int fromIndex;

			[Token(Token = "0x4001F96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <delay>5__2;

			[Token(Token = "0x4001F97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <lastTime>5__3;

			[Token(Token = "0x4001F98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <elapsed>5__4;

			[Token(Token = "0x4001F99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <charactersTyped>5__5;

			[Token(Token = "0x4001F9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private int <preTyped>5__6;

			[Token(Token = "0x4001F9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int <safeguard>5__7;

			[Token(Token = "0x4001F9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <delayTime>5__8;

			[Token(Token = "0x4001F9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <delaySafeguard>5__9;

			[Token(Token = "0x4001F9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <goal>5__10;

			[Token(Token = "0x1700059B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B9A")]
				[Address(RVA = "0x1166CA0", Offset = "0x1166CA0", VA = "0x1166CA0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700059C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B9C")]
				[Address(RVA = "0x1166D08", Offset = "0x1166D08", VA = "0x1166D08", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B97")]
			[Address(RVA = "0x1164D5C", Offset = "0x1164D5C", VA = "0x1164D5C")]
			[DebuggerHidden]
			public <Play>d__41(int <>1__state)
			{
			}

			[Token(Token = "0x6002B98")]
			[Address(RVA = "0x11664C0", Offset = "0x11664C0", VA = "0x11664C0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B99")]
			[Address(RVA = "0x11664C4", Offset = "0x11664C4", VA = "0x11664C4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B9B")]
			[Address(RVA = "0x1166CA8", Offset = "0x1166CA8", VA = "0x1166CA8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000661")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DF48", Offset = "0xA0DF48")]
		private sealed class <HandleAutoScrollAfterOneFrame>d__56 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UnityUITypewriterEffect <>4__this;

			[Token(Token = "0x1700059D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002BA0")]
				[Address(RVA = "0x1166450", Offset = "0x1166450", VA = "0x1166450", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700059E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BA2")]
				[Address(RVA = "0x11664B8", Offset = "0x11664B8", VA = "0x11664B8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B9D")]
			[Address(RVA = "0x11662E4", Offset = "0x11662E4", VA = "0x11662E4")]
			[DebuggerHidden]
			public <HandleAutoScrollAfterOneFrame>d__56(int <>1__state)
			{
			}

			[Token(Token = "0x6002B9E")]
			[Address(RVA = "0x11663F8", Offset = "0x11663F8", VA = "0x11663F8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B9F")]
			[Address(RVA = "0x11663FC", Offset = "0x11663FC", VA = "0x11663FC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BA1")]
			[Address(RVA = "0x1166458", Offset = "0x1166458", VA = "0x1166458", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AutoScrollSettings autoScrollSettings;

		[Token(Token = "0x4000FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public UnityEvent onBegin;

		[Token(Token = "0x4000FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public UnityEvent onCharacter;

		[Token(Token = "0x4000FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public UnityEvent onEnd;

		[Token(Token = "0x4000FFD")]
		protected const string RichTextBoldOpen = "<b>";

		[Token(Token = "0x4000FFE")]
		protected const string RichTextBoldClose = "</b>";

		[Token(Token = "0x4000FFF")]
		protected const string RichTextItalicOpen = "<i>";

		[Token(Token = "0x4001000")]
		protected const string RichTextItalicClose = "</i>";

		[Token(Token = "0x4001001")]
		protected const string RichTextColorOpenPrefix = "<color=";

		[Token(Token = "0x4001002")]
		protected const string RichTextColorClose = "</color>";

		[Token(Token = "0x4001003")]
		protected const string RichTextSizeOpenPrefix = "<size=";

		[Token(Token = "0x4001004")]
		protected const string RichTextSizeClose = "</size>";

		[Token(Token = "0x4001005")]
		protected const string QuadPrefix = "<quad ";

		[Token(Token = "0x4001006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected Text control;

		[Token(Token = "0x4001007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected bool started;

		[Token(Token = "0x4001008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected string original;

		[Token(Token = "0x4001009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected string frontSkippedText;

		[Token(Token = "0x400100A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected Coroutine typewriterCoroutine;

		[Token(Token = "0x400100B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected MonoBehaviour coroutineController;

		[Token(Token = "0x400100C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected StringBuilder current;

		[Token(Token = "0x400100D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected List<TokenType> openTokenTypes;

		[Token(Token = "0x400100E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected List<Token> tokens;

		[Token(Token = "0x400100F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected int MaxSafeguard;

		[Token(Token = "0x17000302")]
		public override bool isPlaying
		{
			[Token(Token = "0x6001A58")]
			[Address(RVA = "0x1164608", Offset = "0x1164608", VA = "0x1164608", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000303")]
		public bool IsPlaying
		{
			[Token(Token = "0x6001A59")]
			[Address(RVA = "0x1164618", Offset = "0x1164618", VA = "0x1164618")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001A5A")]
		[Address(RVA = "0x1164624", Offset = "0x1164624", VA = "0x1164624", Slot = "7")]
		public override void Awake()
		{
		}

		[Token(Token = "0x6001A5B")]
		[Address(RVA = "0x11647B4", Offset = "0x11647B4", VA = "0x11647B4")]
		protected void RemoveIfDuplicate()
		{
		}

		[Token(Token = "0x6001A5C")]
		[Address(RVA = "0x1164934", Offset = "0x1164934", VA = "0x1164934", Slot = "8")]
		public override void Start()
		{
		}

		[Token(Token = "0x6001A5D")]
		[Address(RVA = "0x1164A18", Offset = "0x1164A18", VA = "0x1164A18", Slot = "9")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x6001A5E")]
		[Address(RVA = "0x1164A98", Offset = "0x1164A98", VA = "0x1164A98", Slot = "10")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x6001A5F")]
		[Address(RVA = "0x1164AC8", Offset = "0x1164AC8", VA = "0x1164AC8", Slot = "17")]
		public virtual void Pause()
		{
		}

		[Token(Token = "0x6001A60")]
		[Address(RVA = "0x1164AD4", Offset = "0x1164AD4", VA = "0x1164AD4", Slot = "18")]
		public virtual void Unpause()
		{
		}

		[Token(Token = "0x6001A61")]
		[Address(RVA = "0x1164ADC", Offset = "0x1164ADC", VA = "0x1164ADC", Slot = "13")]
		public override void StartTyping(string text, int fromIndex = 0)
		{
		}

		[Token(Token = "0x6001A62")]
		[Address(RVA = "0x1164B34", Offset = "0x1164B34", VA = "0x1164B34", Slot = "14")]
		public override void StopTyping()
		{
		}

		[Token(Token = "0x6001A63")]
		[Address(RVA = "0x1164B40", Offset = "0x1164B40", VA = "0x1164B40", Slot = "19")]
		public virtual void PlayText(string text, int fromIndex = 0)
		{
		}

		[Token(Token = "0x6001A64")]
		[Address(RVA = "0x1164B50", Offset = "0x1164B50", VA = "0x1164B50", Slot = "20")]
		protected virtual void StartTypewriterCoroutine(int fromIndex)
		{
		}

		[Token(Token = "0x6001A65")]
		[Address(RVA = "0x1164CDC", Offset = "0x1164CDC", VA = "0x1164CDC", Slot = "21")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA2E1CC", Offset = "0xA2E1CC")]
		public virtual IEnumerator Play(int fromIndex = 0)
		{
			return null;
		}

		[Token(Token = "0x6001A66")]
		[Address(RVA = "0x1164D88", Offset = "0x1164D88", VA = "0x1164D88")]
		protected Token GetNextToken(List<Token> tokens)
		{
			return null;
		}

		[Token(Token = "0x6001A67")]
		[Address(RVA = "0x1164E34", Offset = "0x1164E34", VA = "0x1164E34")]
		protected void OpenRichText(StringBuilder current, Token token, List<TokenType> openTokens)
		{
		}

		[Token(Token = "0x6001A68")]
		[Address(RVA = "0x1164F04", Offset = "0x1164F04", VA = "0x1164F04")]
		protected void CloseRichText(StringBuilder current, Token token, List<TokenType> openTokens)
		{
		}

		[Token(Token = "0x6001A69")]
		[Address(RVA = "0x1165094", Offset = "0x1165094", VA = "0x1165094")]
		protected void AddInstantText(StringBuilder current, List<TokenType> openTokenTypes, List<Token> tokens)
		{
		}

		[Token(Token = "0x6001A6A")]
		[Address(RVA = "0x1165194", Offset = "0x1165194", VA = "0x1165194")]
		protected string GetCurrentText(StringBuilder current, List<TokenType> openTokenTypes, List<Token> tokens, bool withoutTransparentText = false)
		{
			return null;
		}

		[Token(Token = "0x6001A6B")]
		[Address(RVA = "0x1165564", Offset = "0x1165564", VA = "0x1165564")]
		protected List<Token> Tokenize(string text)
		{
			return null;
		}

		[Token(Token = "0x6001A6C")]
		[Address(RVA = "0x11658DC", Offset = "0x11658DC", VA = "0x11658DC")]
		protected Token TryTokenize(string code, TokenType tokenType, float duration, ref string remainder)
		{
			return null;
		}

		[Token(Token = "0x6001A6D")]
		[Address(RVA = "0x11659C4", Offset = "0x11659C4", VA = "0x11659C4")]
		protected Token TryTokenizeColorOpen(ref string remainder)
		{
			return null;
		}

		[Token(Token = "0x6001A6E")]
		[Address(RVA = "0x1165ABC", Offset = "0x1165ABC", VA = "0x1165ABC")]
		protected Token TryTokenizeSizeOpen(ref string remainder)
		{
			return null;
		}

		[Token(Token = "0x6001A6F")]
		[Address(RVA = "0x1165BB4", Offset = "0x1165BB4", VA = "0x1165BB4")]
		protected Token TryTokenizeQuad(ref string remainder)
		{
			return null;
		}

		[Token(Token = "0x6001A70")]
		[Address(RVA = "0x1165D00", Offset = "0x1165D00", VA = "0x1165D00", Slot = "22")]
		protected virtual void StopTypewriterCoroutine()
		{
		}

		[Token(Token = "0x6001A71")]
		[Address(RVA = "0x1165DB4", Offset = "0x1165DB4", VA = "0x1165DB4", Slot = "12")]
		public override void Stop()
		{
		}

		[Token(Token = "0x6001A72")]
		[Address(RVA = "0x1166204", Offset = "0x1166204", VA = "0x1166204")]
		protected void InitAutoScroll()
		{
		}

		[Token(Token = "0x6001A73")]
		[Address(RVA = "0x116605C", Offset = "0x116605C", VA = "0x116605C")]
		protected void HandleAutoScroll()
		{
		}

		[Token(Token = "0x6001A74")]
		[Address(RVA = "0x1165FEC", Offset = "0x1165FEC", VA = "0x1165FEC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA2E230", Offset = "0xA2E230")]
		protected IEnumerator HandleAutoScrollAfterOneFrame()
		{
			return null;
		}

		[Token(Token = "0x6001A75")]
		[Address(RVA = "0x1166310", Offset = "0x1166310", VA = "0x1166310")]
		public UnityUITypewriterEffect()
		{
		}
	}
	[Token(Token = "0x20002C0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0988C", Offset = "0xA0988C")]
	public class AlwaysFaceCamera : PixelCrushers.AlwaysFaceCamera
	{
		[Token(Token = "0x6001A76")]
		[Address(RVA = "0x14296B8", Offset = "0x14296B8", VA = "0x14296B8")]
		public AlwaysFaceCamera()
		{
		}
	}
	[Token(Token = "0x20002C1")]
	public class ActorPopupAttribute : PropertyAttribute
	{
		[Token(Token = "0x4001010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool showReferenceDatabase;

		[Token(Token = "0x6001A77")]
		[Address(RVA = "0x14286AC", Offset = "0x14286AC", VA = "0x14286AC")]
		public ActorPopupAttribute(bool showReferenceDatabase = false)
		{
		}
	}
	[Token(Token = "0x20002C2")]
	public class ConversationPopupAttribute : PropertyAttribute
	{
		[Token(Token = "0x4001011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool showReferenceDatabase;

		[Token(Token = "0x6001A78")]
		[Address(RVA = "0x14701A8", Offset = "0x14701A8", VA = "0x14701A8")]
		public ConversationPopupAttribute(bool showReferenceDatabase = false)
		{
		}
	}
	[Token(Token = "0x20002C3")]
	public class DialogueSystemTriggerEventAttribute : PropertyAttribute
	{
		[Token(Token = "0x6001A79")]
		[Address(RVA = "0x15FD444", Offset = "0x15FD444", VA = "0x15FD444")]
		public DialogueSystemTriggerEventAttribute()
		{
		}
	}
	[Token(Token = "0x20002C4")]
	public class DialogueTriggerEventAttribute : PropertyAttribute
	{
		[Token(Token = "0x6001A7A")]
		[Address(RVA = "0x15FDC74", Offset = "0x15FDC74", VA = "0x15FDC74")]
		public DialogueTriggerEventAttribute()
		{
		}
	}
	[Token(Token = "0x20002C5")]
	public class ItemPopupAttribute : PropertyAttribute
	{
		[Token(Token = "0x4001012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool showReferenceDatabase;

		[Token(Token = "0x6001A7B")]
		[Address(RVA = "0x1719D88", Offset = "0x1719D88", VA = "0x1719D88")]
		public ItemPopupAttribute(bool showReferenceDatabase = false)
		{
		}
	}
	[Token(Token = "0x20002C6")]
	public class LuaConditionsWizardAttribute : PropertyAttribute
	{
		[Token(Token = "0x4001013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool showReferenceDatabase;

		[Token(Token = "0x6001A7C")]
		[Address(RVA = "0x171DFC4", Offset = "0x171DFC4", VA = "0x171DFC4")]
		public LuaConditionsWizardAttribute(bool showReferenceDatabase = false)
		{
		}
	}
	[Token(Token = "0x20002C7")]
	public class LuaScriptWizardAttribute : PropertyAttribute
	{
		[Token(Token = "0x4001014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool showReferenceDatabase;

		[Token(Token = "0x6001A7D")]
		[Address(RVA = "0x171F720", Offset = "0x171F720", VA = "0x171F720")]
		public LuaScriptWizardAttribute(bool showReferenceDatabase = false)
		{
		}
	}
	[Token(Token = "0x20002C8")]
	public class QuestEntryPopupAttribute : PropertyAttribute
	{
		[Token(Token = "0x6001A7E")]
		[Address(RVA = "0x11C845C", Offset = "0x11C845C", VA = "0x11C845C")]
		public QuestEntryPopupAttribute()
		{
		}
	}
	[Token(Token = "0x20002C9")]
	public class QuestPopupAttribute : PropertyAttribute
	{
		[Token(Token = "0x4001015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool showReferenceDatabase;

		[Token(Token = "0x6001A7F")]
		[Address(RVA = "0x11CF998", Offset = "0x11CF998", VA = "0x11CF998")]
		public QuestPopupAttribute(bool showReferenceDatabase = false)
		{
		}
	}
	[Token(Token = "0x20002CA")]
	public class QuestStateAttribute : PropertyAttribute
	{
		[Token(Token = "0x6001A80")]
		[Address(RVA = "0x11CF9C8", Offset = "0x11CF9C8", VA = "0x11CF9C8")]
		public QuestStateAttribute()
		{
		}
	}
	[Token(Token = "0x20002CB")]
	public class VariablePopupAttribute : PropertyAttribute
	{
		[Token(Token = "0x4001016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool showReferenceDatabase;

		[Token(Token = "0x6001A81")]
		[Address(RVA = "0x1168810", Offset = "0x1168810", VA = "0x1168810")]
		public VariablePopupAttribute(bool showReferenceDatabase = false)
		{
		}
	}
	[Token(Token = "0x20002CC")]
	public class BitMaskAttribute : PropertyAttribute
	{
		[Token(Token = "0x4001017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Type propType;

		[Token(Token = "0x6001A82")]
		[Address(RVA = "0x143356C", Offset = "0x143356C", VA = "0x143356C")]
		public BitMaskAttribute(Type propType)
		{
		}
	}
	[Token(Token = "0x20002CD")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA098C4", Offset = "0xA098C4")]
	public class ConversationLogger : MonoBehaviour
	{
		[Token(Token = "0x4001018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1E094", Offset = "0xA1E094")]
		public Color playerColor;

		[Token(Token = "0x4001019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1E0CC", Offset = "0xA1E0CC")]
		public Color npcColor;

		[Token(Token = "0x6001A83")]
		[Address(RVA = "0x146BC18", Offset = "0x146BC18", VA = "0x146BC18")]
		public void OnConversationStart(Transform actor)
		{
		}

		[Token(Token = "0x6001A84")]
		[Address(RVA = "0x146BDE8", Offset = "0x146BDE8", VA = "0x146BDE8")]
		public void OnConversationLine(Subtitle subtitle)
		{
		}

		[Token(Token = "0x6001A85")]
		[Address(RVA = "0x146C0E0", Offset = "0x146C0E0", VA = "0x146C0E0")]
		public void OnConversationEnd(Transform actor)
		{
		}

		[Token(Token = "0x6001A86")]
		[Address(RVA = "0x146BD4C", Offset = "0x146BD4C", VA = "0x146BD4C")]
		private string GetActorName(Transform actor)
		{
			return null;
		}

		[Token(Token = "0x6001A87")]
		[Address(RVA = "0x146BFDC", Offset = "0x146BFDC", VA = "0x146BFDC")]
		private string GetActorColor(Subtitle subtitle)
		{
			return null;
		}

		[Token(Token = "0x6001A88")]
		[Address(RVA = "0x146C194", Offset = "0x146C194", VA = "0x146C194")]
		public void OnPrepareConversationLine(DialogueEntry entry)
		{
		}

		[Token(Token = "0x6001A89")]
		[Address(RVA = "0x146C2B0", Offset = "0x146C2B0", VA = "0x146C2B0")]
		public void OnConversationLineCancelled(Subtitle subtitle)
		{
		}

		[Token(Token = "0x6001A8A")]
		[Address(RVA = "0x146C4A4", Offset = "0x146C4A4", VA = "0x146C4A4")]
		public void OnConversationLineEnd(Subtitle subtitle)
		{
		}

		[Token(Token = "0x6001A8B")]
		[Address(RVA = "0x146C698", Offset = "0x146C698", VA = "0x146C698")]
		public void OnConversationResponseMenu(Response[] responses)
		{
		}

		[Token(Token = "0x6001A8C")]
		[Address(RVA = "0x146C704", Offset = "0x146C704", VA = "0x146C704")]
		public void OnConversationTimeout()
		{
		}

		[Token(Token = "0x6001A8D")]
		[Address(RVA = "0x146C770", Offset = "0x146C770", VA = "0x146C770")]
		public void OnLinkedConversationStart(Transform actor)
		{
		}

		[Token(Token = "0x6001A8E")]
		[Address(RVA = "0x146C7DC", Offset = "0x146C7DC", VA = "0x146C7DC")]
		public ConversationLogger()
		{
		}
	}
	[Token(Token = "0x20002CE")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA098FC", Offset = "0xA098FC")]
	public class ConversationPositionStack : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000662")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DF58", Offset = "0xA0DF58")]
		private sealed class <>c
		{
			[Token(Token = "0x4001FA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x6002BA4")]
			[Address(RVA = "0x147164C", Offset = "0x147164C", VA = "0x147164C")]
			public <>c()
			{
			}
		}

		[Token(Token = "0x400101A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1E104", Offset = "0xA1E104")]
		public bool clearOnConversationStart;

		[Token(Token = "0x400101B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1E13C", Offset = "0xA1E13C")]
		public bool unregisterOnDisable;

		[Token(Token = "0x400101C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Stack<DialogueEntry> m_stack;

		[Token(Token = "0x6001A8F")]
		[Address(RVA = "0x14701D8", Offset = "0x14701D8", VA = "0x14701D8")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xA2E294", Offset = "0xA2E294")]
		private static void InitStaticVariables()
		{
		}

		[Token(Token = "0x6001A90")]
		[Address(RVA = "0x1470264", Offset = "0x1470264", VA = "0x1470264")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001A91")]
		[Address(RVA = "0x14707EC", Offset = "0x14707EC", VA = "0x14707EC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001A92")]
		[Address(RVA = "0x1470898", Offset = "0x1470898", VA = "0x1470898")]
		private void OnConversationStart(Transform actor)
		{
		}

		[Token(Token = "0x6001A93")]
		[Address(RVA = "0x14709E4", Offset = "0x14709E4", VA = "0x14709E4")]
		public static void PushConversationPosition()
		{
		}

		[Token(Token = "0x6001A94")]
		[Address(RVA = "0x1470FA0", Offset = "0x1470FA0", VA = "0x1470FA0")]
		public static void PopConversationPosition()
		{
		}

		[Token(Token = "0x6001A95")]
		[Address(RVA = "0x147090C", Offset = "0x147090C", VA = "0x147090C")]
		public static void ClearConversationPositionStack()
		{
		}

		[Token(Token = "0x6001A96")]
		[Address(RVA = "0x1471564", Offset = "0x1471564", VA = "0x1471564")]
		public ConversationPositionStack()
		{
		}
	}
	[Token(Token = "0x20002CF")]
	public static class DialogueDebug
	{
		[Token(Token = "0x2000663")]
		public enum DebugLevel
		{
			[Token(Token = "0x4001FA4")]
			None,
			[Token(Token = "0x4001FA5")]
			Error,
			[Token(Token = "0x4001FA6")]
			Warning,
			[Token(Token = "0x4001FA7")]
			Info
		}

		[Token(Token = "0x400101D")]
		public const string Prefix = "Dialogue System";

		[Token(Token = "0x400101E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1E174", Offset = "0xA1E174")]
		private static DebugLevel <level>k__BackingField;

		[Token(Token = "0x17000304")]
		public static DebugLevel level
		{
			[Token(Token = "0x6001A98")]
			[Address(RVA = "0x1480C60", Offset = "0x1480C60", VA = "0x1480C60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2E2A8", Offset = "0xA2E2A8")]
			get
			{
				return default(DebugLevel);
			}
			[Token(Token = "0x6001A99")]
			[Address(RVA = "0x1480CC8", Offset = "0x1480CC8", VA = "0x1480CC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2E2B8", Offset = "0xA2E2B8")]
			set
			{
			}
		}

		[Token(Token = "0x17000305")]
		public static bool logInfo
		{
			[Token(Token = "0x6001A9A")]
			[Address(RVA = "0x1469D1C", Offset = "0x1469D1C", VA = "0x1469D1C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000306")]
		public static bool logWarnings
		{
			[Token(Token = "0x6001A9B")]
			[Address(RVA = "0x146E774", Offset = "0x146E774", VA = "0x146E774")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000307")]
		public static bool logErrors
		{
			[Token(Token = "0x6001A9C")]
			[Address(RVA = "0x146DC34", Offset = "0x146DC34", VA = "0x146DC34")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000308")]
		public static DebugLevel Level
		{
			[Token(Token = "0x6001A9D")]
			[Address(RVA = "0x1480D34", Offset = "0x1480D34", VA = "0x1480D34")]
			get
			{
				return default(DebugLevel);
			}
			[Token(Token = "0x6001A9E")]
			[Address(RVA = "0x1480DD8", Offset = "0x1480DD8", VA = "0x1480DD8")]
			set
			{
			}
		}

		[Token(Token = "0x17000309")]
		public static bool LogInfo
		{
			[Token(Token = "0x6001A9F")]
			[Address(RVA = "0x1480E88", Offset = "0x1480E88", VA = "0x1480E88")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700030A")]
		public static bool LogWarnings
		{
			[Token(Token = "0x6001AA0")]
			[Address(RVA = "0x1480EE4", Offset = "0x1480EE4", VA = "0x1480EE4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700030B")]
		public static bool LogErrors
		{
			[Token(Token = "0x6001AA1")]
			[Address(RVA = "0x1480F40", Offset = "0x1480F40", VA = "0x1480F40")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001AA2")]
		[Address(RVA = "0x1480F9C", Offset = "0x1480F9C", VA = "0x1480F9C")]
		static DialogueDebug()
		{
		}
	}
	[Token(Token = "0x20002D0")]
	public static class DialogueTime
	{
		[Token(Token = "0x2000664")]
		public enum TimeMode
		{
			[Token(Token = "0x4001FA9")]
			Realtime,
			[Token(Token = "0x4001FAA")]
			Gameplay,
			[Token(Token = "0x4001FAB")]
			Custom
		}

		[Token(Token = "0x2000665")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DF68", Offset = "0xA0DF68")]
		private sealed class <WaitForSeconds>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float seconds;

			[Token(Token = "0x4001FAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private float <start>5__2;

			[Token(Token = "0x1700059F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002BA8")]
				[Address(RVA = "0x15FDC04", Offset = "0x15FDC04", VA = "0x15FDC04", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005A0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BAA")]
				[Address(RVA = "0x15FDC6C", Offset = "0x15FDC6C", VA = "0x15FDC6C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BA5")]
			[Address(RVA = "0x15FDB00", Offset = "0x15FDB00", VA = "0x15FDB00")]
			[DebuggerHidden]
			public <WaitForSeconds>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x6002BA6")]
			[Address(RVA = "0x15FDB2C", Offset = "0x15FDB2C", VA = "0x15FDB2C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002BA7")]
			[Address(RVA = "0x15FDB30", Offset = "0x15FDB30", VA = "0x15FDB30", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BA9")]
			[Address(RVA = "0x15FDC0C", Offset = "0x15FDC0C", VA = "0x15FDC0C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400101F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1E184", Offset = "0xA1E184")]
		private static TimeMode <mode>k__BackingField;

		[Token(Token = "0x4001020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static float m_customTime;

		[Token(Token = "0x4001021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static bool m_isPaused;

		[Token(Token = "0x4001022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static float s_realtimeWhenPaused;

		[Token(Token = "0x4001023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static float s_totalRealtimePaused;

		[Token(Token = "0x1700030C")]
		public static TimeMode mode
		{
			[Token(Token = "0x6001AA3")]
			[Address(RVA = "0x15FD44C", Offset = "0x15FD44C", VA = "0x15FD44C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2E2C8", Offset = "0xA2E2C8")]
			get
			{
				return default(TimeMode);
			}
			[Token(Token = "0x6001AA4")]
			[Address(RVA = "0x15FD4B4", Offset = "0x15FD4B4", VA = "0x15FD4B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2E2D8", Offset = "0xA2E2D8")]
			set
			{
			}
		}

		[Token(Token = "0x1700030D")]
		public static float time
		{
			[Token(Token = "0x6001AA5")]
			[Address(RVA = "0x15FD520", Offset = "0x15FD520", VA = "0x15FD520")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001AA6")]
			[Address(RVA = "0x15FD690", Offset = "0x15FD690", VA = "0x15FD690")]
			set
			{
			}
		}

		[Token(Token = "0x1700030E")]
		public static bool isPaused
		{
			[Token(Token = "0x6001AA7")]
			[Address(RVA = "0x15FD76C", Offset = "0x15FD76C", VA = "0x15FD76C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001AA8")]
			[Address(RVA = "0x15F578C", Offset = "0x15F578C", VA = "0x15F578C")]
			set
			{
			}
		}

		[Token(Token = "0x1700030F")]
		public static TimeMode Mode
		{
			[Token(Token = "0x6001AA9")]
			[Address(RVA = "0x15FD884", Offset = "0x15FD884", VA = "0x15FD884")]
			get
			{
				return default(TimeMode);
			}
			[Token(Token = "0x6001AAA")]
			[Address(RVA = "0x15FD928", Offset = "0x15FD928", VA = "0x15FD928")]
			set
			{
			}
		}

		[Token(Token = "0x17000310")]
		public static bool IsPaused
		{
			[Token(Token = "0x6001AAB")]
			[Address(RVA = "0x15FD9D8", Offset = "0x15FD9D8", VA = "0x15FD9D8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001AAC")]
			[Address(RVA = "0x15FDA34", Offset = "0x15FDA34", VA = "0x15FDA34")]
			set
			{
			}
		}

		[Token(Token = "0x6001AAD")]
		[Address(RVA = "0x15FDA98", Offset = "0x15FDA98", VA = "0x15FDA98")]
		static DialogueTime()
		{
		}

		[Token(Token = "0x6001AAE")]
		[Address(RVA = "0x15FCFB8", Offset = "0x15FCFB8", VA = "0x15FCFB8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA2E2E8", Offset = "0xA2E2E8")]
		public static IEnumerator WaitForSeconds(float seconds)
		{
			return null;
		}
	}
	[Token(Token = "0x20002D1")]
	public enum EncodingType
	{
		[Token(Token = "0x4001025")]
		Default,
		[Token(Token = "0x4001026")]
		ASCII,
		[Token(Token = "0x4001027")]
		Unicode,
		[Token(Token = "0x4001028")]
		UTF7,
		[Token(Token = "0x4001029")]
		UTF8,
		[Token(Token = "0x400102A")]
		UTF32,
		[Token(Token = "0x400102B")]
		ISO_8859_1
	}
	[Token(Token = "0x20002D2")]
	public static class EncodingTypeTools
	{
		[Token(Token = "0x6001AAF")]
		[Address(RVA = "0x15FE478", Offset = "0x15FE478", VA = "0x15FE478")]
		public static Encoding GetEncoding(EncodingType encodingType)
		{
			return null;
		}
	}
	[Token(Token = "0x20002D3")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xA09934", Offset = "0xA09934")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA09934", Offset = "0xA09934")]
	public class LocalizedTextTable : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x2000666")]
		public class LocalizedTextField
		{
			[Token(Token = "0x4001FB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string name;

			[Token(Token = "0x4001FB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<string> values;

			[Token(Token = "0x6002BAB")]
			[Address(RVA = "0x171C30C", Offset = "0x171C30C", VA = "0x171C30C")]
			public LocalizedTextField()
			{
			}
		}

		[Token(Token = "0x2000667")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DF78", Offset = "0xA0DF78")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4001FB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string fieldName;

			[Token(Token = "0x6002BAC")]
			[Address(RVA = "0x171BDE0", Offset = "0x171BDE0", VA = "0x171BDE0")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x6002BAD")]
			[Address(RVA = "0x171C2E8", Offset = "0x171C2E8", VA = "0x171C2E8")]
			internal bool <ContainsField>b__0(LocalizedTextField f)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400102C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<string> languages;

		[Token(Token = "0x400102D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<LocalizedTextField> fields;

		[Token(Token = "0x400102E")]
		private const int LanguageNotFound = -1;

		[Token(Token = "0x17000311")]
		public string Item
		{
			[Token(Token = "0x6001AB0")]
			[Address(RVA = "0x171BCB0", Offset = "0x171BCB0", VA = "0x171BCB0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001AB1")]
		[Address(RVA = "0x171BD10", Offset = "0x171BD10", VA = "0x171BD10")]
		public bool ContainsField(string fieldName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AB2")]
		[Address(RVA = "0x171BCE0", Offset = "0x171BCE0", VA = "0x171BCE0")]
		private string GetText(string fieldName)
		{
			return null;
		}

		[Token(Token = "0x6001AB3")]
		[Address(RVA = "0x171BF34", Offset = "0x171BF34", VA = "0x171BF34")]
		private string GetTextInLanguage(string fieldName, int languageIndex)
		{
			return null;
		}

		[Token(Token = "0x6001AB4")]
		[Address(RVA = "0x171BDE8", Offset = "0x171BDE8", VA = "0x171BDE8")]
		private int GetLanguageIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6001AB5")]
		[Address(RVA = "0x171C250", Offset = "0x171C250", VA = "0x171C250")]
		public LocalizedTextTable()
		{
		}
	}
	[Token(Token = "0x20002D4")]
	public static class SymbolExtensions
	{
		[Token(Token = "0x6001AB6")]
		[Address(RVA = "0x12EFDC8", Offset = "0x12EFDC8", VA = "0x12EFDC8")]
		public static MethodInfo GetMethodInfo(Expression<Action> expression)
		{
			return null;
		}

		[Token(Token = "0x6001AB7")]
		public static MethodInfo GetMethodInfo<T>(Expression<Action<T>> expression)
		{
			return null;
		}

		[Token(Token = "0x6001AB8")]
		public static MethodInfo GetMethodInfo<T, TResult>(Expression<Func<T, TResult>> expression)
		{
			return null;
		}

		[Token(Token = "0x6001AB9")]
		[Address(RVA = "0x12EFDCC", Offset = "0x12EFDCC", VA = "0x12EFDCC")]
		public static MethodInfo GetMethodInfo(LambdaExpression expression)
		{
			return null;
		}
	}
	[Token(Token = "0x20002D5")]
	public enum Toggle
	{
		[Token(Token = "0x4001030")]
		True,
		[Token(Token = "0x4001031")]
		False,
		[Token(Token = "0x4001032")]
		Flip
	}
	[Token(Token = "0x20002D6")]
	public static class ToggleUtility
	{
		[Token(Token = "0x6001ABA")]
		[Address(RVA = "0x12F3C84", Offset = "0x12F3C84", VA = "0x12F3C84")]
		public static bool GetNewValue(bool oldValue, Toggle state)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002D7")]
	public static class Tools
	{
		[Token(Token = "0x2000668")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DF88", Offset = "0xA0DF88")]
		private sealed class <SendMessageToEveryoneAsync>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string message;

			[Token(Token = "0x4001FB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int gameObjectsPerFrame;

			[Token(Token = "0x4001FB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private GameObject[] <gameObjects>5__2;

			[Token(Token = "0x4001FB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <count>5__3;

			[Token(Token = "0x4001FB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private int <i>5__4;

			[Token(Token = "0x170005A1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002BB1")]
				[Address(RVA = "0x12F63B4", Offset = "0x12F63B4", VA = "0x12F63B4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005A2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BB3")]
				[Address(RVA = "0x12F641C", Offset = "0x12F641C", VA = "0x12F641C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BAE")]
			[Address(RVA = "0x12F48B8", Offset = "0x12F48B8", VA = "0x12F48B8")]
			[DebuggerHidden]
			public <SendMessageToEveryoneAsync>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6002BAF")]
			[Address(RVA = "0x12F6230", Offset = "0x12F6230", VA = "0x12F6230", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002BB0")]
			[Address(RVA = "0x12F6234", Offset = "0x12F6234", VA = "0x12F6234", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BB2")]
			[Address(RVA = "0x12F63BC", Offset = "0x12F63BC", VA = "0x12F63BC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static CursorLockMode previousLockMode;

		[Token(Token = "0x17000312")]
		public static string loadedLevelName
		{
			[Token(Token = "0x6001AE5")]
			[Address(RVA = "0x12F6164", Offset = "0x12F6164", VA = "0x12F6164")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001ABB")]
		[Address(RVA = "0x12F3CAC", Offset = "0x12F3CAC", VA = "0x12F3CAC")]
		public static void DeprecationWarning(MonoBehaviour mb, [Optional] string extraInfo)
		{
		}

		[Token(Token = "0x6001ABC")]
		[Address(RVA = "0x12F3EC0", Offset = "0x12F3EC0", VA = "0x12F3EC0")]
		public static bool IsPrefab(GameObject go)
		{
			return default(bool);
		}

		[Token(Token = "0x6001ABD")]
		[Address(RVA = "0x12F4084", Offset = "0x12F4084", VA = "0x12F4084")]
		public static byte HexToByte(string hex)
		{
			return default(byte);
		}

		[Token(Token = "0x6001ABE")]
		[Address(RVA = "0x12F4090", Offset = "0x12F4090", VA = "0x12F4090")]
		public static bool IsNumber(object o)
		{
			return default(bool);
		}

		[Token(Token = "0x6001ABF")]
		[Address(RVA = "0x12F4120", Offset = "0x12F4120", VA = "0x12F4120")]
		public static int StringToInt(string s)
		{
			return default(int);
		}

		[Token(Token = "0x6001AC0")]
		[Address(RVA = "0x12F4128", Offset = "0x12F4128", VA = "0x12F4128")]
		public static float StringToFloat(string s)
		{
			return default(float);
		}

		[Token(Token = "0x6001AC1")]
		[Address(RVA = "0x12F4130", Offset = "0x12F4130", VA = "0x12F4130")]
		public static bool StringToBool(string s)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AC2")]
		[Address(RVA = "0x12F4194", Offset = "0x12F4194", VA = "0x12F4194")]
		public static bool IsStringNullOrEmptyOrWhitespace(string s)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AC3")]
		[Address(RVA = "0x12F41E4", Offset = "0x12F41E4", VA = "0x12F41E4")]
		public static string GetAllAfterSlashes(string s)
		{
			return null;
		}

		[Token(Token = "0x6001AC4")]
		[Address(RVA = "0x12F4298", Offset = "0x12F4298", VA = "0x12F4298")]
		public static string GetObjectName(UnityEngine.Object o)
		{
			return null;
		}

		[Token(Token = "0x6001AC5")]
		[Address(RVA = "0x12F4334", Offset = "0x12F4334", VA = "0x12F4334")]
		public static string GetGameObjectName(Component c)
		{
			return null;
		}

		[Token(Token = "0x6001AC6")]
		[Address(RVA = "0x12F43D8", Offset = "0x12F43D8", VA = "0x12F43D8")]
		public static string GetFullName(GameObject go)
		{
			return null;
		}

		[Token(Token = "0x6001AC7")]
		[Address(RVA = "0x12EEE40", Offset = "0x12EEE40", VA = "0x12EEE40")]
		public static Transform Select(params Transform[] args)
		{
			return null;
		}

		[Token(Token = "0x6001AC8")]
		[Address(RVA = "0x12F4508", Offset = "0x12F4508", VA = "0x12F4508")]
		public static MonoBehaviour Select(params MonoBehaviour[] args)
		{
			return null;
		}

		[Token(Token = "0x6001AC9")]
		[Address(RVA = "0x12F45F0", Offset = "0x12F45F0", VA = "0x12F45F0")]
		public static void SendMessageToEveryone(string message)
		{
		}

		[Token(Token = "0x6001ACA")]
		[Address(RVA = "0x12F4710", Offset = "0x12F4710", VA = "0x12F4710")]
		public static void SendMessageToEveryone(string message, string arg)
		{
		}

		[Token(Token = "0x6001ACB")]
		[Address(RVA = "0x12F4838", Offset = "0x12F4838", VA = "0x12F4838")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA2E34C", Offset = "0xA2E34C")]
		public static IEnumerator SendMessageToEveryoneAsync(string message, int gameObjectsPerFrame)
		{
			return null;
		}

		[Token(Token = "0x6001ACC")]
		[Address(RVA = "0x12EB098", Offset = "0x12EB098", VA = "0x12EB098")]
		public static void SetGameObjectActive(Component component, bool value)
		{
		}

		[Token(Token = "0x6001ACD")]
		[Address(RVA = "0x12F48E4", Offset = "0x12F48E4", VA = "0x12F48E4")]
		public static void SetGameObjectActive(GameObject gameObject, bool value)
		{
		}

		[Token(Token = "0x6001ACE")]
		[Address(RVA = "0x12F4988", Offset = "0x12F4988", VA = "0x12F4988")]
		public static bool ApproximatelyZero(float x)
		{
			return default(bool);
		}

		[Token(Token = "0x6001ACF")]
		[Address(RVA = "0x12F499C", Offset = "0x12F499C", VA = "0x12F499C")]
		public static Color WebColor(string colorCode)
		{
			return default(Color);
		}

		[Token(Token = "0x6001AD0")]
		[Address(RVA = "0x12F4B38", Offset = "0x12F4B38", VA = "0x12F4B38")]
		public static string ToWebColor(Color color)
		{
			return null;
		}

		[Token(Token = "0x6001AD1")]
		[Address(RVA = "0x12EC764", Offset = "0x12EC764", VA = "0x12EC764")]
		public static string StripRichTextCodes(string s)
		{
			return null;
		}

		[Token(Token = "0x6001AD2")]
		[Address(RVA = "0x12EC824", Offset = "0x12EC824", VA = "0x12EC824")]
		public static string StripTextMeshProTags(string s)
		{
			return null;
		}

		[Token(Token = "0x6001AD3")]
		[Address(RVA = "0x12F4D18", Offset = "0x12F4D18", VA = "0x12F4D18")]
		public static bool IsClipInAnimations(Animation animation, string clipName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AD4")]
		[Address(RVA = "0x12F4FE8", Offset = "0x12F4FE8", VA = "0x12F4FE8")]
		public static GameObject GameObjectHardFind(string goName)
		{
			return null;
		}

		[Token(Token = "0x6001AD5")]
		[Address(RVA = "0x12F4FF0", Offset = "0x12F4FF0", VA = "0x12F4FF0")]
		public static GameObject GameObjectHardFind(string goName, string tag)
		{
			return null;
		}

		[Token(Token = "0x6001AD6")]
		[Address(RVA = "0x12F4FF8", Offset = "0x12F4FF8", VA = "0x12F4FF8")]
		public static GameObject[] FindGameObjectsWithTagHard(string tag)
		{
			return null;
		}

		[Token(Token = "0x6001AD7")]
		[Address(RVA = "0x12F5154", Offset = "0x12F5154", VA = "0x12F5154")]
		private static void GameObjectSearchForTags(Transform t, string tag, List<GameObject> list)
		{
		}

		[Token(Token = "0x6001AD8")]
		public static T GetComponentAnywhere<T>(GameObject gameObject) where T : Component
		{
			return null;
		}

		[Token(Token = "0x6001AD9")]
		[Address(RVA = "0x12F5450", Offset = "0x12F5450", VA = "0x12F5450")]
		public static float GetGameObjectHeight(GameObject gameObject)
		{
			return default(float);
		}

		[Token(Token = "0x6001ADA")]
		[Address(RVA = "0x12F5660", Offset = "0x12F5660", VA = "0x12F5660")]
		public static void SetComponentEnabled(Component component, Toggle state)
		{
		}

		[Token(Token = "0x6001ADB")]
		[Address(RVA = "0x12F5B88", Offset = "0x12F5B88", VA = "0x12F5B88")]
		public static bool IsCursorActive()
		{
			return default(bool);
		}

		[Token(Token = "0x6001ADC")]
		[Address(RVA = "0x12F5C48", Offset = "0x12F5C48", VA = "0x12F5C48")]
		public static void SetCursorActive(bool value)
		{
		}

		[Token(Token = "0x6001ADD")]
		[Address(RVA = "0x12F5C20", Offset = "0x12F5C20", VA = "0x12F5C20")]
		public static bool IsCursorVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x6001ADE")]
		[Address(RVA = "0x12F5C28", Offset = "0x12F5C28", VA = "0x12F5C28")]
		public static bool IsCursorLocked()
		{
			return default(bool);
		}

		[Token(Token = "0x6001ADF")]
		[Address(RVA = "0x12F5CBC", Offset = "0x12F5CBC", VA = "0x12F5CBC")]
		public static void ShowCursor(bool value)
		{
		}

		[Token(Token = "0x6001AE0")]
		[Address(RVA = "0x12F5CC8", Offset = "0x12F5CC8", VA = "0x12F5CC8")]
		public static void LockCursor(bool value)
		{
		}

		[Token(Token = "0x6001AE1")]
		[Address(RVA = "0x12F5D94", Offset = "0x12F5D94", VA = "0x12F5D94")]
		public static void LoadLevel(int index)
		{
		}

		[Token(Token = "0x6001AE2")]
		[Address(RVA = "0x12F5E9C", Offset = "0x12F5E9C", VA = "0x12F5E9C")]
		public static void LoadLevel(string name)
		{
		}

		[Token(Token = "0x6001AE3")]
		[Address(RVA = "0x12F5F7C", Offset = "0x12F5F7C", VA = "0x12F5F7C")]
		public static AsyncOperation LoadLevelAsync(string name)
		{
			return null;
		}

		[Token(Token = "0x6001AE4")]
		[Address(RVA = "0x12F605C", Offset = "0x12F605C", VA = "0x12F605C")]
		public static AsyncOperation LoadLevelAsync(int index)
		{
			return null;
		}
	}
}
namespace PixelCrushers.DialogueSystem.Wrappers
{
	[Token(Token = "0x20002D8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA09994", Offset = "0xA09994")]
	public class LocalizedTextTable : PixelCrushers.DialogueSystem.LocalizedTextTable
	{
		[Token(Token = "0x6001AE7")]
		[Address(RVA = "0x1168B64", Offset = "0x1168B64", VA = "0x1168B64")]
		public LocalizedTextTable()
		{
		}
	}
	[Token(Token = "0x20002D9")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA099CC", Offset = "0xA099CC")]
	public class AlertTrigger : PixelCrushers.DialogueSystem.AlertTrigger
	{
		[Token(Token = "0x6001AE8")]
		[Address(RVA = "0x1168848", Offset = "0x1168848", VA = "0x1168848")]
		public AlertTrigger()
		{
		}
	}
	[Token(Token = "0x20002DA")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA09A04", Offset = "0xA09A04")]
	public class BarkOnDialogueEvent : PixelCrushers.DialogueSystem.BarkOnDialogueEvent
	{
		[Token(Token = "0x6001AE9")]
		[Address(RVA = "0x1168870", Offset = "0x1168870", VA = "0x1168870")]
		public BarkOnDialogueEvent()
		{
		}
	}
	[Token(Token = "0x20002DB")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA09A3C", Offset = "0xA09A3C")]
	public class BarkTrigger : PixelCrushers.DialogueSystem.BarkTrigger
	{
		[Token(Token = "0x6001AEA")]
		[Address(RVA = "0x1168880", Offset = "0x1168880", VA = "0x1168880")]
		public BarkTrigger()
		{
		}
	}
	[Token(Token = "0x20002DC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA09A74", Offset = "0xA09A74")]
	public class ConversationTrigger : PixelCrushers.DialogueSystem.ConversationTrigger
	{
		[Token(Token = "0x6001AEB")]
		[Address(RVA = "0x11689D4", Offset = "0x11689D4", VA = "0x11689D4")]
		public ConversationTrigger()
		{
		}
	}
	[Token(Token = "0x20002DD")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA09AAC", Offset = "0xA09AAC")]
	public class LuaOnDialogueEvent : PixelCrushers.DialogueSystem.LuaOnDialogueEvent
	{
		[Token(Token = "0x6001AEC")]
		[Address(RVA = "0x1168B74", Offset = "0x1168B74", VA = "0x1168B74")]
		public LuaOnDialogueEvent()
		{
		}
	}
	[Token(Token = "0x20002DE")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA09AE4", Offset = "0xA09AE4")]
	public class LuaTrigger : PixelCrushers.DialogueSystem.LuaTrigger
	{
		[Token(Token = "0x6001AED")]
		[Address(RVA = "0x1168B7C", Offset = "0x1168B7C", VA = "0x1168B7C")]
		public LuaTrigger()
		{
		}
	}
	[Token(Token = "0x20002DF")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA09B1C", Offset = "0xA09B1C")]
	public class QuestTrigger : PixelCrushers.DialogueSystem.QuestTrigger
	{
		[Token(Token = "0x6001AEE")]
		[Address(RVA = "0x1168BE4", Offset = "0x1168BE4", VA = "0x1168BE4")]
		public QuestTrigger()
		{
		}
	}
	[Token(Token = "0x20002E0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA09B54", Offset = "0xA09B54")]
	public class SendMessageOnDialogueEvent : PixelCrushers.DialogueSystem.SendMessageOnDialogueEvent
	{
		[Token(Token = "0x6001AEF")]
		[Address(RVA = "0x1168C6C", Offset = "0x1168C6C", VA = "0x1168C6C")]
		public SendMessageOnDialogueEvent()
		{
		}
	}
	[Token(Token = "0x20002E1")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA09B8C", Offset = "0xA09B8C")]
	public class SequenceTrigger : PixelCrushers.DialogueSystem.SequenceTrigger
	{
		[Token(Token = "0x6001AF0")]
		[Address(RVA = "0x1168C74", Offset = "0x1168C74", VA = "0x1168C74")]
		public SequenceTrigger()
		{
		}
	}
	[Token(Token = "0x20002E2")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA09BC4", Offset = "0xA09BC4")]
	public class SetActiveOnDialogueEvent : PixelCrushers.DialogueSystem.SetActiveOnDialogueEvent
	{
		[Token(Token = "0x6001AF1")]
		[Address(RVA = "0x1168C84", Offset = "0x1168C84", VA = "0x1168C84")]
		public SetActiveOnDialogueEvent()
		{
		}
	}
	[Token(Token = "0x20002E3")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA09BFC", Offset = "0xA09BFC")]
	public class SetAnimationOnDialogueEvent : PixelCrushers.DialogueSystem.SetAnimationOnDialogueEvent
	{
		[Token(Token = "0x6001AF2")]
		[Address(RVA = "0x1168C8C", Offset = "0x1168C8C", VA = "0x1168C8C")]
		public SetAnimationOnDialogueEvent()
		{
		}
	}
	[Token(Token = "0x20002E4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA09C34", Offset = "0xA09C34")]
	public class SetAnimatorStateOnDialogueEvent : PixelCrushers.DialogueSystem.SetAnimatorStateOnDialogueEvent
	{
		[Token(Token = "0x6001AF3")]
		[Address(RVA = "0x1168C94", Offset = "0x1168C94", VA = "0x1168C94")]
		public SetAnimatorStateOnDialogueEvent()
		{
		}
	}
	[Token(Token = "0x20002E5")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA09C6C", Offset = "0xA09C6C")]
	public class SetComponentEnabledOnDialogueEvent : PixelCrushers.DialogueSystem.SetComponentEnabledOnDialogueEvent
	{
		[Token(Token = "0x6001AF4")]
		[Address(RVA = "0x1168C9C", Offset = "0x1168C9C", VA = "0x1168C9C")]
		public SetComponentEnabledOnDialogueEvent()
		{
		}
	}
	[Token(Token = "0x20002E6")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA09CA4", Offset = "0xA09CA4")]
	public class SetEnabledOnDialogueEvent : PixelCrushers.DialogueSystem.SetEnabledOnDialogueEvent
	{
		[Token(Token = "0x6001AF5")]
		[Address(RVA = "0x1168CA4", Offset = "0x1168CA4", VA = "0x1168CA4")]
		public SetEnabledOnDialogueEvent()
		{
		}
	}
	[Token(Token = "0x20002E7")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA09CDC", Offset = "0xA09CDC")]
	public class SetQuestStateOnDialogueEvent : PixelCrushers.DialogueSystem.SetQuestStateOnDialogueEvent
	{
		[Token(Token = "0x6001AF6")]
		[Address(RVA = "0x1168CAC", Offset = "0x1168CAC", VA = "0x1168CAC")]
		public SetQuestStateOnDialogueEvent()
		{
		}
	}
	[Token(Token = "0x20002E8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA09D14", Offset = "0xA09D14")]
	public class ShowCursorOnConversation : PixelCrushers.DialogueSystem.ShowCursorOnConversation
	{
		[Token(Token = "0x6001AF7")]
		[Address(RVA = "0x1168CB4", Offset = "0x1168CB4", VA = "0x1168CB4")]
		public ShowCursorOnConversation()
		{
		}
	}
	[Token(Token = "0x20002E9")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA09D4C", Offset = "0xA09D4C")]
	public class StartConversationOnDialogueEvent : PixelCrushers.DialogueSystem.StartConversationOnDialogueEvent
	{
		[Token(Token = "0x6001AF8")]
		[Address(RVA = "0x1168DB4", Offset = "0x1168DB4", VA = "0x1168DB4")]
		public StartConversationOnDialogueEvent()
		{
		}
	}
	[Token(Token = "0x20002EA")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA09D84", Offset = "0xA09D84")]
	public class StartSequenceOnDialogueEvent : PixelCrushers.DialogueSystem.StartSequenceOnDialogueEvent
	{
		[Token(Token = "0x6001AF9")]
		[Address(RVA = "0x1168DBC", Offset = "0x1168DBC", VA = "0x1168DBC")]
		public StartSequenceOnDialogueEvent()
		{
		}
	}
	[Token(Token = "0x20002EB")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA09DBC", Offset = "0xA09DBC")]
	public class StopConversationIfTooFar : PixelCrushers.DialogueSystem.StopConversationIfTooFar
	{
		[Token(Token = "0x6001AFA")]
		[Address(RVA = "0x1168DC4", Offset = "0x1168DC4", VA = "0x1168DC4")]
		public StopConversationIfTooFar()
		{
		}
	}
	[Token(Token = "0x20002EC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA09DF4", Offset = "0xA09DF4")]
	public class ActorSubtitleColor : PixelCrushers.DialogueSystem.ActorSubtitleColor
	{
		[Token(Token = "0x6001AFB")]
		[Address(RVA = "0x1168840", Offset = "0x1168840", VA = "0x1168840")]
		public ActorSubtitleColor()
		{
		}
	}
	[Token(Token = "0x20002ED")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xA09E2C", Offset = "0xA09E2C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA09E2C", Offset = "0xA09E2C")]
	public class BarkGroupMember : PixelCrushers.DialogueSystem.BarkGroupMember
	{
		[Token(Token = "0x6001AFC")]
		[Address(RVA = "0x1168868", Offset = "0x1168868", VA = "0x1168868")]
		public BarkGroupMember()
		{
		}
	}
	[Token(Token = "0x20002EE")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xA09E8C", Offset = "0xA09E8C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA09E8C", Offset = "0xA09E8C")]
	public class DefaultCameraAngle : PixelCrushers.DialogueSystem.DefaultCameraAngle
	{
		[Token(Token = "0x6001AFD")]
		[Address(RVA = "0x11689DC", Offset = "0x11689DC", VA = "0x11689DC")]
		public DefaultCameraAngle()
		{
		}
	}
	[Token(Token = "0x20002EF")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xA09EEC", Offset = "0xA09EEC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA09EEC", Offset = "0xA09EEC")]
	public class DialogueActor : PixelCrushers.DialogueSystem.DialogueActor
	{
		[Token(Token = "0x6001AFE")]
		[Address(RVA = "0x11689E4", Offset = "0x11689E4", VA = "0x11689E4")]
		public DialogueActor()
		{
		}
	}
	[Token(Token = "0x20002F0")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xA09F4C", Offset = "0xA09F4C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA09F4C", Offset = "0xA09F4C")]
	public class OverrideDialogueUI : PixelCrushers.DialogueSystem.OverrideDialogueUI
	{
		[Token(Token = "0x6001AFF")]
		[Address(RVA = "0x1168B8C", Offset = "0x1168B8C", VA = "0x1168B8C")]
		public OverrideDialogueUI()
		{
		}
	}
	[Token(Token = "0x20002F1")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xA09FAC", Offset = "0xA09FAC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA09FAC", Offset = "0xA09FAC")]
	public class OverrideDisplaySettings : PixelCrushers.DialogueSystem.OverrideDisplaySettings
	{
		[Token(Token = "0x6001B00")]
		[Address(RVA = "0x1168B94", Offset = "0x1168B94", VA = "0x1168B94")]
		public OverrideDisplaySettings()
		{
		}
	}
	[Token(Token = "0x20002F2")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0A00C", Offset = "0xA0A00C")]
	public class OverrideActorName : DialogueActor
	{
		[Token(Token = "0x6001B01")]
		[Address(RVA = "0x1168B84", Offset = "0x1168B84", VA = "0x1168B84")]
		public OverrideActorName()
		{
		}
	}
	[Token(Token = "0x20002F3")]
	public class DialogueDatabase : PixelCrushers.DialogueSystem.DialogueDatabase
	{
		[Token(Token = "0x6001B02")]
		[Address(RVA = "0x11689EC", Offset = "0x11689EC", VA = "0x11689EC")]
		public DialogueDatabase()
		{
		}
	}
	[Token(Token = "0x20002F4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0A044", Offset = "0xA0A044")]
	public class DialogueSystemSceneEvents : PixelCrushers.DialogueSystem.DialogueSystemSceneEvents
	{
		[Token(Token = "0x6001B03")]
		[Address(RVA = "0x1168A6C", Offset = "0x1168A6C", VA = "0x1168A6C")]
		public DialogueSystemSceneEvents()
		{
		}
	}
	[Token(Token = "0x20002F5")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0A07C", Offset = "0xA0A07C")]
	public class BarkDialogueUI : PixelCrushers.DialogueSystem.BarkDialogueUI
	{
		[Token(Token = "0x6001B04")]
		[Address(RVA = "0x1168860", Offset = "0x1168860", VA = "0x1168860")]
		public BarkDialogueUI()
		{
		}
	}
	[Token(Token = "0x20002F6")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xA0A0B4", Offset = "0xA0A0B4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0A0B4", Offset = "0xA0A0B4")]
	public class SequencerShortcuts : PixelCrushers.DialogueSystem.SequencerShortcuts
	{
		[Token(Token = "0x6001B05")]
		[Address(RVA = "0x1168C7C", Offset = "0x1168C7C", VA = "0x1168C7C")]
		public SequencerShortcuts()
		{
		}
	}
	[Token(Token = "0x20002F7")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0A114", Offset = "0xA0A114")]
	public class TextlessBarkUI : PixelCrushers.DialogueSystem.TextlessBarkUI
	{
		[Token(Token = "0x6001B06")]
		[Address(RVA = "0x1168DD4", Offset = "0x1168DD4", VA = "0x1168DD4")]
		public TextlessBarkUI()
		{
		}
	}
	[Token(Token = "0x20002F8")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xA0A14C", Offset = "0xA0A14C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0A14C", Offset = "0xA0A14C")]
	public class DialogueSystemController : PixelCrushers.DialogueSystem.DialogueSystemController
	{
		[Token(Token = "0x6001B07")]
		[Address(RVA = "0x11689F4", Offset = "0x11689F4", VA = "0x11689F4")]
		public DialogueSystemController()
		{
		}
	}
	[Token(Token = "0x20002F9")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xA0A1AC", Offset = "0xA0A1AC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0A1AC", Offset = "0xA0A1AC")]
	public class DialogueSystemEvents : PixelCrushers.DialogueSystem.DialogueSystemEvents
	{
		[Token(Token = "0x6001B08")]
		[Address(RVA = "0x1168A5C", Offset = "0x1168A5C", VA = "0x1168A5C")]
		public DialogueSystemEvents()
		{
		}
	}
	[Token(Token = "0x20002FA")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xA0A20C", Offset = "0xA0A20C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0A20C", Offset = "0xA0A20C")]
	public class ExtraDatabases : PixelCrushers.DialogueSystem.ExtraDatabases
	{
		[Token(Token = "0x6001B09")]
		[Address(RVA = "0x1168ADC", Offset = "0x1168ADC", VA = "0x1168ADC")]
		public ExtraDatabases()
		{
		}
	}
	[Token(Token = "0x20002FB")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0A26C", Offset = "0xA0A26C")]
	public class CinemachineCameraPriorityOnDialogueEvent : PixelCrushers.DialogueSystem.CinemachineCameraPriorityOnDialogueEvent
	{
		[Token(Token = "0x6001B0A")]
		[Address(RVA = "0x1168888", Offset = "0x1168888", VA = "0x1168888")]
		private void Reset()
		{
		}

		[Token(Token = "0x6001B0B")]
		[Address(RVA = "0x1168944", Offset = "0x1168944", VA = "0x1168944")]
		public CinemachineCameraPriorityOnDialogueEvent()
		{
		}
	}
	[Token(Token = "0x20002FC")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xA0A2A4", Offset = "0xA0A2A4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0A2A4", Offset = "0xA0A2A4")]
	public class TimelineTrigger : PixelCrushers.DialogueSystem.TimelineTrigger
	{
		[Token(Token = "0x6001B0C")]
		[Address(RVA = "0x1168DDC", Offset = "0x1168DDC", VA = "0x1168DDC")]
		public TimelineTrigger()
		{
		}
	}
	[Token(Token = "0x20002FD")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xA0A304", Offset = "0xA0A304")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0A304", Offset = "0xA0A304")]
	public class IncrementOnDestroy : PixelCrushers.DialogueSystem.IncrementOnDestroy
	{
		[Token(Token = "0x6001B0D")]
		[Address(RVA = "0x1168B4C", Offset = "0x1168B4C", VA = "0x1168B4C")]
		public IncrementOnDestroy()
		{
		}
	}
	[Token(Token = "0x20002FE")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0A364", Offset = "0xA0A364")]
	public class QuestLogWindowHotkey : PixelCrushers.DialogueSystem.QuestLogWindowHotkey
	{
		[Token(Token = "0x6001B0E")]
		[Address(RVA = "0x1168BCC", Offset = "0x1168BCC", VA = "0x1168BCC")]
		public QuestLogWindowHotkey()
		{
		}
	}
	[Token(Token = "0x20002FF")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xA0A39C", Offset = "0xA0A39C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0A39C", Offset = "0xA0A39C")]
	public class QuestStateIndicator : PixelCrushers.DialogueSystem.QuestStateIndicator
	{
		[Token(Token = "0x6001B0F")]
		[Address(RVA = "0x1168BD4", Offset = "0x1168BD4", VA = "0x1168BD4")]
		public QuestStateIndicator()
		{
		}
	}
	[Token(Token = "0x2000300")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xA0A3FC", Offset = "0xA0A3FC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0A3FC", Offset = "0xA0A3FC")]
	public class QuestStateListener : PixelCrushers.DialogueSystem.QuestStateListener
	{
		[Token(Token = "0x6001B10")]
		[Address(RVA = "0x1168BDC", Offset = "0x1168BDC", VA = "0x1168BDC")]
		public QuestStateListener()
		{
		}
	}
	[Token(Token = "0x2000301")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0A45C", Offset = "0xA0A45C")]
	public class ConversationStateSaver : PixelCrushers.DialogueSystem.ConversationStateSaver
	{
		[Token(Token = "0x6001B11")]
		[Address(RVA = "0x11689CC", Offset = "0x11689CC", VA = "0x11689CC")]
		public ConversationStateSaver()
		{
		}
	}
	[Token(Token = "0x2000302")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0A494", Offset = "0xA0A494")]
	public class DialogueSystemSaver : PixelCrushers.DialogueSystem.DialogueSystemSaver
	{
		[Token(Token = "0x6001B12")]
		[Address(RVA = "0x1168A64", Offset = "0x1168A64", VA = "0x1168A64")]
		public DialogueSystemSaver()
		{
		}
	}
	[Token(Token = "0x2000303")]
	public class GameSaver : PixelCrushers.DialogueSystem.GameSaver
	{
		[Token(Token = "0x6001B13")]
		[Address(RVA = "0x1168B44", Offset = "0x1168B44", VA = "0x1168B44")]
		public GameSaver()
		{
		}
	}
	[Token(Token = "0x2000304")]
	public class LevelManager : PixelCrushers.DialogueSystem.LevelManager
	{
		[Token(Token = "0x6001B14")]
		[Address(RVA = "0x1168B54", Offset = "0x1168B54", VA = "0x1168B54")]
		public LevelManager()
		{
		}
	}
	[Token(Token = "0x2000305")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0A4CC", Offset = "0xA0A4CC")]
	public class PersistentActiveData : PixelCrushers.DialogueSystem.PersistentActiveData
	{
		[Token(Token = "0x6001B15")]
		[Address(RVA = "0x1168BA4", Offset = "0x1168BA4", VA = "0x1168BA4")]
		public PersistentActiveData()
		{
		}
	}
	[Token(Token = "0x2000306")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0A504", Offset = "0xA0A504")]
	public class PersistentDestructible : PixelCrushers.DialogueSystem.PersistentDestructible
	{
		[Token(Token = "0x6001B16")]
		[Address(RVA = "0x1168BAC", Offset = "0x1168BAC", VA = "0x1168BAC")]
		public PersistentDestructible()
		{
		}
	}
	[Token(Token = "0x2000307")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0A53C", Offset = "0xA0A53C")]
	public class PersistentPositionData : PixelCrushers.DialogueSystem.PersistentPositionData
	{
		[Token(Token = "0x6001B17")]
		[Address(RVA = "0x1168BB4", Offset = "0x1168BB4", VA = "0x1168BB4")]
		public PersistentPositionData()
		{
		}
	}
	[Token(Token = "0x2000308")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xA0A574", Offset = "0xA0A574")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0A574", Offset = "0xA0A574")]
	public class ProximitySelector : PixelCrushers.DialogueSystem.ProximitySelector
	{
		[Token(Token = "0x6001B18")]
		[Address(RVA = "0x1168BC4", Offset = "0x1168BC4", VA = "0x1168BC4")]
		public ProximitySelector()
		{
		}
	}
	[Token(Token = "0x2000309")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xA0A5D4", Offset = "0xA0A5D4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0A5D4", Offset = "0xA0A5D4")]
	public class Selector : PixelCrushers.DialogueSystem.Selector
	{
		[Token(Token = "0x6001B19")]
		[Address(RVA = "0x1168BF4", Offset = "0x1168BF4", VA = "0x1168BF4")]
		public Selector()
		{
		}
	}
	[Token(Token = "0x200030A")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0A634", Offset = "0xA0A634")]
	public class SelectorFollowTarget : PixelCrushers.DialogueSystem.SelectorFollowTarget
	{
		[Token(Token = "0x6001B1A")]
		[Address(RVA = "0x1168C5C", Offset = "0x1168C5C", VA = "0x1168C5C")]
		public SelectorFollowTarget()
		{
		}
	}
	[Token(Token = "0x200030B")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xA0A66C", Offset = "0xA0A66C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0A66C", Offset = "0xA0A66C")]
	public class Usable : PixelCrushers.DialogueSystem.Usable
	{
		[Token(Token = "0x6001B1B")]
		[Address(RVA = "0x1168ED0", Offset = "0x1168ED0", VA = "0x1168ED0")]
		public Usable()
		{
		}
	}
	[Token(Token = "0x200030C")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xA0A6CC", Offset = "0xA0A6CC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0A6CC", Offset = "0xA0A6CC")]
	public class BarkOnIdle : PixelCrushers.DialogueSystem.BarkOnIdle
	{
		[Token(Token = "0x6001B1C")]
		[Address(RVA = "0x1168878", Offset = "0x1168878", VA = "0x1168878")]
		public BarkOnIdle()
		{
		}
	}
	[Token(Token = "0x200030D")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xA0A72C", Offset = "0xA0A72C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0A72C", Offset = "0xA0A72C")]
	public class ConditionObserver : PixelCrushers.DialogueSystem.ConditionObserver
	{
		[Token(Token = "0x6001B1D")]
		[Address(RVA = "0x1168954", Offset = "0x1168954", VA = "0x1168954")]
		public ConditionObserver()
		{
		}
	}
	[Token(Token = "0x200030E")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xA0A78C", Offset = "0xA0A78C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0A78C", Offset = "0xA0A78C")]
	public class DialogueSystemTrigger : PixelCrushers.DialogueSystem.DialogueSystemTrigger
	{
		[Token(Token = "0x6001B1E")]
		[Address(RVA = "0x1168AD4", Offset = "0x1168AD4", VA = "0x1168AD4")]
		public DialogueSystemTrigger()
		{
		}
	}
	[Token(Token = "0x200030F")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xA0A7EC", Offset = "0xA0A7EC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0A7EC", Offset = "0xA0A7EC")]
	public class RangeTrigger : PixelCrushers.DialogueSystem.RangeTrigger
	{
		[Token(Token = "0x6001B1F")]
		[Address(RVA = "0x1168BEC", Offset = "0x1168BEC", VA = "0x1168BEC")]
		public RangeTrigger()
		{
		}
	}
	[Token(Token = "0x2000310")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xA0A84C", Offset = "0xA0A84C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0A84C", Offset = "0xA0A84C")]
	public class StandardBarkUI : PixelCrushers.DialogueSystem.StandardBarkUI
	{
		[Token(Token = "0x6001B20")]
		[Address(RVA = "0x1168CBC", Offset = "0x1168CBC", VA = "0x1168CBC")]
		public StandardBarkUI()
		{
		}
	}
	[Token(Token = "0x2000311")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xA0A8AC", Offset = "0xA0A8AC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0A8AC", Offset = "0xA0A8AC")]
	public class StandardDialogueUI : PixelCrushers.DialogueSystem.StandardDialogueUI
	{
		[Token(Token = "0x6001B21")]
		[Address(RVA = "0x1168CC4", Offset = "0x1168CC4", VA = "0x1168CC4")]
		public StandardDialogueUI()
		{
		}
	}
	[Token(Token = "0x2000312")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0A90C", Offset = "0xA0A90C")]
	public class StandardUIInputField : PixelCrushers.DialogueSystem.StandardUIInputField
	{
		[Token(Token = "0x6001B22")]
		[Address(RVA = "0x1168CF4", Offset = "0x1168CF4", VA = "0x1168CF4")]
		public StandardUIInputField()
		{
		}
	}
	[Token(Token = "0x2000313")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xA0A944", Offset = "0xA0A944")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0A944", Offset = "0xA0A944")]
	public class StandardUIMenuPanel : PixelCrushers.DialogueSystem.StandardUIMenuPanel
	{
		[Token(Token = "0x6001B23")]
		[Address(RVA = "0x1168CFC", Offset = "0x1168CFC", VA = "0x1168CFC")]
		public StandardUIMenuPanel()
		{
		}
	}
	[Token(Token = "0x2000314")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0A9A4", Offset = "0xA0A9A4")]
	public class StandardUIResponseButton : PixelCrushers.DialogueSystem.StandardUIResponseButton
	{
		[Token(Token = "0x6001B24")]
		[Address(RVA = "0x1168D24", Offset = "0x1168D24", VA = "0x1168D24")]
		public StandardUIResponseButton()
		{
		}
	}
	[Token(Token = "0x2000315")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xA0A9DC", Offset = "0xA0A9DC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0A9DC", Offset = "0xA0A9DC")]
	public class StandardUISubtitlePanel : PixelCrushers.DialogueSystem.StandardUISubtitlePanel
	{
		[Token(Token = "0x6001B25")]
		[Address(RVA = "0x1168D94", Offset = "0x1168D94", VA = "0x1168D94")]
		public StandardUISubtitlePanel()
		{
		}
	}
	[Token(Token = "0x2000316")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0AA3C", Offset = "0xA0AA3C")]
	public class StandardUIColorText : PixelCrushers.DialogueSystem.StandardUIColorText
	{
		[Token(Token = "0x6001B26")]
		[Address(RVA = "0x1168CD4", Offset = "0x1168CD4", VA = "0x1168CD4")]
		public StandardUIColorText()
		{
		}
	}
	[Token(Token = "0x2000317")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0AA74", Offset = "0xA0AA74")]
	public class StandardUIContinueButtonFastForward : PixelCrushers.DialogueSystem.StandardUIContinueButtonFastForward
	{
		[Token(Token = "0x6001B27")]
		[Address(RVA = "0x1168CDC", Offset = "0x1168CDC", VA = "0x1168CDC")]
		public StandardUIContinueButtonFastForward()
		{
		}
	}
	[Token(Token = "0x2000318")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0AAAC", Offset = "0xA0AAAC")]
	public class StandardUIIgnorePauseCodes : PixelCrushers.DialogueSystem.StandardUIIgnorePauseCodes
	{
		[Token(Token = "0x6001B28")]
		[Address(RVA = "0x1168CEC", Offset = "0x1168CEC", VA = "0x1168CEC")]
		public StandardUIIgnorePauseCodes()
		{
		}
	}
	[Token(Token = "0x2000319")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0AAE4", Offset = "0xA0AAE4")]
	public class StandardUIButtonTemplate : PixelCrushers.DialogueSystem.StandardUIButtonTemplate
	{
		[Token(Token = "0x6001B29")]
		[Address(RVA = "0x1168CCC", Offset = "0x1168CCC", VA = "0x1168CCC")]
		public StandardUIButtonTemplate()
		{
		}
	}
	[Token(Token = "0x200031A")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0AB1C", Offset = "0xA0AB1C")]
	public class StandardUIFoldoutTemplate : PixelCrushers.DialogueSystem.StandardUIFoldoutTemplate
	{
		[Token(Token = "0x6001B2A")]
		[Address(RVA = "0x1168CE4", Offset = "0x1168CE4", VA = "0x1168CE4")]
		public StandardUIFoldoutTemplate()
		{
		}
	}
	[Token(Token = "0x200031B")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0AB54", Offset = "0xA0AB54")]
	public class StandardUITextTemplate : PixelCrushers.DialogueSystem.StandardUITextTemplate
	{
		[Token(Token = "0x6001B2B")]
		[Address(RVA = "0x1168D9C", Offset = "0x1168D9C", VA = "0x1168D9C")]
		public StandardUITextTemplate()
		{
		}
	}
	[Token(Token = "0x200031C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0AB8C", Offset = "0xA0AB8C")]
	public class StandardUIToggleTemplate : PixelCrushers.DialogueSystem.StandardUIToggleTemplate
	{
		[Token(Token = "0x6001B2C")]
		[Address(RVA = "0x1168DA4", Offset = "0x1168DA4", VA = "0x1168DA4")]
		public StandardUIToggleTemplate()
		{
		}
	}
	[Token(Token = "0x200031D")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xA0ABC4", Offset = "0xA0ABC4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0ABC4", Offset = "0xA0ABC4")]
	public class StandardUIQuestLogWindow : PixelCrushers.DialogueSystem.StandardUIQuestLogWindow
	{
		[Token(Token = "0x6001B2D")]
		[Address(RVA = "0x1168D04", Offset = "0x1168D04", VA = "0x1168D04")]
		public StandardUIQuestLogWindow()
		{
		}
	}
	[Token(Token = "0x200031E")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0AC24", Offset = "0xA0AC24")]
	public class StandardUIQuestTitleButtonTemplate : PixelCrushers.DialogueSystem.StandardUIQuestTitleButtonTemplate
	{
		[Token(Token = "0x6001B2E")]
		[Address(RVA = "0x1168D0C", Offset = "0x1168D0C", VA = "0x1168D0C")]
		public StandardUIQuestTitleButtonTemplate()
		{
		}
	}
	[Token(Token = "0x200031F")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0AC5C", Offset = "0xA0AC5C")]
	public class StandardUIQuestTrackTemplate : PixelCrushers.DialogueSystem.StandardUIQuestTrackTemplate
	{
		[Token(Token = "0x6001B2F")]
		[Address(RVA = "0x1168D14", Offset = "0x1168D14", VA = "0x1168D14")]
		public StandardUIQuestTrackTemplate()
		{
		}
	}
	[Token(Token = "0x2000320")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xA0AC94", Offset = "0xA0AC94")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0AC94", Offset = "0xA0AC94")]
	public class StandardUIQuestTracker : PixelCrushers.DialogueSystem.StandardUIQuestTracker
	{
		[Token(Token = "0x6001B30")]
		[Address(RVA = "0x1168D1C", Offset = "0x1168D1C", VA = "0x1168D1C")]
		public StandardUIQuestTracker()
		{
		}
	}
	[Token(Token = "0x2000321")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xA0ACF4", Offset = "0xA0ACF4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0ACF4", Offset = "0xA0ACF4")]
	public class SelectorUseStandardUIElements : PixelCrushers.DialogueSystem.SelectorUseStandardUIElements
	{
		[Token(Token = "0x6001B31")]
		[Address(RVA = "0x1168C64", Offset = "0x1168C64", VA = "0x1168C64")]
		public SelectorUseStandardUIElements()
		{
		}
	}
	[Token(Token = "0x2000322")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xA0AD54", Offset = "0xA0AD54")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0AD54", Offset = "0xA0AD54")]
	public class StandardUISelectorElements : PixelCrushers.DialogueSystem.StandardUISelectorElements
	{
		[Token(Token = "0x6001B32")]
		[Address(RVA = "0x1168D2C", Offset = "0x1168D2C", VA = "0x1168D2C")]
		public StandardUISelectorElements()
		{
		}
	}
	[Token(Token = "0x2000323")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0ADB4", Offset = "0xA0ADB4")]
	public class StandardUsableUI : PixelCrushers.DialogueSystem.StandardUsableUI
	{
		[Token(Token = "0x6001B33")]
		[Address(RVA = "0x1168DAC", Offset = "0x1168DAC", VA = "0x1168DAC")]
		public StandardUsableUI()
		{
		}
	}
	[Token(Token = "0x2000324")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA0ADEC", Offset = "0xA0ADEC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0ADEC", Offset = "0xA0ADEC")]
	public class LocalizeTextMesh : PixelCrushers.DialogueSystem.LocalizeTextMesh
	{
		[Token(Token = "0x6001B34")]
		[Address(RVA = "0x1168B5C", Offset = "0x1168B5C", VA = "0x1168B5C")]
		public LocalizeTextMesh()
		{
		}
	}
	[Token(Token = "0x2000325")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0AE74", Offset = "0xA0AE74")]
	public class UnityUIBarkUI : PixelCrushers.DialogueSystem.UnityUIBarkUI
	{
		[Token(Token = "0x6001B35")]
		[Address(RVA = "0x1168DF4", Offset = "0x1168DF4", VA = "0x1168DF4")]
		public UnityUIBarkUI()
		{
		}
	}
	[Token(Token = "0x2000326")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0AEAC", Offset = "0xA0AEAC")]
	public class OverrideUnityUIDialogueControls : PixelCrushers.DialogueSystem.OverrideUnityUIDialogueControls
	{
		[Token(Token = "0x6001B36")]
		[Address(RVA = "0x1168B9C", Offset = "0x1168B9C", VA = "0x1168B9C")]
		public OverrideUnityUIDialogueControls()
		{
		}
	}
	[Token(Token = "0x2000327")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0AEE4", Offset = "0xA0AEE4")]
	public class AnimatedPortrait : PixelCrushers.DialogueSystem.AnimatedPortrait
	{
		[Token(Token = "0x6001B37")]
		[Address(RVA = "0x1168858", Offset = "0x1168858", VA = "0x1168858")]
		public AnimatedPortrait()
		{
		}
	}
	[Token(Token = "0x2000328")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0AF1C", Offset = "0xA0AF1C")]
	public class UseAnimatedPortraits : PixelCrushers.DialogueSystem.UseAnimatedPortraits
	{
		[Token(Token = "0x6001B38")]
		[Address(RVA = "0x1168EE4", Offset = "0x1168EE4", VA = "0x1168EE4")]
		public UseAnimatedPortraits()
		{
		}
	}
	[Token(Token = "0x2000329")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0AF54", Offset = "0xA0AF54")]
	public class UnityUIBarkSubtitleDialogueUI : PixelCrushers.DialogueSystem.UnityUIBarkSubtitleDialogueUI
	{
		[Token(Token = "0x6001B39")]
		[Address(RVA = "0x1168DEC", Offset = "0x1168DEC", VA = "0x1168DEC")]
		public UnityUIBarkSubtitleDialogueUI()
		{
		}
	}
	[Token(Token = "0x200032A")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0AF8C", Offset = "0xA0AF8C")]
	public class UnityUIDialogueUI : PixelCrushers.DialogueSystem.UnityUIDialogueUI
	{
		[Token(Token = "0x6001B3A")]
		[Address(RVA = "0x1168E0C", Offset = "0x1168E0C", VA = "0x1168E0C")]
		public UnityUIDialogueUI()
		{
		}
	}
	[Token(Token = "0x200032B")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0AFC4", Offset = "0xA0AFC4")]
	public class UnityUIResponseButton : PixelCrushers.DialogueSystem.UnityUIResponseButton
	{
		[Token(Token = "0x6001B3B")]
		[Address(RVA = "0x1168E4C", Offset = "0x1168E4C", VA = "0x1168E4C")]
		public UnityUIResponseButton()
		{
		}
	}
	[Token(Token = "0x200032C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0AFFC", Offset = "0xA0AFFC")]
	public class UnityUITextFieldUI : PixelCrushers.DialogueSystem.UnityUITextFieldUI
	{
		[Token(Token = "0x6001B3C")]
		[Address(RVA = "0x1168EC0", Offset = "0x1168EC0", VA = "0x1168EC0")]
		public UnityUITextFieldUI()
		{
		}
	}
	[Token(Token = "0x200032D")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0B034", Offset = "0xA0B034")]
	public class UnityUITimer : PixelCrushers.DialogueSystem.UnityUITimer
	{
		[Token(Token = "0x6001B3D")]
		[Address(RVA = "0x1168EC4", Offset = "0x1168EC4", VA = "0x1168EC4")]
		public UnityUITimer()
		{
		}
	}
	[Token(Token = "0x200032E")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0B06C", Offset = "0xA0B06C")]
	public class UnityUIContinueButtonFastForward : PixelCrushers.DialogueSystem.UnityUIContinueButtonFastForward
	{
		[Token(Token = "0x6001B3E")]
		[Address(RVA = "0x1168E04", Offset = "0x1168E04", VA = "0x1168E04")]
		public UnityUIContinueButtonFastForward()
		{
		}
	}
	[Token(Token = "0x200032F")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0B0A4", Offset = "0xA0B0A4")]
	public class UnityUIQuestGroupTemplate : PixelCrushers.DialogueSystem.UnityUIQuestGroupTemplate
	{
		[Token(Token = "0x6001B3F")]
		[Address(RVA = "0x1168E1C", Offset = "0x1168E1C", VA = "0x1168E1C")]
		public UnityUIQuestGroupTemplate()
		{
		}
	}
	[Token(Token = "0x2000330")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0B0DC", Offset = "0xA0B0DC")]
	public class UnityUIQuestLogWindow : PixelCrushers.DialogueSystem.UnityUIQuestLogWindow
	{
		[Token(Token = "0x6001B40")]
		[Address(RVA = "0x1168E24", Offset = "0x1168E24", VA = "0x1168E24")]
		public UnityUIQuestLogWindow()
		{
		}
	}
	[Token(Token = "0x2000331")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0B114", Offset = "0xA0B114")]
	public class UnityUIQuestTemplate : PixelCrushers.DialogueSystem.UnityUIQuestTemplate
	{
		[Token(Token = "0x6001B41")]
		[Address(RVA = "0x1168E2C", Offset = "0x1168E2C", VA = "0x1168E2C")]
		public UnityUIQuestTemplate()
		{
		}
	}
	[Token(Token = "0x2000332")]
	public class UnityUIQuestTitle : PixelCrushers.DialogueSystem.UnityUIQuestTitle
	{
		[Token(Token = "0x6001B42")]
		[Address(RVA = "0x1168E34", Offset = "0x1168E34", VA = "0x1168E34")]
		public UnityUIQuestTitle()
		{
		}
	}
	[Token(Token = "0x2000333")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0B14C", Offset = "0xA0B14C")]
	public class UnityUIQuestTrackTemplate : PixelCrushers.DialogueSystem.UnityUIQuestTrackTemplate
	{
		[Token(Token = "0x6001B43")]
		[Address(RVA = "0x1168E3C", Offset = "0x1168E3C", VA = "0x1168E3C")]
		public UnityUIQuestTrackTemplate()
		{
		}
	}
	[Token(Token = "0x2000334")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0B184", Offset = "0xA0B184")]
	public class UnityUIQuestTracker : PixelCrushers.DialogueSystem.UnityUIQuestTracker
	{
		[Token(Token = "0x6001B44")]
		[Address(RVA = "0x1168E44", Offset = "0x1168E44", VA = "0x1168E44")]
		public UnityUIQuestTracker()
		{
		}
	}
	[Token(Token = "0x2000335")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0B1BC", Offset = "0xA0B1BC")]
	public class UnityUISelectorDisplay : PixelCrushers.DialogueSystem.UnityUISelectorDisplay
	{
		[Token(Token = "0x6001B45")]
		[Address(RVA = "0x1168E58", Offset = "0x1168E58", VA = "0x1168E58")]
		public UnityUISelectorDisplay()
		{
		}
	}
	[Token(Token = "0x2000336")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0B1F4", Offset = "0xA0B1F4")]
	public class UnityUISelectorElements : PixelCrushers.DialogueSystem.UnityUISelectorElements
	{
		[Token(Token = "0x6001B46")]
		[Address(RVA = "0x1168E5C", Offset = "0x1168E5C", VA = "0x1168E5C")]
		public UnityUISelectorElements()
		{
		}
	}
	[Token(Token = "0x2000337")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0B22C", Offset = "0xA0B22C")]
	public class UsableUnityUI : PixelCrushers.DialogueSystem.UsableUnityUI
	{
		[Token(Token = "0x6001B47")]
		[Address(RVA = "0x1168EE0", Offset = "0x1168EE0", VA = "0x1168EE0")]
		public UsableUnityUI()
		{
		}
	}
	[Token(Token = "0x2000338")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0B264", Offset = "0xA0B264")]
	public class PreloadActorPortraits : PixelCrushers.DialogueSystem.PreloadActorPortraits
	{
		[Token(Token = "0x6001B48")]
		[Address(RVA = "0x1168BBC", Offset = "0x1168BBC", VA = "0x1168BBC")]
		public PreloadActorPortraits()
		{
		}
	}
	[Token(Token = "0x2000339")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0B29C", Offset = "0xA0B29C")]
	[DisallowMultipleComponent]
	public class TextMeshProTypewriterEffect : PixelCrushers.DialogueSystem.TextMeshProTypewriterEffect
	{
		[Token(Token = "0x6001B49")]
		[Address(RVA = "0x1168DCC", Offset = "0x1168DCC", VA = "0x1168DCC")]
		public TextMeshProTypewriterEffect()
		{
		}
	}
	[Token(Token = "0x200033A")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0B2E8", Offset = "0xA0B2E8")]
	public class UIButtonKeyTrigger : PixelCrushers.DialogueSystem.UIButtonKeyTrigger
	{
		[Token(Token = "0x6001B4A")]
		[Address(RVA = "0x1168DE4", Offset = "0x1168DE4", VA = "0x1168DE4")]
		public UIButtonKeyTrigger()
		{
		}
	}
	[Token(Token = "0x200033B")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0B320", Offset = "0xA0B320")]
	public class UnityUIColorText : PixelCrushers.DialogueSystem.UnityUIColorText
	{
		[Token(Token = "0x6001B4B")]
		[Address(RVA = "0x1168DFC", Offset = "0x1168DFC", VA = "0x1168DFC")]
		public UnityUIColorText()
		{
		}
	}
	[Token(Token = "0x200033C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0B358", Offset = "0xA0B358")]
	[DisallowMultipleComponent]
	public class UnityUIIgnorePauseCodes : PixelCrushers.DialogueSystem.UnityUIIgnorePauseCodes
	{
		[Token(Token = "0x6001B4C")]
		[Address(RVA = "0x1168E14", Offset = "0x1168E14", VA = "0x1168E14")]
		public UnityUIIgnorePauseCodes()
		{
		}
	}
	[Token(Token = "0x200033D")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0B3A4", Offset = "0xA0B3A4")]
	public class UnityUIScrollbarEnabler : UIScrollbarEnabler
	{
		[Token(Token = "0x6001B4D")]
		[Address(RVA = "0x1168E50", Offset = "0x1168E50", VA = "0x1168E50")]
		public UnityUIScrollbarEnabler()
		{
		}
	}
	[Token(Token = "0x200033E")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xA0B3DC", Offset = "0xA0B3DC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0B3DC", Offset = "0xA0B3DC")]
	[DisallowMultipleComponent]
	public class UnityUITypewriterEffect : PixelCrushers.DialogueSystem.UnityUITypewriterEffect
	{
		[Token(Token = "0x6001B4E")]
		[Address(RVA = "0x1168ECC", Offset = "0x1168ECC", VA = "0x1168ECC")]
		public UnityUITypewriterEffect()
		{
		}
	}
	[Token(Token = "0x200033F")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xA0B44C", Offset = "0xA0B44C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0B44C", Offset = "0xA0B44C")]
	public class AlwaysFaceCamera : PixelCrushers.DialogueSystem.AlwaysFaceCamera
	{
		[Token(Token = "0x6001B4F")]
		[Address(RVA = "0x1168850", Offset = "0x1168850", VA = "0x1168850")]
		public AlwaysFaceCamera()
		{
		}
	}
	[Token(Token = "0x2000340")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0B4AC", Offset = "0xA0B4AC")]
	public class CommonLibraryLua : PixelCrushers.DialogueSystem.CommonLibraryLua
	{
		[Token(Token = "0x6001B50")]
		[Address(RVA = "0x116894C", Offset = "0x116894C", VA = "0x116894C")]
		public CommonLibraryLua()
		{
		}
	}
	[Token(Token = "0x2000341")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xA0B4E4", Offset = "0xA0B4E4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0B4E4", Offset = "0xA0B4E4")]
	public class ConversationLogger : PixelCrushers.DialogueSystem.ConversationLogger
	{
		[Token(Token = "0x6001B51")]
		[Address(RVA = "0x116895C", Offset = "0x116895C", VA = "0x116895C")]
		public ConversationLogger()
		{
		}
	}
	[Token(Token = "0x2000342")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0B544", Offset = "0xA0B544")]
	public class ConversationPositionStack : PixelCrushers.DialogueSystem.ConversationPositionStack
	{
		[Token(Token = "0x6001B52")]
		[Address(RVA = "0x1168964", Offset = "0x1168964", VA = "0x1168964")]
		public ConversationPositionStack()
		{
		}
	}
	[Token(Token = "0x2000343")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xA0B57C", Offset = "0xA0B57C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0B57C", Offset = "0xA0B57C")]
	public class LuaConsole : PixelCrushers.DialogueSystem.LuaConsole
	{
		[Token(Token = "0x6001B53")]
		[Address(RVA = "0x1168B6C", Offset = "0x1168B6C", VA = "0x1168B6C")]
		public LuaConsole()
		{
		}
	}
}
namespace PixelCrushers.DialogueSystem.UnityGUI
{
	[Token(Token = "0x2000344")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0B5DC", Offset = "0xA0B5DC")]
	public class UnityBarkUI : AbstractBarkUI
	{
		[Token(Token = "0x4001034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform textPosition;

		[Token(Token = "0x4001035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GUISkin guiSkin;

		[Token(Token = "0x4001036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string guiStyleName;

		[Token(Token = "0x4001037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool includeName;

		[Token(Token = "0x4001038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float duration;

		[Token(Token = "0x4001039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float fadeDuration;

		[Token(Token = "0x400103A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public TextStyle textStyle;

		[Token(Token = "0x400103B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color textStyleColor;

		[Token(Token = "0x400103C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public BarkSubtitleSetting textDisplaySetting;

		[Token(Token = "0x400103D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool waitUntilSequenceEnds;

		[Token(Token = "0x400103E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		public bool checkIfPlayerVisible;

		[Token(Token = "0x400103F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public LayerMask visibilityLayerMask;

		[Token(Token = "0x4001040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected UnityBarkUIOnGUI unityBarkUIOnGUI;

		[Token(Token = "0x4001041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected Transform playerCameraTransform;

		[Token(Token = "0x4001042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected Collider playerCameraCollider;

		[Token(Token = "0x4001043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected float secondsLeft;

		[Token(Token = "0x17000313")]
		public bool showText
		{
			[Token(Token = "0x6001B54")]
			[Address(RVA = "0x15D697C", Offset = "0x15D697C", VA = "0x15D697C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000314")]
		public override bool isPlaying
		{
			[Token(Token = "0x6001B58")]
			[Address(RVA = "0x15D6B88", Offset = "0x15D6B88", VA = "0x15D6B88", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001B55")]
		[Address(RVA = "0x15D6A20", Offset = "0x15D6A20", VA = "0x15D6A20", Slot = "10")]
		public virtual void Awake()
		{
		}

		[Token(Token = "0x6001B56")]
		[Address(RVA = "0x15D6B14", Offset = "0x15D6B14", VA = "0x15D6B14", Slot = "11")]
		public virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001B57")]
		[Address(RVA = "0x15D6A24", Offset = "0x15D6A24", VA = "0x15D6A24")]
		protected void CheckUnityBarkUIOnGUI()
		{
		}

		[Token(Token = "0x6001B59")]
		[Address(RVA = "0x15D6B98", Offset = "0x15D6B98", VA = "0x15D6B98", Slot = "8")]
		public override void Bark(Subtitle subtitle)
		{
		}

		[Token(Token = "0x6001B5A")]
		[Address(RVA = "0x15D6ED4", Offset = "0x15D6ED4", VA = "0x15D6ED4", Slot = "12")]
		public virtual void Update()
		{
		}

		[Token(Token = "0x6001B5B")]
		[Address(RVA = "0x15D7144", Offset = "0x15D7144", VA = "0x15D7144")]
		public void OnBarkEnd(Transform actor)
		{
		}

		[Token(Token = "0x6001B5C")]
		[Address(RVA = "0x15D715C", Offset = "0x15D715C", VA = "0x15D715C", Slot = "9")]
		public override void Hide()
		{
		}

		[Token(Token = "0x6001B5D")]
		[Address(RVA = "0x15D6F54", Offset = "0x15D6F54", VA = "0x15D6F54")]
		protected void CheckPlayerVisibility()
		{
		}

		[Token(Token = "0x6001B5E")]
		[Address(RVA = "0x15D6DA8", Offset = "0x15D6DA8", VA = "0x15D6DA8")]
		protected void CheckPlayerCameraTransform()
		{
		}

		[Token(Token = "0x6001B5F")]
		[Address(RVA = "0x15D7234", Offset = "0x15D7234", VA = "0x15D7234")]
		public UnityBarkUI()
		{
		}
	}
	[Token(Token = "0x2000345")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0B614", Offset = "0xA0B614")]
	public class UnityBarkUIOnGUI : MonoBehaviour
	{
		[Token(Token = "0x2000669")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DF98", Offset = "0xA0DF98")]
		private sealed class <FadeOut>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float fadeDuration;

			[Token(Token = "0x4001FBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UnityBarkUIOnGUI <>4__this;

			[Token(Token = "0x4001FBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startTime>5__2;

			[Token(Token = "0x4001FBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <endTime>5__3;

			[Token(Token = "0x170005A3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002BB7")]
				[Address(RVA = "0x15D7F58", Offset = "0x15D7F58", VA = "0x15D7F58", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005A4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BB9")]
				[Address(RVA = "0x15D7FC0", Offset = "0x15D7FC0", VA = "0x15D7FC0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BB4")]
			[Address(RVA = "0x15D7A24", Offset = "0x15D7A24", VA = "0x15D7A24")]
			[DebuggerHidden]
			public <FadeOut>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6002BB5")]
			[Address(RVA = "0x15D7E28", Offset = "0x15D7E28", VA = "0x15D7E28", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002BB6")]
			[Address(RVA = "0x15D7E2C", Offset = "0x15D7E2C", VA = "0x15D7E2C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BB8")]
			[Address(RVA = "0x15D7F60", Offset = "0x15D7F60", VA = "0x15D7F60", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 offset;

		[Token(Token = "0x4001045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float maxWidth;

		[Token(Token = "0x4001046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected GUISkin guiSkin;

		[Token(Token = "0x4001047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected string guiStyleName;

		[Token(Token = "0x4001048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected GUIStyle guiStyle;

		[Token(Token = "0x4001049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected FormattedText formattingToApply;

		[Token(Token = "0x400104A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected TextStyle textStyle;

		[Token(Token = "0x400104B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		protected Color textStyleColor;

		[Token(Token = "0x400104C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		protected Vector2 size;

		[Token(Token = "0x400104D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected string message;

		[Token(Token = "0x400104E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected float alpha;

		[Token(Token = "0x400104F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Transform myTransform;

		[Token(Token = "0x4001050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected Transform absolutePosition;

		[Token(Token = "0x4001051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected Vector3 offsetToHead;

		[Token(Token = "0x4001052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1E194", Offset = "0xA1E194")]
		private Vector3 <BarkPosition>k__BackingField;

		[Token(Token = "0x4001053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected Vector3 screenPos;

		[Token(Token = "0x17000315")]
		public bool IsPlaying
		{
			[Token(Token = "0x6001B60")]
			[Address(RVA = "0x15D7290", Offset = "0x15D7290", VA = "0x15D7290")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000316")]
		public Vector3 BarkPosition
		{
			[Token(Token = "0x6001B61")]
			[Address(RVA = "0x15D7298", Offset = "0x15D7298", VA = "0x15D7298")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2E3B0", Offset = "0xA2E3B0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001B62")]
			[Address(RVA = "0x15D72A4", Offset = "0x15D72A4", VA = "0x15D72A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2E3C0", Offset = "0xA2E3C0")]
			private set
			{
			}
		}

		[Token(Token = "0x6001B63")]
		[Address(RVA = "0x15D72B0", Offset = "0x15D72B0", VA = "0x15D72B0", Slot = "4")]
		public virtual void Awake()
		{
		}

		[Token(Token = "0x6001B64")]
		[Address(RVA = "0x15D72D8", Offset = "0x15D72D8", VA = "0x15D72D8", Slot = "5")]
		public virtual void Start()
		{
		}

		[Token(Token = "0x6001B65")]
		[Address(RVA = "0x15D7304", Offset = "0x15D7304", VA = "0x15D7304")]
		protected void ComputeOffsetToHead()
		{
		}

		[Token(Token = "0x6001B66")]
		[Address(RVA = "0x15D760C", Offset = "0x15D760C", VA = "0x15D760C", Slot = "6")]
		public virtual void Show(Subtitle subtitle, float duration, GUISkin guiSkin, string guiStyleName, TextStyle textStyle, bool includeName, Transform textPosition)
		{
		}

		[Token(Token = "0x6001B67")]
		[Address(RVA = "0x15D76B4", Offset = "0x15D76B4", VA = "0x15D76B4", Slot = "7")]
		public virtual void Show(Subtitle subtitle, float duration, GUISkin guiSkin, string guiStyleName, TextStyle textStyle, Color textStyleColor, bool includeName, Transform textPosition)
		{
		}

		[Token(Token = "0x6001B68")]
		[Address(RVA = "0x15D71B4", Offset = "0x15D71B4", VA = "0x15D71B4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA2E3D0", Offset = "0xA2E3D0")]
		public IEnumerator FadeOut(float fadeDuration)
		{
			return null;
		}

		[Token(Token = "0x6001B69")]
		[Address(RVA = "0x15D7A50", Offset = "0x15D7A50", VA = "0x15D7A50", Slot = "8")]
		public virtual void OnGUI()
		{
		}

		[Token(Token = "0x6001B6A")]
		[Address(RVA = "0x15D7858", Offset = "0x15D7858", VA = "0x15D7858")]
		protected void UpdateBarkPosition()
		{
		}

		[Token(Token = "0x6001B6B")]
		[Address(RVA = "0x15D7D78", Offset = "0x15D7D78", VA = "0x15D7D78")]
		public UnityBarkUIOnGUI()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000346")]
	public class UnityAlertControls : AbstractUIAlertControls
	{
		[Token(Token = "0x4001054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GUIControl panel;

		[Token(Token = "0x4001055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GUILabel line;

		[Token(Token = "0x4001056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GUIButton continueButton;

		[Token(Token = "0x17000317")]
		public override bool isVisible
		{
			[Token(Token = "0x6001B6C")]
			[Address(RVA = "0x15D6408", Offset = "0x15D6408", VA = "0x15D6408", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001B6D")]
		[Address(RVA = "0x15D64AC", Offset = "0x15D64AC", VA = "0x15D64AC", Slot = "4")]
		public override void SetActive(bool value)
		{
		}

		[Token(Token = "0x6001B6E")]
		[Address(RVA = "0x15D6600", Offset = "0x15D6600", VA = "0x15D6600", Slot = "6")]
		public override void SetMessage(string message, float duration)
		{
		}

		[Token(Token = "0x6001B6F")]
		[Address(RVA = "0x15D67A4", Offset = "0x15D67A4", VA = "0x15D67A4")]
		private void SetFadeDuration(GameObject go, float duration)
		{
		}

		[Token(Token = "0x6001B70")]
		[Address(RVA = "0x15D6974", Offset = "0x15D6974", VA = "0x15D6974")]
		public UnityAlertControls()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000347")]
	public class UnityDialogueControls : AbstractDialogueUIControls
	{
		[Token(Token = "0x4001057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GUIControl panel;

		[Token(Token = "0x4001058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnitySubtitleControls npcSubtitle;

		[Token(Token = "0x4001059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnitySubtitleControls pcSubtitle;

		[Token(Token = "0x400105A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityResponseMenuControls responseMenu;

		[Token(Token = "0x17000318")]
		public override AbstractUISubtitleControls npcSubtitleControls
		{
			[Token(Token = "0x6001B71")]
			[Address(RVA = "0x15D7FC8", Offset = "0x15D7FC8", VA = "0x15D7FC8", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000319")]
		public override AbstractUISubtitleControls pcSubtitleControls
		{
			[Token(Token = "0x6001B72")]
			[Address(RVA = "0x15D7FD0", Offset = "0x15D7FD0", VA = "0x15D7FD0", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700031A")]
		public override AbstractUIResponseMenuControls responseMenuControls
		{
			[Token(Token = "0x6001B73")]
			[Address(RVA = "0x15D7FD8", Offset = "0x15D7FD8", VA = "0x15D7FD8", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B74")]
		[Address(RVA = "0x15D7FE0", Offset = "0x15D7FE0", VA = "0x15D7FE0", Slot = "8")]
		public override void ShowPanel()
		{
		}

		[Token(Token = "0x6001B75")]
		[Address(RVA = "0x15D7FEC", Offset = "0x15D7FEC", VA = "0x15D7FEC", Slot = "4")]
		public override void SetActive(bool value)
		{
		}

		[Token(Token = "0x6001B76")]
		[Address(RVA = "0x15D8020", Offset = "0x15D8020", VA = "0x15D8020")]
		public UnityDialogueControls()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000348")]
	public static class UnityDialogueUIControls
	{
		[Token(Token = "0x6001B77")]
		[Address(RVA = "0x15D64E0", Offset = "0x15D64E0", VA = "0x15D64E0")]
		public static void SetControlActive(GUIControl control, bool value)
		{
		}

		[Token(Token = "0x6001B78")]
		[Address(RVA = "0x15D87D0", Offset = "0x15D87D0", VA = "0x15D87D0")]
		private static void CheckSlideEffect(GUIControl control)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000349")]
	public class UnityQTEControls : AbstractUIQTEControls
	{
		[Token(Token = "0x400105B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GUIControl[] qteIndicators;

		[Token(Token = "0x400105C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int numVisibleQTEIndicators;

		[Token(Token = "0x1700031B")]
		public override bool areVisible
		{
			[Token(Token = "0x6001B7A")]
			[Address(RVA = "0x15DAB60", Offset = "0x15DAB60", VA = "0x15DAB60", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001B79")]
		[Address(RVA = "0x15D8698", Offset = "0x15D8698", VA = "0x15D8698")]
		public UnityQTEControls(GUIControl[] qteIndicators)
		{
		}

		[Token(Token = "0x6001B7B")]
		[Address(RVA = "0x15DAB70", Offset = "0x15DAB70", VA = "0x15DAB70", Slot = "4")]
		public override void SetActive(bool value)
		{
		}

		[Token(Token = "0x6001B7C")]
		[Address(RVA = "0x15DABF4", Offset = "0x15DABF4", VA = "0x15DABF4", Slot = "6")]
		public override void ShowIndicator(int index)
		{
		}

		[Token(Token = "0x6001B7D")]
		[Address(RVA = "0x15DAD24", Offset = "0x15DAD24", VA = "0x15DAD24", Slot = "7")]
		public override void HideIndicator(int index)
		{
		}

		[Token(Token = "0x6001B7E")]
		[Address(RVA = "0x15DACC0", Offset = "0x15DACC0", VA = "0x15DACC0")]
		private bool IsQTEIndicatorVisible(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B7F")]
		[Address(RVA = "0x15DAC90", Offset = "0x15DAC90", VA = "0x15DAC90")]
		private bool IsValidQTEIndex(int index)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x200034A")]
	public class UnityResponseMenuControls : AbstractUIResponseMenuControls
	{
		[Token(Token = "0x400105D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GUIControl panel;

		[Token(Token = "0x400105E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GUILabel pcImage;

		[Token(Token = "0x400105F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GUILabel pcName;

		[Token(Token = "0x4001060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnitySubtitleControls subtitleReminder;

		[Token(Token = "0x4001061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GUIProgressBar timer;

		[Token(Token = "0x4001062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GUIButton[] buttons;

		[Token(Token = "0x4001063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TimerEffect timerEffect;

		[Token(Token = "0x4001064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Texture2D pcPortraitTexture;

		[Token(Token = "0x4001065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string pcPortraitName;

		[Token(Token = "0x1700031C")]
		public override AbstractUISubtitleControls subtitleReminderControls
		{
			[Token(Token = "0x6001B80")]
			[Address(RVA = "0x15DADC0", Offset = "0x15DADC0", VA = "0x15DADC0", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B81")]
		[Address(RVA = "0x15DADC8", Offset = "0x15DADC8", VA = "0x15DADC8", Slot = "10")]
		public override void SetPCPortrait(Sprite portraitSprite, string portraitName)
		{
		}

		[Token(Token = "0x6001B82")]
		[Address(RVA = "0x15DAE48", Offset = "0x15DAE48", VA = "0x15DAE48", Slot = "12")]
		public override void SetActorPortraitSprite(string actorName, Sprite portraitSprite)
		{
		}

		[Token(Token = "0x6001B83")]
		[Address(RVA = "0x15DAF7C", Offset = "0x15DAF7C", VA = "0x15DAF7C", Slot = "4")]
		public override void SetActive(bool value)
		{
		}

		[Token(Token = "0x6001B84")]
		[Address(RVA = "0x15DB16C", Offset = "0x15DB16C", VA = "0x15DB16C", Slot = "6")]
		protected override void ClearResponseButtons()
		{
		}

		[Token(Token = "0x6001B85")]
		[Address(RVA = "0x15DB300", Offset = "0x15DB300", VA = "0x15DB300", Slot = "7")]
		protected override void SetResponseButtons(Response[] responses, Transform target)
		{
		}

		[Token(Token = "0x6001B86")]
		[Address(RVA = "0x15DB208", Offset = "0x15DB208", VA = "0x15DB208")]
		private void SetResponseButton(GUIButton button, Response response, Transform target)
		{
		}

		[Token(Token = "0x6001B87")]
		[Address(RVA = "0x15DB650", Offset = "0x15DB650", VA = "0x15DB650")]
		private int GetNextAvailableResponseButtonPosition(int start, int direction)
		{
			return default(int);
		}

		[Token(Token = "0x6001B88")]
		[Address(RVA = "0x15DB6B8", Offset = "0x15DB6B8", VA = "0x15DB6B8", Slot = "8")]
		public override void StartTimer(float timeout)
		{
		}

		[Token(Token = "0x6001B89")]
		[Address(RVA = "0x15DB894", Offset = "0x15DB894", VA = "0x15DB894")]
		public void OnTimeout()
		{
		}

		[Token(Token = "0x6001B8A")]
		[Address(RVA = "0x15DB910", Offset = "0x15DB910", VA = "0x15DB910")]
		public UnityResponseMenuControls()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200034B")]
	public class UnitySubtitleControls : AbstractUISubtitleControls
	{
		[Token(Token = "0x4001066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GUIControl panel;

		[Token(Token = "0x4001067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GUILabel line;

		[Token(Token = "0x4001068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GUILabel portraitImage;

		[Token(Token = "0x4001069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GUILabel portraitName;

		[Token(Token = "0x400106A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GUIButton continueButton;

		[Token(Token = "0x1700031D")]
		public override bool hasText
		{
			[Token(Token = "0x6001B8B")]
			[Address(RVA = "0x15DB918", Offset = "0x15DB918", VA = "0x15DB918", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001B8C")]
		[Address(RVA = "0x15DB9B8", Offset = "0x15DB9B8", VA = "0x15DB9B8", Slot = "4")]
		public override void SetActive(bool value)
		{
		}

		[Token(Token = "0x6001B8D")]
		[Address(RVA = "0x15DBA10", Offset = "0x15DBA10", VA = "0x15DBA10", Slot = "6")]
		public override void SetSubtitle(Subtitle subtitle)
		{
		}

		[Token(Token = "0x6001B8E")]
		[Address(RVA = "0x15DBBB4", Offset = "0x15DBBB4", VA = "0x15DBBB4", Slot = "7")]
		public override void ClearSubtitle()
		{
		}

		[Token(Token = "0x6001B8F")]
		[Address(RVA = "0x15DBCE0", Offset = "0x15DBCE0", VA = "0x15DBCE0", Slot = "8")]
		public override void ShowContinueButton()
		{
		}

		[Token(Token = "0x6001B90")]
		[Address(RVA = "0x15DBCEC", Offset = "0x15DBCEC", VA = "0x15DBCEC", Slot = "9")]
		public override void HideContinueButton()
		{
		}

		[Token(Token = "0x6001B91")]
		[Address(RVA = "0x15DBCF8", Offset = "0x15DBCF8", VA = "0x15DBCF8", Slot = "11")]
		public override void SetActorPortraitSprite(string actorName, Sprite portraitSprite)
		{
		}

		[Token(Token = "0x6001B92")]
		[Address(RVA = "0x15DBDF8", Offset = "0x15DBDF8", VA = "0x15DBDF8")]
		public UnitySubtitleControls()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200034C")]
	public class UnityUIRoot : AbstractUIRoot
	{
		[Token(Token = "0x400106B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private GUIRoot guiRoot;

		[Token(Token = "0x6001B93")]
		[Address(RVA = "0x15D866C", Offset = "0x15D866C", VA = "0x15D866C")]
		public UnityUIRoot(GUIRoot guiRoot)
		{
		}

		[Token(Token = "0x6001B94")]
		[Address(RVA = "0x15DC4C8", Offset = "0x15DC4C8", VA = "0x15DC4C8", Slot = "4")]
		public override void Show()
		{
		}

		[Token(Token = "0x6001B95")]
		[Address(RVA = "0x15DC578", Offset = "0x15DC578", VA = "0x15DC578", Slot = "5")]
		public override void Hide()
		{
		}
	}
	[Token(Token = "0x200034D")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0B64C", Offset = "0xA0B64C")]
	public class UnityDialogueUI : AbstractDialogueUI
	{
		[Token(Token = "0x400106C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GUIRoot guiRoot;

		[Token(Token = "0x400106D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityDialogueControls dialogue;

		[Token(Token = "0x400106E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GUIControl[] qteIndicators;

		[Token(Token = "0x400106F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityAlertControls alert;

		[Token(Token = "0x4001070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private UnityUIRoot unityUIRoot;

		[Token(Token = "0x4001071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private UnityQTEControls unityQTEControls;

		[Token(Token = "0x1700031E")]
		public override AbstractUIRoot uiRootControls
		{
			[Token(Token = "0x6001B96")]
			[Address(RVA = "0x15D8028", Offset = "0x15D8028", VA = "0x15D8028", Slot = "16")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700031F")]
		public override AbstractDialogueUIControls dialogueControls
		{
			[Token(Token = "0x6001B97")]
			[Address(RVA = "0x15D8030", Offset = "0x15D8030", VA = "0x15D8030", Slot = "17")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000320")]
		public override AbstractUIQTEControls qteControls
		{
			[Token(Token = "0x6001B98")]
			[Address(RVA = "0x15D8038", Offset = "0x15D8038", VA = "0x15D8038", Slot = "18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000321")]
		public override AbstractUIAlertControls alertControls
		{
			[Token(Token = "0x6001B99")]
			[Address(RVA = "0x15D8040", Offset = "0x15D8040", VA = "0x15D8040", Slot = "19")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B9A")]
		[Address(RVA = "0x15D8048", Offset = "0x15D8048", VA = "0x15D8048", Slot = "20")]
		public override void Awake()
		{
		}

		[Token(Token = "0x6001B9B")]
		[Address(RVA = "0x15D8630", Offset = "0x15D8630", VA = "0x15D8630", Slot = "22")]
		public override void Open()
		{
		}

		[Token(Token = "0x6001B9C")]
		[Address(RVA = "0x15D8070", Offset = "0x15D8070", VA = "0x15D8070")]
		private void FindControls()
		{
		}

		[Token(Token = "0x6001B9D")]
		[Address(RVA = "0x15D86C4", Offset = "0x15D86C4", VA = "0x15D86C4")]
		private void SetupContinueButton(GUIButton continueButton)
		{
		}

		[Token(Token = "0x6001B9E")]
		[Address(RVA = "0x15D87C8", Offset = "0x15D87C8", VA = "0x15D87C8")]
		public UnityDialogueUI()
		{
		}
	}
	[Token(Token = "0x200034E")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0B684", Offset = "0xA0B684")]
	public class UnityTextFieldUI : MonoBehaviour, ITextFieldUI
	{
		[Token(Token = "0x4001072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GUIControl panel;

		[Token(Token = "0x4001073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GUILabel label;

		[Token(Token = "0x4001074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GUITextField textField;

		[Token(Token = "0x4001075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public KeyCode acceptKey;

		[Token(Token = "0x4001076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public KeyCode cancelKey;

		[Token(Token = "0x4001077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AcceptedTextDelegate acceptedText;

		[Token(Token = "0x4001078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GUIControl control;

		[Token(Token = "0x4001079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool ignoreFirstAccept;

		[Token(Token = "0x400107A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool ignoreFirstCancel;

		[Token(Token = "0x6001B9F")]
		[Address(RVA = "0x15DBE00", Offset = "0x15DBE00", VA = "0x15DBE00")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001BA0")]
		[Address(RVA = "0x15DBECC", Offset = "0x15DBECC", VA = "0x15DBECC", Slot = "4")]
		public void StartTextInput(string labelText, string text, int maxLength, AcceptedTextDelegate acceptedText)
		{
		}

		[Token(Token = "0x6001BA1")]
		[Address(RVA = "0x15DC028", Offset = "0x15DC028", VA = "0x15DC028")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001BA2")]
		[Address(RVA = "0x15DC178", Offset = "0x15DC178", VA = "0x15DC178")]
		private bool IsAcceptKey()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BA3")]
		[Address(RVA = "0x15DC43C", Offset = "0x15DC43C", VA = "0x15DC43C")]
		private bool IsKeyCodeReturn(KeyCode keyCode)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BA4")]
		[Address(RVA = "0x15DC434", Offset = "0x15DC434", VA = "0x15DC434", Slot = "5")]
		public void CancelTextInput()
		{
		}

		[Token(Token = "0x6001BA5")]
		[Address(RVA = "0x15DC328", Offset = "0x15DC328", VA = "0x15DC328")]
		private void AcceptTextInput()
		{
		}

		[Token(Token = "0x6001BA6")]
		[Address(RVA = "0x15DC45C", Offset = "0x15DC45C", VA = "0x15DC45C")]
		public void OnAccept(object data)
		{
		}

		[Token(Token = "0x6001BA7")]
		[Address(RVA = "0x15DC460", Offset = "0x15DC460", VA = "0x15DC460")]
		public void OnCancel(object data)
		{
		}

		[Token(Token = "0x6001BA8")]
		[Address(RVA = "0x15DC020", Offset = "0x15DC020", VA = "0x15DC020")]
		private void Show()
		{
		}

		[Token(Token = "0x6001BA9")]
		[Address(RVA = "0x15DC454", Offset = "0x15DC454", VA = "0x15DC454")]
		private void Hide()
		{
		}

		[Token(Token = "0x6001BAA")]
		[Address(RVA = "0x15DC468", Offset = "0x15DC468", VA = "0x15DC468")]
		private void SetControlsActive(bool value)
		{
		}

		[Token(Token = "0x6001BAB")]
		[Address(RVA = "0x15DC4B8", Offset = "0x15DC4B8", VA = "0x15DC4B8")]
		public UnityTextFieldUI()
		{
		}
	}
	[Token(Token = "0x200034F")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0B6BC", Offset = "0xA0B6BC")]
	public class AudioEffect : GUIEffect
	{
		[Token(Token = "0x200066A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DFA8", Offset = "0xA0DFA8")]
		private sealed class <Play>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AudioEffect <>4__this;

			[Token(Token = "0x170005A5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002BBD")]
				[Address(RVA = "0x12F970C", Offset = "0x12F970C", VA = "0x12F970C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005A6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BBF")]
				[Address(RVA = "0x12F9774", Offset = "0x12F9774", VA = "0x12F9774", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BBA")]
			[Address(RVA = "0x12F9604", Offset = "0x12F9604", VA = "0x12F9604")]
			[DebuggerHidden]
			public <Play>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6002BBB")]
			[Address(RVA = "0x12F9638", Offset = "0x12F9638", VA = "0x12F9638", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002BBC")]
			[Address(RVA = "0x12F963C", Offset = "0x12F963C", VA = "0x12F963C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BBE")]
			[Address(RVA = "0x12F9714", Offset = "0x12F9714", VA = "0x12F9714", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400107B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AudioSource myAudio;

		[Token(Token = "0x6001BAC")]
		[Address(RVA = "0x12F953C", Offset = "0x12F953C", VA = "0x12F953C")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001BAD")]
		[Address(RVA = "0x12F9594", Offset = "0x12F9594", VA = "0x12F9594", Slot = "4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA2E434", Offset = "0xA2E434")]
		public override IEnumerator Play()
		{
			return null;
		}

		[Token(Token = "0x6001BAE")]
		[Address(RVA = "0x12F9630", Offset = "0x12F9630", VA = "0x12F9630")]
		public AudioEffect()
		{
		}
	}
	[Token(Token = "0x2000350")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0B6F4", Offset = "0xA0B6F4")]
	public class ContinueButtonFastForward : MonoBehaviour
	{
		[Token(Token = "0x400107C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityDialogueUI dialogueUI;

		[Token(Token = "0x400107D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TypewriterEffect typewriterEffect;

		[Token(Token = "0x6001BAF")]
		[Address(RVA = "0x12F9854", Offset = "0x12F9854", VA = "0x12F9854")]
		public void OnFastForward()
		{
		}

		[Token(Token = "0x6001BB0")]
		[Address(RVA = "0x12F9948", Offset = "0x12F9948", VA = "0x12F9948")]
		public ContinueButtonFastForward()
		{
		}
	}
	[Token(Token = "0x2000351")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0B72C", Offset = "0xA0B72C")]
	public class FadeEffect : GUIEffect
	{
		[Token(Token = "0x200066B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DFB8", Offset = "0xA0DFB8")]
		private sealed class <Play>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FadeEffect <>4__this;

			[Token(Token = "0x4001FC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x4001FC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <endTime>5__3;

			[Token(Token = "0x170005A7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002BC3")]
				[Address(RVA = "0x12F9D40", Offset = "0x12F9D40", VA = "0x12F9D40", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005A8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BC5")]
				[Address(RVA = "0x12F9DA8", Offset = "0x12F9DA8", VA = "0x12F9DA8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BC0")]
			[Address(RVA = "0x12F99CC", Offset = "0x12F99CC", VA = "0x12F99CC")]
			[DebuggerHidden]
			public <Play>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6002BC1")]
			[Address(RVA = "0x12F9A14", Offset = "0x12F9A14", VA = "0x12F9A14", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002BC2")]
			[Address(RVA = "0x12F9A18", Offset = "0x12F9A18", VA = "0x12F9A18", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BC4")]
			[Address(RVA = "0x12F9D48", Offset = "0x12F9D48", VA = "0x12F9D48", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400107E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float fadeInDuration;

		[Token(Token = "0x400107F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float duration;

		[Token(Token = "0x4001080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float fadeOutDuration;

		[Token(Token = "0x4001081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GUIVisibleControl control;

		[Token(Token = "0x6001BB1")]
		[Address(RVA = "0x12F9950", Offset = "0x12F9950", VA = "0x12F9950")]
		public void SetFadeDurations(float fadeInDuration, float duration, float fadeOutDuration)
		{
		}

		[Token(Token = "0x6001BB2")]
		[Address(RVA = "0x12F995C", Offset = "0x12F995C", VA = "0x12F995C", Slot = "4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA2E498", Offset = "0xA2E498")]
		public override IEnumerator Play()
		{
			return null;
		}

		[Token(Token = "0x6001BB3")]
		[Address(RVA = "0x12F99F8", Offset = "0x12F99F8", VA = "0x12F99F8")]
		public FadeEffect()
		{
		}
	}
	[Token(Token = "0x2000352")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0B764", Offset = "0xA0B764")]
	public class FlashEffect : GUIEffect
	{
		[Token(Token = "0x200066C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DFC8", Offset = "0xA0DFC8")]
		private sealed class <Play>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FlashEffect <>4__this;

			[Token(Token = "0x170005A9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002BC9")]
				[Address(RVA = "0x15CE02C", Offset = "0x15CE02C", VA = "0x15CE02C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005AA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BCB")]
				[Address(RVA = "0x15CE094", Offset = "0x15CE094", VA = "0x15CE094", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BC6")]
			[Address(RVA = "0x15CDE9C", Offset = "0x15CDE9C", VA = "0x15CDE9C")]
			[DebuggerHidden]
			public <Play>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6002BC7")]
			[Address(RVA = "0x15CDEE0", Offset = "0x15CDEE0", VA = "0x15CDEE0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002BC8")]
			[Address(RVA = "0x15CDEE4", Offset = "0x15CDEE4", VA = "0x15CDEE4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BCA")]
			[Address(RVA = "0x15CE034", Offset = "0x15CE034", VA = "0x15CE034", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float interval;

		[Token(Token = "0x4001083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GUIControl control;

		[Token(Token = "0x6001BB4")]
		[Address(RVA = "0x15CDE2C", Offset = "0x15CDE2C", VA = "0x15CDE2C", Slot = "4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA2E4FC", Offset = "0xA2E4FC")]
		public override IEnumerator Play()
		{
			return null;
		}

		[Token(Token = "0x6001BB5")]
		[Address(RVA = "0x15CDEC8", Offset = "0x15CDEC8", VA = "0x15CDEC8")]
		public FlashEffect()
		{
		}
	}
	[Token(Token = "0x2000353")]
	public abstract class GUIEffect : MonoBehaviour
	{
		[Token(Token = "0x4001084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GUIEffectTrigger trigger;

		[Token(Token = "0x6001BB6")]
		public abstract IEnumerator Play();

		[Token(Token = "0x6001BB7")]
		[Address(RVA = "0x15D031C", Offset = "0x15D031C", VA = "0x15D031C", Slot = "5")]
		public virtual void Stop()
		{
		}

		[Token(Token = "0x6001BB8")]
		[Address(RVA = "0x15D0324", Offset = "0x15D0324", VA = "0x15D0324")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001BB9")]
		[Address(RVA = "0x15D037C", Offset = "0x15D037C", VA = "0x15D037C")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001BBA")]
		[Address(RVA = "0x15CDED8", Offset = "0x15CDED8", VA = "0x15CDED8")]
		protected GUIEffect()
		{
		}
	}
	[Token(Token = "0x2000354")]
	public enum GUIEffectTrigger
	{
		[Token(Token = "0x4001086")]
		OnEnable
	}
	[Token(Token = "0x2000355")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0B79C", Offset = "0xA0B79C")]
	public class SlideEffect : GUIEffect
	{
		[Token(Token = "0x200066D")]
		public enum SlideDirection
		{
			[Token(Token = "0x4001FCC")]
			FromBottom,
			[Token(Token = "0x4001FCD")]
			FromTop,
			[Token(Token = "0x4001FCE")]
			FromLeft,
			[Token(Token = "0x4001FCF")]
			FromRight
		}

		[Token(Token = "0x200066E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DFD8", Offset = "0xA0DFD8")]
		private sealed class <Play>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SlideEffect <>4__this;

			[Token(Token = "0x4001FD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Rect <rect>5__2;

			[Token(Token = "0x4001FD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__3;

			[Token(Token = "0x4001FD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <endTime>5__4;

			[Token(Token = "0x170005AB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002BCF")]
				[Address(RVA = "0x15D58CC", Offset = "0x15D58CC", VA = "0x15D58CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005AC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BD1")]
				[Address(RVA = "0x15D5934", Offset = "0x15D5934", VA = "0x15D5934", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BCC")]
			[Address(RVA = "0x15D54F8", Offset = "0x15D54F8", VA = "0x15D54F8")]
			[DebuggerHidden]
			public <Play>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6002BCD")]
			[Address(RVA = "0x15D5538", Offset = "0x15D5538", VA = "0x15D5538", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002BCE")]
			[Address(RVA = "0x15D553C", Offset = "0x15D553C", VA = "0x15D553C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BD0")]
			[Address(RVA = "0x15D58D4", Offset = "0x15D58D4", VA = "0x15D58D4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public SlideDirection direction;

		[Token(Token = "0x4001088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float duration;

		[Token(Token = "0x4001089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GUIControl control;

		[Token(Token = "0x6001BBB")]
		[Address(RVA = "0x15D5488", Offset = "0x15D5488", VA = "0x15D5488", Slot = "4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA2E560", Offset = "0xA2E560")]
		public override IEnumerator Play()
		{
			return null;
		}

		[Token(Token = "0x6001BBC")]
		[Address(RVA = "0x15D5524", Offset = "0x15D5524", VA = "0x15D5524")]
		public SlideEffect()
		{
		}
	}
	[Token(Token = "0x2000356")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0B7D4", Offset = "0xA0B7D4")]
	public class TimerEffect : GUIEffect
	{
		[Token(Token = "0x200066F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DFE8", Offset = "0xA0DFE8")]
		private sealed class <Play>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TimerEffect <>4__this;

			[Token(Token = "0x4001FD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x4001FDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <endTime>5__3;

			[Token(Token = "0x170005AD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002BD5")]
				[Address(RVA = "0x15D5D0C", Offset = "0x15D5D0C", VA = "0x15D5D0C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005AE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BD7")]
				[Address(RVA = "0x15D5D74", Offset = "0x15D5D74", VA = "0x15D5D74", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BD2")]
			[Address(RVA = "0x15D5AF4", Offset = "0x15D5AF4", VA = "0x15D5AF4")]
			[DebuggerHidden]
			public <Play>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6002BD3")]
			[Address(RVA = "0x15D5B30", Offset = "0x15D5B30", VA = "0x15D5B30", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002BD4")]
			[Address(RVA = "0x15D5B34", Offset = "0x15D5B34", VA = "0x15D5B34", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BD6")]
			[Address(RVA = "0x15D5D14", Offset = "0x15D5D14", VA = "0x15D5D14", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400108B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float duration;

		[Token(Token = "0x400108C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GUIProgressBar progressBar;

		[Token(Token = "0x1400001A")]
		public event Action TimeoutHandler
		{
			[Token(Token = "0x6001BBD")]
			[Address(RVA = "0x15D593C", Offset = "0x15D593C", VA = "0x15D593C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2E5C4", Offset = "0xA2E5C4")]
			add
			{
			}
			[Token(Token = "0x6001BBE")]
			[Address(RVA = "0x15D59E0", Offset = "0x15D59E0", VA = "0x15D59E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2E5D4", Offset = "0xA2E5D4")]
			remove
			{
			}
		}

		[Token(Token = "0x6001BBF")]
		[Address(RVA = "0x15D5A84", Offset = "0x15D5A84", VA = "0x15D5A84", Slot = "4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA2E5E4", Offset = "0xA2E5E4")]
		public override IEnumerator Play()
		{
			return null;
		}

		[Token(Token = "0x6001BC0")]
		[Address(RVA = "0x15D5B20", Offset = "0x15D5B20", VA = "0x15D5B20")]
		public TimerEffect()
		{
		}
	}
	[Token(Token = "0x2000357")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0B80C", Offset = "0xA0B80C")]
	public class TypewriterEffect : GUIEffect
	{
		[Token(Token = "0x2000670")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DFF8", Offset = "0xA0DFF8")]
		private sealed class <Play>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TypewriterEffect <>4__this;

			[Token(Token = "0x4001FDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private GUILabel <control>5__2;

			[Token(Token = "0x170005AF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002BDB")]
				[Address(RVA = "0x15D6398", Offset = "0x15D6398", VA = "0x15D6398", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005B0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BDD")]
				[Address(RVA = "0x15D6400", Offset = "0x15D6400", VA = "0x15D6400", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BD8")]
			[Address(RVA = "0x15D5E00", Offset = "0x15D5E00", VA = "0x15D5E00")]
			[DebuggerHidden]
			public <Play>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6002BD9")]
			[Address(RVA = "0x15D6178", Offset = "0x15D6178", VA = "0x15D6178", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002BDA")]
			[Address(RVA = "0x15D617C", Offset = "0x15D617C", VA = "0x15D617C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BDC")]
			[Address(RVA = "0x15D63A0", Offset = "0x15D63A0", VA = "0x15D63A0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400108D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float charactersPerSecond;

		[Token(Token = "0x400108E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip audioClip;

		[Token(Token = "0x400108F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1E1B4", Offset = "0xA1E1B4")]
		private bool <IsPlaying>k__BackingField;

		[Token(Token = "0x4001090")]
		private const string RichTextBoldOpen = "<b>";

		[Token(Token = "0x4001091")]
		private const string RichTextBoldClose = "</b>";

		[Token(Token = "0x4001092")]
		private const string RichTextItalicOpen = "<i>";

		[Token(Token = "0x4001093")]
		private const string RichTextItalicClose = "</i>";

		[Token(Token = "0x4001094")]
		private const string RichTextColorOpenPrefix = "<color=";

		[Token(Token = "0x4001095")]
		private const string RichTextColorClose = "</color>";

		[Token(Token = "0x17000322")]
		public bool IsPlaying
		{
			[Token(Token = "0x6001BC1")]
			[Address(RVA = "0x15D5D7C", Offset = "0x15D5D7C", VA = "0x15D5D7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2E648", Offset = "0xA2E648")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001BC2")]
			[Address(RVA = "0x15D5D84", Offset = "0x15D5D84", VA = "0x15D5D84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2E658", Offset = "0xA2E658")]
			private set
			{
			}
		}

		[Token(Token = "0x6001BC3")]
		[Address(RVA = "0x15D5D90", Offset = "0x15D5D90", VA = "0x15D5D90", Slot = "4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA2E668", Offset = "0xA2E668")]
		public override IEnumerator Play()
		{
			return null;
		}

		[Token(Token = "0x6001BC4")]
		[Address(RVA = "0x15D5E2C", Offset = "0x15D5E2C", VA = "0x15D5E2C")]
		private void AdvanceOneCharacter(GUILabel control)
		{
		}

		[Token(Token = "0x6001BC5")]
		[Address(RVA = "0x15D609C", Offset = "0x15D609C", VA = "0x15D609C", Slot = "5")]
		public override void Stop()
		{
		}

		[Token(Token = "0x6001BC6")]
		[Address(RVA = "0x15D6168", Offset = "0x15D6168", VA = "0x15D6168")]
		public TypewriterEffect()
		{
		}
	}
	[Token(Token = "0x2000358")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0B844", Offset = "0xA0B844")]
	public class GUIButton : GUIVisibleControl
	{
		[Token(Token = "0x4001096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public bool clickable;

		[Token(Token = "0x4001097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public GUIImageParams disabled;

		[Token(Token = "0x4001098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public GUIImageParams normal;

		[Token(Token = "0x4001099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public GUIImageParams hover;

		[Token(Token = "0x400109A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public GUIImageParams pressed;

		[Token(Token = "0x400109B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public AudioClip hoverSound;

		[Token(Token = "0x400109C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public AudioClip clickSound;

		[Token(Token = "0x400109D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public InputTrigger trigger;

		[Token(Token = "0x400109E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public string message;

		[Token(Token = "0x400109F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public string parameter;

		[Token(Token = "0x40010A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public Transform target;

		[Token(Token = "0x40010A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public object data;

		[Token(Token = "0x40010A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private bool isHovered;

		[Token(Token = "0x17000323")]
		protected override GUIStyle DefaultGUIStyle
		{
			[Token(Token = "0x6001BC7")]
			[Address(RVA = "0x15CE09C", Offset = "0x15CE09C", VA = "0x15CE09C", Slot = "15")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BC8")]
		[Address(RVA = "0x15CE10C", Offset = "0x15CE10C", VA = "0x15CE10C", Slot = "6")]
		public override void DrawSelf(Vector2 relativeMousePosition)
		{
		}

		[Token(Token = "0x6001BC9")]
		[Address(RVA = "0x15CE11C", Offset = "0x15CE11C", VA = "0x15CE11C")]
		private void DrawClickable(Vector2 relativeMousePosition)
		{
		}

		[Token(Token = "0x6001BCA")]
		[Address(RVA = "0x15CE268", Offset = "0x15CE268", VA = "0x15CE268")]
		private void DrawUnclickable()
		{
		}

		[Token(Token = "0x6001BCB")]
		[Address(RVA = "0x15CE634", Offset = "0x15CE634", VA = "0x15CE634", Slot = "8")]
		public override void Update()
		{
		}

		[Token(Token = "0x6001BCC")]
		[Address(RVA = "0x15CE4DC", Offset = "0x15CE4DC", VA = "0x15CE4DC")]
		public void Click()
		{
		}

		[Token(Token = "0x6001BCD")]
		[Address(RVA = "0x15CE720", Offset = "0x15CE720", VA = "0x15CE720")]
		public GUIButton()
		{
		}
	}
	[Token(Token = "0x2000359")]
	public class GUIControl : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000671")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0E008", Offset = "0xA0E008")]
		private sealed class <>c
		{
			[Token(Token = "0x4001FDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001FE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<GUIControl> <>9__53_0;

			[Token(Token = "0x6002BDF")]
			[Address(RVA = "0x15D02E8", Offset = "0x15D02E8", VA = "0x15D02E8")]
			public <>c()
			{
			}

			[Token(Token = "0x6002BE0")]
			[Address(RVA = "0x15D02F0", Offset = "0x15D02F0", VA = "0x15D02F0")]
			internal int <SortChildren>b__53_0(GUIControl x, GUIControl y)
			{
				return default(int);
			}
		}

		[Token(Token = "0x40010A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int depth;

		[Token(Token = "0x40010A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool depthSortChildren;

		[Token(Token = "0x40010A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScaledRect scaledRect;

		[Token(Token = "0x40010A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AutoSize autoSize;

		[Token(Token = "0x40010A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Fit fit;

		[Token(Token = "0x40010A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Navigation navigation;

		[Token(Token = "0x40010A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1E1C4", Offset = "0xA1E1C4")]
		private Rect <rect>k__BackingField;

		[Token(Token = "0x40010AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool visible;

		[Token(Token = "0x40010AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool clipChildren;

		[Token(Token = "0x40010AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1E1D4", Offset = "0xA1E1D4")]
		private Vector2 <Offset>k__BackingField;

		[Token(Token = "0x40010AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1E1E4", Offset = "0xA1E1E4")]
		private Vector2 <dRect>k__BackingField;

		[Token(Token = "0x40010AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private string fullName;

		[Token(Token = "0x40010AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<GUIControl> children;

		[Token(Token = "0x40010B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool needToUpdateLayout;

		[Token(Token = "0x40010B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Vector2 windowSize;

		[Token(Token = "0x40010B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool navigationSelectButtonClicked;

		[Token(Token = "0x17000324")]
		public Rect rect
		{
			[Token(Token = "0x6001BCE")]
			[Address(RVA = "0x15CE7F0", Offset = "0x15CE7F0", VA = "0x15CE7F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2E6CC", Offset = "0xA2E6CC")]
			get
			{
				return default(Rect);
			}
			[Token(Token = "0x6001BCF")]
			[Address(RVA = "0x15CE7FC", Offset = "0x15CE7FC", VA = "0x15CE7FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2E6DC", Offset = "0xA2E6DC")]
			set
			{
			}
		}

		[Token(Token = "0x17000325")]
		public Vector2 Offset
		{
			[Token(Token = "0x6001BD0")]
			[Address(RVA = "0x15CE808", Offset = "0x15CE808", VA = "0x15CE808")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2E6EC", Offset = "0xA2E6EC")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6001BD1")]
			[Address(RVA = "0x15CE810", Offset = "0x15CE810", VA = "0x15CE810")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2E6FC", Offset = "0xA2E6FC")]
			set
			{
			}
		}

		[Token(Token = "0x17000326")]
		protected List<GUIControl> Children
		{
			[Token(Token = "0x6001BD2")]
			[Address(RVA = "0x15CE818", Offset = "0x15CE818", VA = "0x15CE818")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000327")]
		public bool NeedToUpdateLayout
		{
			[Token(Token = "0x6001BD3")]
			[Address(RVA = "0x15CE820", Offset = "0x15CE820", VA = "0x15CE820")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001BD4")]
			[Address(RVA = "0x15CE828", Offset = "0x15CE828", VA = "0x15CE828")]
			set
			{
			}
		}

		[Token(Token = "0x17000328")]
		protected Vector2 WindowSize
		{
			[Token(Token = "0x6001BD5")]
			[Address(RVA = "0x15CE834", Offset = "0x15CE834", VA = "0x15CE834")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6001BD6")]
			[Address(RVA = "0x15CE83C", Offset = "0x15CE83C", VA = "0x15CE83C")]
			set
			{
			}
		}

		[Token(Token = "0x17000329")]
		public bool IsNavigationEnabled
		{
			[Token(Token = "0x6001BD7")]
			[Address(RVA = "0x15CE844", Offset = "0x15CE844", VA = "0x15CE844")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700032A")]
		public string FullName
		{
			[Token(Token = "0x6001BD8")]
			[Address(RVA = "0x15CE864", Offset = "0x15CE864", VA = "0x15CE864")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700032B")]
		public Vector2 dRect
		{
			[Token(Token = "0x6001BD9")]
			[Address(RVA = "0x15CE900", Offset = "0x15CE900", VA = "0x15CE900")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2E70C", Offset = "0xA2E70C")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6001BDA")]
			[Address(RVA = "0x15CE908", Offset = "0x15CE908", VA = "0x15CE908")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2E71C", Offset = "0xA2E71C")]
			set
			{
			}
		}

		[Token(Token = "0x6001BDB")]
		[Address(RVA = "0x15CE910", Offset = "0x15CE910", VA = "0x15CE910", Slot = "4")]
		public virtual void Awake()
		{
		}

		[Token(Token = "0x6001BDC")]
		[Address(RVA = "0x15CEA48", Offset = "0x15CEA48", VA = "0x15CEA48", Slot = "5")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001BDD")]
		[Address(RVA = "0x15CEAF8", Offset = "0x15CEAF8", VA = "0x15CEAF8")]
		public void Draw(Vector2 relativeMousePosition)
		{
		}

		[Token(Token = "0x6001BDE")]
		[Address(RVA = "0x15CEB94", Offset = "0x15CEB94", VA = "0x15CEB94", Slot = "6")]
		public virtual void DrawSelf(Vector2 relativeMousePosition)
		{
		}

		[Token(Token = "0x6001BDF")]
		[Address(RVA = "0x15CEB98", Offset = "0x15CEB98", VA = "0x15CEB98", Slot = "7")]
		public virtual void DrawChildren(Vector2 relativeMousePosition)
		{
		}

		[Token(Token = "0x6001BE0")]
		[Address(RVA = "0x15CE684", Offset = "0x15CE684", VA = "0x15CE684", Slot = "8")]
		public virtual void Update()
		{
		}

		[Token(Token = "0x6001BE1")]
		[Address(RVA = "0x15CF244", Offset = "0x15CF244", VA = "0x15CF244", Slot = "9")]
		public virtual void Refresh(Vector2 windowSize)
		{
		}

		[Token(Token = "0x6001BE2")]
		[Address(RVA = "0x15CF254", Offset = "0x15CF254", VA = "0x15CF254", Slot = "10")]
		public virtual void Refresh()
		{
		}

		[Token(Token = "0x6001BE3")]
		[Address(RVA = "0x15CF260", Offset = "0x15CF260", VA = "0x15CF260", Slot = "11")]
		public virtual void UpdateLayout()
		{
		}

		[Token(Token = "0x6001BE4")]
		[Address(RVA = "0x15CF4AC", Offset = "0x15CF4AC", VA = "0x15CF4AC", Slot = "12")]
		public virtual void UpdateLayoutSelf()
		{
		}

		[Token(Token = "0x6001BE5")]
		[Address(RVA = "0x15CF750", Offset = "0x15CF750", VA = "0x15CF750", Slot = "13")]
		public virtual void AutoSizeSelf()
		{
		}

		[Token(Token = "0x6001BE6")]
		[Address(RVA = "0x15CF754", Offset = "0x15CF754", VA = "0x15CF754", Slot = "14")]
		protected virtual void FitSelf()
		{
		}

		[Token(Token = "0x6001BE7")]
		[Address(RVA = "0x15CF2B4", Offset = "0x15CF2B4", VA = "0x15CF2B4")]
		private void UpdateLayoutChildren()
		{
		}

		[Token(Token = "0x6001BE8")]
		[Address(RVA = "0x15CFF2C", Offset = "0x15CFF2C", VA = "0x15CFF2C")]
		private void UpdateLayoutChild(GUIControl child, Vector2 childWindowSize)
		{
		}

		[Token(Token = "0x6001BE9")]
		[Address(RVA = "0x15CF40C", Offset = "0x15CF40C", VA = "0x15CF40C")]
		private void FitChildren()
		{
		}

		[Token(Token = "0x6001BEA")]
		[Address(RVA = "0x15CFB54", Offset = "0x15CFB54", VA = "0x15CFB54")]
		private void FindChildren()
		{
		}

		[Token(Token = "0x6001BEB")]
		[Address(RVA = "0x15CFE34", Offset = "0x15CFE34", VA = "0x15CFE34")]
		private void SortChildren()
		{
		}

		[Token(Token = "0x6001BEC")]
		[Address(RVA = "0x15D0044", Offset = "0x15D0044", VA = "0x15D0044")]
		public GUIControl()
		{
		}
	}
	[Token(Token = "0x200035A")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0B87C", Offset = "0xA0B87C")]
	public class GUIImage : GUIVisibleControl
	{
		[Token(Token = "0x40010B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public GUIImageParams image;

		[Token(Token = "0x40010B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public ImageAnimation imageAnimation;

		[Token(Token = "0x6001BED")]
		[Address(RVA = "0x15D0388", Offset = "0x15D0388", VA = "0x15D0388", Slot = "6")]
		public override void DrawSelf(Vector2 relativeMousePosition)
		{
		}

		[Token(Token = "0x6001BEE")]
		[Address(RVA = "0x15D0B38", Offset = "0x15D0B38", VA = "0x15D0B38", Slot = "10")]
		public override void Refresh()
		{
		}

		[Token(Token = "0x6001BEF")]
		[Address(RVA = "0x15D0D1C", Offset = "0x15D0D1C", VA = "0x15D0D1C")]
		public GUIImage()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200035B")]
	public class GUIImageParams
	{
		[Token(Token = "0x40010B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Rect pixelRect;

		[Token(Token = "0x40010B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Texture2D texture;

		[Token(Token = "0x40010B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool useTexCoords;

		[Token(Token = "0x40010B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Rect texCoords;

		[Token(Token = "0x40010B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public ScaleMode scaleMode;

		[Token(Token = "0x40010BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool alphaBlend;

		[Token(Token = "0x40010BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Color color;

		[Token(Token = "0x40010BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float aspect;

		[Token(Token = "0x6001BF0")]
		[Address(RVA = "0x15CE378", Offset = "0x15CE378", VA = "0x15CE378")]
		public void Draw(Rect rect)
		{
		}

		[Token(Token = "0x6001BF1")]
		[Address(RVA = "0x15D07CC", Offset = "0x15D07CC", VA = "0x15D07CC")]
		public void Draw(Rect rect, bool hasAlpha, float alpha)
		{
		}

		[Token(Token = "0x6001BF2")]
		[Address(RVA = "0x15D0DB4", Offset = "0x15D0DB4", VA = "0x15D0DB4")]
		public GUIImageParams()
		{
		}
	}
	[Token(Token = "0x200035C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0B8B4", Offset = "0xA0B8B4")]
	public class GUILabel : GUIVisibleControl
	{
		[Token(Token = "0x40010BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public TextStyle textStyle;

		[Token(Token = "0x40010BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public Color textStyleColor;

		[Token(Token = "0x40010BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public Color imageColor;

		[Token(Token = "0x40010C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public Texture2D image;

		[Token(Token = "0x40010C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public ImageAnimation imageAnimation;

		[Token(Token = "0x40010C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private List<string> closureTags;

		[Token(Token = "0x40010C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private bool useSubstring;

		[Token(Token = "0x40010C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private int substringLength;

		[Token(Token = "0x40010C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private int substringLengthLastGetRichTextClosedString;

		[Token(Token = "0x40010C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private string richTextClosedString;

		[Token(Token = "0x1700032C")]
		public int currentLength
		{
			[Token(Token = "0x6001BF3")]
			[Address(RVA = "0x15D0E4C", Offset = "0x15D0E4C", VA = "0x15D0E4C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001BF4")]
			[Address(RVA = "0x15D0E54", Offset = "0x15D0E54", VA = "0x15D0E54")]
			set
			{
			}
		}

		[Token(Token = "0x6001BF5")]
		[Address(RVA = "0x15D0EAC", Offset = "0x15D0EAC", VA = "0x15D0EAC", Slot = "4")]
		public override void Awake()
		{
		}

		[Token(Token = "0x6001BF6")]
		[Address(RVA = "0x15D0F00", Offset = "0x15D0F00", VA = "0x15D0F00")]
		public void ResetClosureTags()
		{
		}

		[Token(Token = "0x6001BF7")]
		[Address(RVA = "0x15D0F58", Offset = "0x15D0F58", VA = "0x15D0F58")]
		public void PushClosureTag(string tag)
		{
		}

		[Token(Token = "0x6001BF8")]
		[Address(RVA = "0x15D0FC0", Offset = "0x15D0FC0", VA = "0x15D0FC0")]
		public void PopClosureTag()
		{
		}

		[Token(Token = "0x6001BF9")]
		[Address(RVA = "0x15D1030", Offset = "0x15D1030", VA = "0x15D1030", Slot = "17")]
		public override void SetFormattedText(FormattedText formattedText)
		{
		}

		[Token(Token = "0x6001BFA")]
		[Address(RVA = "0x15D1090", Offset = "0x15D1090", VA = "0x15D1090", Slot = "6")]
		public override void DrawSelf(Vector2 relativeMousePosition)
		{
		}

		[Token(Token = "0x6001BFB")]
		[Address(RVA = "0x15D1368", Offset = "0x15D1368", VA = "0x15D1368")]
		private void DrawSubstring()
		{
		}

		[Token(Token = "0x6001BFC")]
		[Address(RVA = "0x15D184C", Offset = "0x15D184C", VA = "0x15D184C")]
		private bool IsLeftAligned(TextAnchor textAnchor)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BFD")]
		[Address(RVA = "0x15D1D5C", Offset = "0x15D1D5C", VA = "0x15D1D5C")]
		private bool IsCenterAligned(TextAnchor textAnchor)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BFE")]
		[Address(RVA = "0x15D1D84", Offset = "0x15D1D84", VA = "0x15D1D84")]
		private TextAnchor GetLeftAlignedVersion(TextAnchor textAnchor)
		{
			return default(TextAnchor);
		}

		[Token(Token = "0x6001BFF")]
		[Address(RVA = "0x15D1874", Offset = "0x15D1874", VA = "0x15D1874")]
		private void DrawSubstringLeftAligned()
		{
		}

		[Token(Token = "0x6001C00")]
		[Address(RVA = "0x15D19EC", Offset = "0x15D19EC", VA = "0x15D19EC")]
		private void DrawSubstringNotLeftAligned()
		{
		}

		[Token(Token = "0x6001C01")]
		[Address(RVA = "0x15D1DA8", Offset = "0x15D1DA8", VA = "0x15D1DA8")]
		private string GetNextLine(string text, int start)
		{
			return null;
		}

		[Token(Token = "0x6001C02")]
		[Address(RVA = "0x15D1FEC", Offset = "0x15D1FEC", VA = "0x15D1FEC")]
		private string GetRichTextClosedText(string s)
		{
			return null;
		}

		[Token(Token = "0x6001C03")]
		[Address(RVA = "0x15D1210", Offset = "0x15D1210", VA = "0x15D1210")]
		private void DrawImage()
		{
		}

		[Token(Token = "0x6001C04")]
		[Address(RVA = "0x15D2114", Offset = "0x15D2114", VA = "0x15D2114", Slot = "10")]
		public override void Refresh()
		{
		}

		[Token(Token = "0x6001C05")]
		[Address(RVA = "0x15D2148", Offset = "0x15D2148", VA = "0x15D2148")]
		public GUILabel()
		{
		}
	}
	[Token(Token = "0x200035D")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0B8EC", Offset = "0xA0B8EC")]
	public class GUIProgressBar : GUIVisibleControl
	{
		[Token(Token = "0x2000672")]
		public enum Origin
		{
			[Token(Token = "0x4001FE2")]
			Top,
			[Token(Token = "0x4001FE3")]
			Bottom,
			[Token(Token = "0x4001FE4")]
			Left,
			[Token(Token = "0x4001FE5")]
			Right,
			[Token(Token = "0x4001FE6")]
			HorizontalCenter,
			[Token(Token = "0x4001FE7")]
			VerticalCenter
		}

		[Token(Token = "0x40010C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public Origin origin;

		[Token(Token = "0x40010C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public Texture2D emptyImage;

		[Token(Token = "0x40010C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public Texture2D fullImage;

		[Token(Token = "0x40010CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public float progress;

		[Token(Token = "0x6001C06")]
		[Address(RVA = "0x15D2224", Offset = "0x15D2224", VA = "0x15D2224", Slot = "6")]
		public override void DrawSelf(Vector2 relativeMousePosition)
		{
		}

		[Token(Token = "0x6001C07")]
		[Address(RVA = "0x15D27A4", Offset = "0x15D27A4", VA = "0x15D27A4")]
		public GUIProgressBar()
		{
		}
	}
	[Token(Token = "0x200035E")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0B924", Offset = "0xA0B924")]
	public class GUIRoot : GUIControl
	{
		[Token(Token = "0x40010CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public GUISkin guiSkin;

		[Token(Token = "0x6001C08")]
		[Address(RVA = "0x15D27A8", Offset = "0x15D27A8", VA = "0x15D27A8")]
		public void OnGUI()
		{
		}

		[Token(Token = "0x6001C09")]
		[Address(RVA = "0x15D28DC", Offset = "0x15D28DC", VA = "0x15D28DC")]
		public void ManualRefresh()
		{
		}

		[Token(Token = "0x6001C0A")]
		[Address(RVA = "0x15D282C", Offset = "0x15D282C", VA = "0x15D282C")]
		private void UseGUISkin()
		{
		}

		[Token(Token = "0x6001C0B")]
		[Address(RVA = "0x15D2940", Offset = "0x15D2940", VA = "0x15D2940")]
		public GUIRoot()
		{
		}
	}
	[Token(Token = "0x200035F")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0B970", Offset = "0xA0B970")]
	public class GUIScrollView : GUIControl
	{
		[Token(Token = "0x40010CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
		public bool showVerticalScrollbar;

		[Token(Token = "0x40010CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x86")]
		public bool showHorizontalScrollbar;

		[Token(Token = "0x40010CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public int padding;

		[Token(Token = "0x40010D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1E214", Offset = "0xA1E214")]
		private float <contentWidth>k__BackingField;

		[Token(Token = "0x40010D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1E224", Offset = "0xA1E224")]
		private float <contentHeight>k__BackingField;

		[Token(Token = "0x40010D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector2 scrollViewVector;

		[Token(Token = "0x1700032D")]
		public float contentWidth
		{
			[Token(Token = "0x6001C10")]
			[Address(RVA = "0x15D2BD4", Offset = "0x15D2BD4", VA = "0x15D2BD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2E76C", Offset = "0xA2E76C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C11")]
			[Address(RVA = "0x15D2BDC", Offset = "0x15D2BDC", VA = "0x15D2BDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2E77C", Offset = "0xA2E77C")]
			set
			{
			}
		}

		[Token(Token = "0x1700032E")]
		public float contentHeight
		{
			[Token(Token = "0x6001C12")]
			[Address(RVA = "0x15D2BE4", Offset = "0x15D2BE4", VA = "0x15D2BE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2E78C", Offset = "0xA2E78C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C13")]
			[Address(RVA = "0x15D2BEC", Offset = "0x15D2BEC", VA = "0x15D2BEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2E79C", Offset = "0xA2E79C")]
			set
			{
			}
		}

		[Token(Token = "0x1400001B")]
		public event Action MeasureContentHandler
		{
			[Token(Token = "0x6001C0C")]
			[Address(RVA = "0x15D2944", Offset = "0x15D2944", VA = "0x15D2944")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2E72C", Offset = "0xA2E72C")]
			add
			{
			}
			[Token(Token = "0x6001C0D")]
			[Address(RVA = "0x15D29E8", Offset = "0x15D29E8", VA = "0x15D29E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2E73C", Offset = "0xA2E73C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001C")]
		public event Action DrawContentHandler
		{
			[Token(Token = "0x6001C0E")]
			[Address(RVA = "0x15D2A8C", Offset = "0x15D2A8C", VA = "0x15D2A8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2E74C", Offset = "0xA2E74C")]
			add
			{
			}
			[Token(Token = "0x6001C0F")]
			[Address(RVA = "0x15D2B30", Offset = "0x15D2B30", VA = "0x15D2B30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2E75C", Offset = "0xA2E75C")]
			remove
			{
			}
		}

		[Token(Token = "0x6001C14")]
		[Address(RVA = "0x15D2BF4", Offset = "0x15D2BF4", VA = "0x15D2BF4")]
		public void ResetScrollPosition()
		{
		}

		[Token(Token = "0x6001C15")]
		[Address(RVA = "0x15D2C60", Offset = "0x15D2C60", VA = "0x15D2C60", Slot = "7")]
		public override void DrawChildren(Vector2 relativeMousePosition)
		{
		}

		[Token(Token = "0x6001C16")]
		[Address(RVA = "0x15D2EB4", Offset = "0x15D2EB4", VA = "0x15D2EB4")]
		private Rect GetScrollContentRect()
		{
			return default(Rect);
		}

		[Token(Token = "0x6001C17")]
		[Address(RVA = "0x15D3054", Offset = "0x15D3054", VA = "0x15D3054")]
		private void MeasureChildrenAsContent()
		{
		}

		[Token(Token = "0x6001C18")]
		[Address(RVA = "0x15D31B8", Offset = "0x15D31B8", VA = "0x15D31B8")]
		private float GetChildXMax(GUIControl child)
		{
			return default(float);
		}

		[Token(Token = "0x6001C19")]
		[Address(RVA = "0x15D31F0", Offset = "0x15D31F0", VA = "0x15D31F0")]
		private float GetChildYMax(GUIControl child)
		{
			return default(float);
		}

		[Token(Token = "0x6001C1A")]
		[Address(RVA = "0x15D331C", Offset = "0x15D331C", VA = "0x15D331C")]
		public GUIScrollView()
		{
		}
	}
	[Token(Token = "0x2000360")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0B9A8", Offset = "0xA0B9A8")]
	public class GUITextField : GUIVisibleControl
	{
		[Token(Token = "0x40010D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public int maxLength;

		[Token(Token = "0x40010D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private bool takeFocus;

		[Token(Token = "0x1700032F")]
		protected override GUIStyle DefaultGUIStyle
		{
			[Token(Token = "0x6001C1B")]
			[Address(RVA = "0x15D339C", Offset = "0x15D339C", VA = "0x15D339C", Slot = "15")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C1C")]
		[Address(RVA = "0x15D340C", Offset = "0x15D340C", VA = "0x15D340C")]
		public void TakeFocus()
		{
		}

		[Token(Token = "0x6001C1D")]
		[Address(RVA = "0x15D3418", Offset = "0x15D3418", VA = "0x15D3418", Slot = "6")]
		public override void DrawSelf(Vector2 relativeMousePosition)
		{
		}

		[Token(Token = "0x6001C1E")]
		[Address(RVA = "0x15D3600", Offset = "0x15D3600", VA = "0x15D3600")]
		public GUITextField()
		{
		}
	}
	[Token(Token = "0x2000361")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0B9E0", Offset = "0xA0B9E0")]
	public class GUIVisibleControl : GUIControl
	{
		[Token(Token = "0x40010D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public LocalizedTextTable localizedText;

		[Token(Token = "0x40010D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public string text;

		[Token(Token = "0x40010D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public string guiStyleName;

		[Token(Token = "0x40010D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private FormattedText formattingToApply;

		[Token(Token = "0x40010DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool isFormattingApplied;

		[Token(Token = "0x40010DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private GUIStyle guiStyle;

		[Token(Token = "0x40010DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Color originalGUIColor;

		[Token(Token = "0x40010DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float alpha;

		[Token(Token = "0x40010DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private string originalTextValue;

		[Token(Token = "0x17000330")]
		public float Alpha
		{
			[Token(Token = "0x6001C1F")]
			[Address(RVA = "0x15D3604", Offset = "0x15D3604", VA = "0x15D3604")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C20")]
			[Address(RVA = "0x15D360C", Offset = "0x15D360C", VA = "0x15D360C")]
			set
			{
			}
		}

		[Token(Token = "0x17000331")]
		public bool HasAlpha
		{
			[Token(Token = "0x6001C21")]
			[Address(RVA = "0x15D07A8", Offset = "0x15D07A8", VA = "0x15D07A8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000332")]
		protected virtual GUIStyle DefaultGUIStyle
		{
			[Token(Token = "0x6001C22")]
			[Address(RVA = "0x15D3614", Offset = "0x15D3614", VA = "0x15D3614", Slot = "15")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000333")]
		protected GUIStyle GuiStyle
		{
			[Token(Token = "0x6001C23")]
			[Address(RVA = "0x15D3684", Offset = "0x15D3684", VA = "0x15D3684")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C24")]
			[Address(RVA = "0x15D368C", Offset = "0x15D368C", VA = "0x15D368C")]
			set
			{
			}
		}

		[Token(Token = "0x6001C25")]
		[Address(RVA = "0x15D0ED8", Offset = "0x15D0ED8", VA = "0x15D0ED8", Slot = "4")]
		public override void Awake()
		{
		}

		[Token(Token = "0x6001C26")]
		[Address(RVA = "0x15D3694", Offset = "0x15D3694", VA = "0x15D3694", Slot = "16")]
		public virtual void Start()
		{
		}

		[Token(Token = "0x6001C27")]
		[Address(RVA = "0x15D3720", Offset = "0x15D3720", VA = "0x15D3720")]
		public void UseLocalizedText(LocalizedTextTable localizedText)
		{
		}

		[Token(Token = "0x6001C28")]
		[Address(RVA = "0x15D1160", Offset = "0x15D1160", VA = "0x15D1160")]
		public void ApplyAlphaToGUIColor()
		{
		}

		[Token(Token = "0x6001C29")]
		[Address(RVA = "0x15D178C", Offset = "0x15D178C", VA = "0x15D178C")]
		public void RestoreGUIColor()
		{
		}

		[Token(Token = "0x6001C2A")]
		[Address(RVA = "0x15D1060", Offset = "0x15D1060", VA = "0x15D1060", Slot = "17")]
		public virtual void SetFormattedText(FormattedText formattedText)
		{
		}

		[Token(Token = "0x6001C2B")]
		[Address(RVA = "0x15D3808", Offset = "0x15D3808", VA = "0x15D3808")]
		public void SetUnformattedText(string text)
		{
		}

		[Token(Token = "0x6001C2C")]
		[Address(RVA = "0x15D3820", Offset = "0x15D3820", VA = "0x15D3820", Slot = "12")]
		public override void UpdateLayoutSelf()
		{
		}

		[Token(Token = "0x6001C2D")]
		[Address(RVA = "0x15D35B4", Offset = "0x15D35B4", VA = "0x15D35B4")]
		protected void SetGUIStyle()
		{
		}

		[Token(Token = "0x6001C2E")]
		[Address(RVA = "0x15D384C", Offset = "0x15D384C", VA = "0x15D384C")]
		protected void ApplyFormatting()
		{
		}

		[Token(Token = "0x6001C2F")]
		[Address(RVA = "0x15D3A88", Offset = "0x15D3A88", VA = "0x15D3A88", Slot = "13")]
		public override void AutoSizeSelf()
		{
		}

		[Token(Token = "0x6001C30")]
		[Address(RVA = "0x15D3E90", Offset = "0x15D3E90", VA = "0x15D3E90")]
		private float GetAutoSizeX(float width)
		{
			return default(float);
		}

		[Token(Token = "0x6001C31")]
		[Address(RVA = "0x15D3F84", Offset = "0x15D3F84", VA = "0x15D3F84")]
		private float GetAutoSizeY(float height)
		{
			return default(float);
		}

		[Token(Token = "0x6001C32")]
		[Address(RVA = "0x15CE384", Offset = "0x15CE384", VA = "0x15CE384")]
		public void PlaySound(AudioClip audioClip)
		{
		}

		[Token(Token = "0x6001C33")]
		[Address(RVA = "0x15CE77C", Offset = "0x15CE77C", VA = "0x15CE77C")]
		public GUIVisibleControl()
		{
		}
	}
	[Token(Token = "0x2000362")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0BA18", Offset = "0xA0BA18")]
	public class GUIWindow : GUIVisibleControl
	{
		[Token(Token = "0x40010DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Vector2 currentChildMousePosition;

		[Token(Token = "0x17000334")]
		protected override GUIStyle DefaultGUIStyle
		{
			[Token(Token = "0x6001C34")]
			[Address(RVA = "0x15D4070", Offset = "0x15D4070", VA = "0x15D4070", Slot = "15")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C35")]
		[Address(RVA = "0x15D40E0", Offset = "0x15D40E0", VA = "0x15D40E0", Slot = "6")]
		public override void DrawSelf(Vector2 relativeMousePosition)
		{
		}

		[Token(Token = "0x6001C36")]
		[Address(RVA = "0x15D424C", Offset = "0x15D424C", VA = "0x15D424C", Slot = "7")]
		public override void DrawChildren(Vector2 relativeMousePosition)
		{
		}

		[Token(Token = "0x6001C37")]
		[Address(RVA = "0x15D4250", Offset = "0x15D4250", VA = "0x15D4250")]
		private void WindowFunction(int windowID)
		{
		}

		[Token(Token = "0x6001C38")]
		[Address(RVA = "0x15D439C", Offset = "0x15D439C", VA = "0x15D439C")]
		public GUIWindow()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000363")]
	public class ScaledRect
	{
		[Token(Token = "0x40010E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly ScaledRect empty;

		[Token(Token = "0x40010E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly ScaledRect wholeScreen;

		[Token(Token = "0x40010E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ScaledRectAlignment origin;

		[Token(Token = "0x40010E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ScaledRectAlignment alignment;

		[Token(Token = "0x40010E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ScaledValue x;

		[Token(Token = "0x40010E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScaledValue y;

		[Token(Token = "0x40010E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ScaledValue width;

		[Token(Token = "0x40010E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ScaledValue height;

		[Token(Token = "0x40010E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float minPixelWidth;

		[Token(Token = "0x40010E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float minPixelHeight;

		[Token(Token = "0x6001C39")]
		[Address(RVA = "0x15D4C70", Offset = "0x15D4C70", VA = "0x15D4C70")]
		public ScaledRect(ScaledRectAlignment origin, ScaledRectAlignment alignment, ScaledValue x, ScaledValue y, ScaledValue width, ScaledValue height, float minPixelWidth = 0f, float minPixelHeight = 0f)
		{
		}

		[Token(Token = "0x6001C3A")]
		[Address(RVA = "0x15D0138", Offset = "0x15D0138", VA = "0x15D0138")]
		public ScaledRect(ScaledRect source)
		{
		}

		[Token(Token = "0x6001C3B")]
		[Address(RVA = "0x15D4D20", Offset = "0x15D4D20", VA = "0x15D4D20")]
		public ScaledRect()
		{
		}

		[Token(Token = "0x6001C3C")]
		[Address(RVA = "0x15D4D28", Offset = "0x15D4D28", VA = "0x15D4D28")]
		public static ScaledRect FromOrigin(ScaledRectAlignment origin, ScaledValue width, ScaledValue height, float minPixelWidth = 0f, float minPixelHeight = 0f)
		{
			return null;
		}

		[Token(Token = "0x6001C3D")]
		[Address(RVA = "0x15CE9A0", Offset = "0x15CE9A0", VA = "0x15CE9A0")]
		public Rect GetPixelRect()
		{
			return default(Rect);
		}

		[Token(Token = "0x6001C3E")]
		[Address(RVA = "0x15CF6CC", Offset = "0x15CF6CC", VA = "0x15CF6CC")]
		public Rect GetPixelRect(Vector2 windowSize)
		{
			return default(Rect);
		}

		[Token(Token = "0x6001C3F")]
		[Address(RVA = "0x15D4DEC", Offset = "0x15D4DEC", VA = "0x15D4DEC")]
		public Rect GetPixelRect(Vector2 windowSize, Vector2 defaultSize)
		{
			return default(Rect);
		}

		[Token(Token = "0x6001C40")]
		[Address(RVA = "0x15D4F68", Offset = "0x15D4F68", VA = "0x15D4F68")]
		private Vector2 GetPixelOrigin(Vector2 windowSize)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001C41")]
		[Address(RVA = "0x15D50B8", Offset = "0x15D50B8", VA = "0x15D50B8")]
		private Vector2 GetAlignmentFactor()
		{
			return default(Vector2);
		}
	}
	[Token(Token = "0x2000364")]
	public enum ScaledRectAlignment
	{
		[Token(Token = "0x40010EB")]
		TopLeft,
		[Token(Token = "0x40010EC")]
		TopCenter,
		[Token(Token = "0x40010ED")]
		TopRight,
		[Token(Token = "0x40010EE")]
		MiddleLeft,
		[Token(Token = "0x40010EF")]
		MiddleCenter,
		[Token(Token = "0x40010F0")]
		MiddleRight,
		[Token(Token = "0x40010F1")]
		BottomLeft,
		[Token(Token = "0x40010F2")]
		BottomCenter,
		[Token(Token = "0x40010F3")]
		BottomRight
	}
	[Serializable]
	[Token(Token = "0x2000365")]
	public class ScaledValue
	{
		[Token(Token = "0x40010F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly ScaledValue zero;

		[Token(Token = "0x40010F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly ScaledValue max;

		[Token(Token = "0x40010F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ValueScale scale;

		[Token(Token = "0x40010F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float value;

		[Token(Token = "0x6001C43")]
		[Address(RVA = "0x15D52CC", Offset = "0x15D52CC", VA = "0x15D52CC")]
		public ScaledValue(ValueScale scale, float value)
		{
		}

		[Token(Token = "0x6001C44")]
		[Address(RVA = "0x15D4CE4", Offset = "0x15D4CE4", VA = "0x15D4CE4")]
		public ScaledValue(ScaledValue source)
		{
		}

		[Token(Token = "0x6001C45")]
		[Address(RVA = "0x15D5308", Offset = "0x15D5308", VA = "0x15D5308")]
		public ScaledValue()
		{
		}

		[Token(Token = "0x6001C46")]
		[Address(RVA = "0x15D3E78", Offset = "0x15D3E78", VA = "0x15D3E78")]
		public float GetPixelValue(float windowSize)
		{
			return default(float);
		}

		[Token(Token = "0x6001C47")]
		[Address(RVA = "0x15D5310", Offset = "0x15D5310", VA = "0x15D5310")]
		public static ScaledValue FromPixelValue(float value)
		{
			return null;
		}

		[Token(Token = "0x6001C48")]
		[Address(RVA = "0x15D5380", Offset = "0x15D5380", VA = "0x15D5380")]
		public static ScaledValue FromNormalizedValue(float value)
		{
			return null;
		}
	}
	[Token(Token = "0x2000366")]
	public enum ValueScale
	{
		[Token(Token = "0x40010F9")]
		Pixel,
		[Token(Token = "0x40010FA")]
		Normalized
	}
	[Serializable]
	[Token(Token = "0x2000367")]
	public class AutoSize
	{
		[Token(Token = "0x40010FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool autoSizeWidth;

		[Token(Token = "0x40010FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool autoSizeHeight;

		[Token(Token = "0x40010FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ScaledValue maxWidth;

		[Token(Token = "0x40010FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScaledValue maxHeight;

		[Token(Token = "0x40010FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RectOffset padding;

		[Token(Token = "0x17000335")]
		public bool IsEnabled
		{
			[Token(Token = "0x6001C4A")]
			[Address(RVA = "0x12F977C", Offset = "0x12F977C", VA = "0x12F977C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001C4B")]
		[Address(RVA = "0x12F979C", Offset = "0x12F979C", VA = "0x12F979C")]
		public AutoSize()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000368")]
	public class Fit
	{
		[Token(Token = "0x4001100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GUIControl above;

		[Token(Token = "0x4001101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GUIControl below;

		[Token(Token = "0x4001102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GUIControl leftOf;

		[Token(Token = "0x4001103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GUIControl rightOf;

		[Token(Token = "0x4001104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool expandToFit;

		[Token(Token = "0x17000336")]
		public bool IsSpecified
		{
			[Token(Token = "0x6001C4C")]
			[Address(RVA = "0x15CDD00", Offset = "0x15CDD00", VA = "0x15CDD00")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001C4D")]
		[Address(RVA = "0x15CDE1C", Offset = "0x15CDE1C", VA = "0x15CDE1C")]
		public Fit()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000369")]
	public class ImageAnimation
	{
		[Token(Token = "0x4001105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool animate;

		[Token(Token = "0x4001106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int frameWidth;

		[Token(Token = "0x4001107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float framesPerSecond;

		[Token(Token = "0x4001108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int numFrames;

		[Token(Token = "0x4001109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float frameNormalWidth;

		[Token(Token = "0x400110A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int currentFrame;

		[Token(Token = "0x400110B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float nextFrameTime;

		[Token(Token = "0x400110C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Rect texCoords;

		[Token(Token = "0x400110D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float lastDialogueTime;

		[Token(Token = "0x6001C4E")]
		[Address(RVA = "0x15D0B7C", Offset = "0x15D0B7C", VA = "0x15D0B7C")]
		public void RefreshAnimation(Texture2D image)
		{
		}

		[Token(Token = "0x6001C4F")]
		[Address(RVA = "0x15D0454", Offset = "0x15D0454", VA = "0x15D0454")]
		public void DrawAnimation(Rect rect, Texture2D image)
		{
		}

		[Token(Token = "0x6001C50")]
		[Address(RVA = "0x15D0E2C", Offset = "0x15D0E2C", VA = "0x15D0E2C")]
		public ImageAnimation()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200036A")]
	public class Navigation
	{
		[Token(Token = "0x400110E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool enabled;

		[Token(Token = "0x400110F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool focusFirstControlOnEnable;

		[Token(Token = "0x4001110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool jumpToMousePosition;

		[Token(Token = "0x4001111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GUIControl[] order;

		[Token(Token = "0x4001112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string clickButton;

		[Token(Token = "0x4001113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public KeyCode click;

		[Token(Token = "0x4001114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public KeyCode previous;

		[Token(Token = "0x4001115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public KeyCode next;

		[Token(Token = "0x4001116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string axis;

		[Token(Token = "0x4001117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool invertAxis;

		[Token(Token = "0x4001118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float axisRepeatDelay;

		[Token(Token = "0x4001119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float mouseWheelSensitivity;

		[Token(Token = "0x400111A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int current;

		[Token(Token = "0x400111B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float axisRepeatTime;

		[Token(Token = "0x400111C")]
		private const float AxisThreshold = 0.5f;

		[Token(Token = "0x400111D")]
		private const float MinorAxisThreshold = 0.01f;

		[Token(Token = "0x400111E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float mouseWheelY;

		[Token(Token = "0x400111F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool isAxisPrevDown;

		[Token(Token = "0x4001120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool isAxisNextDown;

		[Token(Token = "0x4001121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float timeNextRelease;

		[Token(Token = "0x17000337")]
		public string FocusedControlName
		{
			[Token(Token = "0x6001C51")]
			[Address(RVA = "0x15CF19C", Offset = "0x15CF19C", VA = "0x15CF19C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000338")]
		private bool IsCurrentValid
		{
			[Token(Token = "0x6001C52")]
			[Address(RVA = "0x15D43A0", Offset = "0x15D43A0", VA = "0x15D43A0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000339")]
		private bool IsOrderArrayValid
		{
			[Token(Token = "0x6001C53")]
			[Address(RVA = "0x15D43D4", Offset = "0x15D43D4", VA = "0x15D43D4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700033A")]
		public bool IsClicked
		{
			[Token(Token = "0x6001C54")]
			[Address(RVA = "0x15CF08C", Offset = "0x15CF08C", VA = "0x15CF08C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001C55")]
		[Address(RVA = "0x15CEA94", Offset = "0x15CEA94", VA = "0x15CEA94")]
		public void FocusFirstControl()
		{
		}

		[Token(Token = "0x6001C56")]
		[Address(RVA = "0x15CF0F0", Offset = "0x15CF0F0", VA = "0x15CF0F0")]
		public void CheckNavigationInput(Vector2 relativeMousePosition)
		{
		}

		[Token(Token = "0x6001C57")]
		[Address(RVA = "0x15D4A8C", Offset = "0x15D4A8C", VA = "0x15D4A8C")]
		private void NavigateToMousePosition(Vector2 relativeMousePosition)
		{
		}

		[Token(Token = "0x6001C58")]
		[Address(RVA = "0x15D44C0", Offset = "0x15D44C0", VA = "0x15D44C0")]
		public void Navigate(int direction)
		{
		}

		[Token(Token = "0x6001C59")]
		[Address(RVA = "0x15D43F4", Offset = "0x15D43F4", VA = "0x15D43F4")]
		private bool IsClickableButton(GUIControl control)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C5A")]
		[Address(RVA = "0x15D4B9C", Offset = "0x15D4B9C", VA = "0x15D4B9C")]
		private int NextControlIndex(int direction)
		{
			return default(int);
		}

		[Token(Token = "0x6001C5B")]
		[Address(RVA = "0x15D45B0", Offset = "0x15D45B0", VA = "0x15D45B0")]
		private void CheckMouseWheel()
		{
		}

		[Token(Token = "0x6001C5C")]
		[Address(RVA = "0x15D48D4", Offset = "0x15D48D4", VA = "0x15D48D4")]
		private bool IsNextControlInputDown(float axisValue)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C5D")]
		[Address(RVA = "0x15D4714", Offset = "0x15D4714", VA = "0x15D4714")]
		private bool IsPreviousControlInputDown(float axisValue)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C5E")]
		[Address(RVA = "0x15D4614", Offset = "0x15D4614", VA = "0x15D4614")]
		private float GetNavigationAxis()
		{
			return default(float);
		}

		[Token(Token = "0x6001C5F")]
		[Address(RVA = "0x15D4BD8", Offset = "0x15D4BD8", VA = "0x15D4BD8")]
		public Navigation()
		{
		}
	}
	[Token(Token = "0x200036B")]
	public enum TextStyle
	{
		[Token(Token = "0x4001123")]
		None,
		[Token(Token = "0x4001124")]
		Shadow,
		[Token(Token = "0x4001125")]
		Outline
	}
	[Token(Token = "0x200036C")]
	public static class UnityGUITools
	{
		[Token(Token = "0x6001C60")]
		[Address(RVA = "0x15DA5F8", Offset = "0x15DA5F8", VA = "0x15DA5F8")]
		public static void DrawText(Rect rect, string text, GUIStyle guiStyle, TextStyle textStyle = TextStyle.None)
		{
		}

		[Token(Token = "0x6001C61")]
		[Address(RVA = "0x15D13C8", Offset = "0x15D13C8", VA = "0x15D13C8")]
		public static void DrawText(Rect rect, string text, GUIStyle guiStyle, TextStyle textStyle, Color textStyleColor)
		{
		}

		[Token(Token = "0x6001C62")]
		[Address(RVA = "0x15D7CF4", Offset = "0x15D7CF4", VA = "0x15D7CF4")]
		public static GUISkin GetValidGUISkin(GUISkin guiSkin)
		{
			return null;
		}

		[Token(Token = "0x6001C63")]
		[Address(RVA = "0x15DA9B0", Offset = "0x15DA9B0", VA = "0x15DA9B0")]
		public static GUISkin GetDialogueManagerGUISkin()
		{
			return null;
		}

		[Token(Token = "0x6001C64")]
		[Address(RVA = "0x15D3898", Offset = "0x15D3898", VA = "0x15D3898")]
		public static GUIStyle GetGUIStyle(string guiStyleName, GUIStyle defaultGUIStyle)
		{
			return null;
		}

		[Token(Token = "0x6001C65")]
		[Address(RVA = "0x15D37D4", Offset = "0x15D37D4", VA = "0x15D37D4")]
		public static Color ColorWithAlpha(Color color, float alpha)
		{
			return default(Color);
		}

		[Token(Token = "0x6001C66")]
		[Address(RVA = "0x15DAB40", Offset = "0x15DAB40", VA = "0x15DAB40")]
		public static FontStyle ApplyBold(FontStyle fontStyle)
		{
			return default(FontStyle);
		}

		[Token(Token = "0x6001C67")]
		[Address(RVA = "0x15DAB50", Offset = "0x15DAB50", VA = "0x15DAB50")]
		public static FontStyle ApplyItalic(FontStyle fontStyle)
		{
			return default(FontStyle);
		}

		[Token(Token = "0x6001C68")]
		[Address(RVA = "0x15D3968", Offset = "0x15D3968", VA = "0x15D3968")]
		public static GUIStyle ApplyFormatting(FormattedText formattingToApply, GUIStyle guiStyle)
		{
			return null;
		}
	}
	[Token(Token = "0x200036D")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0BA50", Offset = "0xA0BA50")]
	public class UnityGUIQuestLogWindow : QuestLogWindow
	{
		[Serializable]
		[Token(Token = "0x2000673")]
		public class AbandonControls
		{
			[Token(Token = "0x4001FE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GUIControl panel;

			[Token(Token = "0x4001FE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GUILabel questTitleLabel;

			[Token(Token = "0x4001FEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GUIButton ok;

			[Token(Token = "0x4001FEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GUIButton cancel;

			[Token(Token = "0x6002BE1")]
			[Address(RVA = "0x15DA5F0", Offset = "0x15DA5F0", VA = "0x15DA5F0")]
			public AbandonControls()
			{
			}
		}

		[Token(Token = "0x4001126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public GUIRoot guiRoot;

		[Token(Token = "0x4001127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public GUIScrollView scrollView;

		[Token(Token = "0x4001128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public GUIButton activeButton;

		[Token(Token = "0x4001129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public GUIButton completedButton;

		[Token(Token = "0x400112A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public AbandonControls abandonQuestPopup;

		[Token(Token = "0x400112B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public string groupHeadingGuiStyleName;

		[Token(Token = "0x400112C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public string questHeadingGuiStyleName;

		[Token(Token = "0x400112D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public string questHeadingOpenGuiStyleName;

		[Token(Token = "0x400112E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public string questBodyGuiStyleName;

		[Token(Token = "0x400112F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public string questEntryActiveGuiStyleName;

		[Token(Token = "0x4001130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public string questEntrySuccessGuiStyleName;

		[Token(Token = "0x4001131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public string questEntryFailureGuiStyleName;

		[Token(Token = "0x4001132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public string questEntryButtonStyleName;

		[Token(Token = "0x4001133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public string noQuestsGuiStyleName;

		[Token(Token = "0x4001134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public int padding;

		[Token(Token = "0x4001135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private GUIStyle groupHeadingStyle;

		[Token(Token = "0x4001136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private GUIStyle questHeadingStyle;

		[Token(Token = "0x4001137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private GUIStyle questHeadingOpenStyle;

		[Token(Token = "0x4001138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private GUIStyle questBodyStyle;

		[Token(Token = "0x4001139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private GUIStyle questEntryActiveStyle;

		[Token(Token = "0x400113A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private GUIStyle questEntrySuccessStyle;

		[Token(Token = "0x400113B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private GUIStyle questEntryFailureStyle;

		[Token(Token = "0x400113C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private GUIStyle questButtonStyle;

		[Token(Token = "0x400113D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private Action confirmAbandonQuestHandler;

		[Token(Token = "0x400113E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private List<string> collapsedGroups;

		[Token(Token = "0x6001C69")]
		[Address(RVA = "0x15D8878", Offset = "0x15D8878", VA = "0x15D8878", Slot = "9")]
		public override void Awake()
		{
		}

		[Token(Token = "0x6001C6A")]
		[Address(RVA = "0x15D8A30", Offset = "0x15D8A30", VA = "0x15D8A30")]
		public void Start()
		{
		}

		[Token(Token = "0x6001C6B")]
		[Address(RVA = "0x15D8AD4", Offset = "0x15D8AD4", VA = "0x15D8AD4", Slot = "5")]
		public override void OpenWindow(Action openedWindowHandler)
		{
		}

		[Token(Token = "0x6001C6C")]
		[Address(RVA = "0x15D8BF4", Offset = "0x15D8BF4", VA = "0x15D8BF4", Slot = "6")]
		public override void CloseWindow(Action closedWindowHandler)
		{
		}

		[Token(Token = "0x6001C6D")]
		[Address(RVA = "0x15D8CA8", Offset = "0x15D8CA8", VA = "0x15D8CA8", Slot = "8")]
		public override void ConfirmAbandonQuest(string title, Action confirmAbandonQuestHandler)
		{
		}

		[Token(Token = "0x6001C6E")]
		[Address(RVA = "0x15D8CB0", Offset = "0x15D8CB0", VA = "0x15D8CB0")]
		private void OpenAbandonQuestPopup(string title)
		{
		}

		[Token(Token = "0x6001C6F")]
		[Address(RVA = "0x15D8DDC", Offset = "0x15D8DDC", VA = "0x15D8DDC")]
		private void CloseAbandonQuestPopup()
		{
		}

		[Token(Token = "0x6001C70")]
		[Address(RVA = "0x15D8E90", Offset = "0x15D8E90", VA = "0x15D8E90")]
		public void ClickConfirmAbandonQuest(object data)
		{
		}

		[Token(Token = "0x6001C71")]
		[Address(RVA = "0x15D8EC8", Offset = "0x15D8EC8", VA = "0x15D8EC8")]
		public void ClickCancelAbandonQuest(object data)
		{
		}

		[Token(Token = "0x6001C72")]
		[Address(RVA = "0x15D8ECC", Offset = "0x15D8ECC", VA = "0x15D8ECC")]
		public void OnMeasureContent()
		{
		}

		[Token(Token = "0x6001C73")]
		[Address(RVA = "0x15D90A8", Offset = "0x15D90A8", VA = "0x15D90A8")]
		public void OnDrawContent()
		{
		}

		[Token(Token = "0x6001C74")]
		[Address(RVA = "0x15D8ED0", Offset = "0x15D8ED0", VA = "0x15D8ED0")]
		private void MeasureQuestContent()
		{
		}

		[Token(Token = "0x6001C75")]
		[Address(RVA = "0x15D9A34", Offset = "0x15D9A34", VA = "0x15D9A34", Slot = "7")]
		public override void OnQuestListUpdated()
		{
		}

		[Token(Token = "0x6001C76")]
		[Address(RVA = "0x15D9B2C", Offset = "0x15D9B2C", VA = "0x15D9B2C")]
		private GUIStyle UseGUIStyle(GUIStyle guiStyle, string guiStyleName, GUIStyle defaultStyle)
		{
			return null;
		}

		[Token(Token = "0x6001C77")]
		[Address(RVA = "0x15D9B44", Offset = "0x15D9B44", VA = "0x15D9B44")]
		private GUIStyle GetGroupHeadingStyle()
		{
			return null;
		}

		[Token(Token = "0x6001C78")]
		[Address(RVA = "0x15D9BE0", Offset = "0x15D9BE0", VA = "0x15D9BE0")]
		private GUIStyle GetQuestHeadingStyle(bool isSelectedQuest)
		{
			return null;
		}

		[Token(Token = "0x6001C79")]
		[Address(RVA = "0x15D9CF4", Offset = "0x15D9CF4", VA = "0x15D9CF4")]
		private GUIStyle GetQuestEntryStyle(QuestState entryState)
		{
			return null;
		}

		[Token(Token = "0x6001C7A")]
		[Address(RVA = "0x15D949C", Offset = "0x15D949C", VA = "0x15D949C")]
		private float GroupHeadingHeight(string group)
		{
			return default(float);
		}

		[Token(Token = "0x6001C7B")]
		[Address(RVA = "0x15D9548", Offset = "0x15D9548", VA = "0x15D9548")]
		private float QuestHeadingHeight(QuestInfo questInfo)
		{
			return default(float);
		}

		[Token(Token = "0x6001C7C")]
		[Address(RVA = "0x15D9688", Offset = "0x15D9688", VA = "0x15D9688")]
		private float QuestDescriptionHeight(QuestInfo questInfo)
		{
			return default(float);
		}

		[Token(Token = "0x6001C7D")]
		[Address(RVA = "0x15D97A4", Offset = "0x15D97A4", VA = "0x15D97A4")]
		private float QuestEntriesHeight(QuestInfo questInfo)
		{
			return default(float);
		}

		[Token(Token = "0x6001C7E")]
		[Address(RVA = "0x15D98F4", Offset = "0x15D98F4", VA = "0x15D98F4")]
		private float QuestButtonsHeight(QuestInfo questInfo)
		{
			return default(float);
		}

		[Token(Token = "0x6001C7F")]
		[Address(RVA = "0x15D90AC", Offset = "0x15D90AC", VA = "0x15D90AC")]
		private void DrawQuests()
		{
		}

		[Token(Token = "0x6001C80")]
		[Address(RVA = "0x15D9EDC", Offset = "0x15D9EDC", VA = "0x15D9EDC")]
		private float DrawQuestDescription(QuestInfo questInfo, float contentY)
		{
			return default(float);
		}

		[Token(Token = "0x6001C81")]
		[Address(RVA = "0x15DA05C", Offset = "0x15DA05C", VA = "0x15DA05C")]
		private float DrawQuestEntries(QuestInfo questInfo, float contentY)
		{
			return default(float);
		}

		[Token(Token = "0x6001C82")]
		[Address(RVA = "0x15DA210", Offset = "0x15DA210", VA = "0x15DA210")]
		private float DrawQuestButtons(QuestInfo questInfo, float contentY)
		{
			return default(float);
		}

		[Token(Token = "0x6001C83")]
		[Address(RVA = "0x15D9E2C", Offset = "0x15D9E2C", VA = "0x15D9E2C")]
		private void ClickQuestGroup(string group)
		{
		}

		[Token(Token = "0x6001C84")]
		[Address(RVA = "0x15DA558", Offset = "0x15DA558", VA = "0x15DA558")]
		public UnityGUIQuestLogWindow()
		{
		}
	}
}
namespace PixelCrushers.DialogueSystem.UnityGUI.Wrappers
{
	[Token(Token = "0x200036E")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0BA88", Offset = "0xA0BA88")]
	public class AudioEffect : PixelCrushers.DialogueSystem.UnityGUI.AudioEffect
	{
		[Token(Token = "0x6001C85")]
		[Address(RVA = "0x15DC61C", Offset = "0x15DC61C", VA = "0x15DC61C")]
		public AudioEffect()
		{
		}
	}
	[Token(Token = "0x200036F")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0BAC0", Offset = "0xA0BAC0")]
	public class ContinueButtonFastForward : PixelCrushers.DialogueSystem.UnityGUI.ContinueButtonFastForward
	{
		[Token(Token = "0x6001C86")]
		[Address(RVA = "0x15DC624", Offset = "0x15DC624", VA = "0x15DC624")]
		public ContinueButtonFastForward()
		{
		}
	}
	[Token(Token = "0x2000370")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0BAF8", Offset = "0xA0BAF8")]
	public class FadeEffect : PixelCrushers.DialogueSystem.UnityGUI.FadeEffect
	{
		[Token(Token = "0x6001C87")]
		[Address(RVA = "0x15DC62C", Offset = "0x15DC62C", VA = "0x15DC62C")]
		public FadeEffect()
		{
		}
	}
	[Token(Token = "0x2000371")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0BB30", Offset = "0xA0BB30")]
	public class FlashEffect : PixelCrushers.DialogueSystem.UnityGUI.FlashEffect
	{
		[Token(Token = "0x6001C88")]
		[Address(RVA = "0x15DC634", Offset = "0x15DC634", VA = "0x15DC634")]
		public FlashEffect()
		{
		}
	}
	[Token(Token = "0x2000372")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0BB68", Offset = "0xA0BB68")]
	public class GUIButton : PixelCrushers.DialogueSystem.UnityGUI.GUIButton
	{
		[Token(Token = "0x6001C89")]
		[Address(RVA = "0x15DC644", Offset = "0x15DC644", VA = "0x15DC644")]
		public GUIButton()
		{
		}
	}
	[Token(Token = "0x2000373")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0BBA0", Offset = "0xA0BBA0")]
	public class GUIControl : PixelCrushers.DialogueSystem.UnityGUI.GUIControl
	{
		[Token(Token = "0x6001C8A")]
		[Address(RVA = "0x15DC648", Offset = "0x15DC648", VA = "0x15DC648")]
		public GUIControl()
		{
		}
	}
	[Token(Token = "0x2000374")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0BBD8", Offset = "0xA0BBD8")]
	public class GUIImage : PixelCrushers.DialogueSystem.UnityGUI.GUIImage
	{
		[Token(Token = "0x6001C8B")]
		[Address(RVA = "0x15DC64C", Offset = "0x15DC64C", VA = "0x15DC64C")]
		public GUIImage()
		{
		}
	}
	[Token(Token = "0x2000375")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0BC10", Offset = "0xA0BC10")]
	public class GUILabel : PixelCrushers.DialogueSystem.UnityGUI.GUILabel
	{
		[Token(Token = "0x6001C8C")]
		[Address(RVA = "0x15DC650", Offset = "0x15DC650", VA = "0x15DC650")]
		public GUILabel()
		{
		}
	}
	[Token(Token = "0x2000376")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0BC48", Offset = "0xA0BC48")]
	public class GUIProgressBar : PixelCrushers.DialogueSystem.UnityGUI.GUIProgressBar
	{
		[Token(Token = "0x6001C8D")]
		[Address(RVA = "0x15DC654", Offset = "0x15DC654", VA = "0x15DC654")]
		public GUIProgressBar()
		{
		}
	}
	[Token(Token = "0x2000377")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0BC80", Offset = "0xA0BC80")]
	public class GUIRoot : PixelCrushers.DialogueSystem.UnityGUI.GUIRoot
	{
		[Token(Token = "0x6001C8E")]
		[Address(RVA = "0x15DC658", Offset = "0x15DC658", VA = "0x15DC658")]
		public GUIRoot()
		{
		}
	}
	[Token(Token = "0x2000378")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0BCB8", Offset = "0xA0BCB8")]
	public class GUIScrollView : PixelCrushers.DialogueSystem.UnityGUI.GUIScrollView
	{
		[Token(Token = "0x6001C8F")]
		[Address(RVA = "0x15DC65C", Offset = "0x15DC65C", VA = "0x15DC65C")]
		public GUIScrollView()
		{
		}
	}
	[Token(Token = "0x2000379")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0BCF0", Offset = "0xA0BCF0")]
	public class GUITextField : PixelCrushers.DialogueSystem.UnityGUI.GUITextField
	{
		[Token(Token = "0x6001C90")]
		[Address(RVA = "0x15DC660", Offset = "0x15DC660", VA = "0x15DC660")]
		public GUITextField()
		{
		}
	}
	[Token(Token = "0x200037A")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0BD28", Offset = "0xA0BD28")]
	public class GUIVisibleControl : PixelCrushers.DialogueSystem.UnityGUI.GUIVisibleControl
	{
		[Token(Token = "0x6001C91")]
		[Address(RVA = "0x15DC664", Offset = "0x15DC664", VA = "0x15DC664")]
		public GUIVisibleControl()
		{
		}
	}
	[Token(Token = "0x200037B")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0BD60", Offset = "0xA0BD60")]
	public class GUIWindow : PixelCrushers.DialogueSystem.UnityGUI.GUIWindow
	{
		[Token(Token = "0x6001C92")]
		[Address(RVA = "0x15DC668", Offset = "0x15DC668", VA = "0x15DC668")]
		public GUIWindow()
		{
		}
	}
	[Token(Token = "0x200037C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0BD98", Offset = "0xA0BD98")]
	public class SlideEffect : PixelCrushers.DialogueSystem.UnityGUI.SlideEffect
	{
		[Token(Token = "0x6001C93")]
		[Address(RVA = "0x15DC66C", Offset = "0x15DC66C", VA = "0x15DC66C")]
		public SlideEffect()
		{
		}
	}
	[Token(Token = "0x200037D")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0BDD0", Offset = "0xA0BDD0")]
	public class TimerEffect : PixelCrushers.DialogueSystem.UnityGUI.TimerEffect
	{
		[Token(Token = "0x6001C94")]
		[Address(RVA = "0x15DC680", Offset = "0x15DC680", VA = "0x15DC680")]
		public TimerEffect()
		{
		}
	}
	[Token(Token = "0x200037E")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0BE08", Offset = "0xA0BE08")]
	public class TypewriterEffect : PixelCrushers.DialogueSystem.UnityGUI.TypewriterEffect
	{
		[Token(Token = "0x6001C95")]
		[Address(RVA = "0x15DC690", Offset = "0x15DC690", VA = "0x15DC690")]
		public TypewriterEffect()
		{
		}
	}
	[Token(Token = "0x200037F")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0BE40", Offset = "0xA0BE40")]
	public class UnityBarkUI : PixelCrushers.DialogueSystem.UnityGUI.UnityBarkUI
	{
		[Token(Token = "0x6001C96")]
		[Address(RVA = "0x15DC6A0", Offset = "0x15DC6A0", VA = "0x15DC6A0")]
		public UnityBarkUI()
		{
		}
	}
	[Token(Token = "0x2000380")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0BE78", Offset = "0xA0BE78")]
	public class UnityBarkUIOnGUI : PixelCrushers.DialogueSystem.UnityGUI.UnityBarkUIOnGUI
	{
		[Token(Token = "0x6001C97")]
		[Address(RVA = "0x15DC6A4", Offset = "0x15DC6A4", VA = "0x15DC6A4")]
		public UnityBarkUIOnGUI()
		{
		}
	}
	[Token(Token = "0x2000381")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0BEB0", Offset = "0xA0BEB0")]
	public class UnityDialogueUI : PixelCrushers.DialogueSystem.UnityGUI.UnityDialogueUI
	{
		[Token(Token = "0x6001C98")]
		[Address(RVA = "0x15DC6A8", Offset = "0x15DC6A8", VA = "0x15DC6A8")]
		public UnityDialogueUI()
		{
		}
	}
	[Token(Token = "0x2000382")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0BEE8", Offset = "0xA0BEE8")]
	public class UnityGUIQuestLogWindow : PixelCrushers.DialogueSystem.UnityGUI.UnityGUIQuestLogWindow
	{
		[Token(Token = "0x6001C99")]
		[Address(RVA = "0x15DC6B0", Offset = "0x15DC6B0", VA = "0x15DC6B0")]
		public UnityGUIQuestLogWindow()
		{
		}
	}
	[Token(Token = "0x2000383")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0BF20", Offset = "0xA0BF20")]
	public class UnityTextFieldUI : PixelCrushers.DialogueSystem.UnityGUI.UnityTextFieldUI
	{
		[Token(Token = "0x6001C9A")]
		[Address(RVA = "0x15DC6B4", Offset = "0x15DC6B4", VA = "0x15DC6B4")]
		public UnityTextFieldUI()
		{
		}
	}
}
namespace PixelCrushers.DialogueSystem.SequencerCommands
{
	[Token(Token = "0x2000384")]
	public abstract class SequencerCommand : MonoBehaviour
	{
		[Token(Token = "0x400113F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public bool isPlaying;

		[Token(Token = "0x4001140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Sequencer m_sequencer;

		[Token(Token = "0x4001141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string[] m_parameters;

		[Token(Token = "0x4001142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string m_endMessage;

		[Token(Token = "0x4001143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform m_speaker;

		[Token(Token = "0x4001144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform m_listener;

		[Token(Token = "0x1700033B")]
		protected Sequencer sequencer
		{
			[Token(Token = "0x6001C9B")]
			[Address(RVA = "0x1389DC0", Offset = "0x1389DC0", VA = "0x1389DC0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C9C")]
			[Address(RVA = "0x1389E70", Offset = "0x1389E70", VA = "0x1389E70")]
			private set
			{
			}
		}

		[Token(Token = "0x1700033C")]
		protected string[] parameters
		{
			[Token(Token = "0x6001C9D")]
			[Address(RVA = "0x1389E78", Offset = "0x1389E78", VA = "0x1389E78")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C9E")]
			[Address(RVA = "0x1389EF0", Offset = "0x1389EF0", VA = "0x1389EF0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700033D")]
		public string endMessage
		{
			[Token(Token = "0x6001C9F")]
			[Address(RVA = "0x1389EF8", Offset = "0x1389EF8", VA = "0x1389EF8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CA0")]
			[Address(RVA = "0x1389F70", Offset = "0x1389F70", VA = "0x1389F70")]
			private set
			{
			}
		}

		[Token(Token = "0x1700033E")]
		protected Transform speaker
		{
			[Token(Token = "0x6001CA1")]
			[Address(RVA = "0x1389F78", Offset = "0x1389F78", VA = "0x1389F78")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033F")]
		protected Transform listener
		{
			[Token(Token = "0x6001CA2")]
			[Address(RVA = "0x138A06C", Offset = "0x138A06C", VA = "0x138A06C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000340")]
		public bool IsPlaying
		{
			[Token(Token = "0x6001CA3")]
			[Address(RVA = "0x138A15C", Offset = "0x138A15C", VA = "0x138A15C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001CA4")]
			[Address(RVA = "0x138A164", Offset = "0x138A164", VA = "0x138A164")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000341")]
		protected Sequencer Sequencer
		{
			[Token(Token = "0x6001CA5")]
			[Address(RVA = "0x138A068", Offset = "0x138A068", VA = "0x138A068")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CA6")]
			[Address(RVA = "0x138A170", Offset = "0x138A170", VA = "0x138A170")]
			private set
			{
			}
		}

		[Token(Token = "0x17000342")]
		protected string[] Parameters
		{
			[Token(Token = "0x6001CA7")]
			[Address(RVA = "0x138A178", Offset = "0x138A178", VA = "0x138A178")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CA8")]
			[Address(RVA = "0x138A17C", Offset = "0x138A17C", VA = "0x138A17C")]
			private set
			{
			}
		}

		[Token(Token = "0x6001CA9")]
		[Address(RVA = "0x138A184", Offset = "0x138A184", VA = "0x138A184")]
		public void Initialize(Sequencer sequencer, string endMessage, Transform speaker, Transform listener, params string[] parameters)
		{
		}

		[Token(Token = "0x6001CAA")]
		[Address(RVA = "0x138A194", Offset = "0x138A194", VA = "0x138A194")]
		public void Initialize(Sequencer sequencer, Transform speaker, Transform listener, params string[] parameters)
		{
		}

		[Token(Token = "0x6001CAB")]
		[Address(RVA = "0x138A1A4", Offset = "0x138A1A4", VA = "0x138A1A4")]
		protected void Stop()
		{
		}

		[Token(Token = "0x6001CAC")]
		[Address(RVA = "0x138A1AC", Offset = "0x138A1AC", VA = "0x138A1AC")]
		protected Transform GetSubject(string specifier, [Optional] Transform defaultSubject)
		{
			return null;
		}

		[Token(Token = "0x6001CAD")]
		[Address(RVA = "0x138A328", Offset = "0x138A328", VA = "0x138A328")]
		protected Transform GetSubject(int i, [Optional] Transform defaultSubject)
		{
			return null;
		}

		[Token(Token = "0x6001CAE")]
		[Address(RVA = "0x138A370", Offset = "0x138A370", VA = "0x138A370")]
		protected string GetParameter(int i, [Optional] string defaultValue)
		{
			return null;
		}

		[Token(Token = "0x6001CAF")]
		protected T GetParameterAs<T>(int i, T defaultValue)
		{
			return (T)null;
		}

		[Token(Token = "0x6001CB0")]
		[Address(RVA = "0x138A3D4", Offset = "0x138A3D4", VA = "0x138A3D4")]
		protected float GetParameterAsFloat(int i, float defaultValue = 0f)
		{
			return default(float);
		}

		[Token(Token = "0x6001CB1")]
		[Address(RVA = "0x138A444", Offset = "0x138A444", VA = "0x138A444")]
		protected int GetParameterAsInt(int i, int defaultValue = 0)
		{
			return default(int);
		}

		[Token(Token = "0x6001CB2")]
		[Address(RVA = "0x138A4AC", Offset = "0x138A4AC", VA = "0x138A4AC")]
		protected bool GetParameterAsBool(int i, bool defaultValue = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CB3")]
		[Address(RVA = "0x138A514", Offset = "0x138A514", VA = "0x138A514")]
		protected string GetParameters()
		{
			return null;
		}

		[Token(Token = "0x6001CB4")]
		[Address(RVA = "0x138A5A0", Offset = "0x138A5A0", VA = "0x138A5A0")]
		protected bool IsAudioMuted()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CB5")]
		[Address(RVA = "0x138A634", Offset = "0x138A634", VA = "0x138A634")]
		protected SequencerCommand()
		{
		}
	}
	[Token(Token = "0x2000385")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0BF58", Offset = "0xA0BF58")]
	public class SequencerCommandAnimation : SequencerCommand
	{
		[Token(Token = "0x4001145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform subject;

		[Token(Token = "0x4001146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int nextAnimationIndex;

		[Token(Token = "0x4001147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float stopTime;

		[Token(Token = "0x4001148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Animation anim;

		[Token(Token = "0x6001CB6")]
		[Address(RVA = "0x138A644", Offset = "0x138A644", VA = "0x138A644")]
		public void Start()
		{
		}

		[Token(Token = "0x6001CB7")]
		[Address(RVA = "0x138AB7C", Offset = "0x138AB7C", VA = "0x138AB7C")]
		private void TryAnimationClip(string clipName)
		{
		}

		[Token(Token = "0x6001CB8")]
		[Address(RVA = "0x138AD0C", Offset = "0x138AD0C", VA = "0x138AD0C")]
		public void Update()
		{
		}

		[Token(Token = "0x6001CB9")]
		[Address(RVA = "0x138ADF4", Offset = "0x138ADF4", VA = "0x138ADF4")]
		public SequencerCommandAnimation()
		{
		}
	}
	[Token(Token = "0x2000386")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0BF90", Offset = "0xA0BF90")]
	public class SequencerCommandAnimatorFloat : SequencerCommand
	{
		[Token(Token = "0x4001149")]
		private const float SmoothMoveCutoff = 0.05f;

		[Token(Token = "0x400114A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int animatorParameterHash;

		[Token(Token = "0x400114B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float targetValue;

		[Token(Token = "0x400114C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform subject;

		[Token(Token = "0x400114D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float duration;

		[Token(Token = "0x400114E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Animator animator;

		[Token(Token = "0x400114F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float startTime;

		[Token(Token = "0x4001150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float endTime;

		[Token(Token = "0x4001151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float originalValue;

		[Token(Token = "0x6001CBA")]
		[Address(RVA = "0x138AE0C", Offset = "0x138AE0C", VA = "0x138AE0C")]
		public void Start()
		{
		}

		[Token(Token = "0x6001CBB")]
		[Address(RVA = "0x138B358", Offset = "0x138B358", VA = "0x138B358")]
		public void Update()
		{
		}

		[Token(Token = "0x6001CBC")]
		[Address(RVA = "0x138B4B4", Offset = "0x138B4B4", VA = "0x138B4B4")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6001CBD")]
		[Address(RVA = "0x138B550", Offset = "0x138B550", VA = "0x138B550")]
		public SequencerCommandAnimatorFloat()
		{
		}
	}
	[Token(Token = "0x2000387")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0BFC8", Offset = "0xA0BFC8")]
	public class SequencerCommandAnimatorLayer : SequencerCommand
	{
		[Token(Token = "0x4001152")]
		private const float SmoothMoveCutoff = 0.05f;

		[Token(Token = "0x4001153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int layerIndex;

		[Token(Token = "0x4001154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float weight;

		[Token(Token = "0x4001155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform subject;

		[Token(Token = "0x4001156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float duration;

		[Token(Token = "0x4001157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Animator animator;

		[Token(Token = "0x4001158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float startTime;

		[Token(Token = "0x4001159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float endTime;

		[Token(Token = "0x400115A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float originalWeight;

		[Token(Token = "0x6001CBE")]
		[Address(RVA = "0x138B568", Offset = "0x138B568", VA = "0x138B568")]
		public void Start()
		{
		}

		[Token(Token = "0x6001CBF")]
		[Address(RVA = "0x138BB74", Offset = "0x138BB74", VA = "0x138BB74")]
		public void Update()
		{
		}

		[Token(Token = "0x6001CC0")]
		[Address(RVA = "0x138BCD0", Offset = "0x138BCD0", VA = "0x138BCD0")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6001CC1")]
		[Address(RVA = "0x138BD90", Offset = "0x138BD90", VA = "0x138BD90")]
		public SequencerCommandAnimatorLayer()
		{
		}
	}
	[Token(Token = "0x2000388")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0C000", Offset = "0xA0C000")]
	public class SequencerCommandAnimatorPlayWait : SequencerCommand
	{
		[Token(Token = "0x2000674")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0E018", Offset = "0xA0E018")]
		private sealed class <MonitorState>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SequencerCommandAnimatorPlayWait <>4__this;

			[Token(Token = "0x4001FEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Animator animator;

			[Token(Token = "0x4001FF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string stateName;

			[Token(Token = "0x4001FF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <maxStartTime>5__2;

			[Token(Token = "0x170005B1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002BE5")]
				[Address(RVA = "0x138C680", Offset = "0x138C680", VA = "0x138C680", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005B2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BE7")]
				[Address(RVA = "0x138C6E8", Offset = "0x138C6E8", VA = "0x138C6E8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BE2")]
			[Address(RVA = "0x138C358", Offset = "0x138C358", VA = "0x138C358")]
			[DebuggerHidden]
			public <MonitorState>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6002BE3")]
			[Address(RVA = "0x138C4E0", Offset = "0x138C4E0", VA = "0x138C4E0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002BE4")]
			[Address(RVA = "0x138C4E4", Offset = "0x138C4E4", VA = "0x138C4E4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BE6")]
			[Address(RVA = "0x138C688", Offset = "0x138C688", VA = "0x138C688", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400115B")]
		private const float maxDurationToWaitForStateStart = 1f;

		[Token(Token = "0x6001CC2")]
		[Address(RVA = "0x138BDA4", Offset = "0x138BDA4", VA = "0x138BDA4")]
		public void Start()
		{
		}

		[Token(Token = "0x6001CC3")]
		[Address(RVA = "0x138C2D4", Offset = "0x138C2D4", VA = "0x138C2D4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA2E7AC", Offset = "0xA2E7AC")]
		private IEnumerator MonitorState(Animator animator, string stateName)
		{
			return null;
		}

		[Token(Token = "0x6001CC4")]
		[Address(RVA = "0x138C384", Offset = "0x138C384", VA = "0x138C384")]
		private bool CheckIsInState(Animator animator, string stateName, out AnimatorStateInfo animatorStateInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CC5")]
		[Address(RVA = "0x138C4D0", Offset = "0x138C4D0", VA = "0x138C4D0")]
		public SequencerCommandAnimatorPlayWait()
		{
		}
	}
	[Token(Token = "0x2000389")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0C038", Offset = "0xA0C038")]
	public class SequencerCommandAudioWWW : SequencerCommand
	{
		[Token(Token = "0x6001CC6")]
		[Address(RVA = "0x138C6F0", Offset = "0x138C6F0", VA = "0x138C6F0")]
		public void Start()
		{
		}

		[Token(Token = "0x6001CC7")]
		[Address(RVA = "0x138C768", Offset = "0x138C768", VA = "0x138C768")]
		public SequencerCommandAudioWWW()
		{
		}
	}
	[Token(Token = "0x200038A")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0C070", Offset = "0xA0C070")]
	public class SequencerCommandAudioWait : SequencerCommand
	{
		[Token(Token = "0x2000675")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0E028", Offset = "0xA0E028")]
		private sealed class <Start>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SequencerCommandAudioWait <>4__this;

			[Token(Token = "0x4001FF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private string <audioClipName>5__2;

			[Token(Token = "0x170005B3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002BEB")]
				[Address(RVA = "0x138D61C", Offset = "0x138D61C", VA = "0x138D61C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005B4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BED")]
				[Address(RVA = "0x138D684", Offset = "0x138D684", VA = "0x138D684", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BE8")]
			[Address(RVA = "0x138C7E8", Offset = "0x138C7E8", VA = "0x138C7E8")]
			[DebuggerHidden]
			public <Start>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6002BE9")]
			[Address(RVA = "0x138D27C", Offset = "0x138D27C", VA = "0x138D27C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002BEA")]
			[Address(RVA = "0x138D280", Offset = "0x138D280", VA = "0x138D280", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BEC")]
			[Address(RVA = "0x138D624", Offset = "0x138D624", VA = "0x138D624", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000676")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0E038", Offset = "0xA0E038")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x4001FF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string audioClipName;

			[Token(Token = "0x4001FF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SequencerCommandAudioWait <>4__this;

			[Token(Token = "0x6002BEE")]
			[Address(RVA = "0x138CAB4", Offset = "0x138CAB4", VA = "0x138CAB4")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x6002BEF")]
			[Address(RVA = "0x138CE44", Offset = "0x138CE44", VA = "0x138CE44")]
			internal void <TryAudioClip>b__0(UnityEngine.Object asset)
			{
			}
		}

		[Token(Token = "0x400115C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float stopTime;

		[Token(Token = "0x400115D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private AudioSource audioSource;

		[Token(Token = "0x400115E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int nextClipIndex;

		[Token(Token = "0x400115F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AudioClip currentClip;

		[Token(Token = "0x4001160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private AudioClip originalClip;

		[Token(Token = "0x4001161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool restoreOriginalClip;

		[Token(Token = "0x6001CC8")]
		[Address(RVA = "0x138C778", Offset = "0x138C778", VA = "0x138C778")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA2E810", Offset = "0xA2E810")]
		public IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6001CC9")]
		[Address(RVA = "0x138C814", Offset = "0x138C814", VA = "0x138C814")]
		private void TryAudioClip(string audioClipName)
		{
		}

		[Token(Token = "0x6001CCA")]
		[Address(RVA = "0x138CABC", Offset = "0x138CABC", VA = "0x138CABC")]
		public void Update()
		{
		}

		[Token(Token = "0x6001CCB")]
		[Address(RVA = "0x138CBBC", Offset = "0x138CBBC", VA = "0x138CBBC")]
		public void OnDialogueSystemPause()
		{
		}

		[Token(Token = "0x6001CCC")]
		[Address(RVA = "0x138CC50", Offset = "0x138CC50", VA = "0x138CC50")]
		public void OnDialogueSystemUnpause()
		{
		}

		[Token(Token = "0x6001CCD")]
		[Address(RVA = "0x138CCE4", Offset = "0x138CCE4", VA = "0x138CCE4")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6001CCE")]
		[Address(RVA = "0x138CE2C", Offset = "0x138CE2C", VA = "0x138CE2C")]
		public SequencerCommandAudioWait()
		{
		}
	}
	[Token(Token = "0x200038B")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0C0A8", Offset = "0xA0C0A8")]
	public class SequencerCommandAudioWaitOnce : SequencerCommand
	{
		[Token(Token = "0x2000677")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0E048", Offset = "0xA0E048")]
		private sealed class <Start>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SequencerCommandAudioWaitOnce <>4__this;

			[Token(Token = "0x4001FFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private string <audioClipName>5__2;

			[Token(Token = "0x170005B5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002BF3")]
				[Address(RVA = "0x138EA28", Offset = "0x138EA28", VA = "0x138EA28", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005B6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BF5")]
				[Address(RVA = "0x138EA90", Offset = "0x138EA90", VA = "0x138EA90", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BF0")]
			[Address(RVA = "0x138D6FC", Offset = "0x138D6FC", VA = "0x138D6FC")]
			[DebuggerHidden]
			public <Start>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6002BF1")]
			[Address(RVA = "0x138E4FC", Offset = "0x138E4FC", VA = "0x138E4FC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002BF2")]
			[Address(RVA = "0x138E500", Offset = "0x138E500", VA = "0x138E500", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BF4")]
			[Address(RVA = "0x138EA30", Offset = "0x138EA30", VA = "0x138EA30", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000678")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0E058", Offset = "0xA0E058")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x4001FFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string audioClipName;

			[Token(Token = "0x4001FFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SequencerCommandAudioWaitOnce <>4__this;

			[Token(Token = "0x6002BF6")]
			[Address(RVA = "0x138DB00", Offset = "0x138DB00", VA = "0x138DB00")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x6002BF7")]
			[Address(RVA = "0x138E0C4", Offset = "0x138E0C4", VA = "0x138E0C4")]
			internal void <TryAudioClip>b__0(UnityEngine.Object asset)
			{
			}
		}

		[Token(Token = "0x4001162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string _VarPrefix;

		[Token(Token = "0x4001163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float _stopTime;

		[Token(Token = "0x4001164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private AudioSource _audioSource;

		[Token(Token = "0x4001165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int _nextClipIndex;

		[Token(Token = "0x4001166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AudioClip _currentClip;

		[Token(Token = "0x4001167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private AudioClip _originalClip;

		[Token(Token = "0x4001168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool _restoreOriginalClip;

		[Token(Token = "0x6001CCF")]
		[Address(RVA = "0x138D68C", Offset = "0x138D68C", VA = "0x138D68C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA2E874", Offset = "0xA2E874")]
		public IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6001CD0")]
		[Address(RVA = "0x138D728", Offset = "0x138D728", VA = "0x138D728")]
		private void TryAudioClip(string audioClipName)
		{
		}

		[Token(Token = "0x6001CD1")]
		[Address(RVA = "0x138DBA4", Offset = "0x138DBA4", VA = "0x138DBA4")]
		private string buildOnceVarName(string audioClipName)
		{
			return null;
		}

		[Token(Token = "0x6001CD2")]
		[Address(RVA = "0x138DB08", Offset = "0x138DB08", VA = "0x138DB08")]
		private bool hasPlayedAlready(string audioClipName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CD3")]
		[Address(RVA = "0x138DC18", Offset = "0x138DC18", VA = "0x138DC18")]
		private void markAsPlayedAlready(string audioClipName)
		{
		}

		[Token(Token = "0x6001CD4")]
		[Address(RVA = "0x138DCC0", Offset = "0x138DCC0", VA = "0x138DCC0")]
		private bool hasNextClip()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CD5")]
		[Address(RVA = "0x138DCF4", Offset = "0x138DCF4", VA = "0x138DCF4")]
		public void Update()
		{
		}

		[Token(Token = "0x6001CD6")]
		[Address(RVA = "0x138DDE0", Offset = "0x138DDE0", VA = "0x138DDE0")]
		public void OnDialogueSystemPause()
		{
		}

		[Token(Token = "0x6001CD7")]
		[Address(RVA = "0x138DE74", Offset = "0x138DE74", VA = "0x138DE74")]
		public void OnDialogueSystemUnpause()
		{
		}

		[Token(Token = "0x6001CD8")]
		[Address(RVA = "0x138DF08", Offset = "0x138DF08", VA = "0x138DF08")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6001CD9")]
		[Address(RVA = "0x138E050", Offset = "0x138E050", VA = "0x138E050")]
		public SequencerCommandAudioWaitOnce()
		{
		}
	}
	[Token(Token = "0x200038C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0C0E0", Offset = "0xA0C0E0")]
	public class SequencerCommandCamera : SequencerCommand
	{
		[Token(Token = "0x4001169")]
		private const float SmoothMoveCutoff = 0.05f;

		[Token(Token = "0x400116A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform subject;

		[Token(Token = "0x400116B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform angleTransform;

		[Token(Token = "0x400116C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform cameraTransform;

		[Token(Token = "0x400116D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool isLocalTransform;

		[Token(Token = "0x400116E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Quaternion targetRotation;

		[Token(Token = "0x400116F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Vector3 targetPosition;

		[Token(Token = "0x4001170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float duration;

		[Token(Token = "0x4001171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float startTime;

		[Token(Token = "0x4001172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float endTime;

		[Token(Token = "0x4001173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Quaternion originalRotation;

		[Token(Token = "0x4001174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Vector3 originalPosition;

		[Token(Token = "0x6001CDB")]
		[Address(RVA = "0x138EA98", Offset = "0x138EA98", VA = "0x138EA98")]
		public void Start()
		{
		}

		[Token(Token = "0x6001CDC")]
		[Address(RVA = "0x138F4E4", Offset = "0x138F4E4", VA = "0x138F4E4")]
		public void Update()
		{
		}

		[Token(Token = "0x6001CDD")]
		[Address(RVA = "0x138F6B0", Offset = "0x138F6B0", VA = "0x138F6B0")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6001CDE")]
		[Address(RVA = "0x138F7A0", Offset = "0x138F7A0", VA = "0x138F7A0")]
		public SequencerCommandCamera()
		{
		}
	}
	[Token(Token = "0x200038D")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0C118", Offset = "0xA0C118")]
	public class SequencerCommandDelay : SequencerCommand
	{
		[Token(Token = "0x4001175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float stopTime;

		[Token(Token = "0x6001CDF")]
		[Address(RVA = "0x138F7B0", Offset = "0x138F7B0", VA = "0x138F7B0")]
		public void Start()
		{
		}

		[Token(Token = "0x6001CE0")]
		[Address(RVA = "0x138F9A4", Offset = "0x138F9A4", VA = "0x138F9A4")]
		public void Update()
		{
		}

		[Token(Token = "0x6001CE1")]
		[Address(RVA = "0x138FA1C", Offset = "0x138FA1C", VA = "0x138FA1C")]
		public SequencerCommandDelay()
		{
		}
	}
	[Token(Token = "0x200038E")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0C150", Offset = "0xA0C150")]
	public class SequencerCommandFade : SequencerCommand
	{
		[Token(Token = "0x4001176")]
		private const float SmoothMoveCutoff = 0.05f;

		[Token(Token = "0x4001177")]
		private const int FaderCanvasSortOrder = 32766;

		[Token(Token = "0x4001178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string direction;

		[Token(Token = "0x4001179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float duration;

		[Token(Token = "0x400117A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Color color;

		[Token(Token = "0x400117B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool fadeIn;

		[Token(Token = "0x400117C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
		private bool stay;

		[Token(Token = "0x400117D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
		private bool unstay;

		[Token(Token = "0x400117E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float startTime;

		[Token(Token = "0x400117F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float endTime;

		[Token(Token = "0x4001180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Canvas faderCanvas;

		[Token(Token = "0x4001181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Image faderImage;

		[Token(Token = "0x6001CE2")]
		[Address(RVA = "0x138FA2C", Offset = "0x138FA2C", VA = "0x138FA2C")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001CE3")]
		[Address(RVA = "0x1390378", Offset = "0x1390378", VA = "0x1390378")]
		public void Update()
		{
		}

		[Token(Token = "0x6001CE4")]
		[Address(RVA = "0x1390518", Offset = "0x1390518", VA = "0x1390518")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6001CE5")]
		[Address(RVA = "0x13906FC", Offset = "0x13906FC", VA = "0x13906FC")]
		public SequencerCommandFade()
		{
		}
	}
	[Token(Token = "0x200038F")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0C188", Offset = "0xA0C188")]
	public class SequencerCommandLiveCamera : SequencerCommand
	{
		[Token(Token = "0x4001182")]
		private const float SmoothMoveCutoff = 0.05f;

		[Token(Token = "0x4001183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform subject;

		[Token(Token = "0x4001184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform angleTransform;

		[Token(Token = "0x4001185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform cameraTransform;

		[Token(Token = "0x4001186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool isLocalTransform;

		[Token(Token = "0x4001187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Quaternion targetRotation;

		[Token(Token = "0x4001188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Vector3 targetPosition;

		[Token(Token = "0x4001189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float duration;

		[Token(Token = "0x400118A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float startTime;

		[Token(Token = "0x400118B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float endTime;

		[Token(Token = "0x400118C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Quaternion originalRotation;

		[Token(Token = "0x400118D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Vector3 originalPosition;

		[Token(Token = "0x400118E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool isOriginal;

		[Token(Token = "0x6001CE7")]
		[Address(RVA = "0x1390710", Offset = "0x1390710", VA = "0x1390710")]
		public void Start()
		{
		}

		[Token(Token = "0x6001CE8")]
		[Address(RVA = "0x1391014", Offset = "0x1391014", VA = "0x1391014")]
		public void Update()
		{
		}

		[Token(Token = "0x6001CE9")]
		[Address(RVA = "0x139143C", Offset = "0x139143C", VA = "0x139143C")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6001CEA")]
		[Address(RVA = "0x139155C", Offset = "0x139155C", VA = "0x139155C")]
		public SequencerCommandLiveCamera()
		{
		}
	}
	[Token(Token = "0x2000390")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0C1C0", Offset = "0xA0C1C0")]
	public class SequencerCommandLoadLevel : SequencerCommand
	{
		[Token(Token = "0x6001CEB")]
		[Address(RVA = "0x139156C", Offset = "0x139156C", VA = "0x139156C")]
		public void Start()
		{
		}

		[Token(Token = "0x6001CEC")]
		[Address(RVA = "0x1391974", Offset = "0x1391974", VA = "0x1391974")]
		public SequencerCommandLoadLevel()
		{
		}
	}
	[Token(Token = "0x2000391")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0C1F8", Offset = "0xA0C1F8")]
	public class SequencerCommandLookAt : SequencerCommand
	{
		[Token(Token = "0x400118F")]
		private const float SmoothMoveCutoff = 0.05f;

		[Token(Token = "0x4001190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform target;

		[Token(Token = "0x4001191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform subject;

		[Token(Token = "0x4001192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float duration;

		[Token(Token = "0x4001193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float startTime;

		[Token(Token = "0x4001194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float endTime;

		[Token(Token = "0x4001195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Quaternion originalRotation;

		[Token(Token = "0x4001196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Quaternion targetRotation;

		[Token(Token = "0x6001CED")]
		[Address(RVA = "0x1391984", Offset = "0x1391984", VA = "0x1391984")]
		public void Start()
		{
		}

		[Token(Token = "0x6001CEE")]
		[Address(RVA = "0x13920F8", Offset = "0x13920F8", VA = "0x13920F8")]
		public void Update()
		{
		}

		[Token(Token = "0x6001CEF")]
		[Address(RVA = "0x139225C", Offset = "0x139225C", VA = "0x139225C")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6001CF0")]
		[Address(RVA = "0x1392334", Offset = "0x1392334", VA = "0x1392334")]
		public SequencerCommandLookAt()
		{
		}
	}
	[Token(Token = "0x2000392")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0C230", Offset = "0xA0C230")]
	public class SequencerCommandMoveTo : SequencerCommand
	{
		[Token(Token = "0x4001197")]
		private const float SmoothMoveCutoff = 0.05f;

		[Token(Token = "0x4001198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform target;

		[Token(Token = "0x4001199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform subject;

		[Token(Token = "0x400119A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Rigidbody subjectRigidbody;

		[Token(Token = "0x400119B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float duration;

		[Token(Token = "0x400119C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float startTime;

		[Token(Token = "0x400119D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float endTime;

		[Token(Token = "0x400119E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 originalPosition;

		[Token(Token = "0x400119F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Quaternion originalRotation;

		[Token(Token = "0x6001CF1")]
		[Address(RVA = "0x1392344", Offset = "0x1392344", VA = "0x1392344")]
		public void Start()
		{
		}

		[Token(Token = "0x6001CF2")]
		[Address(RVA = "0x1392910", Offset = "0x1392910", VA = "0x1392910")]
		private void SetPosition(Vector3 newPosition, Quaternion newRotation)
		{
		}

		[Token(Token = "0x6001CF3")]
		[Address(RVA = "0x1392A68", Offset = "0x1392A68", VA = "0x1392A68")]
		public void Update()
		{
		}

		[Token(Token = "0x6001CF4")]
		[Address(RVA = "0x1392C70", Offset = "0x1392C70", VA = "0x1392C70")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6001CF5")]
		[Address(RVA = "0x1392DD8", Offset = "0x1392DD8", VA = "0x1392DD8")]
		public SequencerCommandMoveTo()
		{
		}
	}
	[Token(Token = "0x2000393")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0C268", Offset = "0xA0C268")]
	public class SequencerCommandQTE : SequencerCommand
	{
		[Token(Token = "0x40011A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int index;

		[Token(Token = "0x40011A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float stopTime;

		[Token(Token = "0x40011A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string button;

		[Token(Token = "0x40011A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string variableName;

		[Token(Token = "0x40011A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private string variableQTEValue;

		[Token(Token = "0x40011A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private FieldType variableType;

		[Token(Token = "0x6001CF6")]
		[Address(RVA = "0x1392DE8", Offset = "0x1392DE8", VA = "0x1392DE8")]
		public void Start()
		{
		}

		[Token(Token = "0x6001CF7")]
		[Address(RVA = "0x1393274", Offset = "0x1393274", VA = "0x1393274")]
		private FieldType GetVariableType()
		{
			return default(FieldType);
		}

		[Token(Token = "0x6001CF8")]
		[Address(RVA = "0x1393350", Offset = "0x1393350", VA = "0x1393350")]
		public void Update()
		{
		}

		[Token(Token = "0x6001CF9")]
		[Address(RVA = "0x13936FC", Offset = "0x13936FC", VA = "0x13936FC")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6001CFA")]
		[Address(RVA = "0x13937E0", Offset = "0x13937E0", VA = "0x13937E0")]
		public SequencerCommandQTE()
		{
		}
	}
	[Token(Token = "0x2000394")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0C2A0", Offset = "0xA0C2A0")]
	public class SequencerCommandSwitchCamera : SequencerCommand
	{
		[Token(Token = "0x6001CFB")]
		[Address(RVA = "0x13937F0", Offset = "0x13937F0", VA = "0x13937F0")]
		public void Start()
		{
		}

		[Token(Token = "0x6001CFC")]
		[Address(RVA = "0x1393B08", Offset = "0x1393B08", VA = "0x1393B08")]
		public SequencerCommandSwitchCamera()
		{
		}
	}
	[Token(Token = "0x2000395")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0C2D8", Offset = "0xA0C2D8")]
	public class SequencerCommandTextInput : SequencerCommand
	{
		[Token(Token = "0x40011A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ITextFieldUI textFieldUI;

		[Token(Token = "0x40011A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string variableName;

		[Token(Token = "0x40011A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool acceptedText;

		[Token(Token = "0x6001CFD")]
		[Address(RVA = "0x1393B18", Offset = "0x1393B18", VA = "0x1393B18")]
		public void Start()
		{
		}

		[Token(Token = "0x6001CFE")]
		[Address(RVA = "0x1394218", Offset = "0x1394218", VA = "0x1394218")]
		private Transform FindTextFieldUIObject()
		{
			return null;
		}

		[Token(Token = "0x6001CFF")]
		[Address(RVA = "0x139438C", Offset = "0x139438C", VA = "0x139438C")]
		private Transform FindChildRecursive(Transform t, string childName)
		{
			return null;
		}

		[Token(Token = "0x6001D00")]
		[Address(RVA = "0x13946F8", Offset = "0x13946F8", VA = "0x13946F8")]
		public void OnAcceptedText(string text)
		{
		}

		[Token(Token = "0x6001D01")]
		[Address(RVA = "0x1394858", Offset = "0x1394858", VA = "0x1394858")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6001D02")]
		[Address(RVA = "0x139491C", Offset = "0x139491C", VA = "0x139491C")]
		public SequencerCommandTextInput()
		{
		}
	}
	[Token(Token = "0x2000396")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0C310", Offset = "0xA0C310")]
	public class SequencerCommandVoice : SequencerCommand
	{
		[Token(Token = "0x2000679")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0E068", Offset = "0xA0E068")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x4001FFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SequencerCommandVoice <>4__this;

			[Token(Token = "0x4001FFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string audioClipName;

			[Token(Token = "0x4002000")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string animationClipName;

			[Token(Token = "0x6002BF8")]
			[Address(RVA = "0x1396430", Offset = "0x1396430", VA = "0x1396430")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x6002BF9")]
			[Address(RVA = "0x139685C", Offset = "0x139685C", VA = "0x139685C")]
			internal void <Start>b__0(UnityEngine.Object asset)
			{
			}
		}

		[Token(Token = "0x40011A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float stopTime;

		[Token(Token = "0x40011AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform subject;

		[Token(Token = "0x40011AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string finalClipName;

		[Token(Token = "0x40011AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Animation anim;

		[Token(Token = "0x40011AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Animator animator;

		[Token(Token = "0x40011AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private AudioSource audioSource;

		[Token(Token = "0x40011AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private AudioClip audioClip;

		[Token(Token = "0x6001D03")]
		[Address(RVA = "0x1395CF4", Offset = "0x1395CF4", VA = "0x1395CF4")]
		public void Start()
		{
		}

		[Token(Token = "0x6001D04")]
		[Address(RVA = "0x1396438", Offset = "0x1396438", VA = "0x1396438")]
		public void Update()
		{
		}

		[Token(Token = "0x6001D05")]
		[Address(RVA = "0x13964B0", Offset = "0x13964B0", VA = "0x13964B0")]
		public void OnDialogueSystemPause()
		{
		}

		[Token(Token = "0x6001D06")]
		[Address(RVA = "0x1396544", Offset = "0x1396544", VA = "0x1396544")]
		public void OnDialogueSystemUnpause()
		{
		}

		[Token(Token = "0x6001D07")]
		[Address(RVA = "0x13965D8", Offset = "0x13965D8", VA = "0x13965D8")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6001D08")]
		[Address(RVA = "0x13967F4", Offset = "0x13967F4", VA = "0x13967F4")]
		public SequencerCommandVoice()
		{
		}
	}
	[Token(Token = "0x2000397")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0C348", Offset = "0xA0C348")]
	public class SequencerCommandWaitForMessage : SequencerCommand
	{
		[Token(Token = "0x40011B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string requiredMessage;

		[Token(Token = "0x17000343")]
		public string RequiredMessage
		{
			[Token(Token = "0x6001D09")]
			[Address(RVA = "0x139701C", Offset = "0x139701C", VA = "0x139701C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D0A")]
		[Address(RVA = "0x1397024", Offset = "0x1397024", VA = "0x1397024")]
		public void Start()
		{
		}

		[Token(Token = "0x6001D0B")]
		[Address(RVA = "0x139719C", Offset = "0x139719C", VA = "0x139719C")]
		public void OnSequencerMessage(string message)
		{
		}

		[Token(Token = "0x6001D0C")]
		[Address(RVA = "0x139730C", Offset = "0x139730C", VA = "0x139730C")]
		public SequencerCommandWaitForMessage()
		{
		}
	}
	[Token(Token = "0x2000398")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0C380", Offset = "0xA0C380")]
	public class SequencerCommandZoom2D : SequencerCommand
	{
		[Token(Token = "0x40011B1")]
		private const float SmoothMoveCutoff = 0.05f;

		[Token(Token = "0x40011B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool original;

		[Token(Token = "0x40011B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform subject;

		[Token(Token = "0x40011B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 targetPosition;

		[Token(Token = "0x40011B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 originalPosition;

		[Token(Token = "0x40011B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float targetSize;

		[Token(Token = "0x40011B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float originalSize;

		[Token(Token = "0x40011B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float duration;

		[Token(Token = "0x40011B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float startTime;

		[Token(Token = "0x40011BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float endTime;

		[Token(Token = "0x6001D0D")]
		[Address(RVA = "0x139731C", Offset = "0x139731C", VA = "0x139731C")]
		public void Start()
		{
		}

		[Token(Token = "0x6001D0E")]
		[Address(RVA = "0x1397930", Offset = "0x1397930", VA = "0x1397930")]
		public void Update()
		{
		}

		[Token(Token = "0x6001D0F")]
		[Address(RVA = "0x1397B84", Offset = "0x1397B84", VA = "0x1397B84")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6001D10")]
		[Address(RVA = "0x1397CE8", Offset = "0x1397CE8", VA = "0x1397CE8")]
		public SequencerCommandZoom2D()
		{
		}
	}
	[Token(Token = "0x2000399")]
	public class QueuedSequencerCommand
	{
		[Token(Token = "0x40011BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string command;

		[Token(Token = "0x40011BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string[] parameters;

		[Token(Token = "0x40011BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float startTime;

		[Token(Token = "0x40011BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string messageToWaitFor;

		[Token(Token = "0x40011BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string endMessage;

		[Token(Token = "0x40011C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool required;

		[Token(Token = "0x40011C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform speaker;

		[Token(Token = "0x40011C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform listener;

		[Token(Token = "0x6001D11")]
		[Address(RVA = "0x1389D44", Offset = "0x1389D44", VA = "0x1389D44")]
		public QueuedSequencerCommand(string command, string[] parameters, float startTime, string messageToWaitFor, string endMessage, bool required, [Optional] Transform speaker, [Optional] Transform listener)
		{
		}
	}
	[Token(Token = "0x200039A")]
	public class SequencerCommandTimeline : SequencerCommand
	{
		[Token(Token = "0x200067A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0E078", Offset = "0xA0E078")]
		private sealed class <Start>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002001")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002002")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002003")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SequencerCommandTimeline <>4__this;

			[Token(Token = "0x170005B7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002BFD")]
				[Address(RVA = "0x1395C84", Offset = "0x1395C84", VA = "0x1395C84", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005B8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BFF")]
				[Address(RVA = "0x1395CEC", Offset = "0x1395CEC", VA = "0x1395CEC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BFA")]
			[Address(RVA = "0x13949F4", Offset = "0x13949F4", VA = "0x13949F4")]
			[DebuggerHidden]
			public <Start>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6002BFB")]
			[Address(RVA = "0x1395924", Offset = "0x1395924", VA = "0x1395924", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002BFC")]
			[Address(RVA = "0x1395928", Offset = "0x1395928", VA = "0x1395928", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BFE")]
			[Address(RVA = "0x1395C8C", Offset = "0x1395C8C", VA = "0x1395C8C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200067B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0E088", Offset = "0xA0E088")]
		private sealed class <Proceed>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002004")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002005")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002006")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SequencerCommandTimeline <>4__this;

			[Token(Token = "0x4002007")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private double <endTime>5__2;

			[Token(Token = "0x4002008")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private double <resumedEndTime>5__3;

			[Token(Token = "0x170005B9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C03")]
				[Address(RVA = "0x13958B4", Offset = "0x13958B4", VA = "0x13958B4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005BA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C05")]
				[Address(RVA = "0x139591C", Offset = "0x139591C", VA = "0x139591C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C00")]
			[Address(RVA = "0x1394A90", Offset = "0x1394A90", VA = "0x1394A90")]
			[DebuggerHidden]
			public <Proceed>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6002C01")]
			[Address(RVA = "0x1394E44", Offset = "0x1394E44", VA = "0x1394E44", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C02")]
			[Address(RVA = "0x1394E48", Offset = "0x1394E48", VA = "0x1394E48", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C04")]
			[Address(RVA = "0x13958BC", Offset = "0x13958BC", VA = "0x13958BC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40011C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private PlayableDirector playableDirector;

		[Token(Token = "0x40011C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private TimelineAsset timelineAsset;

		[Token(Token = "0x40011C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string mode;

		[Token(Token = "0x40011C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform subject;

		[Token(Token = "0x40011C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool nostop;

		[Token(Token = "0x40011C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		private bool nowait;

		[Token(Token = "0x40011C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		private bool mustDestroyPlayableDirector;

		[Token(Token = "0x40011CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
		private bool mustDestroyPlayableAsset;

		[Token(Token = "0x6001D12")]
		[Address(RVA = "0x1394984", Offset = "0x1394984", VA = "0x1394984")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA2E8D8", Offset = "0xA2E8D8")]
		public IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6001D13")]
		[Address(RVA = "0x1394A20", Offset = "0x1394A20", VA = "0x1394A20")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA2E93C", Offset = "0xA2E93C")]
		private IEnumerator Proceed()
		{
			return null;
		}

		[Token(Token = "0x6001D14")]
		[Address(RVA = "0x1394ABC", Offset = "0x1394ABC", VA = "0x1394ABC")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6001D15")]
		[Address(RVA = "0x1394C08", Offset = "0x1394C08", VA = "0x1394C08")]
		public SequencerCommandTimeline()
		{
		}

		[Token(Token = "0x6001D16")]
		[Address(RVA = "0x1394C18", Offset = "0x1394C18", VA = "0x1394C18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2E9A0", Offset = "0xA2E9A0")]
		private void <Start>b__8_0(UnityEngine.Object asset)
		{
		}
	}
}
namespace PixelCrushers.DialogueSystem.ChatMapper
{
	[Token(Token = "0x200039B")]
	public static class ChatMapperUtility
	{
		[Token(Token = "0x6001D17")]
		[Address(RVA = "0x1434A30", Offset = "0x1434A30", VA = "0x1434A30")]
		public static ChatMapperProject Load(TextAsset xmlFile)
		{
			return null;
		}

		[Token(Token = "0x6001D18")]
		[Address(RVA = "0x1434B68", Offset = "0x1434B68", VA = "0x1434B68")]
		public static ChatMapperProject Load(string filename)
		{
			return null;
		}

		[Token(Token = "0x6001D19")]
		[Address(RVA = "0x1434C88", Offset = "0x1434C88", VA = "0x1434C88")]
		public static void Save(ChatMapperProject chatMapperProject, string filename)
		{
		}
	}
	[Token(Token = "0x200039C")]
	[AttributeAttribute(Name = "XmlRootAttribute", RVA = "0xA0C3B8", Offset = "0xA0C3B8")]
	public class ChatMapperProject
	{
		[Token(Token = "0x40011CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "XmlAttributeAttribute", RVA = "0xA1E244", Offset = "0xA1E244")]
		public string Title;

		[Token(Token = "0x40011CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "XmlAttributeAttribute", RVA = "0xA1E27C", Offset = "0xA1E27C")]
		public string Version;

		[Token(Token = "0x40011CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "XmlAttributeAttribute", RVA = "0xA1E2B4", Offset = "0xA1E2B4")]
		public string Author;

		[Token(Token = "0x40011CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "XmlAttributeAttribute", RVA = "0xA1E2EC", Offset = "0xA1E2EC")]
		public string EmphasisColor1Label;

		[Token(Token = "0x40011CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "XmlAttributeAttribute", RVA = "0xA1E324", Offset = "0xA1E324")]
		public string EmphasisColor1;

		[Token(Token = "0x40011D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "XmlAttributeAttribute", RVA = "0xA1E35C", Offset = "0xA1E35C")]
		public string EmphasisStyle1;

		[Token(Token = "0x40011D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "XmlAttributeAttribute", RVA = "0xA1E394", Offset = "0xA1E394")]
		public string EmphasisColor2Label;

		[Token(Token = "0x40011D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "XmlAttributeAttribute", RVA = "0xA1E3CC", Offset = "0xA1E3CC")]
		public string EmphasisColor2;

		[Token(Token = "0x40011D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "XmlAttributeAttribute", RVA = "0xA1E404", Offset = "0xA1E404")]
		public string EmphasisStyle2;

		[Token(Token = "0x40011D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "XmlAttributeAttribute", RVA = "0xA1E43C", Offset = "0xA1E43C")]
		public string EmphasisColor3Label;

		[Token(Token = "0x40011D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "XmlAttributeAttribute", RVA = "0xA1E474", Offset = "0xA1E474")]
		public string EmphasisColor3;

		[Token(Token = "0x40011D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "XmlAttributeAttribute", RVA = "0xA1E4AC", Offset = "0xA1E4AC")]
		public string EmphasisStyle3;

		[Token(Token = "0x40011D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "XmlAttributeAttribute", RVA = "0xA1E4E4", Offset = "0xA1E4E4")]
		public string EmphasisColor4Label;

		[Token(Token = "0x40011D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "XmlAttributeAttribute", RVA = "0xA1E51C", Offset = "0xA1E51C")]
		public string EmphasisColor4;

		[Token(Token = "0x40011D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "XmlAttributeAttribute", RVA = "0xA1E554", Offset = "0xA1E554")]
		public string EmphasisStyle4;

		[Token(Token = "0x40011DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public string Description;

		[Token(Token = "0x40011DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public string UserScript;

		[Token(Token = "0x40011DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Assets Assets;

		[Token(Token = "0x6001D1A")]
		[Address(RVA = "0x1434548", Offset = "0x1434548", VA = "0x1434548")]
		public DialogueDatabase ToDialogueDatabase()
		{
			return null;
		}

		[Token(Token = "0x6001D1B")]
		[Address(RVA = "0x14349AC", Offset = "0x14349AC", VA = "0x14349AC")]
		public ChatMapperProject()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200039D")]
	public class Assets
	{
		[Token(Token = "0x40011DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "XmlArrayAttribute", RVA = "0xA1E58C", Offset = "0xA1E58C")]
		[AttributeAttribute(Name = "XmlArrayItemAttribute", RVA = "0xA1E58C", Offset = "0xA1E58C")]
		public List<Actor> Actors;

		[Token(Token = "0x40011DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "XmlArrayAttribute", RVA = "0xA1E5EC", Offset = "0xA1E5EC")]
		[AttributeAttribute(Name = "XmlArrayItemAttribute", RVA = "0xA1E5EC", Offset = "0xA1E5EC")]
		public List<Item> Items;

		[Token(Token = "0x40011DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "XmlArrayAttribute", RVA = "0xA1E64C", Offset = "0xA1E64C")]
		[AttributeAttribute(Name = "XmlArrayItemAttribute", RVA = "0xA1E64C", Offset = "0xA1E64C")]
		public List<Location> Locations;

		[Token(Token = "0x40011E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "XmlArrayAttribute", RVA = "0xA1E6AC", Offset = "0xA1E6AC")]
		[AttributeAttribute(Name = "XmlArrayItemAttribute", RVA = "0xA1E6AC", Offset = "0xA1E6AC")]
		public List<Conversation> Conversations;

		[Token(Token = "0x40011E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "XmlArrayAttribute", RVA = "0xA1E70C", Offset = "0xA1E70C")]
		[AttributeAttribute(Name = "XmlArrayItemAttribute", RVA = "0xA1E70C", Offset = "0xA1E70C")]
		public List<UserVariable> UserVariables;

		[Token(Token = "0x6001D1C")]
		[Address(RVA = "0x1434438", Offset = "0x1434438", VA = "0x1434438")]
		public Assets()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200039E")]
	public class Actor
	{
		[Token(Token = "0x40011E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "XmlAttributeAttribute", RVA = "0xA1E76C", Offset = "0xA1E76C")]
		public int ID;

		[Token(Token = "0x40011E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "XmlArrayAttribute", RVA = "0xA1E7A4", Offset = "0xA1E7A4")]
		[AttributeAttribute(Name = "XmlArrayItemAttribute", RVA = "0xA1E7A4", Offset = "0xA1E7A4")]
		public List<Field> Fields;

		[Token(Token = "0x6001D1D")]
		[Address(RVA = "0x14343C8", Offset = "0x14343C8", VA = "0x14343C8")]
		public Actor()
		{
		}
	}
	[Token(Token = "0x200039F")]
	public class Item
	{
		[Token(Token = "0x40011E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "XmlAttributeAttribute", RVA = "0xA1E804", Offset = "0xA1E804")]
		public int ID;

		[Token(Token = "0x40011E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "XmlArrayAttribute", RVA = "0xA1E83C", Offset = "0xA1E83C")]
		[AttributeAttribute(Name = "XmlArrayItemAttribute", RVA = "0xA1E83C", Offset = "0xA1E83C")]
		public List<Field> Fields;

		[Token(Token = "0x6001D1E")]
		[Address(RVA = "0x1434ED8", Offset = "0x1434ED8", VA = "0x1434ED8")]
		public Item()
		{
		}
	}
	[Token(Token = "0x20003A0")]
	public class Location
	{
		[Token(Token = "0x40011E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "XmlAttributeAttribute", RVA = "0xA1E89C", Offset = "0xA1E89C")]
		public int ID;

		[Token(Token = "0x40011E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "XmlArrayAttribute", RVA = "0xA1E8D4", Offset = "0xA1E8D4")]
		[AttributeAttribute(Name = "XmlArrayItemAttribute", RVA = "0xA1E8D4", Offset = "0xA1E8D4")]
		public List<Field> Fields;

		[Token(Token = "0x6001D1F")]
		[Address(RVA = "0x1434F50", Offset = "0x1434F50", VA = "0x1434F50")]
		public Location()
		{
		}
	}
	[Token(Token = "0x20003A1")]
	public class Conversation
	{
		[Token(Token = "0x40011E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "XmlAttributeAttribute", RVA = "0xA1E934", Offset = "0xA1E934")]
		public int ID;

		[Token(Token = "0x40011E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "XmlAttributeAttribute", RVA = "0xA1E96C", Offset = "0xA1E96C")]
		public string NodeColor;

		[Token(Token = "0x40011EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "XmlAttributeAttribute", RVA = "0xA1E9A4", Offset = "0xA1E9A4")]
		public string LockedMode;

		[Token(Token = "0x40011EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "XmlArrayAttribute", RVA = "0xA1E9DC", Offset = "0xA1E9DC")]
		[AttributeAttribute(Name = "XmlArrayItemAttribute", RVA = "0xA1E9DC", Offset = "0xA1E9DC")]
		public List<Field> Fields;

		[Token(Token = "0x40011EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "XmlArrayAttribute", RVA = "0xA1EA3C", Offset = "0xA1EA3C")]
		[AttributeAttribute(Name = "XmlArrayItemAttribute", RVA = "0xA1EA3C", Offset = "0xA1EA3C")]
		public List<DialogEntry> DialogEntries;

		[Token(Token = "0x6001D20")]
		[Address(RVA = "0x1434DA0", Offset = "0x1434DA0", VA = "0x1434DA0")]
		public Conversation()
		{
		}
	}
	[Token(Token = "0x20003A2")]
	public class DialogEntry
	{
		[Token(Token = "0x40011ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "XmlAttributeAttribute", RVA = "0xA1EA9C", Offset = "0xA1EA9C")]
		public int ID;

		[Token(Token = "0x40011EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "XmlAttributeAttribute", RVA = "0xA1EAD4", Offset = "0xA1EAD4")]
		public bool IsRoot;

		[Token(Token = "0x40011EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		[AttributeAttribute(Name = "XmlAttributeAttribute", RVA = "0xA1EB0C", Offset = "0xA1EB0C")]
		public bool IsGroup;

		[Token(Token = "0x40011F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "XmlAttributeAttribute", RVA = "0xA1EB44", Offset = "0xA1EB44")]
		public string NodeColor;

		[Token(Token = "0x40011F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "XmlAttributeAttribute", RVA = "0xA1EB7C", Offset = "0xA1EB7C")]
		public bool DelaySimStatus;

		[Token(Token = "0x40011F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "XmlAttributeAttribute", RVA = "0xA1EBB4", Offset = "0xA1EBB4")]
		public string FalseCondtionAction;

		[Token(Token = "0x40011F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "XmlAttributeAttribute", RVA = "0xA1EBEC", Offset = "0xA1EBEC")]
		public string ConditionPriority;

		[Token(Token = "0x40011F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "XmlArrayAttribute", RVA = "0xA1EC24", Offset = "0xA1EC24")]
		[AttributeAttribute(Name = "XmlArrayItemAttribute", RVA = "0xA1EC24", Offset = "0xA1EC24")]
		public List<Field> Fields;

		[Token(Token = "0x40011F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "XmlArrayAttribute", RVA = "0xA1EC84", Offset = "0xA1EC84")]
		[AttributeAttribute(Name = "XmlArrayItemAttribute", RVA = "0xA1EC84", Offset = "0xA1EC84")]
		public List<Link> OutgoingLinks;

		[Token(Token = "0x40011F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string ConditionsString;

		[Token(Token = "0x40011F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string UserScript;

		[Token(Token = "0x6001D21")]
		[Address(RVA = "0x1434E38", Offset = "0x1434E38", VA = "0x1434E38")]
		public DialogEntry()
		{
		}
	}
	[Token(Token = "0x20003A3")]
	public class Link
	{
		[Token(Token = "0x40011F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "XmlAttributeAttribute", RVA = "0xA1ECE4", Offset = "0xA1ECE4")]
		public int ConversationID;

		[Token(Token = "0x40011F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "XmlAttributeAttribute", RVA = "0xA1ED1C", Offset = "0xA1ED1C")]
		public int OriginConvoID;

		[Token(Token = "0x40011FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "XmlAttributeAttribute", RVA = "0xA1ED54", Offset = "0xA1ED54")]
		public int DestinationConvoID;

		[Token(Token = "0x40011FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "XmlAttributeAttribute", RVA = "0xA1ED8C", Offset = "0xA1ED8C")]
		public int OriginDialogID;

		[Token(Token = "0x40011FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "XmlAttributeAttribute", RVA = "0xA1EDC4", Offset = "0xA1EDC4")]
		public int DestinationDialogID;

		[Token(Token = "0x40011FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "XmlAttributeAttribute", RVA = "0xA1EDFC", Offset = "0xA1EDFC")]
		public bool IsConnector;

		[Token(Token = "0x6001D22")]
		[Address(RVA = "0x1434F48", Offset = "0x1434F48", VA = "0x1434F48")]
		public Link()
		{
		}
	}
	[Token(Token = "0x20003A4")]
	public class UserVariable
	{
		[Token(Token = "0x40011FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "XmlArrayAttribute", RVA = "0xA1EE34", Offset = "0xA1EE34")]
		[AttributeAttribute(Name = "XmlArrayItemAttribute", RVA = "0xA1EE34", Offset = "0xA1EE34")]
		public List<Field> Fields;

		[Token(Token = "0x6001D23")]
		[Address(RVA = "0x1434FC0", Offset = "0x1434FC0", VA = "0x1434FC0")]
		public UserVariable()
		{
		}
	}
	[Token(Token = "0x20003A5")]
	public class Field
	{
		[Token(Token = "0x40011FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "XmlAttributeAttribute", RVA = "0xA1EE94", Offset = "0xA1EE94")]
		public string Hint;

		[Token(Token = "0x4001200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "XmlAttributeAttribute", RVA = "0xA1EECC", Offset = "0xA1EECC")]
		public string Type;

		[Token(Token = "0x4001201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string Title;

		[Token(Token = "0x4001202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string Value;

		[Token(Token = "0x6001D24")]
		[Address(RVA = "0x1434ED0", Offset = "0x1434ED0", VA = "0x1434ED0")]
		public Field()
		{
		}
	}
}
namespace PixelCrushers.DialogueSystem.Demo
{
	[Token(Token = "0x20003A6")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0C3F0", Offset = "0xA0C3F0")]
	public class DemoMenu : MonoBehaviour
	{
		[Token(Token = "0x4001203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0xA1EF04", Offset = "0xA1EF04")]
		public string startMessage;

		[Token(Token = "0x4001204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public KeyCode menuKey;

		[Token(Token = "0x4001205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GUISkin guiSkin;

		[Token(Token = "0x4001206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool closeWhenQuestLogOpen;

		[Token(Token = "0x4001207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool lockCursorDuringPlay;

		[Token(Token = "0x4001208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEvent onOpen;

		[Token(Token = "0x4001209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEvent onClose;

		[Token(Token = "0x400120A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private QuestLogWindow questLogWindow;

		[Token(Token = "0x400120B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool isMenuOpen;

		[Token(Token = "0x400120C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Rect windowRect;

		[Token(Token = "0x400120D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private ScaledRect scaledRect;

		[Token(Token = "0x6001D25")]
		[Address(RVA = "0x147A618", Offset = "0x147A618", VA = "0x147A618")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D26")]
		[Address(RVA = "0x147A710", Offset = "0x147A710", VA = "0x147A710")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D27")]
		[Address(RVA = "0x147A95C", Offset = "0x147A95C", VA = "0x147A95C")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001D28")]
		[Address(RVA = "0x147AAB0", Offset = "0x147AAB0", VA = "0x147AAB0")]
		private void WindowFunction(int windowID)
		{
		}

		[Token(Token = "0x6001D29")]
		[Address(RVA = "0x147B370", Offset = "0x147B370", VA = "0x147B370")]
		public void Open()
		{
		}

		[Token(Token = "0x6001D2A")]
		[Address(RVA = "0x147B378", Offset = "0x147B378", VA = "0x147B378")]
		public void Close()
		{
		}

		[Token(Token = "0x6001D2B")]
		[Address(RVA = "0x147A8EC", Offset = "0x147A8EC", VA = "0x147A8EC")]
		private void SetMenuStatus(bool open)
		{
		}

		[Token(Token = "0x6001D2C")]
		[Address(RVA = "0x147A854", Offset = "0x147A854", VA = "0x147A854")]
		private bool IsQuestLogOpen()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D2D")]
		[Address(RVA = "0x147AD80", Offset = "0x147AD80", VA = "0x147AD80")]
		private void OpenQuestLog()
		{
		}

		[Token(Token = "0x6001D2E")]
		[Address(RVA = "0x147AE24", Offset = "0x147AE24", VA = "0x147AE24")]
		private void SaveGame()
		{
		}

		[Token(Token = "0x6001D2F")]
		[Address(RVA = "0x147AF94", Offset = "0x147AF94", VA = "0x147AF94")]
		private void LoadGame()
		{
		}

		[Token(Token = "0x6001D30")]
		[Address(RVA = "0x147B214", Offset = "0x147B214", VA = "0x147B214")]
		private void ClearSavedGame()
		{
		}

		[Token(Token = "0x6001D31")]
		[Address(RVA = "0x147B380", Offset = "0x147B380", VA = "0x147B380")]
		public DemoMenu()
		{
		}
	}
	[Token(Token = "0x20003A7")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0C428", Offset = "0xA0C428")]
	public class DieOnTakeDamage : MonoBehaviour
	{
		[Token(Token = "0x400120E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject deadPrefab;

		[Token(Token = "0x6001D32")]
		[Address(RVA = "0x147B4EC", Offset = "0x147B4EC", VA = "0x147B4EC")]
		private void TakeDamage(float damage)
		{
		}

		[Token(Token = "0x6001D33")]
		[Address(RVA = "0x147B6B0", Offset = "0x147B6B0", VA = "0x147B6B0")]
		private void Damage(float damage)
		{
		}

		[Token(Token = "0x6001D34")]
		[Address(RVA = "0x147B6B4", Offset = "0x147B6B4", VA = "0x147B6B4")]
		public DieOnTakeDamage()
		{
		}
	}
	[Token(Token = "0x20003A8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0C460", Offset = "0xA0C460")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA0C460", Offset = "0xA0C460")]
	public class NavigateOnMouseClick : MonoBehaviour
	{
		[Token(Token = "0x200067C")]
		public enum MouseButtonType
		{
			[Token(Token = "0x400200A")]
			Left,
			[Token(Token = "0x400200B")]
			Right,
			[Token(Token = "0x400200C")]
			Middle
		}

		[Token(Token = "0x400120F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string animatorSpeedParameter;

		[Token(Token = "0x4001210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float stoppingDistance;

		[Token(Token = "0x4001211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public MouseButtonType mouseButton;

		[Token(Token = "0x4001212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool ignoreClicksOnUI;

		[Token(Token = "0x4001213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform m_myTransform;

		[Token(Token = "0x4001214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Animator m_animator;

		[Token(Token = "0x4001215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private NavMeshAgent m_navMeshAgent;

		[Token(Token = "0x6001D35")]
		[Address(RVA = "0x147B6BC", Offset = "0x147B6BC", VA = "0x147B6BC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D36")]
		[Address(RVA = "0x147B7F8", Offset = "0x147B7F8", VA = "0x147B7F8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D37")]
		[Address(RVA = "0x147BBA0", Offset = "0x147BBA0", VA = "0x147BBA0")]
		public NavigateOnMouseClick()
		{
		}
	}
	[Token(Token = "0x20003A9")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0C4E8", Offset = "0xA0C4E8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA0C4E8", Offset = "0xA0C4E8")]
	public class SimpleController : MonoBehaviour
	{
		[Token(Token = "0x4001216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA1EF14", Offset = "0xA1EF14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1EF14", Offset = "0xA1EF14")]
		public string forwardSpeedFloatParameter;

		[Token(Token = "0x4001217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1EF74", Offset = "0xA1EF74")]
		public string lateralSpeedFloatParameter;

		[Token(Token = "0x4001218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1EFAC", Offset = "0xA1EFAC")]
		public string twoHandWeaponBoolParameter;

		[Token(Token = "0x4001219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1EFE4", Offset = "0xA1EFE4")]
		public string attackTriggerParameter;

		[Token(Token = "0x400121A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA1F01C", Offset = "0xA1F01C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1F01C", Offset = "0xA1F01C")]
		public float runSpeed;

		[Token(Token = "0x400121B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1F07C", Offset = "0xA1F07C")]
		public float mouseSensitivityX;

		[Token(Token = "0x400121C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float mouseSensitivityY;

		[Token(Token = "0x400121D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1F0B4", Offset = "0xA1F0B4")]
		public float mouseMinimumY;

		[Token(Token = "0x400121E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float mouseMaximumY;

		[Token(Token = "0x400121F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA1F0EC", Offset = "0xA1F0EC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1F0EC", Offset = "0xA1F0EC")]
		public bool useTwoHandWeapon;

		[Token(Token = "0x4001220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1F14C", Offset = "0xA1F14C")]
		public float hitDelay;

		[Token(Token = "0x4001221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1F184", Offset = "0xA1F184")]
		public AudioClip attackSound;

		[Token(Token = "0x4001222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1F1BC", Offset = "0xA1F1BC")]
		public float hitDistance;

		[Token(Token = "0x4001223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1F1F4", Offset = "0xA1F1F4")]
		public LayerMask hitLayerMask;

		[Token(Token = "0x4001224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1F22C", Offset = "0xA1F22C")]
		public string damageMessage;

		[Token(Token = "0x4001225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1F264", Offset = "0xA1F264")]
		public float weaponDamage;

		[Token(Token = "0x4001226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA1F29C", Offset = "0xA1F29C")]
		public string horizontalAxis;

		[Token(Token = "0x4001227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public string verticalAxis;

		[Token(Token = "0x4001228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public string mouseXAxis;

		[Token(Token = "0x4001229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public string mouseYAxis;

		[Token(Token = "0x400122A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public string attackButton;

		[Token(Token = "0x400122B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private CharacterController m_controller;

		[Token(Token = "0x400122C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private SmoothCameraWithBumper m_smoothCamera;

		[Token(Token = "0x400122D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Animator m_animator;

		[Token(Token = "0x400122E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float m_cameraRotationY;

		[Token(Token = "0x400122F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private Quaternion m_originalCameraRotation;

		[Token(Token = "0x4001230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private bool m_firing;

		[Token(Token = "0x6001D38")]
		[Address(RVA = "0x147BC08", Offset = "0x147BC08", VA = "0x147BC08")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D39")]
		[Address(RVA = "0x147BC90", Offset = "0x147BC90", VA = "0x147BC90")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D3A")]
		[Address(RVA = "0x147BCD8", Offset = "0x147BCD8", VA = "0x147BCD8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D3B")]
		[Address(RVA = "0x147C4A8", Offset = "0x147C4A8", VA = "0x147C4A8")]
		private void OnFired()
		{
		}

		[Token(Token = "0x6001D3C")]
		[Address(RVA = "0x147C3C0", Offset = "0x147C3C0", VA = "0x147C3C0")]
		private void SetSpeed(float forwardSpeed, float lateralSpeed)
		{
		}

		[Token(Token = "0x6001D3D")]
		[Address(RVA = "0x147C67C", Offset = "0x147C67C", VA = "0x147C67C")]
		private void OnConversationStart(Transform actor)
		{
		}

		[Token(Token = "0x6001D3E")]
		[Address(RVA = "0x147C310", Offset = "0x147C310", VA = "0x147C310")]
		public static float ClampAngle(float angle, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x6001D3F")]
		[Address(RVA = "0x147C6E8", Offset = "0x147C6E8", VA = "0x147C6E8")]
		public SimpleController()
		{
		}
	}
	[Token(Token = "0x20003AA")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0C570", Offset = "0xA0C570")]
	public class SmoothCameraWithBumper : MonoBehaviour
	{
		[Token(Token = "0x4001231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x4001232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float distance;

		[Token(Token = "0x4001233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float height;

		[Token(Token = "0x4001234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float damping;

		[Token(Token = "0x4001235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private bool smoothRotation;

		[Token(Token = "0x4001236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float rotationDamping;

		[Token(Token = "0x4001237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private Vector3 targetLookAtOffset;

		[Token(Token = "0x4001238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float bumperDistanceCheck;

		[Token(Token = "0x4001239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float bumperCameraHeight;

		[Token(Token = "0x400123A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Vector3 bumperRayOffset;

		[Token(Token = "0x400123B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1F364", Offset = "0xA1F364")]
		private Quaternion <adjustQuaternion>k__BackingField;

		[Token(Token = "0x400123C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Quaternion originalRotation;

		[Token(Token = "0x17000344")]
		public Quaternion adjustQuaternion
		{
			[Token(Token = "0x6001D40")]
			[Address(RVA = "0x147C80C", Offset = "0x147C80C", VA = "0x147C80C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2E9B0", Offset = "0xA2E9B0")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6001D41")]
			[Address(RVA = "0x147C818", Offset = "0x147C818", VA = "0x147C818")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2E9C0", Offset = "0xA2E9C0")]
			set
			{
			}
		}

		[Token(Token = "0x6001D42")]
		[Address(RVA = "0x147C824", Offset = "0x147C824", VA = "0x147C824")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D43")]
		[Address(RVA = "0x147C894", Offset = "0x147C894", VA = "0x147C894")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D44")]
		[Address(RVA = "0x147C8D0", Offset = "0x147C8D0", VA = "0x147C8D0")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001D45")]
		[Address(RVA = "0x147CE60", Offset = "0x147CE60", VA = "0x147CE60")]
		public SmoothCameraWithBumper()
		{
		}
	}
}
namespace PixelCrushers.DialogueSystem.Demo.Wrappers
{
	[Token(Token = "0x20003AB")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0C5A8", Offset = "0xA0C5A8")]
	public class DemoMenu : PixelCrushers.DialogueSystem.Demo.DemoMenu
	{
		[Token(Token = "0x6001D46")]
		[Address(RVA = "0x147CF18", Offset = "0x147CF18", VA = "0x147CF18")]
		public DemoMenu()
		{
		}
	}
	[Token(Token = "0x20003AC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0C5E0", Offset = "0xA0C5E0")]
	public class DieOnTakeDamage : PixelCrushers.DialogueSystem.Demo.DieOnTakeDamage
	{
		[Token(Token = "0x6001D47")]
		[Address(RVA = "0x147CF1C", Offset = "0x147CF1C", VA = "0x147CF1C")]
		public DieOnTakeDamage()
		{
		}
	}
	[Token(Token = "0x20003AD")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0C618", Offset = "0xA0C618")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA0C618", Offset = "0xA0C618")]
	public class NavigateOnMouseClick : PixelCrushers.DialogueSystem.Demo.NavigateOnMouseClick
	{
		[Token(Token = "0x6001D48")]
		[Address(RVA = "0x147CF24", Offset = "0x147CF24", VA = "0x147CF24")]
		public NavigateOnMouseClick()
		{
		}
	}
	[Token(Token = "0x20003AE")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0C6A0", Offset = "0xA0C6A0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA0C6A0", Offset = "0xA0C6A0")]
	public class SimpleController : PixelCrushers.DialogueSystem.Demo.SimpleController
	{
		[Token(Token = "0x6001D49")]
		[Address(RVA = "0x147CF28", Offset = "0x147CF28", VA = "0x147CF28")]
		public SimpleController()
		{
		}
	}
	[Token(Token = "0x20003AF")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0C728", Offset = "0xA0C728")]
	public class SmoothCameraWithBumper : PixelCrushers.DialogueSystem.Demo.SmoothCameraWithBumper
	{
		[Token(Token = "0x6001D4A")]
		[Address(RVA = "0x147CF2C", Offset = "0x147CF2C", VA = "0x147CF2C")]
		public SmoothCameraWithBumper()
		{
		}
	}
}
namespace PixelCrushers.Wrappers
{
	[Token(Token = "0x20003B0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0C760", Offset = "0xA0C760")]
	public class DataSynchronizer : PixelCrushers.DataSynchronizer
	{
		[Token(Token = "0x6001D4B")]
		[Address(RVA = "0x13D23D0", Offset = "0x13D23D0", VA = "0x13D23D0")]
		public DataSynchronizer()
		{
		}
	}
	[Token(Token = "0x20003B1")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0C798", Offset = "0xA0C798")]
	public class MessageEvents : PixelCrushers.MessageEvents
	{
		[Token(Token = "0x6001D4C")]
		[Address(RVA = "0x13D2578", Offset = "0x13D2578", VA = "0x13D2578")]
		public MessageEvents()
		{
		}
	}
	[Token(Token = "0x20003B2")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0C7D0", Offset = "0xA0C7D0")]
	public class MessageSystemLogger : PixelCrushers.MessageSystemLogger
	{
		[Token(Token = "0x6001D4D")]
		[Address(RVA = "0x13D2580", Offset = "0x13D2580", VA = "0x13D2580")]
		public MessageSystemLogger()
		{
		}
	}
	[Token(Token = "0x20003B3")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0C808", Offset = "0xA0C808")]
	public class AlwaysFaceCamera : PixelCrushers.AlwaysFaceCamera
	{
		[Token(Token = "0x6001D4E")]
		[Address(RVA = "0x13D23A0", Offset = "0x13D23A0", VA = "0x13D23A0")]
		public AlwaysFaceCamera()
		{
		}
	}
	[Token(Token = "0x20003B4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0C840", Offset = "0xA0C840")]
	public class CheckPhysics2D : PixelCrushers.CheckPhysics2D
	{
		[Token(Token = "0x6001D4F")]
		[Address(RVA = "0x13D23C0", Offset = "0x13D23C0", VA = "0x13D23C0")]
		public CheckPhysics2D()
		{
		}
	}
	[Token(Token = "0x20003B5")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0C878", Offset = "0xA0C878")]
	public class DontDestroyGameObject : PixelCrushers.DontDestroyGameObject
	{
		[Token(Token = "0x6001D50")]
		[Address(RVA = "0x13D23F8", Offset = "0x13D23F8", VA = "0x13D23F8")]
		public DontDestroyGameObject()
		{
		}
	}
	[Token(Token = "0x20003B6")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0C8B0", Offset = "0xA0C8B0")]
	public class EditorNote : MonoBehaviour
	{
		[Token(Token = "0x6001D51")]
		[Address(RVA = "0x13D2400", Offset = "0x13D2400", VA = "0x13D2400")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D52")]
		[Address(RVA = "0x13D2468", Offset = "0x13D2468", VA = "0x13D2468")]
		public EditorNote()
		{
		}
	}
	[Token(Token = "0x20003B7")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0C8E8", Offset = "0xA0C8E8")]
	public class InstantiatePrefabs : PixelCrushers.InstantiatePrefabs
	{
		[Token(Token = "0x6001D53")]
		[Address(RVA = "0x13D2550", Offset = "0x13D2550", VA = "0x13D2550")]
		public InstantiatePrefabs()
		{
		}
	}
	[Token(Token = "0x20003B8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0C920", Offset = "0xA0C920")]
	public class LODManager : PixelCrushers.LODManager
	{
		[Token(Token = "0x6001D54")]
		[Address(RVA = "0x13D2568", Offset = "0x13D2568", VA = "0x13D2568")]
		public LODManager()
		{
		}
	}
	[Token(Token = "0x20003B9")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0C958", Offset = "0xA0C958")]
	public class AutoSaveLoad : PixelCrushers.AutoSaveLoad
	{
		[Token(Token = "0x6001D55")]
		[Address(RVA = "0x13D23B0", Offset = "0x13D23B0", VA = "0x13D23B0")]
		public AutoSaveLoad()
		{
		}
	}
	[Token(Token = "0x20003BA")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0C990", Offset = "0xA0C990")]
	public class SaveSystemEvents : PixelCrushers.SaveSystemEvents
	{
		[Token(Token = "0x6001D56")]
		[Address(RVA = "0x13D2614", Offset = "0x13D2614", VA = "0x13D2614")]
		public SaveSystemEvents()
		{
		}
	}
	[Token(Token = "0x20003BB")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0C9C8", Offset = "0xA0C9C8")]
	public class SaveSystemMethods : PixelCrushers.SaveSystemMethods
	{
		[Token(Token = "0x6001D57")]
		[Address(RVA = "0x13D2618", Offset = "0x13D2618", VA = "0x13D2618")]
		public SaveSystemMethods()
		{
		}
	}
	[Token(Token = "0x20003BC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0CA00", Offset = "0xA0CA00")]
	public class SaveSystemTestMenu : PixelCrushers.SaveSystemTestMenu
	{
		[Token(Token = "0x6001D58")]
		[Address(RVA = "0x13D2620", Offset = "0x13D2620", VA = "0x13D2620")]
		public SaveSystemTestMenu()
		{
		}
	}
	[Token(Token = "0x20003BD")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0CA38", Offset = "0xA0CA38")]
	public class ScenePortal : PixelCrushers.ScenePortal
	{
		[Token(Token = "0x6001D59")]
		[Address(RVA = "0x13D2624", Offset = "0x13D2624", VA = "0x13D2624")]
		public ScenePortal()
		{
		}
	}
	[Token(Token = "0x20003BE")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0CA70", Offset = "0xA0CA70")]
	public class SaveSystem : PixelCrushers.SaveSystem
	{
		[Token(Token = "0x6001D5A")]
		[Address(RVA = "0x13D25A0", Offset = "0x13D25A0", VA = "0x13D25A0")]
		public SaveSystem()
		{
		}
	}
	[Token(Token = "0x20003BF")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0CAAC", Offset = "0xA0CAAC")]
	public class ActiveSaver : PixelCrushers.ActiveSaver
	{
		[Token(Token = "0x6001D5B")]
		[Address(RVA = "0x13D2398", Offset = "0x13D2398", VA = "0x13D2398")]
		public ActiveSaver()
		{
		}
	}
	[Token(Token = "0x20003C0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0CAE4", Offset = "0xA0CAE4")]
	public class AnimatorSaver : PixelCrushers.AnimatorSaver
	{
		[Token(Token = "0x6001D5C")]
		[Address(RVA = "0x13D23A8", Offset = "0x13D23A8", VA = "0x13D23A8")]
		public AnimatorSaver()
		{
		}
	}
	[Token(Token = "0x20003C1")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0CB1C", Offset = "0xA0CB1C")]
	public class DestructibleSaver : PixelCrushers.DestructibleSaver
	{
		[Token(Token = "0x6001D5D")]
		[Address(RVA = "0x13D23E0", Offset = "0x13D23E0", VA = "0x13D23E0")]
		public DestructibleSaver()
		{
		}
	}
	[Token(Token = "0x20003C2")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0CB54", Offset = "0xA0CB54")]
	public class EnabledSaver : PixelCrushers.EnabledSaver
	{
		[Token(Token = "0x6001D5E")]
		[Address(RVA = "0x13D2470", Offset = "0x13D2470", VA = "0x13D2470")]
		public EnabledSaver()
		{
		}
	}
	[Token(Token = "0x20003C3")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0CB8C", Offset = "0xA0CB8C")]
	public class MultiActiveSaver : PixelCrushers.MultiActiveSaver
	{
		[Token(Token = "0x6001D5F")]
		[Address(RVA = "0x13D2588", Offset = "0x13D2588", VA = "0x13D2588")]
		public MultiActiveSaver()
		{
		}
	}
	[Token(Token = "0x20003C4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0CBC4", Offset = "0xA0CBC4")]
	public class PositionSaver : PixelCrushers.PositionSaver
	{
		[Token(Token = "0x6001D60")]
		[Address(RVA = "0x13D2590", Offset = "0x13D2590", VA = "0x13D2590")]
		public PositionSaver()
		{
		}
	}
	[Token(Token = "0x20003C5")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0CBFC", Offset = "0xA0CBFC")]
	public class BinaryDataSerializer : PixelCrushers.BinaryDataSerializer
	{
		[Token(Token = "0x6001D61")]
		[Address(RVA = "0x13D23B8", Offset = "0x13D23B8", VA = "0x13D23B8")]
		public BinaryDataSerializer()
		{
		}
	}
	[Token(Token = "0x20003C6")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0CC34", Offset = "0xA0CC34")]
	public class JsonDataSerializer : PixelCrushers.JsonDataSerializer
	{
		[Token(Token = "0x6001D62")]
		[Address(RVA = "0x13D2558", Offset = "0x13D2558", VA = "0x13D2558")]
		public JsonDataSerializer()
		{
		}
	}
	[Token(Token = "0x20003C7")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0CC6C", Offset = "0xA0CC6C")]
	public class SpawnedObject : PixelCrushers.SpawnedObject
	{
		[Token(Token = "0x6001D63")]
		[Address(RVA = "0x13D2628", Offset = "0x13D2628", VA = "0x13D2628")]
		public SpawnedObject()
		{
		}
	}
	[Token(Token = "0x20003C8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0CCA4", Offset = "0xA0CCA4")]
	public class SpawnedObjectManager : PixelCrushers.SpawnedObjectManager
	{
		[Token(Token = "0x6001D64")]
		[Address(RVA = "0x13D263C", Offset = "0x13D263C", VA = "0x13D263C")]
		public SpawnedObjectManager()
		{
		}
	}
	[Token(Token = "0x20003C9")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0CCDC", Offset = "0xA0CCDC")]
	public class DiskSavedGameDataStorer : PixelCrushers.DiskSavedGameDataStorer
	{
		[Token(Token = "0x6001D65")]
		[Address(RVA = "0x13D23F0", Offset = "0x13D23F0", VA = "0x13D23F0")]
		public DiskSavedGameDataStorer()
		{
		}
	}
	[Token(Token = "0x20003CA")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0CD14", Offset = "0xA0CD14")]
	public class PlayerPrefsSavedGameDataStorer : PixelCrushers.PlayerPrefsSavedGameDataStorer
	{
		[Token(Token = "0x6001D66")]
		[Address(RVA = "0x13D258C", Offset = "0x13D258C", VA = "0x13D258C")]
		public PlayerPrefsSavedGameDataStorer()
		{
		}
	}
	[Token(Token = "0x20003CB")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0CD4C", Offset = "0xA0CD4C")]
	public class StandardSceneTransitionManager : PixelCrushers.StandardSceneTransitionManager
	{
		[Token(Token = "0x6001D67")]
		[Address(RVA = "0x13D2640", Offset = "0x13D2640", VA = "0x13D2640")]
		public StandardSceneTransitionManager()
		{
		}
	}
	[Token(Token = "0x20003CC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0CD84", Offset = "0xA0CD84")]
	public class GlobalTextTable : PixelCrushers.GlobalTextTable
	{
		[Token(Token = "0x6001D68")]
		[Address(RVA = "0x13D2478", Offset = "0x13D2478", VA = "0x13D2478")]
		public GlobalTextTable()
		{
		}
	}
	[Token(Token = "0x20003CD")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xA0CDBC", Offset = "0xA0CDBC")]
	public class StringAsset : PixelCrushers.StringAsset
	{
		[Token(Token = "0x6001D69")]
		[Address(RVA = "0x13D2644", Offset = "0x13D2644", VA = "0x13D2644")]
		public StringAsset()
		{
		}
	}
	[Token(Token = "0x20003CE")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xA0CDF8", Offset = "0xA0CDF8")]
	public class TextTable : PixelCrushers.TextTable
	{
		[Token(Token = "0x6001D6A")]
		[Address(RVA = "0x13D264C", Offset = "0x13D264C", VA = "0x13D264C")]
		public TextTable()
		{
		}
	}
	[Token(Token = "0x20003CF")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0CE34", Offset = "0xA0CE34")]
	public class DeselectPreviousOnPointerEnter : PixelCrushers.DeselectPreviousOnPointerEnter
	{
		[Token(Token = "0x6001D6B")]
		[Address(RVA = "0x13D23D8", Offset = "0x13D23D8", VA = "0x13D23D8")]
		public DeselectPreviousOnPointerEnter()
		{
		}
	}
	[Token(Token = "0x20003D0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0CE6C", Offset = "0xA0CE6C")]
	public class InputDeviceManager : PixelCrushers.InputDeviceManager
	{
		[Token(Token = "0x6001D6C")]
		[Address(RVA = "0x13D24E0", Offset = "0x13D24E0", VA = "0x13D24E0")]
		public InputDeviceManager()
		{
		}
	}
	[Token(Token = "0x20003D1")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0CEA4", Offset = "0xA0CEA4")]
	public class InputDeviceMethods : PixelCrushers.InputDeviceMethods
	{
		[Token(Token = "0x6001D6D")]
		[Address(RVA = "0x13D2548", Offset = "0x13D2548", VA = "0x13D2548")]
		public InputDeviceMethods()
		{
		}
	}
	[Token(Token = "0x20003D2")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0CEDC", Offset = "0xA0CEDC")]
	[DisallowMultipleComponent]
	public class KeepRectTransformOnscreen : PixelCrushers.KeepRectTransformOnscreen
	{
		[Token(Token = "0x6001D6E")]
		[Address(RVA = "0x13D2560", Offset = "0x13D2560", VA = "0x13D2560")]
		public KeepRectTransformOnscreen()
		{
		}
	}
	[Token(Token = "0x20003D3")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0CF28", Offset = "0xA0CF28")]
	public class LocalizeUI : PixelCrushers.LocalizeUI
	{
		[Token(Token = "0x6001D6F")]
		[Address(RVA = "0x13D2570", Offset = "0x13D2570", VA = "0x13D2570")]
		public LocalizeUI()
		{
		}
	}
	[Token(Token = "0x20003D4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0CF60", Offset = "0xA0CF60")]
	public class UIButtonKeyTrigger : PixelCrushers.UIButtonKeyTrigger
	{
		[Token(Token = "0x6001D70")]
		[Address(RVA = "0x13D26B8", Offset = "0x13D26B8", VA = "0x13D26B8")]
		public UIButtonKeyTrigger()
		{
		}
	}
	[Token(Token = "0x20003D5")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0CF98", Offset = "0xA0CF98")]
	public class UILocalizationManager : PixelCrushers.UILocalizationManager
	{
		[Token(Token = "0x6001D71")]
		[Address(RVA = "0x13D271C", Offset = "0x13D271C", VA = "0x13D271C")]
		public UILocalizationManager()
		{
		}
	}
	[Token(Token = "0x20003D6")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0CFD0", Offset = "0xA0CFD0")]
	public class UIPanel : PixelCrushers.UIPanel
	{
		[Token(Token = "0x6001D72")]
		[Address(RVA = "0x13D2780", Offset = "0x13D2780", VA = "0x13D2780")]
		public UIPanel()
		{
		}
	}
	[Token(Token = "0x20003D7")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0D008", Offset = "0xA0D008")]
	public class UIScrollbarEnabler : PixelCrushers.UIScrollbarEnabler
	{
		[Token(Token = "0x6001D73")]
		[Address(RVA = "0x13D27E4", Offset = "0x13D27E4", VA = "0x13D27E4")]
		public UIScrollbarEnabler()
		{
		}
	}
	[Token(Token = "0x20003D8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0D040", Offset = "0xA0D040")]
	public class UITextColor : PixelCrushers.UITextColor
	{
		[Token(Token = "0x6001D74")]
		[Address(RVA = "0x13D27EC", Offset = "0x13D27EC", VA = "0x13D27EC")]
		public UITextColor()
		{
		}
	}
	[Token(Token = "0x20003D9")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0D078", Offset = "0xA0D078")]
	public class CollisionEvent : PixelCrushers.CollisionEvent
	{
		[Token(Token = "0x6001D75")]
		[Address(RVA = "0x13D23C8", Offset = "0x13D23C8", VA = "0x13D23C8")]
		public CollisionEvent()
		{
		}
	}
	[Token(Token = "0x20003DA")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0D0B0", Offset = "0xA0D0B0")]
	public class DisappearEvent : PixelCrushers.DisappearEvent
	{
		[Token(Token = "0x6001D76")]
		[Address(RVA = "0x13D23E8", Offset = "0x13D23E8", VA = "0x13D23E8")]
		public DisappearEvent()
		{
		}
	}
	[Token(Token = "0x20003DB")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0D0E8", Offset = "0xA0D0E8")]
	public class TimedEvent : PixelCrushers.TimedEvent
	{
		[Token(Token = "0x6001D77")]
		[Address(RVA = "0x13D26B0", Offset = "0x13D26B0", VA = "0x13D26B0")]
		public TimedEvent()
		{
		}
	}
	[Token(Token = "0x20003DC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0D120", Offset = "0xA0D120")]
	public class TriggerEvent : PixelCrushers.TriggerEvent
	{
		[Token(Token = "0x6001D78")]
		[Address(RVA = "0x13D26B4", Offset = "0x13D26B4", VA = "0x13D26B4")]
		public TriggerEvent()
		{
		}
	}
}
namespace HoudiniEngineUnity
{
	[Serializable]
	[Token(Token = "0x20003DD")]
	public class ReloadEvent : UnityEvent<HEU_HoudiniAsset, bool, List<GameObject>>
	{
		[Token(Token = "0x6001D79")]
		[Address(RVA = "0x16D2778", Offset = "0x16D2778", VA = "0x16D2778")]
		public ReloadEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003DE")]
	public class CookedEvent : UnityEvent<HEU_HoudiniAsset, bool, List<GameObject>>
	{
		[Token(Token = "0x6001D7A")]
		[Address(RVA = "0x1520B18", Offset = "0x1520B18", VA = "0x1520B18")]
		public CookedEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003DF")]
	public class BakedEvent : UnityEvent<HEU_HoudiniAsset, bool, List<GameObject>>
	{
		[Token(Token = "0x6001D7B")]
		[Address(RVA = "0x1520AC8", Offset = "0x1520AC8", VA = "0x1520AC8")]
		public BakedEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003E0")]
	public class HEU_AssetPreset
	{
		[Token(Token = "0x400123D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public char[] _identifier;

		[Token(Token = "0x400123E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int _version;

		[Token(Token = "0x400123F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string _assetOPName;

		[Token(Token = "0x4001240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public byte[] _parameterPreset;

		[Token(Token = "0x4001241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<string> _curveNames;

		[Token(Token = "0x4001242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<byte[]> _curvePresets;

		[Token(Token = "0x4001243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "OptionalFieldAttribute", RVA = "0xA1F374", Offset = "0xA1F374")]
		public List<HEU_InputPreset> inputPresets;

		[Token(Token = "0x4001244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "OptionalFieldAttribute", RVA = "0xA1F3AC", Offset = "0xA1F3AC")]
		public List<HEU_VolumeCachePreset> volumeCachePresets;

		[Token(Token = "0x6001D7C")]
		[Address(RVA = "0x1523134", Offset = "0x1523134", VA = "0x1523134")]
		public HEU_AssetPreset()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003E1")]
	public class HEU_InputPreset
	{
		[Token(Token = "0x4001245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public HEU_InputNode.InputObjectType _inputObjectType;

		[Token(Token = "0x4001246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<HEU_InputObjectPreset> _inputObjectPresets;

		[Token(Token = "0x4001247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string _inputAssetName;

		[Token(Token = "0x4001248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int _inputIndex;

		[Token(Token = "0x4001249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string _inputName;

		[Token(Token = "0x400124A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool _keepWorldTransform;

		[Token(Token = "0x400124B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool _packGeometryBeforeMerging;

		[Token(Token = "0x400124C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "OptionalFieldAttribute", RVA = "0xA1F3E4", Offset = "0xA1F3E4")]
		public List<HEU_InputAssetPreset> _inputAssetPresets;

		[Token(Token = "0x6001D7D")]
		[Address(RVA = "0x1699A6C", Offset = "0x1699A6C", VA = "0x1699A6C")]
		public HEU_InputPreset()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003E2")]
	public class HEU_InputObjectPreset
	{
		[Token(Token = "0x400124D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string _gameObjectName;

		[Token(Token = "0x400124E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool _isSceneObject;

		[Token(Token = "0x400124F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool _useTransformOffset;

		[Token(Token = "0x4001250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 _translateOffset;

		[Token(Token = "0x4001251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 _rotateOffset;

		[Token(Token = "0x4001252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 _scaleOffset;

		[Token(Token = "0x6001D7E")]
		[Address(RVA = "0x1698E04", Offset = "0x1698E04", VA = "0x1698E04")]
		public HEU_InputObjectPreset()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003E3")]
	public class HEU_InputAssetPreset
	{
		[Token(Token = "0x4001253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string _gameObjectName;

		[Token(Token = "0x6001D7F")]
		[Address(RVA = "0x168F9B8", Offset = "0x168F9B8", VA = "0x168F9B8")]
		public HEU_InputAssetPreset()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003E4")]
	public class HEU_VolumeLayerPreset
	{
		[Token(Token = "0x4001254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string _layerName;

		[Token(Token = "0x4001255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float _strength;

		[Token(Token = "0x4001256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool _uiExpanded;

		[Token(Token = "0x4001257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "OptionalFieldAttribute", RVA = "0xA1F41C", Offset = "0xA1F41C")]
		public int _tile;

		[Token(Token = "0x6001D80")]
		[Address(RVA = "0x1640EC0", Offset = "0x1640EC0", VA = "0x1640EC0")]
		public HEU_VolumeLayerPreset()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003E5")]
	public class HEU_VolumeCachePreset
	{
		[Token(Token = "0x4001258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string _objName;

		[Token(Token = "0x4001259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string _geoName;

		[Token(Token = "0x400125A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool _uiExpanded;

		[Token(Token = "0x400125B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<HEU_VolumeLayerPreset> _volumeLayersPresets;

		[Token(Token = "0x400125C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "OptionalFieldAttribute", RVA = "0xA1F454", Offset = "0xA1F454")]
		public string _terrainDataPath;

		[Token(Token = "0x400125D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "OptionalFieldAttribute", RVA = "0xA1F48C", Offset = "0xA1F48C")]
		public int _tile;

		[Token(Token = "0x6001D81")]
		[Address(RVA = "0x1641180", Offset = "0x1641180", VA = "0x1641180")]
		public HEU_VolumeCachePreset()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003E6")]
	public class HEU_RecookPreset
	{
		[Token(Token = "0x400125E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<HEU_VolumeCachePreset> _volumeCachePresets;

		[Token(Token = "0x400125F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<HEU_InputPreset> _inputPresets;

		[Token(Token = "0x6001D82")]
		[Address(RVA = "0x14B039C", Offset = "0x14B039C", VA = "0x14B039C")]
		public HEU_RecookPreset()
		{
		}
	}
	[Token(Token = "0x20003E7")]
	public static class HEU_AssetPresetUtility
	{
		[Token(Token = "0x4001260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static char[] PRESET_IDENTIFIER;

		[Token(Token = "0x4001261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static int PRESET_VERSION;

		[Token(Token = "0x6001D83")]
		[Address(RVA = "0x152321C", Offset = "0x152321C", VA = "0x152321C")]
		public static void SaveAssetPresetToFile(HEU_HoudiniAsset asset, string filePath)
		{
		}

		[Token(Token = "0x6001D84")]
		[Address(RVA = "0x1523834", Offset = "0x1523834", VA = "0x1523834")]
		public static void LoadPresetFileIntoAssetAndCook(HEU_HoudiniAsset asset, string filePath)
		{
		}
	}
	[Token(Token = "0x20003E8")]
	public class HEU_Vector3SerializationSurrogate : ISerializationSurrogate
	{
		[Token(Token = "0x6001D86")]
		[Address(RVA = "0x163D73C", Offset = "0x163D73C", VA = "0x163D73C", Slot = "4")]
		private void System.Runtime.Serialization.ISerializationSurrogate.GetObjectData(object obj, SerializationInfo info, StreamingContext context)
		{
		}

		[Token(Token = "0x6001D87")]
		[Address(RVA = "0x163D81C", Offset = "0x163D81C", VA = "0x163D81C", Slot = "5")]
		private object System.Runtime.Serialization.ISerializationSurrogate.SetObjectData(object obj, SerializationInfo info, StreamingContext context, ISurrogateSelector selector)
		{
			return null;
		}

		[Token(Token = "0x6001D88")]
		[Address(RVA = "0x163D9DC", Offset = "0x163D9DC", VA = "0x163D9DC")]
		public HEU_Vector3SerializationSurrogate()
		{
		}
	}
	[Token(Token = "0x20003E9")]
	public class HEU_Vector2SerializationSurrogate : ISerializationSurrogate
	{
		[Token(Token = "0x6001D89")]
		[Address(RVA = "0x163D50C", Offset = "0x163D50C", VA = "0x163D50C", Slot = "4")]
		private void System.Runtime.Serialization.ISerializationSurrogate.GetObjectData(object obj, SerializationInfo info, StreamingContext context)
		{
		}

		[Token(Token = "0x6001D8A")]
		[Address(RVA = "0x163D5CC", Offset = "0x163D5CC", VA = "0x163D5CC", Slot = "5")]
		private object System.Runtime.Serialization.ISerializationSurrogate.SetObjectData(object obj, SerializationInfo info, StreamingContext context, ISurrogateSelector selector)
		{
			return null;
		}

		[Token(Token = "0x6001D8B")]
		[Address(RVA = "0x163D734", Offset = "0x163D734", VA = "0x163D734")]
		public HEU_Vector2SerializationSurrogate()
		{
		}
	}
	[Token(Token = "0x20003EA")]
	public class HEU_AssetUpdater
	{
		[Token(Token = "0x6001D8C")]
		[Address(RVA = "0x1524F50", Offset = "0x1524F50", VA = "0x1524F50")]
		static HEU_AssetUpdater()
		{
		}

		[Token(Token = "0x6001D8D")]
		[Address(RVA = "0x1524F54", Offset = "0x1524F54", VA = "0x1524F54")]
		private static void OnBeforeAssemblyReload()
		{
		}

		[Token(Token = "0x6001D8E")]
		[Address(RVA = "0x1524FB4", Offset = "0x1524FB4", VA = "0x1524FB4")]
		private static void Update()
		{
		}

		[Token(Token = "0x6001D8F")]
		[Address(RVA = "0x1524FB8", Offset = "0x1524FB8", VA = "0x1524FB8")]
		public static void AddAssetForUpdate(HEU_HoudiniAsset asset)
		{
		}

		[Token(Token = "0x6001D90")]
		[Address(RVA = "0x1524FBC", Offset = "0x1524FBC", VA = "0x1524FBC")]
		public static void RemoveAsset(HEU_HoudiniAsset asset)
		{
		}

		[Token(Token = "0x6001D91")]
		[Address(RVA = "0x1524FC0", Offset = "0x1524FC0", VA = "0x1524FC0")]
		public static void AddNodeSyncForUpdate(HEU_BaseSync nodeSync)
		{
		}

		[Token(Token = "0x6001D92")]
		[Address(RVA = "0x1524FC4", Offset = "0x1524FC4", VA = "0x1524FC4")]
		public static void RemoveNodeSync(HEU_BaseSync nodeSync)
		{
		}

		[Token(Token = "0x6001D93")]
		[Address(RVA = "0x1524FC8", Offset = "0x1524FC8", VA = "0x1524FC8")]
		private static void OnPrefabInstanceUpdate(GameObject instance)
		{
		}

		[Token(Token = "0x6001D94")]
		[Address(RVA = "0x1524FCC", Offset = "0x1524FCC", VA = "0x1524FCC")]
		public HEU_AssetUpdater()
		{
		}
	}
	[Token(Token = "0x20003EB")]
	public class HEU_Curve : ScriptableObject
	{
		[Token(Token = "0x200067D")]
		public enum CurveEditState
		{
			[Token(Token = "0x400200E")]
			INVALID,
			[Token(Token = "0x400200F")]
			GENERATED,
			[Token(Token = "0x4002010")]
			EDITING,
			[Token(Token = "0x4002011")]
			REQUIRES_GENERATION
		}

		[Token(Token = "0x200067E")]
		public enum Interaction
		{
			[Token(Token = "0x4002013")]
			VIEW,
			[Token(Token = "0x4002014")]
			ADD,
			[Token(Token = "0x4002015")]
			EDIT
		}

		[Token(Token = "0x200067F")]
		public enum CurveDrawCollision
		{
			[Token(Token = "0x4002017")]
			COLLIDERS,
			[Token(Token = "0x4002018")]
			LAYERMASK
		}

		[Token(Token = "0x4001262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int _geoID;

		[Token(Token = "0x4001263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<Vector3> _points;

		[Token(Token = "0x4001264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Vector3[] _vertices;

		[Token(Token = "0x4001265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _isEditable;

		[Token(Token = "0x4001266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private HEU_Parameters _parameters;

		[Token(Token = "0x4001267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool _bUploadParameterPreset;

		[Token(Token = "0x4001268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private string _curveName;

		[Token(Token = "0x4001269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject _targetGameObject;

		[Token(Token = "0x400126A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private bool _isGeoCurve;

		[Token(Token = "0x400126B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private CurveEditState _editState;

		[Token(Token = "0x400126C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Interaction PreferredNextInteractionMode;

		[Token(Token = "0x17000345")]
		public int GeoID
		{
			[Token(Token = "0x6001D95")]
			[Address(RVA = "0x152D668", Offset = "0x152D668", VA = "0x152D668")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000346")]
		public HEU_Parameters Parameters
		{
			[Token(Token = "0x6001D97")]
			[Address(RVA = "0x152D678", Offset = "0x152D678", VA = "0x152D678")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000347")]
		public string CurveName
		{
			[Token(Token = "0x6001D99")]
			[Address(RVA = "0x152D68C", Offset = "0x152D68C", VA = "0x152D68C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000348")]
		public CurveEditState EditState
		{
			[Token(Token = "0x6001D9B")]
			[Address(RVA = "0x152D69C", Offset = "0x152D69C", VA = "0x152D69C")]
			get
			{
				return default(CurveEditState);
			}
		}

		[Token(Token = "0x6001D96")]
		[Address(RVA = "0x152D670", Offset = "0x152D670", VA = "0x152D670")]
		public bool IsEditable()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D98")]
		[Address(RVA = "0x152D680", Offset = "0x152D680", VA = "0x152D680")]
		public void SetUploadParameterPreset(bool bValue)
		{
		}

		[Token(Token = "0x6001D9A")]
		[Address(RVA = "0x152D694", Offset = "0x152D694", VA = "0x152D694")]
		public bool IsGeoCurve()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D9C")]
		[Address(RVA = "0x152D6A4", Offset = "0x152D6A4", VA = "0x152D6A4")]
		public static HEU_Curve CreateSetupCurve(HEU_HoudiniAsset parentAsset, bool isEditable, string curveName, int geoID, bool bGeoCurve)
		{
			return null;
		}

		[Token(Token = "0x6001D9D")]
		[Address(RVA = "0x152D754", Offset = "0x152D754", VA = "0x152D754")]
		public void DestroyAllData()
		{
		}

		[Token(Token = "0x6001D9E")]
		[Address(RVA = "0x152D838", Offset = "0x152D838", VA = "0x152D838")]
		public void SetCurveName(string name)
		{
		}

		[Token(Token = "0x6001D9F")]
		[Address(RVA = "0x152D8E4", Offset = "0x152D8E4", VA = "0x152D8E4")]
		public void UploadParameterPreset(HEU_SessionBase session, int geoID, HEU_HoudiniAsset parentAsset)
		{
		}

		[Token(Token = "0x6001DA0")]
		[Address(RVA = "0x152D9E4", Offset = "0x152D9E4", VA = "0x152D9E4")]
		public void ResetCurveParameters(HEU_SessionBase session, HEU_HoudiniAsset parentAsset)
		{
		}

		[Token(Token = "0x6001DA1")]
		[Address(RVA = "0x152DAC4", Offset = "0x152DAC4", VA = "0x152DAC4")]
		public void SetCurveParameterPreset(HEU_SessionBase session, HEU_HoudiniAsset parentAsset, byte[] parameterPreset)
		{
		}

		[Token(Token = "0x6001DA2")]
		[Address(RVA = "0x152DBAC", Offset = "0x152DBAC", VA = "0x152DBAC")]
		public void UpdateCurve(HEU_SessionBase session, int partID)
		{
		}

		[Token(Token = "0x6001DA3")]
		[Address(RVA = "0x152DDF0", Offset = "0x152DDF0", VA = "0x152DDF0")]
		public void GenerateMesh(GameObject inGameObject)
		{
		}

		[Token(Token = "0x6001DA4")]
		[Address(RVA = "0x152E15C", Offset = "0x152E15C", VA = "0x152E15C")]
		public void SyncFromParameters(HEU_SessionBase session, HEU_HoudiniAsset parentAsset)
		{
		}

		[Token(Token = "0x6001DA5")]
		[Address(RVA = "0x152E684", Offset = "0x152E684", VA = "0x152E684")]
		public void ProjectToColliders(HEU_HoudiniAsset parentAsset, Vector3 rayDirection, float rayDistance)
		{
		}

		[Token(Token = "0x6001DA6")]
		[Address(RVA = "0x152EBA8", Offset = "0x152EBA8", VA = "0x152EBA8")]
		public static string GetPointsString(List<Vector3> points)
		{
			return null;
		}

		[Token(Token = "0x6001DA7")]
		[Address(RVA = "0x152EDE8", Offset = "0x152EDE8", VA = "0x152EDE8")]
		public void SetEditState(CurveEditState editState)
		{
		}

		[Token(Token = "0x6001DA8")]
		[Address(RVA = "0x152EDF0", Offset = "0x152EDF0", VA = "0x152EDF0")]
		public void SetCurvePoint(int pointIndex, Vector3 newPosition)
		{
		}

		[Token(Token = "0x6001DA9")]
		[Address(RVA = "0x152EEA8", Offset = "0x152EEA8", VA = "0x152EEA8")]
		public Vector3 GetCurvePoint(int pointIndex)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001DAA")]
		[Address(RVA = "0x152EF5C", Offset = "0x152EF5C", VA = "0x152EF5C")]
		public List<Vector3> GetAllPoints()
		{
			return null;
		}

		[Token(Token = "0x6001DAB")]
		[Address(RVA = "0x152EF64", Offset = "0x152EF64", VA = "0x152EF64")]
		public int GetNumPoints()
		{
			return default(int);
		}

		[Token(Token = "0x6001DAC")]
		[Address(RVA = "0x152EFB4", Offset = "0x152EFB4", VA = "0x152EFB4")]
		public Vector3 GetTransformedPoint(int pointIndex)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001DAD")]
		[Address(RVA = "0x152F078", Offset = "0x152F078", VA = "0x152F078")]
		public Vector3 GetTransformedPosition(Vector3 inPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001DAE")]
		[Address(RVA = "0x152F0CC", Offset = "0x152F0CC", VA = "0x152F0CC")]
		public Vector3 GetInvertedTransformedPosition(Vector3 inPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001DAF")]
		[Address(RVA = "0x152F120", Offset = "0x152F120", VA = "0x152F120")]
		public Vector3 GetInvertedTransformedDirection(Vector3 inPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001DB0")]
		[Address(RVA = "0x152F174", Offset = "0x152F174", VA = "0x152F174")]
		public Vector3[] GetVertices()
		{
			return null;
		}

		[Token(Token = "0x6001DB1")]
		[Address(RVA = "0x152F17C", Offset = "0x152F17C", VA = "0x152F17C")]
		public void SetCurveGeometryVisibility(bool bVisible)
		{
		}

		[Token(Token = "0x6001DB2")]
		[Address(RVA = "0x152E5DC", Offset = "0x152E5DC", VA = "0x152E5DC")]
		public void DownloadPresetData(HEU_SessionBase session)
		{
		}

		[Token(Token = "0x6001DB3")]
		[Address(RVA = "0x152F270", Offset = "0x152F270", VA = "0x152F270")]
		public void UploadPresetData(HEU_SessionBase session)
		{
		}

		[Token(Token = "0x6001DB4")]
		[Address(RVA = "0x152F318", Offset = "0x152F318", VA = "0x152F318")]
		public void DownloadAsDefaultPresetData(HEU_SessionBase session)
		{
		}

		[Token(Token = "0x6001DB5")]
		[Address(RVA = "0x152F3C0", Offset = "0x152F3C0", VA = "0x152F3C0")]
		public HEU_Curve()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003EC")]
	public class HEU_GeneratedOutput
	{
		[Token(Token = "0x400126D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public HEU_GeneratedOutputData _outputData;

		[Token(Token = "0x400126E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<HEU_GeneratedOutputData> _childOutputs;

		[Token(Token = "0x6001DB7")]
		[Address(RVA = "0x12C9EA4", Offset = "0x12C9EA4", VA = "0x12C9EA4")]
		public static void ResetMaterialOverrides(HEU_GeneratedOutput output)
		{
		}

		[Token(Token = "0x6001DB8")]
		[Address(RVA = "0x12CA008", Offset = "0x12CA008", VA = "0x12CA008")]
		public static void ResetMaterialOverrides(HEU_GeneratedOutputData outputData)
		{
		}

		[Token(Token = "0x6001DB9")]
		[Address(RVA = "0x12CA0B8", Offset = "0x12CA0B8", VA = "0x12CA0B8")]
		public static Material[] GetGeneratedMaterialsForGameObject(HEU_GeneratedOutput output, GameObject inGameObject)
		{
			return null;
		}

		[Token(Token = "0x6001DBA")]
		[Address(RVA = "0x12C9FAC", Offset = "0x12C9FAC", VA = "0x12C9FAC")]
		public static bool HasLODGroup(HEU_GeneratedOutput output)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DBB")]
		[Address(RVA = "0x12CA250", Offset = "0x12CA250", VA = "0x12CA250")]
		public static bool IsOutputUsingMaterial(Material checkMaterial, HEU_GeneratedOutput output)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DBC")]
		[Address(RVA = "0x12CA374", Offset = "0x12CA374", VA = "0x12CA374")]
		public static bool IsOutputDataUsingMaterial(Material checkMaterial, HEU_GeneratedOutputData outputData)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DBD")]
		[Address(RVA = "0x12C46B0", Offset = "0x12C46B0", VA = "0x12C46B0")]
		public static void ClearGeneratedMaterialReferences(HEU_GeneratedOutputData generatedOutputData)
		{
		}

		[Token(Token = "0x6001DBE")]
		[Address(RVA = "0x12C1EA0", Offset = "0x12C1EA0", VA = "0x12C1EA0")]
		public static void DestroyAllGeneratedColliders(HEU_GeneratedOutputData outputData)
		{
		}

		[Token(Token = "0x6001DBF")]
		[Address(RVA = "0x12CA55C", Offset = "0x12CA55C", VA = "0x12CA55C")]
		public static void DestroyGeneratedOutput(HEU_GeneratedOutput generatedOutput)
		{
		}

		[Token(Token = "0x6001DC0")]
		[Address(RVA = "0x12C3540", Offset = "0x12C3540", VA = "0x12C3540")]
		public static void DestroyGeneratedOutputChildren(HEU_GeneratedOutput generatedOutput)
		{
		}

		[Token(Token = "0x6001DC1")]
		[Address(RVA = "0x12C4660", Offset = "0x12C4660", VA = "0x12C4660")]
		public static void DestroyGeneratedOutputData(HEU_GeneratedOutputData generatedOutputData, bool bDontDeletePersistantResources)
		{
		}

		[Token(Token = "0x6001DC2")]
		[Address(RVA = "0x12C3414", Offset = "0x12C3414", VA = "0x12C3414")]
		public static void ClearMaterialsNoLongerUsed(Material[] materialsToCheck, Material[] materialsInUse)
		{
		}

		[Token(Token = "0x6001DC3")]
		[Address(RVA = "0x12CA6EC", Offset = "0x12CA6EC", VA = "0x12CA6EC")]
		public static void CopyMaterialOverrides(HEU_GeneratedOutputData sourceOutputData, HEU_GeneratedOutputData destOutputData)
		{
		}

		[Token(Token = "0x6001DC4")]
		[Address(RVA = "0x12CA9B0", Offset = "0x12CA9B0", VA = "0x12CA9B0")]
		public HEU_GeneratedOutput()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003ED")]
	public class HEU_GeneratedOutputData
	{
		[Token(Token = "0x400126F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject _gameObject;

		[Token(Token = "0x4001270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material[] _renderMaterials;

		[Token(Token = "0x4001271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Collider> _colliders;

		[Token(Token = "0x6001DC5")]
		[Address(RVA = "0x12C3FD0", Offset = "0x12C3FD0", VA = "0x12C3FD0")]
		public HEU_GeneratedOutputData()
		{
		}
	}
	[Token(Token = "0x20003EE")]
	public class HEU_GeoNode : ScriptableObject, ISerializationCallbackReceiver
	{
		[Token(Token = "0x4001272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private HAPI_GeoInfo _geoInfo;

		[Token(Token = "0x4001273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private string _geoName;

		[Token(Token = "0x4001274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private List<HEU_PartData> _parts;

		[Token(Token = "0x4001275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private HEU_ObjectNode _containerObjectNode;

		[Token(Token = "0x4001276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private HEU_InputNode _inputNode;

		[Token(Token = "0x4001277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private HEU_Curve _geoCurve;

		[Token(Token = "0x4001278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private HEU_VolumeCache _volumeCache;

		[Token(Token = "0x4001279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private List<HEU_VolumeCache> _volumeCaches;

		[Token(Token = "0x17000349")]
		public int GeoID
		{
			[Token(Token = "0x6001DC6")]
			[Address(RVA = "0x12CAA68", Offset = "0x12CAA68", VA = "0x12CAA68")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700034A")]
		public string GeoName
		{
			[Token(Token = "0x6001DC7")]
			[Address(RVA = "0x12CAA70", Offset = "0x12CAA70", VA = "0x12CAA70")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034B")]
		public HAPI_GeoType GeoType
		{
			[Token(Token = "0x6001DC8")]
			[Address(RVA = "0x12CAA78", Offset = "0x12CAA78", VA = "0x12CAA78")]
			get
			{
				return default(HAPI_GeoType);
			}
		}

		[Token(Token = "0x1700034C")]
		public bool Editable
		{
			[Token(Token = "0x6001DC9")]
			[Address(RVA = "0x12CAA80", Offset = "0x12CAA80", VA = "0x12CAA80")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700034D")]
		public bool Displayable
		{
			[Token(Token = "0x6001DCA")]
			[Address(RVA = "0x12CAA88", Offset = "0x12CAA88", VA = "0x12CAA88")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700034E")]
		public HEU_ObjectNode ObjectNode
		{
			[Token(Token = "0x6001DD0")]
			[Address(RVA = "0x12CAB1C", Offset = "0x12CAB1C", VA = "0x12CAB1C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034F")]
		public HEU_HoudiniAsset ParentAsset
		{
			[Token(Token = "0x6001DD1")]
			[Address(RVA = "0x12CAB24", Offset = "0x12CAB24", VA = "0x12CAB24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000350")]
		public List<HEU_VolumeCache> VolumeCaches
		{
			[Token(Token = "0x6001DD2")]
			[Address(RVA = "0x12CABB4", Offset = "0x12CABB4", VA = "0x12CABB4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DCB")]
		[Address(RVA = "0x12CAA90", Offset = "0x12CAA90", VA = "0x12CAA90")]
		public bool IsVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DCC")]
		[Address(RVA = "0x12CAAAC", Offset = "0x12CAAAC", VA = "0x12CAAAC")]
		public bool IsIntermediate()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DCD")]
		[Address(RVA = "0x12CAABC", Offset = "0x12CAABC", VA = "0x12CAABC")]
		public bool IsIntermediateOrEditable()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DCE")]
		[Address(RVA = "0x12CAAEC", Offset = "0x12CAAEC", VA = "0x12CAAEC")]
		public bool IsGeoInputType()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DCF")]
		[Address(RVA = "0x12CAB0C", Offset = "0x12CAB0C", VA = "0x12CAB0C")]
		public bool IsGeoCurveType()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DD3")]
		[Address(RVA = "0x12CABBC", Offset = "0x12CABBC", VA = "0x12CABBC")]
		public HEU_GeoNode()
		{
		}

		[Token(Token = "0x6001DD4")]
		[Address(RVA = "0x12CAC78", Offset = "0x12CAC78", VA = "0x12CAC78", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6001DD5")]
		[Address(RVA = "0x12CAC7C", Offset = "0x12CAC7C", VA = "0x12CAC7C", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6001DD6")]
		[Address(RVA = "0x12CAD50", Offset = "0x12CAD50", VA = "0x12CAD50")]
		public void DestroyAllData()
		{
		}

		[Token(Token = "0x6001DD7")]
		[Address(RVA = "0x12CB2E4", Offset = "0x12CB2E4", VA = "0x12CB2E4")]
		public void RemoveAndDestroyPart(HEU_PartData part)
		{
		}

		[Token(Token = "0x6001DD8")]
		[Address(RVA = "0x12CABE4", Offset = "0x12CABE4", VA = "0x12CABE4")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001DD9")]
		[Address(RVA = "0x12CB358", Offset = "0x12CB358", VA = "0x12CB358")]
		public void Initialize(HEU_SessionBase session, HAPI_GeoInfo geoInfo, HEU_ObjectNode containerObjectNode)
		{
		}

		[Token(Token = "0x6001DDA")]
		[Address(RVA = "0x12CB3FC", Offset = "0x12CB3FC", VA = "0x12CB3FC")]
		public bool DoesThisRequirePotentialCook()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DDB")]
		[Address(RVA = "0x12CB468", Offset = "0x12CB468", VA = "0x12CB468")]
		public void UpdateGeo(HEU_SessionBase session)
		{
		}

		[Token(Token = "0x6001DDC")]
		[Address(RVA = "0x12CC5C8", Offset = "0x12CC5C8", VA = "0x12CC5C8")]
		public void ProcessUnityScriptAttribute(HEU_SessionBase session)
		{
		}

		[Token(Token = "0x6001DDD")]
		[Address(RVA = "0x12CBC5C", Offset = "0x12CBC5C", VA = "0x12CBC5C")]
		private void ProcessPart(HEU_SessionBase session, int partID, ref HAPI_PartInfo partInfo, ref HEU_PartData partData)
		{
		}

		[Token(Token = "0x6001DDE")]
		[Address(RVA = "0x12CC810", Offset = "0x12CC810", VA = "0x12CC810")]
		private void SetupGameObjectAndTransform(HEU_PartData partData, HEU_HoudiniAsset parentAsset)
		{
		}

		[Token(Token = "0x6001DDF")]
		[Address(RVA = "0x12CCBCC", Offset = "0x12CCBCC", VA = "0x12CCBCC")]
		public void GetPartsByOutputType(List<HEU_PartData> meshParts, List<HEU_PartData> volumeParts)
		{
		}

		[Token(Token = "0x6001DE0")]
		[Address(RVA = "0x12CCCE0", Offset = "0x12CCCE0", VA = "0x12CCCE0")]
		public void GeneratePartInstances(HEU_SessionBase session)
		{
		}

		[Token(Token = "0x6001DE1")]
		[Address(RVA = "0x12CCE10", Offset = "0x12CCE10", VA = "0x12CCE10")]
		public void GenerateAttributesStore(HEU_SessionBase session)
		{
		}

		[Token(Token = "0x6001DE2")]
		[Address(RVA = "0x12CBA58", Offset = "0x12CBA58", VA = "0x12CBA58")]
		private void ProcessGeoCurve(HEU_SessionBase session)
		{
		}

		[Token(Token = "0x6001DE3")]
		[Address(RVA = "0x12CCEC4", Offset = "0x12CCEC4", VA = "0x12CCEC4")]
		private void SetupGeoCurveGameObjectAndTransform(HEU_Curve curve)
		{
		}

		[Token(Token = "0x6001DE4")]
		[Address(RVA = "0x12CD078", Offset = "0x12CD078", VA = "0x12CD078")]
		public void ClearObjectInstances()
		{
		}

		[Token(Token = "0x6001DE5")]
		[Address(RVA = "0x12CD118", Offset = "0x12CD118", VA = "0x12CD118")]
		public void SetGeoInfo(HAPI_GeoInfo geoInfo)
		{
		}

		[Token(Token = "0x6001DE6")]
		[Address(RVA = "0x12CCA54", Offset = "0x12CCA54", VA = "0x12CCA54")]
		public string GeneratePartFullName(string partName)
		{
			return null;
		}

		[Token(Token = "0x6001DE7")]
		[Address(RVA = "0x12CD1BC", Offset = "0x12CD1BC", VA = "0x12CD1BC")]
		public string GenerateGeoCurveName()
		{
			return null;
		}

		[Token(Token = "0x6001DE8")]
		[Address(RVA = "0x12CD1C4", Offset = "0x12CD1C4", VA = "0x12CD1C4")]
		public bool HasGeoNodeChanged(HEU_SessionBase session)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DE9")]
		[Address(RVA = "0x12CD2C0", Offset = "0x12CD2C0", VA = "0x12CD2C0")]
		public void ApplyHAPITransform(ref HAPI_Transform hapiTransform)
		{
		}

		[Token(Token = "0x6001DEA")]
		[Address(RVA = "0x12CD3C8", Offset = "0x12CD3C8", VA = "0x12CD3C8")]
		public void GetDebugInfo(StringBuilder sb)
		{
		}

		[Token(Token = "0x6001DEB")]
		[Address(RVA = "0x12CD6F8", Offset = "0x12CD6F8", VA = "0x12CD6F8")]
		public bool IsUsingMaterial(HEU_MaterialData materialData)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DEC")]
		[Address(RVA = "0x12CD810", Offset = "0x12CD810", VA = "0x12CD810")]
		public void GetClonableParts(List<HEU_PartData> clonableParts)
		{
		}

		[Token(Token = "0x6001DED")]
		[Address(RVA = "0x12CD918", Offset = "0x12CD918", VA = "0x12CD918")]
		public void GetOutputGameObjects(List<GameObject> outputObjects)
		{
		}

		[Token(Token = "0x6001DEE")]
		[Address(RVA = "0x12CDA20", Offset = "0x12CDA20", VA = "0x12CDA20")]
		public void GetOutput(List<HEU_GeneratedOutput> outputs)
		{
		}

		[Token(Token = "0x6001DEF")]
		[Address(RVA = "0x12CDB28", Offset = "0x12CDB28", VA = "0x12CDB28")]
		public HEU_PartData GetHDAPartWithGameObject(GameObject outputGameObject)
		{
			return null;
		}

		[Token(Token = "0x6001DF0")]
		[Address(RVA = "0x12CDC80", Offset = "0x12CDC80", VA = "0x12CDC80")]
		public HEU_PartData GetPartFromPartID(int partID)
		{
			return null;
		}

		[Token(Token = "0x6001DF1")]
		[Address(RVA = "0x12CDD6C", Offset = "0x12CDD6C", VA = "0x12CDD6C")]
		public void GetCurves(List<HEU_Curve> curves, bool bEditableOnly)
		{
		}

		[Token(Token = "0x6001DF2")]
		[Address(RVA = "0x12CDF48", Offset = "0x12CDF48", VA = "0x12CDF48")]
		public List<HEU_PartData> GetParts()
		{
			return null;
		}

		[Token(Token = "0x6001DF3")]
		[Address(RVA = "0x12CDF50", Offset = "0x12CDF50", VA = "0x12CDF50")]
		public bool HasAttribInstancer()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DF4")]
		[Address(RVA = "0x12CE050", Offset = "0x12CE050", VA = "0x12CE050")]
		public void SetAttributeModifiersOnPartOutputs(HEU_SessionBase session)
		{
		}

		[Token(Token = "0x6001DF5")]
		[Address(RVA = "0x12CE258", Offset = "0x12CE258", VA = "0x12CE258")]
		public void CalculateVisiblity(bool bParentVisibility)
		{
		}

		[Token(Token = "0x6001DF6")]
		[Address(RVA = "0x12CE374", Offset = "0x12CE374", VA = "0x12CE374")]
		public void HideAllGeometry()
		{
		}

		[Token(Token = "0x6001DF7")]
		[Address(RVA = "0x12CE41C", Offset = "0x12CE41C", VA = "0x12CE41C")]
		public void CalculateColliderState()
		{
		}

		[Token(Token = "0x6001DF8")]
		[Address(RVA = "0x12CE4C0", Offset = "0x12CE4C0", VA = "0x12CE4C0")]
		public void DisableAllColliders()
		{
		}

		[Token(Token = "0x6001DF9")]
		[Address(RVA = "0x12CE568", Offset = "0x12CE568", VA = "0x12CE568")]
		public void ProcessVolumeParts(HEU_SessionBase session, List<HEU_PartData> volumeParts, bool bRebuild)
		{
		}

		[Token(Token = "0x6001DFA")]
		[Address(RVA = "0x12CEACC", Offset = "0x12CEACC", VA = "0x12CEACC")]
		public HEU_VolumeCache GetVolumeCacheByTileIndex(int tileIndex)
		{
			return null;
		}

		[Token(Token = "0x6001DFB")]
		[Address(RVA = "0x12CB170", Offset = "0x12CB170", VA = "0x12CB170")]
		public void DestroyVolumeCache()
		{
		}

		[Token(Token = "0x6001DFC")]
		[Address(RVA = "0x12CED0C", Offset = "0x12CED0C", VA = "0x12CED0C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20003EF")]
	[ExecuteInEditMode]
	public sealed class HEU_HoudiniAsset : MonoBehaviour
	{
		[Token(Token = "0x2000680")]
		public enum HEU_AssetType
		{
			[Token(Token = "0x400201A")]
			TYPE_INVALID,
			[Token(Token = "0x400201B")]
			TYPE_HDA,
			[Token(Token = "0x400201C")]
			TYPE_CURVE,
			[Token(Token = "0x400201D")]
			TYPE_INPUT
		}

		[Token(Token = "0x2000681")]
		public enum AssetBuildAction
		{
			[Token(Token = "0x400201F")]
			NONE,
			[Token(Token = "0x4002020")]
			RELOAD,
			[Token(Token = "0x4002021")]
			COOK,
			[Token(Token = "0x4002022")]
			INVALID,
			[Token(Token = "0x4002023")]
			STRIP_HEDATA,
			[Token(Token = "0x4002024")]
			DUPLICATE,
			[Token(Token = "0x4002025")]
			RESET_PARAMS
		}

		[Token(Token = "0x2000682")]
		public enum AssetCookStatus
		{
			[Token(Token = "0x4002027")]
			NONE,
			[Token(Token = "0x4002028")]
			COOKING,
			[Token(Token = "0x4002029")]
			POSTCOOK,
			[Token(Token = "0x400202A")]
			LOADING,
			[Token(Token = "0x400202B")]
			POSTLOAD,
			[Token(Token = "0x400202C")]
			PRELOAD,
			[Token(Token = "0x400202D")]
			SELECT_SUBASSET
		}

		[Token(Token = "0x2000683")]
		public enum AssetCookResult
		{
			[Token(Token = "0x400202F")]
			NONE,
			[Token(Token = "0x4002030")]
			SUCCESS,
			[Token(Token = "0x4002031")]
			ERRORED
		}

		[Token(Token = "0x2000684")]
		public delegate void UpdateUIDelegate();

		[Token(Token = "0x400127A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private HEU_AssetType _assetType;

		[Token(Token = "0x400127B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HAPI_AssetInfo _assetInfo;

		[Token(Token = "0x400127C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private HAPI_NodeInfo _nodeInfo;

		[Token(Token = "0x400127D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private string _assetName;

		[Token(Token = "0x400127E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private string _assetOpName;

		[Token(Token = "0x400127F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private string _assetHelp;

		[Token(Token = "0x4001280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private int _assetID;

		[Token(Token = "0x4001281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private string _assetPath;

		[Token(Token = "0x4001282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private bool _loadAssetFromMemory;

		[Token(Token = "0x4001283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private UnityEngine.Object _assetFileObject;

		[Token(Token = "0x4001284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private List<HEU_ObjectNode> _objectNodes;

		[Token(Token = "0x4001285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private GameObject _rootGameObject;

		[Token(Token = "0x4001286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private List<HEU_MaterialData> _materialCache;

		[Token(Token = "0x4001287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private HEU_Parameters _parameters;

		[Token(Token = "0x4001288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private Matrix4x4 _lastSyncedTransformMatrix;

		[Token(Token = "0x4001289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private string _assetCacheFolderPath;

		[Token(Token = "0x400128A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private string[] _subassetNames;

		[Token(Token = "0x400128B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private int _selectedSubassetIndex;

		[Token(Token = "0x400128C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private HEU_AssetPreset _savedAssetPreset;

		[Token(Token = "0x400128D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private HEU_RecookPreset _recookPreset;

		[Token(Token = "0x400128E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		private int _totalCookCount;

		[Token(Token = "0x400128F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		[SerializeField]
		private AssetBuildAction _requestBuildAction;

		[Token(Token = "0x4001290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		private bool _checkParameterChangeForCook;

		[Token(Token = "0x4001291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x169")]
		[SerializeField]
		private bool _skipCookCheck;

		[Token(Token = "0x4001292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16A")]
		[SerializeField]
		private bool _uploadParameters;

		[Token(Token = "0x4001293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16B")]
		[SerializeField]
		private bool _forceUploadInputs;

		[Token(Token = "0x4001294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		[SerializeField]
		private bool _upstreamCookChanged;

		[Token(Token = "0x4001295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[SerializeField]
		private AssetCookStatus _cookStatus;

		[Token(Token = "0x4001296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		[SerializeField]
		private AssetCookResult _lastCookResult;

		[Token(Token = "0x4001297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[SerializeField]
		private bool _isCookingAssetReloaded;

		[Token(Token = "0x4001298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x179")]
		private bool _bForceUpdate;

		[Token(Token = "0x4001299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[SerializeField]
		private long _sessionID;

		[Token(Token = "0x400129A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1F7A4", Offset = "0xA1F7A4")]
		private bool <WarnedPrefabNotSupported>k__BackingField;

		[Token(Token = "0x400129B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x189")]
		[SerializeField]
		private bool _uiLocked;

		[Token(Token = "0x400129C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18A")]
		[SerializeField]
		private bool _showHDAOptions;

		[Token(Token = "0x400129D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18B")]
		[SerializeField]
		private bool _showGenerateSection;

		[Token(Token = "0x400129E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		[SerializeField]
		private bool _showBakeSection;

		[Token(Token = "0x400129F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18D")]
		[SerializeField]
		private bool _showEventsSection;

		[Token(Token = "0x40012A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18E")]
		[SerializeField]
		private bool _showCurvesSection;

		[Token(Token = "0x40012A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18F")]
		[SerializeField]
		private bool _showInputNodesSection;

		[Token(Token = "0x40012A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[SerializeField]
		private bool _showToolsSection;

		[Token(Token = "0x40012A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x191")]
		[SerializeField]
		private bool _showTerrainSection;

		[Token(Token = "0x40012A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[SerializeField]
		private HEU_InstanceInputUIState _instanceInputUIState;

		[Token(Token = "0x40012A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public ReloadEvent _reloadEvent;

		[Token(Token = "0x40012A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public CookedEvent _cookedEvent;

		[Token(Token = "0x40012A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public BakedEvent _bakedEvent;

		[Token(Token = "0x40012A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public UpdateUIDelegate _refreshUIDelegate;

		[Token(Token = "0x40012A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		public CookedEvent _downstreamConnectionCookedEvent;

		[Token(Token = "0x40012AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[SerializeField]
		private bool _generateUVs;

		[Token(Token = "0x40012AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C9")]
		[SerializeField]
		private bool _generateTangents;

		[Token(Token = "0x40012AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CA")]
		[SerializeField]
		private bool _generateNormals;

		[Token(Token = "0x40012AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CB")]
		[SerializeField]
		private bool _pushTransformToHoudini;

		[Token(Token = "0x40012AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		[SerializeField]
		private bool _transformChangeTriggersCooks;

		[Token(Token = "0x40012AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CD")]
		[SerializeField]
		private bool _cookingTriggersDownCooks;

		[Token(Token = "0x40012B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CE")]
		[SerializeField]
		private bool _autoCookOnParameterChange;

		[Token(Token = "0x40012B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CF")]
		[SerializeField]
		private bool _ignoreNonDisplayNodes;

		[Token(Token = "0x40012B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[SerializeField]
		private bool _generateMeshUsingPoints;

		[Token(Token = "0x40012B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D1")]
		[SerializeField]
		private bool _useLODGroups;

		[Token(Token = "0x40012B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D2")]
		[SerializeField]
		private bool _splitGeosByGroup;

		[Token(Token = "0x40012B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D3")]
		[SerializeField]
		private bool _sessionSyncAutoCook;

		[Token(Token = "0x40012B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		[SerializeField]
		private bool _curveEditorEnabled;

		[Token(Token = "0x40012B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[SerializeField]
		private List<HEU_Curve> _curves;

		[Token(Token = "0x40012B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[SerializeField]
		private HEU_Curve.CurveDrawCollision _curveDrawCollision;

		[Token(Token = "0x40012B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[SerializeField]
		private List<Collider> _curveDrawColliders;

		[Token(Token = "0x40012BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[SerializeField]
		private LayerMask _curveDrawLayerMask;

		[Token(Token = "0x40012BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		[SerializeField]
		private float _curveProjectMaxDistance;

		[Token(Token = "0x40012BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[SerializeField]
		private Vector3 _curveProjectDirection;

		[Token(Token = "0x40012BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		[SerializeField]
		private List<HEU_InputNode> _inputNodes;

		[Token(Token = "0x40012BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		[SerializeField]
		private List<HEU_Handle> _handles;

		[Token(Token = "0x40012BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		[SerializeField]
		private bool _handlesEnabled;

		[Token(Token = "0x40012C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		[SerializeField]
		private List<HEU_VolumeCache> _volumeCaches;

		[Token(Token = "0x40012C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		[SerializeField]
		private List<HEU_AttributesStore> _attributeStores;

		[Token(Token = "0x40012C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		[SerializeField]
		private bool _editableNodesToolsEnabled;

		[Token(Token = "0x40012C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		[SerializeField]
		private HEU_ToolsInfo _toolsInfo;

		[Token(Token = "0x17000351")]
		public HEU_AssetType AssetType
		{
			[Token(Token = "0x6001DFD")]
			[Address(RVA = "0x12D4C38", Offset = "0x12D4C38", VA = "0x12D4C38")]
			get
			{
				return default(HEU_AssetType);
			}
		}

		[Token(Token = "0x17000352")]
		public HAPI_AssetInfo AssetInfo
		{
			[Token(Token = "0x6001DFE")]
			[Address(RVA = "0x12D4C40", Offset = "0x12D4C40", VA = "0x12D4C40")]
			get
			{
				return default(HAPI_AssetInfo);
			}
		}

		[Token(Token = "0x17000353")]
		public HAPI_NodeInfo NodeInfo
		{
			[Token(Token = "0x6001DFF")]
			[Address(RVA = "0x12D4C5C", Offset = "0x12D4C5C", VA = "0x12D4C5C")]
			get
			{
				return default(HAPI_NodeInfo);
			}
		}

		[Token(Token = "0x17000354")]
		public string AssetName
		{
			[Token(Token = "0x6001E00")]
			[Address(RVA = "0x12D4C6C", Offset = "0x12D4C6C", VA = "0x12D4C6C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000355")]
		public string AssetOpName
		{
			[Token(Token = "0x6001E01")]
			[Address(RVA = "0x12D4C74", Offset = "0x12D4C74", VA = "0x12D4C74")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000356")]
		public string AssetHelp
		{
			[Token(Token = "0x6001E02")]
			[Address(RVA = "0x12D4C7C", Offset = "0x12D4C7C", VA = "0x12D4C7C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000357")]
		public int TransformInputCount
		{
			[Token(Token = "0x6001E03")]
			[Address(RVA = "0x12D4C84", Offset = "0x12D4C84", VA = "0x12D4C84")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000358")]
		public int GeoInputCount
		{
			[Token(Token = "0x6001E04")]
			[Address(RVA = "0x12D4C8C", Offset = "0x12D4C8C", VA = "0x12D4C8C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000359")]
		public int AssetID
		{
			[Token(Token = "0x6001E05")]
			[Address(RVA = "0x12D4C94", Offset = "0x12D4C94", VA = "0x12D4C94")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700035A")]
		public string AssetPath
		{
			[Token(Token = "0x6001E06")]
			[Address(RVA = "0x12D4C9C", Offset = "0x12D4C9C", VA = "0x12D4C9C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700035B")]
		public bool LoadAssetFromMemory
		{
			[Token(Token = "0x6001E07")]
			[Address(RVA = "0x12D4CA4", Offset = "0x12D4CA4", VA = "0x12D4CA4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E08")]
			[Address(RVA = "0x12D4CAC", Offset = "0x12D4CAC", VA = "0x12D4CAC")]
			set
			{
			}
		}

		[Token(Token = "0x1700035C")]
		public int HandleCount
		{
			[Token(Token = "0x6001E09")]
			[Address(RVA = "0x12D4CB8", Offset = "0x12D4CB8", VA = "0x12D4CB8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700035D")]
		public GameObject OwnerGameObject
		{
			[Token(Token = "0x6001E0A")]
			[Address(RVA = "0x12CCBC4", Offset = "0x12CCBC4", VA = "0x12CCBC4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700035E")]
		public GameObject RootGameObject
		{
			[Token(Token = "0x6001E0B")]
			[Address(RVA = "0x12D4CC0", Offset = "0x12D4CC0", VA = "0x12D4CC0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700035F")]
		public HEU_Parameters Parameters
		{
			[Token(Token = "0x6001E0C")]
			[Address(RVA = "0x12D4CC8", Offset = "0x12D4CC8", VA = "0x12D4CC8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000360")]
		public string[] SubassetNames
		{
			[Token(Token = "0x6001E0D")]
			[Address(RVA = "0x12D4CD0", Offset = "0x12D4CD0", VA = "0x12D4CD0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000361")]
		public long SessionID
		{
			[Token(Token = "0x6001E0E")]
			[Address(RVA = "0x12D4CD8", Offset = "0x12D4CD8", VA = "0x12D4CD8")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x17000362")]
		public bool WarnedPrefabNotSupported
		{
			[Token(Token = "0x6001E0F")]
			[Address(RVA = "0x12D4CE0", Offset = "0x12D4CE0", VA = "0x12D4CE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2E9D0", Offset = "0xA2E9D0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E10")]
			[Address(RVA = "0x12D4CE8", Offset = "0x12D4CE8", VA = "0x12D4CE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2E9E0", Offset = "0xA2E9E0")]
			set
			{
			}
		}

		[Token(Token = "0x17000363")]
		public HEU_InstanceInputUIState InstanceInputUIState
		{
			[Token(Token = "0x6001E11")]
			[Address(RVA = "0x12D4CF4", Offset = "0x12D4CF4", VA = "0x12D4CF4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E12")]
			[Address(RVA = "0x12D4CFC", Offset = "0x12D4CFC", VA = "0x12D4CFC")]
			set
			{
			}
		}

		[Token(Token = "0x17000364")]
		public bool GenerateUVs
		{
			[Token(Token = "0x6001E13")]
			[Address(RVA = "0x12D4D04", Offset = "0x12D4D04", VA = "0x12D4D04")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E14")]
			[Address(RVA = "0x12D4D0C", Offset = "0x12D4D0C", VA = "0x12D4D0C")]
			set
			{
			}
		}

		[Token(Token = "0x17000365")]
		public bool GenerateTangents
		{
			[Token(Token = "0x6001E15")]
			[Address(RVA = "0x12D4D18", Offset = "0x12D4D18", VA = "0x12D4D18")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E16")]
			[Address(RVA = "0x12D4D20", Offset = "0x12D4D20", VA = "0x12D4D20")]
			set
			{
			}
		}

		[Token(Token = "0x17000366")]
		public bool GenerateNormals
		{
			[Token(Token = "0x6001E17")]
			[Address(RVA = "0x12D4D2C", Offset = "0x12D4D2C", VA = "0x12D4D2C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E18")]
			[Address(RVA = "0x12D4D34", Offset = "0x12D4D34", VA = "0x12D4D34")]
			set
			{
			}
		}

		[Token(Token = "0x17000367")]
		public bool PushTransformToHoudini
		{
			[Token(Token = "0x6001E19")]
			[Address(RVA = "0x12D4D40", Offset = "0x12D4D40", VA = "0x12D4D40")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E1A")]
			[Address(RVA = "0x12D4D48", Offset = "0x12D4D48", VA = "0x12D4D48")]
			set
			{
			}
		}

		[Token(Token = "0x17000368")]
		public bool TransformChangeTriggersCooks
		{
			[Token(Token = "0x6001E1B")]
			[Address(RVA = "0x12D4D54", Offset = "0x12D4D54", VA = "0x12D4D54")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E1C")]
			[Address(RVA = "0x12D4D5C", Offset = "0x12D4D5C", VA = "0x12D4D5C")]
			set
			{
			}
		}

		[Token(Token = "0x17000369")]
		public bool CookingTriggersDownCooks
		{
			[Token(Token = "0x6001E1D")]
			[Address(RVA = "0x12D4D68", Offset = "0x12D4D68", VA = "0x12D4D68")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E1E")]
			[Address(RVA = "0x12D4D70", Offset = "0x12D4D70", VA = "0x12D4D70")]
			set
			{
			}
		}

		[Token(Token = "0x1700036A")]
		public bool AutoCookOnParameterChange
		{
			[Token(Token = "0x6001E1F")]
			[Address(RVA = "0x12D4D7C", Offset = "0x12D4D7C", VA = "0x12D4D7C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E20")]
			[Address(RVA = "0x12D4D84", Offset = "0x12D4D84", VA = "0x12D4D84")]
			set
			{
			}
		}

		[Token(Token = "0x1700036B")]
		public bool IgnoreNonDisplayNodes
		{
			[Token(Token = "0x6001E21")]
			[Address(RVA = "0x12D4D90", Offset = "0x12D4D90", VA = "0x12D4D90")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E22")]
			[Address(RVA = "0x12D4D98", Offset = "0x12D4D98", VA = "0x12D4D98")]
			set
			{
			}
		}

		[Token(Token = "0x1700036C")]
		public bool GenerateMeshUsingPoints
		{
			[Token(Token = "0x6001E23")]
			[Address(RVA = "0x12D4DA4", Offset = "0x12D4DA4", VA = "0x12D4DA4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E24")]
			[Address(RVA = "0x12D4DAC", Offset = "0x12D4DAC", VA = "0x12D4DAC")]
			set
			{
			}
		}

		[Token(Token = "0x1700036D")]
		public bool UseLODGroups
		{
			[Token(Token = "0x6001E25")]
			[Address(RVA = "0x12D4DB8", Offset = "0x12D4DB8", VA = "0x12D4DB8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E26")]
			[Address(RVA = "0x12D4DC0", Offset = "0x12D4DC0", VA = "0x12D4DC0")]
			set
			{
			}
		}

		[Token(Token = "0x1700036E")]
		public bool SplitGeosByGroup
		{
			[Token(Token = "0x6001E27")]
			[Address(RVA = "0x12D4DCC", Offset = "0x12D4DCC", VA = "0x12D4DCC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E28")]
			[Address(RVA = "0x12D4DD4", Offset = "0x12D4DD4", VA = "0x12D4DD4")]
			set
			{
			}
		}

		[Token(Token = "0x1700036F")]
		public bool SessionSyncAutoCook
		{
			[Token(Token = "0x6001E29")]
			[Address(RVA = "0x12D4DE0", Offset = "0x12D4DE0", VA = "0x12D4DE0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E2A")]
			[Address(RVA = "0x12D4DE8", Offset = "0x12D4DE8", VA = "0x12D4DE8")]
			set
			{
			}
		}

		[Token(Token = "0x17000370")]
		public bool CurveEditorEnabled
		{
			[Token(Token = "0x6001E2B")]
			[Address(RVA = "0x12D4DF4", Offset = "0x12D4DF4", VA = "0x12D4DF4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E2C")]
			[Address(RVA = "0x12D4DFC", Offset = "0x12D4DFC", VA = "0x12D4DFC")]
			set
			{
			}
		}

		[Token(Token = "0x17000371")]
		public HEU_Curve.CurveDrawCollision CurveDrawCollision
		{
			[Token(Token = "0x6001E2D")]
			[Address(RVA = "0x12D4E08", Offset = "0x12D4E08", VA = "0x12D4E08")]
			get
			{
				return default(HEU_Curve.CurveDrawCollision);
			}
			[Token(Token = "0x6001E2E")]
			[Address(RVA = "0x12D4E10", Offset = "0x12D4E10", VA = "0x12D4E10")]
			set
			{
			}
		}

		[Token(Token = "0x17000372")]
		public bool HandlesEnabled
		{
			[Token(Token = "0x6001E32")]
			[Address(RVA = "0x12D4E30", Offset = "0x12D4E30", VA = "0x12D4E30")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E33")]
			[Address(RVA = "0x12D4E38", Offset = "0x12D4E38", VA = "0x12D4E38")]
			set
			{
			}
		}

		[Token(Token = "0x17000373")]
		public bool EditableNodesToolsEnabled
		{
			[Token(Token = "0x6001E34")]
			[Address(RVA = "0x12D4E44", Offset = "0x12D4E44", VA = "0x12D4E44")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E35")]
			[Address(RVA = "0x12D4E4C", Offset = "0x12D4E4C", VA = "0x12D4E4C")]
			set
			{
			}
		}

		[Token(Token = "0x17000374")]
		public HEU_ToolsInfo ToolsInfo
		{
			[Token(Token = "0x6001E36")]
			[Address(RVA = "0x12D4E58", Offset = "0x12D4E58", VA = "0x12D4E58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E2F")]
		[Address(RVA = "0x12D4E18", Offset = "0x12D4E18", VA = "0x12D4E18")]
		public List<Collider> GetCurveDrawColliders()
		{
			return null;
		}

		[Token(Token = "0x6001E30")]
		[Address(RVA = "0x12D4E20", Offset = "0x12D4E20", VA = "0x12D4E20")]
		public LayerMask GetCurveDrawLayerMask()
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6001E31")]
		[Address(RVA = "0x12D4E28", Offset = "0x12D4E28", VA = "0x12D4E28")]
		public void SetCurveDrawLayerMask(LayerMask mask)
		{
		}

		[Token(Token = "0x6001E37")]
		[Address(RVA = "0x12D0434", Offset = "0x12D0434", VA = "0x12D0434")]
		public void SetupAsset(HEU_AssetType assetType, string filePath, GameObject rootGameObject, HEU_SessionBase session)
		{
		}

		[Token(Token = "0x6001E38")]
		[Address(RVA = "0x12D4E60", Offset = "0x12D4E60", VA = "0x12D4E60")]
		public void CleanUpAndDisable()
		{
		}

		[Token(Token = "0x6001E39")]
		[Address(RVA = "0x12D5094", Offset = "0x12D5094", VA = "0x12D5094")]
		public bool IsAssetSavedInScene()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E3A")]
		[Address(RVA = "0x12D50B0", Offset = "0x12D50B0", VA = "0x12D50B0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E3B")]
		[Address(RVA = "0x12D4EBC", Offset = "0x12D4EBC", VA = "0x12D4EBC")]
		public void InvalidateAsset()
		{
		}

		[Token(Token = "0x6001E3C")]
		[Address(RVA = "0x12D50B4", Offset = "0x12D50B4", VA = "0x12D50B4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001E3D")]
		[Address(RVA = "0x12D50B8", Offset = "0x12D50B8", VA = "0x12D50B8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001E3E")]
		[Address(RVA = "0x12D50BC", Offset = "0x12D50BC", VA = "0x12D50BC")]
		public void AssetUpdate()
		{
		}

		[Token(Token = "0x6001E3F")]
		[Address(RVA = "0x12D50C0", Offset = "0x12D50C0", VA = "0x12D50C0")]
		public void PostAssetUpdate()
		{
		}

		[Token(Token = "0x6001E40")]
		[Address(RVA = "0x12D50C4", Offset = "0x12D50C4", VA = "0x12D50C4")]
		public void RequestResetParameters(bool bAsync)
		{
		}

		[Token(Token = "0x6001E41")]
		[Address(RVA = "0x12D0668", Offset = "0x12D0668", VA = "0x12D0668")]
		public void RequestReload(bool bAsync)
		{
		}

		[Token(Token = "0x6001E42")]
		[Address(RVA = "0x12D50C8", Offset = "0x12D50C8", VA = "0x12D50C8")]
		public void RequestCook(bool bCheckParametersChanged, bool bAsync, bool bSkipCookCheck, bool bUploadParameters)
		{
		}

		[Token(Token = "0x6001E43")]
		[Address(RVA = "0x12D50CC", Offset = "0x12D50CC", VA = "0x12D50CC")]
		public void RequestBakeInPlace()
		{
		}

		[Token(Token = "0x6001E44")]
		[Address(RVA = "0x12D50E4", Offset = "0x12D50E4", VA = "0x12D50E4")]
		public void ClearBuildRequest()
		{
		}

		[Token(Token = "0x6001E45")]
		[Address(RVA = "0x12D50F4", Offset = "0x12D50F4", VA = "0x12D50F4")]
		private bool HasValidAssetPath()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E46")]
		[Address(RVA = "0x12D5118", Offset = "0x12D5118", VA = "0x12D5118")]
		private void ProcessRebuild(bool bPromptForSubasset, int desiredSubassetIndex)
		{
		}

		[Token(Token = "0x6001E47")]
		[Address(RVA = "0x12D5390", Offset = "0x12D5390", VA = "0x12D5390")]
		private bool StartRebuild(bool bPromptForSubasset, int desiredSubassetIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E48")]
		[Address(RVA = "0x12D553C", Offset = "0x12D553C", VA = "0x12D553C")]
		private bool FinishRebuild()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E49")]
		[Address(RVA = "0x12D814C", Offset = "0x12D814C", VA = "0x12D814C")]
		private bool RecookAsync(bool bCheckParamsChanged, bool bSkipCookCheck, bool bUploadParameters, bool bUploadParameterPreset, bool bForceUploadInputs, bool bCookingSessionSync)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E4A")]
		[Address(RVA = "0x12D8944", Offset = "0x12D8944", VA = "0x12D8944")]
		private bool RecookBlocking(bool bCheckParamsChanged, bool bSkipCookCheck, bool bUploadParameters, bool bUploadParameterPreset, bool bForceUploadInputs, bool bCookingSessionSync)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E4B")]
		[Address(RVA = "0x12D7BB4", Offset = "0x12D7BB4", VA = "0x12D7BB4")]
		private void DoPostCookWork(HEU_SessionBase session)
		{
		}

		[Token(Token = "0x6001E4C")]
		[Address(RVA = "0x12D8DAC", Offset = "0x12D8DAC", VA = "0x12D8DAC")]
		public bool IsValidForInteraction(ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E4D")]
		[Address(RVA = "0x12D8E2C", Offset = "0x12D8E2C", VA = "0x12D8E2C")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001E4E")]
		[Address(RVA = "0x12D8894", Offset = "0x12D8894", VA = "0x12D8894")]
		private void ExecutePostCookCallbacks()
		{
		}

		[Token(Token = "0x6001E4F")]
		[Address(RVA = "0x12D82D4", Offset = "0x12D82D4", VA = "0x12D82D4")]
		private bool InternalStartRecook(bool bCheckParamsChanged, bool bSkipCookCheck, bool bUploadParameters, bool bUploadParameterPreset, bool bForceUploadInputs, bool bCookingSessionSync)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E50")]
		[Address(RVA = "0x12D610C", Offset = "0x12D610C", VA = "0x12D610C")]
		private void InternalSetAssetID(int assetID)
		{
		}

		[Token(Token = "0x6001E51")]
		[Address(RVA = "0x12D5A74", Offset = "0x12D5A74", VA = "0x12D5A74")]
		private void SetCookStatus(AssetCookStatus status, AssetCookResult result)
		{
		}

		[Token(Token = "0x6001E52")]
		[Address(RVA = "0x12D9864", Offset = "0x12D9864", VA = "0x12D9864")]
		public AssetCookStatus GetCookStatus()
		{
			return default(AssetCookStatus);
		}

		[Token(Token = "0x6001E53")]
		[Address(RVA = "0x12D986C", Offset = "0x12D986C", VA = "0x12D986C")]
		private void ProcessPoskCook()
		{
		}

		[Token(Token = "0x6001E54")]
		[Address(RVA = "0x12D97EC", Offset = "0x12D97EC", VA = "0x12D97EC")]
		private bool StartHoudiniCookNode(HEU_SessionBase session)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E55")]
		[Address(RVA = "0x12D8AD8", Offset = "0x12D8AD8", VA = "0x12D8AD8")]
		private void ProcessHoudiniCookStatus(bool bAsync)
		{
		}

		[Token(Token = "0x6001E56")]
		[Address(RVA = "0x12DA72C", Offset = "0x12DA72C", VA = "0x12DA72C")]
		public bool DoesAssetRequireRecook()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E57")]
		[Address(RVA = "0x12DAAC4", Offset = "0x12DAAC4", VA = "0x12DAAC4")]
		public void DeleteSessionDataOnly()
		{
		}

		[Token(Token = "0x6001E58")]
		[Address(RVA = "0x12D4EC8", Offset = "0x12D4EC8", VA = "0x12D4EC8")]
		public void DeleteAllGeneratedData()
		{
		}

		[Token(Token = "0x6001E59")]
		[Address(RVA = "0x12DADA0", Offset = "0x12DADA0", VA = "0x12DADA0")]
		private void CleanUpInputNodes()
		{
		}

		[Token(Token = "0x6001E5A")]
		[Address(RVA = "0x12DB108", Offset = "0x12DB108", VA = "0x12DB108")]
		public void DeleteAssetCacheData(bool bRegisterUndo)
		{
		}

		[Token(Token = "0x6001E5B")]
		[Address(RVA = "0x12D6F4C", Offset = "0x12D6F4C", VA = "0x12D6F4C")]
		private void GenerateParameters(HEU_SessionBase session)
		{
		}

		[Token(Token = "0x6001E5C")]
		[Address(RVA = "0x12D9A4C", Offset = "0x12D9A4C", VA = "0x12D9A4C")]
		private void DownloadParameterPresetFromHoudini(HEU_SessionBase session)
		{
		}

		[Token(Token = "0x6001E5D")]
		[Address(RVA = "0x12D8F74", Offset = "0x12D8F74", VA = "0x12D8F74")]
		private void UploadParameterPresetToHoudini(HEU_SessionBase session)
		{
		}

		[Token(Token = "0x6001E5E")]
		[Address(RVA = "0x12D9110", Offset = "0x12D9110", VA = "0x12D9110")]
		private void UpdateParameterInputsToHoudini(HEU_SessionBase session, bool bForceUpdate)
		{
		}

		[Token(Token = "0x6001E5F")]
		[Address(RVA = "0x12D624C", Offset = "0x12D624C", VA = "0x12D624C")]
		private bool LoadAssetFileWithSubasset(HEU_SessionBase session, bool bPromptForSubasset, int desiredSubassetIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E60")]
		[Address(RVA = "0x12D6860", Offset = "0x12D6860", VA = "0x12D6860")]
		private bool CreateAndCookAsset(HEU_SessionBase session, int subassetIndex, out int newAssetID, bool bCookTemplatedGeos)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E61")]
		[Address(RVA = "0x12D6B3C", Offset = "0x12D6B3C", VA = "0x12D6B3C")]
		private void CreateAssetInputs(HEU_SessionBase session)
		{
		}

		[Token(Token = "0x6001E62")]
		[Address(RVA = "0x12D91C4", Offset = "0x12D91C4", VA = "0x12D91C4")]
		private void UploadCurvesParameters(HEU_SessionBase session, bool bCheckParamsChanged)
		{
		}

		[Token(Token = "0x6001E63")]
		[Address(RVA = "0x12D9340", Offset = "0x12D9340", VA = "0x12D9340")]
		private void UploadAttributeValues(HEU_SessionBase session)
		{
		}

		[Token(Token = "0x6001E64")]
		[Address(RVA = "0x12DA234", Offset = "0x12DA234", VA = "0x12DA234")]
		private void SyncDirtyAttributesToHoudini(HEU_SessionBase session)
		{
		}

		[Token(Token = "0x6001E65")]
		[Address(RVA = "0x12D967C", Offset = "0x12D967C", VA = "0x12D967C")]
		private void UploadInputNodes(HEU_SessionBase session, bool bForceUpdate, bool bUpdateAll)
		{
		}

		[Token(Token = "0x6001E66")]
		[Address(RVA = "0x12DB288", Offset = "0x12DB288", VA = "0x12DB288")]
		public bool HasInputNodeTransformChanged()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E67")]
		[Address(RVA = "0x12D7ABC", Offset = "0x12D7ABC", VA = "0x12D7ABC")]
		private void NotifyInputNodesCookFinished()
		{
		}

		[Token(Token = "0x6001E68")]
		[Address(RVA = "0x12D7148", Offset = "0x12D7148", VA = "0x12D7148")]
		private bool CreateObjects(HEU_SessionBase session)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E69")]
		[Address(RVA = "0x12D9D0C", Offset = "0x12D9D0C", VA = "0x12D9D0C")]
		private void UpdateAllObjectNodes(HEU_SessionBase session)
		{
		}

		[Token(Token = "0x6001E6A")]
		[Address(RVA = "0x12DB390", Offset = "0x12DB390", VA = "0x12DB390")]
		private HEU_ObjectNode CreateObjectNode(HEU_SessionBase session, ref HAPI_ObjectInfo objectInfo, ref HAPI_Transform objectTranform)
		{
			return null;
		}

		[Token(Token = "0x6001E6B")]
		[Address(RVA = "0x12D7284", Offset = "0x12D7284", VA = "0x12D7284")]
		private void GenerateObjectsGeometry(HEU_SessionBase session, bool bRebuild)
		{
		}

		[Token(Token = "0x6001E6C")]
		[Address(RVA = "0x12D7574", Offset = "0x12D7574", VA = "0x12D7574")]
		private void GenerateAttributesStore(HEU_SessionBase session)
		{
		}

		[Token(Token = "0x6001E6D")]
		[Address(RVA = "0x12D7398", Offset = "0x12D7398", VA = "0x12D7398")]
		private void GenerateInstances(HEU_SessionBase session)
		{
		}

		[Token(Token = "0x6001E6E")]
		[Address(RVA = "0x12D767C", Offset = "0x12D767C", VA = "0x12D767C")]
		private void GenerateHandles(HEU_SessionBase session)
		{
		}

		[Token(Token = "0x6001E6F")]
		[Address(RVA = "0x12DAFF0", Offset = "0x12DAFF0", VA = "0x12DAFF0")]
		public void CleanUpHandles()
		{
		}

		[Token(Token = "0x6001E70")]
		[Address(RVA = "0x12DB470", Offset = "0x12DB470", VA = "0x12DB470")]
		public HEU_Handle GetHandleByName(string handleName)
		{
			return null;
		}

		[Token(Token = "0x6001E71")]
		[Address(RVA = "0x12DB59C", Offset = "0x12DB59C", VA = "0x12DB59C")]
		public List<HEU_Handle> GetHandles()
		{
			return null;
		}

		[Token(Token = "0x6001E72")]
		[Address(RVA = "0x12DB5A4", Offset = "0x12DB5A4", VA = "0x12DB5A4")]
		public int NumHandles()
		{
			return default(int);
		}

		[Token(Token = "0x6001E73")]
		[Address(RVA = "0x12DB5F8", Offset = "0x12DB5F8", VA = "0x12DB5F8")]
		public HAPI_Transform GetObjectTransform(HEU_SessionBase session, int objectID)
		{
			return default(HAPI_Transform);
		}

		[Token(Token = "0x6001E74")]
		[Address(RVA = "0x12DB86C", Offset = "0x12DB86C", VA = "0x12DB86C")]
		public HEU_ObjectNode GetObjectWithID(int objId)
		{
			return null;
		}

		[Token(Token = "0x6001E75")]
		[Address(RVA = "0x12DB95C", Offset = "0x12DB95C", VA = "0x12DB95C")]
		private void InvokeBakedEvent(bool bSuccess, List<GameObject> outputObjects)
		{
		}

		[Token(Token = "0x6001E76")]
		[Address(RVA = "0x12DB9DC", Offset = "0x12DB9DC", VA = "0x12DB9DC")]
		private GameObject CloneAssetWithoutHDA(ref string bakedAssetPath, bool bWriteMeshesToAssetDatabase, bool bReconnectPrefabInstances)
		{
			return null;
		}

		[Token(Token = "0x6001E77")]
		[Address(RVA = "0x12DC07C", Offset = "0x12DC07C", VA = "0x12DC07C")]
		public GameObject BakeToNewPrefab([Optional] string destinationPrefabPath)
		{
			return null;
		}

		[Token(Token = "0x6001E78")]
		[Address(RVA = "0x12DC388", Offset = "0x12DC388", VA = "0x12DC388")]
		public GameObject BakeToNewStandalone()
		{
			return null;
		}

		[Token(Token = "0x6001E79")]
		[Address(RVA = "0x12DC488", Offset = "0x12DC488", VA = "0x12DC488")]
		public void BakeToExistingPrefab(GameObject bakeTargetGO)
		{
		}

		[Token(Token = "0x6001E7A")]
		[Address(RVA = "0x12DC9CC", Offset = "0x12DC9CC", VA = "0x12DC9CC")]
		public void BakeToExistingStandalone(GameObject bakeTargetGO)
		{
		}

		[Token(Token = "0x6001E7B")]
		[Address(RVA = "0x12DD100", Offset = "0x12DD100", VA = "0x12DD100")]
		public void NotifyUpstreamCooked(HEU_HoudiniAsset upstreamAsset, bool bSuccess, List<GameObject> outputs)
		{
		}

		[Token(Token = "0x6001E7C")]
		[Address(RVA = "0x12DD130", Offset = "0x12DD130", VA = "0x12DD130")]
		public void ConnectToUpstream(HEU_HoudiniAsset upstreamAsset)
		{
		}

		[Token(Token = "0x6001E7D")]
		[Address(RVA = "0x12DD244", Offset = "0x12DD244", VA = "0x12DD244")]
		public void DisconnectFromUpstream(HEU_HoudiniAsset upstreamAsset)
		{
		}

		[Token(Token = "0x6001E7E")]
		[Address(RVA = "0x12DD1C0", Offset = "0x12DD1C0", VA = "0x12DD1C0")]
		private void AddDownstreamConnection(UnityAction<HEU_HoudiniAsset, bool, List<GameObject>> receiver)
		{
		}

		[Token(Token = "0x6001E7F")]
		[Address(RVA = "0x12DD2D4", Offset = "0x12DD2D4", VA = "0x12DD2D4")]
		private void RemoveDownstreamConnection(UnityAction<HEU_HoudiniAsset, bool, List<GameObject>> receiver)
		{
		}

		[Token(Token = "0x6001E80")]
		[Address(RVA = "0x12DAB84", Offset = "0x12DAB84", VA = "0x12DAB84")]
		private void ClearAllUpstreamConnections()
		{
		}

		[Token(Token = "0x6001E81")]
		[Address(RVA = "0x12D8E6C", Offset = "0x12D8E6C", VA = "0x12D8E6C")]
		private void UpdateInputsOnAssetRecreation(HEU_SessionBase session)
		{
		}

		[Token(Token = "0x6001E82")]
		[Address(RVA = "0x12DD33C", Offset = "0x12DD33C", VA = "0x12DD33C")]
		public void ReconnectInputsUpstreamNotifications()
		{
		}

		[Token(Token = "0x6001E83")]
		[Address(RVA = "0x12DD478", Offset = "0x12DD478", VA = "0x12DD478")]
		public void GetHoudiniTransformAndApply(HEU_SessionBase session)
		{
		}

		[Token(Token = "0x6001E84")]
		[Address(RVA = "0x12D77FC", Offset = "0x12D77FC", VA = "0x12D77FC")]
		public void UploadUnityTransform(HEU_SessionBase session, bool bOnlySendIfChangedFromLastSync)
		{
		}

		[Token(Token = "0x6001E85")]
		[Address(RVA = "0x12DD764", Offset = "0x12DD764", VA = "0x12DD764")]
		public HEU_MaterialData GetMaterialData(Material material)
		{
			return null;
		}

		[Token(Token = "0x6001E86")]
		[Address(RVA = "0x12DD8B4", Offset = "0x12DD8B4", VA = "0x12DD8B4")]
		public List<HEU_MaterialData> GetMaterialCache()
		{
			return null;
		}

		[Token(Token = "0x6001E87")]
		[Address(RVA = "0x12DAB2C", Offset = "0x12DAB2C", VA = "0x12DAB2C")]
		public void ClearMaterialCache()
		{
		}

		[Token(Token = "0x6001E88")]
		[Address(RVA = "0x12D9B00", Offset = "0x12D9B00", VA = "0x12D9B00")]
		private void UpdateHoudiniMaterials(HEU_SessionBase session)
		{
		}

		[Token(Token = "0x6001E89")]
		[Address(RVA = "0x12DA3BC", Offset = "0x12DA3BC", VA = "0x12DA3BC")]
		private void RemoveUnusedMaterials()
		{
		}

		[Token(Token = "0x6001E8A")]
		[Address(RVA = "0x12DD93C", Offset = "0x12DD93C", VA = "0x12DD93C")]
		public void RemoveMaterial(Material material)
		{
		}

		[Token(Token = "0x6001E8B")]
		[Address(RVA = "0x12D60B0", Offset = "0x12D60B0", VA = "0x12D60B0")]
		public bool IsAssetValidInHoudini(HEU_SessionBase session)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E8C")]
		[Address(RVA = "0x12DDA7C", Offset = "0x12DDA7C", VA = "0x12DDA7C")]
		public bool IsAssetValid()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E8D")]
		[Address(RVA = "0x12DDAC8", Offset = "0x12DDAC8", VA = "0x12DDAC8")]
		public bool HasTransformChangedSinceLastUpdate()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E8E")]
		[Address(RVA = "0x12DBF48", Offset = "0x12DBF48", VA = "0x12DBF48")]
		public void GetClonableParts(List<HEU_PartData> clonableParts)
		{
		}

		[Token(Token = "0x6001E8F")]
		[Address(RVA = "0x12D5A80", Offset = "0x12D5A80", VA = "0x12D5A80")]
		public void GetOutputGameObjects(List<GameObject> outputObjects)
		{
		}

		[Token(Token = "0x6001E90")]
		[Address(RVA = "0x12DDBB0", Offset = "0x12DDBB0", VA = "0x12DDBB0")]
		public void GetOutput(List<HEU_GeneratedOutput> outputs)
		{
		}

		[Token(Token = "0x6001E91")]
		[Address(RVA = "0x12DDCB8", Offset = "0x12DDCB8", VA = "0x12DDCB8")]
		public void GetOutputGeoNodes(List<HEU_GeoNode> outputGeoNodes)
		{
		}

		[Token(Token = "0x6001E92")]
		[Address(RVA = "0x12DDDC0", Offset = "0x12DDDC0", VA = "0x12DDDC0")]
		public HEU_PartData GetInternalHDAPartWithGameObject(GameObject outputGameObject)
		{
			return null;
		}

		[Token(Token = "0x6001E93")]
		[Address(RVA = "0x12DDF18", Offset = "0x12DDF18", VA = "0x12DDF18")]
		public List<HEU_Curve> GetCurves()
		{
			return null;
		}

		[Token(Token = "0x6001E94")]
		[Address(RVA = "0x12DDF20", Offset = "0x12DDF20", VA = "0x12DDF20")]
		public HEU_Curve GetCurve(string curveName)
		{
			return null;
		}

		[Token(Token = "0x6001E95")]
		[Address(RVA = "0x12DE04C", Offset = "0x12DE04C", VA = "0x12DE04C")]
		public int GetEditableCurveCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001E96")]
		[Address(RVA = "0x12DE148", Offset = "0x12DE148", VA = "0x12DE148")]
		public void AddCurve(HEU_Curve curve)
		{
		}

		[Token(Token = "0x6001E97")]
		[Address(RVA = "0x12CB108", Offset = "0x12CB108", VA = "0x12CB108")]
		public void RemoveCurve(HEU_Curve curve)
		{
		}

		[Token(Token = "0x6001E98")]
		[Address(RVA = "0x12DE1E0", Offset = "0x12DE1E0", VA = "0x12DE1E0")]
		public void AddCurveDrawCollider(Collider newCollider)
		{
		}

		[Token(Token = "0x6001E99")]
		[Address(RVA = "0x12DE278", Offset = "0x12DE278", VA = "0x12DE278")]
		public void RemoveCurveDrawCollider(Collider collider)
		{
		}

		[Token(Token = "0x6001E9A")]
		[Address(RVA = "0x12DE2EC", Offset = "0x12DE2EC", VA = "0x12DE2EC")]
		public void ClearCurveDrawColliders()
		{
		}

		[Token(Token = "0x6001E9B")]
		[Address(RVA = "0x12DE34C", Offset = "0x12DE34C", VA = "0x12DE34C")]
		public List<HEU_InputNode> GetInputNodes()
		{
			return null;
		}

		[Token(Token = "0x6001E9C")]
		[Address(RVA = "0x12DE354", Offset = "0x12DE354", VA = "0x12DE354")]
		public HEU_InputNode GetInputNode(string inputName)
		{
			return null;
		}

		[Token(Token = "0x6001E9D")]
		[Address(RVA = "0x12DB148", Offset = "0x12DB148", VA = "0x12DB148")]
		public HEU_InputNode GetAssetInputNode(string inputName)
		{
			return null;
		}

		[Token(Token = "0x6001E9E")]
		[Address(RVA = "0x12DE480", Offset = "0x12DE480", VA = "0x12DE480")]
		public HEU_InputNode GetInputNodeByIndex(int index)
		{
			return null;
		}

		[Token(Token = "0x6001E9F")]
		[Address(RVA = "0x12DE508", Offset = "0x12DE508", VA = "0x12DE508")]
		public List<HEU_InputNode> GetNonParameterInputNodes()
		{
			return null;
		}

		[Token(Token = "0x6001EA0")]
		[Address(RVA = "0x12CC75C", Offset = "0x12CC75C", VA = "0x12CC75C")]
		public void AddInputNode(HEU_InputNode node)
		{
		}

		[Token(Token = "0x6001EA1")]
		[Address(RVA = "0x12CAF20", Offset = "0x12CAF20", VA = "0x12CAF20")]
		public void RemoveInputNode(HEU_InputNode node)
		{
		}

		[Token(Token = "0x6001EA2")]
		[Address(RVA = "0x12DE658", Offset = "0x12DE658", VA = "0x12DE658")]
		public void InputNodeNotifyRemoved(HEU_InputNode node)
		{
		}

		[Token(Token = "0x6001EA3")]
		[Address(RVA = "0x12DE65C", Offset = "0x12DE65C", VA = "0x12DE65C")]
		public int GetVolumeCacheCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001EA4")]
		[Address(RVA = "0x12DE6AC", Offset = "0x12DE6AC", VA = "0x12DE6AC")]
		public List<HEU_VolumeCache> GetVolumeCaches()
		{
			return null;
		}

		[Token(Token = "0x6001EA5")]
		[Address(RVA = "0x12DE6B4", Offset = "0x12DE6B4", VA = "0x12DE6B4")]
		public void AddVolumeCache(HEU_VolumeCache cache)
		{
		}

		[Token(Token = "0x6001EA6")]
		[Address(RVA = "0x12CEC60", Offset = "0x12CEC60", VA = "0x12CEC60")]
		public void RemoveVolumeCache(HEU_VolumeCache cache)
		{
		}

		[Token(Token = "0x6001EA7")]
		[Address(RVA = "0x12DE74C", Offset = "0x12DE74C", VA = "0x12DE74C")]
		public List<HEU_AttributesStore> GetAttributesStores()
		{
			return null;
		}

		[Token(Token = "0x6001EA8")]
		[Address(RVA = "0x12DE754", Offset = "0x12DE754", VA = "0x12DE754")]
		public int NumAttributeStores()
		{
			return default(int);
		}

		[Token(Token = "0x6001EA9")]
		[Address(RVA = "0x12DE7A8", Offset = "0x12DE7A8", VA = "0x12DE7A8")]
		public HEU_AttributesStore GetAttributeStore(string geoName, int partID)
		{
			return null;
		}

		[Token(Token = "0x6001EAA")]
		[Address(RVA = "0x12DE8E4", Offset = "0x12DE8E4", VA = "0x12DE8E4")]
		public void AddAttributeStore(HEU_AttributesStore attributeStore)
		{
		}

		[Token(Token = "0x6001EAB")]
		[Address(RVA = "0x12DEA24", Offset = "0x12DEA24", VA = "0x12DEA24")]
		public void RemoveAttributeStore(HEU_AttributesStore attributeStore)
		{
		}

		[Token(Token = "0x6001EAC")]
		[Address(RVA = "0x12DEA8C", Offset = "0x12DEA8C", VA = "0x12DEA8C")]
		public void ReorderAttributeStore(int oldIndex, int newIndex)
		{
		}

		[Token(Token = "0x6001EAD")]
		[Address(RVA = "0x12DEB8C", Offset = "0x12DEB8C", VA = "0x12DEB8C")]
		public static HEU_PartData GetSceneHDAPartWithGameObject(GameObject outputGameObject)
		{
			return null;
		}

		[Token(Token = "0x6001EAE")]
		[Address(RVA = "0x12DECF0", Offset = "0x12DECF0", VA = "0x12DECF0")]
		public static HEU_HoudiniAsset GetSceneHDAAssetFromGameObject(GameObject outputGameObject)
		{
			return null;
		}

		[Token(Token = "0x6001EAF")]
		[Address(RVA = "0x12DEE50", Offset = "0x12DEE50", VA = "0x12DEE50")]
		public static bool IsHoudiniAssetOutput(GameObject go)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EB0")]
		[Address(RVA = "0x12DEFB4", Offset = "0x12DEFB4", VA = "0x12DEFB4")]
		public static bool IsHoudiniAssetRoot(GameObject go)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EB1")]
		[Address(RVA = "0x12DF044", Offset = "0x12DF044", VA = "0x12DF044")]
		public void PopulateObjectInstanceInfos(List<HEU_ObjectInstanceInfo> objInstanceInfos)
		{
		}

		[Token(Token = "0x6001EB2")]
		[Address(RVA = "0x12DF18C", Offset = "0x12DF18C", VA = "0x12DF18C")]
		public void AddToAssetDBCache(string assetObjectFileName, UnityEngine.Object objectToAdd, string relativeFolderPath, ref UnityEngine.Object targetAssetDBObject)
		{
		}

		[Token(Token = "0x6001EB3")]
		[Address(RVA = "0x12DF1F0", Offset = "0x12DF1F0", VA = "0x12DF1F0")]
		public static void SetCurvesVisibilityInScene(bool bShow)
		{
		}

		[Token(Token = "0x6001EB4")]
		[Address(RVA = "0x12CAF88", Offset = "0x12CAF88", VA = "0x12CAF88")]
		public HEU_SessionBase GetAssetSession(bool bCreateIfInvalid)
		{
			return null;
		}

		[Token(Token = "0x6001EB5")]
		[Address(RVA = "0x12DD8BC", Offset = "0x12DD8BC", VA = "0x12DD8BC")]
		public string GetValidAssetCacheFolderPath()
		{
			return null;
		}

		[Token(Token = "0x6001EB6")]
		[Address(RVA = "0x12DF3B4", Offset = "0x12DF3B4", VA = "0x12DF3B4")]
		public void HideAllGeometry()
		{
		}

		[Token(Token = "0x6001EB7")]
		[Address(RVA = "0x12DF4AC", Offset = "0x12DF4AC", VA = "0x12DF4AC")]
		public void CalculateVisibility()
		{
		}

		[Token(Token = "0x6001EB8")]
		[Address(RVA = "0x12DF5A4", Offset = "0x12DF5A4", VA = "0x12DF5A4")]
		public void DisableAllColliders()
		{
		}

		[Token(Token = "0x6001EB9")]
		[Address(RVA = "0x12DF69C", Offset = "0x12DF69C", VA = "0x12DF69C")]
		public void CalculateColliderState()
		{
		}

		[Token(Token = "0x6001EBA")]
		[Address(RVA = "0x12DF794", Offset = "0x12DF794", VA = "0x12DF794")]
		public GameObject DuplicateAsset()
		{
			return null;
		}

		[Token(Token = "0x6001EBB")]
		[Address(RVA = "0x12E0500", Offset = "0x12E0500", VA = "0x12E0500")]
		public HEU_ObjectNode GetObjectNodeByName(string objName)
		{
			return null;
		}

		[Token(Token = "0x6001EBC")]
		[Address(RVA = "0x12E06F0", Offset = "0x12E06F0", VA = "0x12E06F0")]
		public void ResetMaterialOverrides()
		{
		}

		[Token(Token = "0x6001EBD")]
		[Address(RVA = "0x12E0808", Offset = "0x12E0808", VA = "0x12E0808")]
		public void ResetParametersToDefault()
		{
		}

		[Token(Token = "0x6001EBE")]
		[Address(RVA = "0x12D5B88", Offset = "0x12D5B88", VA = "0x12D5B88")]
		public HEU_AssetPreset GetAssetPreset()
		{
			return null;
		}

		[Token(Token = "0x6001EBF")]
		[Address(RVA = "0x12D7CCC", Offset = "0x12D7CCC", VA = "0x12D7CCC")]
		public void LoadAssetPresetAndCook(HEU_AssetPreset assetPreset)
		{
		}

		[Token(Token = "0x6001EC0")]
		[Address(RVA = "0x12DA33C", Offset = "0x12DA33C", VA = "0x12DA33C")]
		public void ApplyRecookPreset()
		{
		}

		[Token(Token = "0x6001EC1")]
		[Address(RVA = "0x12E0AF0", Offset = "0x12E0AF0", VA = "0x12E0AF0")]
		private bool ApplyInputPresets(HEU_SessionBase session, List<HEU_InputPreset> inputPresets, bool bAddMissingInputsToRecookPreset)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EC2")]
		[Address(RVA = "0x12E1298", Offset = "0x12E1298", VA = "0x12E1298")]
		public HEU_VolumeCachePreset GetVolumeCachePreset(string objName, string geoName, int tile)
		{
			return null;
		}

		[Token(Token = "0x6001EC3")]
		[Address(RVA = "0x12E1408", Offset = "0x12E1408", VA = "0x12E1408")]
		public void RemoveVolumeCachePreset(HEU_VolumeCachePreset preset)
		{
		}

		[Token(Token = "0x6001EC4")]
		[Address(RVA = "0x12E0DEC", Offset = "0x12E0DEC", VA = "0x12E0DEC")]
		private bool ApplyVolumeCachePresets(List<HEU_VolumeCachePreset> volumeCachePresets)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EC5")]
		[Address(RVA = "0x12E1484", Offset = "0x12E1484", VA = "0x12E1484")]
		public void SyncInternalParametersForUndoCompare()
		{
		}

		[Token(Token = "0x6001EC6")]
		[Address(RVA = "0x12E1638", Offset = "0x12E1638", VA = "0x12E1638")]
		public bool UpdateSessionSync()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EC7")]
		[Address(RVA = "0x12D6ACC", Offset = "0x12D6ACC", VA = "0x12D6ACC")]
		public void UpdateTotalCookCount()
		{
		}

		[Token(Token = "0x6001EC8")]
		[Address(RVA = "0x12E16F8", Offset = "0x12E16F8", VA = "0x12E16F8")]
		public HEU_HoudiniAsset()
		{
		}
	}
	[Token(Token = "0x20003F0")]
	[SelectionBase]
	[ExecuteInEditMode]
	public class HEU_HoudiniAssetRoot : MonoBehaviour
	{
		[Token(Token = "0x40012C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HEU_HoudiniAsset _houdiniAsset;

		[Token(Token = "0x40012C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<GameObject> _bakeTargets;

		[Token(Token = "0x6001EC9")]
		[Address(RVA = "0x168F4BC", Offset = "0x168F4BC", VA = "0x168F4BC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001ECA")]
		[Address(RVA = "0x168F5F0", Offset = "0x168F5F0", VA = "0x168F5F0")]
		public void RemoveHoudiniEngineAssetData()
		{
		}

		[Token(Token = "0x6001ECB")]
		[Address(RVA = "0x168F6C8", Offset = "0x168F6C8", VA = "0x168F6C8")]
		public void ClearHoudiniEngineReferences()
		{
		}

		[Token(Token = "0x6001ECC")]
		[Address(RVA = "0x168F724", Offset = "0x168F724", VA = "0x168F724")]
		public static void DestroyRootComponent(HEU_HoudiniAssetRoot assetRoot)
		{
		}

		[Token(Token = "0x6001ECD")]
		[Address(RVA = "0x168F734", Offset = "0x168F734", VA = "0x168F734")]
		private void Reset()
		{
		}

		[Token(Token = "0x6001ECE")]
		[Address(RVA = "0x168F834", Offset = "0x168F834", VA = "0x168F834")]
		public HEU_HoudiniAssetRoot()
		{
		}
	}
	[Token(Token = "0x20003F1")]
	public class HEU_InputNode : ScriptableObject
	{
		[Token(Token = "0x2000685")]
		public enum InputNodeType
		{
			[Token(Token = "0x4002033")]
			CONNECTION,
			[Token(Token = "0x4002034")]
			NODE,
			[Token(Token = "0x4002035")]
			PARAMETER
		}

		[Token(Token = "0x2000686")]
		public enum InputObjectType
		{
			[Token(Token = "0x4002037")]
			HDA,
			[Token(Token = "0x4002038")]
			UNITY_MESH
		}

		[Token(Token = "0x2000687")]
		public enum InputActions
		{
			[Token(Token = "0x400203A")]
			ACTION,
			[Token(Token = "0x400203B")]
			DELETE,
			[Token(Token = "0x400203C")]
			INSERT
		}

		[Token(Token = "0x40012C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private InputNodeType _inputNodeType;

		[Token(Token = "0x40012C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private InputObjectType _inputObjectType;

		[Token(Token = "0x40012C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private InputObjectType _pendingInputObjectType;

		[Token(Token = "0x40012C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<HEU_InputObjectInfo> _inputObjects;

		[Token(Token = "0x40012CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private List<int> _inputObjectsConnectedAssetIDs;

		[Token(Token = "0x40012CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject _inputAsset;

		[Token(Token = "0x40012CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject _connectedInputAsset;

		[Token(Token = "0x40012CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private List<HEU_InputHDAInfo> _inputAssetInfos;

		[Token(Token = "0x40012CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private int _nodeID;

		[Token(Token = "0x40012CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private int _inputIndex;

		[Token(Token = "0x40012D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private bool _requiresCook;

		[Token(Token = "0x40012D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		[SerializeField]
		private bool _requiresUpload;

		[Token(Token = "0x40012D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private string _inputName;

		[Token(Token = "0x40012D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private string _labelName;

		[Token(Token = "0x40012D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private string _paramName;

		[Token(Token = "0x40012D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private int _connectedNodeID;

		[Token(Token = "0x40012D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private bool _keepWorldTransform;

		[Token(Token = "0x40012D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
		[SerializeField]
		private bool _packGeometryBeforeMerging;

		[Token(Token = "0x40012D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private HEU_HoudiniAsset _parentAsset;

		[Token(Token = "0x40012D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public HEU_InputNodeUICache _uiCache;

		[Token(Token = "0x17000375")]
		public InputNodeType InputType
		{
			[Token(Token = "0x6001ECF")]
			[Address(RVA = "0x1695434", Offset = "0x1695434", VA = "0x1695434")]
			get
			{
				return default(InputNodeType);
			}
		}

		[Token(Token = "0x17000376")]
		public InputObjectType ThisInputObjectType
		{
			[Token(Token = "0x6001ED0")]
			[Address(RVA = "0x169543C", Offset = "0x169543C", VA = "0x169543C")]
			get
			{
				return default(InputObjectType);
			}
		}

		[Token(Token = "0x17000377")]
		public InputObjectType PendingInputObjectType
		{
			[Token(Token = "0x6001ED1")]
			[Address(RVA = "0x1695444", Offset = "0x1695444", VA = "0x1695444")]
			get
			{
				return default(InputObjectType);
			}
			[Token(Token = "0x6001ED2")]
			[Address(RVA = "0x169544C", Offset = "0x169544C", VA = "0x169544C")]
			set
			{
			}
		}

		[Token(Token = "0x17000378")]
		public int InputNodeID
		{
			[Token(Token = "0x6001ED3")]
			[Address(RVA = "0x1695454", Offset = "0x1695454", VA = "0x1695454")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000379")]
		public bool RequiresCook
		{
			[Token(Token = "0x6001ED4")]
			[Address(RVA = "0x169545C", Offset = "0x169545C", VA = "0x169545C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001ED5")]
			[Address(RVA = "0x1695464", Offset = "0x1695464", VA = "0x1695464")]
			set
			{
			}
		}

		[Token(Token = "0x1700037A")]
		public bool RequiresUpload
		{
			[Token(Token = "0x6001ED6")]
			[Address(RVA = "0x1695470", Offset = "0x1695470", VA = "0x1695470")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001ED7")]
			[Address(RVA = "0x1695478", Offset = "0x1695478", VA = "0x1695478")]
			set
			{
			}
		}

		[Token(Token = "0x1700037B")]
		public string InputName
		{
			[Token(Token = "0x6001ED8")]
			[Address(RVA = "0x1695484", Offset = "0x1695484", VA = "0x1695484")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700037C")]
		public string LabelName
		{
			[Token(Token = "0x6001ED9")]
			[Address(RVA = "0x169548C", Offset = "0x169548C", VA = "0x169548C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700037D")]
		public string ParamName
		{
			[Token(Token = "0x6001EDA")]
			[Address(RVA = "0x1695494", Offset = "0x1695494", VA = "0x1695494")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EDB")]
			[Address(RVA = "0x169549C", Offset = "0x169549C", VA = "0x169549C")]
			set
			{
			}
		}

		[Token(Token = "0x1700037E")]
		public bool KeepWorldTransform
		{
			[Token(Token = "0x6001EDC")]
			[Address(RVA = "0x16954A4", Offset = "0x16954A4", VA = "0x16954A4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001EDD")]
			[Address(RVA = "0x16954AC", Offset = "0x16954AC", VA = "0x16954AC")]
			set
			{
			}
		}

		[Token(Token = "0x1700037F")]
		public bool PackGeometryBeforeMerging
		{
			[Token(Token = "0x6001EDE")]
			[Address(RVA = "0x16954B8", Offset = "0x16954B8", VA = "0x16954B8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001EDF")]
			[Address(RVA = "0x16954C0", Offset = "0x16954C0", VA = "0x16954C0")]
			set
			{
			}
		}

		[Token(Token = "0x17000380")]
		public HEU_HoudiniAsset ParentAsset
		{
			[Token(Token = "0x6001EE0")]
			[Address(RVA = "0x16954CC", Offset = "0x16954CC", VA = "0x16954CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001EE1")]
		[Address(RVA = "0x16954D4", Offset = "0x16954D4", VA = "0x16954D4")]
		public bool IsAssetInput()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EE2")]
		[Address(RVA = "0x16954E4", Offset = "0x16954E4", VA = "0x16954E4")]
		public static HEU_InputNode CreateSetupInput(int nodeID, int inputIndex, string inputName, string labelName, InputNodeType inputNodeType, HEU_HoudiniAsset parentAsset)
		{
			return null;
		}

		[Token(Token = "0x6001EE3")]
		[Address(RVA = "0x169557C", Offset = "0x169557C", VA = "0x169557C")]
		public void SetInputNodeID(int nodeID)
		{
		}

		[Token(Token = "0x6001EE4")]
		[Address(RVA = "0x1695584", Offset = "0x1695584", VA = "0x1695584")]
		public void DestroyAllData(HEU_SessionBase session)
		{
		}

		[Token(Token = "0x6001EE5")]
		[Address(RVA = "0x16957F8", Offset = "0x16957F8", VA = "0x16957F8")]
		private void ResetInputObjectTransforms()
		{
		}

		[Token(Token = "0x6001EE6")]
		[Address(RVA = "0x16958D4", Offset = "0x16958D4", VA = "0x16958D4")]
		public void ResetInputNode(HEU_SessionBase session)
		{
		}

		[Token(Token = "0x6001EE7")]
		[Address(RVA = "0x16959A4", Offset = "0x16959A4", VA = "0x16959A4")]
		public void InsertInputEntry(int index, GameObject newInputGameObject)
		{
		}

		[Token(Token = "0x6001EE8")]
		[Address(RVA = "0x1695CCC", Offset = "0x1695CCC", VA = "0x1695CCC")]
		public GameObject GetInputEntryGameObject(int index)
		{
			return null;
		}

		[Token(Token = "0x6001EE9")]
		[Address(RVA = "0x1695EE8", Offset = "0x1695EE8", VA = "0x1695EE8")]
		public HEU_InputObjectInfo AddInputEntryAtEnd(GameObject newEntryGameObject)
		{
			return null;
		}

		[Token(Token = "0x6001EEA")]
		[Address(RVA = "0x1695788", Offset = "0x1695788", VA = "0x1695788")]
		public void RemoveAllInputEntries()
		{
		}

		[Token(Token = "0x6001EEB")]
		[Address(RVA = "0x1696018", Offset = "0x1696018", VA = "0x1696018")]
		public int NumInputEntries()
		{
			return default(int);
		}

		[Token(Token = "0x6001EEC")]
		[Address(RVA = "0x1695970", Offset = "0x1695970", VA = "0x1695970")]
		public void ChangeInputType(HEU_SessionBase session, InputObjectType newType)
		{
		}

		[Token(Token = "0x6001EED")]
		[Address(RVA = "0x1695924", Offset = "0x1695924", VA = "0x1695924")]
		public void ResetConnectionForForceUpdate(HEU_SessionBase session)
		{
		}

		[Token(Token = "0x6001EEE")]
		[Address(RVA = "0x16965FC", Offset = "0x16965FC", VA = "0x16965FC")]
		public void UploadInput(HEU_SessionBase session)
		{
		}

		[Token(Token = "0x6001EEF")]
		[Address(RVA = "0x1696088", Offset = "0x1696088", VA = "0x1696088")]
		public bool AreAnyInputHDAsConnected()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EF0")]
		[Address(RVA = "0x1697978", Offset = "0x1697978", VA = "0x1697978")]
		public void ReconnectToUpstreamAsset()
		{
		}

		[Token(Token = "0x6001EF1")]
		[Address(RVA = "0x1695BE4", Offset = "0x1695BE4", VA = "0x1695BE4")]
		private HEU_InputObjectInfo CreateInputObjectInfo(GameObject inputGameObject)
		{
			return null;
		}

		[Token(Token = "0x6001EF2")]
		[Address(RVA = "0x1695C4C", Offset = "0x1695C4C", VA = "0x1695C4C")]
		private HEU_InputHDAInfo CreateInputHDAInfo(GameObject inputGameObject)
		{
			return null;
		}

		[Token(Token = "0x6001EF3")]
		[Address(RVA = "0x1695F18", Offset = "0x1695F18", VA = "0x1695F18")]
		private HEU_InputObjectInfo InternalAddInputObjectAtEnd(GameObject newInputGameObject)
		{
			return null;
		}

		[Token(Token = "0x6001EF4")]
		[Address(RVA = "0x1695F98", Offset = "0x1695F98", VA = "0x1695F98")]
		private HEU_InputHDAInfo InternalAddInputHDAAtEnd(GameObject newInputHDA)
		{
			return null;
		}

		[Token(Token = "0x6001EF5")]
		[Address(RVA = "0x16961C8", Offset = "0x16961C8", VA = "0x16961C8")]
		private void DisconnectConnectedMergeNode(HEU_SessionBase session)
		{
		}

		[Token(Token = "0x6001EF6")]
		[Address(RVA = "0x1696404", Offset = "0x1696404", VA = "0x1696404")]
		private void ClearConnectedInputHDAs()
		{
		}

		[Token(Token = "0x6001EF7")]
		[Address(RVA = "0x169700C", Offset = "0x169700C", VA = "0x169700C")]
		private void ConnectToMergeObject(HEU_SessionBase session)
		{
		}

		[Token(Token = "0x6001EF8")]
		[Address(RVA = "0x16955B4", Offset = "0x16955B4", VA = "0x16955B4")]
		private void DisconnectAndDestroyInputs(HEU_SessionBase session)
		{
		}

		[Token(Token = "0x6001EF9")]
		[Address(RVA = "0x1697C90", Offset = "0x1697C90", VA = "0x1697C90")]
		public int GetConnectedInputCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001EFA")]
		[Address(RVA = "0x1697D00", Offset = "0x1697D00", VA = "0x1697D00")]
		public int GetConnectedNodeID(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6001EFB")]
		[Address(RVA = "0x1697250", Offset = "0x1697250", VA = "0x1697250")]
		public bool UploadObjectMergeTransformType(HEU_SessionBase session)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EFC")]
		[Address(RVA = "0x169736C", Offset = "0x169736C", VA = "0x169736C")]
		private bool UploadObjectMergePackGeometry(HEU_SessionBase session)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EFD")]
		[Address(RVA = "0x1697DC8", Offset = "0x1697DC8", VA = "0x1697DC8")]
		public bool HasInputNodeTransformChanged()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EFE")]
		[Address(RVA = "0x1698074", Offset = "0x1698074", VA = "0x1698074")]
		public void UploadInputObjectTransforms(HEU_SessionBase session)
		{
		}

		[Token(Token = "0x6001EFF")]
		[Address(RVA = "0x1698564", Offset = "0x1698564", VA = "0x1698564")]
		public void UpdateOnAssetRecreation(HEU_SessionBase session)
		{
		}

		[Token(Token = "0x6001F00")]
		[Address(RVA = "0x16986DC", Offset = "0x16986DC", VA = "0x16986DC")]
		public void CopyInputValuesTo(HEU_SessionBase session, HEU_InputNode destInputNode)
		{
		}

		[Token(Token = "0x6001F01")]
		[Address(RVA = "0x16989F8", Offset = "0x16989F8", VA = "0x16989F8")]
		public void PopulateInputPreset(HEU_InputPreset inputPreset)
		{
		}

		[Token(Token = "0x6001F02")]
		[Address(RVA = "0x1698E9C", Offset = "0x1698E9C", VA = "0x1698E9C")]
		public void LoadPreset(HEU_SessionBase session, HEU_InputPreset inputPreset)
		{
		}

		[Token(Token = "0x6001F03")]
		[Address(RVA = "0x1699454", Offset = "0x1699454", VA = "0x1699454")]
		private bool FindAddToInputHDA(string gameObjectName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F04")]
		[Address(RVA = "0x16995D4", Offset = "0x16995D4", VA = "0x16995D4")]
		public void NotifyParentRemovedInput()
		{
		}

		[Token(Token = "0x6001F05")]
		[Address(RVA = "0x16955AC", Offset = "0x16955AC", VA = "0x16955AC")]
		public void ClearUICache()
		{
		}

		[Token(Token = "0x6001F06")]
		[Address(RVA = "0x169966C", Offset = "0x169966C", VA = "0x169966C")]
		public void HandleSelectedObjectsForInputObjects(GameObject[] selectedObjects)
		{
		}

		[Token(Token = "0x6001F07")]
		[Address(RVA = "0x16997AC", Offset = "0x16997AC", VA = "0x16997AC")]
		public void HandleSelectedObjectsForInputHDAs(GameObject[] selectedObjects)
		{
		}

		[Token(Token = "0x6001F08")]
		[Address(RVA = "0x16998EC", Offset = "0x16998EC", VA = "0x16998EC")]
		public HEU_InputNode()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003F2")]
	public class HEU_InputObjectInfo
	{
		[Token(Token = "0x40012DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject _gameObject;

		[Token(Token = "0x40012DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Matrix4x4 _syncdTransform;

		[Token(Token = "0x40012DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA1FB24", Offset = "0xA1FB24")]
		public bool _useTransformOffset;

		[Token(Token = "0x40012DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA1FB5C", Offset = "0xA1FB5C")]
		public Vector3 _translateOffset;

		[Token(Token = "0x40012DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA1FB94", Offset = "0xA1FB94")]
		public Vector3 _rotateOffset;

		[Token(Token = "0x40012DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA1FBCC", Offset = "0xA1FBCC")]
		public Vector3 _scaleOffset;

		[Token(Token = "0x40012E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Type _inputInterfaceType;

		[Token(Token = "0x6001F09")]
		[Address(RVA = "0x169897C", Offset = "0x169897C", VA = "0x169897C")]
		public void CopyTo(HEU_InputObjectInfo destObject)
		{
		}

		[Token(Token = "0x6001F0A")]
		[Address(RVA = "0x1697BA0", Offset = "0x1697BA0", VA = "0x1697BA0")]
		public HEU_InputObjectInfo()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003F3")]
	public class HEU_InputHDAInfo
	{
		[Token(Token = "0x40012E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject _pendingGO;

		[Token(Token = "0x40012E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject _connectedGO;

		[Token(Token = "0x40012E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int _connectedInputNodeID;

		[Token(Token = "0x6001F0B")]
		[Address(RVA = "0x168F9C8", Offset = "0x168F9C8", VA = "0x168F9C8")]
		public void CopyTo(HEU_InputHDAInfo destInfo)
		{
		}

		[Token(Token = "0x6001F0C")]
		[Address(RVA = "0x168F9F4", Offset = "0x168F9F4", VA = "0x168F9F4")]
		public HEU_InputHDAInfo()
		{
		}
	}
	[Token(Token = "0x20003F4")]
	public class HEU_InputNodeUICache
	{
		[Token(Token = "0x2000688")]
		public class HEU_InputObjectUICache
		{
			[Token(Token = "0x6002C0A")]
			[Address(RVA = "0x1699A64", Offset = "0x1699A64", VA = "0x1699A64")]
			public HEU_InputObjectUICache()
			{
			}
		}

		[Token(Token = "0x2000689")]
		public class HEU_InputAssetUICache
		{
			[Token(Token = "0x6002C0B")]
			[Address(RVA = "0x1699A5C", Offset = "0x1699A5C", VA = "0x1699A5C")]
			public HEU_InputAssetUICache()
			{
			}
		}

		[Token(Token = "0x40012E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<HEU_InputObjectUICache> _inputObjectCache;

		[Token(Token = "0x40012E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<HEU_InputAssetUICache> _inputAssetCache;

		[Token(Token = "0x6001F0D")]
		[Address(RVA = "0x16999C4", Offset = "0x16999C4", VA = "0x16999C4")]
		public HEU_InputNodeUICache()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003F5")]
	public class HEU_InstanceInputUIState : ScriptableObject
	{
		[Token(Token = "0x40012E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool _showInstanceInputs;

		[Token(Token = "0x40012E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int _numInputsToShowUI;

		[Token(Token = "0x40012E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int _inputsPageIndexUI;

		[Token(Token = "0x6001F0E")]
		[Address(RVA = "0x169A078", Offset = "0x169A078", VA = "0x169A078")]
		public void CopyTo(HEU_InstanceInputUIState dest)
		{
		}

		[Token(Token = "0x6001F0F")]
		[Address(RVA = "0x169A0A4", Offset = "0x169A0A4", VA = "0x169A0A4")]
		public HEU_InstanceInputUIState()
		{
		}
	}
	[Token(Token = "0x20003F6")]
	public class HEU_ObjectInstanceInfo : ScriptableObject
	{
		[Token(Token = "0x40012E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<HEU_InstancedInput> _instancedInputs;

		[Token(Token = "0x40012EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HEU_PartData _partTarget;

		[Token(Token = "0x40012EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int _instancedObjectNodeID;

		[Token(Token = "0x40012EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string _instancedObjectPath;

		[Token(Token = "0x40012ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<GameObject> _instances;

		[Token(Token = "0x6001F10")]
		[Address(RVA = "0x169DB40", Offset = "0x169DB40", VA = "0x169DB40")]
		public HEU_ObjectInstanceInfo()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003F7")]
	public class HEU_InstancedInput
	{
		[Token(Token = "0x40012EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject _instancedGameObject;

		[Token(Token = "0x40012EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 _rotationOffset;

		[Token(Token = "0x40012F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 _scaleOffset;

		[Token(Token = "0x6001F11")]
		[Address(RVA = "0x169A0BC", Offset = "0x169A0BC", VA = "0x169A0BC")]
		public HEU_InstancedInput()
		{
		}
	}
	[Token(Token = "0x20003F8")]
	public class HEU_ObjectNode : ScriptableObject
	{
		[Token(Token = "0x40012F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string _objName;

		[Token(Token = "0x40012F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private HEU_HoudiniAsset _parentAsset;

		[Token(Token = "0x40012F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HAPI_ObjectInfo _objectInfo;

		[Token(Token = "0x40012F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private List<HEU_GeoNode> _geoNodes;

		[Token(Token = "0x40012F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		public HAPI_Transform _objectTransform;

		[Token(Token = "0x17000381")]
		public int ObjectID
		{
			[Token(Token = "0x6001F12")]
			[Address(RVA = "0x169DBE0", Offset = "0x169DBE0", VA = "0x169DBE0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000382")]
		public string ObjectName
		{
			[Token(Token = "0x6001F13")]
			[Address(RVA = "0x169DBE8", Offset = "0x169DBE8", VA = "0x169DBE8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000383")]
		public HEU_HoudiniAsset ParentAsset
		{
			[Token(Token = "0x6001F14")]
			[Address(RVA = "0x169DBF0", Offset = "0x169DBF0", VA = "0x169DBF0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F15")]
		[Address(RVA = "0x169DBF8", Offset = "0x169DBF8", VA = "0x169DBF8")]
		public bool IsInstanced()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F16")]
		[Address(RVA = "0x169DC00", Offset = "0x169DC00", VA = "0x169DC00")]
		public bool IsVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F17")]
		[Address(RVA = "0x169DC08", Offset = "0x169DC08", VA = "0x169DC08")]
		public HEU_ObjectNode()
		{
		}

		[Token(Token = "0x6001F18")]
		[Address(RVA = "0x169DC30", Offset = "0x169DC30", VA = "0x169DC30")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001F19")]
		[Address(RVA = "0x169DCF0", Offset = "0x169DCF0", VA = "0x169DCF0")]
		private void SyncWithObjectInfo(HEU_SessionBase session)
		{
		}

		[Token(Token = "0x6001F1A")]
		[Address(RVA = "0x169DD74", Offset = "0x169DD74", VA = "0x169DD74")]
		public void Initialize(HEU_SessionBase session, HAPI_ObjectInfo objectInfo, HAPI_Transform objectTranform, HEU_HoudiniAsset parentAsset)
		{
		}

		[Token(Token = "0x6001F1B")]
		[Address(RVA = "0x169E0E4", Offset = "0x169E0E4", VA = "0x169E0E4")]
		public void DestroyAllData()
		{
		}

		[Token(Token = "0x6001F1C")]
		[Address(RVA = "0x169E038", Offset = "0x169E038", VA = "0x169E038")]
		private HEU_GeoNode CreateGeoNode(HEU_SessionBase session, HAPI_GeoInfo geoInfo)
		{
			return null;
		}

		[Token(Token = "0x6001F1D")]
		[Address(RVA = "0x169E1D0", Offset = "0x169E1D0", VA = "0x169E1D0")]
		public void GetDebugInfo(StringBuilder sb)
		{
		}

		[Token(Token = "0x6001F1E")]
		[Address(RVA = "0x169E420", Offset = "0x169E420", VA = "0x169E420")]
		public void SetObjectInfo(HAPI_ObjectInfo newObjectInfo)
		{
		}

		[Token(Token = "0x6001F1F")]
		[Address(RVA = "0x169E43C", Offset = "0x169E43C", VA = "0x169E43C")]
		public void UpdateObject(HEU_SessionBase session, bool bForceUpdate)
		{
		}

		[Token(Token = "0x6001F20")]
		[Address(RVA = "0x169EB64", Offset = "0x169EB64", VA = "0x169EB64")]
		public void GenerateGeometry(HEU_SessionBase session, bool bRebuild)
		{
		}

		[Token(Token = "0x6001F21")]
		[Address(RVA = "0x169F248", Offset = "0x169F248", VA = "0x169F248")]
		public void GeneratePartInstances(HEU_SessionBase session)
		{
		}

		[Token(Token = "0x6001F22")]
		[Address(RVA = "0x169F350", Offset = "0x169F350", VA = "0x169F350")]
		public void GenerateAttributesStore(HEU_SessionBase session)
		{
		}

		[Token(Token = "0x6001F23")]
		[Address(RVA = "0x169F148", Offset = "0x169F148", VA = "0x169F148")]
		public void ApplyObjectTransformToGeoNodes()
		{
		}

		[Token(Token = "0x6001F24")]
		[Address(RVA = "0x169F458", Offset = "0x169F458", VA = "0x169F458")]
		public bool IsUsingMaterial(HEU_MaterialData materialData)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F25")]
		[Address(RVA = "0x169F570", Offset = "0x169F570", VA = "0x169F570")]
		public void GetClonableParts(List<HEU_PartData> clonableParts)
		{
		}

		[Token(Token = "0x6001F26")]
		[Address(RVA = "0x169F690", Offset = "0x169F690", VA = "0x169F690")]
		public void GetOutputGameObjects(List<GameObject> outputObjects)
		{
		}

		[Token(Token = "0x6001F27")]
		[Address(RVA = "0x169F798", Offset = "0x169F798", VA = "0x169F798")]
		public void GetOutput(List<HEU_GeneratedOutput> outputs)
		{
		}

		[Token(Token = "0x6001F28")]
		[Address(RVA = "0x169F8A0", Offset = "0x169F8A0", VA = "0x169F8A0")]
		public HEU_PartData GetHDAPartWithGameObject(GameObject outputGameObject)
		{
			return null;
		}

		[Token(Token = "0x6001F29")]
		[Address(RVA = "0x169F9F8", Offset = "0x169F9F8", VA = "0x169F9F8")]
		public HEU_GeoNode GetGeoNode(string geoName)
		{
			return null;
		}

		[Token(Token = "0x6001F2A")]
		[Address(RVA = "0x169FB24", Offset = "0x169FB24", VA = "0x169FB24")]
		public void GetCurves(List<HEU_Curve> curves, bool bEditableOnly)
		{
		}

		[Token(Token = "0x6001F2B")]
		[Address(RVA = "0x169FC38", Offset = "0x169FC38", VA = "0x169FC38")]
		public void GetOutputGeoNodes(List<HEU_GeoNode> outGeoNodes)
		{
		}

		[Token(Token = "0x6001F2C")]
		[Address(RVA = "0x169FD6C", Offset = "0x169FD6C", VA = "0x169FD6C")]
		public void GenerateObjectInstances(HEU_SessionBase session)
		{
		}

		[Token(Token = "0x6001F2D")]
		[Address(RVA = "0x16A0690", Offset = "0x16A0690", VA = "0x16A0690")]
		public void PopulateObjectInstanceInfos(List<HEU_ObjectInstanceInfo> objInstanceInfos)
		{
		}

		[Token(Token = "0x6001F2E")]
		[Address(RVA = "0x16A07E8", Offset = "0x16A07E8", VA = "0x16A07E8")]
		public void ProcessUnityScriptAttributes(HEU_SessionBase session)
		{
		}

		[Token(Token = "0x6001F2F")]
		[Address(RVA = "0x16A08F0", Offset = "0x16A08F0", VA = "0x16A08F0")]
		public void HideAllGeometry()
		{
		}

		[Token(Token = "0x6001F30")]
		[Address(RVA = "0x16A09E8", Offset = "0x16A09E8", VA = "0x16A09E8")]
		public void CalculateVisibility()
		{
		}

		[Token(Token = "0x6001F31")]
		[Address(RVA = "0x16A0AE4", Offset = "0x16A0AE4", VA = "0x16A0AE4")]
		public void CalculateColliderState()
		{
		}

		[Token(Token = "0x6001F32")]
		[Address(RVA = "0x16A0BDC", Offset = "0x16A0BDC", VA = "0x16A0BDC")]
		public void DisableAllColliders()
		{
		}

		[Token(Token = "0x6001F33")]
		[Address(RVA = "0x16A0578", Offset = "0x16A0578", VA = "0x16A0578")]
		public bool IsInstancer()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F34")]
		[Address(RVA = "0x16A0CD4", Offset = "0x16A0CD4", VA = "0x16A0CD4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20003F9")]
	public class HEU_PartData : ScriptableObject
	{
		[Token(Token = "0x200068A")]
		public enum PartOutputType
		{
			[Token(Token = "0x400203E")]
			NONE,
			[Token(Token = "0x400203F")]
			MESH,
			[Token(Token = "0x4002040")]
			VOLUME,
			[Token(Token = "0x4002041")]
			CURVE,
			[Token(Token = "0x4002042")]
			INSTANCER
		}

		[Serializable]
		[Token(Token = "0x200068B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0E098", Offset = "0xA0E098")]
		private sealed class <>c
		{
			[Token(Token = "0x4002043")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002044")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<LOD> <>9__85_0;

			[Token(Token = "0x6002C0D")]
			[Address(RVA = "0x14A9BA4", Offset = "0x14A9BA4", VA = "0x14A9BA4")]
			public <>c()
			{
			}

			[Token(Token = "0x6002C0E")]
			[Address(RVA = "0x14A9BAC", Offset = "0x14A9BAC", VA = "0x14A9BAC")]
			internal int <CopyGameObjectComponents>b__85_0(LOD a, LOD b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x40012F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int _partID;

		[Token(Token = "0x40012F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string _partName;

		[Token(Token = "0x40012F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int _objectNodeID;

		[Token(Token = "0x40012F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private int _geoID;

		[Token(Token = "0x40012FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private HAPI_PartType _partType;

		[Token(Token = "0x40012FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private HEU_GeoNode _geoNode;

		[Token(Token = "0x40012FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool _isAttribInstancer;

		[Token(Token = "0x40012FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		[SerializeField]
		private bool _isPartInstanced;

		[Token(Token = "0x40012FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private int _partPointCount;

		[Token(Token = "0x40012FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private bool _isObjectInstancer;

		[Token(Token = "0x4001300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		[SerializeField]
		private bool _objectInstancesGenerated;

		[Token(Token = "0x4001301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private List<HEU_ObjectInstanceInfo> _objectInstanceInfos;

		[Token(Token = "0x4001302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Vector3 _terrainOffsetPosition;

		[Token(Token = "0x4001303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private UnityEngine.Object _assetDBTerrainData;

		[Token(Token = "0x4001304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private bool _isPartEditable;

		[Token(Token = "0x4001305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private PartOutputType _partOutputType;

		[Token(Token = "0x4001306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private HEU_Curve _curve;

		[Token(Token = "0x4001307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private HEU_AttributesStore _attributesStore;

		[Token(Token = "0x4001308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private bool _haveInstancesBeenGenerated;

		[Token(Token = "0x4001309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		private int _meshVertexCount;

		[Token(Token = "0x400130A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private HEU_GeneratedOutput _generatedOutput;

		[Token(Token = "0x400130B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private string _volumeLayerName;

		[Token(Token = "0x17000384")]
		public int PartID
		{
			[Token(Token = "0x6001F35")]
			[Address(RVA = "0x14A21C4", Offset = "0x14A21C4", VA = "0x14A21C4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000385")]
		public string PartName
		{
			[Token(Token = "0x6001F36")]
			[Address(RVA = "0x14A21CC", Offset = "0x14A21CC", VA = "0x14A21CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000386")]
		public HEU_GeoNode ParentGeoNode
		{
			[Token(Token = "0x6001F37")]
			[Address(RVA = "0x14A21D4", Offset = "0x14A21D4", VA = "0x14A21D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000387")]
		public HEU_HoudiniAsset ParentAsset
		{
			[Token(Token = "0x6001F38")]
			[Address(RVA = "0x14A21DC", Offset = "0x14A21DC", VA = "0x14A21DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000388")]
		public bool ObjectInstancesBeenGenerated
		{
			[Token(Token = "0x6001F3E")]
			[Address(RVA = "0x14A22A4", Offset = "0x14A22A4", VA = "0x14A22A4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F3F")]
			[Address(RVA = "0x14A22AC", Offset = "0x14A22AC", VA = "0x14A22AC")]
			set
			{
			}
		}

		[Token(Token = "0x17000389")]
		public int MeshVertexCount
		{
			[Token(Token = "0x6001F45")]
			[Address(RVA = "0x14A22F8", Offset = "0x14A22F8", VA = "0x14A22F8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700038A")]
		public HEU_GeneratedOutput GeneratedOutput
		{
			[Token(Token = "0x6001F46")]
			[Address(RVA = "0x14A2300", Offset = "0x14A2300", VA = "0x14A2300")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700038B")]
		public GameObject OutputGameObject
		{
			[Token(Token = "0x6001F47")]
			[Address(RVA = "0x14A2308", Offset = "0x14A2308", VA = "0x14A2308")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F39")]
		[Address(RVA = "0x14A2274", Offset = "0x14A2274", VA = "0x14A2274")]
		public bool IsPartInstancer()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F3A")]
		[Address(RVA = "0x14A2284", Offset = "0x14A2284", VA = "0x14A2284")]
		public bool IsAttribInstancer()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F3B")]
		[Address(RVA = "0x14A228C", Offset = "0x14A228C", VA = "0x14A228C")]
		public bool IsPartInstanced()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F3C")]
		[Address(RVA = "0x14A2294", Offset = "0x14A2294", VA = "0x14A2294")]
		public int GetPartPointCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001F3D")]
		[Address(RVA = "0x14A229C", Offset = "0x14A229C", VA = "0x14A229C")]
		public bool IsObjectInstancer()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F40")]
		[Address(RVA = "0x14A22B8", Offset = "0x14A22B8", VA = "0x14A22B8")]
		public bool IsPartVolume()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F41")]
		[Address(RVA = "0x14A22C8", Offset = "0x14A22C8", VA = "0x14A22C8")]
		public bool IsPartCurve()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F42")]
		[Address(RVA = "0x14A22D8", Offset = "0x14A22D8", VA = "0x14A22D8")]
		public bool IsPartMesh()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F43")]
		[Address(RVA = "0x14A22E8", Offset = "0x14A22E8", VA = "0x14A22E8")]
		public bool IsPartEditable()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F44")]
		[Address(RVA = "0x14A22F0", Offset = "0x14A22F0", VA = "0x14A22F0")]
		public bool HaveInstancesBeenGenerated()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F48")]
		[Address(RVA = "0x14A2330", Offset = "0x14A2330", VA = "0x14A2330")]
		public HEU_PartData()
		{
		}

		[Token(Token = "0x6001F49")]
		[Address(RVA = "0x14A23B0", Offset = "0x14A23B0", VA = "0x14A23B0")]
		public void Initialize(HEU_SessionBase session, int partID, int geoID, int objectNodeID, HEU_GeoNode geoNode, ref HAPI_PartInfo partInfo, PartOutputType partOutputType, bool isEditable, bool isObjectInstancer, bool isAttribInstancer)
		{
		}

		[Token(Token = "0x6001F4A")]
		[Address(RVA = "0x14A24E4", Offset = "0x14A24E4", VA = "0x14A24E4")]
		public void SetGameObjectName(string partName)
		{
		}

		[Token(Token = "0x6001F4B")]
		[Address(RVA = "0x14A263C", Offset = "0x14A263C", VA = "0x14A263C")]
		public void SetGameObject(GameObject gameObject)
		{
		}

		[Token(Token = "0x6001F4C")]
		[Address(RVA = "0x14A2664", Offset = "0x14A2664", VA = "0x14A2664")]
		public void SetVolumeLayerName(string name)
		{
		}

		[Token(Token = "0x6001F4D")]
		[Address(RVA = "0x14A266C", Offset = "0x14A266C", VA = "0x14A266C")]
		public string GetVolumeLayerName()
		{
			return null;
		}

		[Token(Token = "0x6001F4E")]
		[Address(RVA = "0x14A2674", Offset = "0x14A2674", VA = "0x14A2674")]
		public void DestroyAllData()
		{
		}

		[Token(Token = "0x6001F4F")]
		[Address(RVA = "0x14A2988", Offset = "0x14A2988", VA = "0x14A2988")]
		public void ApplyHAPITransform(ref HAPI_Transform hapiTransform)
		{
		}

		[Token(Token = "0x6001F50")]
		[Address(RVA = "0x14A2B40", Offset = "0x14A2B40", VA = "0x14A2B40")]
		public void GetDebugInfo(StringBuilder sb)
		{
		}

		[Token(Token = "0x6001F51")]
		[Address(RVA = "0x14A2D60", Offset = "0x14A2D60", VA = "0x14A2D60")]
		public bool IsUsingMaterial(HEU_MaterialData materialData)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F52")]
		[Address(RVA = "0x14A2D84", Offset = "0x14A2D84", VA = "0x14A2D84")]
		public void GetClonableObjects(List<GameObject> clonableObjects)
		{
		}

		[Token(Token = "0x6001F53")]
		[Address(RVA = "0x14A2E50", Offset = "0x14A2E50", VA = "0x14A2E50")]
		public void GetClonableParts(List<HEU_PartData> clonableParts)
		{
		}

		[Token(Token = "0x6001F54")]
		[Address(RVA = "0x14A2F14", Offset = "0x14A2F14", VA = "0x14A2F14")]
		public void GetOutputGameObjects(List<GameObject> outputObjects)
		{
		}

		[Token(Token = "0x6001F55")]
		[Address(RVA = "0x14A2FE0", Offset = "0x14A2FE0", VA = "0x14A2FE0")]
		public void GetOutput(List<HEU_GeneratedOutput> outputs)
		{
		}

		[Token(Token = "0x6001F56")]
		[Address(RVA = "0x14A3064", Offset = "0x14A3064", VA = "0x14A3064")]
		public HEU_PartData GetHDAPartWithGameObject(GameObject inGameObject)
		{
			return null;
		}

		[Token(Token = "0x6001F57")]
		[Address(RVA = "0x14A30F8", Offset = "0x14A30F8", VA = "0x14A30F8")]
		private void SetObjectInstancer(bool bObjectInstancer)
		{
		}

		[Token(Token = "0x6001F58")]
		[Address(RVA = "0x14A3104", Offset = "0x14A3104", VA = "0x14A3104")]
		public void ClearInstances()
		{
		}

		[Token(Token = "0x6001F59")]
		[Address(RVA = "0x14A27D0", Offset = "0x14A27D0", VA = "0x14A27D0")]
		private void ClearObjectInstanceInfos()
		{
		}

		[Token(Token = "0x6001F5A")]
		[Address(RVA = "0x14A3220", Offset = "0x14A3220", VA = "0x14A3220")]
		public void ClearInvalidObjectInstanceInfos()
		{
		}

		[Token(Token = "0x6001F5B")]
		[Address(RVA = "0x14A341C", Offset = "0x14A341C", VA = "0x14A341C")]
		public void ClearGeneratedData()
		{
		}

		[Token(Token = "0x6001F5C")]
		[Address(RVA = "0x14A3440", Offset = "0x14A3440", VA = "0x14A3440")]
		public void ClearGeneratedMeshOutput()
		{
		}

		[Token(Token = "0x6001F5D")]
		[Address(RVA = "0x14A34D8", Offset = "0x14A34D8", VA = "0x14A34D8")]
		public void ClearGeneratedVolumeOutput()
		{
		}

		[Token(Token = "0x6001F5E")]
		[Address(RVA = "0x14A3518", Offset = "0x14A3518", VA = "0x14A3518")]
		public void GeneratePartInstances(HEU_SessionBase session)
		{
		}

		[Token(Token = "0x6001F5F")]
		[Address(RVA = "0x14A3C80", Offset = "0x14A3C80", VA = "0x14A3C80")]
		public void GenerateInstancesFromObjectID(HEU_SessionBase session, int objectNodeID, string[] instancePrefixes)
		{
		}

		[Token(Token = "0x6001F60")]
		[Address(RVA = "0x14A44F4", Offset = "0x14A44F4", VA = "0x14A44F4")]
		public void GenerateInstancesFromObject(HEU_SessionBase session, HEU_ObjectNode sourceObject, string[] instancePrefixes)
		{
		}

		[Token(Token = "0x6001F61")]
		[Address(RVA = "0x14A47B8", Offset = "0x14A47B8", VA = "0x14A47B8")]
		public void GenerateInstancesFromObjectIds(HEU_SessionBase session, string[] instancePrefixes)
		{
		}

		[Token(Token = "0x6001F62")]
		[Address(RVA = "0x14A4D50", Offset = "0x14A4D50", VA = "0x14A4D50")]
		public void GenerateInstancesFromUnityAssetPathAttribute(HEU_SessionBase session, string unityInstanceAttr)
		{
		}

		[Token(Token = "0x6001F63")]
		[Address(RVA = "0x14A5D68", Offset = "0x14A5D68", VA = "0x14A5D68")]
		public void GenerateInstancesFromUnityAssetPath(HEU_SessionBase session, string assetPath, string[] instancePrefixes)
		{
		}

		[Token(Token = "0x6001F64")]
		[Address(RVA = "0x14A4148", Offset = "0x14A4148", VA = "0x14A4148")]
		private void CreateNewInstanceFromObject(GameObject sourceObject, int instanceIndex, Transform parentTransform, ref HAPI_Transform hapiTransform, int instancedObjectNodeID, string instancedObjectPath, Vector3 rotationOffset, Vector3 scaleOffset, string[] instancePrefixes, GameObject collisionSrcGO)
		{
		}

		[Token(Token = "0x6001F65")]
		[Address(RVA = "0x14A62EC", Offset = "0x14A62EC", VA = "0x14A62EC")]
		public void GenerateAttributesStore(HEU_SessionBase session)
		{
		}

		[Token(Token = "0x6001F66")]
		[Address(RVA = "0x14A63B0", Offset = "0x14A63B0", VA = "0x14A63B0")]
		public HEU_Curve GetCurve(bool bEditableOnly)
		{
			return null;
		}

		[Token(Token = "0x6001F67")]
		[Address(RVA = "0x14A6458", Offset = "0x14A6458", VA = "0x14A6458")]
		public void SetVisiblity(bool bVisibility)
		{
		}

		[Token(Token = "0x6001F68")]
		[Address(RVA = "0x14A6640", Offset = "0x14A6640", VA = "0x14A6640")]
		public void CalculateVisibility(bool bParentVisibility, bool bParentDisplayGeo)
		{
		}

		[Token(Token = "0x6001F69")]
		[Address(RVA = "0x14A6668", Offset = "0x14A6668", VA = "0x14A6668")]
		public void SetColliderState(bool bEnabled)
		{
		}

		[Token(Token = "0x6001F6A")]
		[Address(RVA = "0x14A6690", Offset = "0x14A6690", VA = "0x14A6690")]
		public void CalculateColliderState()
		{
		}

		[Token(Token = "0x6001F6B")]
		[Address(RVA = "0x14A692C", Offset = "0x14A692C", VA = "0x14A692C")]
		private void CopyGameObjectComponents(GameObject sourceGO, GameObject targetGO, string assetName, Dictionary<Mesh, Mesh> sourceToTargetMeshMap, Dictionary<Material, Material> sourceToCopiedMaterials, bool bWriteMeshesToAssetDatabase, ref string bakedAssetPath, ref UnityEngine.Object assetDBObject, string assetObjectFileName, bool bDeleteExistingComponents, bool bDontDeletePersistantResources)
		{
		}

		[Token(Token = "0x6001F6C")]
		[Address(RVA = "0x14A8200", Offset = "0x14A8200", VA = "0x14A8200")]
		private void CopyChildGameObjects(GameObject sourceGO, GameObject targetGO, string assetName, Dictionary<Mesh, Mesh> sourceToTargetMeshMap, Dictionary<Material, Material> sourceToCopiedMaterials, bool bWriteMeshesToAssetDatabase, ref string bakedAssetPath, ref UnityEngine.Object assetDBObject, string assetObjectFileName, bool bDeleteExistingComponents, bool bDontDeletePersistantResources)
		{
		}

		[Token(Token = "0x6001F6D")]
		[Address(RVA = "0x14A8618", Offset = "0x14A8618", VA = "0x14A8618")]
		public GameObject BakePartToNewGameObject(Transform parentTransform, bool bWriteMeshesToAssetDatabase, ref string bakedAssetPath, Dictionary<Mesh, Mesh> sourceToTargetMeshMap, Dictionary<Material, Material> sourceToCopiedMaterials, ref UnityEngine.Object assetDBObject, string assetObjectFileName, bool bReconnectPrefabInstances)
		{
			return null;
		}

		[Token(Token = "0x6001F6E")]
		[Address(RVA = "0x14A87B0", Offset = "0x14A87B0", VA = "0x14A87B0")]
		public void BakePartToGameObject(GameObject targetGO, bool bDeleteExistingComponents, bool bDontDeletePersistantResources, bool bWriteMeshesToAssetDatabase, ref string bakedAssetPath, Dictionary<Mesh, Mesh> sourceToTargetMeshMap, Dictionary<Material, Material> sourceToCopiedMaterials, ref UnityEngine.Object assetDBObject, string assetObjectFileName, bool bReconnectPrefabInstances)
		{
		}

		[Token(Token = "0x6001F6F")]
		[Address(RVA = "0x14A8DF0", Offset = "0x14A8DF0", VA = "0x14A8DF0")]
		public bool GenerateMesh(HEU_SessionBase session, bool bGenerateUVs, bool bGenerateTangents, bool bGenerateNormals, bool bUseLODGroups)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F70")]
		[Address(RVA = "0x14A91C0", Offset = "0x14A91C0", VA = "0x14A91C0")]
		public void ProcessCurvePart(HEU_SessionBase session)
		{
		}

		[Token(Token = "0x6001F71")]
		[Address(RVA = "0x14A9344", Offset = "0x14A9344", VA = "0x14A9344")]
		public void SyncAttributesStore(HEU_SessionBase session, int geoID, ref HAPI_PartInfo partInfo)
		{
		}

		[Token(Token = "0x6001F72")]
		[Address(RVA = "0x14A9480", Offset = "0x14A9480", VA = "0x14A9480")]
		public void SetupAttributeGeometry(HEU_SessionBase session)
		{
		}

		[Token(Token = "0x6001F73")]
		[Address(RVA = "0x14A2888", Offset = "0x14A2888", VA = "0x14A2888")]
		public void DestroyAttributesStore()
		{
		}

		[Token(Token = "0x6001F74")]
		[Address(RVA = "0x14A9578", Offset = "0x14A9578", VA = "0x14A9578")]
		public void PopulateObjectInstanceInfos(List<HEU_ObjectInstanceInfo> objInstanceInfos)
		{
		}

		[Token(Token = "0x6001F75")]
		[Address(RVA = "0x14A95E0", Offset = "0x14A95E0", VA = "0x14A95E0")]
		public void SetObjectInstanceInfos(List<HEU_ObjectInstanceInfo> sourceObjectInstanceInfos)
		{
		}

		[Token(Token = "0x6001F76")]
		[Address(RVA = "0x14A9704", Offset = "0x14A9704", VA = "0x14A9704")]
		public List<HEU_ObjectInstanceInfo> GetObjectInstanceInfos()
		{
			return null;
		}

		[Token(Token = "0x6001F77")]
		[Address(RVA = "0x14A6208", Offset = "0x14A6208", VA = "0x14A6208")]
		private HEU_ObjectInstanceInfo CreateObjectInstanceInfo(GameObject instancedObject, int instancedObjectNodeID, string instancedObjectPath)
		{
			return null;
		}

		[Token(Token = "0x6001F78")]
		[Address(RVA = "0x14A5C70", Offset = "0x14A5C70", VA = "0x14A5C70")]
		public HEU_ObjectInstanceInfo GetObjectInstanceInfoWithObjectPath(string path)
		{
			return null;
		}

		[Token(Token = "0x6001F79")]
		[Address(RVA = "0x14A405C", Offset = "0x14A405C", VA = "0x14A405C")]
		public HEU_ObjectInstanceInfo GetObjectInstanceInfoWithObjectID(int objNodeID)
		{
			return null;
		}

		[Token(Token = "0x6001F7A")]
		[Address(RVA = "0x14A970C", Offset = "0x14A970C", VA = "0x14A970C")]
		public void SetTerrainOffsetPosition(Vector3 offsetPosition)
		{
		}

		[Token(Token = "0x6001F7B")]
		[Address(RVA = "0x14A9718", Offset = "0x14A9718", VA = "0x14A9718")]
		public void SetTerrainData(TerrainData terrainData, string exportPathRelative, string exportPathUser)
		{
		}

		[Token(Token = "0x6001F7C")]
		[Address(RVA = "0x14A875C", Offset = "0x14A875C", VA = "0x14A875C")]
		public static string AppendBakedCloneName(string name)
		{
			return null;
		}

		[Token(Token = "0x6001F7D")]
		[Address(RVA = "0x14A99E8", Offset = "0x14A99E8", VA = "0x14A99E8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001F7E")]
		[Address(RVA = "0x14A9A60", Offset = "0x14A9A60", VA = "0x14A9A60")]
		public static void DestroyParts(List<HEU_PartData> parts)
		{
		}

		[Token(Token = "0x6001F7F")]
		[Address(RVA = "0x14A9B08", Offset = "0x14A9B08", VA = "0x14A9B08")]
		public static void DestroyPart(HEU_PartData part)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003FA")]
	public sealed class HEU_AttributeData
	{
		[Token(Token = "0x200068C")]
		public enum AttributeType
		{
			[Token(Token = "0x4002046")]
			UNDEFINED = -1,
			[Token(Token = "0x4002047")]
			BOOL,
			[Token(Token = "0x4002048")]
			INT,
			[Token(Token = "0x4002049")]
			FLOAT,
			[Token(Token = "0x400204A")]
			STRING,
			[Token(Token = "0x400204B")]
			MAX
		}

		[Token(Token = "0x200068D")]
		public enum AttributeState
		{
			[Token(Token = "0x400204D")]
			INVALID,
			[Token(Token = "0x400204E")]
			SYNCED,
			[Token(Token = "0x400204F")]
			LOCAL_DIRTY
		}

		[Token(Token = "0x400130C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public HAPI_AttributeInfo _attributeInfo;

		[Token(Token = "0x400130D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string _name;

		[Token(Token = "0x400130E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AttributeType _attributeType;

		[Token(Token = "0x400130F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int[] _intValues;

		[Token(Token = "0x4001310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float[] _floatValues;

		[Token(Token = "0x4001311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string[] _stringValues;

		[Token(Token = "0x4001312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AttributeState _attributeState;

		[Token(Token = "0x6001F80")]
		[Address(RVA = "0x1524FD4", Offset = "0x1524FD4", VA = "0x1524FD4")]
		public bool IsColorAttribute()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F81")]
		[Address(RVA = "0x152504C", Offset = "0x152504C", VA = "0x152504C")]
		public void CopyValuesTo(HEU_AttributeData destAttrData)
		{
		}

		[Token(Token = "0x6001F82")]
		[Address(RVA = "0x152516C", Offset = "0x152516C", VA = "0x152516C")]
		public HEU_AttributeData()
		{
		}
	}
	[Token(Token = "0x20003FB")]
	public class HEU_AttributesStore : ScriptableObject
	{
		[Token(Token = "0x200068E")]
		public delegate void SetAttributeValueFunc(HEU_AttributeData attributeData, int targetIndex, HEU_ToolsInfo sourceTools, int sourceIndex, float factor);

		[Token(Token = "0x4001313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int _geoID;

		[Token(Token = "0x4001314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _partID;

		[Token(Token = "0x4001315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string _geoName;

		[Token(Token = "0x4001316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<HEU_AttributeData> _attributeDatas;

		[Token(Token = "0x4001317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _hasColorAttribute;

		[Token(Token = "0x4001318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Material _localMaterial;

		[Token(Token = "0x4001319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform _outputTransform;

		[Token(Token = "0x400131A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3[] _positionAttributeValues;

		[Token(Token = "0x400131B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int[] _vertexIndices;

		[Token(Token = "0x400131C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _outputGameObject;

		[Token(Token = "0x400131D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Mesh _outputMesh;

		[Token(Token = "0x400131E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Material[] _outputMaterials;

		[Token(Token = "0x400131F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private MeshCollider _outputCollider;

		[Token(Token = "0x4001320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Mesh _outputColliderMesh;

		[Token(Token = "0x4001321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private MeshCollider _outputMeshCollider;

		[Token(Token = "0x4001322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private MeshCollider _localMeshCollider;

		[Token(Token = "0x4001323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private bool _outputMeshRendererInitiallyEnabled;

		[Token(Token = "0x4001324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		[SerializeField]
		private bool _outputMeshColliderInitiallyEnabled;

		[Token(Token = "0x1700038C")]
		public int GeoID
		{
			[Token(Token = "0x6001F83")]
			[Address(RVA = "0x1525174", Offset = "0x1525174", VA = "0x1525174")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700038D")]
		public int PartID
		{
			[Token(Token = "0x6001F84")]
			[Address(RVA = "0x152517C", Offset = "0x152517C", VA = "0x152517C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700038E")]
		public string GeoName
		{
			[Token(Token = "0x6001F85")]
			[Address(RVA = "0x1525184", Offset = "0x1525184", VA = "0x1525184")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700038F")]
		public Transform OutputTransform
		{
			[Token(Token = "0x6001F87")]
			[Address(RVA = "0x1525194", Offset = "0x1525194", VA = "0x1525194")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000390")]
		public Mesh OutputMesh
		{
			[Token(Token = "0x6001F88")]
			[Address(RVA = "0x152519C", Offset = "0x152519C", VA = "0x152519C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F86")]
		[Address(RVA = "0x152518C", Offset = "0x152518C", VA = "0x152518C")]
		public bool HasColorAttribute()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F89")]
		[Address(RVA = "0x15251A4", Offset = "0x15251A4", VA = "0x15251A4")]
		public void DestroyAllData(HEU_HoudiniAsset asset)
		{
		}

		[Token(Token = "0x6001F8A")]
		[Address(RVA = "0x1525260", Offset = "0x1525260", VA = "0x1525260")]
		public void SyncAllAttributesFrom(HEU_SessionBase session, HEU_HoudiniAsset asset, int geoID, ref HAPI_PartInfo partInfo, GameObject outputGameObject)
		{
		}

		[Token(Token = "0x6001F8B")]
		[Address(RVA = "0x152617C", Offset = "0x152617C", VA = "0x152617C")]
		public void SetupMeshAndMaterials(HEU_HoudiniAsset asset, HAPI_PartType partType, GameObject outputGameObject)
		{
		}

		[Token(Token = "0x6001F8C")]
		[Address(RVA = "0x152658C", Offset = "0x152658C", VA = "0x152658C")]
		public bool HasDirtyAttributes()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F8D")]
		[Address(RVA = "0x15266A4", Offset = "0x15266A4", VA = "0x15266A4")]
		public void SyncDirtyAttributesToHoudini(HEU_SessionBase session)
		{
		}

		[Token(Token = "0x6001F8E")]
		[Address(RVA = "0x1525A6C", Offset = "0x1525A6C", VA = "0x1525A6C")]
		private void PopulateAttributeData(HEU_SessionBase session, int geoID, int partID, HEU_AttributeData attributeData, ref HAPI_AttributeInfo attributeInfo)
		{
		}

		[Token(Token = "0x6001F8F")]
		[Address(RVA = "0x1526C08", Offset = "0x1526C08", VA = "0x1526C08")]
		private void GetAttributesList(HEU_SessionBase session, int geoID, int partID, List<HEU_AttributeData> attributesList, HAPI_AttributeOwner ownerType, int attributeCount)
		{
		}

		[Token(Token = "0x6001F90")]
		[Address(RVA = "0x1526E00", Offset = "0x1526E00", VA = "0x1526E00")]
		private void UpdateAttribute(HEU_SessionBase session, int geoID, int partID, HEU_AttributeData attributeData)
		{
		}

		[Token(Token = "0x6001F91")]
		[Address(RVA = "0x1527288", Offset = "0x1527288", VA = "0x1527288")]
		private void UpdateAttributeList(HEU_SessionBase session, int geoID, int partID, List<HEU_AttributeData> attributeDataList)
		{
		}

		[Token(Token = "0x6001F92")]
		[Address(RVA = "0x1527398", Offset = "0x1527398", VA = "0x1527398")]
		public void RefreshUpstreamInputs(HEU_SessionBase session)
		{
		}

		[Token(Token = "0x6001F93")]
		[Address(RVA = "0x1526744", Offset = "0x1526744", VA = "0x1526744")]
		public bool UploadAttributeViaMeshInput(HEU_SessionBase session, int geoID, int partID)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F94")]
		[Address(RVA = "0x1526BEC", Offset = "0x1526BEC", VA = "0x1526BEC")]
		private static void SetAttributeDataSyncd(HEU_AttributeData attributeData)
		{
		}

		[Token(Token = "0x6001F95")]
		[Address(RVA = "0x1527420", Offset = "0x1527420", VA = "0x1527420")]
		public static void SetAttributeDataDirty(HEU_AttributeData attributeData)
		{
		}

		[Token(Token = "0x6001F96")]
		[Address(RVA = "0x15259B0", Offset = "0x15259B0", VA = "0x15259B0")]
		public HEU_AttributeData CreateAttribute(string attributeName, ref HAPI_AttributeInfo attributeInfo)
		{
			return null;
		}

		[Token(Token = "0x6001F97")]
		[Address(RVA = "0x1525884", Offset = "0x1525884", VA = "0x1525884")]
		public HEU_AttributeData GetAttributeData(string name)
		{
			return null;
		}

		[Token(Token = "0x6001F98")]
		[Address(RVA = "0x152743C", Offset = "0x152743C", VA = "0x152743C")]
		public HEU_AttributeData GetAttributeData(int index)
		{
			return null;
		}

		[Token(Token = "0x6001F99")]
		[Address(RVA = "0x15274C4", Offset = "0x15274C4", VA = "0x15274C4")]
		public List<string> GetAttributeNames()
		{
			return null;
		}

		[Token(Token = "0x6001F9A")]
		[Address(RVA = "0x1527608", Offset = "0x1527608", VA = "0x1527608")]
		public void EnablePaintCollider()
		{
		}

		[Token(Token = "0x6001F9B")]
		[Address(RVA = "0x15277C0", Offset = "0x15277C0", VA = "0x15277C0")]
		public void DisablePaintCollider()
		{
		}

		[Token(Token = "0x6001F9C")]
		[Address(RVA = "0x15278EC", Offset = "0x15278EC", VA = "0x15278EC")]
		public void ShowPaintMesh()
		{
		}

		[Token(Token = "0x6001F9D")]
		[Address(RVA = "0x1527A30", Offset = "0x1527A30", VA = "0x1527A30")]
		public void HidePaintMesh()
		{
		}

		[Token(Token = "0x6001F9E")]
		[Address(RVA = "0x1527B2C", Offset = "0x1527B2C", VA = "0x1527B2C")]
		public bool HasMeshForPainting()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F9F")]
		[Address(RVA = "0x1527B9C", Offset = "0x1527B9C", VA = "0x1527B9C")]
		public MeshCollider GetPaintMeshCollider()
		{
			return null;
		}

		[Token(Token = "0x6001FA0")]
		[Address(RVA = "0x1527C24", Offset = "0x1527C24", VA = "0x1527C24")]
		public void PaintAttribute(HEU_AttributeData attributeData, HEU_ToolsInfo sourceTools, int attributeIndex, float paintFactor, SetAttributeValueFunc setAttrFunc)
		{
		}

		[Token(Token = "0x6001FA1")]
		[Address(RVA = "0x1528104", Offset = "0x1528104", VA = "0x1528104")]
		public static void SetAttributeEditValueInt(HEU_AttributeData attributeData, int startIndex, int[] values)
		{
		}

		[Token(Token = "0x6001FA2")]
		[Address(RVA = "0x1528198", Offset = "0x1528198", VA = "0x1528198")]
		public static void SetAttributeEditValueFloat(HEU_AttributeData attributeData, int startIndex, float[] values)
		{
		}

		[Token(Token = "0x6001FA3")]
		[Address(RVA = "0x152822C", Offset = "0x152822C", VA = "0x152822C")]
		public static void SetAttributeEditValueString(HEU_AttributeData attributeData, int startIndex, string[] values)
		{
		}

		[Token(Token = "0x6001FA4")]
		[Address(RVA = "0x1528314", Offset = "0x1528314", VA = "0x1528314")]
		public static void ReplaceAttributeValueInt(HEU_AttributeData attributeData, int targetIndex, HEU_ToolsInfo sourceTools, int sourceIndex, float factor)
		{
		}

		[Token(Token = "0x6001FA5")]
		[Address(RVA = "0x152849C", Offset = "0x152849C", VA = "0x152849C")]
		public static void AddAttributeValueInt(HEU_AttributeData attributeData, int targetIndex, HEU_ToolsInfo sourceTools, int sourceIndex, float factor)
		{
		}

		[Token(Token = "0x6001FA6")]
		[Address(RVA = "0x15285E0", Offset = "0x15285E0", VA = "0x15285E0")]
		public static void SubtractAttributeValueInt(HEU_AttributeData attributeData, int targetIndex, HEU_ToolsInfo sourceTools, int sourceIndex, float factor)
		{
		}

		[Token(Token = "0x6001FA7")]
		[Address(RVA = "0x1528724", Offset = "0x1528724", VA = "0x1528724")]
		public static void MultiplyAttributeValueInt(HEU_AttributeData attributeData, int targetIndex, HEU_ToolsInfo sourceTools, int sourceIndex, float factor)
		{
		}

		[Token(Token = "0x6001FA8")]
		[Address(RVA = "0x15288B0", Offset = "0x15288B0", VA = "0x15288B0")]
		public static void ReplaceAttributeValueFloat(HEU_AttributeData attributeData, int targetIndex, HEU_ToolsInfo sourceTools, int sourceIndex, float factor)
		{
		}

		[Token(Token = "0x6001FA9")]
		[Address(RVA = "0x152896C", Offset = "0x152896C", VA = "0x152896C")]
		public static void AddAttributeValueFloat(HEU_AttributeData attributeData, int targetIndex, HEU_ToolsInfo sourceTools, int sourceIndex, float factor)
		{
		}

		[Token(Token = "0x6001FAA")]
		[Address(RVA = "0x1528A1C", Offset = "0x1528A1C", VA = "0x1528A1C")]
		public static void SubtractAttributeValueFloat(HEU_AttributeData attributeData, int targetIndex, HEU_ToolsInfo sourceTools, int sourceIndex, float factor)
		{
		}

		[Token(Token = "0x6001FAB")]
		[Address(RVA = "0x1528ACC", Offset = "0x1528ACC", VA = "0x1528ACC")]
		public static void MultiplyAttributeValueFloat(HEU_AttributeData attributeData, int targetIndex, HEU_ToolsInfo sourceTools, int sourceIndex, float factor)
		{
		}

		[Token(Token = "0x6001FAC")]
		[Address(RVA = "0x1528C44", Offset = "0x1528C44", VA = "0x1528C44")]
		public static void SetAttributeValueString(HEU_AttributeData attributeData, int targetIndex, HEU_ToolsInfo sourceTools, int sourceIndex, float factor)
		{
		}

		[Token(Token = "0x6001FAD")]
		[Address(RVA = "0x1528D3C", Offset = "0x1528D3C", VA = "0x1528D3C")]
		public void FillAttribute(HEU_AttributeData attributeData, HEU_ToolsInfo sourceTools)
		{
		}

		[Token(Token = "0x6001FAE")]
		[Address(RVA = "0x1528F8C", Offset = "0x1528F8C", VA = "0x1528F8C")]
		public bool AreAttributesDirty()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FAF")]
		[Address(RVA = "0x1529090", Offset = "0x1529090", VA = "0x1529090")]
		public void GetPositionAttributeValues(out Vector3[] positionArray)
		{
		}

		[Token(Token = "0x6001FB0")]
		[Address(RVA = "0x152909C", Offset = "0x152909C", VA = "0x152909C")]
		public void GetVertexIndices(out int[] indices)
		{
		}

		[Token(Token = "0x6001FB1")]
		[Address(RVA = "0x1528DD8", Offset = "0x1528DD8", VA = "0x1528DD8")]
		public static SetAttributeValueFunc GetAttributeSetValueFunction(HEU_AttributeData.AttributeType attrType, HEU_ToolsInfo.PaintMergeMode paintMergeMode)
		{
			return null;
		}

		[Token(Token = "0x6001FB2")]
		[Address(RVA = "0x15290B8", Offset = "0x15290B8", VA = "0x15290B8")]
		public void CopyAttributeValuesTo(HEU_AttributesStore destAttrStore)
		{
		}

		[Token(Token = "0x6001FB3")]
		[Address(RVA = "0x1529248", Offset = "0x1529248", VA = "0x1529248")]
		public HEU_AttributesStore()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003FC")]
	public class HEU_OutputAttribute
	{
		[Token(Token = "0x4001325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string _name;

		[Token(Token = "0x4001326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HAPI_AttributeOwner _class;

		[Token(Token = "0x4001327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public HAPI_StorageType _type;

		[Token(Token = "0x4001328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int _count;

		[Token(Token = "0x4001329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int _tupleSize;

		[Token(Token = "0x400132A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int[] _intValues;

		[Token(Token = "0x400132B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float[] _floatValues;

		[Token(Token = "0x400132C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string[] _stringValues;

		[Token(Token = "0x6001FB4")]
		[Address(RVA = "0x16A0D4C", Offset = "0x16A0D4C", VA = "0x16A0D4C")]
		public HEU_OutputAttribute()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003FD")]
	public class HEU_OutputAttributeDictionary : HEU_SerializableDictionary<string, HEU_OutputAttribute>
	{
		[Token(Token = "0x6001FB5")]
		[Address(RVA = "0x16A0D54", Offset = "0x16A0D54", VA = "0x16A0D54")]
		public HEU_OutputAttributeDictionary()
		{
		}
	}
	[Token(Token = "0x20003FE")]
	public class HEU_OutputAttributesStore : MonoBehaviour
	{
		[Token(Token = "0x400132D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private HEU_OutputAttributeDictionary _attributes;

		[Token(Token = "0x6001FB6")]
		[Address(RVA = "0x16A0DA4", Offset = "0x16A0DA4", VA = "0x16A0DA4")]
		public void SetAttribute(HEU_OutputAttribute attribute)
		{
		}

		[Token(Token = "0x6001FB7")]
		[Address(RVA = "0x16A0EC4", Offset = "0x16A0EC4", VA = "0x16A0EC4")]
		public HEU_OutputAttribute GetAttribute(string name)
		{
			return null;
		}

		[Token(Token = "0x6001FB8")]
		[Address(RVA = "0x16A0F3C", Offset = "0x16A0F3C", VA = "0x16A0F3C")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001FB9")]
		[Address(RVA = "0x16A0F94", Offset = "0x16A0F94", VA = "0x16A0F94")]
		public HEU_OutputAttributesStore()
		{
		}
	}
	[Token(Token = "0x20003FF")]
	public static class HEU_AssetDatabase
	{
		[Token(Token = "0x200068F")]
		public enum HEU_ImportAssetOptions
		{
			[Token(Token = "0x4002051")]
			Default = 0,
			[Token(Token = "0x4002052")]
			ForceUpdate = 1,
			[Token(Token = "0x4002053")]
			ForceSynchronousImport = 8,
			[Token(Token = "0x4002054")]
			ImportRecursive = 0x100,
			[Token(Token = "0x4002055")]
			DontDownloadFromCacheServer = 0x2000,
			[Token(Token = "0x4002056")]
			ForceUncompressedImport = 0x4000
		}

		[Token(Token = "0x6001FBA")]
		[Address(RVA = "0x152126C", Offset = "0x152126C", VA = "0x152126C")]
		public static string GetAssetCachePath()
		{
			return null;
		}

		[Token(Token = "0x6001FBB")]
		[Address(RVA = "0x15212E8", Offset = "0x15212E8", VA = "0x15212E8")]
		public static string GetUnityProjectPath()
		{
			return null;
		}

		[Token(Token = "0x6001FBC")]
		[Address(RVA = "0x1521350", Offset = "0x1521350", VA = "0x1521350")]
		public static string GetAssetRelativePath(string inFullPath)
		{
			return null;
		}

		[Token(Token = "0x6001FBD")]
		[Address(RVA = "0x152144C", Offset = "0x152144C", VA = "0x152144C")]
		public static string GetPackagesRelativePath(string inFullPath)
		{
			return null;
		}

		[Token(Token = "0x6001FBE")]
		[Address(RVA = "0x1521544", Offset = "0x1521544", VA = "0x1521544")]
		public static string GetValidAssetPath(string inPath)
		{
			return null;
		}

		[Token(Token = "0x6001FBF")]
		[Address(RVA = "0x1521700", Offset = "0x1521700", VA = "0x1521700")]
		public static string GetAssetPath(UnityEngine.Object asset)
		{
			return null;
		}

		[Token(Token = "0x6001FC0")]
		[Address(RVA = "0x1521774", Offset = "0x1521774", VA = "0x1521774")]
		public static string GetAssetPathWithSubAssetSupport(UnityEngine.Object asset)
		{
			return null;
		}

		[Token(Token = "0x6001FC1")]
		[Address(RVA = "0x15217E8", Offset = "0x15217E8", VA = "0x15217E8")]
		public static void GetSubAssetPathFromPath(string fullPath, out string mainPath, out string subPath)
		{
		}

		[Token(Token = "0x6001FC2")]
		[Address(RVA = "0x15218D4", Offset = "0x15218D4", VA = "0x15218D4")]
		private static string GetAssetRelativePathStart()
		{
			return null;
		}

		[Token(Token = "0x6001FC3")]
		[Address(RVA = "0x1521950", Offset = "0x1521950", VA = "0x1521950")]
		private static string GetPackagesRelativePathStart()
		{
			return null;
		}

		[Token(Token = "0x6001FC4")]
		[Address(RVA = "0x151DEA4", Offset = "0x151DEA4", VA = "0x151DEA4")]
		public static string GetAssetFullPath(string inPath)
		{
			return null;
		}

		[Token(Token = "0x6001FC5")]
		[Address(RVA = "0x15219CC", Offset = "0x15219CC", VA = "0x15219CC")]
		public static bool IsPathRelativeToAssets(string inPath)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FC6")]
		[Address(RVA = "0x1521A00", Offset = "0x1521A00", VA = "0x1521A00")]
		public static bool IsPathRelativeToPackages(string inPath)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FC7")]
		[Address(RVA = "0x1521A34", Offset = "0x1521A34", VA = "0x1521A34")]
		public static string GetAssetRootPath(UnityEngine.Object asset)
		{
			return null;
		}

		[Token(Token = "0x6001FC8")]
		[Address(RVA = "0x1521AA8", Offset = "0x1521AA8", VA = "0x1521AA8")]
		public static string GetUniqueAssetPath(string path)
		{
			return null;
		}

		[Token(Token = "0x6001FC9")]
		[Address(RVA = "0x1521B1C", Offset = "0x1521B1C", VA = "0x1521B1C")]
		public static string GetAssetOrScenePath(UnityEngine.Object inputObject)
		{
			return null;
		}

		[Token(Token = "0x6001FCA")]
		[Address(RVA = "0x1521B90", Offset = "0x1521B90", VA = "0x1521B90")]
		public static bool IsPathInAssetCache(string path)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FCB")]
		[Address(RVA = "0x1521BEC", Offset = "0x1521BEC", VA = "0x1521BEC")]
		public static bool IsPathInAssetCacheBakedFolder(string path)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FCC")]
		[Address(RVA = "0x1521C60", Offset = "0x1521C60", VA = "0x1521C60")]
		public static bool IsPathInAssetCacheWorkingFolder(string path)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FCD")]
		[Address(RVA = "0x1521CD4", Offset = "0x1521CD4", VA = "0x1521CD4")]
		public static bool IsAssetInAssetCacheBakedFolder(UnityEngine.Object asset)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FCE")]
		[Address(RVA = "0x1521D48", Offset = "0x1521D48", VA = "0x1521D48")]
		public static bool IsAssetInAssetCacheWorkingFolder(UnityEngine.Object asset)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FCF")]
		[Address(RVA = "0x1521DBC", Offset = "0x1521DBC", VA = "0x1521DBC")]
		public static string CreateAssetCacheFolder(string suggestedAssetPath)
		{
			return null;
		}

		[Token(Token = "0x6001FD0")]
		[Address(RVA = "0x1521E30", Offset = "0x1521E30", VA = "0x1521E30")]
		public static void DeleteAssetCacheFolder(string assetCacheFolderPath)
		{
		}

		[Token(Token = "0x6001FD1")]
		[Address(RVA = "0x1521E9C", Offset = "0x1521E9C", VA = "0x1521E9C")]
		public static void DeleteAsset(UnityEngine.Object asset)
		{
		}

		[Token(Token = "0x6001FD2")]
		[Address(RVA = "0x1521F08", Offset = "0x1521F08", VA = "0x1521F08")]
		public static void DeleteAssetAtPath(string path)
		{
		}

		[Token(Token = "0x6001FD3")]
		[Address(RVA = "0x1521F74", Offset = "0x1521F74", VA = "0x1521F74")]
		public static void DeleteAssetIfInBakedFolder(UnityEngine.Object asset)
		{
		}

		[Token(Token = "0x6001FD4")]
		[Address(RVA = "0x1521FE0", Offset = "0x1521FE0", VA = "0x1521FE0")]
		public static bool ContainsAsset(UnityEngine.Object assetObject)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FD5")]
		[Address(RVA = "0x1522054", Offset = "0x1522054", VA = "0x1522054")]
		public static bool CopyAsset(string path, string newPath)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FD6")]
		[Address(RVA = "0x15220C8", Offset = "0x15220C8", VA = "0x15220C8")]
		public static UnityEngine.Object CopyAndLoadAssetWithRelativePath(UnityEngine.Object srcAsset, string copyAssetFolder, string relativePath, Type type, bool bOverwriteExisting)
		{
			return null;
		}

		[Token(Token = "0x6001FD7")]
		[Address(RVA = "0x152213C", Offset = "0x152213C", VA = "0x152213C")]
		public static UnityEngine.Object CopyAndLoadAssetFromAssetCachePath(UnityEngine.Object srcAsset, string copyPath, Type type, bool bOverwriteExisting)
		{
			return null;
		}

		[Token(Token = "0x6001FD8")]
		[Address(RVA = "0x15221B0", Offset = "0x15221B0", VA = "0x15221B0")]
		public static UnityEngine.Object CopyAndLoadAssetAtAnyPath(UnityEngine.Object srcAsset, string copyPath, Type type, bool bOverwriteExisting)
		{
			return null;
		}

		[Token(Token = "0x6001FD9")]
		[Address(RVA = "0x1522224", Offset = "0x1522224", VA = "0x1522224")]
		public static UnityEngine.Object CopyAndLoadAssetAtGivenPath(UnityEngine.Object srcAsset, string targetPath, Type type)
		{
			return null;
		}

		[Token(Token = "0x6001FDA")]
		[Address(RVA = "0x1522298", Offset = "0x1522298", VA = "0x1522298")]
		public static UnityEngine.Object CopyUniqueAndLoadAssetAtAnyPath(UnityEngine.Object srcAsset, string copyPath, Type type)
		{
			return null;
		}

		[Token(Token = "0x6001FDB")]
		[Address(RVA = "0x152230C", Offset = "0x152230C", VA = "0x152230C")]
		public static void CreateObjectInAssetCacheFolder(UnityEngine.Object objectToCreate, string assetCacheRoot, string relativeFolderPath, string assetFileName, Type type)
		{
		}

		[Token(Token = "0x6001FDC")]
		[Address(RVA = "0x1522378", Offset = "0x1522378", VA = "0x1522378")]
		public static void CreateAsset(UnityEngine.Object asset, string path)
		{
		}

		[Token(Token = "0x6001FDD")]
		[Address(RVA = "0x15223E4", Offset = "0x15223E4", VA = "0x15223E4")]
		public static void CreateAddObjectInAssetCacheFolder(string assetName, string assetObjectFileName, UnityEngine.Object objectToAdd, string relativeFolderPath, ref string exportRootPath, ref UnityEngine.Object assetDBObject)
		{
		}

		[Token(Token = "0x6001FDE")]
		[Address(RVA = "0x1522450", Offset = "0x1522450", VA = "0x1522450")]
		public static void AddObjectToAsset(UnityEngine.Object objectToAdd, UnityEngine.Object assetObject)
		{
		}

		[Token(Token = "0x6001FDF")]
		[Address(RVA = "0x15224BC", Offset = "0x15224BC", VA = "0x15224BC")]
		public static void SaveAndRefreshDatabase()
		{
		}

		[Token(Token = "0x6001FE0")]
		[Address(RVA = "0x15224C0", Offset = "0x15224C0", VA = "0x15224C0")]
		public static void SaveAssetDatabase()
		{
		}

		[Token(Token = "0x6001FE1")]
		[Address(RVA = "0x15224C4", Offset = "0x15224C4", VA = "0x15224C4")]
		public static void RefreshAssetDatabase()
		{
		}

		[Token(Token = "0x6001FE2")]
		[Address(RVA = "0x15224C8", Offset = "0x15224C8", VA = "0x15224C8")]
		public static UnityEngine.Object LoadAssetAtPath(string assetPath, Type type)
		{
			return null;
		}

		[Token(Token = "0x6001FE3")]
		[Address(RVA = "0x152253C", Offset = "0x152253C", VA = "0x152253C")]
		public static UnityEngine.Object LoadSubAssetAtPath(string mainPath, string subAssetPath)
		{
			return null;
		}

		[Token(Token = "0x6001FE4")]
		[Address(RVA = "0x15225C8", Offset = "0x15225C8", VA = "0x15225C8")]
		public static UnityEngine.Object[] LoadAllAssetsAtPath(string assetPath)
		{
			return null;
		}

		[Token(Token = "0x6001FE5")]
		[Address(RVA = "0x1522554", Offset = "0x1522554", VA = "0x1522554")]
		public static UnityEngine.Object[] LoadAllAssetRepresentationsAtPath(string assetPath)
		{
			return null;
		}

		[Token(Token = "0x6001FE6")]
		[Address(RVA = "0x152263C", Offset = "0x152263C", VA = "0x152263C")]
		public static void ImportAsset(string assetPath, HEU_ImportAssetOptions heuOptions)
		{
		}

		[Token(Token = "0x6001FE7")]
		[Address(RVA = "0x15226A8", Offset = "0x15226A8", VA = "0x15226A8")]
		public static string GetAssetWorkingPath()
		{
			return null;
		}

		[Token(Token = "0x6001FE8")]
		[Address(RVA = "0x152271C", Offset = "0x152271C", VA = "0x152271C")]
		public static string GetAssetBakedPath()
		{
			return null;
		}

		[Token(Token = "0x6001FE9")]
		[Address(RVA = "0x1522790", Offset = "0x1522790", VA = "0x1522790")]
		public static string GetAssetBakedPathWithAssetName(string assetName)
		{
			return null;
		}

		[Token(Token = "0x6001FEA")]
		[Address(RVA = "0x1522804", Offset = "0x1522804", VA = "0x1522804")]
		public static string CreateUniqueBakePath(string assetName)
		{
			return null;
		}

		[Token(Token = "0x6001FEB")]
		[Address(RVA = "0x1522878", Offset = "0x1522878", VA = "0x1522878")]
		public static void CreatePathWithFolders(string inPath)
		{
		}

		[Token(Token = "0x6001FEC")]
		[Address(RVA = "0x15228E4", Offset = "0x15228E4", VA = "0x15228E4")]
		public static string AppendMeshesPathToAssetFolder(string inAssetCacheFolder)
		{
			return null;
		}

		[Token(Token = "0x6001FED")]
		[Address(RVA = "0x15229F0", Offset = "0x15229F0", VA = "0x15229F0")]
		public static string AppendTexturesPathToAssetFolder(string inAssetCacheFolder)
		{
			return null;
		}

		[Token(Token = "0x6001FEE")]
		[Address(RVA = "0x1522AFC", Offset = "0x1522AFC", VA = "0x1522AFC")]
		public static string AppendMaterialsPathToAssetFolder(string inAssetCacheFolder)
		{
			return null;
		}

		[Token(Token = "0x6001FEF")]
		[Address(RVA = "0x1522C08", Offset = "0x1522C08", VA = "0x1522C08")]
		public static string AppendTerrainPathToAssetFolder(string inAssetCacheFolder)
		{
			return null;
		}

		[Token(Token = "0x6001FF0")]
		[Address(RVA = "0x1522D14", Offset = "0x1522D14", VA = "0x1522D14")]
		public static string[] GetAssetSubFolders()
		{
			return null;
		}

		[Token(Token = "0x6001FF1")]
		[Address(RVA = "0x1522E58", Offset = "0x1522E58", VA = "0x1522E58")]
		public static string AppendPrefabPath(string inAssetCacheFolder, string assetName)
		{
			return null;
		}

		[Token(Token = "0x6001FF2")]
		[Address(RVA = "0x1522F74", Offset = "0x1522F74", VA = "0x1522F74")]
		public static string AppendMeshesAssetFileName(string assetName)
		{
			return null;
		}

		[Token(Token = "0x6001FF3")]
		[Address(RVA = "0x1522FC8", Offset = "0x1522FC8", VA = "0x1522FC8")]
		public static bool IsSubAsset(UnityEngine.Object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FF4")]
		[Address(RVA = "0x1522FD0", Offset = "0x1522FD0", VA = "0x1522FD0")]
		public static string[] GetAssetPathsFromAssetBundle(string assetBundleFileName)
		{
			return null;
		}

		[Token(Token = "0x6001FF5")]
		[Address(RVA = "0x1522FD8", Offset = "0x1522FD8", VA = "0x1522FD8")]
		public static bool IsAssetSavedInScene(GameObject go)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FF6")]
		[Address(RVA = "0x152304C", Offset = "0x152304C", VA = "0x152304C")]
		public static void PrintDependencies(GameObject targetGO)
		{
		}

		[Token(Token = "0x6001FF7")]
		[Address(RVA = "0x1523050", Offset = "0x1523050", VA = "0x1523050")]
		public static string GetUniqueAssetPathForUnityAsset(UnityEngine.Object obj)
		{
			return null;
		}

		[Token(Token = "0x6001FF8")]
		public static T LoadUnityAssetFromUniqueAssetPath<T>(string assetPath) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6001FF9")]
		public static T GetBuiltinExtraResource<T>(string resourceName) where T : UnityEngine.Object
		{
			return null;
		}
	}
	[Token(Token = "0x2000400")]
	public class HEU_Defines
	{
		[Token(Token = "0x400132E")]
		public const string HEU_PRODUCT_NAME = "HoudiniEngine";

		[Token(Token = "0x400132F")]
		public const string HEU_NAME = "Houdini Engine";

		[Token(Token = "0x4001330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string HEU_PLUGIN_PATH;

		[Token(Token = "0x4001331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string HEU_TEXTURES_PATH;

		[Token(Token = "0x4001332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static string HEU_BAKED_ASSETS_PATH;

		[Token(Token = "0x4001333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static string HEU_ENGINE_ASSETS;

		[Token(Token = "0x4001334")]
		public const string HAPI_PATH = "HAPI_PATH";

		[Token(Token = "0x4001335")]
		public const string HEU_ENVPATH_PREFIX = "HEU_ENVPATH_";

		[Token(Token = "0x4001336")]
		public const string HEU_ENVPATH_KEY = "$";

		[Token(Token = "0x4001337")]
		public const int HEU_INVALID_NODE_ID = -1;

		[Token(Token = "0x4001338")]
		public const string HEU_DEFAULT_ASSET_NAME = "HoudiniAssetRoot";

		[Token(Token = "0x4001339")]
		public const string HEU_SESSION_PIPENAME = "hapi";

		[Token(Token = "0x400133A")]
		public const string HEU_SESSION_LOCALHOST = "localhost";

		[Token(Token = "0x400133B")]
		public const int HEU_SESSION_PORT = 9090;

		[Token(Token = "0x400133C")]
		public const float HEU_SESSION_TIMEOUT = 10000f;

		[Token(Token = "0x400133D")]
		public const bool HEU_SESSION_AUTOCLOSE = true;

		[Token(Token = "0x400133E")]
		public const int HAPI_MAX_PAGE_SIZE = 20000;

		[Token(Token = "0x400133F")]
		public const int HAPI_SEC_BEFORE_PROGRESS_BAR_SHOW = 3;

		[Token(Token = "0x4001340")]
		public const int HAPI_MAX_VERTICES_PER_FACE = 3;

		[Token(Token = "0x4001341")]
		public const bool HAPI_CURVE_REFINE_TO_LINEAR = true;

		[Token(Token = "0x4001342")]
		public const float HAPI_CURVE_LOD = 8f;

		[Token(Token = "0x4001343")]
		public const float HAPI_VOLUME_POSITION_MULT = 2f;

		[Token(Token = "0x4001344")]
		public const float HAPI_VOLUME_SURFACE_MAX_PT_PER_C = 64000f;

		[Token(Token = "0x4001345")]
		public const float HAPI_VOLUME_SURFACE_DELTA_MULT = 1.2f;

		[Token(Token = "0x4001346")]
		public const float HAPI_VOLUME_SURFACE_PT_SIZE_MULT = 1800f;

		[Token(Token = "0x4001347")]
		public const int HAPI_POSITION_VECTOR_SIZE = 3;

		[Token(Token = "0x4001348")]
		public const int HAPI_SCALE_VECTOR_SIZE = 3;

		[Token(Token = "0x4001349")]
		public const int HAPI_SHEAR_VECTOR_SIZE = 3;

		[Token(Token = "0x400134A")]
		public const int HAPI_NORMAL_VECTOR_SIZE = 3;

		[Token(Token = "0x400134B")]
		public const int HAPI_QUATERNION_VECTOR_SIZE = 4;

		[Token(Token = "0x400134C")]
		public const int HAPI_EULER_VECTOR_SIZE = 3;

		[Token(Token = "0x400134D")]
		public const int HAPI_COLOR_VECTOR_SIZE = 4;

		[Token(Token = "0x400134E")]
		public const int HAPI_CV_VECTOR_SIZE = 4;

		[Token(Token = "0x400134F")]
		public const int HAPI_PRIM_MIN_VERTEX_COUNT = 1;

		[Token(Token = "0x4001350")]
		public const int HAPI_PRIM_MAX_VERTEX_COUNT = 16;

		[Token(Token = "0x4001351")]
		public const int HAPI_INVALID_PARM_ID = -1;

		[Token(Token = "0x4001352")]
		public const int HAPI_MAX_UVS = 8;

		[Token(Token = "0x4001353")]
		public const string HAPI_ATTRIB_POSITION = "P";

		[Token(Token = "0x4001354")]
		public const string HAPI_ATTRIB_UV = "uv";

		[Token(Token = "0x4001355")]
		public const string HAPI_ATTRIB_NORMAL = "N";

		[Token(Token = "0x4001356")]
		public const string HAPI_ATTRIB_TANGENT = "tangentu";

		[Token(Token = "0x4001357")]
		public const string HAPI_ATTRIB_COLOR = "Cd";

		[Token(Token = "0x4001358")]
		public const string HAPI_ATTRIB_ALPHA = "Alpha";

		[Token(Token = "0x4001359")]
		public const string HAPI_ATTRIB_NAME = "name";

		[Token(Token = "0x400135A")]
		public const string HAPI_ATTRIB_INSTANCE = "instance";

		[Token(Token = "0x400135B")]
		public const string HAPI_ATTRIB_ORIENT = "orient";

		[Token(Token = "0x400135C")]
		public const string HAPI_UNGROUPED_GROUP_NAME = "__ungrouped_group";

		[Token(Token = "0x400135D")]
		public const string HAPI_HANDLE_TRANSFORM = "xform";

		[Token(Token = "0x400135E")]
		public const string HAPI_RAW_FORMAT_NAME = "HAPI_RAW";

		[Token(Token = "0x400135F")]
		public const string HAPI_PNG_FORMAT_NAME = "PNG";

		[Token(Token = "0x4001360")]
		public const string HAPI_JPEG_FORMAT_NAME = "JPEG";

		[Token(Token = "0x4001361")]
		public const string HAPI_BMP_FORMAT_NAME = "Bitmap";

		[Token(Token = "0x4001362")]
		public const string HAPI_TIFF_FORMAT_NAME = "TIFF";

		[Token(Token = "0x4001363")]
		public const string HAPI_TGA_FORMAT_NAME = "Targa";

		[Token(Token = "0x4001364")]
		public const string HAPI_DEFAULT_IMAGE_FORMAT_NAME = "PNG";

		[Token(Token = "0x4001365")]
		public const string HAPI_GLOBAL_NODES_NODE_NAME = "GlobalNodes";

		[Token(Token = "0x4001366")]
		public const string HAPI_ENV_HIP = "HIP";

		[Token(Token = "0x4001367")]
		public const string HAPI_ENV_JOB = "JOB";

		[Token(Token = "0x4001368")]
		public const string HAPI_ENV_CLIENT_NAME = "HAPI_CLIENT_NAME";

		[Token(Token = "0x4001369")]
		public const string HAPI_CACHE_COP_COOK = "COP Cook Cache";

		[Token(Token = "0x400136A")]
		public const string HAPI_CACHE_COP_FLIPBOOK = "COP Flipbook Cache";

		[Token(Token = "0x400136B")]
		public const string HAPI_CACHE_IMAGE = "Image Cache";

		[Token(Token = "0x400136C")]
		public const string HAPI_CACHE_OBJ = "Object Transform Cache";

		[Token(Token = "0x400136D")]
		public const string HAPI_CACHE_GL_TEXTURE = "OpenGL Texture Cache";

		[Token(Token = "0x400136E")]
		public const string HAPI_CACHE_GL_VERTEX = "OpenGL Vertex Cache";

		[Token(Token = "0x400136F")]
		public const string HAPI_CACHE_SOP = "SOP Cache";

		[Token(Token = "0x4001370")]
		public const string HAPI_CACHE_VEX = "VEX File Cache";

		[Token(Token = "0x4001371")]
		public const string HAPI_OBJMERGE_TRANSFORM_PARAM = "xformtype";

		[Token(Token = "0x4001372")]
		public const string HAPI_OBJMERGE_PACK_GEOMETRY = "pack";

		[Token(Token = "0x4001373")]
		public const string NO_EXISTING_SESSION = "No existing session.";

		[Token(Token = "0x4001374")]
		public const string HEU_ERROR_TITLE = "Houdini Engine Error";

		[Token(Token = "0x4001375")]
		public const string HEU_INSTALL_INFO = "Houdini Engine Installation Info";

		[Token(Token = "0x4001376")]
		public const string PLUGIN_STORE_KEYS = "HoudiniEnginePluginKeys";

		[Token(Token = "0x4001377")]
		public const string PLUGIN_STORE_DATA = "HoudiniEnginePluginData";

		[Token(Token = "0x4001378")]
		public const string PLUGIN_SESSION_DATA = "HoudiniEngineSession";

		[Token(Token = "0x4001379")]
		public const string PLUGIN_SETTINGS_FILE = "heu_settings.ini";

		[Token(Token = "0x400137A")]
		public const string PLUGIN_SESSION_FILE = "heu_session.txt";

		[Token(Token = "0x400137B")]
		public const string DEFAULT_COLLISION_GEO = "collision_geo";

		[Token(Token = "0x400137C")]
		public const string DEFAULT_RENDERED_COLLISION_GEO = "rendered_collision_geo";

		[Token(Token = "0x400137D")]
		public const string DEFAULT_CONVEX_COLLISION_GEO = "convex";

		[Token(Token = "0x400137E")]
		public const string DEFAULT_SIMPLE_COLLISION_GEO = "collision_geo_simple";

		[Token(Token = "0x400137F")]
		public const string DEFAULT_SIMPLE_RENDERED_COLLISION_GEO = "rendered_collision_geo_simple";

		[Token(Token = "0x4001380")]
		public const string DEFAULT_COLLISION_TRIGGER = "trigger";

		[Token(Token = "0x4001381")]
		public const string DEFAULT_UNITY_MATERIAL_ATTR = "unity_material";

		[Token(Token = "0x4001382")]
		public const string DEFAULT_UNITY_SUBMATERIAL_NAME_ATTR = "unity_sub_material_name";

		[Token(Token = "0x4001383")]
		public const string DEFAULT_UNITY_SUBMATERIAL_INDEX_ATTR = "unity_sub_material_index";

		[Token(Token = "0x4001384")]
		public const string DEFAULT_UNITY_HEIGHTFIELD_TEXTURE_DIFFUSE_ATTR = "unity_hf_texture_diffuse";

		[Token(Token = "0x4001385")]
		public const string DEFAULT_UNITY_HEIGHTFIELD_TEXTURE_MASK_ATTR = "unity_hf_texture_mask";

		[Token(Token = "0x4001386")]
		public const string DEFAULT_UNITY_HEIGHTFIELD_TEXTURE_NORMAL_ATTR = "unity_hf_texture_normal";

		[Token(Token = "0x4001387")]
		public const string DEFAULT_UNITY_HEIGHTFIELD_NORMAL_SCALE_ATTR = "unity_hf_normal_scale";

		[Token(Token = "0x4001388")]
		public const string DEFAULT_UNITY_HEIGHTFIELD_METALLIC_ATTR = "unity_hf_metallic";

		[Token(Token = "0x4001389")]
		public const string DEFAULT_UNITY_HEIGHTFIELD_SMOOTHNESS_ATTR = "unity_hf_smoothness";

		[Token(Token = "0x400138A")]
		public const string DEFAULT_UNITY_HEIGHTFIELD_SPECULAR_ATTR = "unity_hf_specular";

		[Token(Token = "0x400138B")]
		public const string DEFAULT_UNITY_HEIGHTFIELD_TILE_OFFSET_ATTR = "unity_hf_tile_offset";

		[Token(Token = "0x400138C")]
		public const string DEFAULT_UNITY_HEIGHTFIELD_TILE_SIZE_ATTR = "unity_hf_tile_size";

		[Token(Token = "0x400138D")]
		public const string DEFAULT_UNITY_HEIGHTFIELD_TERRAINDATA_FILE_ATTR = "unity_hf_terraindata_file";

		[Token(Token = "0x400138E")]
		public const string DEFAULT_UNITY_HEIGHTFIELD_TERRAINDATA_EXPORT_FILE_ATTR = "unity_hf_terraindata_export_file";

		[Token(Token = "0x400138F")]
		public const string DEFAULT_UNITY_HEIGHTFIELD_TERRAINLAYER_FILE_ATTR = "unity_hf_terrainlayer_file";

		[Token(Token = "0x4001390")]
		public const string DEFAULT_UNITY_HEIGHTFIELD_TERRAINDATA_EXPORT_PATH = "unity_hf_terraindata_export_path";

		[Token(Token = "0x4001391")]
		public const string DEFAULT_UNITY_HEIGHTFIELD_HEIGHT_RANGE = "unity_hf_height_range";

		[Token(Token = "0x4001392")]
		public const string DEFAULT_UNITY_HEIGHTFIELD_YPOS = "unity_hf_ypos";

		[Token(Token = "0x4001393")]
		public const string HEIGHTFIELD_TREEPROTOTYPE = "unity_hf_tree_prototype";

		[Token(Token = "0x4001394")]
		public const string HEIGHTFIELD_TREEINSTANCE_PROTOTYPEINDEX = "unity_hf_treeinstance_prototypeindex";

		[Token(Token = "0x4001395")]
		public const string HEIGHTFIELD_TREEINSTANCE_HEIGHTSCALE = "unity_hf_treeinstance_heightscale";

		[Token(Token = "0x4001396")]
		public const string HEIGHTFIELD_TREEINSTANCE_WIDTHSCALE = "unity_hf_treeinstance_widthscale";

		[Token(Token = "0x4001397")]
		public const string HEIGHTFIELD_TREEINSTANCE_LIGHTMAPCOLOR = "unity_hf_treeinstance_lightmapcolor";

		[Token(Token = "0x4001398")]
		public const string HEIGHTFIELD_DETAIL_RESOLUTION_PER_PATCH = "unity_hf_detail_resolution_patch";

		[Token(Token = "0x4001399")]
		public const string HEIGHTFIELD_DETAIL_DISTANCE = "unity_hf_detail_distance";

		[Token(Token = "0x400139A")]
		public const string HEIGHTFIELD_DETAIL_DENSITY = "unity_hf_detail_density";

		[Token(Token = "0x400139B")]
		public const string HEIGHTFIELD_DETAIL_PROTOTYPE_PREFAB = "unity_hf_detail_prototype_prefab";

		[Token(Token = "0x400139C")]
		public const string HEIGHTFIELD_DETAIL_PROTOTYPE_TEXTURE = "unity_hf_detail_prototype_texture";

		[Token(Token = "0x400139D")]
		public const string HEIGHTFIELD_DETAIL_PROTOTYPE_BENDFACTOR = "unity_hf_detail_prototype_bendfactor";

		[Token(Token = "0x400139E")]
		public const string HEIGHTFIELD_DETAIL_PROTOTYPE_DRYCOLOR = "unity_hf_detail_prototype_drycolor";

		[Token(Token = "0x400139F")]
		public const string HEIGHTFIELD_DETAIL_PROTOTYPE_HEALTHYCOLOR = "unity_hf_detail_prototype_healthycolor";

		[Token(Token = "0x40013A0")]
		public const string HEIGHTFIELD_DETAIL_PROTOTYPE_MAXHEIGHT = "unity_hf_detail_prototype_maxheight";

		[Token(Token = "0x40013A1")]
		public const string HEIGHTFIELD_DETAIL_PROTOTYPE_MAXWIDTH = "unity_hf_detail_prototype_maxwidth";

		[Token(Token = "0x40013A2")]
		public const string HEIGHTFIELD_DETAIL_PROTOTYPE_MINHEIGHT = "unity_hf_detail_prototype_minheight";

		[Token(Token = "0x40013A3")]
		public const string HEIGHTFIELD_DETAIL_PROTOTYPE_MINWIDTH = "unity_hf_detail_prototype_minwidth";

		[Token(Token = "0x40013A4")]
		public const string HEIGHTFIELD_DETAIL_PROTOTYPE_NOISESPREAD = "unity_hf_detail_prototype_noisespread";

		[Token(Token = "0x40013A5")]
		public const string HEIGHTFIELD_DETAIL_PROTOTYPE_RENDERMODE = "unity_hf_detail_prototype_rendermode";

		[Token(Token = "0x40013A6")]
		public const string HEIGHTFIELD_LAYER_ATTR_TYPE = "unity_hf_layer_type";

		[Token(Token = "0x40013A7")]
		public const string HEIGHTFIELD_LAYER_TYPE_DETAIL = "detail";

		[Token(Token = "0x40013A8")]
		public const string HAPI_HEIGHTFIELD_TILE_ATTR = "tile";

		[Token(Token = "0x40013A9")]
		public const string HAPI_HEIGHTFIELD_LAYERNAME_HEIGHT = "height";

		[Token(Token = "0x40013AA")]
		public const string HAPI_HEIGHTFIELD_LAYERNAME_MASK = "mask";

		[Token(Token = "0x40013AB")]
		public const string MAT_OGL_ALPHA_ATTR = "ogl_alpha";

		[Token(Token = "0x40013AC")]
		public const string MAT_OGL_NORMAL_ATTR = "ogl_normalmap";

		[Token(Token = "0x40013AD")]
		public const string MAT_OGL_TEX1_ATTR = "ogl_tex1";

		[Token(Token = "0x40013AE")]
		public const string MAT_BASECOLOR_ATTR = "baseColorMap";

		[Token(Token = "0x40013AF")]
		public const string MAT_MAP_ATTR = "map";

		[Token(Token = "0x40013B0")]
		public const string MAT_OGL_ROUGH_ATTR = "ogl_rough";

		[Token(Token = "0x40013B1")]
		public const string MAT_OGL_DIFF_ATTR = "ogl_diff";

		[Token(Token = "0x40013B2")]
		public const string MAT_OGL_SPEC_ATTR = "ogl_spec";

		[Token(Token = "0x40013B3")]
		public const string CURVE_COORDS_PARAM = "coords";

		[Token(Token = "0x40013B4")]
		public const string HENGINE_STORE_ATTR = "hengine_attr_store";

		[Token(Token = "0x40013B5")]
		public const string DEFAULT_UNITY_TAG_ATTR = "unity_tag";

		[Token(Token = "0x40013B6")]
		public const string DEFAULT_UNITY_SCRIPT_ATTR = "unity_script";

		[Token(Token = "0x40013B7")]
		public const string DEFAULT_UNITY_INSTANCE_ATTR = "unity_instance";

		[Token(Token = "0x40013B8")]
		public const string DEFAULT_UNITY_INPUT_MESH_ATTR = "unity_input_mesh_name";

		[Token(Token = "0x40013B9")]
		public const string DEFAULT_UNITY_STATIC_ATTR = "unity_static";

		[Token(Token = "0x40013BA")]
		public const string DEFAULT_UNITY_LAYER_ATTR = "unity_layer";

		[Token(Token = "0x40013BB")]
		public const string DEFAULT_UNITY_MESH_READABLE = "unity_mesh_readable";

		[Token(Token = "0x40013BC")]
		public const string DEFAULT_INSTANCE_PREFIX_ATTR = "instance_prefix";

		[Token(Token = "0x40013BD")]
		public const string UNITY_SHADER_BUMP_MAP = "_BumpMap";

		[Token(Token = "0x40013BE")]
		public const string UNITY_SHADER_SHININESS = "_Shininess";

		[Token(Token = "0x40013BF")]
		public const string UNITY_SHADER_COLOR = "_Color";

		[Token(Token = "0x40013C0")]
		public const string UNITY_SHADER_SPECCOLOR = "_SpecColor";

		[Token(Token = "0x40013C1")]
		public const string UNITY_EDITORONLY_TAG = "EditorOnly";

		[Token(Token = "0x40013C2")]
		public const string UNITY_HDADATA_NAME = "HDA_Data";

		[Token(Token = "0x40013C3")]
		public const string HOUDINI_SHADER_PREFIX = "Houdini/";

		[Token(Token = "0x40013C4")]
		public const string DEFAULT_STANDARD_SHADER = "SpecularVertexColor";

		[Token(Token = "0x40013C5")]
		public const string DEFAULT_VERTEXCOLOR_SHADER = "SpecularVertexColor";

		[Token(Token = "0x40013C6")]
		public const string DEFAULT_TRANSPARENT_SHADER = "AlphaSpecularVertexColor";

		[Token(Token = "0x40013C7")]
		public const string DEFAULT_CURVE_SHADER = "LineShader";

		[Token(Token = "0x40013C8")]
		public const string DEFAULT_UNITY_BUILTIN_RESOURCES = "Resources/unity_builtin_extra";

		[Token(Token = "0x40013C9")]
		public const string DEFAULT_MATERIAL = "HEU_DEFAULT_MATERIAL";

		[Token(Token = "0x40013CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static int DEFAULT_MATERIAL_KEY;

		[Token(Token = "0x40013CB")]
		public const string EDITABLE_MATERIAL = "HEU_EDITABLE_MATERIAL";

		[Token(Token = "0x40013CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public static int EDITABLE_MATERIAL_KEY;

		[Token(Token = "0x40013CD")]
		public const int HEU_INVALID_MATERIAL = -1;

		[Token(Token = "0x40013CE")]
		public const string HEU_ASSET_CACHE_PATH = "HoudiniEngineAssetCache";

		[Token(Token = "0x40013CF")]
		public const string HEU_WORKING_PATH = "Working";

		[Token(Token = "0x40013D0")]
		public const string HEU_BAKED_PATH = "Baked";

		[Token(Token = "0x40013D1")]
		public const string HEU_BAKED_HDA = "_bakedHDA";

		[Token(Token = "0x40013D2")]
		public const string HEU_BAKED_CLONE = "_bakedClone";

		[Token(Token = "0x40013D3")]
		public const string HEU_INSTANCE = "_Instance";

		[Token(Token = "0x40013D4")]
		public const string HEU_INSTANCE_PATTERN = "_Instance\\d*\\z";

		[Token(Token = "0x40013D5")]
		public const string HEU_DEFAULT_GEO_GROUP_NAME = "main_geo";

		[Token(Token = "0x40013D6")]
		public const string HEU_DEFAULT_LOD_NAME = "lod";

		[Token(Token = "0x40013D7")]
		public const string HEU_UNITY_LOD_TRANSITION_ATTR = "lod_screensizes";

		[Token(Token = "0x40013D8")]
		public const string HEU_SUBASSET = "SUBASSET::";

		[Token(Token = "0x40013D9")]
		public const string HEU_HENGINE_TOOLS_SHIPPED_FOLDER = "<HFS>/engine/tools";

		[Token(Token = "0x40013DA")]
		public const string HEU_HENGINE_SHIPPED_SHELF = "Default";

		[Token(Token = "0x40013DB")]
		public const string HEU_PATH_KEY_PROJECT = "<PROJECT_PATH>";

		[Token(Token = "0x40013DC")]
		public const string HEU_PATH_KEY_PLUGIN = "<PLUGIN_PATH>";

		[Token(Token = "0x40013DD")]
		public const string HEU_PATH_KEY_HFS = "<HFS>";

		[Token(Token = "0x40013DE")]
		public const string HEU_PATH_KEY_TOOL = "HOUDINI_TOOL_PATH";

		[Token(Token = "0x40013DF")]
		public const string HEU_USERMSG_NONEDITOR_NOT_SUPPORTED = "Houdini Engine does not support non-Editor asset creation at this time!";

		[Token(Token = "0x40013E0")]
		public const string HEU_TERRAIN_SPLAT_DEFAULT = "Textures/heu_terrain_default_splat";

		[Token(Token = "0x40013E1")]
		public const string HEU_FOLDER_MESHES = "Meshes";

		[Token(Token = "0x40013E2")]
		public const string HEU_FOLDER_MATERIALS = "Materials";

		[Token(Token = "0x40013E3")]
		public const string HEU_FOLDER_TERRAIN = "Terrain";

		[Token(Token = "0x40013E4")]
		public const string HEU_FOLDER_TILE = "Tile";

		[Token(Token = "0x40013E5")]
		public const string HEU_FOLDER_TEXTURES = "Textures";

		[Token(Token = "0x40013E6")]
		public const string HEU_EXT_ASSET = ".asset";

		[Token(Token = "0x40013E7")]
		public const string HEU_EXT_MAT = ".mat";

		[Token(Token = "0x40013E8")]
		public const string HEU_EXT_TERRAINDATA = ".terraindata";

		[Token(Token = "0x40013E9")]
		public const string HEU_EXT_TERRAINLAYER = ".terrainlayer";

		[Token(Token = "0x40013EA")]
		public const string HEU_KEY_CTRL = "Ctrl";

		[Token(Token = "0x6001FFA")]
		[Address(RVA = "0x152F434", Offset = "0x152F434", VA = "0x152F434")]
		public HEU_Defines()
		{
		}
	}
	[Token(Token = "0x2000401")]
	public static class HEU_HAPIUtility
	{
		[Token(Token = "0x6001FFC")]
		[Address(RVA = "0x12CFA90", Offset = "0x12CFA90", VA = "0x12CFA90")]
		public static string GetHoudiniEngineInstallationInfo()
		{
			return null;
		}

		[Token(Token = "0x6001FFD")]
		[Address(RVA = "0x12CFAD8", Offset = "0x12CFAD8", VA = "0x12CFAD8")]
		public static string GetEnvironmentPath()
		{
			return null;
		}

		[Token(Token = "0x6001FFE")]
		[Address(RVA = "0x12CFB28", Offset = "0x12CFB28", VA = "0x12CFB28")]
		public static string GetRealPathFromHFSPath(string inPath)
		{
			return null;
		}

		[Token(Token = "0x6001FFF")]
		[Address(RVA = "0x12CFCAC", Offset = "0x12CFCAC", VA = "0x12CFCAC")]
		public static bool DoesMappedPathExist(string inPath)
		{
			return default(bool);
		}

		[Token(Token = "0x6002000")]
		[Address(RVA = "0x12CFD40", Offset = "0x12CFD40", VA = "0x12CFD40")]
		public static bool IsHoudiniAssetFile(string filePath)
		{
			return default(bool);
		}

		[Token(Token = "0x6002001")]
		[Address(RVA = "0x12CFE50", Offset = "0x12CFE50", VA = "0x12CFE50")]
		public static string FindHoudiniAssetFileInPathWithExt(string filePath)
		{
			return null;
		}

		[Token(Token = "0x6002002")]
		[Address(RVA = "0x12D0098", Offset = "0x12D0098", VA = "0x12D0098")]
		public static void Log(string message)
		{
		}

		[Token(Token = "0x6002003")]
		[Address(RVA = "0x12D0100", Offset = "0x12D0100", VA = "0x12D0100")]
		public static void LogWarning(string message)
		{
		}

		[Token(Token = "0x6002004")]
		[Address(RVA = "0x12D0168", Offset = "0x12D0168", VA = "0x12D0168")]
		public static void LogError(string message)
		{
		}

		[Token(Token = "0x6002005")]
		[Address(RVA = "0x12D01D0", Offset = "0x12D01D0", VA = "0x12D01D0")]
		public static string LocateValidFilePath(UnityEngine.Object inObject)
		{
			return null;
		}

		[Token(Token = "0x6002006")]
		[Address(RVA = "0x12D025C", Offset = "0x12D025C", VA = "0x12D025C")]
		public static string LocateValidFilePath(string assetName, string inFilePath)
		{
			return null;
		}

		[Token(Token = "0x6002007")]
		[Address(RVA = "0x12D0264", Offset = "0x12D0264", VA = "0x12D0264")]
		public static GameObject InstantiateHDA(string filePath, Vector3 initialPosition, HEU_SessionBase session, bool bBuildAsync, bool bLoadFromMemory = false)
		{
			return null;
		}

		[Token(Token = "0x6002008")]
		[Address(RVA = "0x12D066C", Offset = "0x12D066C", VA = "0x12D066C")]
		public static bool LoadHDAFile(HEU_SessionBase session, string assetPath, out int assetLibraryID, out string[] assetNames)
		{
			return default(bool);
		}

		[Token(Token = "0x6002009")]
		[Address(RVA = "0x12D0894", Offset = "0x12D0894", VA = "0x12D0894")]
		public static bool CreateAndCookAssetNode(HEU_SessionBase session, string assetName, bool bCookTemplatedGeos, out int newAssetID)
		{
			return default(bool);
		}

		[Token(Token = "0x600200A")]
		[Address(RVA = "0x12D0C14", Offset = "0x12D0C14", VA = "0x12D0C14")]
		public static bool CreateAndCookCurveAsset(HEU_SessionBase session, string assetName, bool bCookTemplatedGeos, out int newAssetID)
		{
			return default(bool);
		}

		[Token(Token = "0x600200B")]
		[Address(RVA = "0x12D0D10", Offset = "0x12D0D10", VA = "0x12D0D10")]
		public static bool CreateAndCookInputAsset(HEU_SessionBase session, string assetName, bool bCookTemplatedGeos, out int newAssetID)
		{
			return default(bool);
		}

		[Token(Token = "0x600200C")]
		[Address(RVA = "0x12D0BB8", Offset = "0x12D0BB8", VA = "0x12D0BB8")]
		public static bool CookNodeInHoudini(HEU_SessionBase session, int nodeID, bool bCookTemplatedGeos, string assetName)
		{
			return default(bool);
		}

		[Token(Token = "0x600200D")]
		[Address(RVA = "0x12D0A30", Offset = "0x12D0A30", VA = "0x12D0A30")]
		public static bool ProcessHoudiniCookStatus(HEU_SessionBase session, string assetName)
		{
			return default(bool);
		}

		[Token(Token = "0x600200E")]
		[Address(RVA = "0x12D0F4C", Offset = "0x12D0F4C", VA = "0x12D0F4C")]
		public static GameObject CreateNewAsset(HEU_HoudiniAsset.HEU_AssetType assetType, string rootName = "HoudiniAsset", [Optional] Transform parentTransform, [Optional] HEU_SessionBase session, bool bBuildAsync = true)
		{
			return null;
		}

		[Token(Token = "0x600200F")]
		[Address(RVA = "0x12D127C", Offset = "0x12D127C", VA = "0x12D127C")]
		public static GameObject CreateNewCurveAsset(string name = "HoudiniCurve", [Optional] Transform parentTransform, [Optional] HEU_SessionBase session, bool bBuildAsync = true)
		{
			return null;
		}

		[Token(Token = "0x6002010")]
		[Address(RVA = "0x12D129C", Offset = "0x12D129C", VA = "0x12D129C")]
		public static GameObject CreateNewInputAsset(string name = "HoudiniInput", [Optional] Transform parentTransform, [Optional] HEU_SessionBase session, bool bBuildAsync = true)
		{
			return null;
		}

		[Token(Token = "0x6002011")]
		[Address(RVA = "0x12D12BC", Offset = "0x12D12BC", VA = "0x12D12BC")]
		public static GameObject LoadGeoWithNewGeoSync([Optional] HEU_SessionBase session)
		{
			return null;
		}

		[Token(Token = "0x6002012")]
		[Address(RVA = "0x12D12C4", Offset = "0x12D12C4", VA = "0x12D12C4")]
		public static void DestroyChildren(Transform inTransform)
		{
		}

		[Token(Token = "0x6002013")]
		[Address(RVA = "0x12D1658", Offset = "0x12D1658", VA = "0x12D1658")]
		public static void DestroyGameObject(GameObject gameObect, bool bRegisterUndo = false)
		{
		}

		[Token(Token = "0x6002014")]
		public static void DestroyChildrenWithComponent<T>(GameObject gameObject) where T : Component
		{
		}

		[Token(Token = "0x6002015")]
		[Address(RVA = "0x12D1668", Offset = "0x12D1668", VA = "0x12D1668")]
		public static bool IsNodeValidInHoudini(HEU_SessionBase session, int nodeID)
		{
			return default(bool);
		}

		[Token(Token = "0x6002016")]
		[Address(RVA = "0x12D1714", Offset = "0x12D1714", VA = "0x12D1714")]
		public static HEU_HoudiniAssetRoot GetAssetInScene(int assetID)
		{
			return null;
		}

		[Token(Token = "0x6002017")]
		[Address(RVA = "0x12D182C", Offset = "0x12D182C", VA = "0x12D182C")]
		public static void ApplyWorldTransfromFromHoudiniToUnity(ref HAPI_Transform hapiTransform, Transform unityTransform)
		{
		}

		[Token(Token = "0x6002018")]
		[Address(RVA = "0x12D1A70", Offset = "0x12D1A70", VA = "0x12D1A70")]
		public static void ApplyLocalTransfromFromHoudiniToUnity(ref HAPI_Transform hapiTransform, Transform unityTransform)
		{
		}

		[Token(Token = "0x6002019")]
		[Address(RVA = "0x12D1C24", Offset = "0x12D1C24", VA = "0x12D1C24")]
		public static void ApplyLocalTransfromFromHoudiniToUnityForInstance(ref HAPI_Transform hapiTransform, Transform unityTransform)
		{
		}

		[Token(Token = "0x600201A")]
		[Address(RVA = "0x12D1E7C", Offset = "0x12D1E7C", VA = "0x12D1E7C")]
		public static void ApplyMatrixToLocalTransform(ref Matrix4x4 matrix, Transform transform)
		{
		}

		[Token(Token = "0x600201B")]
		[Address(RVA = "0x12D23E8", Offset = "0x12D23E8", VA = "0x12D23E8")]
		public static Matrix4x4 GetMatrixFromHAPITransform(ref HAPI_Transform hapiTransform, bool bConvertToUnity = true)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x600201C")]
		[Address(RVA = "0x12D1F7C", Offset = "0x12D1F7C", VA = "0x12D1F7C")]
		public static Quaternion GetQuaternion(ref Matrix4x4 m)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600201D")]
		[Address(RVA = "0x12D1ED8", Offset = "0x12D1ED8", VA = "0x12D1ED8")]
		public static Vector3 GetPosition(ref Matrix4x4 m)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600201E")]
		[Address(RVA = "0x12D25E4", Offset = "0x12D25E4", VA = "0x12D25E4")]
		public static void SetMatrixPosition(ref Matrix4x4 m, ref Vector3 position)
		{
		}

		[Token(Token = "0x600201F")]
		[Address(RVA = "0x12D22BC", Offset = "0x12D22BC", VA = "0x12D22BC")]
		public static Vector3 GetScale(ref Matrix4x4 m)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002020")]
		[Address(RVA = "0x12D2688", Offset = "0x12D2688", VA = "0x12D2688")]
		public static HAPI_TransformEuler GetHAPITransformFromMatrix(ref Matrix4x4 mat)
		{
			return default(HAPI_TransformEuler);
		}

		[Token(Token = "0x6002021")]
		[Address(RVA = "0x12D28A8", Offset = "0x12D28A8", VA = "0x12D28A8")]
		public static HAPI_TransformEuler GetHAPITransform(ref Vector3 p, ref Vector3 r, ref Vector3 s)
		{
			return default(HAPI_TransformEuler);
		}

		[Token(Token = "0x6002022")]
		[Address(RVA = "0x12D2A98", Offset = "0x12D2A98", VA = "0x12D2A98")]
		public static HAPI_Transform GetHAPITransformQuatFromMatrix(ref Matrix4x4 mat)
		{
			return default(HAPI_Transform);
		}

		[Token(Token = "0x6002023")]
		[Address(RVA = "0x12D2D4C", Offset = "0x12D2D4C", VA = "0x12D2D4C")]
		public static Matrix4x4 GetMatrix4x4(ref Vector3 p, ref Vector3 r, ref Vector3 s)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6002024")]
		[Address(RVA = "0x12D2E70", Offset = "0x12D2E70", VA = "0x12D2E70")]
		public static bool IsSameTransform(ref Matrix4x4 transformMatrix, ref Vector3 p, ref Vector3 r, ref Vector3 s)
		{
			return default(bool);
		}

		[Token(Token = "0x6002025")]
		[Address(RVA = "0x12D2F4C", Offset = "0x12D2F4C", VA = "0x12D2F4C")]
		public static bool IsEqualTol(float a, float b, float t = 1E-05f)
		{
			return default(bool);
		}

		[Token(Token = "0x6002026")]
		[Address(RVA = "0x12D2FD0", Offset = "0x12D2FD0", VA = "0x12D2FD0")]
		public static bool IsTransformEqual(ref HAPI_Transform transA, ref HAPI_Transform transB)
		{
			return default(bool);
		}

		[Token(Token = "0x6002027")]
		[Address(RVA = "0x12D3204", Offset = "0x12D3204", VA = "0x12D3204")]
		public static bool IsViewportEqual(ref HAPI_Viewport viewA, ref HAPI_Viewport viewB)
		{
			return default(bool);
		}

		[Token(Token = "0x6002028")]
		[Address(RVA = "0x12D3348", Offset = "0x12D3348", VA = "0x12D3348")]
		public static bool IsSessionSyncEqual(ref HAPI_SessionSyncInfo syncA, ref HAPI_SessionSyncInfo syncB)
		{
			return default(bool);
		}

		[Token(Token = "0x6002029")]
		[Address(RVA = "0x12D3390", Offset = "0x12D3390", VA = "0x12D3390")]
		public static bool DoesGeoPartHaveAttribute(HEU_SessionBase session, int geoID, int partID, string attrName, HAPI_AttributeOwner owner, ref HAPI_AttributeInfo attributeInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x600202A")]
		[Address(RVA = "0x12D33DC", Offset = "0x12D33DC", VA = "0x12D33DC")]
		public static void SetAnimationCurveTangentModes(AnimationCurve animCurve, List<int> tangentValues)
		{
		}

		[Token(Token = "0x600202B")]
		[Address(RVA = "0x12CC7F4", Offset = "0x12CC7F4", VA = "0x12CC7F4")]
		public static bool IsSupportedPolygonType(HAPI_PartType partType)
		{
			return default(bool);
		}

		[Token(Token = "0x600202C")]
		[Address(RVA = "0x12D33E0", Offset = "0x12D33E0", VA = "0x12D33E0")]
		public static int GetParentNodeID(HEU_SessionBase session, int nodeID)
		{
			return default(int);
		}

		[Token(Token = "0x600202D")]
		[Address(RVA = "0x12D3468", Offset = "0x12D3468", VA = "0x12D3468")]
		public static bool GetObjectInfos(HEU_SessionBase session, int assetID, ref HAPI_NodeInfo nodeInfo, out HAPI_ObjectInfo[] objectInfos, out HAPI_Transform[] objectTransforms)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000402")]
	public class HEU_HoudiniEngineError : Exception
	{
		[Token(Token = "0x40013EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected string _errorMsg;

		[Token(Token = "0x600202E")]
		[Address(RVA = "0x168F8A4", Offset = "0x168F8A4", VA = "0x168F8A4")]
		public HEU_HoudiniEngineError()
		{
		}

		[Token(Token = "0x600202F")]
		[Address(RVA = "0x168F91C", Offset = "0x168F91C", VA = "0x168F91C")]
		public HEU_HoudiniEngineError(string errorMsg)
		{
		}

		[Token(Token = "0x6002030")]
		[Address(RVA = "0x168F9A8", Offset = "0x168F9A8", VA = "0x168F9A8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000403")]
	public class HEU_Platform
	{
		[Token(Token = "0x40013EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string _lastErrorMsg;

		[Token(Token = "0x40013ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string _libPath;

		[Token(Token = "0x40013EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static bool _pathSet;

		[Token(Token = "0x17000391")]
		public static string LibPath
		{
			[Token(Token = "0x6002031")]
			[Address(RVA = "0x14A9BC4", Offset = "0x14A9BC4", VA = "0x14A9BC4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000392")]
		public static bool IsPathSet
		{
			[Token(Token = "0x6002032")]
			[Address(RVA = "0x14A9C2C", Offset = "0x14A9C2C", VA = "0x14A9C2C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000393")]
		public static char DirectorySeparator
		{
			[Token(Token = "0x600203E")]
			[Address(RVA = "0x14AA528", Offset = "0x14AA528", VA = "0x14AA528")]
			get
			{
				return default(char);
			}
		}

		[Token(Token = "0x17000394")]
		public static string DirectorySeparatorStr
		{
			[Token(Token = "0x600203F")]
			[Address(RVA = "0x14A84A0", Offset = "0x14A84A0", VA = "0x14A84A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002033")]
		[Address(RVA = "0x14A9C94", Offset = "0x14A9C94", VA = "0x14A9C94")]
		static HEU_Platform()
		{
		}

		[Token(Token = "0x6002034")]
		[Address(RVA = "0x14A9C9C", Offset = "0x14A9C9C", VA = "0x14A9C9C")]
		public static string GetHoudiniEnginePath()
		{
			return null;
		}

		[Token(Token = "0x6002035")]
		[Address(RVA = "0x14A9D00", Offset = "0x14A9D00", VA = "0x14A9D00")]
		public static string GetHoudiniEngineDefaultPath()
		{
			return null;
		}

		[Token(Token = "0x6002036")]
		[Address(RVA = "0x14A9D78", Offset = "0x14A9D78", VA = "0x14A9D78")]
		public static string GetSavedHoudiniPath()
		{
			return null;
		}

		[Token(Token = "0x6002037")]
		[Address(RVA = "0x14A9C98", Offset = "0x14A9C98", VA = "0x14A9C98")]
		public static void SetHoudiniEnginePath()
		{
		}

		[Token(Token = "0x6002038")]
		[Address(RVA = "0x14AA0A0", Offset = "0x14AA0A0", VA = "0x14AA0A0")]
		public static string GetAllFoldersInPath(string path)
		{
			return null;
		}

		[Token(Token = "0x6002039")]
		[Address(RVA = "0x14AA164", Offset = "0x14AA164", VA = "0x14AA164")]
		private static void GetAllFoldersInPathHelper(string inPath, StringBuilder pathBuilder)
		{
		}

		[Token(Token = "0x600203A")]
		[Address(RVA = "0x14AA2C0", Offset = "0x14AA2C0", VA = "0x14AA2C0")]
		public static string[] GetFilesInFolder(string folderPath, string searchPattern, bool bRecursive)
		{
			return null;
		}

		[Token(Token = "0x600203B")]
		[Address(RVA = "0x14AA458", Offset = "0x14AA458", VA = "0x14AA458")]
		public static string GetFileName(string path)
		{
			return null;
		}

		[Token(Token = "0x600203C")]
		[Address(RVA = "0x14AA4C0", Offset = "0x14AA4C0", VA = "0x14AA4C0")]
		public static string GetFileNameWithoutExtension(string path)
		{
			return null;
		}

		[Token(Token = "0x600203D")]
		[Address(RVA = "0x14A98CC", Offset = "0x14A98CC", VA = "0x14A98CC")]
		public static string GetFolderPath(string path, bool bRemoveDirectorySeparatorAtEnd = false)
		{
			return null;
		}

		[Token(Token = "0x6002040")]
		[Address(RVA = "0x14A84E8", Offset = "0x14A84E8", VA = "0x14A84E8")]
		public static string BuildPath(string folder1, string folder2, params object[] args)
		{
			return null;
		}

		[Token(Token = "0x6002041")]
		[Address(RVA = "0x14AA530", Offset = "0x14AA530", VA = "0x14AA530")]
		public static string TrimLastDirectorySeparator(string inPath)
		{
			return null;
		}

		[Token(Token = "0x6002042")]
		[Address(RVA = "0x14AA5E0", Offset = "0x14AA5E0", VA = "0x14AA5E0")]
		public static bool DoesPathExist(string inPath)
		{
			return default(bool);
		}

		[Token(Token = "0x6002043")]
		[Address(RVA = "0x14AA620", Offset = "0x14AA620", VA = "0x14AA620")]
		public static bool DoesFileExist(string inPath)
		{
			return default(bool);
		}

		[Token(Token = "0x6002044")]
		[Address(RVA = "0x14AA628", Offset = "0x14AA628", VA = "0x14AA628")]
		public static bool DoesDirectoryExist(string inPath)
		{
			return default(bool);
		}

		[Token(Token = "0x6002045")]
		[Address(RVA = "0x14AA630", Offset = "0x14AA630", VA = "0x14AA630")]
		public static bool CreateDirectory(string inPath)
		{
			return default(bool);
		}

		[Token(Token = "0x6002046")]
		[Address(RVA = "0x14AA65C", Offset = "0x14AA65C", VA = "0x14AA65C")]
		public static string GetFullPath(string inPath)
		{
			return null;
		}

		[Token(Token = "0x6002047")]
		[Address(RVA = "0x14AA6C4", Offset = "0x14AA6C4", VA = "0x14AA6C4")]
		public static bool IsPathRooted(string inPath)
		{
			return default(bool);
		}

		[Token(Token = "0x6002048")]
		[Address(RVA = "0x14AA72C", Offset = "0x14AA72C", VA = "0x14AA72C")]
		public static void WriteBytes(string path, byte[] bytes)
		{
		}

		[Token(Token = "0x6002049")]
		[Address(RVA = "0x14AA734", Offset = "0x14AA734", VA = "0x14AA734")]
		public static bool WriteAllText(string path, string text)
		{
			return default(bool);
		}

		[Token(Token = "0x600204A")]
		[Address(RVA = "0x14AA8DC", Offset = "0x14AA8DC", VA = "0x14AA8DC")]
		public static string ReadAllText(string path)
		{
			return null;
		}

		[Token(Token = "0x600204B")]
		[Address(RVA = "0x14AAA94", Offset = "0x14AAA94", VA = "0x14AAA94")]
		public static string GetEnvironmentValue(string key)
		{
			return null;
		}

		[Token(Token = "0x600204C")]
		[Address(RVA = "0x14AAB0C", Offset = "0x14AAB0C", VA = "0x14AAB0C")]
		public static string GetHoudiniEngineEnvironmentFilePathFull()
		{
			return null;
		}

		[Token(Token = "0x600204D")]
		[Address(RVA = "0x14AAC3C", Offset = "0x14AAC3C", VA = "0x14AAC3C")]
		public static bool LoadFileIntoMemory(string path, out byte[] buffer)
		{
			return default(bool);
		}

		[Token(Token = "0x600204E")]
		[Address(RVA = "0x14AAEA0", Offset = "0x14AAEA0", VA = "0x14AAEA0")]
		public HEU_Platform()
		{
		}
	}
	[Token(Token = "0x2000404")]
	public static class HEU_PlatformWin
	{
	}
	[Token(Token = "0x2000405")]
	public static class HEU_PluginSettings
	{
		[Token(Token = "0x17000395")]
		public static string HoudiniEngineEnvFilePath
		{
			[Token(Token = "0x600204F")]
			[Address(RVA = "0x14AABC8", Offset = "0x14AABC8", VA = "0x14AABC8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002050")]
			[Address(RVA = "0x14AAFCC", Offset = "0x14AAFCC", VA = "0x14AAFCC")]
			set
			{
			}
		}

		[Token(Token = "0x17000396")]
		public static bool CookingEnabled
		{
			[Token(Token = "0x6002051")]
			[Address(RVA = "0x14AB3F0", Offset = "0x14AB3F0", VA = "0x14AB3F0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002052")]
			[Address(RVA = "0x14AB550", Offset = "0x14AB550", VA = "0x14AB550")]
			set
			{
			}
		}

		[Token(Token = "0x17000397")]
		public static bool CookingTriggersDownstreamCooks
		{
			[Token(Token = "0x6002053")]
			[Address(RVA = "0x14AB670", Offset = "0x14AB670", VA = "0x14AB670")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002054")]
			[Address(RVA = "0x14AB6D8", Offset = "0x14AB6D8", VA = "0x14AB6D8")]
			set
			{
			}
		}

		[Token(Token = "0x17000398")]
		public static bool CookTemplatedGeos
		{
			[Token(Token = "0x6002055")]
			[Address(RVA = "0x14AB734", Offset = "0x14AB734", VA = "0x14AB734")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002056")]
			[Address(RVA = "0x14AB7A0", Offset = "0x14AB7A0", VA = "0x14AB7A0")]
			set
			{
			}
		}

		[Token(Token = "0x17000399")]
		public static bool PushUnityTransformToHoudini
		{
			[Token(Token = "0x6002057")]
			[Address(RVA = "0x14AB7FC", Offset = "0x14AB7FC", VA = "0x14AB7FC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002058")]
			[Address(RVA = "0x14AB868", Offset = "0x14AB868", VA = "0x14AB868")]
			set
			{
			}
		}

		[Token(Token = "0x1700039A")]
		public static bool TransformChangeTriggersCooks
		{
			[Token(Token = "0x6002059")]
			[Address(RVA = "0x14AB8C4", Offset = "0x14AB8C4", VA = "0x14AB8C4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600205A")]
			[Address(RVA = "0x14AB930", Offset = "0x14AB930", VA = "0x14AB930")]
			set
			{
			}
		}

		[Token(Token = "0x1700039B")]
		public static string CollisionGroupName
		{
			[Token(Token = "0x600205B")]
			[Address(RVA = "0x14A5BFC", Offset = "0x14A5BFC", VA = "0x14A5BFC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600205C")]
			[Address(RVA = "0x14AB98C", Offset = "0x14AB98C", VA = "0x14AB98C")]
			set
			{
			}
		}

		[Token(Token = "0x1700039C")]
		public static string RenderedCollisionGroupName
		{
			[Token(Token = "0x600205D")]
			[Address(RVA = "0x14AB9E8", Offset = "0x14AB9E8", VA = "0x14AB9E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600205E")]
			[Address(RVA = "0x14ABA5C", Offset = "0x14ABA5C", VA = "0x14ABA5C")]
			set
			{
			}
		}

		[Token(Token = "0x1700039D")]
		public static string UnityMaterialAttribName
		{
			[Token(Token = "0x600205F")]
			[Address(RVA = "0x14ABAB8", Offset = "0x14ABAB8", VA = "0x14ABAB8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002060")]
			[Address(RVA = "0x14ABB2C", Offset = "0x14ABB2C", VA = "0x14ABB2C")]
			set
			{
			}
		}

		[Token(Token = "0x1700039E")]
		public static string UnitySubMaterialAttribName
		{
			[Token(Token = "0x6002061")]
			[Address(RVA = "0x14ABB88", Offset = "0x14ABB88", VA = "0x14ABB88")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002062")]
			[Address(RVA = "0x14ABBFC", Offset = "0x14ABBFC", VA = "0x14ABBFC")]
			set
			{
			}
		}

		[Token(Token = "0x1700039F")]
		public static string UnitySubMaterialIndexAttribName
		{
			[Token(Token = "0x6002063")]
			[Address(RVA = "0x14ABC58", Offset = "0x14ABC58", VA = "0x14ABC58")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002064")]
			[Address(RVA = "0x14ABCCC", Offset = "0x14ABCCC", VA = "0x14ABCCC")]
			set
			{
			}
		}

		[Token(Token = "0x170003A0")]
		public static string UnityTagAttributeName
		{
			[Token(Token = "0x6002065")]
			[Address(RVA = "0x14ABD28", Offset = "0x14ABD28", VA = "0x14ABD28")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002066")]
			[Address(RVA = "0x14ABD9C", Offset = "0x14ABD9C", VA = "0x14ABD9C")]
			set
			{
			}
		}

		[Token(Token = "0x170003A1")]
		public static string UnityStaticAttributeName
		{
			[Token(Token = "0x6002067")]
			[Address(RVA = "0x14ABDF8", Offset = "0x14ABDF8", VA = "0x14ABDF8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002068")]
			[Address(RVA = "0x14ABE6C", Offset = "0x14ABE6C", VA = "0x14ABE6C")]
			set
			{
			}
		}

		[Token(Token = "0x170003A2")]
		public static string UnityScriptAttributeName
		{
			[Token(Token = "0x6002069")]
			[Address(RVA = "0x14ABEC8", Offset = "0x14ABEC8", VA = "0x14ABEC8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600206A")]
			[Address(RVA = "0x14ABF3C", Offset = "0x14ABF3C", VA = "0x14ABF3C")]
			set
			{
			}
		}

		[Token(Token = "0x170003A3")]
		public static string UnityLayerAttributeName
		{
			[Token(Token = "0x600206B")]
			[Address(RVA = "0x14ABF98", Offset = "0x14ABF98", VA = "0x14ABF98")]
			get
			{
				return null;
			}
			[Token(Token = "0x600206C")]
			[Address(RVA = "0x14AC00C", Offset = "0x14AC00C", VA = "0x14AC00C")]
			set
			{
			}
		}

		[Token(Token = "0x170003A4")]
		public static float ImageGamma
		{
			[Token(Token = "0x600206D")]
			[Address(RVA = "0x14AC068", Offset = "0x14AC068", VA = "0x14AC068")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600206E")]
			[Address(RVA = "0x14AC204", Offset = "0x14AC204", VA = "0x14AC204")]
			set
			{
			}
		}

		[Token(Token = "0x170003A5")]
		public static float NormalGenerationThresholdAngle
		{
			[Token(Token = "0x600206F")]
			[Address(RVA = "0x14AC338", Offset = "0x14AC338", VA = "0x14AC338")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002070")]
			[Address(RVA = "0x14AC3A8", Offset = "0x14AC3A8", VA = "0x14AC3A8")]
			set
			{
			}
		}

		[Token(Token = "0x170003A6")]
		public static string LastLoadHDAPath
		{
			[Token(Token = "0x6002071")]
			[Address(RVA = "0x14AC40C", Offset = "0x14AC40C", VA = "0x14AC40C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002072")]
			[Address(RVA = "0x14AC480", Offset = "0x14AC480", VA = "0x14AC480")]
			set
			{
			}
		}

		[Token(Token = "0x170003A7")]
		public static string LastLoadHIPPath
		{
			[Token(Token = "0x6002073")]
			[Address(RVA = "0x14AC4DC", Offset = "0x14AC4DC", VA = "0x14AC4DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002074")]
			[Address(RVA = "0x14AC550", Offset = "0x14AC550", VA = "0x14AC550")]
			set
			{
			}
		}

		[Token(Token = "0x170003A8")]
		public static string InstanceAttr
		{
			[Token(Token = "0x6002075")]
			[Address(RVA = "0x14AC5AC", Offset = "0x14AC5AC", VA = "0x14AC5AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002076")]
			[Address(RVA = "0x14AC620", Offset = "0x14AC620", VA = "0x14AC620")]
			set
			{
			}
		}

		[Token(Token = "0x170003A9")]
		public static string UnityInstanceAttr
		{
			[Token(Token = "0x6002077")]
			[Address(RVA = "0x14AC67C", Offset = "0x14AC67C", VA = "0x14AC67C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002078")]
			[Address(RVA = "0x14AC6F0", Offset = "0x14AC6F0", VA = "0x14AC6F0")]
			set
			{
			}
		}

		[Token(Token = "0x170003AA")]
		public static string UnityInputMeshAttr
		{
			[Token(Token = "0x6002079")]
			[Address(RVA = "0x14AC74C", Offset = "0x14AC74C", VA = "0x14AC74C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600207A")]
			[Address(RVA = "0x14AC7C0", Offset = "0x14AC7C0", VA = "0x14AC7C0")]
			set
			{
			}
		}

		[Token(Token = "0x170003AB")]
		public static Color LineColor
		{
			[Token(Token = "0x600207B")]
			[Address(RVA = "0x14AC81C", Offset = "0x14AC81C", VA = "0x14AC81C")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x600207C")]
			[Address(RVA = "0x14AC8C8", Offset = "0x14AC8C8", VA = "0x14AC8C8")]
			set
			{
			}
		}

		[Token(Token = "0x170003AC")]
		public static string EditorOnly_Tag
		{
			[Token(Token = "0x600207D")]
			[Address(RVA = "0x14AC95C", Offset = "0x14AC95C", VA = "0x14AC95C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600207E")]
			[Address(RVA = "0x14AC9D0", Offset = "0x14AC9D0", VA = "0x14AC9D0")]
			set
			{
			}
		}

		[Token(Token = "0x170003AD")]
		public static string HDAData_Name
		{
			[Token(Token = "0x600207F")]
			[Address(RVA = "0x14ACA90", Offset = "0x14ACA90", VA = "0x14ACA90")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002080")]
			[Address(RVA = "0x14ACB04", Offset = "0x14ACB04", VA = "0x14ACB04")]
			set
			{
			}
		}

		[Token(Token = "0x170003AE")]
		public static SessionMode Session_Mode
		{
			[Token(Token = "0x6002081")]
			[Address(RVA = "0x14ACB60", Offset = "0x14ACB60", VA = "0x14ACB60")]
			get
			{
				return default(SessionMode);
			}
			[Token(Token = "0x6002082")]
			[Address(RVA = "0x14ACCC4", Offset = "0x14ACCC4", VA = "0x14ACCC4")]
			set
			{
			}
		}

		[Token(Token = "0x170003AF")]
		public static string Session_PipeName
		{
			[Token(Token = "0x6002083")]
			[Address(RVA = "0x14ACDE8", Offset = "0x14ACDE8", VA = "0x14ACDE8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002084")]
			[Address(RVA = "0x14ACE5C", Offset = "0x14ACE5C", VA = "0x14ACE5C")]
			set
			{
			}
		}

		[Token(Token = "0x170003B0")]
		public static string Session_Localhost
		{
			[Token(Token = "0x6002085")]
			[Address(RVA = "0x14ACEB8", Offset = "0x14ACEB8", VA = "0x14ACEB8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002086")]
			[Address(RVA = "0x14ACF2C", Offset = "0x14ACF2C", VA = "0x14ACF2C")]
			set
			{
			}
		}

		[Token(Token = "0x170003B1")]
		public static int Session_Port
		{
			[Token(Token = "0x6002087")]
			[Address(RVA = "0x14ACF88", Offset = "0x14ACF88", VA = "0x14ACF88")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002088")]
			[Address(RVA = "0x14ACFF4", Offset = "0x14ACFF4", VA = "0x14ACFF4")]
			set
			{
			}
		}

		[Token(Token = "0x170003B2")]
		public static float Session_Timeout
		{
			[Token(Token = "0x6002089")]
			[Address(RVA = "0x14AD050", Offset = "0x14AD050", VA = "0x14AD050")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600208A")]
			[Address(RVA = "0x14AD0C4", Offset = "0x14AD0C4", VA = "0x14AD0C4")]
			set
			{
			}
		}

		[Token(Token = "0x170003B3")]
		public static bool Session_AutoClose
		{
			[Token(Token = "0x600208B")]
			[Address(RVA = "0x14AD128", Offset = "0x14AD128", VA = "0x14AD128")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600208C")]
			[Address(RVA = "0x14AD194", Offset = "0x14AD194", VA = "0x14AD194")]
			set
			{
			}
		}

		[Token(Token = "0x170003B4")]
		public static bool Curves_ShowInSceneView
		{
			[Token(Token = "0x600208D")]
			[Address(RVA = "0x14A65D4", Offset = "0x14A65D4", VA = "0x14A65D4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600208E")]
			[Address(RVA = "0x14AD1F0", Offset = "0x14AD1F0", VA = "0x14AD1F0")]
			set
			{
			}
		}

		[Token(Token = "0x170003B5")]
		public static string AssetCachePath
		{
			[Token(Token = "0x600208F")]
			[Address(RVA = "0x14AD24C", Offset = "0x14AD24C", VA = "0x14AD24C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002090")]
			[Address(RVA = "0x14AD2C0", Offset = "0x14AD2C0", VA = "0x14AD2C0")]
			set
			{
			}
		}

		[Token(Token = "0x170003B6")]
		public static bool UseFullPathNamesForOutput
		{
			[Token(Token = "0x6002091")]
			[Address(RVA = "0x14AD31C", Offset = "0x14AD31C", VA = "0x14AD31C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002092")]
			[Address(RVA = "0x14AD388", Offset = "0x14AD388", VA = "0x14AD388")]
			set
			{
			}
		}

		[Token(Token = "0x170003B7")]
		public static List<string> HEngineToolsShelves
		{
			[Token(Token = "0x6002093")]
			[Address(RVA = "0x14AD3E4", Offset = "0x14AD3E4", VA = "0x14AD3E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002094")]
			[Address(RVA = "0x14AD5DC", Offset = "0x14AD5DC", VA = "0x14AD5DC")]
			set
			{
			}
		}

		[Token(Token = "0x170003B8")]
		public static int HEngineShelfSelectedIndex
		{
			[Token(Token = "0x6002095")]
			[Address(RVA = "0x14AD77C", Offset = "0x14AD77C", VA = "0x14AD77C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002096")]
			[Address(RVA = "0x14AD7E4", Offset = "0x14AD7E4", VA = "0x14AD7E4")]
			set
			{
			}
		}

		[Token(Token = "0x170003B9")]
		public static string DefaultTerrainMaterial
		{
			[Token(Token = "0x6002097")]
			[Address(RVA = "0x14AD840", Offset = "0x14AD840", VA = "0x14AD840")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002098")]
			[Address(RVA = "0x14AD8B4", Offset = "0x14AD8B4", VA = "0x14AD8B4")]
			set
			{
			}
		}

		[Token(Token = "0x170003BA")]
		public static string TerrainSplatTextureDefault
		{
			[Token(Token = "0x6002099")]
			[Address(RVA = "0x14AD910", Offset = "0x14AD910", VA = "0x14AD910")]
			get
			{
				return null;
			}
			[Token(Token = "0x600209A")]
			[Address(RVA = "0x14AD984", Offset = "0x14AD984", VA = "0x14AD984")]
			set
			{
			}
		}

		[Token(Token = "0x170003BB")]
		public static string DefaultStandardShader
		{
			[Token(Token = "0x600209B")]
			[Address(RVA = "0x14AD9E0", Offset = "0x14AD9E0", VA = "0x14AD9E0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600209C")]
			[Address(RVA = "0x14ADA98", Offset = "0x14ADA98", VA = "0x14ADA98")]
			set
			{
			}
		}

		[Token(Token = "0x170003BC")]
		public static string DefaultVertexColorShader
		{
			[Token(Token = "0x600209D")]
			[Address(RVA = "0x14ADAF4", Offset = "0x14ADAF4", VA = "0x14ADAF4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600209E")]
			[Address(RVA = "0x14ADBAC", Offset = "0x14ADBAC", VA = "0x14ADBAC")]
			set
			{
			}
		}

		[Token(Token = "0x170003BD")]
		public static string DefaultTransparentShader
		{
			[Token(Token = "0x600209F")]
			[Address(RVA = "0x14ADC08", Offset = "0x14ADC08", VA = "0x14ADC08")]
			get
			{
				return null;
			}
			[Token(Token = "0x60020A0")]
			[Address(RVA = "0x14ADCC0", Offset = "0x14ADCC0", VA = "0x14ADCC0")]
			set
			{
			}
		}

		[Token(Token = "0x170003BE")]
		public static string DefaultCurveShader
		{
			[Token(Token = "0x60020A1")]
			[Address(RVA = "0x14ADD1C", Offset = "0x14ADD1C", VA = "0x14ADD1C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60020A2")]
			[Address(RVA = "0x14ADDD4", Offset = "0x14ADDD4", VA = "0x14ADDD4")]
			set
			{
			}
		}

		[Token(Token = "0x170003BF")]
		public static bool SupportHoudiniBoxType
		{
			[Token(Token = "0x60020A3")]
			[Address(RVA = "0x14ADE30", Offset = "0x14ADE30", VA = "0x14ADE30")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60020A4")]
			[Address(RVA = "0x14ADE98", Offset = "0x14ADE98", VA = "0x14ADE98")]
			set
			{
			}
		}

		[Token(Token = "0x170003C0")]
		public static bool SupportHoudiniSphereType
		{
			[Token(Token = "0x60020A5")]
			[Address(RVA = "0x14ADEF4", Offset = "0x14ADEF4", VA = "0x14ADEF4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60020A6")]
			[Address(RVA = "0x14ADF5C", Offset = "0x14ADF5C", VA = "0x14ADF5C")]
			set
			{
			}
		}

		[Token(Token = "0x170003C1")]
		public static bool SetCurrentThreadToInvariantCulture
		{
			[Token(Token = "0x60020A7")]
			[Address(RVA = "0x14ADFB8", Offset = "0x14ADFB8", VA = "0x14ADFB8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60020A8")]
			[Address(RVA = "0x14AE024", Offset = "0x14AE024", VA = "0x14AE024")]
			set
			{
			}
		}

		[Token(Token = "0x170003C2")]
		public static string HoudiniDebugLaunchPath
		{
			[Token(Token = "0x60020A9")]
			[Address(RVA = "0x14AE084", Offset = "0x14AE084", VA = "0x14AE084")]
			get
			{
				return null;
			}
			[Token(Token = "0x60020AA")]
			[Address(RVA = "0x14AE160", Offset = "0x14AE160", VA = "0x14AE160")]
			set
			{
			}
		}

		[Token(Token = "0x170003C3")]
		public static string LastExportPath
		{
			[Token(Token = "0x60020AB")]
			[Address(RVA = "0x14AE1BC", Offset = "0x14AE1BC", VA = "0x14AE1BC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60020AC")]
			[Address(RVA = "0x14AE230", Offset = "0x14AE230", VA = "0x14AE230")]
			set
			{
			}
		}

		[Token(Token = "0x170003C4")]
		public static int InputSelectionFilterLocation
		{
			[Token(Token = "0x60020AD")]
			[Address(RVA = "0x14AE28C", Offset = "0x14AE28C", VA = "0x14AE28C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60020AE")]
			[Address(RVA = "0x14AE2F8", Offset = "0x14AE2F8", VA = "0x14AE2F8")]
			set
			{
			}
		}

		[Token(Token = "0x170003C5")]
		public static int InputSelectionFilterState
		{
			[Token(Token = "0x60020AF")]
			[Address(RVA = "0x14AE354", Offset = "0x14AE354", VA = "0x14AE354")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60020B0")]
			[Address(RVA = "0x14AE3C0", Offset = "0x14AE3C0", VA = "0x14AE3C0")]
			set
			{
			}
		}

		[Token(Token = "0x170003C6")]
		public static bool InputSelectionFilterRoots
		{
			[Token(Token = "0x60020B1")]
			[Address(RVA = "0x14AE41C", Offset = "0x14AE41C", VA = "0x14AE41C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60020B2")]
			[Address(RVA = "0x14AE484", Offset = "0x14AE484", VA = "0x14AE484")]
			set
			{
			}
		}

		[Token(Token = "0x170003C7")]
		public static string InputSelectionFilterName
		{
			[Token(Token = "0x60020B3")]
			[Address(RVA = "0x14AE4E0", Offset = "0x14AE4E0", VA = "0x14AE4E0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60020B4")]
			[Address(RVA = "0x14AE554", Offset = "0x14AE554", VA = "0x14AE554")]
			set
			{
			}
		}

		[Token(Token = "0x170003C8")]
		public static bool CookOptionSplitGeosByGroup
		{
			[Token(Token = "0x60020B5")]
			[Address(RVA = "0x14AE5B0", Offset = "0x14AE5B0", VA = "0x14AE5B0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60020B6")]
			[Address(RVA = "0x14AE618", Offset = "0x14AE618", VA = "0x14AE618")]
			set
			{
			}
		}

		[Token(Token = "0x170003C9")]
		public static int MaxVerticesPerPrimitive
		{
			[Token(Token = "0x60020B7")]
			[Address(RVA = "0x14AE674", Offset = "0x14AE674", VA = "0x14AE674")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60020B8")]
			[Address(RVA = "0x14AE6E0", Offset = "0x14AE6E0", VA = "0x14AE6E0")]
			set
			{
			}
		}

		[Token(Token = "0x170003CA")]
		public static string HoudiniInstallPath
		{
			[Token(Token = "0x60020B9")]
			[Address(RVA = "0x14A9F00", Offset = "0x14A9F00", VA = "0x14A9F00")]
			get
			{
				return null;
			}
			[Token(Token = "0x60020BA")]
			[Address(RVA = "0x14A9FE8", Offset = "0x14A9FE8", VA = "0x14A9FE8")]
			set
			{
			}
		}

		[Token(Token = "0x170003CB")]
		public static string LastHoudiniVersion
		{
			[Token(Token = "0x60020BB")]
			[Address(RVA = "0x14A9F74", Offset = "0x14A9F74", VA = "0x14A9F74")]
			get
			{
				return null;
			}
			[Token(Token = "0x60020BC")]
			[Address(RVA = "0x14AA044", Offset = "0x14AA044", VA = "0x14AA044")]
			set
			{
			}
		}

		[Token(Token = "0x170003CC")]
		public static bool SessionSyncAutoCook
		{
			[Token(Token = "0x60020BD")]
			[Address(RVA = "0x14AE73C", Offset = "0x14AE73C", VA = "0x14AE73C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60020BE")]
			[Address(RVA = "0x14AE7A8", Offset = "0x14AE7A8", VA = "0x14AE7A8")]
			set
			{
			}
		}
	}
	[Token(Token = "0x2000406")]
	public class HEU_PluginStorage
	{
		[Token(Token = "0x2000690")]
		private enum DataType
		{
			[Token(Token = "0x4002058")]
			BOOL,
			[Token(Token = "0x4002059")]
			INT,
			[Token(Token = "0x400205A")]
			LONG,
			[Token(Token = "0x400205B")]
			FLOAT,
			[Token(Token = "0x400205C")]
			STRING
		}

		[Serializable]
		[Token(Token = "0x2000691")]
		private class StoreData
		{
			[Token(Token = "0x400205D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DataType _type;

			[Token(Token = "0x400205E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string _valueStr;

			[Token(Token = "0x6002C13")]
			[Address(RVA = "0x14AF6F0", Offset = "0x14AF6F0", VA = "0x14AF6F0")]
			public StoreData()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000692")]
		private class StoreDataArray<T>
		{
			[Token(Token = "0x400205F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T[] _array;

			[Token(Token = "0x6002C14")]
			public StoreDataArray()
			{
			}
		}

		[Token(Token = "0x40013EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<string, StoreData> _dataMap;

		[Token(Token = "0x40013F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<string, string> _envPathMap;

		[Token(Token = "0x40013F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _requiresSave;

		[Token(Token = "0x40013F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static HEU_PluginStorage _instance;

		[Token(Token = "0x40013F3")]
		public const string PluginSettingsLine1 = "Houdini Engine for Unity Plugin Settings";

		[Token(Token = "0x40013F4")]
		public const string PluginSettingsLine2 = "Version=";

		[Token(Token = "0x40013F5")]
		public const string PluginSettingsVersion = "1.0";

		[Token(Token = "0x170003CD")]
		public bool RequiresSave
		{
			[Token(Token = "0x60020C0")]
			[Address(RVA = "0x14AE80C", Offset = "0x14AE80C", VA = "0x14AE80C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003CE")]
		public static HEU_PluginStorage Instance
		{
			[Token(Token = "0x60020C1")]
			[Address(RVA = "0x14AAEA8", Offset = "0x14AAEA8", VA = "0x14AAEA8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020BF")]
		[Address(RVA = "0x14AE804", Offset = "0x14AE804", VA = "0x14AE804")]
		public Dictionary<string, string> GetEnvironmentPathMap()
		{
			return null;
		}

		[Token(Token = "0x60020C2")]
		[Address(RVA = "0x14AE814", Offset = "0x14AE814", VA = "0x14AE814")]
		public static void InstantiateAndLoad()
		{
		}

		[Token(Token = "0x60020C3")]
		[Address(RVA = "0x14AE080", Offset = "0x14AE080", VA = "0x14AE080")]
		public static void SetCurrentCulture(bool useInvariant)
		{
		}

		[Token(Token = "0x60020C4")]
		private T[] GetJSONArray<T>(string jsonArray)
		{
			return null;
		}

		[Token(Token = "0x60020C5")]
		[Address(RVA = "0x14AB5AC", Offset = "0x14AB5AC", VA = "0x14AB5AC")]
		public void Set(string key, bool value)
		{
		}

		[Token(Token = "0x60020C6")]
		[Address(RVA = "0x14ACD20", Offset = "0x14ACD20", VA = "0x14ACD20")]
		public void Set(string key, int value)
		{
		}

		[Token(Token = "0x60020C7")]
		[Address(RVA = "0x14AF6FC", Offset = "0x14AF6FC", VA = "0x14AF6FC")]
		public void Set(string key, long value)
		{
		}

		[Token(Token = "0x60020C8")]
		[Address(RVA = "0x14AC268", Offset = "0x14AC268", VA = "0x14AC268")]
		public void Set(string key, float value)
		{
		}

		[Token(Token = "0x60020C9")]
		[Address(RVA = "0x14AB034", Offset = "0x14AB034", VA = "0x14AB034")]
		public void Set(string key, string value)
		{
		}

		[Token(Token = "0x60020CA")]
		[Address(RVA = "0x14AD63C", Offset = "0x14AD63C", VA = "0x14AD63C")]
		public void Set(string key, List<string> values, char delimiter = ';')
		{
		}

		[Token(Token = "0x60020CB")]
		[Address(RVA = "0x14AB45C", Offset = "0x14AB45C", VA = "0x14AB45C")]
		public bool Get(string key, out bool value, bool defaultValue)
		{
			return default(bool);
		}

		[Token(Token = "0x60020CC")]
		[Address(RVA = "0x14ACBD0", Offset = "0x14ACBD0", VA = "0x14ACBD0")]
		public bool Get(string key, out int value, int defaultValue)
		{
			return default(bool);
		}

		[Token(Token = "0x60020CD")]
		[Address(RVA = "0x14AF7C4", Offset = "0x14AF7C4", VA = "0x14AF7C4")]
		public bool Get(string key, out long value, long defaultValue)
		{
			return default(bool);
		}

		[Token(Token = "0x60020CE")]
		[Address(RVA = "0x14AC0DC", Offset = "0x14AC0DC", VA = "0x14AC0DC")]
		public bool Get(string key, out float value, float defaultValue)
		{
			return default(bool);
		}

		[Token(Token = "0x60020CF")]
		[Address(RVA = "0x14AAF0C", Offset = "0x14AAF0C", VA = "0x14AAF0C")]
		public bool Get(string key, out string value, string defaultValue)
		{
			return default(bool);
		}

		[Token(Token = "0x60020D0")]
		[Address(RVA = "0x14AD44C", Offset = "0x14AD44C", VA = "0x14AD44C")]
		public bool Get(string key, out List<string> values, char delimiter = ';')
		{
			return default(bool);
		}

		[Token(Token = "0x60020D1")]
		[Address(RVA = "0x14AF6F8", Offset = "0x14AF6F8", VA = "0x14AF6F8")]
		private void MarkDirtyForSave()
		{
		}

		[Token(Token = "0x60020D2")]
		[Address(RVA = "0x14AF8B8", Offset = "0x14AF8B8", VA = "0x14AF8B8")]
		public static void SaveIfRequired()
		{
		}

		[Token(Token = "0x60020D3")]
		[Address(RVA = "0x14AFD40", Offset = "0x14AFD40", VA = "0x14AFD40")]
		public static string SettingsFilePath()
		{
			return null;
		}

		[Token(Token = "0x60020D4")]
		[Address(RVA = "0x14AF920", Offset = "0x14AF920", VA = "0x14AF920")]
		public bool SavePluginData()
		{
			return default(bool);
		}

		[Token(Token = "0x60020D5")]
		[Address(RVA = "0x14AE94C", Offset = "0x14AE94C", VA = "0x14AE94C")]
		public bool LoadPluginData()
		{
			return default(bool);
		}

		[Token(Token = "0x60020D6")]
		[Address(RVA = "0x14AFE0C", Offset = "0x14AFE0C", VA = "0x14AFE0C")]
		private bool ReadFromEditorPrefs()
		{
			return default(bool);
		}

		[Token(Token = "0x60020D7")]
		[Address(RVA = "0x14AFE14", Offset = "0x14AFE14", VA = "0x14AFE14")]
		public static void ClearPluginData()
		{
		}

		[Token(Token = "0x60020D8")]
		[Address(RVA = "0x14AFEBC", Offset = "0x14AFEBC", VA = "0x14AFEBC")]
		public static void LoadFromSavedFile()
		{
		}

		[Token(Token = "0x60020D9")]
		[Address(RVA = "0x14AFF1C", Offset = "0x14AFF1C", VA = "0x14AFF1C")]
		public static string SessionFilePath()
		{
			return null;
		}

		[Token(Token = "0x60020DA")]
		[Address(RVA = "0x14AFFE8", Offset = "0x14AFFE8", VA = "0x14AFFE8")]
		public static void SaveAllSessionData(List<HEU_SessionBase> allSessions)
		{
		}

		[Token(Token = "0x60020DB")]
		[Address(RVA = "0x14AFFEC", Offset = "0x14AFFEC", VA = "0x14AFFEC")]
		public static List<HEU_SessionData> LoadAllSessionData()
		{
			return null;
		}

		[Token(Token = "0x60020DC")]
		[Address(RVA = "0x14B0050", Offset = "0x14B0050", VA = "0x14B0050")]
		public static void DeleteAllSavedSessionData()
		{
		}

		[Token(Token = "0x60020DD")]
		[Address(RVA = "0x14AB0D0", Offset = "0x14AB0D0", VA = "0x14AB0D0")]
		public void LoadAssetEnvironmentPaths()
		{
		}

		[Token(Token = "0x60020DE")]
		[Address(RVA = "0x14B0054", Offset = "0x14B0054", VA = "0x14B0054")]
		public string ConvertRealPathToEnvKeyedPath(string inPath)
		{
			return null;
		}

		[Token(Token = "0x60020DF")]
		[Address(RVA = "0x14B01D8", Offset = "0x14B01D8", VA = "0x14B01D8")]
		public string ConvertEnvKeyedPathToReal(string inPath)
		{
			return null;
		}

		[Token(Token = "0x60020E0")]
		[Address(RVA = "0x14AE8DC", Offset = "0x14AE8DC", VA = "0x14AE8DC")]
		public HEU_PluginStorage()
		{
		}
	}
	[Token(Token = "0x2000407")]
	public enum HAPI_License
	{
		[Token(Token = "0x40013F7")]
		HAPI_LICENSE_NONE,
		[Token(Token = "0x40013F8")]
		HAPI_LICENSE_HOUDINI_ENGINE,
		[Token(Token = "0x40013F9")]
		HAPI_LICENSE_HOUDINI,
		[Token(Token = "0x40013FA")]
		HAPI_LICENSE_HOUDINI_FX,
		[Token(Token = "0x40013FB")]
		HAPI_LICENSE_HOUDINI_ENGINE_INDIE,
		[Token(Token = "0x40013FC")]
		HAPI_LICENSE_HOUDINI_INDIE,
		[Token(Token = "0x40013FD")]
		HAPI_LICENSE_MAX
	}
	[Token(Token = "0x2000408")]
	public enum HAPI_StatusType
	{
		[Token(Token = "0x40013FF")]
		HAPI_STATUS_CALL_RESULT,
		[Token(Token = "0x4001400")]
		HAPI_STATUS_COOK_RESULT,
		[Token(Token = "0x4001401")]
		HAPI_STATUS_COOK_STATE,
		[Token(Token = "0x4001402")]
		HAPI_STATUS_MAX
	}
	[Token(Token = "0x2000409")]
	public enum HAPI_StatusVerbosity
	{
		[Token(Token = "0x4001404")]
		HAPI_STATUSVERBOSITY_0 = 0,
		[Token(Token = "0x4001405")]
		HAPI_STATUSVERBOSITY_1 = 1,
		[Token(Token = "0x4001406")]
		HAPI_STATUSVERBOSITY_2 = 2,
		[Token(Token = "0x4001407")]
		HAPI_STATUSVERBOSITY_ALL = 2,
		[Token(Token = "0x4001408")]
		HAPI_STATUSVERBOSITY_ERRORS = 0,
		[Token(Token = "0x4001409")]
		HAPI_STATUSVERBOSITY_WARNINGS = 1,
		[Token(Token = "0x400140A")]
		HAPI_STATUSVERBOSITY_MESSAGES = 2
	}
	[Token(Token = "0x200040A")]
	public enum HAPI_Result
	{
		[Token(Token = "0x400140C")]
		HAPI_RESULT_SUCCESS = 0,
		[Token(Token = "0x400140D")]
		HAPI_RESULT_FAILURE = 1,
		[Token(Token = "0x400140E")]
		HAPI_RESULT_ALREADY_INITIALIZED = 2,
		[Token(Token = "0x400140F")]
		HAPI_RESULT_NOT_INITIALIZED = 3,
		[Token(Token = "0x4001410")]
		HAPI_RESULT_CANT_LOADFILE = 4,
		[Token(Token = "0x4001411")]
		HAPI_RESULT_PARM_SET_FAILED = 5,
		[Token(Token = "0x4001412")]
		HAPI_RESULT_INVALID_ARGUMENT = 6,
		[Token(Token = "0x4001413")]
		HAPI_RESULT_CANT_LOAD_GEO = 7,
		[Token(Token = "0x4001414")]
		HAPI_RESULT_CANT_GENERATE_PRESET = 8,
		[Token(Token = "0x4001415")]
		HAPI_RESULT_CANT_LOAD_PRESET = 9,
		[Token(Token = "0x4001416")]
		HAPI_RESULT_ASSET_DEF_ALREADY_LOADED = 10,
		[Token(Token = "0x4001417")]
		HAPI_RESULT_NO_LICENSE_FOUND = 110,
		[Token(Token = "0x4001418")]
		HAPI_RESULT_DISALLOWED_NC_LICENSE_FOUND = 120,
		[Token(Token = "0x4001419")]
		HAPI_RESULT_DISALLOWED_NC_ASSET_WITH_C_LICENSE = 130,
		[Token(Token = "0x400141A")]
		HAPI_RESULT_DISALLOWED_NC_ASSET_WITH_LC_LICENSE = 140,
		[Token(Token = "0x400141B")]
		HAPI_RESULT_DISALLOWED_LC_ASSET_WITH_C_LICENSE = 150,
		[Token(Token = "0x400141C")]
		HAPI_RESULT_DISALLOWED_HENGINEINDIE_W_3PARTY_PLUGIN = 160,
		[Token(Token = "0x400141D")]
		HAPI_RESULT_ASSET_INVALID = 200,
		[Token(Token = "0x400141E")]
		HAPI_RESULT_NODE_INVALID = 210,
		[Token(Token = "0x400141F")]
		HAPI_RESULT_USER_INTERRUPTED = 300,
		[Token(Token = "0x4001420")]
		HAPI_RESULT_INVALID_SESSION = 400
	}
	[Token(Token = "0x200040B")]
	[Flags]
	public enum HAPI_ErrorCode
	{
		[Token(Token = "0x4001422")]
		HAPI_ERRORCODE_ASSET_DEF_NOT_FOUND = 1,
		[Token(Token = "0x4001423")]
		HAPI_ERRORCODE_PYTHON_NODE_ERROR = 2
	}
	[Token(Token = "0x200040C")]
	public enum HAPI_SessionType
	{
		[Token(Token = "0x4001425")]
		HAPI_SESSION_INPROCESS,
		[Token(Token = "0x4001426")]
		HAPI_SESSION_THRIFT,
		[Token(Token = "0x4001427")]
		HAPI_SESSION_CUSTOM1,
		[Token(Token = "0x4001428")]
		HAPI_SESSION_CUSTOM2,
		[Token(Token = "0x4001429")]
		HAPI_SESSION_CUSTOM3,
		[Token(Token = "0x400142A")]
		HAPI_SESSION_MAX
	}
	[Token(Token = "0x200040D")]
	public enum HAPI_State
	{
		[Token(Token = "0x400142C")]
		HAPI_STATE_READY = 0,
		[Token(Token = "0x400142D")]
		HAPI_STATE_READY_WITH_FATAL_ERRORS = 1,
		[Token(Token = "0x400142E")]
		HAPI_STATE_READY_WITH_COOK_ERRORS = 2,
		[Token(Token = "0x400142F")]
		HAPI_STATE_STARTING_COOK = 3,
		[Token(Token = "0x4001430")]
		HAPI_STATE_COOKING = 4,
		[Token(Token = "0x4001431")]
		HAPI_STATE_STARTING_LOAD = 5,
		[Token(Token = "0x4001432")]
		HAPI_STATE_LOADING = 6,
		[Token(Token = "0x4001433")]
		HAPI_STATE_MAX = 7,
		[Token(Token = "0x4001434")]
		HAPI_STATE_MAX_READY_STATE = 2
	}
	[Token(Token = "0x200040E")]
	public enum HAPI_PackedPrimInstancingMode
	{
		[Token(Token = "0x4001436")]
		HAPI_PACKEDPRIM_INSTANCING_MODE_INVALID = -1,
		[Token(Token = "0x4001437")]
		HAPI_PACKEDPRIM_INSTANCING_MODE_DISABLED,
		[Token(Token = "0x4001438")]
		HAPI_PACKEDPRIM_INSTANCING_MODE_HIERARCHY,
		[Token(Token = "0x4001439")]
		HAPI_PACKEDPRIM_INSTANCING_MODE_FLAT,
		[Token(Token = "0x400143A")]
		HAPI_PACKEDPRIM_INSTANCING_MODE_MAX
	}
	[Token(Token = "0x200040F")]
	public enum HAPI_Permissions
	{
		[Token(Token = "0x400143C")]
		HAPI_PERMISSIONS_NON_APPLICABLE,
		[Token(Token = "0x400143D")]
		HAPI_PERMISSIONS_READ_WRITE,
		[Token(Token = "0x400143E")]
		HAPI_PERMISSIONS_READ_ONLY,
		[Token(Token = "0x400143F")]
		HAPI_PERMISSIONS_WRITE_ONLY,
		[Token(Token = "0x4001440")]
		HAPI_PERMISSIONS_MAX
	}
	[Token(Token = "0x2000410")]
	public enum HAPI_RampType
	{
		[Token(Token = "0x4001442")]
		HAPI_RAMPTYPE_INVALID = -1,
		[Token(Token = "0x4001443")]
		HAPI_RAMPTYPE_FLOAT,
		[Token(Token = "0x4001444")]
		HAPI_RAMPTYPE_COLOR,
		[Token(Token = "0x4001445")]
		HAPI_RAMPTYPE_MAX
	}
	[Token(Token = "0x2000411")]
	public enum HAPI_ParmType
	{
		[Token(Token = "0x4001447")]
		HAPI_PARMTYPE_INT = 0,
		[Token(Token = "0x4001448")]
		HAPI_PARMTYPE_MULTIPARMLIST = 1,
		[Token(Token = "0x4001449")]
		HAPI_PARMTYPE_TOGGLE = 2,
		[Token(Token = "0x400144A")]
		HAPI_PARMTYPE_BUTTON = 3,
		[Token(Token = "0x400144B")]
		HAPI_PARMTYPE_FLOAT = 4,
		[Token(Token = "0x400144C")]
		HAPI_PARMTYPE_COLOR = 5,
		[Token(Token = "0x400144D")]
		HAPI_PARMTYPE_STRING = 6,
		[Token(Token = "0x400144E")]
		HAPI_PARMTYPE_PATH_FILE = 7,
		[Token(Token = "0x400144F")]
		HAPI_PARMTYPE_PATH_FILE_GEO = 8,
		[Token(Token = "0x4001450")]
		HAPI_PARMTYPE_PATH_FILE_IMAGE = 9,
		[Token(Token = "0x4001451")]
		HAPI_PARMTYPE_NODE = 10,
		[Token(Token = "0x4001452")]
		HAPI_PARMTYPE_FOLDERLIST = 11,
		[Token(Token = "0x4001453")]
		HAPI_PARMTYPE_FOLDERLIST_RADIO = 12,
		[Token(Token = "0x4001454")]
		HAPI_PARMTYPE_FOLDER = 13,
		[Token(Token = "0x4001455")]
		HAPI_PARMTYPE_LABEL = 14,
		[Token(Token = "0x4001456")]
		HAPI_PARMTYPE_SEPARATOR = 15,
		[Token(Token = "0x4001457")]
		HAPI_PARMTYPE_PATH_FILE_DIR = 16,
		[Token(Token = "0x4001458")]
		HAPI_PARMTYPE_MAX = 17,
		[Token(Token = "0x4001459")]
		HAPI_PARMTYPE_INT_START = 0,
		[Token(Token = "0x400145A")]
		HAPI_PARMTYPE_INT_END = 3,
		[Token(Token = "0x400145B")]
		HAPI_PARMTYPE_FLOAT_START = 4,
		[Token(Token = "0x400145C")]
		HAPI_PARMTYPE_FLOAT_END = 5,
		[Token(Token = "0x400145D")]
		HAPI_PARMTYPE_STRING_START = 6,
		[Token(Token = "0x400145E")]
		HAPI_PARMTYPE_STRING_END = 10,
		[Token(Token = "0x400145F")]
		HAPI_PARMTYPE_PATH_START = 7,
		[Token(Token = "0x4001460")]
		HAPI_PARMTYPE_PATH_END = 9,
		[Token(Token = "0x4001461")]
		HAPI_PARMTYPE_NODE_START = 10,
		[Token(Token = "0x4001462")]
		HAPI_PARMTYPE_NODE_END = 10,
		[Token(Token = "0x4001463")]
		HAPI_PARMTYPE_CONTAINER_START = 11,
		[Token(Token = "0x4001464")]
		HAPI_PARMTYPE_CONTAINER_END = 12,
		[Token(Token = "0x4001465")]
		HAPI_PARMTYPE_NONVALUE_START = 13,
		[Token(Token = "0x4001466")]
		HAPI_PARMTYPE_NONVALUE_END = 15
	}
	[Token(Token = "0x2000412")]
	public enum HAPI_PrmScriptType
	{
		[Token(Token = "0x4001468")]
		HAPI_PRM_SCRIPT_TYPE_INT = 0,
		[Token(Token = "0x4001469")]
		HAPI_PRM_SCRIPT_TYPE_FLOAT = 1,
		[Token(Token = "0x400146A")]
		HAPI_PRM_SCRIPT_TYPE_ANGLE = 2,
		[Token(Token = "0x400146B")]
		HAPI_PRM_SCRIPT_TYPE_STRING = 3,
		[Token(Token = "0x400146C")]
		HAPI_PRM_SCRIPT_TYPE_FILE = 4,
		[Token(Token = "0x400146D")]
		HAPI_PRM_SCRIPT_TYPE_DIRECTORY = 5,
		[Token(Token = "0x400146E")]
		HAPI_PRM_SCRIPT_TYPE_IMAGE = 6,
		[Token(Token = "0x400146F")]
		HAPI_PRM_SCRIPT_TYPE_GEOMETRY = 7,
		[Token(Token = "0x4001470")]
		HAPI_PRM_SCRIPT_TYPE_TOGGLE = 8,
		[Token(Token = "0x4001471")]
		HAPI_PRM_SCRIPT_TYPE_BUTTON = 9,
		[Token(Token = "0x4001472")]
		HAPI_PRM_SCRIPT_TYPE_VECTOR2 = 10,
		[Token(Token = "0x4001473")]
		HAPI_PRM_SCRIPT_TYPE_VECTOR3 = 11,
		[Token(Token = "0x4001474")]
		HAPI_PRM_SCRIPT_TYPE_VECTOR4 = 12,
		[Token(Token = "0x4001475")]
		HAPI_PRM_SCRIPT_TYPE_INTVECTOR2 = 13,
		[Token(Token = "0x4001476")]
		HAPI_PRM_SCRIPT_TYPE_INTVECTOR3 = 14,
		[Token(Token = "0x4001477")]
		HAPI_PRM_SCRIPT_TYPE_INTVECTOR4 = 15,
		[Token(Token = "0x4001478")]
		HAPI_PRM_SCRIPT_TYPE_UV = 16,
		[Token(Token = "0x4001479")]
		HAPI_PRM_SCRIPT_TYPE_UVW = 17,
		[Token(Token = "0x400147A")]
		HAPI_PRM_SCRIPT_TYPE_DIR = 18,
		[Token(Token = "0x400147B")]
		HAPI_PRM_SCRIPT_TYPE_COLOR = 19,
		[Token(Token = "0x400147C")]
		HAPI_PRM_SCRIPT_TYPE_COLOR4 = 20,
		[Token(Token = "0x400147D")]
		HAPI_PRM_SCRIPT_TYPE_OPPATH = 21,
		[Token(Token = "0x400147E")]
		HAPI_PRM_SCRIPT_TYPE_OPLIST = 22,
		[Token(Token = "0x400147F")]
		HAPI_PRM_SCRIPT_TYPE_OBJECT = 23,
		[Token(Token = "0x4001480")]
		HAPI_PRM_SCRIPT_TYPE_OBJECTLIST = 24,
		[Token(Token = "0x4001481")]
		HAPI_PRM_SCRIPT_TYPE_RENDER = 25,
		[Token(Token = "0x4001482")]
		HAPI_PRM_SCRIPT_TYPE_SEPARATOR = 26,
		[Token(Token = "0x4001483")]
		HAPI_PRM_SCRIPT_TYPE_GEOMETRY_DATA = 27,
		[Token(Token = "0x4001484")]
		HAPI_PRM_SCRIPT_TYPE_KEY_VALUE_DICT = 28,
		[Token(Token = "0x4001485")]
		HAPI_PRM_SCRIPT_TYPE_LABEL = 29,
		[Token(Token = "0x4001486")]
		HAPI_PRM_SCRIPT_TYPE_RGBAMASK = 30,
		[Token(Token = "0x4001487")]
		HAPI_PRM_SCRIPT_TYPE_ORDINAL = 31,
		[Token(Token = "0x4001488")]
		HAPI_PRM_SCRIPT_TYPE_RAMP_FLT = 32,
		[Token(Token = "0x4001489")]
		HAPI_PRM_SCRIPT_TYPE_RAMP_RGB = 33,
		[Token(Token = "0x400148A")]
		HAPI_PRM_SCRIPT_TYPE_FLOAT_LOG = 34,
		[Token(Token = "0x400148B")]
		HAPI_PRM_SCRIPT_TYPE_INT_LOG = 35,
		[Token(Token = "0x400148C")]
		HAPI_PRM_SCRIPT_TYPE_DATA = 36,
		[Token(Token = "0x400148D")]
		HAPI_PRM_SCRIPT_TYPE_FLOAT_MINMAX = 37,
		[Token(Token = "0x400148E")]
		HAPI_PRM_SCRIPT_TYPE_INT_MINMAX = 38,
		[Token(Token = "0x400148F")]
		HAPI_PRM_SCRIPT_TYPE_INT_STARTEND = 39,
		[Token(Token = "0x4001490")]
		HAPI_PRM_SCRIPT_TYPE_BUTTONSTRIP = 40,
		[Token(Token = "0x4001491")]
		HAPI_PRM_SCRIPT_TYPE_ICONSTRIP = 41,
		[Token(Token = "0x4001492")]
		HAPI_PRM_SCRIPT_TYPE_GROUPRADIO = 1000,
		[Token(Token = "0x4001493")]
		HAPI_PRM_SCRIPT_TYPE_GROUPCOLLAPSIBLE = 1001,
		[Token(Token = "0x4001494")]
		HAPI_PRM_SCRIPT_TYPE_GROUPSIMPLE = 1002,
		[Token(Token = "0x4001495")]
		HAPI_PRM_SCRIPT_TYPE_GROUP = 1003
	}
	[Token(Token = "0x2000413")]
	public enum HAPI_ChoiceListType
	{
		[Token(Token = "0x4001497")]
		HAPI_CHOICELISTTYPE_NONE,
		[Token(Token = "0x4001498")]
		HAPI_CHOICELISTTYPE_NORMAL,
		[Token(Token = "0x4001499")]
		HAPI_CHOICELISTTYPE_MINI,
		[Token(Token = "0x400149A")]
		HAPI_CHOICELISTTYPE_REPLACE,
		[Token(Token = "0x400149B")]
		HAPI_CHOICELISTTYPE_TOGGLE
	}
	[Token(Token = "0x2000414")]
	public enum HAPI_PresetType
	{
		[Token(Token = "0x400149D")]
		HAPI_PRESETTYPE_INVALID = -1,
		[Token(Token = "0x400149E")]
		HAPI_PRESETTYPE_BINARY,
		[Token(Token = "0x400149F")]
		HAPI_PRESETTYPE_IDX,
		[Token(Token = "0x40014A0")]
		HAPI_PRESETTYPE_MAX
	}
	[Token(Token = "0x2000415")]
	[Flags]
	public enum HAPI_NodeType
	{
		[Token(Token = "0x40014A2")]
		HAPI_NODETYPE_ANY = -1,
		[Token(Token = "0x40014A3")]
		HAPI_NODETYPE_NONE = 0,
		[Token(Token = "0x40014A4")]
		HAPI_NODETYPE_OBJ = 1,
		[Token(Token = "0x40014A5")]
		HAPI_NODETYPE_SOP = 2,
		[Token(Token = "0x40014A6")]
		HAPI_NODETYPE_CHOP = 4,
		[Token(Token = "0x40014A7")]
		HAPI_NODETYPE_ROP = 8,
		[Token(Token = "0x40014A8")]
		HAPI_NODETYPE_SHOP = 0x10,
		[Token(Token = "0x40014A9")]
		HAPI_NODETYPE_COP = 0x20,
		[Token(Token = "0x40014AA")]
		HAPI_NODETYPE_VOP = 0x40,
		[Token(Token = "0x40014AB")]
		HAPI_NODETYPE_DOP = 0x80,
		[Token(Token = "0x40014AC")]
		HAPI_NODETYPE_TOP = 0x100
	}
	[Token(Token = "0x2000416")]
	[Flags]
	public enum HAPI_NodeFlags
	{
		[Token(Token = "0x40014AE")]
		HAPI_NODEFLAGS_ANY = -1,
		[Token(Token = "0x40014AF")]
		HAPI_NODEFLAGS_NONE = 0,
		[Token(Token = "0x40014B0")]
		HAPI_NODEFLAGS_DISPLAY = 1,
		[Token(Token = "0x40014B1")]
		HAPI_NODEFLAGS_RENDER = 2,
		[Token(Token = "0x40014B2")]
		HAPI_NODEFLAGS_TEMPLATED = 4,
		[Token(Token = "0x40014B3")]
		HAPI_NODEFLAGS_LOCKED = 8,
		[Token(Token = "0x40014B4")]
		HAPI_NODEFLAGS_EDITABLE = 0x10,
		[Token(Token = "0x40014B5")]
		HAPI_NODEFLAGS_BYPASS = 0x20,
		[Token(Token = "0x40014B6")]
		HAPI_NODEFLAGS_NETWORK = 0x40,
		[Token(Token = "0x40014B7")]
		HAPI_NODEFLAGS_OBJ_GEOMETRY = 0x80,
		[Token(Token = "0x40014B8")]
		HAPI_NODEFLAGS_OBJ_CAMERA = 0x100,
		[Token(Token = "0x40014B9")]
		HAPI_NODEFLAGS_OBJ_LIGHT = 0x200,
		[Token(Token = "0x40014BA")]
		HAPI_NODEFLAGS_OBJ_SUBNET = 0x400,
		[Token(Token = "0x40014BB")]
		HAPI_NODEFLAGS_SOP_CURVE = 0x800,
		[Token(Token = "0x40014BC")]
		HAPI_NODEFLAGS_SOP_GUIDE = 0x1000,
		[Token(Token = "0x40014BD")]
		HAPI_NODEFLAGS_TOP_NONSCHEDULER = 0x2000
	}
	[Token(Token = "0x2000417")]
	public enum HAPI_GroupType
	{
		[Token(Token = "0x40014BF")]
		HAPI_GROUPTYPE_INVALID = -1,
		[Token(Token = "0x40014C0")]
		HAPI_GROUPTYPE_POINT,
		[Token(Token = "0x40014C1")]
		HAPI_GROUPTYPE_PRIM,
		[Token(Token = "0x40014C2")]
		HAPI_GROUPTYPE_MAX
	}
	[Token(Token = "0x2000418")]
	public enum HAPI_AttributeOwner
	{
		[Token(Token = "0x40014C4")]
		HAPI_ATTROWNER_INVALID = -1,
		[Token(Token = "0x40014C5")]
		HAPI_ATTROWNER_VERTEX,
		[Token(Token = "0x40014C6")]
		HAPI_ATTROWNER_POINT,
		[Token(Token = "0x40014C7")]
		HAPI_ATTROWNER_PRIM,
		[Token(Token = "0x40014C8")]
		HAPI_ATTROWNER_DETAIL,
		[Token(Token = "0x40014C9")]
		HAPI_ATTROWNER_MAX
	}
	[Token(Token = "0x2000419")]
	public enum HAPI_CurveType
	{
		[Token(Token = "0x40014CB")]
		HAPI_CURVETYPE_INVALID = -1,
		[Token(Token = "0x40014CC")]
		HAPI_CURVETYPE_LINEAR,
		[Token(Token = "0x40014CD")]
		HAPI_CURVETYPE_NURBS,
		[Token(Token = "0x40014CE")]
		HAPI_CURVETYPE_BEZIER,
		[Token(Token = "0x40014CF")]
		HAPI_CURVETYPE_MAX
	}
	[Token(Token = "0x200041A")]
	public enum HAPI_VolumeType
	{
		[Token(Token = "0x40014D1")]
		HAPI_VOLUMETYPE_INVALID = -1,
		[Token(Token = "0x40014D2")]
		HAPI_VOLUMETYPE_HOUDINI,
		[Token(Token = "0x40014D3")]
		HAPI_VOLUMETYPE_VDB,
		[Token(Token = "0x40014D4")]
		HAPI_VOLUMETYPE_MAX
	}
	[Token(Token = "0x200041B")]
	public enum HAPI_StorageType
	{
		[Token(Token = "0x40014D6")]
		HAPI_STORAGETYPE_INVALID = -1,
		[Token(Token = "0x40014D7")]
		HAPI_STORAGETYPE_INT,
		[Token(Token = "0x40014D8")]
		HAPI_STORAGETYPE_INT64,
		[Token(Token = "0x40014D9")]
		HAPI_STORAGETYPE_FLOAT,
		[Token(Token = "0x40014DA")]
		HAPI_STORAGETYPE_FLOAT64,
		[Token(Token = "0x40014DB")]
		HAPI_STORAGETYPE_STRING,
		[Token(Token = "0x40014DC")]
		HAPI_STORAGETYPE_MAX
	}
	[Token(Token = "0x200041C")]
	public enum HAPI_AttributeTypeInfo
	{
		[Token(Token = "0x40014DE")]
		HAPI_ATTRIBUTE_TYPE_INVALID = -1,
		[Token(Token = "0x40014DF")]
		HAPI_ATTRIBUTE_TYPE_NONE,
		[Token(Token = "0x40014E0")]
		HAPI_ATTRIBUTE_TYPE_POINT,
		[Token(Token = "0x40014E1")]
		HAPI_ATTRIBUTE_TYPE_HPOINT,
		[Token(Token = "0x40014E2")]
		HAPI_ATTRIBUTE_TYPE_VECTOR,
		[Token(Token = "0x40014E3")]
		HAPI_ATTRIBUTE_TYPE_NORMAL,
		[Token(Token = "0x40014E4")]
		HAPI_ATTRIBUTE_TYPE_COLOR,
		[Token(Token = "0x40014E5")]
		HAPI_ATTRIBUTE_TYPE_QUATERNION,
		[Token(Token = "0x40014E6")]
		HAPI_ATTRIBUTE_TYPE_MATRIX3,
		[Token(Token = "0x40014E7")]
		HAPI_ATTRIBUTE_TYPE_MATRIX,
		[Token(Token = "0x40014E8")]
		HAPI_ATTRIBUTE_TYPE_ST,
		[Token(Token = "0x40014E9")]
		HAPI_ATTRIBUTE_TYPE_HIDDEN,
		[Token(Token = "0x40014EA")]
		HAPI_ATTRIBUTE_TYPE_BOX2,
		[Token(Token = "0x40014EB")]
		HAPI_ATTRIBUTE_TYPE_BOX,
		[Token(Token = "0x40014EC")]
		HAPI_ATTRIBUTE_TYPE_TEXTURE,
		[Token(Token = "0x40014ED")]
		HAPI_ATTRIBUTE_TYPE_MAX
	}
	[Token(Token = "0x200041D")]
	public enum HAPI_GeoType
	{
		[Token(Token = "0x40014EF")]
		HAPI_GEOTYPE_INVALID = -1,
		[Token(Token = "0x40014F0")]
		HAPI_GEOTYPE_DEFAULT,
		[Token(Token = "0x40014F1")]
		HAPI_GEOTYPE_INTERMEDIATE,
		[Token(Token = "0x40014F2")]
		HAPI_GEOTYPE_INPUT,
		[Token(Token = "0x40014F3")]
		HAPI_GEOTYPE_CURVE,
		[Token(Token = "0x40014F4")]
		HAPI_GEOTYPE_MAX
	}
	[Token(Token = "0x200041E")]
	public enum HAPI_PartType
	{
		[Token(Token = "0x40014F6")]
		HAPI_PARTTYPE_INVALID = -1,
		[Token(Token = "0x40014F7")]
		HAPI_PARTTYPE_MESH,
		[Token(Token = "0x40014F8")]
		HAPI_PARTTYPE_CURVE,
		[Token(Token = "0x40014F9")]
		HAPI_PARTTYPE_VOLUME,
		[Token(Token = "0x40014FA")]
		HAPI_PARTTYPE_INSTANCER,
		[Token(Token = "0x40014FB")]
		HAPI_PARTTYPE_BOX,
		[Token(Token = "0x40014FC")]
		HAPI_PARTTYPE_SPHERE,
		[Token(Token = "0x40014FD")]
		HAPI_PARTTYPE_MAX
	}
	[Token(Token = "0x200041F")]
	public enum HAPI_InputType
	{
		[Token(Token = "0x40014FF")]
		HAPI_INPUT_INVALID = -1,
		[Token(Token = "0x4001500")]
		HAPI_INPUT_TRANSFORM,
		[Token(Token = "0x4001501")]
		HAPI_INPUT_GEOMETRY,
		[Token(Token = "0x4001502")]
		HAPI_INPUT_MAX
	}
	[Token(Token = "0x2000420")]
	public enum HAPI_CurveOrders
	{
		[Token(Token = "0x4001504")]
		HAPI_CURVE_ORDER_VARYING,
		[Token(Token = "0x4001505")]
		HAPI_CURVE_ORDER_INVALID,
		[Token(Token = "0x4001506")]
		HAPI_CURVE_ORDER_LINEAR,
		[Token(Token = "0x4001507")]
		HAPI_CURVE_ORDER_QUADRATIC,
		[Token(Token = "0x4001508")]
		HAPI_CURVE_ORDER_CUBIC
	}
	[Token(Token = "0x2000421")]
	public enum HAPI_TransformComponent
	{
		[Token(Token = "0x400150A")]
		HAPI_TRANSFORM_TX,
		[Token(Token = "0x400150B")]
		HAPI_TRANSFORM_TY,
		[Token(Token = "0x400150C")]
		HAPI_TRANSFORM_TZ,
		[Token(Token = "0x400150D")]
		HAPI_TRANSFORM_RX,
		[Token(Token = "0x400150E")]
		HAPI_TRANSFORM_RY,
		[Token(Token = "0x400150F")]
		HAPI_TRANSFORM_RZ,
		[Token(Token = "0x4001510")]
		HAPI_TRANSFORM_QX,
		[Token(Token = "0x4001511")]
		HAPI_TRANSFORM_QY,
		[Token(Token = "0x4001512")]
		HAPI_TRANSFORM_QZ,
		[Token(Token = "0x4001513")]
		HAPI_TRANSFORM_QW,
		[Token(Token = "0x4001514")]
		HAPI_TRANSFORM_SX,
		[Token(Token = "0x4001515")]
		HAPI_TRANSFORM_SY,
		[Token(Token = "0x4001516")]
		HAPI_TRANSFORM_SZ
	}
	[Token(Token = "0x2000422")]
	public enum HAPI_RSTOrder
	{
		[Token(Token = "0x4001518")]
		HAPI_TRS = 0,
		[Token(Token = "0x4001519")]
		HAPI_TSR = 1,
		[Token(Token = "0x400151A")]
		HAPI_RTS = 2,
		[Token(Token = "0x400151B")]
		HAPI_RST = 3,
		[Token(Token = "0x400151C")]
		HAPI_STR = 4,
		[Token(Token = "0x400151D")]
		HAPI_SRT = 5,
		[Token(Token = "0x400151E")]
		HAPI_RSTORDER_DEFAULT = 5
	}
	[Token(Token = "0x2000423")]
	public enum HAPI_XYZOrder
	{
		[Token(Token = "0x4001520")]
		HAPI_XYZ = 0,
		[Token(Token = "0x4001521")]
		HAPI_XZY = 1,
		[Token(Token = "0x4001522")]
		HAPI_YXZ = 2,
		[Token(Token = "0x4001523")]
		HAPI_YZX = 3,
		[Token(Token = "0x4001524")]
		HAPI_ZXY = 4,
		[Token(Token = "0x4001525")]
		HAPI_ZYX = 5,
		[Token(Token = "0x4001526")]
		HAPI_XYZORDER_DEFAULT = 0
	}
	[Token(Token = "0x2000424")]
	public enum HAPI_ImageDataFormat
	{
		[Token(Token = "0x4001528")]
		HAPI_IMAGE_DATA_UNKNOWN = -1,
		[Token(Token = "0x4001529")]
		HAPI_IMAGE_DATA_INT8 = 0,
		[Token(Token = "0x400152A")]
		HAPI_IMAGE_DATA_INT16 = 1,
		[Token(Token = "0x400152B")]
		HAPI_IMAGE_DATA_INT32 = 2,
		[Token(Token = "0x400152C")]
		HAPI_IMAGE_DATA_FLOAT16 = 3,
		[Token(Token = "0x400152D")]
		HAPI_IMAGE_DATA_FLOAT32 = 4,
		[Token(Token = "0x400152E")]
		HAPI_IMAGE_DATA_MAX = 5,
		[Token(Token = "0x400152F")]
		HAPI_IMAGE_DATA_DEFAULT = 0
	}
	[Token(Token = "0x2000425")]
	public enum HAPI_ImagePacking
	{
		[Token(Token = "0x4001531")]
		HAPI_IMAGE_PACKING_UNKNOWN = -1,
		[Token(Token = "0x4001532")]
		HAPI_IMAGE_PACKING_SINGLE = 0,
		[Token(Token = "0x4001533")]
		HAPI_IMAGE_PACKING_DUAL = 1,
		[Token(Token = "0x4001534")]
		HAPI_IMAGE_PACKING_RGB = 2,
		[Token(Token = "0x4001535")]
		HAPI_IMAGE_PACKING_BGR = 3,
		[Token(Token = "0x4001536")]
		HAPI_IMAGE_PACKING_RGBA = 4,
		[Token(Token = "0x4001537")]
		HAPI_IMAGE_PACKING_ABGR = 5,
		[Token(Token = "0x4001538")]
		HAPI_IMAGE_PACKING_MAX = 6,
		[Token(Token = "0x4001539")]
		HAPI_IMAGE_PACKING_DEFAULT3 = 2,
		[Token(Token = "0x400153A")]
		HAPI_IMAGE_PACKING_DEFAULT4 = 4
	}
	[Token(Token = "0x2000426")]
	public enum HAPI_EnvIntType
	{
		[Token(Token = "0x400153C")]
		HAPI_ENVINT_INVALID = -1,
		[Token(Token = "0x400153D")]
		HAPI_ENVINT_VERSION_HOUDINI_MAJOR = 100,
		[Token(Token = "0x400153E")]
		HAPI_ENVINT_VERSION_HOUDINI_MINOR = 110,
		[Token(Token = "0x400153F")]
		HAPI_ENVINT_VERSION_HOUDINI_BUILD = 120,
		[Token(Token = "0x4001540")]
		HAPI_ENVINT_VERSION_HOUDINI_PATCH = 130,
		[Token(Token = "0x4001541")]
		HAPI_ENVINT_VERSION_HOUDINI_ENGINE_MAJOR = 200,
		[Token(Token = "0x4001542")]
		HAPI_ENVINT_VERSION_HOUDINI_ENGINE_MINOR = 210,
		[Token(Token = "0x4001543")]
		HAPI_ENVINT_VERSION_HOUDINI_ENGINE_API = 220,
		[Token(Token = "0x4001544")]
		HAPI_ENVINT_MAX = 221
	}
	[Token(Token = "0x2000427")]
	public enum HAPI_SessionEnvIntType
	{
		[Token(Token = "0x4001546")]
		HAPI_SESSIONENVINT_INVALID = -1,
		[Token(Token = "0x4001547")]
		HAPI_SESSIONENVINT_LICENSE = 100,
		[Token(Token = "0x4001548")]
		HAPI_SESSIONENVINT_MAX = 101
	}
	[Token(Token = "0x2000428")]
	public enum HAPI_CacheProperty
	{
		[Token(Token = "0x400154A")]
		HAPI_CACHEPROP_CURRENT,
		[Token(Token = "0x400154B")]
		HAPI_CACHEPROP_HAS_MIN,
		[Token(Token = "0x400154C")]
		HAPI_CACHEPROP_MIN,
		[Token(Token = "0x400154D")]
		HAPI_CACHEPROP_HAS_MAX,
		[Token(Token = "0x400154E")]
		HAPI_CACHEPROP_MAX,
		[Token(Token = "0x400154F")]
		HAPI_CACHEPROP_CULL_LEVEL
	}
	[Token(Token = "0x2000429")]
	public enum HAPI_HeightFieldSampling
	{
		[Token(Token = "0x4001551")]
		HAPI_HEIGHTFIELD_SAMPLING_CENTER,
		[Token(Token = "0x4001552")]
		HAPI_HEIGHTFIELD_SAMPLING_CORNER
	}
	[Token(Token = "0x200042A")]
	public enum HAPI_PDG_State
	{
		[Token(Token = "0x4001554")]
		HAPI_PDG_STATE_READY = 0,
		[Token(Token = "0x4001555")]
		HAPI_PDG_STATE_COOKING = 1,
		[Token(Token = "0x4001556")]
		HAPI_PDG_STATE_MAX = 2,
		[Token(Token = "0x4001557")]
		HAPI_PDG_STATE_MAX_READY_STATE = 0
	}
	[Token(Token = "0x200042B")]
	public enum HAPI_PDG_EventType : uint
	{
		[Token(Token = "0x4001559")]
		HAPI_PDG_EVENT_NULL,
		[Token(Token = "0x400155A")]
		HAPI_PDG_EVENT_WORKITEM_ADD,
		[Token(Token = "0x400155B")]
		HAPI_PDG_EVENT_WORKITEM_REMOVE,
		[Token(Token = "0x400155C")]
		HAPI_PDG_EVENT_WORKITEM_STATE_CHANGE,
		[Token(Token = "0x400155D")]
		HAPI_PDG_EVENT_WORKITEM_ADD_DEP,
		[Token(Token = "0x400155E")]
		HAPI_PDG_EVENT_WORKITEM_REMOVE_DEP,
		[Token(Token = "0x400155F")]
		HAPI_PDG_EVENT_WORKITEM_ADD_PARENT,
		[Token(Token = "0x4001560")]
		HAPI_PDG_EVENT_WORKITEM_REMOVE_PARENT,
		[Token(Token = "0x4001561")]
		HAPI_PDG_EVENT_NODE_CLEAR,
		[Token(Token = "0x4001562")]
		HAPI_PDG_EVENT_COOK_ERROR,
		[Token(Token = "0x4001563")]
		HAPI_PDG_EVENT_COOK_WARNING,
		[Token(Token = "0x4001564")]
		HAPI_PDG_EVENT_COOK_COMPLETE,
		[Token(Token = "0x4001565")]
		HAPI_PDG_EVENT_DIRTY_START,
		[Token(Token = "0x4001566")]
		HAPI_PDG_EVENT_DIRTY_STOP,
		[Token(Token = "0x4001567")]
		HAPI_PDG_EVENT_DIRTY_ALL,
		[Token(Token = "0x4001568")]
		HAPI_PDG_EVENT_UI_SELECT,
		[Token(Token = "0x4001569")]
		HAPI_PDG_EVENT_NODE_CREATE,
		[Token(Token = "0x400156A")]
		HAPI_PDG_EVENT_NODE_REMOVE,
		[Token(Token = "0x400156B")]
		HAPI_PDG_EVENT_NODE_RENAME,
		[Token(Token = "0x400156C")]
		HAPI_PDG_EVENT_NODE_CONNECT,
		[Token(Token = "0x400156D")]
		HAPI_PDG_EVENT_NODE_DISCONNECT,
		[Token(Token = "0x400156E")]
		HAPI_PDG_EVENT_WORKITEM_SET_INT,
		[Token(Token = "0x400156F")]
		HAPI_PDG_EVENT_WORKITEM_SET_FLOAT,
		[Token(Token = "0x4001570")]
		HAPI_PDG_EVENT_WORKITEM_SET_STRING,
		[Token(Token = "0x4001571")]
		HAPI_PDG_EVENT_WORKITEM_SET_FILE,
		[Token(Token = "0x4001572")]
		HAPI_PDG_EVENT_WORKITEM_SET_PYOBJECT,
		[Token(Token = "0x4001573")]
		HAPI_PDG_EVENT_WORKITEM_SET_GEOMETRY,
		[Token(Token = "0x4001574")]
		HAPI_PDG_EVENT_WORKITEM_RESULT,
		[Token(Token = "0x4001575")]
		HAPI_PDG_EVENT_WORKITEM_PRIORITY,
		[Token(Token = "0x4001576")]
		HAPI_PDG_EVENT_COOK_START,
		[Token(Token = "0x4001577")]
		HAPI_PDG_EVENT_WORKITEM_ADD_STATIC_ANCESTOR,
		[Token(Token = "0x4001578")]
		HAPI_PDG_EVENT_WORKITEM_REMOVE_STATIC_ANCESTOR,
		[Token(Token = "0x4001579")]
		HAPI_PDG_EVENT_NODE_PROGRESS_UPDATE,
		[Token(Token = "0x400157A")]
		HAPI_PDG_EVENT_ALL,
		[Token(Token = "0x400157B")]
		HAPI_PDG_EVENT_LOG,
		[Token(Token = "0x400157C")]
		HAPI_PDG_CONTEXT_EVENTS
	}
	[Token(Token = "0x200042C")]
	public enum HAPI_PDG_WorkitemState
	{
		[Token(Token = "0x400157E")]
		HAPI_PDG_WORKITEM_UNDEFINED,
		[Token(Token = "0x400157F")]
		HAPI_PDG_WORKITEM_UNCOOKED,
		[Token(Token = "0x4001580")]
		HAPI_PDG_WORKITEM_WAITING,
		[Token(Token = "0x4001581")]
		HAPI_PDG_WORKITEM_SCHEDULED,
		[Token(Token = "0x4001582")]
		HAPI_PDG_WORKITEM_COOKING,
		[Token(Token = "0x4001583")]
		HAPI_PDG_WORKITEM_COOKED_SUCCESS,
		[Token(Token = "0x4001584")]
		HAPI_PDG_WORKITEM_COOKED_CACHE,
		[Token(Token = "0x4001585")]
		HAPI_PDG_WORKITEM_COOKED_FAIL,
		[Token(Token = "0x4001586")]
		HAPI_PDG_WORKITEM_COOKED_CANCEL,
		[Token(Token = "0x4001587")]
		HAPI_PDG_WORKITEM_DIRTY
	}
	[Token(Token = "0x200042D")]
	public struct HAPI_Transform
	{
		[Token(Token = "0x4001588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float[] position;

		[Token(Token = "0x4001589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float[] rotationQuaternion;

		[Token(Token = "0x400158A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float[] scale;

		[Token(Token = "0x400158B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] shear;

		[Token(Token = "0x400158C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HAPI_RSTOrder rstOrder;

		[Token(Token = "0x60020E1")]
		[Address(RVA = "0xB92F80", Offset = "0xB92F80", VA = "0xB92F80")]
		public HAPI_Transform(bool initializeFields)
		{
		}

		[Token(Token = "0x60020E2")]
		[Address(RVA = "0xB92F8C", Offset = "0xB92F8C", VA = "0xB92F8C")]
		public void Init()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200042E")]
	public struct HAPI_TransformEuler
	{
		[Token(Token = "0x400158D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float[] position;

		[Token(Token = "0x400158E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float[] rotationEuler;

		[Token(Token = "0x400158F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float[] scale;

		[Token(Token = "0x4001590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] shear;

		[Token(Token = "0x4001591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HAPI_XYZOrder rotationOrder;

		[Token(Token = "0x4001592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public HAPI_RSTOrder rstOrder;

		[Token(Token = "0x60020E3")]
		[Address(RVA = "0xB93228", Offset = "0xB93228", VA = "0xB93228")]
		public HAPI_TransformEuler(bool initialize_fields)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200042F")]
	public struct HAPI_Session
	{
		[Token(Token = "0x4001593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HAPI_SessionType type;

		[Token(Token = "0x4001594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public long id;
	}
	[Token(Token = "0x2000430")]
	public struct HAPI_ThriftServerOptions
	{
		[Token(Token = "0x4001595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool autoClose;

		[Token(Token = "0x4001596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float timeoutMs;
	}
	[Token(Token = "0x2000431")]
	public struct HAPI_TimelineOptions
	{
		[Token(Token = "0x4001597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float fps;

		[Token(Token = "0x4001598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float startTime;

		[Token(Token = "0x4001599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float endTime;
	}
	[Serializable]
	[Token(Token = "0x2000432")]
	public struct HAPI_AssetInfo
	{
		[Token(Token = "0x400159A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int nodeId;

		[Token(Token = "0x400159B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int objectNodeId;

		[Token(Token = "0x400159C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool hasEverCooked;

		[Token(Token = "0x400159D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int nameSH;

		[Token(Token = "0x400159E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int labelSH;

		[Token(Token = "0x400159F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int filePathSH;

		[Token(Token = "0x40015A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int versionSH;

		[Token(Token = "0x40015A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int fullOpNameSH;

		[Token(Token = "0x40015A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int helpTextSH;

		[Token(Token = "0x40015A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int helpURLSH;

		[Token(Token = "0x40015A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int objectCount;

		[Token(Token = "0x40015A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int handleCount;

		[Token(Token = "0x40015A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int transformInputCount;

		[Token(Token = "0x40015A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int geoInputCount;

		[Token(Token = "0x40015A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int geoOutputCount;

		[Token(Token = "0x40015A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool haveObjectsChanged;

		[Token(Token = "0x40015AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		public bool haveMaterialsChanged;
	}
	[Token(Token = "0x2000433")]
	public struct HAPI_CookOptions
	{
		[Token(Token = "0x40015AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool splitGeosByGroup;

		[Token(Token = "0x40015AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public bool splitGeosByAttribute;

		[Token(Token = "0x40015AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int splitAttrSH;

		[Token(Token = "0x40015AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int maxVerticesPerPrimitive;

		[Token(Token = "0x40015AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool refineCurveToLinear;

		[Token(Token = "0x40015B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float curveRefineLOD;

		[Token(Token = "0x40015B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool clearErrorsAndWarnings;

		[Token(Token = "0x40015B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public bool cookTemplatedGeos;

		[Token(Token = "0x40015B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		public bool splitPointsByVertexAttributes;

		[Token(Token = "0x40015B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HAPI_PackedPrimInstancingMode packedPrimInstancingMode;

		[Token(Token = "0x40015B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool handleBoxPartTypes;

		[Token(Token = "0x40015B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public bool handleSpherePartTypes;

		[Token(Token = "0x40015B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
		public bool checkPartChanges;

		[Token(Token = "0x40015B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int extraFlags;
	}
	[Serializable]
	[Token(Token = "0x2000434")]
	public struct HAPI_NodeInfo
	{
		[Token(Token = "0x40015B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int id;

		[Token(Token = "0x40015BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int parentId;

		[Token(Token = "0x40015BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int nameSH;

		[Token(Token = "0x40015BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public HAPI_NodeType type;

		[Token(Token = "0x40015BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool isValid;

		[Token(Token = "0x40015BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int totalCookCount;

		[Token(Token = "0x40015BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int uniqueHoudiniNodeId;

		[Token(Token = "0x40015C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int internalNodePathSH;

		[Token(Token = "0x40015C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int parmCount;

		[Token(Token = "0x40015C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int parmIntValueCount;

		[Token(Token = "0x40015C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int parmFloatValueCount;

		[Token(Token = "0x40015C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int parmStringValueCount;

		[Token(Token = "0x40015C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int parmChoiceCount;

		[Token(Token = "0x40015C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int childNodeCount;

		[Token(Token = "0x40015C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int inputCount;

		[Token(Token = "0x40015C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int outputCount;

		[Token(Token = "0x40015C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool createdPostAssetLoad;

		[Token(Token = "0x40015CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool isTimeDependent;
	}
	[Serializable]
	[Token(Token = "0x2000435")]
	public struct HAPI_ParmInfo
	{
		[Token(Token = "0x40015CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int id;

		[Token(Token = "0x40015CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int parentId;

		[Token(Token = "0x40015CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int childIndex;

		[Token(Token = "0x40015CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public HAPI_ParmType type;

		[Token(Token = "0x40015CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private HAPI_PrmScriptType scriptType;

		[Token(Token = "0x40015D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int typeInfoSH;

		[Token(Token = "0x40015D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HAPI_Permissions permissions;

		[Token(Token = "0x40015D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int tagCount;

		[Token(Token = "0x40015D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int size;

		[Token(Token = "0x40015D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private HAPI_ChoiceListType choiceListType;

		[Token(Token = "0x40015D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int choiceCount;

		[Token(Token = "0x40015D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int nameSH;

		[Token(Token = "0x40015D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int labelSH;

		[Token(Token = "0x40015D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int templateNameSH;

		[Token(Token = "0x40015D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int helpSH;

		[Token(Token = "0x40015DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool hasMin;

		[Token(Token = "0x40015DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		public bool hasMax;

		[Token(Token = "0x40015DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
		public bool hasUIMin;

		[Token(Token = "0x40015DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F")]
		public bool hasUIMax;

		[Token(Token = "0x40015DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float min;

		[Token(Token = "0x40015DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float max;

		[Token(Token = "0x40015E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float UIMin;

		[Token(Token = "0x40015E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float UIMax;

		[Token(Token = "0x40015E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool invisible;

		[Token(Token = "0x40015E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool disabled;

		[Token(Token = "0x40015E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		public bool spare;

		[Token(Token = "0x40015E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
		public bool joinNext;

		[Token(Token = "0x40015E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool labelNone;

		[Token(Token = "0x40015E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int intValuesIndex;

		[Token(Token = "0x40015E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int floatValuesIndex;

		[Token(Token = "0x40015E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int stringValuesIndex;

		[Token(Token = "0x40015EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int choiceIndex;

		[Token(Token = "0x40015EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private HAPI_NodeType inputNodeType;

		[Token(Token = "0x40015EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private HAPI_NodeFlags inputNodeFlag;

		[Token(Token = "0x40015ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool isChildOfMultiParm;

		[Token(Token = "0x40015EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public int instanceNum;

		[Token(Token = "0x40015EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public int instanceLength;

		[Token(Token = "0x40015F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public int instanceCount;

		[Token(Token = "0x40015F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public int instanceStartOffset;

		[Token(Token = "0x40015F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public HAPI_RampType rampType;

		[Token(Token = "0x40015F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public int visibilityConditionSH;

		[Token(Token = "0x40015F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public int disabledConditionSH;

		[Token(Token = "0x60020E4")]
		[Address(RVA = "0xB9289C", Offset = "0xB9289C", VA = "0xB9289C")]
		public bool isInt()
		{
			return default(bool);
		}

		[Token(Token = "0x60020E5")]
		[Address(RVA = "0xB928B8", Offset = "0xB928B8", VA = "0xB928B8")]
		public bool isFloat()
		{
			return default(bool);
		}

		[Token(Token = "0x60020E6")]
		[Address(RVA = "0xB928CC", Offset = "0xB928CC", VA = "0xB928CC")]
		public bool isString()
		{
			return default(bool);
		}

		[Token(Token = "0x60020E7")]
		[Address(RVA = "0xB928FC", Offset = "0xB928FC", VA = "0xB928FC")]
		public bool isPath()
		{
			return default(bool);
		}

		[Token(Token = "0x60020E8")]
		[Address(RVA = "0xB9291C", Offset = "0xB9291C", VA = "0xB9291C")]
		public bool isNode()
		{
			return default(bool);
		}

		[Token(Token = "0x60020E9")]
		[Address(RVA = "0xB9292C", Offset = "0xB9292C", VA = "0xB9292C")]
		public bool isNonValue()
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x2000436")]
	public struct HAPI_ParmInput
	{
		[Token(Token = "0x40015F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool isAsset;

		[Token(Token = "0x40015F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GameObject inputObject;

		[Token(Token = "0x40015F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject newInputObject;

		[Token(Token = "0x40015F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int inputNodeId;

		[Token(Token = "0x40015F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int inputNodeUniqueId;
	}
	[Serializable]
	[Token(Token = "0x2000437")]
	public struct HAPI_ParmChoiceInfo
	{
		[Token(Token = "0x40015FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int parentParmId;

		[Token(Token = "0x40015FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int labelSH;

		[Token(Token = "0x40015FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int valueSH;
	}
	[Serializable]
	[Token(Token = "0x2000438")]
	public struct HAPI_HandleInfo
	{
		[Token(Token = "0x40015FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int nameSH;

		[Token(Token = "0x40015FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int typeNameSH;

		[Token(Token = "0x40015FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int bindingsCount;
	}
	[Serializable]
	[Token(Token = "0x2000439")]
	public struct HAPI_HandleBindingInfo
	{
		[Token(Token = "0x4001600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int handleParmNameSH;

		[Token(Token = "0x4001601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int assetParmNameSH;

		[Token(Token = "0x4001602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int assetParmId;

		[Token(Token = "0x4001603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int assetParmIndex;
	}
	[Serializable]
	[Token(Token = "0x200043A")]
	public struct HAPI_ObjectInfo
	{
		[Token(Token = "0x4001604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int nameSH;

		[Token(Token = "0x4001605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int objectInstancePathSH;

		[Token(Token = "0x4001606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool hasTransformChanged;

		[Token(Token = "0x4001607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		public bool haveGeosChanged;

		[Token(Token = "0x4001608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
		public bool isVisible;

		[Token(Token = "0x4001609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB")]
		public bool isInstancer;

		[Token(Token = "0x400160A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool isInstanced;

		[Token(Token = "0x400160B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int geoCount;

		[Token(Token = "0x400160C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int nodeId;

		[Token(Token = "0x400160D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int objectToInstanceId;
	}
	[Serializable]
	[Token(Token = "0x200043B")]
	public struct HAPI_GeoInfo
	{
		[Token(Token = "0x400160E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HAPI_GeoType type;

		[Token(Token = "0x400160F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int nameSH;

		[Token(Token = "0x4001610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int nodeId;

		[Token(Token = "0x4001611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool isEditable;

		[Token(Token = "0x4001612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
		public bool isTemplated;

		[Token(Token = "0x4001613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
		public bool isDisplayGeo;

		[Token(Token = "0x4001614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF")]
		public bool hasGeoChanged;

		[Token(Token = "0x4001615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool hasMaterialChanged;

		[Token(Token = "0x4001616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int pointGroupCount;

		[Token(Token = "0x4001617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int primitiveGroupCount;

		[Token(Token = "0x4001618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int partCount;

		[Token(Token = "0x60020EA")]
		[Address(RVA = "0xB92868", Offset = "0xB92868", VA = "0xB92868")]
		public int getGroupCountByType(HAPI_GroupType type)
		{
			return default(int);
		}
	}
	[Token(Token = "0x200043C")]
	public struct HAPI_PartInfo
	{
		[Token(Token = "0x4001619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int id;

		[Token(Token = "0x400161A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int nameSH;

		[Token(Token = "0x400161B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public HAPI_PartType type;

		[Token(Token = "0x400161C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int faceCount;

		[Token(Token = "0x400161D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int vertexCount;

		[Token(Token = "0x400161E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int pointCount;

		[Token(Token = "0x400161F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int[] attributeCounts;

		[Token(Token = "0x4001620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isInstanced;

		[Token(Token = "0x4001621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int instancedPartCount;

		[Token(Token = "0x4001622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int instanceCount;

		[Token(Token = "0x4001623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool hasChanged;

		[Token(Token = "0x170003CF")]
		public int pointAttributeCount
		{
			[Token(Token = "0x60020EE")]
			[Address(RVA = "0xB92BA4", Offset = "0xB92BA4", VA = "0xB92BA4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60020EF")]
			[Address(RVA = "0xB92BAC", Offset = "0xB92BAC", VA = "0xB92BAC")]
			set
			{
			}
		}

		[Token(Token = "0x170003D0")]
		public int primitiveAttributeCount
		{
			[Token(Token = "0x60020F0")]
			[Address(RVA = "0xB92BB4", Offset = "0xB92BB4", VA = "0xB92BB4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60020F1")]
			[Address(RVA = "0xB92BBC", Offset = "0xB92BBC", VA = "0xB92BBC")]
			set
			{
			}
		}

		[Token(Token = "0x170003D1")]
		public int vertexAttributeCount
		{
			[Token(Token = "0x60020F2")]
			[Address(RVA = "0xB92BC4", Offset = "0xB92BC4", VA = "0xB92BC4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60020F3")]
			[Address(RVA = "0xB92BCC", Offset = "0xB92BCC", VA = "0xB92BCC")]
			set
			{
			}
		}

		[Token(Token = "0x170003D2")]
		public int detailAttributeCount
		{
			[Token(Token = "0x60020F4")]
			[Address(RVA = "0xB92BD4", Offset = "0xB92BD4", VA = "0xB92BD4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60020F5")]
			[Address(RVA = "0xB92BDC", Offset = "0xB92BDC", VA = "0xB92BDC")]
			set
			{
			}
		}

		[Token(Token = "0x60020EB")]
		[Address(RVA = "0xB92B28", Offset = "0xB92B28", VA = "0xB92B28")]
		public int getElementCountByAttributeOwner(HAPI_AttributeOwner owner)
		{
			return default(int);
		}

		[Token(Token = "0x60020EC")]
		[Address(RVA = "0xB92B70", Offset = "0xB92B70", VA = "0xB92B70")]
		public int getElementCountByGroupType(HAPI_GroupType type)
		{
			return default(int);
		}

		[Token(Token = "0x60020ED")]
		[Address(RVA = "0xB92B9C", Offset = "0xB92B9C", VA = "0xB92B9C")]
		public void init()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200043D")]
	public struct HAPI_AttributeInfo
	{
		[Token(Token = "0x4001624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool exists;

		[Token(Token = "0x4001625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public HAPI_AttributeOwner owner;

		[Token(Token = "0x4001626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public HAPI_StorageType storage;

		[Token(Token = "0x4001627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public HAPI_AttributeOwner originalOwner;

		[Token(Token = "0x4001628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int count;

		[Token(Token = "0x4001629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int tupleSize;

		[Token(Token = "0x400162A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private long totalArrayElements;

		[Token(Token = "0x400162B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HAPI_AttributeTypeInfo typeInfo;

		[Token(Token = "0x60020F6")]
		[Address(RVA = "0xB92644", Offset = "0xB92644", VA = "0xB92644")]
		public HAPI_AttributeInfo([Optional] string ignored)
		{
		}
	}
	[Token(Token = "0x200043E")]
	public struct HAPI_MaterialInfo
	{
		[Token(Token = "0x400162C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int nodeId;

		[Token(Token = "0x400162D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public bool exists;

		[Token(Token = "0x400162E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		public bool hasChanged;
	}
	[Token(Token = "0x200043F")]
	public struct HAPI_ImageFileFormat
	{
		[Token(Token = "0x400162F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int nameSH;

		[Token(Token = "0x4001630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int descriptionSH;

		[Token(Token = "0x4001631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int defaultExtensionSH;
	}
	[Token(Token = "0x2000440")]
	public struct HAPI_ImageInfo
	{
		[Token(Token = "0x4001632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int imageFileFormatNameSH;

		[Token(Token = "0x4001633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int xRes;

		[Token(Token = "0x4001634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int yRes;

		[Token(Token = "0x4001635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public HAPI_ImageDataFormat dataFormat;

		[Token(Token = "0x4001636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool interleaved;

		[Token(Token = "0x4001637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public HAPI_ImagePacking packing;

		[Token(Token = "0x4001638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public double gamma;
	}
	[Token(Token = "0x2000441")]
	public struct HAPI_Keyframe
	{
		[Token(Token = "0x4001639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float time;

		[Token(Token = "0x400163A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float value;

		[Token(Token = "0x400163B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float inTangent;

		[Token(Token = "0x400163C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float outTangent;

		[Token(Token = "0x60020F7")]
		[Address(RVA = "0xB92890", Offset = "0xB92890", VA = "0xB92890")]
		private HAPI_Keyframe(float t, float v, float in_tangent, float out_tangent)
		{
		}
	}
	[Token(Token = "0x2000442")]
	public struct HAPI_VolumeInfo
	{
		[Token(Token = "0x400163D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int nameSH;

		[Token(Token = "0x400163E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public HAPI_VolumeType type;

		[Token(Token = "0x400163F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int xLength;

		[Token(Token = "0x4001640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int yLength;

		[Token(Token = "0x4001641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int zLength;

		[Token(Token = "0x4001642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int minX;

		[Token(Token = "0x4001643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int minY;

		[Token(Token = "0x4001644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int minZ;

		[Token(Token = "0x4001645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int tupleSize;

		[Token(Token = "0x4001646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public HAPI_StorageType storage;

		[Token(Token = "0x4001647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int tileSize;

		[Token(Token = "0x4001648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HAPI_Transform transform;

		[Token(Token = "0x4001649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool hasTaper;

		[Token(Token = "0x400164A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float xTaper;

		[Token(Token = "0x400164B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float yTaper;
	}
	[Token(Token = "0x2000443")]
	public struct HAPI_VolumeTileInfo
	{
		[Token(Token = "0x400164C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int minX;

		[Token(Token = "0x400164D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int minY;

		[Token(Token = "0x400164E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int minZ;

		[Token(Token = "0x400164F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool isValid;
	}
	[Token(Token = "0x2000444")]
	public struct HAPI_CurveInfo
	{
		[Token(Token = "0x4001650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HAPI_CurveType curveType;

		[Token(Token = "0x4001651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int curveCount;

		[Token(Token = "0x4001652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int vertexCount;

		[Token(Token = "0x4001653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int knotCount;

		[Token(Token = "0x4001654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool isPeriodic;

		[Token(Token = "0x4001655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool isRational;

		[Token(Token = "0x4001656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int order;

		[Token(Token = "0x4001657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool hasKnots;
	}
	[Token(Token = "0x2000445")]
	public struct HAPI_BoxInfo
	{
		[Token(Token = "0x4001658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float[] center;

		[Token(Token = "0x4001659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float[] size;

		[Token(Token = "0x400165A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float[] rotation;

		[Token(Token = "0x60020F8")]
		[Address(RVA = "0xB9285C", Offset = "0xB9285C", VA = "0xB9285C")]
		public HAPI_BoxInfo(bool initialize_fields)
		{
		}
	}
	[Token(Token = "0x2000446")]
	public struct HAPI_SphereInfo
	{
		[Token(Token = "0x400165B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float[] center;

		[Token(Token = "0x400165C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float radius;

		[Token(Token = "0x60020F9")]
		[Address(RVA = "0xB92CF0", Offset = "0xB92CF0", VA = "0xB92CF0")]
		public HAPI_SphereInfo(bool initialize_fields)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000447")]
	public struct HAPI_Viewport
	{
		[Token(Token = "0x400165D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float[] position;

		[Token(Token = "0x400165E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float[] rotationQuaternion;

		[Token(Token = "0x400165F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float offset;

		[Token(Token = "0x60020FA")]
		[Address(RVA = "0xB933C0", Offset = "0xB933C0", VA = "0xB933C0")]
		public HAPI_Viewport(bool initializeFields)
		{
		}

		[Token(Token = "0x60020FB")]
		[Address(RVA = "0xB933CC", Offset = "0xB933CC", VA = "0xB933CC")]
		public void Init()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000448")]
	public struct HAPI_SessionSyncInfo
	{
		[Token(Token = "0x4001660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool cookUsingHoudiniTime;

		[Token(Token = "0x4001661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public bool syncViewport;
	}
	[Token(Token = "0x2000449")]
	public struct HAPI_PDG_EventInfo
	{
		[Token(Token = "0x4001662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int nodeId;

		[Token(Token = "0x4001663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int workitemId;

		[Token(Token = "0x4001664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int dependencyId;

		[Token(Token = "0x4001665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int currentState;

		[Token(Token = "0x4001666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int lastState;

		[Token(Token = "0x4001667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int eventType;

		[Token(Token = "0x4001668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int msgSH;
	}
	[Token(Token = "0x200044A")]
	public struct HAPI_PDG_WorkitemInfo
	{
		[Token(Token = "0x4001669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int index;

		[Token(Token = "0x400166A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int numResults;

		[Token(Token = "0x400166B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int nameSH;
	}
	[Token(Token = "0x200044B")]
	public struct HAPI_PDG_WorkitemResultInfo
	{
		[Token(Token = "0x400166C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int resultSH;

		[Token(Token = "0x400166D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int resultTagSH;

		[Token(Token = "0x400166E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public long resultHash;
	}
	[Token(Token = "0x200044C")]
	public static class HEU_HAPIImports
	{
	}
	[Token(Token = "0x200044D")]
	public static class HEU_HAPIImportsPDG
	{
	}
	[Token(Token = "0x200044E")]
	public class HEU_HoudiniVersion
	{
		[Token(Token = "0x400166F")]
		public const int HOUDINI_MAJOR = 18;

		[Token(Token = "0x4001670")]
		public const int HOUDINI_MINOR = 5;

		[Token(Token = "0x4001671")]
		public const int HOUDINI_BUILD = 408;

		[Token(Token = "0x4001672")]
		public const int HOUDINI_PATCH = 0;

		[Token(Token = "0x4001673")]
		public const string HOUDINI_VERSION_STRING = "18.5.408";

		[Token(Token = "0x4001674")]
		public const int HOUDINI_ENGINE_MAJOR = 3;

		[Token(Token = "0x4001675")]
		public const int HOUDINI_ENGINE_MINOR = 5;

		[Token(Token = "0x4001676")]
		public const int HOUDINI_ENGINE_API = 1;

		[Token(Token = "0x4001677")]
		public const int UNITY_PLUGIN_VERSION = 2;

		[Token(Token = "0x4001678")]
		public const string HOUDINI_INSTALL_PATH = "/opt/hfs18.5.408";

		[Token(Token = "0x4001679")]
		public const string HAPI_BIN_PATH = "/bin";

		[Token(Token = "0x400167A")]
		public const string HAPI_LIBRARY_PATH = "/dsolib";

		[Token(Token = "0x400167B")]
		public const string HAPI_SERVER = "/opt/hfs18.5.408/bin/HARS";

		[Token(Token = "0x400167C")]
		public const string HAPI_LIBRARY = "/opt/hfs18.5.408/dsolib/libHAPIL.so";

		[Token(Token = "0x60020FC")]
		[Address(RVA = "0x168F9B0", Offset = "0x168F9B0", VA = "0x168F9B0")]
		public HEU_HoudiniVersion()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200044F")]
	public class HEU_Handle : ScriptableObject
	{
		[Token(Token = "0x2000693")]
		public enum HEU_HandleType
		{
			[Token(Token = "0x4002061")]
			XFORM,
			[Token(Token = "0x4002062")]
			UNSUPPORTED
		}

		[Token(Token = "0x400167D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string _handleName;

		[Token(Token = "0x400167E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private HEU_HandleType _handleType;

		[Token(Token = "0x400167F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private int _handleIndex;

		[Token(Token = "0x4001680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HEU_HandleParamBinding _handleParamTranslateBinding;

		[Token(Token = "0x4001681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private HEU_HandleParamBinding _handleParamRotateBinding;

		[Token(Token = "0x4001682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private HEU_HandleParamBinding _handleParamScaleBinding;

		[Token(Token = "0x4001683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Vector3 _handlePosition;

		[Token(Token = "0x4001684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private Quaternion _handleRotation;

		[Token(Token = "0x4001685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private Vector3 _handleScale;

		[Token(Token = "0x4001686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private HAPI_RSTOrder _rstOrder;

		[Token(Token = "0x4001687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private HAPI_XYZOrder _xyzOrder;

		[Token(Token = "0x4001688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private HAPI_TransformEuler _convertedTransformEuler;

		[Token(Token = "0x170003D3")]
		public string HandleName
		{
			[Token(Token = "0x60020FD")]
			[Address(RVA = "0x12D3804", Offset = "0x12D3804", VA = "0x12D3804")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D4")]
		public HEU_HandleType HandleType
		{
			[Token(Token = "0x60020FE")]
			[Address(RVA = "0x12D380C", Offset = "0x12D380C", VA = "0x12D380C")]
			get
			{
				return default(HEU_HandleType);
			}
		}

		[Token(Token = "0x170003D5")]
		public HAPI_RSTOrder RSTOrder
		{
			[Token(Token = "0x60020FF")]
			[Address(RVA = "0x12D3814", Offset = "0x12D3814", VA = "0x12D3814")]
			get
			{
				return default(HAPI_RSTOrder);
			}
		}

		[Token(Token = "0x170003D6")]
		public HAPI_XYZOrder XYZOrder
		{
			[Token(Token = "0x6002100")]
			[Address(RVA = "0x12D381C", Offset = "0x12D381C", VA = "0x12D381C")]
			get
			{
				return default(HAPI_XYZOrder);
			}
		}

		[Token(Token = "0x170003D7")]
		public HAPI_TransformEuler ConvertedTransformEuler
		{
			[Token(Token = "0x6002101")]
			[Address(RVA = "0x12D3824", Offset = "0x12D3824", VA = "0x12D3824")]
			get
			{
				return default(HAPI_TransformEuler);
			}
		}

		[Token(Token = "0x170003D8")]
		public Vector3 HandlePosition
		{
			[Token(Token = "0x600210B")]
			[Address(RVA = "0x12D38E0", Offset = "0x12D38E0", VA = "0x12D38E0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170003D9")]
		public Quaternion HandleRotation
		{
			[Token(Token = "0x600210C")]
			[Address(RVA = "0x12D38EC", Offset = "0x12D38EC", VA = "0x12D38EC")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x170003DA")]
		public Vector3 HandleScale
		{
			[Token(Token = "0x600210D")]
			[Address(RVA = "0x12D38F8", Offset = "0x12D38F8", VA = "0x12D38F8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6002102")]
		[Address(RVA = "0x12D3838", Offset = "0x12D3838", VA = "0x12D3838")]
		public bool HasTranslateHandle()
		{
			return default(bool);
		}

		[Token(Token = "0x6002103")]
		[Address(RVA = "0x12D3848", Offset = "0x12D3848", VA = "0x12D3848")]
		public bool HasRotateHandle()
		{
			return default(bool);
		}

		[Token(Token = "0x6002104")]
		[Address(RVA = "0x12D3858", Offset = "0x12D3858", VA = "0x12D3858")]
		public bool HasScaleHandle()
		{
			return default(bool);
		}

		[Token(Token = "0x6002105")]
		[Address(RVA = "0x12D3868", Offset = "0x12D3868", VA = "0x12D3868")]
		public bool IsTranslateHandleDisabled()
		{
			return default(bool);
		}

		[Token(Token = "0x6002106")]
		[Address(RVA = "0x12D3888", Offset = "0x12D3888", VA = "0x12D3888")]
		public bool IsRotateHandleDisabled()
		{
			return default(bool);
		}

		[Token(Token = "0x6002107")]
		[Address(RVA = "0x12D38A8", Offset = "0x12D38A8", VA = "0x12D38A8")]
		public bool IsScaleHandleDisabled()
		{
			return default(bool);
		}

		[Token(Token = "0x6002108")]
		[Address(RVA = "0x12D38C8", Offset = "0x12D38C8", VA = "0x12D38C8")]
		public HEU_HandleParamBinding GetTranslateBinding()
		{
			return null;
		}

		[Token(Token = "0x6002109")]
		[Address(RVA = "0x12D38D0", Offset = "0x12D38D0", VA = "0x12D38D0")]
		public HEU_HandleParamBinding GetRotateBinding()
		{
			return null;
		}

		[Token(Token = "0x600210A")]
		[Address(RVA = "0x12D38D8", Offset = "0x12D38D8", VA = "0x12D38D8")]
		public HEU_HandleParamBinding GetScaleBinding()
		{
			return null;
		}

		[Token(Token = "0x600210E")]
		[Address(RVA = "0x12D3904", Offset = "0x12D3904", VA = "0x12D3904")]
		public bool SetupHandle(HEU_SessionBase session, int assetID, int handleIndex, string handleName, HEU_HandleType handleType, ref HAPI_HandleInfo handleInfo, HEU_Parameters parameters)
		{
			return default(bool);
		}

		[Token(Token = "0x600210F")]
		[Address(RVA = "0x12D46FC", Offset = "0x12D46FC", VA = "0x12D46FC")]
		public void CleanUp()
		{
		}

		[Token(Token = "0x6002110")]
		[Address(RVA = "0x12D4118", Offset = "0x12D4118", VA = "0x12D4118")]
		public void GenerateTransform(HEU_SessionBase session, HEU_Parameters parameters)
		{
		}

		[Token(Token = "0x6002111")]
		[Address(RVA = "0x12D4720", Offset = "0x12D4720", VA = "0x12D4720")]
		public bool GetUpdatedPosition(HEU_HoudiniAsset asset, ref Vector3 inPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x6002112")]
		[Address(RVA = "0x12D490C", Offset = "0x12D490C", VA = "0x12D490C")]
		public bool GetUpdatedRotation(HEU_HoudiniAsset asset, ref Quaternion inRotation)
		{
			return default(bool);
		}

		[Token(Token = "0x6002113")]
		[Address(RVA = "0x12D4708", Offset = "0x12D4708", VA = "0x12D4708")]
		public static bool IsSpecialRSTOrder(HAPI_RSTOrder rstOrder)
		{
			return default(bool);
		}

		[Token(Token = "0x6002114")]
		[Address(RVA = "0x12D4B78", Offset = "0x12D4B78", VA = "0x12D4B78")]
		public HEU_Handle()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000450")]
	public class HEU_HandleParamBinding
	{
		[Token(Token = "0x2000694")]
		public enum HEU_HandleParamType
		{
			[Token(Token = "0x4002064")]
			TRANSLATE,
			[Token(Token = "0x4002065")]
			ROTATE,
			[Token(Token = "0x4002066")]
			SCALE
		}

		[Token(Token = "0x4001689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public HEU_HandleParamType _paramType;

		[Token(Token = "0x400168A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int _parmID;

		[Token(Token = "0x400168B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string _paramName;

		[Token(Token = "0x400168C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool _bDisabled;

		[Token(Token = "0x400168D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool[] _boundChannels;

		[Token(Token = "0x6002115")]
		[Address(RVA = "0x12D40B8", Offset = "0x12D40B8", VA = "0x12D40B8")]
		public HEU_HandleParamBinding()
		{
		}
	}
	[Token(Token = "0x2000451")]
	[ExecuteInEditMode]
	public class HEU_PDGAssetLink : MonoBehaviour, ISerializationCallbackReceiver
	{
		[Token(Token = "0x2000695")]
		public enum LinkState
		{
			[Token(Token = "0x4002068")]
			INACTIVE,
			[Token(Token = "0x4002069")]
			LINKING,
			[Token(Token = "0x400206A")]
			LINKED,
			[Token(Token = "0x400206B")]
			ERROR_NOT_LINKED
		}

		[Token(Token = "0x2000696")]
		public delegate void UpdateUIDelegate();

		[Token(Token = "0x400168E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string _assetPath;

		[Token(Token = "0x400168F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _assetGO;

		[Token(Token = "0x4001690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string _assetName;

		[Token(Token = "0x4001691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int _assetID;

		[Token(Token = "0x4001692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private HEU_HoudiniAsset _heu;

		[Token(Token = "0x4001693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private List<HEU_TOPNetworkData> _topNetworks;

		[Token(Token = "0x4001694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string[] _topNetworkNames;

		[Token(Token = "0x4001695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private int _selectedTOPNetwork;

		[Token(Token = "0x4001696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private LinkState _linkState;

		[Token(Token = "0x4001697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool _autoCook;

		[Token(Token = "0x4001698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		public bool _useHEngineData;

		[Token(Token = "0x4001699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public UpdateUIDelegate _repaintUIDelegate;

		[Token(Token = "0x400169A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int _numWorkItems;

		[Token(Token = "0x400169B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public HEU_WorkItemTally _workItemTally;

		[Token(Token = "0x400169C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public GameObject _loadRootGameObject;

		[Token(Token = "0x400169D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private string _outputCachePathRoot;

		[Token(Token = "0x170003DB")]
		public string AssetName
		{
			[Token(Token = "0x6002140")]
			[Address(RVA = "0x16A3BDC", Offset = "0x16A3BDC", VA = "0x16A3BDC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003DC")]
		public int SelectedTOPNetwork
		{
			[Token(Token = "0x6002141")]
			[Address(RVA = "0x16A3BE4", Offset = "0x16A3BE4", VA = "0x16A3BE4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003DD")]
		public LinkState AssetLinkState
		{
			[Token(Token = "0x6002142")]
			[Address(RVA = "0x16A3BEC", Offset = "0x16A3BEC", VA = "0x16A3BEC")]
			get
			{
				return default(LinkState);
			}
		}

		[Token(Token = "0x6002116")]
		[Address(RVA = "0x16A0FF8", Offset = "0x16A0FF8", VA = "0x16A0FF8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002117")]
		[Address(RVA = "0x16A1000", Offset = "0x16A1000", VA = "0x16A1000", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6002118")]
		[Address(RVA = "0x16A1004", Offset = "0x16A1004", VA = "0x16A1004", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6002119")]
		[Address(RVA = "0x16A0FFC", Offset = "0x16A0FFC", VA = "0x16A0FFC")]
		private void HandleInitialLoad()
		{
		}

		[Token(Token = "0x600211A")]
		[Address(RVA = "0x16A1008", Offset = "0x16A1008", VA = "0x16A1008")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600211B")]
		[Address(RVA = "0x16A108C", Offset = "0x16A108C", VA = "0x16A108C")]
		public void Setup(HEU_HoudiniAsset hdaAsset)
		{
		}

		[Token(Token = "0x600211C")]
		[Address(RVA = "0x16A1440", Offset = "0x16A1440", VA = "0x16A1440")]
		private void NotifyAssetCooked(HEU_HoudiniAsset asset, bool bSuccess, List<GameObject> generatedOutputs)
		{
		}

		[Token(Token = "0x600211D")]
		[Address(RVA = "0x16A11E4", Offset = "0x16A11E4", VA = "0x16A11E4")]
		public void Reset()
		{
		}

		[Token(Token = "0x600211E")]
		[Address(RVA = "0x16A11E8", Offset = "0x16A11E8", VA = "0x16A11E8")]
		public void Refresh()
		{
		}

		[Token(Token = "0x600211F")]
		[Address(RVA = "0x16A14E0", Offset = "0x16A14E0", VA = "0x16A14E0")]
		private void PopulateFromHDA()
		{
		}

		[Token(Token = "0x6002120")]
		[Address(RVA = "0x16A18D0", Offset = "0x16A18D0", VA = "0x16A18D0")]
		public bool PopulateTOPNetworks()
		{
			return default(bool);
		}

		[Token(Token = "0x6002121")]
		[Address(RVA = "0x16A2084", Offset = "0x16A2084", VA = "0x16A2084")]
		public static bool PopulateTOPNodes(HEU_SessionBase session, HEU_TOPNetworkData topNetwork, int[] topNodeIDs, bool useHEngineData)
		{
			return default(bool);
		}

		[Token(Token = "0x6002122")]
		[Address(RVA = "0x16A25C4", Offset = "0x16A25C4", VA = "0x16A25C4")]
		public void SelectTOPNetwork(int newIndex)
		{
		}

		[Token(Token = "0x6002123")]
		[Address(RVA = "0x16A2630", Offset = "0x16A2630", VA = "0x16A2630")]
		public void SelectTOPNode(HEU_TOPNetworkData network, int newIndex)
		{
		}

		[Token(Token = "0x6002124")]
		[Address(RVA = "0x16A26A0", Offset = "0x16A26A0", VA = "0x16A26A0")]
		public HEU_TOPNetworkData GetSelectedTOPNetwork()
		{
			return null;
		}

		[Token(Token = "0x6002125")]
		[Address(RVA = "0x16A2730", Offset = "0x16A2730", VA = "0x16A2730")]
		public HEU_TOPNodeData GetSelectedTOPNode()
		{
			return null;
		}

		[Token(Token = "0x6002126")]
		[Address(RVA = "0x16A26A8", Offset = "0x16A26A8", VA = "0x16A26A8")]
		public HEU_TOPNetworkData GetTOPNetwork(int index)
		{
			return null;
		}

		[Token(Token = "0x6002127")]
		[Address(RVA = "0x16A1FAC", Offset = "0x16A1FAC", VA = "0x16A1FAC")]
		public static HEU_TOPNetworkData GetTOPNetworkByName(string name, List<HEU_TOPNetworkData> topNetworks)
		{
			return null;
		}

		[Token(Token = "0x6002128")]
		[Address(RVA = "0x16A23E8", Offset = "0x16A23E8", VA = "0x16A23E8")]
		public static HEU_TOPNodeData GetTOPNodeByName(string name, List<HEU_TOPNodeData> topNodes)
		{
			return null;
		}

		[Token(Token = "0x6002129")]
		[Address(RVA = "0x16A1668", Offset = "0x16A1668", VA = "0x16A1668")]
		private void ClearAllTOPData()
		{
		}

		[Token(Token = "0x600212A")]
		[Address(RVA = "0x16A27C4", Offset = "0x16A27C4", VA = "0x16A27C4")]
		private static void ClearTOPNetworkWorkItemResults(HEU_TOPNetworkData topNetwork)
		{
		}

		[Token(Token = "0x600212B")]
		[Address(RVA = "0x16A24C0", Offset = "0x16A24C0", VA = "0x16A24C0")]
		public static void ClearTOPNodeWorkItemResults(HEU_TOPNodeData topNode)
		{
		}

		[Token(Token = "0x600212C")]
		[Address(RVA = "0x16A2A34", Offset = "0x16A2A34", VA = "0x16A2A34")]
		public static void ClearWorkItemResultByID(HEU_TOPNodeData topNode, int workItemID)
		{
		}

		[Token(Token = "0x600212D")]
		[Address(RVA = "0x16A2B74", Offset = "0x16A2B74", VA = "0x16A2B74")]
		private static void ClearWorkItemResult(HEU_TOPNodeData topNode, HEU_TOPWorkResult result)
		{
		}

		[Token(Token = "0x600212E")]
		[Address(RVA = "0x16A2BFC", Offset = "0x16A2BFC", VA = "0x16A2BFC")]
		public void UpdateTOPNodeResultsVisibility(HEU_TOPNodeData topNode)
		{
		}

		[Token(Token = "0x600212F")]
		[Address(RVA = "0x16A2A5C", Offset = "0x16A2A5C", VA = "0x16A2A5C")]
		private static HEU_TOPWorkResult GetWorkResultByID(HEU_TOPNodeData topNode, int workItemID)
		{
			return null;
		}

		[Token(Token = "0x6002130")]
		[Address(RVA = "0x16A28B0", Offset = "0x16A28B0", VA = "0x16A28B0")]
		private static void DestroyWorkItemResultData(HEU_TOPNodeData topNode, HEU_TOPWorkResult result)
		{
		}

		[Token(Token = "0x6002131")]
		[Address(RVA = "0x16A2C98", Offset = "0x16A2C98", VA = "0x16A2C98")]
		public void DirtyTOPNode(HEU_TOPNodeData topNode)
		{
		}

		[Token(Token = "0x6002132")]
		[Address(RVA = "0x16A2CCC", Offset = "0x16A2CCC", VA = "0x16A2CCC")]
		public void CookTOPNode(HEU_TOPNodeData topNode)
		{
		}

		[Token(Token = "0x6002133")]
		[Address(RVA = "0x16A2D00", Offset = "0x16A2D00", VA = "0x16A2D00")]
		public void DirtyAll()
		{
		}

		[Token(Token = "0x6002134")]
		[Address(RVA = "0x16A146C", Offset = "0x16A146C", VA = "0x16A146C")]
		public void CookOutput()
		{
		}

		[Token(Token = "0x6002135")]
		[Address(RVA = "0x16A2DE0", Offset = "0x16A2DE0", VA = "0x16A2DE0")]
		public void PauseCook()
		{
		}

		[Token(Token = "0x6002136")]
		[Address(RVA = "0x16A2E58", Offset = "0x16A2E58", VA = "0x16A2E58")]
		public void CancelCook()
		{
		}

		[Token(Token = "0x6002137")]
		[Address(RVA = "0x16A1D20", Offset = "0x16A1D20", VA = "0x16A1D20")]
		public HEU_SessionBase GetHAPISession()
		{
			return null;
		}

		[Token(Token = "0x6002138")]
		[Address(RVA = "0x16A2ED0", Offset = "0x16A2ED0", VA = "0x16A2ED0")]
		public void LoadResults(HEU_SessionBase session, HEU_TOPNodeData topNode, HAPI_PDG_WorkitemInfo workItemInfo, HAPI_PDG_WorkitemResultInfo[] resultInfos, int workItemID)
		{
		}

		[Token(Token = "0x6002139")]
		[Address(RVA = "0x16A32D4", Offset = "0x16A32D4", VA = "0x16A32D4")]
		private Transform GetLoadRootTransform()
		{
			return null;
		}

		[Token(Token = "0x600213A")]
		[Address(RVA = "0x16A33B4", Offset = "0x16A33B4", VA = "0x16A33B4")]
		public HEU_TOPNodeData GetTOPNode(int nodeID)
		{
			return null;
		}

		[Token(Token = "0x600213B")]
		[Address(RVA = "0x16A18C0", Offset = "0x16A18C0", VA = "0x16A18C0")]
		public void RepaintUI()
		{
		}

		[Token(Token = "0x600213C")]
		[Address(RVA = "0x16A3764", Offset = "0x16A3764", VA = "0x16A3764")]
		public void UpdateWorkItemTally()
		{
		}

		[Token(Token = "0x600213D")]
		[Address(RVA = "0x16A2D2C", Offset = "0x16A2D2C", VA = "0x16A2D2C")]
		public void ResetTOPNetworkWorkItemTally(HEU_TOPNetworkData topNetwork)
		{
		}

		[Token(Token = "0x600213E")]
		[Address(RVA = "0x16A3B10", Offset = "0x16A3B10", VA = "0x16A3B10")]
		public string GetTOPNodeStatus(HEU_TOPNodeData topNode)
		{
			return null;
		}

		[Token(Token = "0x600213F")]
		[Address(RVA = "0x16A1DBC", Offset = "0x16A1DBC", VA = "0x16A1DBC")]
		private static void ParseHEngineData(HEU_SessionBase session, int topNodeID, ref HAPI_NodeInfo nodeInfo, ref TOPNodeTags nodeTags)
		{
		}

		[Token(Token = "0x6002143")]
		[Address(RVA = "0x16A3BF4", Offset = "0x16A3BF4", VA = "0x16A3BF4")]
		public HEU_PDGAssetLink()
		{
		}
	}
	[Token(Token = "0x2000452")]
	public class TOPNodeTags
	{
		[Token(Token = "0x400169E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool _show;

		[Token(Token = "0x400169F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool _autoload;

		[Token(Token = "0x6002144")]
		[Address(RVA = "0x16D2850", Offset = "0x16D2850", VA = "0x16D2850")]
		public TOPNodeTags()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000453")]
	public class HEU_TOPNetworkData
	{
		[Token(Token = "0x40016A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int _nodeID;

		[Token(Token = "0x40016A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string _nodeName;

		[Token(Token = "0x40016A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<HEU_TOPNodeData> _topNodes;

		[Token(Token = "0x40016A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string[] _topNodeNames;

		[Token(Token = "0x40016A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int _selectedTOPIndex;

		[Token(Token = "0x40016A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string _parentName;

		[Token(Token = "0x40016A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TOPNodeTags _tags;

		[Token(Token = "0x6002145")]
		[Address(RVA = "0x16334A4", Offset = "0x16334A4", VA = "0x16334A4")]
		public HEU_TOPNetworkData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000454")]
	public class HEU_TOPNodeData
	{
		[Token(Token = "0x2000697")]
		public enum PDGState
		{
			[Token(Token = "0x400206D")]
			NONE,
			[Token(Token = "0x400206E")]
			DIRTIED,
			[Token(Token = "0x400206F")]
			DIRTYING,
			[Token(Token = "0x4002070")]
			COOKING,
			[Token(Token = "0x4002071")]
			COOK_COMPLETE,
			[Token(Token = "0x4002072")]
			COOK_FAILED
		}

		[Token(Token = "0x40016A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int _nodeID;

		[Token(Token = "0x40016A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string _nodeName;

		[Token(Token = "0x40016A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string _parentName;

		[Token(Token = "0x40016AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject _workResultParentGO;

		[Token(Token = "0x40016AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<HEU_TOPWorkResult> _workResults;

		[Token(Token = "0x40016AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TOPNodeTags _tags;

		[Token(Token = "0x40016AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool _showResults;

		[Token(Token = "0x40016AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public PDGState _pdgState;

		[Token(Token = "0x40016AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public HEU_WorkItemTally _workItemTally;

		[Token(Token = "0x6002146")]
		[Address(RVA = "0x163354C", Offset = "0x163354C", VA = "0x163354C")]
		public void Reset()
		{
		}

		[Token(Token = "0x6002147")]
		[Address(RVA = "0x163357C", Offset = "0x163357C", VA = "0x163357C")]
		public bool AreAllWorkItemsComplete()
		{
			return default(bool);
		}

		[Token(Token = "0x6002148")]
		[Address(RVA = "0x1633600", Offset = "0x1633600", VA = "0x1633600")]
		public bool AnyWorkItemsFailed()
		{
			return default(bool);
		}

		[Token(Token = "0x6002149")]
		[Address(RVA = "0x1633634", Offset = "0x1633634", VA = "0x1633634")]
		public bool AnyWorkItemsPending()
		{
			return default(bool);
		}

		[Token(Token = "0x600214A")]
		[Address(RVA = "0x16336D0", Offset = "0x16336D0", VA = "0x16336D0")]
		public HEU_TOPNodeData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000455")]
	public class HEU_TOPWorkResult
	{
		[Token(Token = "0x40016B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int _workItemIndex;

		[Token(Token = "0x40016B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int _workItemID;

		[Token(Token = "0x40016B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<GameObject> _generatedGOs;

		[Token(Token = "0x600214B")]
		[Address(RVA = "0x1633790", Offset = "0x1633790", VA = "0x1633790")]
		public HEU_TOPWorkResult()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000456")]
	public class HEU_WorkItemTally
	{
		[Token(Token = "0x40016B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int _totalWorkItems;

		[Token(Token = "0x40016B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int _waitingWorkItems;

		[Token(Token = "0x40016B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int _scheduledWorkItems;

		[Token(Token = "0x40016B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int _cookingWorkItems;

		[Token(Token = "0x40016B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int _cookedWorkItems;

		[Token(Token = "0x40016B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int _erroredWorkItems;

		[Token(Token = "0x600214C")]
		[Address(RVA = "0x1633570", Offset = "0x1633570", VA = "0x1633570")]
		public void ZeroAll()
		{
		}

		[Token(Token = "0x600214D")]
		[Address(RVA = "0x16335C8", Offset = "0x16335C8", VA = "0x16335C8")]
		public bool AreAllWorkItemsComplete()
		{
			return default(bool);
		}

		[Token(Token = "0x600214E")]
		[Address(RVA = "0x1633624", Offset = "0x1633624", VA = "0x1633624")]
		public bool AnyWorkItemsFailed()
		{
			return default(bool);
		}

		[Token(Token = "0x600214F")]
		[Address(RVA = "0x163368C", Offset = "0x163368C", VA = "0x163368C")]
		public bool AnyWorkItemsPending()
		{
			return default(bool);
		}

		[Token(Token = "0x6002150")]
		[Address(RVA = "0x16411F0", Offset = "0x16411F0", VA = "0x16411F0")]
		public string ProgressRatio()
		{
			return null;
		}

		[Token(Token = "0x6002151")]
		[Address(RVA = "0x1633788", Offset = "0x1633788", VA = "0x1633788")]
		public HEU_WorkItemTally()
		{
		}
	}
	[Token(Token = "0x2000457")]
	public class HEU_PDGSession
	{
		[Token(Token = "0x2000698")]
		private enum EventMessageColor
		{
			[Token(Token = "0x4002074")]
			DEFAULT,
			[Token(Token = "0x4002075")]
			WARNING,
			[Token(Token = "0x4002076")]
			ERROR
		}

		[Token(Token = "0x40016B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static HEU_PDGSession _pdgSession;

		[Token(Token = "0x40016BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<HEU_PDGAssetLink> _pdgAssets;

		[Token(Token = "0x40016BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int _pdgMaxProcessEvents;

		[Token(Token = "0x40016BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HAPI_PDG_EventInfo[] _pdgQueryEvents;

		[Token(Token = "0x40016BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int _pdgContextSize;

		[Token(Token = "0x40016BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int[] _pdgContextIDs;

		[Token(Token = "0x40016BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool _errored;

		[Token(Token = "0x40016C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string _errorMsg;

		[Token(Token = "0x40016C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public HAPI_PDG_State _pdgState;

		[Token(Token = "0x40016C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private StringBuilder _pdgEventMessages;

		[Token(Token = "0x40016C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string[] _eventMessageColorCode;

		[Token(Token = "0x6002152")]
		[Address(RVA = "0x16A100C", Offset = "0x16A100C", VA = "0x16A100C")]
		public static HEU_PDGSession GetPDGSession()
		{
			return null;
		}

		[Token(Token = "0x6002153")]
		[Address(RVA = "0x16A3CEC", Offset = "0x16A3CEC", VA = "0x16A3CEC")]
		public HEU_PDGSession()
		{
		}

		[Token(Token = "0x6002154")]
		[Address(RVA = "0x16A3E68", Offset = "0x16A3E68", VA = "0x16A3E68")]
		public void AddAsset(HEU_PDGAssetLink asset)
		{
		}

		[Token(Token = "0x6002155")]
		[Address(RVA = "0x16A1088", Offset = "0x16A1088", VA = "0x16A1088")]
		public void RemoveAsset(HEU_PDGAssetLink asset)
		{
		}

		[Token(Token = "0x6002156")]
		[Address(RVA = "0x16A3E6C", Offset = "0x16A3E6C", VA = "0x16A3E6C")]
		private void Update()
		{
		}

		[Token(Token = "0x6002157")]
		[Address(RVA = "0x16A3E70", Offset = "0x16A3E70", VA = "0x16A3E70")]
		private void CleanUp()
		{
		}

		[Token(Token = "0x6002158")]
		[Address(RVA = "0x16A3F58", Offset = "0x16A3F58", VA = "0x16A3F58")]
		private void UpdatePDGContext()
		{
		}

		[Token(Token = "0x6002159")]
		[Address(RVA = "0x16A3F5C", Offset = "0x16A3F5C", VA = "0x16A3F5C")]
		public void ReinitializePDGContext()
		{
		}

		[Token(Token = "0x600215A")]
		[Address(RVA = "0x16A3F60", Offset = "0x16A3F60", VA = "0x16A3F60")]
		private void ProcessPDGEvent(HEU_SessionBase session, int contextID, ref HAPI_PDG_EventInfo eventInfo)
		{
		}

		[Token(Token = "0x600215B")]
		[Address(RVA = "0x16A3F64", Offset = "0x16A3F64", VA = "0x16A3F64")]
		private bool GetTOPAssetLinkAndNode(int nodeID, out HEU_PDGAssetLink assetLink, out HEU_TOPNodeData topNode)
		{
			return default(bool);
		}

		[Token(Token = "0x600215C")]
		[Address(RVA = "0x16A4074", Offset = "0x16A4074", VA = "0x16A4074")]
		private void SetTOPNodePDGState(HEU_PDGAssetLink assetLink, HEU_TOPNodeData topNode, HEU_TOPNodeData.PDGState pdgState)
		{
		}

		[Token(Token = "0x600215D")]
		[Address(RVA = "0x16A40A4", Offset = "0x16A40A4", VA = "0x16A40A4")]
		private void NotifyTOPNodePDGStateClear(HEU_PDGAssetLink assetLink, HEU_TOPNodeData topNode)
		{
		}

		[Token(Token = "0x600215E")]
		[Address(RVA = "0x16A40F4", Offset = "0x16A40F4", VA = "0x16A40F4")]
		private void NotifyTOPNodeTotalWorkItem(HEU_PDGAssetLink assetLink, HEU_TOPNodeData topNode, int inc)
		{
		}

		[Token(Token = "0x600215F")]
		[Address(RVA = "0x16A41A8", Offset = "0x16A41A8", VA = "0x16A41A8")]
		private void NotifyTOPNodeCookedWorkItem(HEU_PDGAssetLink assetLink, HEU_TOPNodeData topNode)
		{
		}

		[Token(Token = "0x6002160")]
		[Address(RVA = "0x16A41E8", Offset = "0x16A41E8", VA = "0x16A41E8")]
		private void NotifyTOPNodeErrorWorkItem(HEU_PDGAssetLink assetLink, HEU_TOPNodeData topNode)
		{
		}

		[Token(Token = "0x6002161")]
		[Address(RVA = "0x16A4228", Offset = "0x16A4228", VA = "0x16A4228")]
		private void NotifyTOPNodeWaitingWorkItem(HEU_PDGAssetLink assetLink, HEU_TOPNodeData topNode, int inc)
		{
		}

		[Token(Token = "0x6002162")]
		[Address(RVA = "0x16A42DC", Offset = "0x16A42DC", VA = "0x16A42DC")]
		private void NotifyTOPNodeScheduledWorkItem(HEU_PDGAssetLink assetLink, HEU_TOPNodeData topNode, int inc)
		{
		}

		[Token(Token = "0x6002163")]
		[Address(RVA = "0x16A4390", Offset = "0x16A4390", VA = "0x16A4390")]
		private void NotifyTOPNodeCookingWorkItem(HEU_PDGAssetLink assetLink, HEU_TOPNodeData topNode, int inc)
		{
		}

		[Token(Token = "0x6002164")]
		[Address(RVA = "0x16A4444", Offset = "0x16A4444", VA = "0x16A4444")]
		private static void ResetPDGEventInfo(ref HAPI_PDG_EventInfo eventInfo)
		{
		}

		[Token(Token = "0x6002165")]
		[Address(RVA = "0x16A4458", Offset = "0x16A4458", VA = "0x16A4458")]
		private void SetErrorState(string msg, bool bLogIt)
		{
		}

		[Token(Token = "0x6002166")]
		[Address(RVA = "0x16A44EC", Offset = "0x16A44EC", VA = "0x16A44EC")]
		private void ClearErrorState()
		{
		}

		[Token(Token = "0x6002167")]
		[Address(RVA = "0x16A4540", Offset = "0x16A4540", VA = "0x16A4540")]
		public HEU_SessionBase GetHAPIPDGSession(bool bCreate = true)
		{
			return null;
		}

		[Token(Token = "0x6002168")]
		[Address(RVA = "0x16A2DDC", Offset = "0x16A2DDC", VA = "0x16A2DDC")]
		public void CookTOPNetworkOutputNode(HEU_TOPNetworkData topNetwork)
		{
		}

		[Token(Token = "0x6002169")]
		[Address(RVA = "0x16A2E54", Offset = "0x16A2E54", VA = "0x16A2E54")]
		public void PauseCook(HEU_TOPNetworkData topNetwork)
		{
		}

		[Token(Token = "0x600216A")]
		[Address(RVA = "0x16A2ECC", Offset = "0x16A2ECC", VA = "0x16A2ECC")]
		public void CancelCook(HEU_TOPNetworkData topNetwork)
		{
		}

		[Token(Token = "0x600216B")]
		[Address(RVA = "0x16A45CC", Offset = "0x16A45CC", VA = "0x16A45CC")]
		public void ClearWorkItemResult(HEU_SessionBase session, int contextID, HAPI_PDG_EventInfo eventInfo, HEU_TOPNodeData topNode)
		{
		}

		[Token(Token = "0x600216C")]
		[Address(RVA = "0x16A2CC4", Offset = "0x16A2CC4", VA = "0x16A2CC4")]
		public bool DirtyTOPNode(int nodeID)
		{
			return default(bool);
		}

		[Token(Token = "0x600216D")]
		[Address(RVA = "0x16A2CF8", Offset = "0x16A2CF8", VA = "0x16A2CF8")]
		public bool CookTOPNode(int nodeID)
		{
			return default(bool);
		}

		[Token(Token = "0x600216E")]
		[Address(RVA = "0x16A2D24", Offset = "0x16A2D24", VA = "0x16A2D24")]
		public bool DirtyAll(int nodeID)
		{
			return default(bool);
		}

		[Token(Token = "0x600216F")]
		[Address(RVA = "0x16A45D0", Offset = "0x16A45D0", VA = "0x16A45D0")]
		public void AddEventMessage(string msg)
		{
		}

		[Token(Token = "0x6002170")]
		[Address(RVA = "0x16A45EC", Offset = "0x16A45EC", VA = "0x16A45EC")]
		public string GetEventMessages()
		{
			return null;
		}

		[Token(Token = "0x6002171")]
		[Address(RVA = "0x16A460C", Offset = "0x16A460C", VA = "0x16A460C")]
		public void ClearEventMessages()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000458")]
	public sealed class HEU_ParameterData
	{
		[Token(Token = "0x40016C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int _unityIndex;

		[Token(Token = "0x40016C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string _name;

		[Token(Token = "0x40016C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string _labelName;

		[Token(Token = "0x40016C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<int> _childParameterIDs;

		[Token(Token = "0x40016C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int _choiceValue;

		[Token(Token = "0x40016C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int[] _intValues;

		[Token(Token = "0x40016CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float[] _floatValues;

		[Token(Token = "0x40016CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string[] _stringValues;

		[Token(Token = "0x40016CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool _toggle;

		[Token(Token = "0x40016CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Color _color;

		[Token(Token = "0x40016CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Gradient _gradient;

		[Token(Token = "0x40016CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public AnimationCurve _animCurve;

		[Token(Token = "0x40016D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public GUIContent[] _choiceLabels;

		[Token(Token = "0x40016D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public string[] _choiceStringValues;

		[Token(Token = "0x40016D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public int[] _choiceIntValues;

		[Token(Token = "0x40016D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public HAPI_ParmInfo _parmInfo;

		[Token(Token = "0x40016D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public bool _showChildren;

		[Token(Token = "0x40016D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public string _fileTypeInfo;

		[Token(Token = "0x40016D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public int _folderListChildrenProcessed;

		[Token(Token = "0x40016D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		public int _tabSelectedIndex;

		[Token(Token = "0x40016D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public HEU_InputNode _paramInputNode;

		[Token(Token = "0x40016D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public bool _hasAssetPathTag;

		[Token(Token = "0x170003DE")]
		public int ParmID
		{
			[Token(Token = "0x6002172")]
			[Address(RVA = "0x1697C88", Offset = "0x1697C88", VA = "0x1697C88")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003DF")]
		public int ParentID
		{
			[Token(Token = "0x6002173")]
			[Address(RVA = "0x16A462C", Offset = "0x16A462C", VA = "0x16A462C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003E0")]
		public int ChildIndex
		{
			[Token(Token = "0x6002174")]
			[Address(RVA = "0x16A4634", Offset = "0x16A4634", VA = "0x16A4634")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003E1")]
		public int ParmSize
		{
			[Token(Token = "0x6002175")]
			[Address(RVA = "0x16A463C", Offset = "0x16A463C", VA = "0x16A463C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003E2")]
		public int IntMin
		{
			[Token(Token = "0x600217E")]
			[Address(RVA = "0x16A46A8", Offset = "0x16A46A8", VA = "0x16A46A8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003E3")]
		public int IntMax
		{
			[Token(Token = "0x600217F")]
			[Address(RVA = "0x16A471C", Offset = "0x16A471C", VA = "0x16A471C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003E4")]
		public int IntUIMin
		{
			[Token(Token = "0x6002180")]
			[Address(RVA = "0x16A4790", Offset = "0x16A4790", VA = "0x16A4790")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003E5")]
		public int IntUIMax
		{
			[Token(Token = "0x6002181")]
			[Address(RVA = "0x16A4804", Offset = "0x16A4804", VA = "0x16A4804")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003E6")]
		public float FloatMin
		{
			[Token(Token = "0x6002182")]
			[Address(RVA = "0x16A4878", Offset = "0x16A4878", VA = "0x16A4878")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003E7")]
		public float FloatMax
		{
			[Token(Token = "0x6002183")]
			[Address(RVA = "0x16A4880", Offset = "0x16A4880", VA = "0x16A4880")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003E8")]
		public float FloatUIMin
		{
			[Token(Token = "0x6002184")]
			[Address(RVA = "0x16A4888", Offset = "0x16A4888", VA = "0x16A4888")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003E9")]
		public float FloatUIMax
		{
			[Token(Token = "0x6002185")]
			[Address(RVA = "0x16A4890", Offset = "0x16A4890", VA = "0x16A4890")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002176")]
		[Address(RVA = "0x16A4644", Offset = "0x16A4644", VA = "0x16A4644")]
		public bool IsInt()
		{
			return default(bool);
		}

		[Token(Token = "0x6002177")]
		[Address(RVA = "0x16A4654", Offset = "0x16A4654", VA = "0x16A4654")]
		public bool IsFloat()
		{
			return default(bool);
		}

		[Token(Token = "0x6002178")]
		[Address(RVA = "0x16A4664", Offset = "0x16A4664", VA = "0x16A4664")]
		public bool IsString()
		{
			return default(bool);
		}

		[Token(Token = "0x6002179")]
		[Address(RVA = "0x16A4674", Offset = "0x16A4674", VA = "0x16A4674")]
		public bool IsPathFile()
		{
			return default(bool);
		}

		[Token(Token = "0x600217A")]
		[Address(RVA = "0x16A4688", Offset = "0x16A4688", VA = "0x16A4688")]
		public bool HasMin()
		{
			return default(bool);
		}

		[Token(Token = "0x600217B")]
		[Address(RVA = "0x16A4690", Offset = "0x16A4690", VA = "0x16A4690")]
		public bool HasMax()
		{
			return default(bool);
		}

		[Token(Token = "0x600217C")]
		[Address(RVA = "0x16A4698", Offset = "0x16A4698", VA = "0x16A4698")]
		public bool HasUIMin()
		{
			return default(bool);
		}

		[Token(Token = "0x600217D")]
		[Address(RVA = "0x16A46A0", Offset = "0x16A46A0", VA = "0x16A46A0")]
		public bool HasUIMax()
		{
			return default(bool);
		}

		[Token(Token = "0x6002186")]
		[Address(RVA = "0x16A4898", Offset = "0x16A4898", VA = "0x16A4898")]
		public bool IsContainer()
		{
			return default(bool);
		}

		[Token(Token = "0x6002187")]
		[Address(RVA = "0x16A48F4", Offset = "0x16A48F4", VA = "0x16A48F4")]
		public bool IsMultiParam()
		{
			return default(bool);
		}

		[Token(Token = "0x6002188")]
		[Address(RVA = "0x16A4904", Offset = "0x16A4904", VA = "0x16A4904")]
		public bool IsRamp()
		{
			return default(bool);
		}

		[Token(Token = "0x6002189")]
		[Address(RVA = "0x16A4914", Offset = "0x16A4914", VA = "0x16A4914")]
		public bool IsToggle()
		{
			return default(bool);
		}

		[Token(Token = "0x600218A")]
		[Address(RVA = "0x16A4924", Offset = "0x16A4924", VA = "0x16A4924")]
		public bool IsColor()
		{
			return default(bool);
		}

		[Token(Token = "0x600218B")]
		[Address(RVA = "0x16A4934", Offset = "0x16A4934", VA = "0x16A4934")]
		public Vector3 ToVector3()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600218C")]
		[Address(RVA = "0x16A49F8", Offset = "0x16A49F8", VA = "0x16A49F8")]
		public bool IsAssetPath()
		{
			return default(bool);
		}

		[Token(Token = "0x600218D")]
		[Address(RVA = "0x16A4A00", Offset = "0x16A4A00", VA = "0x16A4A00")]
		public HEU_ParameterData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000459")]
	public class HEU_ParameterModifier
	{
		[Token(Token = "0x2000699")]
		public enum ModifierAction
		{
			[Token(Token = "0x4002078")]
			MULTIPARM_INSERT,
			[Token(Token = "0x4002079")]
			MULTIPARM_REMOVE,
			[Token(Token = "0x400207A")]
			MULTIPARM_CLEAR,
			[Token(Token = "0x400207B")]
			SET_FLOAT,
			[Token(Token = "0x400207C")]
			SET_INT
		}

		[Token(Token = "0x40016DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int _parameterIndex;

		[Token(Token = "0x40016DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ModifierAction _action;

		[Token(Token = "0x40016DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int _instanceIndex;

		[Token(Token = "0x40016DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int _modifierValue;

		[Token(Token = "0x40016DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float _floatValue;

		[Token(Token = "0x40016DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int _intValue;

		[Token(Token = "0x600218E")]
		[Address(RVA = "0x16A4A70", Offset = "0x16A4A70", VA = "0x16A4A70")]
		public static HEU_ParameterModifier GetNewModifier(ModifierAction action, int parameterIndex, int instanceIndex, int modifierValue)
		{
			return null;
		}

		[Token(Token = "0x600218F")]
		[Address(RVA = "0x16A4AFC", Offset = "0x16A4AFC", VA = "0x16A4AFC")]
		public HEU_ParameterModifier()
		{
		}
	}
	[Token(Token = "0x200045A")]
	public static class HEU_ParameterUtility
	{
		[Token(Token = "0x6002190")]
		[Address(RVA = "0x16A4B04", Offset = "0x16A4B04", VA = "0x16A4B04")]
		public static bool GetToggle(HEU_HoudiniAsset asset, string paramName, out bool outValue)
		{
			return default(bool);
		}

		[Token(Token = "0x6002191")]
		[Address(RVA = "0x16A4C54", Offset = "0x16A4C54", VA = "0x16A4C54")]
		public static bool SetToggle(HEU_HoudiniAsset asset, string paramName, bool setValue)
		{
			return default(bool);
		}

		[Token(Token = "0x6002192")]
		[Address(RVA = "0x16A4DA0", Offset = "0x16A4DA0", VA = "0x16A4DA0")]
		public static bool GetInt(HEU_HoudiniAsset asset, string paramName, out int outValue)
		{
			return default(bool);
		}

		[Token(Token = "0x6002193")]
		[Address(RVA = "0x16A4EFC", Offset = "0x16A4EFC", VA = "0x16A4EFC")]
		public static bool SetInt(HEU_HoudiniAsset asset, string paramName, int setValue)
		{
			return default(bool);
		}

		[Token(Token = "0x6002194")]
		[Address(RVA = "0x16A5050", Offset = "0x16A5050", VA = "0x16A5050")]
		public static bool GetFloat(HEU_HoudiniAsset asset, string paramName, out float outValue)
		{
			return default(bool);
		}

		[Token(Token = "0x6002195")]
		[Address(RVA = "0x16A51B0", Offset = "0x16A51B0", VA = "0x16A51B0")]
		public static bool GetFloats(HEU_HoudiniAsset asset, string paramName, out float[] outValues)
		{
			return default(bool);
		}

		[Token(Token = "0x6002196")]
		[Address(RVA = "0x16A5314", Offset = "0x16A5314", VA = "0x16A5314")]
		public static bool SetFloat(HEU_HoudiniAsset asset, string paramName, float setValue)
		{
			return default(bool);
		}

		[Token(Token = "0x6002197")]
		[Address(RVA = "0x16A5474", Offset = "0x16A5474", VA = "0x16A5474")]
		public static bool SetFloats(HEU_HoudiniAsset asset, string paramName, float[] setValues)
		{
			return default(bool);
		}

		[Token(Token = "0x6002198")]
		[Address(RVA = "0x16A55BC", Offset = "0x16A55BC", VA = "0x16A55BC")]
		public static bool GetString(HEU_HoudiniAsset asset, string paramName, out string outValue)
		{
			return default(bool);
		}

		[Token(Token = "0x6002199")]
		[Address(RVA = "0x16A5720", Offset = "0x16A5720", VA = "0x16A5720")]
		public static bool SetString(HEU_HoudiniAsset asset, string paramName, string setValue)
		{
			return default(bool);
		}

		[Token(Token = "0x600219A")]
		[Address(RVA = "0x16A5894", Offset = "0x16A5894", VA = "0x16A5894")]
		public static bool SetChoice(HEU_HoudiniAsset asset, string paramName, int setValue)
		{
			return default(bool);
		}

		[Token(Token = "0x600219B")]
		[Address(RVA = "0x16A5A10", Offset = "0x16A5A10", VA = "0x16A5A10")]
		public static bool GetChoice(HEU_HoudiniAsset asset, string paramName, out int outValue)
		{
			return default(bool);
		}

		[Token(Token = "0x600219C")]
		[Address(RVA = "0x16A5B70", Offset = "0x16A5B70", VA = "0x16A5B70")]
		public static bool SetInputNode(HEU_HoudiniAsset asset, string paramName, GameObject obj, int index)
		{
			return default(bool);
		}

		[Token(Token = "0x600219D")]
		[Address(RVA = "0x16A5D38", Offset = "0x16A5D38", VA = "0x16A5D38")]
		public static bool GetInputNode(HEU_HoudiniAsset asset, string paramName, int index, out GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600219E")]
		[Address(RVA = "0x16A5F10", Offset = "0x16A5F10", VA = "0x16A5F10")]
		public static bool GetColor(HEU_HoudiniAsset asset, string paramName, out Color getValue)
		{
			return default(bool);
		}

		[Token(Token = "0x600219F")]
		[Address(RVA = "0x16A606C", Offset = "0x16A606C", VA = "0x16A606C")]
		public static bool SetColor(HEU_HoudiniAsset asset, string paramName, Color setValue)
		{
			return default(bool);
		}

		[Token(Token = "0x60021A0")]
		[Address(RVA = "0x16A61D4", Offset = "0x16A61D4", VA = "0x16A61D4")]
		public static int GetParameterIndexFromName(HEU_SessionBase session, HAPI_ParmInfo[] parameters, string parameterName)
		{
			return default(int);
		}

		[Token(Token = "0x60021A1")]
		[Address(RVA = "0x169A89C", Offset = "0x169A89C", VA = "0x169A89C")]
		public static int GetParameterIndexFromNameOrTag(HEU_SessionBase session, int nodeID, HAPI_ParmInfo[] parameters, string parameterName)
		{
			return default(int);
		}

		[Token(Token = "0x60021A2")]
		[Address(RVA = "0x169ADFC", Offset = "0x169ADFC", VA = "0x169ADFC")]
		public static float GetParameterFloatValue(HEU_SessionBase session, int nodeID, HAPI_ParmInfo[] parameters, string parameterName, float defaultValue)
		{
			return default(float);
		}

		[Token(Token = "0x60021A3")]
		[Address(RVA = "0x169AF04", Offset = "0x169AF04", VA = "0x169AF04")]
		public static Color GetParameterColor3Value(HEU_SessionBase session, int nodeID, HAPI_ParmInfo[] parameters, string parameterName, Color defaultValue)
		{
			return default(Color);
		}
	}
	[Token(Token = "0x200045B")]
	public class HEU_Parameters : ScriptableObject
	{
		[Token(Token = "0x200069A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0E0A8", Offset = "0xA0E0A8")]
		private sealed class <>c__DisplayClass26_0
		{
			[Token(Token = "0x400207D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int parentID;

			[Token(Token = "0x400207E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Predicate<HAPI_ParmInfo> <>9__0;

			[Token(Token = "0x6002C19")]
			[Address(RVA = "0x149F750", Offset = "0x149F750", VA = "0x149F750")]
			public <>c__DisplayClass26_0()
			{
			}

			[Token(Token = "0x6002C1A")]
			[Address(RVA = "0x14A21B0", Offset = "0x14A21B0", VA = "0x14A21B0")]
			internal bool <Initialize>b__0(HAPI_ParmInfo p)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40016E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int _nodeID;

		[Token(Token = "0x40016E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string _uiLabel;

		[Token(Token = "0x40016E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int[] _paramInts;

		[Token(Token = "0x40016E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float[] _paramFloats;

		[Token(Token = "0x40016E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string[] _paramStrings;

		[Token(Token = "0x40016E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public HAPI_ParmChoiceInfo[] _paramChoices;

		[Token(Token = "0x40016E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private List<int> _rootParameters;

		[Token(Token = "0x40016E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private List<HEU_ParameterData> _parameterList;

		[Token(Token = "0x40016E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private List<HEU_ParameterModifier> _parameterModifiers;

		[Token(Token = "0x40016E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private bool _regenerateParameters;

		[Token(Token = "0x40016EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private byte[] _presetData;

		[Token(Token = "0x40016EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private byte[] _defaultPresetData;

		[Token(Token = "0x40016EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _validParameters;

		[Token(Token = "0x40016ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		[SerializeField]
		private bool _showParameters;

		[Token(Token = "0x40016EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
		private bool _recacheUI;

		[Token(Token = "0x170003EA")]
		public bool RequiresRegeneration
		{
			[Token(Token = "0x60021A4")]
			[Address(RVA = "0x149DBD8", Offset = "0x149DBD8", VA = "0x149DBD8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60021A5")]
			[Address(RVA = "0x149DBE0", Offset = "0x149DBE0", VA = "0x149DBE0")]
			set
			{
			}
		}

		[Token(Token = "0x170003EB")]
		public bool RecacheUI
		{
			[Token(Token = "0x60021AA")]
			[Address(RVA = "0x149DC0C", Offset = "0x149DC0C", VA = "0x149DC0C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60021AB")]
			[Address(RVA = "0x149DC14", Offset = "0x149DC14", VA = "0x149DC14")]
			set
			{
			}
		}

		[Token(Token = "0x60021A6")]
		[Address(RVA = "0x149DBEC", Offset = "0x149DBEC", VA = "0x149DBEC")]
		public byte[] GetPresetData()
		{
			return null;
		}

		[Token(Token = "0x60021A7")]
		[Address(RVA = "0x149DBF4", Offset = "0x149DBF4", VA = "0x149DBF4")]
		public void SetPresetData(byte[] data)
		{
		}

		[Token(Token = "0x60021A8")]
		[Address(RVA = "0x149DBFC", Offset = "0x149DBFC", VA = "0x149DBFC")]
		public byte[] GetDefaultPresetData()
		{
			return null;
		}

		[Token(Token = "0x60021A9")]
		[Address(RVA = "0x149DC04", Offset = "0x149DC04", VA = "0x149DC04")]
		public bool AreParametersValid()
		{
			return default(bool);
		}

		[Token(Token = "0x60021AC")]
		[Address(RVA = "0x149DC20", Offset = "0x149DC20", VA = "0x149DC20")]
		public void CleanUp()
		{
		}

		[Token(Token = "0x60021AD")]
		[Address(RVA = "0x149DDFC", Offset = "0x149DDFC", VA = "0x149DDFC")]
		public bool Initialize(HEU_SessionBase session, int nodeID, ref HAPI_NodeInfo nodeInfo, Dictionary<string, HEU_ParameterData> previousParamFolders, Dictionary<string, HEU_InputNode> previousParamInputNodes, HEU_HoudiniAsset parentAsset)
		{
			return default(bool);
		}

		[Token(Token = "0x60021AE")]
		[Address(RVA = "0x149F7E0", Offset = "0x149F7E0", VA = "0x149F7E0")]
		public void SetupRampParameter(HEU_ParameterData rampParameter)
		{
		}

		[Token(Token = "0x60021AF")]
		[Address(RVA = "0x149FBA0", Offset = "0x149FBA0", VA = "0x149FBA0")]
		public List<HEU_ParameterData> GetParameters()
		{
			return null;
		}

		[Token(Token = "0x60021B0")]
		[Address(RVA = "0x149F758", Offset = "0x149F758", VA = "0x149F758")]
		public HEU_ParameterData GetParameter(int listIndex)
		{
			return null;
		}

		[Token(Token = "0x60021B1")]
		[Address(RVA = "0x149FBA8", Offset = "0x149FBA8", VA = "0x149FBA8")]
		public HEU_ParameterData GetParameter(string name)
		{
			return null;
		}

		[Token(Token = "0x60021B2")]
		[Address(RVA = "0x149FCD4", Offset = "0x149FCD4", VA = "0x149FCD4")]
		public HEU_ParameterData GetParameterWithParmID(int parmID)
		{
			return null;
		}

		[Token(Token = "0x60021B3")]
		[Address(RVA = "0x149FDF4", Offset = "0x149FDF4", VA = "0x149FDF4")]
		public void RemoveParameter(int listIndex)
		{
		}

		[Token(Token = "0x60021B4")]
		[Address(RVA = "0x149FE7C", Offset = "0x149FE7C", VA = "0x149FE7C")]
		public int GetChosenIndexFromChoiceList(HEU_ParameterData inChoiceParameter)
		{
			return default(int);
		}

		[Token(Token = "0x60021B5")]
		[Address(RVA = "0x149FF30", Offset = "0x149FF30", VA = "0x149FF30")]
		public string GetStringFromParameter(string paramName)
		{
			return null;
		}

		[Token(Token = "0x60021B6")]
		[Address(RVA = "0x149FF9C", Offset = "0x149FF9C", VA = "0x149FF9C")]
		public void SetStringToParameter(string paramName, string value)
		{
		}

		[Token(Token = "0x60021B7")]
		[Address(RVA = "0x14A0028", Offset = "0x14A0028", VA = "0x14A0028")]
		public bool HaveParametersChanged()
		{
			return default(bool);
		}

		[Token(Token = "0x60021B8")]
		[Address(RVA = "0x14A04C8", Offset = "0x14A04C8", VA = "0x14A04C8")]
		public bool UploadValuesToHoudini(HEU_SessionBase session, HEU_HoudiniAsset parentAsset, bool bDoCheck = true, bool bForceUploadInputs = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60021B9")]
		[Address(RVA = "0x14A0E28", Offset = "0x14A0E28", VA = "0x14A0E28")]
		public void InsertInstanceToMultiParm(int unityParamIndex, int instanceIndex, int numInstancesToAdd)
		{
		}

		[Token(Token = "0x60021BA")]
		[Address(RVA = "0x14A0EBC", Offset = "0x14A0EBC", VA = "0x14A0EBC")]
		public void RemoveInstancesFromMultiParm(int unityParamIndex, int instanceIndex, int numInstancesToRemove)
		{
		}

		[Token(Token = "0x60021BB")]
		[Address(RVA = "0x14A0F50", Offset = "0x14A0F50", VA = "0x14A0F50")]
		public void ClearInstancesFromMultiParm(int unityParamIndex)
		{
		}

		[Token(Token = "0x60021BC")]
		[Address(RVA = "0x14A0FD4", Offset = "0x14A0FD4", VA = "0x14A0FD4")]
		public bool HasModifiersPending()
		{
			return default(bool);
		}

		[Token(Token = "0x60021BD")]
		[Address(RVA = "0x14A102C", Offset = "0x14A102C", VA = "0x14A102C")]
		public void ProcessModifiers(HEU_SessionBase session)
		{
		}

		[Token(Token = "0x60021BE")]
		[Address(RVA = "0x14A16A0", Offset = "0x14A16A0", VA = "0x14A16A0")]
		public void GetParameterDataForUIRestore(Dictionary<string, HEU_ParameterData> folderParams, Dictionary<string, HEU_InputNode> inputNodeParams)
		{
		}

		[Token(Token = "0x60021BF")]
		[Address(RVA = "0x14A181C", Offset = "0x14A181C", VA = "0x14A181C")]
		public void GetInputNodeConnectionObjects(List<GameObject> inputNodeObjects)
		{
		}

		[Token(Token = "0x60021C0")]
		[Address(RVA = "0x14A1820", Offset = "0x14A1820", VA = "0x14A1820")]
		public void DownloadPresetData(HEU_SessionBase session)
		{
		}

		[Token(Token = "0x60021C1")]
		[Address(RVA = "0x14A1874", Offset = "0x14A1874", VA = "0x14A1874")]
		public void UploadPresetData(HEU_SessionBase session)
		{
		}

		[Token(Token = "0x60021C2")]
		[Address(RVA = "0x14A18B4", Offset = "0x14A18B4", VA = "0x14A18B4")]
		public void DownloadAsDefaultPresetData(HEU_SessionBase session)
		{
		}

		[Token(Token = "0x60021C3")]
		[Address(RVA = "0x14A1908", Offset = "0x14A1908", VA = "0x14A1908")]
		public void UploadParameterInputs(HEU_SessionBase session, HEU_HoudiniAsset parentAsset, bool bForceUpdate)
		{
		}

		[Token(Token = "0x60021C4")]
		[Address(RVA = "0x14A1AAC", Offset = "0x14A1AAC", VA = "0x14A1AAC")]
		public void UpdateTransformParameters(HEU_SessionBase session, ref HAPI_TransformEuler HAPITransform)
		{
		}

		[Token(Token = "0x60021C5")]
		[Address(RVA = "0x14A1B3C", Offset = "0x14A1B3C", VA = "0x14A1B3C")]
		public void SyncParameterFromHoudini(HEU_SessionBase session, string parameterName)
		{
		}

		[Token(Token = "0x60021C6")]
		[Address(RVA = "0x14A1C04", Offset = "0x14A1C04", VA = "0x14A1C04")]
		public void SyncInternalParametersForUndoCompare(HEU_SessionBase session)
		{
		}

		[Token(Token = "0x60021C7")]
		[Address(RVA = "0x14A1FA4", Offset = "0x14A1FA4", VA = "0x14A1FA4")]
		public void ResetAllToDefault(HEU_SessionBase session)
		{
		}

		[Token(Token = "0x60021C8")]
		[Address(RVA = "0x14A20D8", Offset = "0x14A20D8", VA = "0x14A20D8")]
		public HEU_Parameters()
		{
		}
	}
	[Token(Token = "0x200045C")]
	public class HEU_MaterialData : ScriptableObject
	{
		[Token(Token = "0x200069B")]
		public enum Source
		{
			[Token(Token = "0x4002080")]
			DEFAULT,
			[Token(Token = "0x4002081")]
			HOUDINI,
			[Token(Token = "0x4002082")]
			UNITY,
			[Token(Token = "0x4002083")]
			SUBSTANCE
		}

		[Token(Token = "0x40016EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material _material;

		[Token(Token = "0x40016F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Source _materialSource;

		[Token(Token = "0x40016F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int _materialKey;

		[Token(Token = "0x60021C9")]
		[Address(RVA = "0x169A2D8", Offset = "0x169A2D8", VA = "0x169A2D8")]
		public bool IsExistingMaterial()
		{
			return default(bool);
		}

		[Token(Token = "0x60021CA")]
		[Address(RVA = "0x169A2EC", Offset = "0x169A2EC", VA = "0x169A2EC")]
		public void UpdateMaterialFromHoudini(HAPI_MaterialInfo materialInfo, string assetCacheFolderPath)
		{
		}

		[Token(Token = "0x60021CB")]
		[Address(RVA = "0x169A910", Offset = "0x169A910", VA = "0x169A910")]
		public static string GetTextureFileNameFromMaterialParam(HEU_SessionBase session, int nodeID, HAPI_ParmInfo parmInfo)
		{
			return null;
		}

		[Token(Token = "0x60021CC")]
		[Address(RVA = "0x169A7A8", Offset = "0x169A7A8", VA = "0x169A7A8")]
		public static bool IsTransparentMaterial(HEU_SessionBase session, int nodeID, HAPI_ParmInfo[] parameters)
		{
			return default(bool);
		}

		[Token(Token = "0x60021CD")]
		[Address(RVA = "0x169B0BC", Offset = "0x169B0BC", VA = "0x169B0BC")]
		public static string GetSupportedFileFormat(HEU_SessionBase session, ref HAPI_ImageInfo imageInfo)
		{
			return null;
		}

		[Token(Token = "0x60021CE")]
		[Address(RVA = "0x169B1C4", Offset = "0x169B1C4", VA = "0x169B1C4")]
		public HEU_MaterialData()
		{
		}
	}
	[Token(Token = "0x200045D")]
	public static class HEU_MaterialFactory
	{
		[Token(Token = "0x40016F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Material _defaultStandardMaterial;

		[Token(Token = "0x60021CF")]
		[Address(RVA = "0x169B1D4", Offset = "0x169B1D4", VA = "0x169B1D4")]
		public static Shader FindShader(string shaderName)
		{
			return null;
		}

		[Token(Token = "0x60021D0")]
		[Address(RVA = "0x169A828", Offset = "0x169A828", VA = "0x169A828")]
		public static Shader FindPluginShader(string shaderName)
		{
			return null;
		}

		[Token(Token = "0x60021D1")]
		[Address(RVA = "0x169B248", Offset = "0x169B248", VA = "0x169B248")]
		public static Material GetNewMaterialWithShader(string assetCacheFolderPath, string shaderName, string materialName = "", bool bWriteToFile = true)
		{
			return null;
		}

		[Token(Token = "0x60021D2")]
		[Address(RVA = "0x169B45C", Offset = "0x169B45C", VA = "0x169B45C")]
		public static Material CreateNewHoudiniStandardMaterial(string assetCacheFolderPath, string materialName, bool bWriteToFile)
		{
			return null;
		}

		[Token(Token = "0x60021D3")]
		[Address(RVA = "0x169B4A0", Offset = "0x169B4A0", VA = "0x169B4A0")]
		public static void WriteMaterialToAssetCache(Material material, string assetCacheFolderPath, string materialName)
		{
		}

		[Token(Token = "0x60021D4")]
		[Address(RVA = "0x169B568", Offset = "0x169B568", VA = "0x169B568")]
		public static bool DoesMaterialExistInAssetCache(Material material)
		{
			return default(bool);
		}

		[Token(Token = "0x60021D5")]
		[Address(RVA = "0x169B590", Offset = "0x169B590", VA = "0x169B590")]
		public static void DestroyNonAssetMaterial(Material material, bool bRegisterUndo)
		{
		}

		[Token(Token = "0x60021D6")]
		[Address(RVA = "0x169B640", Offset = "0x169B640", VA = "0x169B640")]
		public static void DeleteAssetMaterial(Material material)
		{
		}

		[Token(Token = "0x60021D7")]
		[Address(RVA = "0x169AAD8", Offset = "0x169AAD8", VA = "0x169AAD8")]
		public static Texture2D RenderAndExtractImageToTexture(HEU_SessionBase session, HAPI_MaterialInfo materialInfo, int textureParmID, string textureName, string assetCacheFolderPath)
		{
			return null;
		}

		[Token(Token = "0x60021D8")]
		[Address(RVA = "0x169B980", Offset = "0x169B980", VA = "0x169B980")]
		private static Texture2D ExtractHoudiniImageToTexturePNGJPEG(HEU_SessionBase session, HAPI_MaterialInfo materialInfo, string imagePlanes)
		{
			return null;
		}

		[Token(Token = "0x60021D9")]
		[Address(RVA = "0x169B648", Offset = "0x169B648", VA = "0x169B648")]
		private static Texture2D ExtractHoudiniImageToTextureRaw(HEU_SessionBase session, HAPI_MaterialInfo materialInfo, string imagePlanes)
		{
			return null;
		}

		[Token(Token = "0x60021DA")]
		[Address(RVA = "0x169BAB8", Offset = "0x169BAB8", VA = "0x169BAB8")]
		public static Texture2D ExtractHoudiniImageToTextureFile(HEU_SessionBase session, HAPI_MaterialInfo materialInfo, string imagePlanes, string assetCacheFolderPath)
		{
			return null;
		}

		[Token(Token = "0x60021DB")]
		[Address(RVA = "0x169BC58", Offset = "0x169BC58", VA = "0x169BC58")]
		public static Material LoadUnityMaterial(string materialPath)
		{
			return null;
		}

		[Token(Token = "0x60021DC")]
		[Address(RVA = "0x169BEC4", Offset = "0x169BEC4", VA = "0x169BEC4")]
		public static Material LoadSubstanceMaterialWithName(string materialPath, string substanceName)
		{
			return null;
		}

		[Token(Token = "0x60021DD")]
		[Address(RVA = "0x169C108", Offset = "0x169C108", VA = "0x169C108")]
		public static Material LoadSubstanceMaterialWithIndex(string materialPath, int substanceMaterialIndex)
		{
			return null;
		}

		[Token(Token = "0x60021DE")]
		[Address(RVA = "0x169C3DC", Offset = "0x169C3DC", VA = "0x169C3DC")]
		public static int GetUnitySubstanceMaterialKey(string unityMaterialPath, string substanceName, int substanceIndex)
		{
			return default(int);
		}

		[Token(Token = "0x60021DF")]
		[Address(RVA = "0x169C4EC", Offset = "0x169C4EC", VA = "0x169C4EC")]
		public static int MaterialNameToKey(string materialName)
		{
			return default(int);
		}

		[Token(Token = "0x60021E0")]
		[Address(RVA = "0x169C508", Offset = "0x169C508", VA = "0x169C508")]
		public static void EnableGPUInstancing(Material material)
		{
		}

		[Token(Token = "0x60021E1")]
		[Address(RVA = "0x169C524", Offset = "0x169C524", VA = "0x169C524")]
		public static bool MaterialHasGPUInstancingEnabled(Material material)
		{
			return default(bool);
		}

		[Token(Token = "0x60021E2")]
		[Address(RVA = "0x169C53C", Offset = "0x169C53C", VA = "0x169C53C")]
		public static Material CopyMaterial(Material material)
		{
			return null;
		}

		[Token(Token = "0x60021E3")]
		[Address(RVA = "0x169C5A0", Offset = "0x169C5A0", VA = "0x169C5A0")]
		public static Material GetDefaultStandardMaterial()
		{
			return null;
		}

		[Token(Token = "0x60021E4")]
		[Address(RVA = "0x169C658", Offset = "0x169C658", VA = "0x169C658")]
		public static Texture2D LoadTexture(string path)
		{
			return null;
		}

		[Token(Token = "0x60021E5")]
		[Address(RVA = "0x169C774", Offset = "0x169C774", VA = "0x169C774")]
		public static Texture2D WhiteTexture()
		{
			return null;
		}

		[Token(Token = "0x60021E6")]
		[Address(RVA = "0x169C77C", Offset = "0x169C77C", VA = "0x169C77C")]
		public static HEU_MaterialData CreateUnitySubstanceMaterialData(int materialKey, string materialPath, string substanceName, int substanceIndex, List<HEU_MaterialData> materialCache, string assetCacheFolderPath)
		{
			return null;
		}

		[Token(Token = "0x60021E7")]
		[Address(RVA = "0x169CABC", Offset = "0x169CABC", VA = "0x169CABC")]
		public static HEU_MaterialData CreateMaterialInCache(int materialKey, string materialName, HEU_MaterialData.Source sourceType, bool bWriteToFile, List<HEU_MaterialData> materialCache, string assetCacheFolderPath)
		{
			return null;
		}

		[Token(Token = "0x60021E8")]
		[Address(RVA = "0x169CBD4", Offset = "0x169CBD4", VA = "0x169CBD4")]
		public static HEU_MaterialData GetOrCreateDefaultMaterialInCache(HEU_SessionBase session, int geoID, int partID, bool bWriteToFile, List<HEU_MaterialData> materialCache, string assetCacheFolderPath)
		{
			return null;
		}

		[Token(Token = "0x60021E9")]
		[Address(RVA = "0x169CD74", Offset = "0x169CD74", VA = "0x169CD74")]
		public static HEU_MaterialData GetMaterialDataFromCache(int materialKey, List<HEU_MaterialData> materialCache)
		{
			return null;
		}

		[Token(Token = "0x60021EA")]
		[Address(RVA = "0x169CCD0", Offset = "0x169CCD0", VA = "0x169CCD0")]
		public static string GenerateDefaultMaterialName(int geoID, int partID)
		{
			return null;
		}

		[Token(Token = "0x60021EB")]
		[Address(RVA = "0x169CE88", Offset = "0x169CE88", VA = "0x169CE88")]
		public static HEU_MaterialData CreateHoudiniMaterialData(HEU_SessionBase session, int assetID, int materialID, int geoID, int partID, List<HEU_MaterialData> materialCache, string assetCacheFolderPath)
		{
			return null;
		}

		[Token(Token = "0x60021EC")]
		[Address(RVA = "0x169D01C", Offset = "0x169D01C", VA = "0x169D01C")]
		public static Dictionary<int, HEU_MaterialData> GetMaterialDataMapFromCache(List<HEU_MaterialData> materialCache)
		{
			return null;
		}
	}
	[Token(Token = "0x200045E")]
	public class HEU_UnityMaterialInfo
	{
		[Token(Token = "0x40016F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string _unityMaterialPath;

		[Token(Token = "0x40016F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string _substancePath;

		[Token(Token = "0x40016F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int _substanceIndex;

		[Token(Token = "0x60021ED")]
		[Address(RVA = "0x163D4CC", Offset = "0x163D4CC", VA = "0x163D4CC")]
		public HEU_UnityMaterialInfo(string unityMaterialPath, string substancePath, int substanceIndex)
		{
		}
	}
	[Token(Token = "0x200045F")]
	public class HEU_SessionBase
	{
		[Token(Token = "0x40016F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected HEU_SessionData _sessionData;

		[Token(Token = "0x40016F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA200A4", Offset = "0xA200A4")]
		private bool <UserNotifiedSessionInvalid>k__BackingField;

		[Token(Token = "0x40016F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string _sessionErrorMsg;

		[Token(Token = "0x40016F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA200B4", Offset = "0xA200B4")]
		private bool <LogErrorOverride>k__BackingField;

		[Token(Token = "0x40016FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA200C4", Offset = "0xA200C4")]
		private bool <ThrowErrorOverride>k__BackingField;

		[Token(Token = "0x40016FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA200D4", Offset = "0xA200D4")]
		private HAPI_Result <LastCallResultCode>k__BackingField;

		[Token(Token = "0x170003EC")]
		public bool UserNotifiedSessionInvalid
		{
			[Token(Token = "0x60021EE")]
			[Address(RVA = "0x14B0434", Offset = "0x14B0434", VA = "0x14B0434")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2E9F0", Offset = "0xA2E9F0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60021EF")]
			[Address(RVA = "0x14B043C", Offset = "0x14B043C", VA = "0x14B043C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2EA00", Offset = "0xA2EA00")]
			set
			{
			}
		}

		[Token(Token = "0x170003ED")]
		public SessionConnectionState ConnectionState
		{
			[Token(Token = "0x60021F0")]
			[Address(RVA = "0x14B0448", Offset = "0x14B0448", VA = "0x14B0448")]
			get
			{
				return default(SessionConnectionState);
			}
			[Token(Token = "0x60021F1")]
			[Address(RVA = "0x14B0460", Offset = "0x14B0460", VA = "0x14B0460")]
			set
			{
			}
		}

		[Token(Token = "0x170003EE")]
		public SessionMode ThisSessionMode
		{
			[Token(Token = "0x60021F2")]
			[Address(RVA = "0x14B0470", Offset = "0x14B0470", VA = "0x14B0470")]
			get
			{
				return default(SessionMode);
			}
			[Token(Token = "0x60021F3")]
			[Address(RVA = "0x14B0488", Offset = "0x14B0488", VA = "0x14B0488")]
			set
			{
			}
		}

		[Token(Token = "0x170003EF")]
		public bool LogErrorOverride
		{
			[Token(Token = "0x60021F5")]
			[Address(RVA = "0x14B04A0", Offset = "0x14B04A0", VA = "0x14B04A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2EA10", Offset = "0xA2EA10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60021F6")]
			[Address(RVA = "0x14B04A8", Offset = "0x14B04A8", VA = "0x14B04A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2EA20", Offset = "0xA2EA20")]
			set
			{
			}
		}

		[Token(Token = "0x170003F0")]
		public bool ThrowErrorOverride
		{
			[Token(Token = "0x60021F7")]
			[Address(RVA = "0x14B04B4", Offset = "0x14B04B4", VA = "0x14B04B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2EA30", Offset = "0xA2EA30")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60021F8")]
			[Address(RVA = "0x14B04BC", Offset = "0x14B04BC", VA = "0x14B04BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2EA40", Offset = "0xA2EA40")]
			set
			{
			}
		}

		[Token(Token = "0x170003F1")]
		public HAPI_Result LastCallResultCode
		{
			[Token(Token = "0x60021FA")]
			[Address(RVA = "0x14B04F8", Offset = "0x14B04F8", VA = "0x14B04F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2EA50", Offset = "0xA2EA50")]
			get
			{
				return default(HAPI_Result);
			}
			[Token(Token = "0x60021FB")]
			[Address(RVA = "0x14B0500", Offset = "0x14B0500", VA = "0x14B0500")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2EA60", Offset = "0xA2EA60")]
			set
			{
			}
		}

		[Token(Token = "0x60021F4")]
		[Address(RVA = "0x14B0498", Offset = "0x14B0498", VA = "0x14B0498")]
		public string GetSessionErrorMsg()
		{
			return null;
		}

		[Token(Token = "0x60021F9")]
		[Address(RVA = "0x14B04C8", Offset = "0x14B04C8", VA = "0x14B04C8")]
		public bool IsSessionSync()
		{
			return default(bool);
		}

		[Token(Token = "0x60021FC")]
		[Address(RVA = "0x14B0508", Offset = "0x14B0508", VA = "0x14B0508", Slot = "4")]
		public virtual HEU_HoudiniAsset GetRegisteredAssetFromID(int id)
		{
			return null;
		}

		[Token(Token = "0x60021FD")]
		[Address(RVA = "0x14B0510", Offset = "0x14B0510", VA = "0x14B0510", Slot = "5")]
		public virtual bool IsAssetRegistered(HEU_HoudiniAsset asset)
		{
			return default(bool);
		}

		[Token(Token = "0x60021FE")]
		[Address(RVA = "0x14B0518", Offset = "0x14B0518", VA = "0x14B0518", Slot = "6")]
		public virtual void RegisterAsset(HEU_HoudiniAsset asset)
		{
		}

		[Token(Token = "0x60021FF")]
		[Address(RVA = "0x14B051C", Offset = "0x14B051C", VA = "0x14B051C", Slot = "7")]
		public virtual void UnregisterAsset(int id)
		{
		}

		[Token(Token = "0x6002200")]
		[Address(RVA = "0x14B0520", Offset = "0x14B0520", VA = "0x14B0520", Slot = "8")]
		public virtual void ReregisterOnAwake(HEU_HoudiniAsset asset)
		{
		}

		[Token(Token = "0x6002201")]
		[Address(RVA = "0x14B0524", Offset = "0x14B0524", VA = "0x14B0524")]
		public HEU_SessionBase()
		{
		}

		[Token(Token = "0x6002202")]
		[Address(RVA = "0x14B0550", Offset = "0x14B0550", VA = "0x14B0550", Slot = "9")]
		public virtual void SetSessionErrorMsg(string msg, bool bLogError = false)
		{
		}

		[Token(Token = "0x6002203")]
		[Address(RVA = "0x14B05E8", Offset = "0x14B05E8", VA = "0x14B05E8", Slot = "10")]
		public virtual void SetSessionConnectionErrorMsg(string introMsg, HAPI_Result result, bool bIsHARSRunning, bool bLogError = false)
		{
		}

		[Token(Token = "0x6002204")]
		[Address(RVA = "0x14B085C", Offset = "0x14B085C", VA = "0x14B085C", Slot = "11")]
		public virtual void SetLibraryErrorMsg(bool bLogError = false)
		{
		}

		[Token(Token = "0x6002205")]
		[Address(RVA = "0x14B0904", Offset = "0x14B0904", VA = "0x14B0904", Slot = "12")]
		protected virtual bool CreateSessionData(bool bOverwriteExisting, bool bIsDefaultSession)
		{
			return default(bool);
		}

		[Token(Token = "0x6002206")]
		[Address(RVA = "0x14B090C", Offset = "0x14B090C", VA = "0x14B090C", Slot = "13")]
		public virtual bool CreateInProcessSession(bool bIsDefaultSession)
		{
			return default(bool);
		}

		[Token(Token = "0x6002207")]
		[Address(RVA = "0x14B0914", Offset = "0x14B0914", VA = "0x14B0914", Slot = "14")]
		public virtual bool CreateThriftSocketSession(bool bIsDefaultSession, string hostName = "localhost", int serverPort = 9090, bool autoClose = true, float timeout = 10000f, bool bLogError = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6002208")]
		[Address(RVA = "0x14B091C", Offset = "0x14B091C", VA = "0x14B091C", Slot = "15")]
		public virtual bool CreateThriftPipeSession(bool bIsDefaultSession, string pipeName = "hapi", bool autoClose = true, float timeout = 10000f, bool bLogError = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6002209")]
		[Address(RVA = "0x14B0924", Offset = "0x14B0924", VA = "0x14B0924", Slot = "16")]
		public virtual bool CreateCustomSession(bool bIsDefaultSession)
		{
			return default(bool);
		}

		[Token(Token = "0x600220A")]
		[Address(RVA = "0x14B092C", Offset = "0x14B092C", VA = "0x14B092C", Slot = "17")]
		public virtual bool ConnectThriftSocketSession(bool bIsDefaultSession, string hostName = "localhost", int serverPort = 9090, bool autoClose = true, float timeout = 10000f, bool logError = true, bool autoInitialize = true)
		{
			return default(bool);
		}

		[Token(Token = "0x600220B")]
		[Address(RVA = "0x14B0934", Offset = "0x14B0934", VA = "0x14B0934", Slot = "18")]
		public virtual bool ConnectThriftPipeSession(bool bIsDefaultSession, string pipeName = "hapi", bool autoClose = true, float timeout = 10000f, bool logError = true, bool autoInitialize = true)
		{
			return default(bool);
		}

		[Token(Token = "0x600220C")]
		[Address(RVA = "0x14B093C", Offset = "0x14B093C", VA = "0x14B093C", Slot = "19")]
		public virtual bool CloseSession()
		{
			return default(bool);
		}

		[Token(Token = "0x600220D")]
		[Address(RVA = "0x14B0944", Offset = "0x14B0944", VA = "0x14B0944", Slot = "20")]
		protected virtual bool CheckAndCloseExistingSession()
		{
			return default(bool);
		}

		[Token(Token = "0x600220E")]
		[Address(RVA = "0x14B094C", Offset = "0x14B094C", VA = "0x14B094C", Slot = "21")]
		protected virtual void ClearSessionInfo()
		{
		}

		[Token(Token = "0x600220F")]
		[Address(RVA = "0x14B0988", Offset = "0x14B0988", VA = "0x14B0988")]
		public void SetSessionData(HEU_SessionData sessionData)
		{
		}

		[Token(Token = "0x6002210")]
		[Address(RVA = "0x14B0990", Offset = "0x14B0990", VA = "0x14B0990")]
		public HEU_SessionData GetSessionData()
		{
			return null;
		}

		[Token(Token = "0x6002211")]
		[Address(RVA = "0x14B0998", Offset = "0x14B0998", VA = "0x14B0998", Slot = "22")]
		public virtual string GetSessionInfo()
		{
			return null;
		}

		[Token(Token = "0x6002212")]
		[Address(RVA = "0x14B09E0", Offset = "0x14B09E0", VA = "0x14B09E0", Slot = "23")]
		public virtual bool IsSessionValid()
		{
			return default(bool);
		}

		[Token(Token = "0x6002213")]
		[Address(RVA = "0x14B09E8", Offset = "0x14B09E8", VA = "0x14B09E8", Slot = "24")]
		public virtual bool RestartSession()
		{
			return default(bool);
		}

		[Token(Token = "0x6002214")]
		[Address(RVA = "0x14B09F0", Offset = "0x14B09F0", VA = "0x14B09F0")]
		public string GetLastSessionError()
		{
			return null;
		}

		[Token(Token = "0x6002215")]
		[Address(RVA = "0x14B09F8", Offset = "0x14B09F8", VA = "0x14B09F8", Slot = "25")]
		public virtual bool CheckVersionMatch()
		{
			return default(bool);
		}

		[Token(Token = "0x6002216")]
		[Address(RVA = "0x14B0A00", Offset = "0x14B0A00", VA = "0x14B0A00", Slot = "26")]
		public virtual bool InitializeSession(HEU_SessionData sessionData)
		{
			return default(bool);
		}

		[Token(Token = "0x6002217")]
		[Address(RVA = "0x14B0A08", Offset = "0x14B0A08", VA = "0x14B0A08", Slot = "27")]
		public virtual bool HandleStatusResult(HAPI_Result result, string prependMsg, bool bThrowError, bool bLogError)
		{
			return default(bool);
		}

		[Token(Token = "0x6002218")]
		[Address(RVA = "0x14B0A10", Offset = "0x14B0A10", VA = "0x14B0A10", Slot = "28")]
		public virtual void SetServerEnvString(string name, string value)
		{
		}

		[Token(Token = "0x6002219")]
		[Address(RVA = "0x14B0A14", Offset = "0x14B0A14", VA = "0x14B0A14", Slot = "29")]
		public virtual bool GetServerEnvString(string name, out string value)
		{
			return default(bool);
		}

		[Token(Token = "0x600221A")]
		[Address(RVA = "0x14B0A20", Offset = "0x14B0A20", VA = "0x14B0A20", Slot = "30")]
		public virtual bool GetServerEnvVarCount(out int env_count)
		{
			return default(bool);
		}

		[Token(Token = "0x600221B")]
		[Address(RVA = "0x14B0A2C", Offset = "0x14B0A2C", VA = "0x14B0A2C", Slot = "31")]
		public virtual bool GetCallResult(out HAPI_Result result)
		{
			return default(bool);
		}

		[Token(Token = "0x600221C")]
		[Address(RVA = "0x14B0A38", Offset = "0x14B0A38", VA = "0x14B0A38", Slot = "32")]
		public virtual bool GetCookResult(out HAPI_Result result)
		{
			return default(bool);
		}

		[Token(Token = "0x600221D")]
		[Address(RVA = "0x14B0A44", Offset = "0x14B0A44", VA = "0x14B0A44", Slot = "33")]
		public virtual bool GetCookState(out HAPI_State state)
		{
			return default(bool);
		}

		[Token(Token = "0x600221E")]
		[Address(RVA = "0x14B0A50", Offset = "0x14B0A50", VA = "0x14B0A50", Slot = "34")]
		public virtual string GetStatusString(HAPI_StatusType statusType, HAPI_StatusVerbosity verbosity)
		{
			return null;
		}

		[Token(Token = "0x600221F")]
		[Address(RVA = "0x14B0A98", Offset = "0x14B0A98", VA = "0x14B0A98", Slot = "35")]
		public virtual int GetEnvInt(HAPI_EnvIntType intType)
		{
			return default(int);
		}

		[Token(Token = "0x6002220")]
		[Address(RVA = "0x14B0AA0", Offset = "0x14B0AA0", VA = "0x14B0AA0", Slot = "36")]
		public virtual int GetSessionEnvInt(HAPI_SessionEnvIntType intType, bool bLogError)
		{
			return default(int);
		}

		[Token(Token = "0x6002221")]
		[Address(RVA = "0x14B0AA8", Offset = "0x14B0AA8", VA = "0x14B0AA8", Slot = "37")]
		public virtual bool GetString(int stringHandle, ref string resultString, int bufferLength)
		{
			return default(bool);
		}

		[Token(Token = "0x6002222")]
		[Address(RVA = "0x14B0AB0", Offset = "0x14B0AB0", VA = "0x14B0AB0", Slot = "38")]
		public virtual int GetStringBufferLength(int stringHandle)
		{
			return default(int);
		}

		[Token(Token = "0x6002223")]
		[Address(RVA = "0x14B0AB8", Offset = "0x14B0AB8", VA = "0x14B0AB8", Slot = "39")]
		public virtual int CheckForSpecificErrors(int nodeID, int errorsToCheck)
		{
			return default(int);
		}

		[Token(Token = "0x6002224")]
		[Address(RVA = "0x14B0AC0", Offset = "0x14B0AC0", VA = "0x14B0AC0", Slot = "40")]
		public virtual float GetTime()
		{
			return default(float);
		}

		[Token(Token = "0x6002225")]
		[Address(RVA = "0x14B0AC8", Offset = "0x14B0AC8", VA = "0x14B0AC8", Slot = "41")]
		public virtual bool SetTime(float time)
		{
			return default(bool);
		}

		[Token(Token = "0x6002226")]
		[Address(RVA = "0x14B0AD0", Offset = "0x14B0AD0", VA = "0x14B0AD0", Slot = "42")]
		public virtual bool GetUseHoudiniTime()
		{
			return default(bool);
		}

		[Token(Token = "0x6002227")]
		[Address(RVA = "0x14B0AD8", Offset = "0x14B0AD8", VA = "0x14B0AD8", Slot = "43")]
		public virtual bool SetUseHoudiniTime(bool enable)
		{
			return default(bool);
		}

		[Token(Token = "0x6002228")]
		[Address(RVA = "0x14B0AE0", Offset = "0x14B0AE0", VA = "0x14B0AE0", Slot = "44")]
		public virtual bool LoadAssetLibraryFromFile(string assetPath, bool bAllowOverwrite, out int libraryID)
		{
			return default(bool);
		}

		[Token(Token = "0x6002229")]
		[Address(RVA = "0x14B0AEC", Offset = "0x14B0AEC", VA = "0x14B0AEC", Slot = "45")]
		public virtual bool LoadAssetLibraryFromMemory(byte[] buffer, bool bAllowOverwrite, out int libraryID)
		{
			return default(bool);
		}

		[Token(Token = "0x600222A")]
		[Address(RVA = "0x14B0AF8", Offset = "0x14B0AF8", VA = "0x14B0AF8", Slot = "46")]
		public virtual bool CreateNode(int parentNodeID, string operatorName, string nodeLabel, bool bCookOnCreation, out int newNodeID)
		{
			return default(bool);
		}

		[Token(Token = "0x600222B")]
		[Address(RVA = "0x14B0B08", Offset = "0x14B0B08", VA = "0x14B0B08", Slot = "47")]
		public virtual void DeleteNode(int nodeID)
		{
		}

		[Token(Token = "0x600222C")]
		[Address(RVA = "0x14B0B0C", Offset = "0x14B0B0C", VA = "0x14B0B0C", Slot = "48")]
		public virtual bool CookNode(int nodeID, bool bCookTemplatedGeos, bool bSplitGeosByGroup = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600222D")]
		[Address(RVA = "0x14B0B14", Offset = "0x14B0B14", VA = "0x14B0B14", Slot = "49")]
		public virtual bool RenameNode(int nodeID, string newName)
		{
			return default(bool);
		}

		[Token(Token = "0x600222E")]
		[Address(RVA = "0x14B0B1C", Offset = "0x14B0B1C", VA = "0x14B0B1C", Slot = "50")]
		public virtual bool ConnectNodeInput(int nodeID, int inputIndex, int nodeIDToConnect, int outputIndex = 0)
		{
			return default(bool);
		}

		[Token(Token = "0x600222F")]
		[Address(RVA = "0x14B0B24", Offset = "0x14B0B24", VA = "0x14B0B24", Slot = "51")]
		public virtual bool DisconnectNodeInput(int nodeID, int inputIndex, bool bLogError)
		{
			return default(bool);
		}

		[Token(Token = "0x6002230")]
		[Address(RVA = "0x14B0B2C", Offset = "0x14B0B2C", VA = "0x14B0B2C", Slot = "52")]
		public virtual bool QueryNodeInput(int nodeID, int inputIndex, out int connectedNodeID, bool bLogError)
		{
			return default(bool);
		}

		[Token(Token = "0x6002231")]
		[Address(RVA = "0x14B0B3C", Offset = "0x14B0B3C", VA = "0x14B0B3C", Slot = "53")]
		public virtual bool GetNodeInputName(int nodeID, int inputIndex, out int nodeNameIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6002232")]
		[Address(RVA = "0x14B0B48", Offset = "0x14B0B48", VA = "0x14B0B48", Slot = "54")]
		public virtual bool GetAvailableAssetCount(int libraryID, out int assetCount)
		{
			return default(bool);
		}

		[Token(Token = "0x6002233")]
		[Address(RVA = "0x14B0B54", Offset = "0x14B0B54", VA = "0x14B0B54", Slot = "55")]
		public virtual bool GetAvailableAssets(int libraryID, ref int[] assetNames, int assetCount)
		{
			return default(bool);
		}

		[Token(Token = "0x6002234")]
		[Address(RVA = "0x14B0B5C", Offset = "0x14B0B5C", VA = "0x14B0B5C", Slot = "56")]
		public virtual bool GetAssetInfo(int nodeID, ref HAPI_AssetInfo assetInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x6002235")]
		[Address(RVA = "0x14B0B64", Offset = "0x14B0B64", VA = "0x14B0B64", Slot = "57")]
		public virtual bool GetNodeInfo(int nodeID, ref HAPI_NodeInfo nodeInfo, bool bLogError = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6002236")]
		[Address(RVA = "0x14B0B6C", Offset = "0x14B0B6C", VA = "0x14B0B6C", Slot = "58")]
		public virtual bool GetNodePath(int nodeID, int relativeNodeID, out string path)
		{
			return default(bool);
		}

		[Token(Token = "0x6002237")]
		[Address(RVA = "0x14B0B78", Offset = "0x14B0B78", VA = "0x14B0B78", Slot = "59")]
		public virtual bool IsNodeValid(int nodeID, int uniqueNodeID)
		{
			return default(bool);
		}

		[Token(Token = "0x6002238")]
		[Address(RVA = "0x14B0B80", Offset = "0x14B0B80", VA = "0x14B0B80", Slot = "60")]
		public virtual bool ComposeChildNodeList(int parentNodeID, int nodeTypeFilter, int nodeFlagFilter, bool bRecursive, ref int count)
		{
			return default(bool);
		}

		[Token(Token = "0x6002239")]
		[Address(RVA = "0x14B0B88", Offset = "0x14B0B88", VA = "0x14B0B88", Slot = "61")]
		public virtual bool GetComposedChildNodeList(int parentNodeID, int[] childNodeIDs, int count)
		{
			return default(bool);
		}

		[Token(Token = "0x600223A")]
		[Address(RVA = "0x14B0B90", Offset = "0x14B0B90", VA = "0x14B0B90", Slot = "62")]
		public virtual bool LoadHIPFile(string fileName, bool bCookOnLoad)
		{
			return default(bool);
		}

		[Token(Token = "0x600223B")]
		[Address(RVA = "0x14B0B98", Offset = "0x14B0B98", VA = "0x14B0B98", Slot = "63")]
		public virtual bool SaveHIPFile(string fileName, bool bLockNodes)
		{
			return default(bool);
		}

		[Token(Token = "0x600223C")]
		[Address(RVA = "0x14B0BA0", Offset = "0x14B0BA0", VA = "0x14B0BA0", Slot = "64")]
		public virtual bool GetObjectInfo(int nodeID, ref HAPI_ObjectInfo objectInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x600223D")]
		[Address(RVA = "0x14B0BA8", Offset = "0x14B0BA8", VA = "0x14B0BA8", Slot = "65")]
		public virtual bool GetObjectTransform(int nodeID, int relativeToNodeID, HAPI_RSTOrder rstOrder, ref HAPI_Transform hapiTransform)
		{
			return default(bool);
		}

		[Token(Token = "0x600223E")]
		[Address(RVA = "0x14B0BB0", Offset = "0x14B0BB0", VA = "0x14B0BB0", Slot = "66")]
		public virtual bool SetObjectTransform(int nodeID, ref HAPI_TransformEuler hapiTransform)
		{
			return default(bool);
		}

		[Token(Token = "0x600223F")]
		[Address(RVA = "0x14B0BB8", Offset = "0x14B0BB8", VA = "0x14B0BB8", Slot = "67")]
		public virtual bool ComposeObjectList(int nodeID, out int objectCount)
		{
			return default(bool);
		}

		[Token(Token = "0x6002240")]
		[Address(RVA = "0x14B0BC4", Offset = "0x14B0BC4", VA = "0x14B0BC4", Slot = "68")]
		public virtual bool GetComposedObjectList(int nodeID, [Out] HAPI_ObjectInfo[] objectInfos, int start, int length)
		{
			return default(bool);
		}

		[Token(Token = "0x6002241")]
		[Address(RVA = "0x14B0BCC", Offset = "0x14B0BCC", VA = "0x14B0BCC", Slot = "69")]
		public virtual bool GetComposedObjectTransforms(int nodeID, HAPI_RSTOrder rstOrder, [Out] HAPI_Transform[] transforms, int start, int length)
		{
			return default(bool);
		}

		[Token(Token = "0x6002242")]
		[Address(RVA = "0x14B0BD4", Offset = "0x14B0BD4", VA = "0x14B0BD4", Slot = "70")]
		public virtual bool GetDisplayGeoInfo(int nodeID, ref HAPI_GeoInfo geoInfo, bool bLogError = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6002243")]
		[Address(RVA = "0x14B0BDC", Offset = "0x14B0BDC", VA = "0x14B0BDC", Slot = "71")]
		public virtual bool GetGeoInfo(int nodeID, ref HAPI_GeoInfo geoInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x6002244")]
		[Address(RVA = "0x14B0BE4", Offset = "0x14B0BE4", VA = "0x14B0BE4", Slot = "72")]
		public virtual bool GetPartInfo(int nodeID, int partID, ref HAPI_PartInfo partInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x6002245")]
		[Address(RVA = "0x14B0BEC", Offset = "0x14B0BEC", VA = "0x14B0BEC", Slot = "73")]
		public virtual bool GetAttributeInfo(int nodeID, int partID, string name, HAPI_AttributeOwner owner, ref HAPI_AttributeInfo attributeInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x6002246")]
		[Address(RVA = "0x14B0BF4", Offset = "0x14B0BF4", VA = "0x14B0BF4", Slot = "74")]
		public virtual bool GetAttributeNames(int nodeID, int partID, HAPI_AttributeOwner owner, ref string[] attributeNames, int count)
		{
			return default(bool);
		}

		[Token(Token = "0x6002247")]
		[Address(RVA = "0x14B0BFC", Offset = "0x14B0BFC", VA = "0x14B0BFC", Slot = "75")]
		public virtual bool GetAttributeStringData(int nodeID, int partID, string name, ref HAPI_AttributeInfo attributeInfo, [Out] int[] dataArray, int start, int length)
		{
			return default(bool);
		}

		[Token(Token = "0x6002248")]
		[Address(RVA = "0x14B0C04", Offset = "0x14B0C04", VA = "0x14B0C04", Slot = "76")]
		public virtual bool GetAttributeFloatData(int nodeID, int partID, string name, ref HAPI_AttributeInfo attributeInfo, [Out] float[] data, int start, int length)
		{
			return default(bool);
		}

		[Token(Token = "0x6002249")]
		[Address(RVA = "0x14B0C0C", Offset = "0x14B0C0C", VA = "0x14B0C0C", Slot = "77")]
		public virtual bool GetAttributeFloat64Data(int nodeID, int partID, string name, ref HAPI_AttributeInfo attributeInfo, [Out] double[] data, int start, int length)
		{
			return default(bool);
		}

		[Token(Token = "0x600224A")]
		[Address(RVA = "0x14B0C14", Offset = "0x14B0C14", VA = "0x14B0C14", Slot = "78")]
		public virtual bool GetAttributeIntData(int nodeID, int partID, string name, ref HAPI_AttributeInfo attributeInfo, [Out] int[] data, int start, int length)
		{
			return default(bool);
		}

		[Token(Token = "0x600224B")]
		[Address(RVA = "0x14B0C1C", Offset = "0x14B0C1C", VA = "0x14B0C1C", Slot = "79")]
		public virtual bool GetAttributeInt64Data(int nodeID, int partID, string name, ref HAPI_AttributeInfo attributeInfo, [Out] long[] data, int start, int length)
		{
			return default(bool);
		}

		[Token(Token = "0x600224C")]
		[Address(RVA = "0x14B0C24", Offset = "0x14B0C24", VA = "0x14B0C24", Slot = "80")]
		public virtual bool GetGroupNames(int nodeID, HAPI_GroupType groupType, ref int[] names, int count)
		{
			return default(bool);
		}

		[Token(Token = "0x600224D")]
		[Address(RVA = "0x14B0C2C", Offset = "0x14B0C2C", VA = "0x14B0C2C", Slot = "81")]
		public virtual bool GetGroupMembership(int nodeID, int partID, HAPI_GroupType groupType, string groupName, ref bool membershipArrayAllEqual, [Out] int[] membershipArray, int start, int length)
		{
			return default(bool);
		}

		[Token(Token = "0x600224E")]
		[Address(RVA = "0x14B0C34", Offset = "0x14B0C34", VA = "0x14B0C34", Slot = "82")]
		public virtual bool GetGroupCountOnPackedInstancePart(int nodeID, int partID, out int pointGroupCount, out int primitiveGroupCount)
		{
			return default(bool);
		}

		[Token(Token = "0x600224F")]
		[Address(RVA = "0x14B0C44", Offset = "0x14B0C44", VA = "0x14B0C44", Slot = "83")]
		public virtual bool GetGroupNamesOnPackedInstancePart(int nodeID, int partID, HAPI_GroupType groupType, ref int[] groupNamesArray, int groupCount)
		{
			return default(bool);
		}

		[Token(Token = "0x6002250")]
		[Address(RVA = "0x14B0C4C", Offset = "0x14B0C4C", VA = "0x14B0C4C", Slot = "84")]
		public virtual bool GetGroupMembershipOnPackedInstancePart(int nodeID, int partID, HAPI_GroupType groupType, string groupName, ref bool membershipArrayAllEqual, [Out] int[] membershipArray, int start, int length)
		{
			return default(bool);
		}

		[Token(Token = "0x6002251")]
		[Address(RVA = "0x14B0C54", Offset = "0x14B0C54", VA = "0x14B0C54", Slot = "85")]
		public virtual bool GetInstancedPartIds(int nodeID, int partID, [Out] int[] instancedPartsArray, int start, int length)
		{
			return default(bool);
		}

		[Token(Token = "0x6002252")]
		[Address(RVA = "0x14B0C5C", Offset = "0x14B0C5C", VA = "0x14B0C5C", Slot = "86")]
		public virtual bool GetInstancerPartTransforms(int nodeID, int partID, HAPI_RSTOrder rstOrder, [Out] HAPI_Transform[] transformsArray, int start, int length)
		{
			return default(bool);
		}

		[Token(Token = "0x6002253")]
		[Address(RVA = "0x14B0C64", Offset = "0x14B0C64", VA = "0x14B0C64", Slot = "87")]
		public virtual bool GetInstanceTransformsOnPart(int nodeID, int partID, HAPI_RSTOrder rstOrder, [Out] HAPI_Transform[] transformsArray, int start, int length)
		{
			return default(bool);
		}

		[Token(Token = "0x6002254")]
		[Address(RVA = "0x14B0C6C", Offset = "0x14B0C6C", VA = "0x14B0C6C", Slot = "88")]
		public virtual bool GetInstancedObjectIds(int nodeID, [Out] int[] instanced_node_id_array, int start, int length)
		{
			return default(bool);
		}

		[Token(Token = "0x6002255")]
		[Address(RVA = "0x14B0C74", Offset = "0x14B0C74", VA = "0x14B0C74", Slot = "89")]
		public virtual bool GetFaceCounts(int nodeID, int partID, [Out] int[] faceCounts, int start, int length)
		{
			return default(bool);
		}

		[Token(Token = "0x6002256")]
		[Address(RVA = "0x14B0C7C", Offset = "0x14B0C7C", VA = "0x14B0C7C", Slot = "90")]
		public virtual bool GetVertexList(int nodeID, int partID, [Out] int[] vertexList, int start, int length)
		{
			return default(bool);
		}

		[Token(Token = "0x6002257")]
		[Address(RVA = "0x14B0C84", Offset = "0x14B0C84", VA = "0x14B0C84", Slot = "91")]
		public virtual bool GetBoxInfo(int nodeID, int partID, ref HAPI_BoxInfo boxInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x6002258")]
		[Address(RVA = "0x14B0C8C", Offset = "0x14B0C8C", VA = "0x14B0C8C", Slot = "92")]
		public virtual bool GetSphereInfo(int nodeID, int partID, ref HAPI_SphereInfo sphereInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x6002259")]
		[Address(RVA = "0x14B0C94", Offset = "0x14B0C94", VA = "0x14B0C94", Slot = "93")]
		public virtual bool GetCurveInfo(int nodeID, int partID, ref HAPI_CurveInfo curveInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x600225A")]
		[Address(RVA = "0x14B0C9C", Offset = "0x14B0C9C", VA = "0x14B0C9C", Slot = "94")]
		public virtual bool GetCurveCounts(int nodeID, int partID, [Out] int[] counts, int start, int length)
		{
			return default(bool);
		}

		[Token(Token = "0x600225B")]
		[Address(RVA = "0x14B0CA4", Offset = "0x14B0CA4", VA = "0x14B0CA4", Slot = "95")]
		public virtual bool SetPartInfo(int nodeID, int partID, ref HAPI_PartInfo partInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x600225C")]
		[Address(RVA = "0x14B0CAC", Offset = "0x14B0CAC", VA = "0x14B0CAC", Slot = "96")]
		public virtual bool SetFaceCount(int nodeID, int partID, int[] faceCounts, int start, int length)
		{
			return default(bool);
		}

		[Token(Token = "0x600225D")]
		[Address(RVA = "0x14B0CB4", Offset = "0x14B0CB4", VA = "0x14B0CB4", Slot = "97")]
		public virtual bool SetVertexList(int nodeID, int partID, int[] vertexList, int start, int length)
		{
			return default(bool);
		}

		[Token(Token = "0x600225E")]
		[Address(RVA = "0x14B0CBC", Offset = "0x14B0CBC", VA = "0x14B0CBC", Slot = "98")]
		public virtual bool SetAttributeIntData(int nodeID, int partID, string name, ref HAPI_AttributeInfo attrInfo, int[] data, int start, int length)
		{
			return default(bool);
		}

		[Token(Token = "0x600225F")]
		[Address(RVA = "0x14B0CC4", Offset = "0x14B0CC4", VA = "0x14B0CC4", Slot = "99")]
		public virtual bool SetAttributeFloatData(int nodeID, int partID, string name, ref HAPI_AttributeInfo attrInfo, float[] data, int start, int length)
		{
			return default(bool);
		}

		[Token(Token = "0x6002260")]
		[Address(RVA = "0x14B0CCC", Offset = "0x14B0CCC", VA = "0x14B0CCC", Slot = "100")]
		public virtual bool SetAttributeStringData(int nodeID, int partID, string name, ref HAPI_AttributeInfo attrInfo, string[] data, int start, int length)
		{
			return default(bool);
		}

		[Token(Token = "0x6002261")]
		[Address(RVA = "0x14B0CD4", Offset = "0x14B0CD4", VA = "0x14B0CD4", Slot = "101")]
		public virtual bool AddAttribute(int nodeID, int partID, string name, ref HAPI_AttributeInfo attrInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x6002262")]
		[Address(RVA = "0x14B0CDC", Offset = "0x14B0CDC", VA = "0x14B0CDC", Slot = "102")]
		public virtual bool AddGroup(int nodeID, int partID, HAPI_GroupType groupType, string groupName)
		{
			return default(bool);
		}

		[Token(Token = "0x6002263")]
		[Address(RVA = "0x14B0CE4", Offset = "0x14B0CE4", VA = "0x14B0CE4", Slot = "103")]
		public virtual bool DeleteGroup(int nodeID, int partID, HAPI_GroupType groupType, string groupName)
		{
			return default(bool);
		}

		[Token(Token = "0x6002264")]
		[Address(RVA = "0x14B0CEC", Offset = "0x14B0CEC", VA = "0x14B0CEC", Slot = "104")]
		public virtual bool SetGroupMembership(int nodeID, int partID, HAPI_GroupType groupType, string groupName, [Out] int[] membershipArray, int start, int length)
		{
			return default(bool);
		}

		[Token(Token = "0x6002265")]
		[Address(RVA = "0x14B0CF4", Offset = "0x14B0CF4", VA = "0x14B0CF4", Slot = "105")]
		public virtual bool CommitGeo(int nodeID)
		{
			return default(bool);
		}

		[Token(Token = "0x6002266")]
		[Address(RVA = "0x14B0CFC", Offset = "0x14B0CFC", VA = "0x14B0CFC", Slot = "106")]
		public virtual bool RevertGeo(int nodeID)
		{
			return default(bool);
		}

		[Token(Token = "0x6002267")]
		[Address(RVA = "0x14B0D04", Offset = "0x14B0D04", VA = "0x14B0D04", Slot = "107")]
		public virtual bool GetMaterialOnPart(int nodeID, int partID, ref HAPI_MaterialInfo materialInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x6002268")]
		[Address(RVA = "0x14B0D0C", Offset = "0x14B0D0C", VA = "0x14B0D0C", Slot = "108")]
		public virtual bool GetMaterialNodeIDsOnFaces(int nodeID, int partID, ref bool bSingleFaceMaterial, [Out] int[] materialNodeIDs, int faceCount)
		{
			return default(bool);
		}

		[Token(Token = "0x6002269")]
		[Address(RVA = "0x14B0D14", Offset = "0x14B0D14", VA = "0x14B0D14", Slot = "109")]
		public virtual bool GetMaterialInfo(int materialNodeID, ref HAPI_MaterialInfo materialInfo, bool bLogError = true)
		{
			return default(bool);
		}

		[Token(Token = "0x600226A")]
		[Address(RVA = "0x14B0D1C", Offset = "0x14B0D1C", VA = "0x14B0D1C", Slot = "110")]
		public virtual bool GetImageInfo(int materialNodeID, ref HAPI_ImageInfo imageInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x600226B")]
		[Address(RVA = "0x14B0D24", Offset = "0x14B0D24", VA = "0x14B0D24", Slot = "111")]
		public virtual bool SetImageInfo(int materialNodeID, ref HAPI_ImageInfo imageInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x600226C")]
		[Address(RVA = "0x14B0D2C", Offset = "0x14B0D2C", VA = "0x14B0D2C", Slot = "112")]
		public virtual bool RenderTextureToImage(int materialNodeID, int parmID, bool bLogError = true)
		{
			return default(bool);
		}

		[Token(Token = "0x600226D")]
		[Address(RVA = "0x14B0D34", Offset = "0x14B0D34", VA = "0x14B0D34", Slot = "113")]
		public virtual bool RenderCOPToImage(int copNodeID)
		{
			return default(bool);
		}

		[Token(Token = "0x600226E")]
		[Address(RVA = "0x14B0D3C", Offset = "0x14B0D3C", VA = "0x14B0D3C", Slot = "114")]
		public virtual bool ExtractImageToMemory(int nodeID, string fileFormat, string imagePlanes, out byte[] buffer)
		{
			return default(bool);
		}

		[Token(Token = "0x600226F")]
		[Address(RVA = "0x14B0D98", Offset = "0x14B0D98", VA = "0x14B0D98", Slot = "115")]
		public virtual bool GetImagePlanes(int nodeID, [Out] int[] imagePlanes, int numImagePlanes)
		{
			return default(bool);
		}

		[Token(Token = "0x6002270")]
		[Address(RVA = "0x14B0DEC", Offset = "0x14B0DEC", VA = "0x14B0DEC", Slot = "116")]
		public virtual bool ExtractImageToFile(int nodeID, string fileFormat, string imagePlanes, string destinationFolderPath, out string destinationFilePath)
		{
			return default(bool);
		}

		[Token(Token = "0x6002271")]
		[Address(RVA = "0x14B0DF8", Offset = "0x14B0DF8", VA = "0x14B0DF8", Slot = "117")]
		public virtual bool GetParams(int nodeID, [Out] HAPI_ParmInfo[] parmInfos, int start, int length)
		{
			return default(bool);
		}

		[Token(Token = "0x6002272")]
		[Address(RVA = "0x14B0E00", Offset = "0x14B0E00", VA = "0x14B0E00", Slot = "118")]
		public virtual bool GetParmTagName(int nodeID, int parmID, int tagIndex, out int tagName)
		{
			return default(bool);
		}

		[Token(Token = "0x6002273")]
		[Address(RVA = "0x14B0E0C", Offset = "0x14B0E0C", VA = "0x14B0E0C", Slot = "119")]
		public virtual bool GetParmTagValue(int nodeID, int parmID, string tagName, out int tagValue)
		{
			return default(bool);
		}

		[Token(Token = "0x6002274")]
		[Address(RVA = "0x14B0E18", Offset = "0x14B0E18", VA = "0x14B0E18", Slot = "120")]
		public virtual bool ParmHasTag(int nodeID, int parmID, string tagName, ref bool hasTag)
		{
			return default(bool);
		}

		[Token(Token = "0x6002275")]
		[Address(RVA = "0x14B0E20", Offset = "0x14B0E20", VA = "0x14B0E20", Slot = "121")]
		public virtual bool GetParamIntValues(int nodeID, [Out] int[] values, int start, int length)
		{
			return default(bool);
		}

		[Token(Token = "0x6002276")]
		[Address(RVA = "0x14B0E28", Offset = "0x14B0E28", VA = "0x14B0E28", Slot = "122")]
		public virtual bool GetParamIntValue(int nodeID, string parmName, int index, out int value)
		{
			return default(bool);
		}

		[Token(Token = "0x6002277")]
		[Address(RVA = "0x14B0E34", Offset = "0x14B0E34", VA = "0x14B0E34", Slot = "123")]
		public virtual bool GetParamFloatValues(int nodeID, [Out] float[] values, int start, int length)
		{
			return default(bool);
		}

		[Token(Token = "0x6002278")]
		[Address(RVA = "0x14B0E3C", Offset = "0x14B0E3C", VA = "0x14B0E3C", Slot = "124")]
		public virtual bool GetParamFloatValue(int nodeID, string parmName, int index, out float value)
		{
			return default(bool);
		}

		[Token(Token = "0x6002279")]
		[Address(RVA = "0x14B0E48", Offset = "0x14B0E48", VA = "0x14B0E48", Slot = "125")]
		public virtual bool GetParamStringValues(int nodeID, [Out] int[] values, int start, int length)
		{
			return default(bool);
		}

		[Token(Token = "0x600227A")]
		[Address(RVA = "0x14B0E50", Offset = "0x14B0E50", VA = "0x14B0E50", Slot = "126")]
		public virtual bool GetParamStringValue(int nodeID, string parmName, int index, out int value)
		{
			return default(bool);
		}

		[Token(Token = "0x600227B")]
		[Address(RVA = "0x14B0E5C", Offset = "0x14B0E5C", VA = "0x14B0E5C", Slot = "127")]
		public virtual bool GetParamNodeValue(int nodeID, string paramName, out int nodeValue)
		{
			return default(bool);
		}

		[Token(Token = "0x600227C")]
		[Address(RVA = "0x14B0E6C", Offset = "0x14B0E6C", VA = "0x14B0E6C", Slot = "128")]
		public virtual bool GetParamChoiceValues(int nodeID, [Out] HAPI_ParmChoiceInfo[] values, int start, int length)
		{
			return default(bool);
		}

		[Token(Token = "0x600227D")]
		[Address(RVA = "0x14B0E74", Offset = "0x14B0E74", VA = "0x14B0E74", Slot = "129")]
		public virtual bool SetParamIntValues(int nodeID, ref int[] values, int start, int length)
		{
			return default(bool);
		}

		[Token(Token = "0x600227E")]
		[Address(RVA = "0x14B0E7C", Offset = "0x14B0E7C", VA = "0x14B0E7C", Slot = "130")]
		public virtual bool SetParamIntValue(int nodeID, string paramName, int index, int value)
		{
			return default(bool);
		}

		[Token(Token = "0x600227F")]
		[Address(RVA = "0x14B0E84", Offset = "0x14B0E84", VA = "0x14B0E84", Slot = "131")]
		public virtual bool SetParamFloatValues(int nodeID, ref float[] values, int start, int length)
		{
			return default(bool);
		}

		[Token(Token = "0x6002280")]
		[Address(RVA = "0x14B0E8C", Offset = "0x14B0E8C", VA = "0x14B0E8C", Slot = "132")]
		public virtual bool SetParamFloatValue(int nodeID, string paramName, int index, float value)
		{
			return default(bool);
		}

		[Token(Token = "0x6002281")]
		[Address(RVA = "0x14B0E94", Offset = "0x14B0E94", VA = "0x14B0E94", Slot = "133")]
		public virtual bool SetParamStringValue(int nodeID, string strValue, int parmID, int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6002282")]
		[Address(RVA = "0x14B0E9C", Offset = "0x14B0E9C", VA = "0x14B0E9C", Slot = "134")]
		public virtual bool SetParamStringValue(int nodeID, string parmName, string parmValue, int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6002283")]
		[Address(RVA = "0x14B0EA4", Offset = "0x14B0EA4", VA = "0x14B0EA4", Slot = "135")]
		public virtual bool SetParamNodeValue(int nodeID, string paramName, int nodeValueID)
		{
			return default(bool);
		}

		[Token(Token = "0x6002284")]
		[Address(RVA = "0x14B0EAC", Offset = "0x14B0EAC", VA = "0x14B0EAC", Slot = "136")]
		public virtual bool InsertMultiparmInstance(int nodeID, int parmID, int instancePosition)
		{
			return default(bool);
		}

		[Token(Token = "0x6002285")]
		[Address(RVA = "0x14B0EB4", Offset = "0x14B0EB4", VA = "0x14B0EB4", Slot = "137")]
		public virtual bool RemoveMultiParmInstance(int nodeID, int parmID, int instancePosition)
		{
			return default(bool);
		}

		[Token(Token = "0x6002286")]
		[Address(RVA = "0x14B0EBC", Offset = "0x14B0EBC", VA = "0x14B0EBC", Slot = "138")]
		public virtual bool GetParmWithTag(int nodeID, string tagName, ref int parmID)
		{
			return default(bool);
		}

		[Token(Token = "0x6002287")]
		[Address(RVA = "0x14B0EC4", Offset = "0x14B0EC4", VA = "0x14B0EC4", Slot = "139")]
		public virtual bool RevertParmToDefault(int nodeID, string parm_name, int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6002288")]
		[Address(RVA = "0x14B0ECC", Offset = "0x14B0ECC", VA = "0x14B0ECC", Slot = "140")]
		public virtual bool RevertParmToDefaults(int nodeID, string parm_name)
		{
			return default(bool);
		}

		[Token(Token = "0x6002289")]
		[Address(RVA = "0x14B0ED4", Offset = "0x14B0ED4", VA = "0x14B0ED4", Slot = "141")]
		public virtual bool GetParmIDFromName(int nodeID, string parmName, out int parmID)
		{
			return default(bool);
		}

		[Token(Token = "0x600228A")]
		[Address(RVA = "0x14B0EE4", Offset = "0x14B0EE4", VA = "0x14B0EE4", Slot = "142")]
		public virtual bool GetParmStringValue(int nodeID, string parmName, int index, bool evaluate, out int value)
		{
			return default(bool);
		}

		[Token(Token = "0x600228B")]
		[Address(RVA = "0x14B0EF0", Offset = "0x14B0EF0", VA = "0x14B0EF0", Slot = "143")]
		public virtual bool CreateInputNode(out int nodeID, string name)
		{
			return default(bool);
		}

		[Token(Token = "0x600228C")]
		[Address(RVA = "0x14B0F00", Offset = "0x14B0F00", VA = "0x14B0F00", Slot = "144")]
		public virtual bool CreateHeightFieldInput(int parentNodeID, string name, int xSize, int ySize, float voxelSize, HAPI_HeightFieldSampling sampling, out int heightfieldNodeID, out int heightNodeID, out int maskNodeID, out int mergeNodeID)
		{
			return default(bool);
		}

		[Token(Token = "0x600228D")]
		[Address(RVA = "0x14B0F20", Offset = "0x14B0F20", VA = "0x14B0F20", Slot = "145")]
		public virtual bool CreateHeightfieldInputVolumeNode(int parentNodeID, out int newNodeID, string name, int xSize, int ySize, float voxelSize)
		{
			return default(bool);
		}

		[Token(Token = "0x600228E")]
		[Address(RVA = "0x14B0F30", Offset = "0x14B0F30", VA = "0x14B0F30", Slot = "146")]
		public virtual bool GetPreset(int nodeID, out byte[] presetData)
		{
			return default(bool);
		}

		[Token(Token = "0x600228F")]
		[Address(RVA = "0x14B0F8C", Offset = "0x14B0F8C", VA = "0x14B0F8C", Slot = "147")]
		public virtual bool SetPreset(int nodeID, byte[] presetData)
		{
			return default(bool);
		}

		[Token(Token = "0x6002290")]
		[Address(RVA = "0x14B0F94", Offset = "0x14B0F94", VA = "0x14B0F94", Slot = "148")]
		public virtual bool GetVolumeInfo(int nodeID, int partID, ref HAPI_VolumeInfo volumeInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x6002291")]
		[Address(RVA = "0x14B0F9C", Offset = "0x14B0F9C", VA = "0x14B0F9C", Slot = "149")]
		public virtual bool GetHeightFieldData(int nodeID, int partID, float[] valuesArray, int start, int length)
		{
			return default(bool);
		}

		[Token(Token = "0x6002292")]
		[Address(RVA = "0x14B0FA4", Offset = "0x14B0FA4", VA = "0x14B0FA4", Slot = "150")]
		public virtual bool SetVolumeInfo(int nodeID, int partID, ref HAPI_VolumeInfo volumeInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x6002293")]
		[Address(RVA = "0x14B0FAC", Offset = "0x14B0FAC", VA = "0x14B0FAC", Slot = "151")]
		public virtual bool SetVolumeTileFloatData(int nodeID, int partID, ref HAPI_VolumeTileInfo tileInfo, float[] valuesArray, int length)
		{
			return default(bool);
		}

		[Token(Token = "0x6002294")]
		[Address(RVA = "0x14B1000", Offset = "0x14B1000", VA = "0x14B1000", Slot = "152")]
		public virtual bool GetVolumeBounds(int nodeID, int partID, out float x_min, out float y_min, out float z_min, out float x_max, out float y_max, out float z_max, out float x_center, out float y_center, out float z_center)
		{
			return default(bool);
		}

		[Token(Token = "0x6002295")]
		[Address(RVA = "0x14B1034", Offset = "0x14B1034", VA = "0x14B1034", Slot = "153")]
		public virtual bool SetHeightFieldData(int nodeID, int partID, string name, float[] valuesArray, int start, int length)
		{
			return default(bool);
		}

		[Token(Token = "0x6002296")]
		[Address(RVA = "0x14B103C", Offset = "0x14B103C", VA = "0x14B103C", Slot = "154")]
		public virtual bool GetActiveCacheCount(out int activeCacheCount)
		{
			return default(bool);
		}

		[Token(Token = "0x6002297")]
		[Address(RVA = "0x14B1048", Offset = "0x14B1048", VA = "0x14B1048", Slot = "155")]
		public virtual bool GetActiveCacheNames([Out] int[] cacheNamesArray, int activeCacheCount)
		{
			return default(bool);
		}

		[Token(Token = "0x6002298")]
		[Address(RVA = "0x14B1050", Offset = "0x14B1050", VA = "0x14B1050", Slot = "156")]
		public virtual bool GetCacheProperty(string cacheName, HAPI_CacheProperty cacheProperty, out int propertyValue)
		{
			return default(bool);
		}

		[Token(Token = "0x6002299")]
		[Address(RVA = "0x14B105C", Offset = "0x14B105C", VA = "0x14B105C", Slot = "157")]
		public virtual bool SetCacheProperty(string cacheName, HAPI_CacheProperty cacheProperty, int propertyValue)
		{
			return default(bool);
		}

		[Token(Token = "0x600229A")]
		[Address(RVA = "0x14B1064", Offset = "0x14B1064", VA = "0x14B1064", Slot = "158")]
		public virtual bool SaveGeoToFile(int nodeID, string fileName)
		{
			return default(bool);
		}

		[Token(Token = "0x600229B")]
		[Address(RVA = "0x14B106C", Offset = "0x14B106C", VA = "0x14B106C", Slot = "159")]
		public virtual bool LoadGeoFromFile(int nodeID, string file_name)
		{
			return default(bool);
		}

		[Token(Token = "0x600229C")]
		[Address(RVA = "0x14B1074", Offset = "0x14B1074", VA = "0x14B1074", Slot = "160")]
		public virtual bool SaveNodeToFile(int nodeID, string fileName)
		{
			return default(bool);
		}

		[Token(Token = "0x600229D")]
		[Address(RVA = "0x14B107C", Offset = "0x14B107C", VA = "0x14B107C", Slot = "161")]
		public virtual bool LoadNodeFromFile(string file_name, int parentNodeID, string nodeLabel, bool cook_on_load, out int newNodeID)
		{
			return default(bool);
		}

		[Token(Token = "0x600229E")]
		[Address(RVA = "0x14B108C", Offset = "0x14B108C", VA = "0x14B108C", Slot = "162")]
		public virtual bool GetGeoSize(int nodeID, string format, out int size)
		{
			return default(bool);
		}

		[Token(Token = "0x600229F")]
		[Address(RVA = "0x14B1098", Offset = "0x14B1098", VA = "0x14B1098", Slot = "163")]
		public virtual bool GetHandleInfo(int nodeID, [Out] HAPI_HandleInfo[] handleInfos, int start, int length)
		{
			return default(bool);
		}

		[Token(Token = "0x60022A0")]
		[Address(RVA = "0x14B10A0", Offset = "0x14B10A0", VA = "0x14B10A0", Slot = "164")]
		public virtual bool GetHandleBindingInfo(int nodeID, int handleIndex, [Out] HAPI_HandleBindingInfo[] handleBindingInfos, int start, int length)
		{
			return default(bool);
		}

		[Token(Token = "0x60022A1")]
		[Address(RVA = "0x14B10A8", Offset = "0x14B10A8", VA = "0x14B10A8", Slot = "165")]
		public virtual bool ConvertTransform(ref HAPI_TransformEuler inTransform, HAPI_RSTOrder RSTOrder, HAPI_XYZOrder ROTOrder, out HAPI_TransformEuler outTransform)
		{
			return default(bool);
		}

		[Token(Token = "0x60022A2")]
		[Address(RVA = "0x14B10BC", Offset = "0x14B10BC", VA = "0x14B10BC", Slot = "166")]
		public virtual bool GetTotalCookCount(int nodeID, int nodeTypeFilter, int nodeFlagFilter, bool includeChildren, out int count)
		{
			return default(bool);
		}

		[Token(Token = "0x60022A3")]
		[Address(RVA = "0x14B10C8", Offset = "0x14B10C8", VA = "0x14B10C8", Slot = "167")]
		public virtual bool SetSessionSync(bool enable)
		{
			return default(bool);
		}

		[Token(Token = "0x60022A4")]
		[Address(RVA = "0x14B10D0", Offset = "0x14B10D0", VA = "0x14B10D0", Slot = "168")]
		public virtual bool GetViewport(ref HAPI_Viewport viewport)
		{
			return default(bool);
		}

		[Token(Token = "0x60022A5")]
		[Address(RVA = "0x14B10D8", Offset = "0x14B10D8", VA = "0x14B10D8", Slot = "169")]
		public virtual bool SetViewport(ref HAPI_Viewport viewport)
		{
			return default(bool);
		}

		[Token(Token = "0x60022A6")]
		[Address(RVA = "0x14B10E0", Offset = "0x14B10E0", VA = "0x14B10E0", Slot = "170")]
		public virtual bool GetSessionSyncInfo(ref HAPI_SessionSyncInfo syncInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x60022A7")]
		[Address(RVA = "0x14B10E8", Offset = "0x14B10E8", VA = "0x14B10E8", Slot = "171")]
		public virtual bool SetSessionSyncInfo(ref HAPI_SessionSyncInfo syncInfo)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x2000460")]
	public enum SessionConnectionState
	{
		[Token(Token = "0x40016FD")]
		NOT_CONNECTED,
		[Token(Token = "0x40016FE")]
		CONNECTED,
		[Token(Token = "0x40016FF")]
		FAILED_TO_CONNECT
	}
	[Serializable]
	[Token(Token = "0x2000461")]
	public enum SessionMode
	{
		[Token(Token = "0x4001701")]
		Socket,
		[Token(Token = "0x4001702")]
		Pipe
	}
	[Serializable]
	[Token(Token = "0x2000462")]
	public sealed class HEU_SessionData
	{
		[Token(Token = "0x4001703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static long INVALID_SESSION_ID;

		[Token(Token = "0x4001704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public HAPI_Session _HAPISession;

		[Token(Token = "0x4001705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int _serverProcessID;

		[Token(Token = "0x4001706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private bool _initialized;

		[Token(Token = "0x4001707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string _pipeName;

		[Token(Token = "0x4001708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int _port;

		[Token(Token = "0x4001709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private string _sessionClassType;

		[Token(Token = "0x400170A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool _isDefaultSession;

		[Token(Token = "0x400170B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private HEU_SessionSyncData _sessionSync;

		[Token(Token = "0x400170C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private SessionConnectionState _connectionState;

		[Token(Token = "0x400170D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private SessionMode _sessionMode;

		[Token(Token = "0x170003F2")]
		public long SessionID
		{
			[Token(Token = "0x60022AB")]
			[Address(RVA = "0x14B121C", Offset = "0x14B121C", VA = "0x14B121C")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x60022AC")]
			[Address(RVA = "0x14B0980", Offset = "0x14B0980", VA = "0x14B0980")]
			set
			{
			}
		}

		[Token(Token = "0x170003F3")]
		public int ProcessID
		{
			[Token(Token = "0x60022AD")]
			[Address(RVA = "0x14B1284", Offset = "0x14B1284", VA = "0x14B1284")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60022AE")]
			[Address(RVA = "0x14B128C", Offset = "0x14B128C", VA = "0x14B128C")]
			set
			{
			}
		}

		[Token(Token = "0x170003F4")]
		public HAPI_SessionType SessionType
		{
			[Token(Token = "0x60022AF")]
			[Address(RVA = "0x14B1294", Offset = "0x14B1294", VA = "0x14B1294")]
			get
			{
				return default(HAPI_SessionType);
			}
			[Token(Token = "0x60022B0")]
			[Address(RVA = "0x14B129C", Offset = "0x14B129C", VA = "0x14B129C")]
			set
			{
			}
		}

		[Token(Token = "0x170003F5")]
		public bool IsInitialized
		{
			[Token(Token = "0x60022B1")]
			[Address(RVA = "0x14B12A4", Offset = "0x14B12A4", VA = "0x14B12A4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60022B2")]
			[Address(RVA = "0x14B12AC", Offset = "0x14B12AC", VA = "0x14B12AC")]
			set
			{
			}
		}

		[Token(Token = "0x170003F6")]
		public bool IsValidSessionID
		{
			[Token(Token = "0x60022B3")]
			[Address(RVA = "0x14B12B8", Offset = "0x14B12B8", VA = "0x14B12B8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003F7")]
		public string PipeName
		{
			[Token(Token = "0x60022B4")]
			[Address(RVA = "0x14B12C0", Offset = "0x14B12C0", VA = "0x14B12C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60022B5")]
			[Address(RVA = "0x14B1308", Offset = "0x14B1308", VA = "0x14B1308")]
			set
			{
			}
		}

		[Token(Token = "0x170003F8")]
		public int Port
		{
			[Token(Token = "0x60022B6")]
			[Address(RVA = "0x14B1310", Offset = "0x14B1310", VA = "0x14B1310")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60022B7")]
			[Address(RVA = "0x14B1318", Offset = "0x14B1318", VA = "0x14B1318")]
			set
			{
			}
		}

		[Token(Token = "0x170003F9")]
		public Type SessionClassType
		{
			[Token(Token = "0x60022B8")]
			[Address(RVA = "0x14B1320", Offset = "0x14B1320", VA = "0x14B1320")]
			get
			{
				return null;
			}
			[Token(Token = "0x60022B9")]
			[Address(RVA = "0x14B13CC", Offset = "0x14B13CC", VA = "0x14B13CC")]
			set
			{
			}
		}

		[Token(Token = "0x170003FA")]
		public bool IsDefaultSession
		{
			[Token(Token = "0x60022BA")]
			[Address(RVA = "0x14B1408", Offset = "0x14B1408", VA = "0x14B1408")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60022BB")]
			[Address(RVA = "0x14B1410", Offset = "0x14B1410", VA = "0x14B1410")]
			set
			{
			}
		}

		[Token(Token = "0x170003FB")]
		public bool IsSessionSync
		{
			[Token(Token = "0x60022BC")]
			[Address(RVA = "0x14B04E8", Offset = "0x14B04E8", VA = "0x14B04E8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003FC")]
		public SessionConnectionState ThisConnectionMode
		{
			[Token(Token = "0x60022BD")]
			[Address(RVA = "0x14B141C", Offset = "0x14B141C", VA = "0x14B141C")]
			get
			{
				return default(SessionConnectionState);
			}
			[Token(Token = "0x60022BE")]
			[Address(RVA = "0x14B1424", Offset = "0x14B1424", VA = "0x14B1424")]
			set
			{
			}
		}

		[Token(Token = "0x170003FD")]
		public SessionMode ThisSessionMode
		{
			[Token(Token = "0x60022BF")]
			[Address(RVA = "0x14B142C", Offset = "0x14B142C", VA = "0x14B142C")]
			get
			{
				return default(SessionMode);
			}
			[Token(Token = "0x60022C0")]
			[Address(RVA = "0x14B1434", Offset = "0x14B1434", VA = "0x14B1434")]
			set
			{
			}
		}

		[Token(Token = "0x60022A8")]
		[Address(RVA = "0x14B10F0", Offset = "0x14B10F0", VA = "0x14B10F0")]
		public HEU_SessionSyncData GetOrCreateSessionSync()
		{
			return null;
		}

		[Token(Token = "0x60022A9")]
		[Address(RVA = "0x14B120C", Offset = "0x14B120C", VA = "0x14B120C")]
		public HEU_SessionSyncData GetSessionSync()
		{
			return null;
		}

		[Token(Token = "0x60022AA")]
		[Address(RVA = "0x14B1214", Offset = "0x14B1214", VA = "0x14B1214")]
		public void SetSessionSync(HEU_SessionSyncData syncData)
		{
		}

		[Token(Token = "0x60022C1")]
		[Address(RVA = "0x14B143C", Offset = "0x14B143C", VA = "0x14B143C")]
		public HEU_SessionData()
		{
		}
	}
	[Token(Token = "0x2000463")]
	public class HEU_SessionHAPI : HEU_SessionBase
	{
		[Token(Token = "0x60022C3")]
		[Address(RVA = "0x14B14A0", Offset = "0x14B14A0", VA = "0x14B14A0")]
		public HEU_SessionHAPI()
		{
		}
	}
	[Token(Token = "0x2000464")]
	public static class HEU_SessionManager
	{
		[Token(Token = "0x200069C")]
		public delegate HEU_SessionBase CreateSessionFromTypeDelegate(Type type);

		[Token(Token = "0x400170E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static HEU_SessionBase _defaultSession;

		[Token(Token = "0x400170F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<long, HEU_SessionBase> _sessionMap;

		[Token(Token = "0x4001710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static CreateSessionFromTypeDelegate _createSessionFromTypeDelegate;

		[Token(Token = "0x60022C4")]
		[Address(RVA = "0x14B14CC", Offset = "0x14B14CC", VA = "0x14B14CC")]
		public static HEU_SessionBase CreateSessionObject()
		{
			return null;
		}

		[Token(Token = "0x60022C5")]
		[Address(RVA = "0x14B1530", Offset = "0x14B1530", VA = "0x14B1530")]
		public static HEU_SessionBase CreateSessionFromType(Type type)
		{
			return null;
		}

		[Token(Token = "0x60022C6")]
		[Address(RVA = "0x14B1594", Offset = "0x14B1594", VA = "0x14B1594")]
		public static HEU_SessionBase GetDefaultSession()
		{
			return null;
		}

		[Token(Token = "0x60022C7")]
		[Address(RVA = "0x14B16F4", Offset = "0x14B16F4", VA = "0x14B16F4")]
		public static void RegisterSession(long sessionID, HEU_SessionBase session)
		{
		}

		[Token(Token = "0x60022C8")]
		[Address(RVA = "0x14B1834", Offset = "0x14B1834", VA = "0x14B1834")]
		public static void UnregisterSession(long sessionID)
		{
		}

		[Token(Token = "0x60022C9")]
		[Address(RVA = "0x14B18BC", Offset = "0x14B18BC", VA = "0x14B18BC")]
		public static HEU_SessionBase GetSessionWithID(long sessionID)
		{
			return null;
		}

		[Token(Token = "0x60022CA")]
		[Address(RVA = "0x14B178C", Offset = "0x14B178C", VA = "0x14B178C")]
		public static void SaveAllSessionData()
		{
		}

		[Token(Token = "0x60022CB")]
		[Address(RVA = "0x14AF274", Offset = "0x14AF274", VA = "0x14AF274")]
		public static void LoadAllSessionData()
		{
		}

		[Token(Token = "0x60022CC")]
		[Address(RVA = "0x14B1958", Offset = "0x14B1958", VA = "0x14B1958")]
		private static void InternalValidateSceneAssets()
		{
		}

		[Token(Token = "0x60022CD")]
		[Address(RVA = "0x14B1AA8", Offset = "0x14B1AA8", VA = "0x14B1AA8")]
		public static HEU_SessionBase GetOrCreateDefaultSession(bool bNotifyUserError = true)
		{
			return null;
		}

		[Token(Token = "0x60022CE")]
		[Address(RVA = "0x14B1E84", Offset = "0x14B1E84", VA = "0x14B1E84")]
		public static bool CreateInProcessSession()
		{
			return default(bool);
		}

		[Token(Token = "0x60022CF")]
		[Address(RVA = "0x14B1FE8", Offset = "0x14B1FE8", VA = "0x14B1FE8")]
		public static bool CreateThriftSocketSession(string hostName, int serverPort, bool autoClose, float timeout, bool logError)
		{
			return default(bool);
		}

		[Token(Token = "0x60022D0")]
		[Address(RVA = "0x14B1D48", Offset = "0x14B1D48", VA = "0x14B1D48")]
		public static bool CreateThriftPipeSession(string pipeName, bool autoClose, float timeout, bool logError)
		{
			return default(bool);
		}

		[Token(Token = "0x60022D1")]
		[Address(RVA = "0x14B20BC", Offset = "0x14B20BC", VA = "0x14B20BC")]
		public static bool CreateCustomSession()
		{
			return default(bool);
		}

		[Token(Token = "0x60022D2")]
		[Address(RVA = "0x14B2150", Offset = "0x14B2150", VA = "0x14B2150")]
		public static bool ConnectThriftSocketSession(string hostName, int serverPort, bool autoClose, float timeout)
		{
			return default(bool);
		}

		[Token(Token = "0x60022D3")]
		[Address(RVA = "0x14B221C", Offset = "0x14B221C", VA = "0x14B221C")]
		public static bool ConnectThriftPipeSession(string pipeName, bool autoClose, float timeout)
		{
			return default(bool);
		}

		[Token(Token = "0x60022D4")]
		[Address(RVA = "0x14B22E0", Offset = "0x14B22E0", VA = "0x14B22E0")]
		public static void RecreateDefaultSessionData()
		{
		}

		[Token(Token = "0x60022D5")]
		[Address(RVA = "0x14B2350", Offset = "0x14B2350", VA = "0x14B2350")]
		public static bool ConnectSessionSyncUsingThriftSocket(string hostName, int serverPort, bool autoClose, float timeout, bool logError)
		{
			return default(bool);
		}

		[Token(Token = "0x60022D6")]
		[Address(RVA = "0x14B2454", Offset = "0x14B2454", VA = "0x14B2454")]
		public static bool ConnectSessionSyncUsingThriftPipe(string pipeName, bool autoClose, float timeout, bool logError)
		{
			return default(bool);
		}

		[Token(Token = "0x60022D7")]
		[Address(RVA = "0x14B2548", Offset = "0x14B2548", VA = "0x14B2548")]
		public static bool InitializeDefaultSession()
		{
			return default(bool);
		}

		[Token(Token = "0x60022D8")]
		[Address(RVA = "0x14B2600", Offset = "0x14B2600", VA = "0x14B2600")]
		public static bool CloseDefaultSession()
		{
			return default(bool);
		}

		[Token(Token = "0x60022D9")]
		[Address(RVA = "0x14B26DC", Offset = "0x14B26DC", VA = "0x14B26DC")]
		public static void CloseAllSessions()
		{
		}

		[Token(Token = "0x60022DA")]
		[Address(RVA = "0x14B1F18", Offset = "0x14B1F18", VA = "0x14B1F18")]
		private static void CheckAndCloseExistingSession()
		{
		}

		[Token(Token = "0x60022DB")]
		[Address(RVA = "0x14B2998", Offset = "0x14B2998", VA = "0x14B2998")]
		public static HEU_SessionData GetSessionData()
		{
			return null;
		}

		[Token(Token = "0x60022DC")]
		[Address(RVA = "0x14B2A00", Offset = "0x14B2A00", VA = "0x14B2A00")]
		public static string GetSessionInfo()
		{
			return null;
		}

		[Token(Token = "0x60022DD")]
		[Address(RVA = "0x14B163C", Offset = "0x14B163C", VA = "0x14B163C")]
		public static bool LoadStoredDefaultSession()
		{
			return default(bool);
		}

		[Token(Token = "0x60022DE")]
		[Address(RVA = "0x14B2A88", Offset = "0x14B2A88", VA = "0x14B2A88")]
		public static bool RestartSession()
		{
			return default(bool);
		}

		[Token(Token = "0x60022DF")]
		[Address(RVA = "0x14B2BE4", Offset = "0x14B2BE4", VA = "0x14B2BE4")]
		public static bool ValidatePluginSession([Optional] HEU_SessionBase session)
		{
			return default(bool);
		}

		[Token(Token = "0x60022E0")]
		[Address(RVA = "0x14B1E0C", Offset = "0x14B1E0C", VA = "0x14B1E0C")]
		public static string GetLastSessionError()
		{
			return null;
		}

		[Token(Token = "0x60022E1")]
		[Address(RVA = "0x14B2C74", Offset = "0x14B2C74", VA = "0x14B2C74")]
		public static bool CheckVersionMatch()
		{
			return default(bool);
		}

		[Token(Token = "0x60022E2")]
		[Address(RVA = "0x14B2CF4", Offset = "0x14B2CF4", VA = "0x14B2CF4")]
		public static bool ClearConnectionError()
		{
			return default(bool);
		}

		[Token(Token = "0x60022E3")]
		[Address(RVA = "0x14B0814", Offset = "0x14B0814", VA = "0x14B0814")]
		public static string GetConnectionError(bool clear)
		{
			return null;
		}

		[Token(Token = "0x60022E4")]
		[Address(RVA = "0x14B2CFC", Offset = "0x14B2CFC", VA = "0x14B2CFC")]
		public static bool IsHARSProcessRunning(int processID)
		{
			return default(bool);
		}

		[Token(Token = "0x60022E5")]
		[Address(RVA = "0x14B2D98", Offset = "0x14B2D98", VA = "0x14B2D98")]
		public static bool LoadSessionFromHIP(bool bCookNodes, [Optional] HEU_SessionBase session)
		{
			return default(bool);
		}

		[Token(Token = "0x60022E6")]
		[Address(RVA = "0x14B2E70", Offset = "0x14B2E70", VA = "0x14B2E70")]
		public static bool SaveSessionToHIP(bool bLockNodes, [Optional] HEU_SessionBase session)
		{
			return default(bool);
		}

		[Token(Token = "0x60022E7")]
		[Address(RVA = "0x14B2F48", Offset = "0x14B2F48", VA = "0x14B2F48")]
		public static string GetHoudiniPathOnMacOS(string houdiniPath)
		{
			return null;
		}

		[Token(Token = "0x60022E8")]
		[Address(RVA = "0x14B2F4C", Offset = "0x14B2F4C", VA = "0x14B2F4C")]
		public static bool OpenHoudini(string args)
		{
			return default(bool);
		}

		[Token(Token = "0x60022E9")]
		[Address(RVA = "0x14B2FF4", Offset = "0x14B2FF4", VA = "0x14B2FF4")]
		public static bool OpenSessionInHoudini([Optional] HEU_SessionBase session)
		{
			return default(bool);
		}

		[Token(Token = "0x60022EA")]
		[Address(RVA = "0x14B32F0", Offset = "0x14B32F0", VA = "0x14B32F0")]
		public static HAPI_License GetCurrentLicense(bool bLogError)
		{
			return default(HAPI_License);
		}

		[Token(Token = "0x60022EB")]
		[Address(RVA = "0x149F660", Offset = "0x149F660", VA = "0x149F660")]
		public static string GetString(int stringHandle, [Optional] HEU_SessionBase session)
		{
			return null;
		}

		[Token(Token = "0x60022EC")]
		[Address(RVA = "0x14A5A54", Offset = "0x14A5A54", VA = "0x14A5A54")]
		public static string[] GetStringValuesFromStringIndices(int[] strIndices)
		{
			return null;
		}

		[Token(Token = "0x60022ED")]
		[Address(RVA = "0x14B339C", Offset = "0x14B339C", VA = "0x14B339C")]
		public static string[] GetGroupNames(HEU_SessionBase session, int nodeID, int partID, HAPI_GroupType groupType, bool isInstanced)
		{
			return null;
		}

		[Token(Token = "0x60022EE")]
		[Address(RVA = "0x14B35E4", Offset = "0x14B35E4", VA = "0x14B35E4")]
		public static bool GetGroupMembership(HEU_SessionBase session, int nodeID, int partID, HAPI_GroupType groupType, string groupName, ref int[] membership, bool isInstanced)
		{
			return default(bool);
		}

		[Token(Token = "0x60022EF")]
		[Address(RVA = "0x14B3728", Offset = "0x14B3728", VA = "0x14B3728")]
		public static string GetNodeName(int nodeID, [Optional] HEU_SessionBase session)
		{
			return null;
		}

		[Token(Token = "0x60022F0")]
		[Address(RVA = "0x14B3834", Offset = "0x14B3834", VA = "0x14B3834")]
		public static bool GetNodeInputName(int nodeID, int inputIndex, out string inputName)
		{
			return default(bool);
		}

		[Token(Token = "0x60022F1")]
		[Address(RVA = "0x14B3924", Offset = "0x14B3924", VA = "0x14B3924")]
		public static bool GetComposedChildNodeList(HEU_SessionBase session, int parentNodeID, int nodeTypeFilter, int nodeFlagFilter, bool bRecursive, out int[] childNodeIDs)
		{
			return default(bool);
		}

		[Token(Token = "0x60022F2")]
		[Address(RVA = "0x14B3A24", Offset = "0x14B3A24", VA = "0x14B3A24")]
		public static bool GetComposedObjectListMemorySafe(HEU_SessionBase session, int nodeID, [Out] HAPI_ObjectInfo[] objectInfos, int start, int length)
		{
			return default(bool);
		}

		[Token(Token = "0x60022F3")]
		[Address(RVA = "0x14B3ADC", Offset = "0x14B3ADC", VA = "0x14B3ADC")]
		public static bool GetComposedObjectTransformsMemorySafe(HEU_SessionBase session, int nodeID, HAPI_RSTOrder rstOrder, [Out] HAPI_Transform[] transforms, int start, int length)
		{
			return default(bool);
		}

		[Token(Token = "0x60022F4")]
		[Address(RVA = "0x14B3BA4", Offset = "0x14B3BA4", VA = "0x14B3BA4")]
		public static string GetUniqueMaterialShopName(int assetID, int materialID)
		{
			return null;
		}
	}
	[Token(Token = "0x2000465")]
	public static class HEU_SessionPDG
	{
	}
	[Serializable]
	[Token(Token = "0x2000466")]
	public class HEU_SessionSyncData
	{
		[Token(Token = "0x200069D")]
		public enum Status
		{
			[Token(Token = "0x4002085")]
			Stopped,
			[Token(Token = "0x4002086")]
			Started,
			[Token(Token = "0x4002087")]
			Connecting,
			[Token(Token = "0x4002088")]
			Initializing,
			[Token(Token = "0x4002089")]
			Connected
		}

		[Token(Token = "0x4001711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private int _status;

		[Token(Token = "0x4001712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float _timeLastUpdate;

		[Token(Token = "0x4001713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float _timeStartConnection;

		[Token(Token = "0x4001714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string _newNodeName;

		[Token(Token = "0x4001715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int _nodeTypeIndex;

		[Token(Token = "0x4001716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool _validForConnection;

		[Token(Token = "0x4001717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HAPI_Viewport _viewportHAPI;

		[Token(Token = "0x4001718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public HAPI_Viewport _viewportLocal;

		[Token(Token = "0x4001719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool _viewportJustUpdated;

		[Token(Token = "0x400171A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		public HAPI_SessionSyncInfo _syncInfo;

		[Token(Token = "0x170003FE")]
		public Status SyncStatus
		{
			[Token(Token = "0x60022F6")]
			[Address(RVA = "0x14B420C", Offset = "0x14B420C", VA = "0x14B420C")]
			get
			{
				return default(Status);
			}
			[Token(Token = "0x60022F7")]
			[Address(RVA = "0x14B4220", Offset = "0x14B4220", VA = "0x14B4220")]
			set
			{
			}
		}

		[Token(Token = "0x60022F8")]
		[Address(RVA = "0x14B1158", Offset = "0x14B1158", VA = "0x14B1158")]
		public HEU_SessionSyncData()
		{
		}
	}
	[Token(Token = "0x2000467")]
	public class HEU_AssetSync : HEU_BaseSync
	{
		[Token(Token = "0x200069E")]
		public delegate void AssetSyncCallback(HEU_AssetSync assetSync);

		[Token(Token = "0x400171B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public AssetSyncCallback _onAssetLoaded;

		[Token(Token = "0x400171C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public string _assetPath;

		[Token(Token = "0x60022F9")]
		[Address(RVA = "0x1523EBC", Offset = "0x1523EBC", VA = "0x1523EBC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60022FA")]
		[Address(RVA = "0x1523EC0", Offset = "0x1523EC0", VA = "0x1523EC0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60022FB")]
		[Address(RVA = "0x1523ECC", Offset = "0x1523ECC", VA = "0x1523ECC")]
		public void InitializeAsset(HEU_SessionBase session, string assetPath, string nodeName, Transform parent, Vector3 startPosition)
		{
		}

		[Token(Token = "0x60022FC")]
		[Address(RVA = "0x1523FDC", Offset = "0x1523FDC", VA = "0x1523FDC")]
		private HEU_ThreadedTaskLoadGeo CreateThreadedTask()
		{
			return null;
		}

		[Token(Token = "0x60022FD")]
		[Address(RVA = "0x1524050", Offset = "0x1524050", VA = "0x1524050")]
		public void SetLoadCallback(HEU_ThreadedTaskLoadGeo.HEU_LoadCallback callback)
		{
		}

		[Token(Token = "0x60022FE")]
		[Address(RVA = "0x152408C", Offset = "0x152408C", VA = "0x152408C", Slot = "9")]
		protected override void SetupLoadTask(HEU_SessionBase session)
		{
		}

		[Token(Token = "0x60022FF")]
		[Address(RVA = "0x15240EC", Offset = "0x15240EC", VA = "0x15240EC", Slot = "13")]
		public override void OnLoadComplete(HEU_ThreadedTaskLoadGeo.HEU_LoadData loadData)
		{
		}

		[Token(Token = "0x6002300")]
		[Address(RVA = "0x1524534", Offset = "0x1524534", VA = "0x1524534", Slot = "11")]
		public override void Resync()
		{
		}

		[Token(Token = "0x6002301")]
		[Address(RVA = "0x1524574", Offset = "0x1524574", VA = "0x1524574")]
		public HEU_AssetSync()
		{
		}
	}
	[Token(Token = "0x2000468")]
	[ExecuteInEditMode]
	public class HEU_BaseSync : MonoBehaviour
	{
		[Token(Token = "0x400171D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int _cookNodeID;

		[Token(Token = "0x400171E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public long _sessionID;

		[Token(Token = "0x400171F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string _nodeName;

		[Token(Token = "0x4001720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool _initialized;

		[Token(Token = "0x4001721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool _syncing;

		[Token(Token = "0x4001722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public bool _deleteParent;

		[Token(Token = "0x4001723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<HEU_GeneratedOutput> _generatedOutputs;

		[Token(Token = "0x4001724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string _outputCacheDirectory;

		[Token(Token = "0x4001725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<string> _outputCacheFilePaths;

		[Token(Token = "0x4001726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public HEU_GenerateOptions _generateOptions;

		[Token(Token = "0x4001727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public StringBuilder _log;

		[Token(Token = "0x4001728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public StringBuilder _error;

		[Token(Token = "0x4001729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool _sessionSyncAutoCook;

		[Token(Token = "0x400172A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected HEU_ThreadedTaskLoadGeo _loadTask;

		[Token(Token = "0x400172B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected int _totalCookCount;

		[Token(Token = "0x400172C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		protected bool _firstSyncComplete;

		[Token(Token = "0x6002302")]
		[Address(RVA = "0x15293CC", Offset = "0x15293CC", VA = "0x15293CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002303")]
		[Address(RVA = "0x15293D0", Offset = "0x15293D0", VA = "0x15293D0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002304")]
		[Address(RVA = "0x15293DC", Offset = "0x15293DC", VA = "0x15293DC", Slot = "4")]
		public virtual void DeleteSessionData()
		{
		}

		[Token(Token = "0x6002305")]
		[Address(RVA = "0x15294C4", Offset = "0x15294C4", VA = "0x15294C4", Slot = "5")]
		public virtual void DestroyGeneratedData()
		{
		}

		[Token(Token = "0x6002306")]
		[Address(RVA = "0x1529658", Offset = "0x1529658", VA = "0x1529658", Slot = "6")]
		protected virtual void Initialize()
		{
		}

		[Token(Token = "0x6002307")]
		[Address(RVA = "0x1529674", Offset = "0x1529674", VA = "0x1529674", Slot = "7")]
		public virtual HEU_SessionBase GetHoudiniSession(bool bCreateIfNotFound)
		{
			return null;
		}

		[Token(Token = "0x6002308")]
		[Address(RVA = "0x1529458", Offset = "0x1529458", VA = "0x1529458")]
		private int GetParentNodeID(HEU_SessionBase session)
		{
			return default(int);
		}

		[Token(Token = "0x6002309")]
		[Address(RVA = "0x1529800", Offset = "0x1529800", VA = "0x1529800")]
		public void Log(string msg)
		{
		}

		[Token(Token = "0x600230A")]
		[Address(RVA = "0x152981C", Offset = "0x152981C", VA = "0x152981C")]
		public void Error(string error)
		{
		}

		[Token(Token = "0x600230B")]
		[Address(RVA = "0x1529838", Offset = "0x1529838", VA = "0x1529838")]
		public bool IsLoaded()
		{
			return default(bool);
		}

		[Token(Token = "0x600230C")]
		[Address(RVA = "0x152985C", Offset = "0x152985C", VA = "0x152985C", Slot = "8")]
		public virtual void StartSync()
		{
		}

		[Token(Token = "0x600230D")]
		[Address(RVA = "0x15299B0", Offset = "0x15299B0", VA = "0x15299B0", Slot = "9")]
		protected virtual void SetupLoadTask(HEU_SessionBase session)
		{
		}

		[Token(Token = "0x600230E")]
		[Address(RVA = "0x15299B4", Offset = "0x15299B4", VA = "0x15299B4", Slot = "10")]
		public virtual void StopSync()
		{
		}

		[Token(Token = "0x600230F")]
		[Address(RVA = "0x1529A3C", Offset = "0x1529A3C", VA = "0x1529A3C", Slot = "11")]
		public virtual void Resync()
		{
		}

		[Token(Token = "0x6002310")]
		[Address(RVA = "0x1529A7C", Offset = "0x1529A7C", VA = "0x1529A7C", Slot = "12")]
		public virtual void Unload()
		{
		}

		[Token(Token = "0x6002311")]
		[Address(RVA = "0x1524124", Offset = "0x1524124", VA = "0x1524124", Slot = "13")]
		public virtual void OnLoadComplete(HEU_ThreadedTaskLoadGeo.HEU_LoadData loadData)
		{
		}

		[Token(Token = "0x6002312")]
		[Address(RVA = "0x1529B24", Offset = "0x1529B24", VA = "0x1529B24", Slot = "14")]
		public virtual void GenerateObjects(HEU_ThreadedTaskLoadGeo.HEU_LoadData loadData)
		{
		}

		[Token(Token = "0x6002313")]
		[Address(RVA = "0x1529BB8", Offset = "0x1529BB8", VA = "0x1529BB8", Slot = "15")]
		public virtual void GenerateGeometry(HEU_ThreadedTaskLoadGeo.HEU_LoadData loadData, int objIndex)
		{
		}

		[Token(Token = "0x6002314")]
		[Address(RVA = "0x152B7A8", Offset = "0x152B7A8", VA = "0x152B7A8")]
		public void OnStopped(HEU_ThreadedTaskLoadGeo.HEU_LoadData loadData)
		{
		}

		[Token(Token = "0x6002315")]
		[Address(RVA = "0x152A278", Offset = "0x152A278", VA = "0x152A278")]
		private void GenerateTerrain(List<HEU_LoadBufferVolume> terrainBuffers)
		{
		}

		[Token(Token = "0x6002316")]
		[Address(RVA = "0x1529CA0", Offset = "0x1529CA0", VA = "0x1529CA0")]
		private void GenerateMesh(List<HEU_LoadBufferMesh> meshBuffers)
		{
		}

		[Token(Token = "0x6002317")]
		[Address(RVA = "0x152B6F4", Offset = "0x152B6F4", VA = "0x152B6F4")]
		private void GenerateAllInstancers(List<HEU_LoadBufferInstancer> instancerBuffers, HEU_ThreadedTaskLoadGeo.HEU_LoadData loadData)
		{
		}

		[Token(Token = "0x6002318")]
		[Address(RVA = "0x152BC64", Offset = "0x152BC64", VA = "0x152BC64")]
		private void GenerateInstancer(HEU_LoadBufferInstancer instancerBuffer, Dictionary<int, HEU_LoadBufferBase> idBuffersMap)
		{
		}

		[Token(Token = "0x6002319")]
		[Address(RVA = "0x152BE78", Offset = "0x152BE78", VA = "0x152BE78")]
		private void GenerateInstancesFromNodeIDs(HEU_LoadBufferInstancer instancerBuffer, Dictionary<int, HEU_LoadBufferBase> idBuffersMap, Transform instanceRootTransform)
		{
		}

		[Token(Token = "0x600231A")]
		[Address(RVA = "0x152C548", Offset = "0x152C548", VA = "0x152C548")]
		private void GenerateInstancesFromAssetPaths(HEU_LoadBufferInstancer instancerBuffer, Transform instanceRootTransform)
		{
		}

		[Token(Token = "0x600231B")]
		[Address(RVA = "0x152CE08", Offset = "0x152CE08", VA = "0x152CE08")]
		private void CreateNewInstanceFromObject(GameObject assetSourceGO, int instanceIndex, Transform parentTransform, ref HAPI_Transform hapiTransform, string[] instancePrefixes, string instanceName, GameObject collisionSourceGO)
		{
		}

		[Token(Token = "0x600231C")]
		[Address(RVA = "0x15294C8", Offset = "0x15294C8", VA = "0x15294C8")]
		private void DestroyOutputs()
		{
		}

		[Token(Token = "0x600231D")]
		[Address(RVA = "0x152B8E4", Offset = "0x152B8E4", VA = "0x152B8E4")]
		private void SetOutputVisiblity(HEU_LoadBufferBase buffer)
		{
		}

		[Token(Token = "0x600231E")]
		[Address(RVA = "0x152B7F0", Offset = "0x152B7F0", VA = "0x152B7F0")]
		private string GetOutputCacheDirectory()
		{
			return null;
		}

		[Token(Token = "0x600231F")]
		[Address(RVA = "0x152D65C", Offset = "0x152D65C", VA = "0x152D65C")]
		public void SetOutputCacheDirectory(string directory)
		{
		}

		[Token(Token = "0x6002320")]
		[Address(RVA = "0x152B83C", Offset = "0x152B83C", VA = "0x152B83C")]
		private void AddGeneratedOutputFilePath(string path)
		{
		}

		[Token(Token = "0x6002321")]
		[Address(RVA = "0x152D664", Offset = "0x152D664", VA = "0x152D664", Slot = "16")]
		public virtual void SyncUpdate()
		{
		}

		[Token(Token = "0x6002322")]
		[Address(RVA = "0x1524578", Offset = "0x1524578", VA = "0x1524578")]
		public HEU_BaseSync()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000469")]
	public struct HEU_GenerateOptions
	{
		[Token(Token = "0x400172D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool _generateUVs;

		[Token(Token = "0x400172E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public bool _generateTangents;

		[Token(Token = "0x400172F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public bool _generateNormals;

		[Token(Token = "0x4001730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
		public bool _useLODGroups;

		[Token(Token = "0x4001731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public bool _splitPoints;
	}
	[Token(Token = "0x200046A")]
	public class HEU_GeoSync : HEU_BaseSync
	{
		[Token(Token = "0x4001732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public string _filePath;

		[Token(Token = "0x6002323")]
		[Address(RVA = "0x12CED84", Offset = "0x12CED84", VA = "0x12CED84", Slot = "9")]
		protected override void SetupLoadTask(HEU_SessionBase session)
		{
		}

		[Token(Token = "0x6002324")]
		[Address(RVA = "0x12CEE2C", Offset = "0x12CEE2C", VA = "0x12CEE2C")]
		public HEU_GeoSync()
		{
		}
	}
	[Token(Token = "0x200046B")]
	public class HEU_NodeSync : HEU_BaseSync
	{
		[Token(Token = "0x4001733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public string _nodeSaveFilePath;

		[Token(Token = "0x6002325")]
		[Address(RVA = "0x169D464", Offset = "0x169D464", VA = "0x169D464")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002326")]
		[Address(RVA = "0x169D468", Offset = "0x169D468", VA = "0x169D468")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002327")]
		[Address(RVA = "0x169D474", Offset = "0x169D474", VA = "0x169D474")]
		public void InitializeFromHoudini(HEU_SessionBase session, int nodeID, string nodeName, string filePath)
		{
		}

		[Token(Token = "0x6002328")]
		[Address(RVA = "0x169D538", Offset = "0x169D538", VA = "0x169D538", Slot = "9")]
		protected override void SetupLoadTask(HEU_SessionBase session)
		{
		}

		[Token(Token = "0x6002329")]
		[Address(RVA = "0x169D5E0", Offset = "0x169D5E0", VA = "0x169D5E0")]
		public bool SaveNodeToFile(string filePath)
		{
			return default(bool);
		}

		[Token(Token = "0x600232A")]
		[Address(RVA = "0x169D6C0", Offset = "0x169D6C0", VA = "0x169D6C0")]
		public static void CreateNodeSync(HEU_SessionBase session, string opName, string nodeNabel)
		{
		}

		[Token(Token = "0x600232B")]
		[Address(RVA = "0x169D9E8", Offset = "0x169D9E8", VA = "0x169D9E8", Slot = "11")]
		public override void Resync()
		{
		}

		[Token(Token = "0x600232C")]
		[Address(RVA = "0x169DA28", Offset = "0x169DA28", VA = "0x169DA28", Slot = "16")]
		public override void SyncUpdate()
		{
		}

		[Token(Token = "0x600232D")]
		[Address(RVA = "0x169DB38", Offset = "0x169DB38", VA = "0x169DB38")]
		public HEU_NodeSync()
		{
		}
	}
	[Token(Token = "0x200046C")]
	public abstract class HEU_Task
	{
		[Token(Token = "0x200069F")]
		public enum TaskStatus
		{
			[Token(Token = "0x400208B")]
			NONE,
			[Token(Token = "0x400208C")]
			PENDING_START,
			[Token(Token = "0x400208D")]
			STARTED,
			[Token(Token = "0x400208E")]
			REQUIRE_UPDATE,
			[Token(Token = "0x400208F")]
			PENDING_COMPLETE,
			[Token(Token = "0x4002090")]
			COMPLETED,
			[Token(Token = "0x4002091")]
			UNUSED
		}

		[Token(Token = "0x20006A0")]
		public enum TaskResult
		{
			[Token(Token = "0x4002093")]
			NONE,
			[Token(Token = "0x4002094")]
			SUCCESS,
			[Token(Token = "0x4002095")]
			FAILED,
			[Token(Token = "0x4002096")]
			KILLED
		}

		[Token(Token = "0x20006A1")]
		public delegate void TaskCallback(HEU_Task task);

		[Token(Token = "0x4001734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TaskStatus _status;

		[Token(Token = "0x4001735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public TaskResult _result;

		[Token(Token = "0x4001736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Guid _guid;

		[Token(Token = "0x4001737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TaskCallback _taskCompletedDelegate;

		[Token(Token = "0x170003FF")]
		public Guid TaskGuid
		{
			[Token(Token = "0x600232E")]
			[Address(RVA = "0x1633808", Offset = "0x1633808", VA = "0x1633808")]
			get
			{
				return default(Guid);
			}
		}

		[Token(Token = "0x600232F")]
		[Address(RVA = "0x1633814", Offset = "0x1633814", VA = "0x1633814")]
		public HEU_Task()
		{
		}

		[Token(Token = "0x6002330")]
		public abstract void DoTask();

		[Token(Token = "0x6002331")]
		[Address(RVA = "0x163388C", Offset = "0x163388C", VA = "0x163388C", Slot = "5")]
		public virtual void UpdateTask()
		{
		}

		[Token(Token = "0x6002332")]
		public abstract void KillTask();

		[Token(Token = "0x6002333")]
		public abstract void CompleteTask(TaskResult result);
	}
	[Token(Token = "0x200046D")]
	public class HEU_AssetTask : HEU_Task
	{
		[Token(Token = "0x20006A2")]
		public enum BuildType
		{
			[Token(Token = "0x4002098")]
			NONE,
			[Token(Token = "0x4002099")]
			LOAD,
			[Token(Token = "0x400209A")]
			COOK,
			[Token(Token = "0x400209B")]
			RELOAD
		}

		[Token(Token = "0x4001738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public BuildType _buildType;

		[Token(Token = "0x4001739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public HEU_HoudiniAsset _asset;

		[Token(Token = "0x400173A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string _assetPath;

		[Token(Token = "0x400173B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 _position;

		[Token(Token = "0x400173C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool _buildResult;

		[Token(Token = "0x400173D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public long _forceSessionID;

		[Token(Token = "0x6002334")]
		[Address(RVA = "0x15246E0", Offset = "0x15246E0", VA = "0x15246E0")]
		public HEU_SessionBase GetTaskSession()
		{
			return null;
		}

		[Token(Token = "0x6002335")]
		[Address(RVA = "0x15247C4", Offset = "0x15247C4", VA = "0x15247C4", Slot = "4")]
		public override void DoTask()
		{
		}

		[Token(Token = "0x6002336")]
		[Address(RVA = "0x1524B88", Offset = "0x1524B88", VA = "0x1524B88", Slot = "6")]
		public override void KillTask()
		{
		}

		[Token(Token = "0x6002337")]
		[Address(RVA = "0x1524CC8", Offset = "0x1524CC8", VA = "0x1524CC8", Slot = "7")]
		public override void CompleteTask(TaskResult result)
		{
		}

		[Token(Token = "0x6002338")]
		[Address(RVA = "0x1524E08", Offset = "0x1524E08", VA = "0x1524E08")]
		private void CookCompletedCallback(HEU_HoudiniAsset asset, bool bSuccess, List<GameObject> outputs)
		{
		}

		[Token(Token = "0x6002339")]
		[Address(RVA = "0x1524EA8", Offset = "0x1524EA8", VA = "0x1524EA8")]
		public HEU_AssetTask()
		{
		}
	}
	[Token(Token = "0x200046E")]
	public class HEU_TaskManager
	{
		[Token(Token = "0x400173E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<HEU_Task> _tasks;

		[Token(Token = "0x400173F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<HEU_Task> _pendingAdd;

		[Token(Token = "0x4001740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static List<HEU_Task> _pendingRemove;

		[Token(Token = "0x600233A")]
		[Address(RVA = "0x1633C64", Offset = "0x1633C64", VA = "0x1633C64")]
		static HEU_TaskManager()
		{
		}

		[Token(Token = "0x600233B")]
		[Address(RVA = "0x1633D20", Offset = "0x1633D20", VA = "0x1633D20")]
		private static void Update()
		{
		}

		[Token(Token = "0x600233C")]
		[Address(RVA = "0x1633D24", Offset = "0x1633D24", VA = "0x1633D24")]
		public static HEU_Task GetTask(Guid taskGuid)
		{
			return null;
		}

		[Token(Token = "0x600233D")]
		[Address(RVA = "0x1633EAC", Offset = "0x1633EAC", VA = "0x1633EAC")]
		public static void AddTask(HEU_Task task)
		{
		}

		[Token(Token = "0x600233E")]
		[Address(RVA = "0x1633FCC", Offset = "0x1633FCC", VA = "0x1633FCC")]
		public static void KillTask(HEU_Task task, bool bRemove)
		{
		}

		[Token(Token = "0x600233F")]
		[Address(RVA = "0x16341D4", Offset = "0x16341D4", VA = "0x16341D4")]
		public static void KillTask(Guid taskGuid, bool bRemove)
		{
		}

		[Token(Token = "0x6002340")]
		[Address(RVA = "0x16340C0", Offset = "0x16340C0", VA = "0x16340C0")]
		public static void RemoveTask(HEU_Task task)
		{
		}

		[Token(Token = "0x6002341")]
		[Address(RVA = "0x1634288", Offset = "0x1634288", VA = "0x1634288")]
		public static void ExecuteTask(HEU_Task task)
		{
		}

		[Token(Token = "0x6002342")]
		[Address(RVA = "0x16342BC", Offset = "0x16342BC", VA = "0x16342BC")]
		public static void CompleteTask(HEU_Task task, HEU_Task.TaskResult result)
		{
		}

		[Token(Token = "0x6002343")]
		[Address(RVA = "0x16342E4", Offset = "0x16342E4", VA = "0x16342E4")]
		private static void InternalCompleteTask(HEU_Task task)
		{
		}

		[Token(Token = "0x6002344")]
		[Address(RVA = "0x1634348", Offset = "0x1634348", VA = "0x1634348")]
		public HEU_TaskManager()
		{
		}
	}
	[Token(Token = "0x200046F")]
	public class HEU_ThreadManager
	{
		[Token(Token = "0x4001741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static HEU_ThreadManager _instance;

		[Token(Token = "0x4001742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<HEU_ThreadedTask> _tasks;

		[Token(Token = "0x4001743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<HEU_ThreadedTask> _pendingAdd;

		[Token(Token = "0x4001744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<HEU_ThreadedTask> _pendingRemove;

		[Token(Token = "0x17000400")]
		public static HEU_ThreadManager Instance
		{
			[Token(Token = "0x6002345")]
			[Address(RVA = "0x16381B0", Offset = "0x16381B0", VA = "0x16381B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002346")]
		[Address(RVA = "0x1638200", Offset = "0x1638200", VA = "0x1638200")]
		private static void CreateInstance()
		{
		}

		[Token(Token = "0x6002347")]
		[Address(RVA = "0x1638204", Offset = "0x1638204", VA = "0x1638204", Slot = "1")]
		~HEU_ThreadManager()
		{
		}

		[Token(Token = "0x6002348")]
		[Address(RVA = "0x1638210", Offset = "0x1638210", VA = "0x1638210")]
		public void Register()
		{
		}

		[Token(Token = "0x6002349")]
		[Address(RVA = "0x163820C", Offset = "0x163820C", VA = "0x163820C")]
		public void Unregister()
		{
		}

		[Token(Token = "0x600234A")]
		[Address(RVA = "0x1638214", Offset = "0x1638214", VA = "0x1638214")]
		public void Update()
		{
		}

		[Token(Token = "0x600234B")]
		[Address(RVA = "0x163855C", Offset = "0x163855C", VA = "0x163855C")]
		public void AddTask(HEU_ThreadedTask task)
		{
		}

		[Token(Token = "0x600234C")]
		[Address(RVA = "0x163860C", Offset = "0x163860C", VA = "0x163860C")]
		public void RemoveTask(HEU_ThreadedTask task)
		{
		}

		[Token(Token = "0x600234D")]
		[Address(RVA = "0x16386BC", Offset = "0x16386BC", VA = "0x16386BC")]
		public HEU_ThreadManager()
		{
		}
	}
	[Token(Token = "0x2000470")]
	public class HEU_LoadBufferBase
	{
		[Token(Token = "0x4001745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int _id;

		[Token(Token = "0x4001746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string _name;

		[Token(Token = "0x4001747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool _bInstanced;

		[Token(Token = "0x4001748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool _bInstancer;

		[Token(Token = "0x4001749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HEU_GeneratedOutput _generatedOutput;

		[Token(Token = "0x600234E")]
		[Address(RVA = "0x169A144", Offset = "0x169A144", VA = "0x169A144")]
		public void InitializeBuffer(int id, string name, bool bInstanced, bool bInstancer)
		{
		}

		[Token(Token = "0x600234F")]
		[Address(RVA = "0x169A160", Offset = "0x169A160", VA = "0x169A160")]
		public HEU_LoadBufferBase()
		{
		}
	}
	[Token(Token = "0x2000471")]
	public class HEU_LoadBufferMesh : HEU_LoadBufferBase
	{
		[Token(Token = "0x400174A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HEU_GenerateGeoCache _geoCache;

		[Token(Token = "0x400174B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<HEU_GeoGroup> _LODGroupMeshes;

		[Token(Token = "0x400174C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int _defaultMaterialKey;

		[Token(Token = "0x400174D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool _bGenerateUVs;

		[Token(Token = "0x400174E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		public bool _bGenerateTangents;

		[Token(Token = "0x400174F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
		public bool _bGenerateNormals;

		[Token(Token = "0x4001750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x47")]
		public bool _bPartInstanced;

		[Token(Token = "0x6002350")]
		[Address(RVA = "0x169A170", Offset = "0x169A170", VA = "0x169A170")]
		public HEU_LoadBufferMesh()
		{
		}
	}
	[Token(Token = "0x2000472")]
	public class HEU_LoadBufferVolume : HEU_LoadBufferBase
	{
		[Token(Token = "0x4001751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int _tileIndex;

		[Token(Token = "0x4001752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<HEU_LoadBufferVolumeLayer> _splatLayers;

		[Token(Token = "0x4001753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int _heightMapWidth;

		[Token(Token = "0x4001754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int _heightMapHeight;

		[Token(Token = "0x4001755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float[,] _heightMap;

		[Token(Token = "0x4001756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float[,,] _splatMaps;

		[Token(Token = "0x4001757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float _terrainSizeX;

		[Token(Token = "0x4001758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float _terrainSizeY;

		[Token(Token = "0x4001759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float _heightRange;

		[Token(Token = "0x400175A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Vector3 _position;

		[Token(Token = "0x400175B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public string _terrainDataPath;

		[Token(Token = "0x400175C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public string _terrainDataExportPath;

		[Token(Token = "0x400175D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public HEU_VolumeScatterTrees _scatterTrees;

		[Token(Token = "0x400175E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public List<HEU_DetailPrototype> _detailPrototypes;

		[Token(Token = "0x400175F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public List<int[,]> _detailMaps;

		[Token(Token = "0x4001760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public HEU_DetailProperties _detailProperties;

		[Token(Token = "0x4001761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public string _specifiedTerrainMaterialName;

		[Token(Token = "0x6002351")]
		[Address(RVA = "0x169A178", Offset = "0x169A178", VA = "0x169A178")]
		public HEU_LoadBufferVolume()
		{
		}
	}
	[Token(Token = "0x2000473")]
	public class HEU_LoadBufferVolumeLayer
	{
		[Token(Token = "0x4001762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string _layerName;

		[Token(Token = "0x4001763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int _partID;

		[Token(Token = "0x4001764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int _heightMapWidth;

		[Token(Token = "0x4001765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int _heightMapHeight;

		[Token(Token = "0x4001766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float _strength;

		[Token(Token = "0x4001767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string _diffuseTexturePath;

		[Token(Token = "0x4001768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string _maskTexturePath;

		[Token(Token = "0x4001769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float _metallic;

		[Token(Token = "0x400176A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string _normalTexturePath;

		[Token(Token = "0x400176B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float _normalScale;

		[Token(Token = "0x400176C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float _smoothness;

		[Token(Token = "0x400176D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Color _specularColor;

		[Token(Token = "0x400176E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vector2 _tileSize;

		[Token(Token = "0x400176F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Vector2 _tileOffset;

		[Token(Token = "0x4001770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool _uiExpanded;

		[Token(Token = "0x4001771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public int _tile;

		[Token(Token = "0x4001772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float[] _normalizedHeights;

		[Token(Token = "0x4001773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float _minHeight;

		[Token(Token = "0x4001774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float _maxHeight;

		[Token(Token = "0x4001775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float _heightRange;

		[Token(Token = "0x4001776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float _terrainSizeX;

		[Token(Token = "0x4001777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float _terrainSizeY;

		[Token(Token = "0x4001778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public Vector3 _position;

		[Token(Token = "0x4001779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Vector3 _minBounds;

		[Token(Token = "0x400177A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public Vector3 _maxBounds;

		[Token(Token = "0x400177B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Vector3 _center;

		[Token(Token = "0x400177C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public string _layerPath;

		[Token(Token = "0x400177D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public bool _hasLayerAttributes;

		[Token(Token = "0x400177E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public HFLayerType _layerType;

		[Token(Token = "0x6002352")]
		[Address(RVA = "0x169A238", Offset = "0x169A238", VA = "0x169A238")]
		public HEU_LoadBufferVolumeLayer()
		{
		}
	}
	[Token(Token = "0x2000474")]
	public class HEU_LoadBufferInstancer : HEU_LoadBufferBase
	{
		[Token(Token = "0x400177F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HAPI_Transform[] _instanceTransforms;

		[Token(Token = "0x4001780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string[] _instancePrefixes;

		[Token(Token = "0x4001781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int[] _instanceNodeIDs;

		[Token(Token = "0x4001782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string[] _assetPaths;

		[Token(Token = "0x4001783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string[] _collisionAssetPaths;

		[Token(Token = "0x6002353")]
		[Address(RVA = "0x169A168", Offset = "0x169A168", VA = "0x169A168")]
		public HEU_LoadBufferInstancer()
		{
		}
	}
	[Token(Token = "0x2000475")]
	public class HEU_ThreadedTask
	{
		[Token(Token = "0x4001784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool _isComplete;

		[Token(Token = "0x4001785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool _isActive;

		[Token(Token = "0x4001786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		private bool _stopRequested;

		[Token(Token = "0x4001787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object _lockHandle;

		[Token(Token = "0x4001788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Thread _thread;

		[Token(Token = "0x4001789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ThreadPriority _priority;

		[Token(Token = "0x400178A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool _isBackground;

		[Token(Token = "0x400178B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected string _name;

		[Token(Token = "0x17000401")]
		public string TaskName
		{
			[Token(Token = "0x600235E")]
			[Address(RVA = "0x1638DB0", Offset = "0x1638DB0", VA = "0x1638DB0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000402")]
		public bool IsComplete
		{
			[Token(Token = "0x600235F")]
			[Address(RVA = "0x1638A4C", Offset = "0x1638A4C", VA = "0x1638A4C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002360")]
			[Address(RVA = "0x163896C", Offset = "0x163896C", VA = "0x163896C")]
			set
			{
			}
		}

		[Token(Token = "0x17000403")]
		public bool IsActive
		{
			[Token(Token = "0x6002361")]
			[Address(RVA = "0x16384C8", Offset = "0x16384C8", VA = "0x16384C8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002362")]
			[Address(RVA = "0x16388D8", Offset = "0x16388D8", VA = "0x16388D8")]
			set
			{
			}
		}

		[Token(Token = "0x17000404")]
		public bool StopRequested
		{
			[Token(Token = "0x6002363")]
			[Address(RVA = "0x1638CDC", Offset = "0x1638CDC", VA = "0x1638CDC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002364")]
			[Address(RVA = "0x1638AE0", Offset = "0x1638AE0", VA = "0x1638AE0")]
			set
			{
			}
		}

		[Token(Token = "0x17000405")]
		public ThreadPriority Priority
		{
			[Token(Token = "0x6002365")]
			[Address(RVA = "0x1638DB8", Offset = "0x1638DB8", VA = "0x1638DB8")]
			get
			{
				return default(ThreadPriority);
			}
			[Token(Token = "0x6002366")]
			[Address(RVA = "0x1638DC0", Offset = "0x1638DC0", VA = "0x1638DC0")]
			set
			{
			}
		}

		[Token(Token = "0x17000406")]
		public bool IsBackground
		{
			[Token(Token = "0x6002367")]
			[Address(RVA = "0x1638DC8", Offset = "0x1638DC8", VA = "0x1638DC8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002368")]
			[Address(RVA = "0x1638DD0", Offset = "0x1638DD0", VA = "0x1638DD0")]
			set
			{
			}
		}

		[Token(Token = "0x6002354")]
		[Address(RVA = "0x1638764", Offset = "0x1638764", VA = "0x1638764", Slot = "4")]
		public virtual void Start()
		{
		}

		[Token(Token = "0x6002355")]
		[Address(RVA = "0x1638A00", Offset = "0x1638A00", VA = "0x1638A00", Slot = "5")]
		public virtual void Stop()
		{
		}

		[Token(Token = "0x6002356")]
		[Address(RVA = "0x1638B74", Offset = "0x1638B74", VA = "0x1638B74", Slot = "6")]
		public virtual void Abort()
		{
		}

		[Token(Token = "0x6002357")]
		[Address(RVA = "0x1638BB8", Offset = "0x1638BB8", VA = "0x1638BB8", Slot = "7")]
		public virtual void Reset()
		{
		}

		[Token(Token = "0x6002358")]
		[Address(RVA = "0x1638C74", Offset = "0x1638C74", VA = "0x1638C74", Slot = "8")]
		public virtual void Update()
		{
		}

		[Token(Token = "0x6002359")]
		[Address(RVA = "0x1638D70", Offset = "0x1638D70", VA = "0x1638D70", Slot = "9")]
		protected virtual void DoWork()
		{
		}

		[Token(Token = "0x600235A")]
		[Address(RVA = "0x1638D74", Offset = "0x1638D74", VA = "0x1638D74", Slot = "10")]
		protected virtual void OnComplete()
		{
		}

		[Token(Token = "0x600235B")]
		[Address(RVA = "0x1638D78", Offset = "0x1638D78", VA = "0x1638D78", Slot = "11")]
		protected virtual void OnStopped()
		{
		}

		[Token(Token = "0x600235C")]
		[Address(RVA = "0x1638D7C", Offset = "0x1638D7C", VA = "0x1638D7C", Slot = "12")]
		protected virtual void CleanUp()
		{
		}

		[Token(Token = "0x600235D")]
		[Address(RVA = "0x1638D80", Offset = "0x1638D80", VA = "0x1638D80")]
		private void Run()
		{
		}

		[Token(Token = "0x6002369")]
		[Address(RVA = "0x1638DDC", Offset = "0x1638DDC", VA = "0x1638DDC")]
		public HEU_ThreadedTask()
		{
		}
	}
	[Token(Token = "0x2000476")]
	public class HEU_ThreadedTaskLoadGeo : HEU_ThreadedTask
	{
		[Token(Token = "0x20006A3")]
		public enum LoadType
		{
			[Token(Token = "0x400209D")]
			FILE,
			[Token(Token = "0x400209E")]
			NODE,
			[Token(Token = "0x400209F")]
			ASSET
		}

		[Token(Token = "0x20006A4")]
		public class HEU_LoadData
		{
			[Token(Token = "0x20006D0")]
			public enum LoadStatus
			{
				[Token(Token = "0x4002145")]
				NONE,
				[Token(Token = "0x4002146")]
				STARTED,
				[Token(Token = "0x4002147")]
				SUCCESS,
				[Token(Token = "0x4002148")]
				ERROR
			}

			[Token(Token = "0x40020A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int _cookNodeID;

			[Token(Token = "0x40020A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public LoadStatus _loadStatus;

			[Token(Token = "0x40020A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string _logStr;

			[Token(Token = "0x40020A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HEU_SessionBase _session;

			[Token(Token = "0x40020A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public List<HEU_LoadObject> _loadedObjects;

			[Token(Token = "0x40020A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Dictionary<int, HEU_LoadBufferBase> _idBuffersMap;

			[Token(Token = "0x6002C27")]
			[Address(RVA = "0x1638F30", Offset = "0x1638F30", VA = "0x1638F30")]
			public HEU_LoadData()
			{
			}
		}

		[Token(Token = "0x20006A5")]
		public class HEU_LoadObject
		{
			[Token(Token = "0x40020A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int _objectNodeID;

			[Token(Token = "0x40020A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int _displayNodeID;

			[Token(Token = "0x40020A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<HEU_LoadBufferVolume> _terrainBuffers;

			[Token(Token = "0x40020A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<HEU_LoadBufferMesh> _meshBuffers;

			[Token(Token = "0x40020AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public List<HEU_LoadBufferInstancer> _instancerBuffers;

			[Token(Token = "0x6002C28")]
			[Address(RVA = "0x1639AAC", Offset = "0x1639AAC", VA = "0x1639AAC")]
			public HEU_LoadObject()
			{
			}
		}

		[Token(Token = "0x20006A6")]
		public enum HEU_LoadCallbackType
		{
			[Token(Token = "0x40020AC")]
			PRECOOK,
			[Token(Token = "0x40020AD")]
			POSTCOOK
		}

		[Token(Token = "0x20006A7")]
		public delegate void HEU_LoadCallback(HEU_SessionBase session, HEU_LoadData loadData, HEU_LoadCallbackType callbackType);

		[Token(Token = "0x400178C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HEU_BaseSync _ownerSync;

		[Token(Token = "0x400178D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private HEU_SessionBase _session;

		[Token(Token = "0x400178E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private HEU_GenerateOptions _generateOptions;

		[Token(Token = "0x400178F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private LoadType _loadType;

		[Token(Token = "0x4001790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string _filePath;

		[Token(Token = "0x4001791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private HEU_LoadData _loadData;

		[Token(Token = "0x4001792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private HEU_LoadCallback _loadCallback;

		[Token(Token = "0x600236A")]
		[Address(RVA = "0x1638E4C", Offset = "0x1638E4C", VA = "0x1638E4C")]
		public void SetupLoad(HEU_SessionBase session, HEU_BaseSync ownerSync, LoadType loadType, int cookNodeID, string name, string filePath)
		{
		}

		[Token(Token = "0x600236B")]
		[Address(RVA = "0x1638F38", Offset = "0x1638F38", VA = "0x1638F38")]
		public void SetupLoadNode(HEU_SessionBase session, HEU_BaseSync ownerSync, int cookNodeID, string name)
		{
		}

		[Token(Token = "0x600236C")]
		[Address(RVA = "0x1638F4C", Offset = "0x1638F4C", VA = "0x1638F4C")]
		public void SetupLoadFile(HEU_SessionBase session, HEU_BaseSync ownerSync, int cookNodeID, string filePath)
		{
		}

		[Token(Token = "0x600236D")]
		[Address(RVA = "0x1638F60", Offset = "0x1638F60", VA = "0x1638F60")]
		public void SetupLoadAsset(HEU_SessionBase session, HEU_BaseSync ownerSync, string assetPath, string name)
		{
		}

		[Token(Token = "0x600236E")]
		[Address(RVA = "0x1638F74", Offset = "0x1638F74", VA = "0x1638F74")]
		public void SetLoadCallback(HEU_LoadCallback loadCallback)
		{
		}

		[Token(Token = "0x600236F")]
		[Address(RVA = "0x1638F7C", Offset = "0x1638F7C", VA = "0x1638F7C", Slot = "9")]
		protected override void DoWork()
		{
		}

		[Token(Token = "0x6002370")]
		[Address(RVA = "0x1639764", Offset = "0x1639764", VA = "0x1639764", Slot = "13")]
		protected virtual bool CookNode(HEU_SessionBase session, int cookNodeID)
		{
			return default(bool);
		}

		[Token(Token = "0x6002371")]
		[Address(RVA = "0x163993C", Offset = "0x163993C", VA = "0x163993C", Slot = "14")]
		protected virtual bool LoadObjectBuffers(HEU_SessionBase session, ref HAPI_ObjectInfo objectInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x6002372")]
		[Address(RVA = "0x1639AB4", Offset = "0x1639AB4", VA = "0x1639AB4", Slot = "15")]
		protected virtual bool LoadNodeBuffer(HEU_SessionBase session, int nodeID, HEU_LoadObject loadObject)
		{
			return default(bool);
		}

		[Token(Token = "0x6002373")]
		[Address(RVA = "0x163B990", Offset = "0x163B990", VA = "0x163B990", Slot = "16")]
		protected virtual void BuildBufferIDsMap(HEU_LoadData loadData)
		{
		}

		[Token(Token = "0x6002374")]
		[Address(RVA = "0x163BDA4", Offset = "0x163BDA4", VA = "0x163BDA4", Slot = "17")]
		public virtual bool DoFileLoad()
		{
			return default(bool);
		}

		[Token(Token = "0x6002375")]
		[Address(RVA = "0x163C220", Offset = "0x163C220", VA = "0x163C220", Slot = "18")]
		public virtual bool DoAssetLoad()
		{
			return default(bool);
		}

		[Token(Token = "0x6002376")]
		[Address(RVA = "0x1639D94", Offset = "0x1639D94", VA = "0x1639D94")]
		private bool QueryParts(int nodeID, ref List<HAPI_PartInfo> meshParts, ref List<HAPI_PartInfo> volumeParts, ref List<HAPI_PartInfo> instancerParts, ref List<HAPI_PartInfo> curveParts, ref List<HAPI_PartInfo> scatterInstancerParts)
		{
			return default(bool);
		}

		[Token(Token = "0x6002377")]
		[Address(RVA = "0x163C5A4", Offset = "0x163C5A4", VA = "0x163C5A4", Slot = "10")]
		protected override void OnComplete()
		{
		}

		[Token(Token = "0x6002378")]
		[Address(RVA = "0x163C644", Offset = "0x163C644", VA = "0x163C644", Slot = "11")]
		protected override void OnStopped()
		{
		}

		[Token(Token = "0x6002379")]
		[Address(RVA = "0x163C6DC", Offset = "0x163C6DC", VA = "0x163C6DC", Slot = "12")]
		protected override void CleanUp()
		{
		}

		[Token(Token = "0x600237A")]
		[Address(RVA = "0x1639290", Offset = "0x1639290", VA = "0x1639290")]
		private void SetLog(HEU_LoadData.LoadStatus status, string logStr)
		{
		}

		[Token(Token = "0x600237B")]
		[Address(RVA = "0x163C078", Offset = "0x163C078", VA = "0x163C078")]
		private bool CreateFileNode(out int fileNodeID)
		{
			return default(bool);
		}

		[Token(Token = "0x600237C")]
		[Address(RVA = "0x163C6E4", Offset = "0x163C6E4", VA = "0x163C6E4", Slot = "19")]
		public virtual int GetCookNodeID()
		{
			return default(int);
		}

		[Token(Token = "0x600237D")]
		[Address(RVA = "0x163C108", Offset = "0x163C108", VA = "0x163C108")]
		private int GetDisplayNodeID(int objNodeID)
		{
			return default(int);
		}

		[Token(Token = "0x600237E")]
		[Address(RVA = "0x163C158", Offset = "0x163C158", VA = "0x163C158")]
		private bool SetFileParm(int fileNodeID, string filePath)
		{
			return default(bool);
		}

		[Token(Token = "0x600237F")]
		[Address(RVA = "0x1639930", Offset = "0x1639930", VA = "0x1639930")]
		private void Sleep()
		{
		}

		[Token(Token = "0x6002380")]
		[Address(RVA = "0x163A504", Offset = "0x163A504", VA = "0x163A504")]
		public bool GenerateTerrainBuffers(HEU_SessionBase session, int nodeID, List<HAPI_PartInfo> volumeParts, List<HAPI_PartInfo> scatterInstancerParts, out List<HEU_LoadBufferVolume> volumeBuffers)
		{
			return default(bool);
		}

		[Token(Token = "0x6002381")]
		[Address(RVA = "0x163C700", Offset = "0x163C700", VA = "0x163C700")]
		private void LoadStringFromAttribute(HEU_SessionBase session, int geoID, int partID, string attrName, ref string strValue)
		{
		}

		[Token(Token = "0x6002382")]
		[Address(RVA = "0x163C794", Offset = "0x163C794", VA = "0x163C794")]
		private void LoadFloatFromAttribute(HEU_SessionBase session, int geoID, int partID, string attrName, ref float floatValue)
		{
		}

		[Token(Token = "0x6002383")]
		[Address(RVA = "0x163C8B4", Offset = "0x163C8B4", VA = "0x163C8B4")]
		private void LoadLayerColorFromAttribute(HEU_SessionBase session, int geoID, int partID, string attrName, ref Color colorValue)
		{
		}

		[Token(Token = "0x6002384")]
		[Address(RVA = "0x163CA78", Offset = "0x163CA78", VA = "0x163CA78")]
		private void LoadLayerVector2FromAttribute(HEU_SessionBase session, int geoID, int partID, string attrName, ref Vector2 vectorValue)
		{
		}

		[Token(Token = "0x6002385")]
		[Address(RVA = "0x163A100", Offset = "0x163A100", VA = "0x163A100")]
		public bool GenerateMeshBuffers(HEU_SessionBase session, int nodeID, List<HAPI_PartInfo> meshParts, bool bSplitPoints, bool bUseLODGroups, bool bGenerateUVs, bool bGenerateTangents, bool bGenerateNormals, out List<HEU_LoadBufferMesh> meshBuffers)
		{
			return default(bool);
		}

		[Token(Token = "0x6002386")]
		[Address(RVA = "0x163B670", Offset = "0x163B670", VA = "0x163B670")]
		public bool GenerateInstancerBuffers(HEU_SessionBase session, int nodeID, List<HAPI_PartInfo> instancerParts, out List<HEU_LoadBufferInstancer> instancerBuffers)
		{
			return default(bool);
		}

		[Token(Token = "0x6002387")]
		[Address(RVA = "0x163CCEC", Offset = "0x163CCEC", VA = "0x163CCEC")]
		private HEU_LoadBufferInstancer GeneratePartsInstancerBuffer(HEU_SessionBase session, int geoID, int partID, string partName, HAPI_PartInfo partInfo)
		{
			return null;
		}

		[Token(Token = "0x6002388")]
		[Address(RVA = "0x163CF64", Offset = "0x163CF64", VA = "0x163CF64")]
		private HEU_LoadBufferInstancer GeneratePointAttributeInstancerBuffer(HEU_SessionBase session, int geoID, int partID, string partName, HAPI_PartInfo partInfo)
		{
			return null;
		}

		[Token(Token = "0x6002389")]
		[Address(RVA = "0x163CBD8", Offset = "0x163CBD8", VA = "0x163CBD8")]
		public static HEU_LoadBufferVolume GetLoadBufferVolumeFromTileIndex(int tileIndex, List<HEU_LoadBufferVolume> buffers)
		{
			return null;
		}

		[Token(Token = "0x600238A")]
		[Address(RVA = "0x163D2E4", Offset = "0x163D2E4", VA = "0x163D2E4")]
		public HEU_ThreadedTaskLoadGeo()
		{
		}
	}
	[Token(Token = "0x2000477")]
	public static class HEU_EditorUtility
	{
		[Token(Token = "0x20006A8")]
		public enum HEU_ReplacePrefabOptions
		{
			[Token(Token = "0x40020AF")]
			Default,
			[Token(Token = "0x40020B0")]
			ConnectToPrefab,
			[Token(Token = "0x40020B1")]
			ReplaceNameBased
		}

		[Token(Token = "0x600238B")]
		[Address(RVA = "0x152F6B8", Offset = "0x152F6B8", VA = "0x152F6B8")]
		public static void MarkSceneDirty()
		{
		}

		[Token(Token = "0x600238C")]
		[Address(RVA = "0x151DF0C", Offset = "0x151DF0C", VA = "0x151DF0C")]
		public static void SelectObject(GameObject gameObject)
		{
		}

		[Token(Token = "0x600238D")]
		[Address(RVA = "0x152F6BC", Offset = "0x152F6BC", VA = "0x152F6BC")]
		public static void SelectObjects(GameObject[] gameObjects)
		{
		}

		[Token(Token = "0x600238E")]
		[Address(RVA = "0x152F6C0", Offset = "0x152F6C0", VA = "0x152F6C0")]
		public static Vector3 GetSelectedObjectsMeanPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600238F")]
		[Address(RVA = "0x152F720", Offset = "0x152F720", VA = "0x152F720")]
		public static Matrix4x4 GetSelectedObjectsMeanTransform()
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6002390")]
		[Address(RVA = "0x152F788", Offset = "0x152F788", VA = "0x152F788")]
		public static GameObject SaveAsPrefabAsset(string path, GameObject go)
		{
			return null;
		}

		[Token(Token = "0x6002391")]
		[Address(RVA = "0x152F7FC", Offset = "0x152F7FC", VA = "0x152F7FC")]
		public static bool PrefabIsAddedComponentOverride(Component comp)
		{
			return default(bool);
		}

		[Token(Token = "0x6002392")]
		[Address(RVA = "0x152E5D4", Offset = "0x152E5D4", VA = "0x152E5D4")]
		public static bool IsEditorPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6002393")]
		[Address(RVA = "0x152F804", Offset = "0x152F804", VA = "0x152F804")]
		public static GameObject ReplacePrefab(GameObject go, UnityEngine.Object targetPrefab, HEU_ReplacePrefabOptions heuOptions)
		{
			return null;
		}

		[Token(Token = "0x6002394")]
		[Address(RVA = "0x152F878", Offset = "0x152F878", VA = "0x152F878")]
		public static bool IsPrefabInstance(GameObject go)
		{
			return default(bool);
		}

		[Token(Token = "0x6002395")]
		[Address(RVA = "0x152CFD8", Offset = "0x152CFD8", VA = "0x152CFD8")]
		public static bool IsPrefabAsset(GameObject go)
		{
			return default(bool);
		}

		[Token(Token = "0x6002396")]
		[Address(RVA = "0x152F8EC", Offset = "0x152F8EC", VA = "0x152F8EC")]
		public static bool IsEditingInPrefabMode(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6002397")]
		[Address(RVA = "0x152F8F4", Offset = "0x152F8F4", VA = "0x152F8F4")]
		public static bool IsDisconnectedPrefabInstance(GameObject go)
		{
			return default(bool);
		}

		[Token(Token = "0x6002398")]
		[Address(RVA = "0x152F968", Offset = "0x152F968", VA = "0x152F968")]
		public static UnityEngine.Object GetPrefabAsset(GameObject go)
		{
			return null;
		}

		[Token(Token = "0x6002399")]
		[Address(RVA = "0x152F9DC", Offset = "0x152F9DC", VA = "0x152F9DC")]
		public static string GetPrefabAssetPath(UnityEngine.Object obj)
		{
			return null;
		}

		[Token(Token = "0x600239A")]
		[Address(RVA = "0x152FA50", Offset = "0x152FA50", VA = "0x152FA50")]
		public static void DisconnectPrefabInstance(GameObject instance)
		{
		}

		[Token(Token = "0x600239B")]
		[Address(RVA = "0x152D04C", Offset = "0x152D04C", VA = "0x152D04C")]
		public static UnityEngine.Object InstantiatePrefab(GameObject prefabOriginal)
		{
			return null;
		}

		[Token(Token = "0x600239C")]
		[Address(RVA = "0x152D0C0", Offset = "0x152D0C0", VA = "0x152D0C0")]
		public static GameObject InstantiateGameObject(GameObject sourceGameObject, Transform parentTransform, bool instantiateInWorldSpace, bool bRegisterUndo)
		{
			return null;
		}

		[Token(Token = "0x600239D")]
		public static Component AddComponent<T>(GameObject target, bool bRegisterUndo)
		{
			return null;
		}

		[Token(Token = "0x600239E")]
		[Address(RVA = "0x152FABC", Offset = "0x152FABC", VA = "0x152FABC")]
		public static void UndoRecordObject(UnityEngine.Object objectToUndo, string name)
		{
		}

		[Token(Token = "0x600239F")]
		[Address(RVA = "0x152FAC0", Offset = "0x152FAC0", VA = "0x152FAC0")]
		public static void UndoCollapseCurrentGroup()
		{
		}

		[Token(Token = "0x60023A0")]
		[Address(RVA = "0x152FAC4", Offset = "0x152FAC4", VA = "0x152FAC4")]
		public static UnityEngine.Object[] CollectDependencies(UnityEngine.Object obj)
		{
			return null;
		}

		[Token(Token = "0x60023A1")]
		[Address(RVA = "0x152FB38", Offset = "0x152FB38", VA = "0x152FB38")]
		public static bool IsPersistant(UnityEngine.Object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60023A2")]
		[Address(RVA = "0x152FBAC", Offset = "0x152FBAC", VA = "0x152FBAC")]
		public static string GetUniqueNameForSibling(Transform parentTransform, string name)
		{
			return null;
		}

		[Token(Token = "0x60023A3")]
		[Address(RVA = "0x152FC20", Offset = "0x152FC20", VA = "0x152FC20")]
		public static void DisplayProgressBar(string title, string info, float progress)
		{
		}

		[Token(Token = "0x60023A4")]
		[Address(RVA = "0x152FC8C", Offset = "0x152FC8C", VA = "0x152FC8C")]
		public static void ClearProgressBar()
		{
		}

		[Token(Token = "0x60023A5")]
		[Address(RVA = "0x152FCF8", Offset = "0x152FCF8", VA = "0x152FCF8")]
		public static bool IsEditorNotInPlayModeAndNotGoingToPlayMode()
		{
			return default(bool);
		}

		[Token(Token = "0x60023A6")]
		[Address(RVA = "0x152FD2C", Offset = "0x152FD2C", VA = "0x152FD2C")]
		public static bool DisplayDialog(string title, string message, string ok, string cancel = "")
		{
			return default(bool);
		}

		[Token(Token = "0x60023A7")]
		[Address(RVA = "0x152FDCC", Offset = "0x152FDCC", VA = "0x152FDCC")]
		public static bool DisplayErrorDialog(string title, string message, string ok, string cancel = "")
		{
			return default(bool);
		}

		[Token(Token = "0x60023A8")]
		[Address(RVA = "0x152FE78", Offset = "0x152FE78", VA = "0x152FE78")]
		public static void RevealInFinder(string path)
		{
		}

		[Token(Token = "0x60023A9")]
		[Address(RVA = "0x152FE7C", Offset = "0x152FE7C", VA = "0x152FE7C")]
		public static void SetObjectDirtyForEditorUpdate(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x60023AA")]
		[Address(RVA = "0x152FE80", Offset = "0x152FE80", VA = "0x152FE80")]
		public static void SetStatic(GameObject go, bool bStatic)
		{
		}

		[Token(Token = "0x60023AB")]
		[Address(RVA = "0x152FE84", Offset = "0x152FE84", VA = "0x152FE84")]
		public static GameObject[] GetSelectedObjects()
		{
			return null;
		}

		[Token(Token = "0x60023AC")]
		[Address(RVA = "0x152FE8C", Offset = "0x152FE8C", VA = "0x152FE8C")]
		public static HEU_HoudiniAssetRoot[] GetSelectedAssetRoots()
		{
			return null;
		}

		[Token(Token = "0x60023AD")]
		[Address(RVA = "0x152FF04", Offset = "0x152FF04", VA = "0x152FF04")]
		public static HEU_HoudiniAssetRoot[] GetAllAssetRoots()
		{
			return null;
		}

		[Token(Token = "0x60023AE")]
		[Address(RVA = "0x152FF6C", Offset = "0x152FF6C", VA = "0x152FF6C")]
		public static void CookSelected()
		{
		}

		[Token(Token = "0x60023AF")]
		[Address(RVA = "0x1530074", Offset = "0x1530074", VA = "0x1530074")]
		public static void CookAll()
		{
		}

		[Token(Token = "0x60023B0")]
		[Address(RVA = "0x152FF80", Offset = "0x152FF80", VA = "0x152FF80")]
		public static void CookAssets(HEU_HoudiniAssetRoot[] rootAssets)
		{
		}

		[Token(Token = "0x60023B1")]
		[Address(RVA = "0x1530088", Offset = "0x1530088", VA = "0x1530088")]
		public static void RebuildSelected()
		{
		}

		[Token(Token = "0x60023B2")]
		[Address(RVA = "0x1530184", Offset = "0x1530184", VA = "0x1530184")]
		public static void RebuildAll()
		{
		}

		[Token(Token = "0x60023B3")]
		[Address(RVA = "0x153009C", Offset = "0x153009C", VA = "0x153009C")]
		public static void RebuildAssets(HEU_HoudiniAssetRoot[] rootAssets)
		{
		}

		[Token(Token = "0x60023B4")]
		[Address(RVA = "0x1530198", Offset = "0x1530198", VA = "0x1530198")]
		public static void BakeAndReplaceSelectedInScene()
		{
		}

		[Token(Token = "0x60023B5")]
		[Address(RVA = "0x1530290", Offset = "0x1530290", VA = "0x1530290")]
		public static void BakeAndReplaceAllInScene()
		{
		}

		[Token(Token = "0x60023B6")]
		[Address(RVA = "0x15301AC", Offset = "0x15301AC", VA = "0x15301AC")]
		public static void BakeAndReplaceAssets(HEU_HoudiniAssetRoot[] rootAssets)
		{
		}

		[Token(Token = "0x60023B7")]
		[Address(RVA = "0x15302A4", Offset = "0x15302A4", VA = "0x15302A4")]
		public static void ExportSelectedAssetsToGeoFiles()
		{
		}

		[Token(Token = "0x60023B8")]
		[Address(RVA = "0x15309D8", Offset = "0x15309D8", VA = "0x15309D8")]
		public static void ExportAllAssetsToGeoFiles()
		{
		}

		[Token(Token = "0x60023B9")]
		[Address(RVA = "0x15302B8", Offset = "0x15302B8", VA = "0x15302B8")]
		public static void ExportAssetsToGeoFiles(HEU_HoudiniAssetRoot[] rootAssets)
		{
		}

		[Token(Token = "0x60023BA")]
		[Address(RVA = "0x15309EC", Offset = "0x15309EC", VA = "0x15309EC")]
		public static string EditorSaveFolderPanel(string title, string folder, string defaultName)
		{
			return null;
		}

		[Token(Token = "0x60023BB")]
		[Address(RVA = "0x1530A60", Offset = "0x1530A60", VA = "0x1530A60")]
		public static void QuerySelectedMeshTopology()
		{
		}

		[Token(Token = "0x60023BC")]
		[Address(RVA = "0x1530A64", Offset = "0x1530A64", VA = "0x1530A64")]
		public static void RepaintScene()
		{
		}
	}
	[Token(Token = "0x2000478")]
	public class HEU_GeneralUtility
	{
		[Token(Token = "0x20006A9")]
		public delegate bool GetArray1ArgDel<T>(int arg1, [Out] T[] data, int start, int length);

		[Token(Token = "0x20006AA")]
		public delegate bool GetArray2ArgDel<ARG2, T>(int arg1, ARG2 arg2, [Out] T[] data, int start, int length);

		[Token(Token = "0x20006AB")]
		public delegate bool GetArray3ArgDel<ARG3, ARG2, T>(int arg1, ARG2 arg2, ARG3 arg3, [Out] T[] data, int start, int length);

		[Token(Token = "0x20006AC")]
		public delegate bool GetAttributeArrayInputFunc<T>(int geoID, int partID, string name, ref HAPI_AttributeInfo info, [Out] T[] items, int start, int end);

		[Token(Token = "0x20006AD")]
		public delegate bool SetAttributeArrayFunc<T>(int geoID, int partID, string attrName, ref HAPI_AttributeInfo attrInfo, T[] items, int start, int end);

		[Token(Token = "0x60023BD")]
		public static bool GetArray1Arg<T>(int arg1, GetArray1ArgDel<T> func, [Out] T[] data, int start, int count)
		{
			return default(bool);
		}

		[Token(Token = "0x60023BE")]
		public static bool GetArray2Arg<ARG2, T>(int arg1, ARG2 arg2, GetArray2ArgDel<ARG2, T> func, [Out] T[] data, int start, int count)
		{
			return default(bool);
		}

		[Token(Token = "0x60023BF")]
		public static bool GetArray3Arg<ARG3, ARG2, T>(int arg1, ARG2 arg2, ARG3 arg3, GetArray3ArgDel<ARG3, ARG2, T> func, [Out] T[] data, int start, int count)
		{
			return default(bool);
		}

		[Token(Token = "0x60023C0")]
		private static bool GetArray<ARG3, ARG2, T>(int arg1, ARG2 arg2, ARG3 arg3, GetArray1ArgDel<T> func1, GetArray2ArgDel<ARG2, T> func2, GetArray3ArgDel<ARG3, ARG2, T> func3, [Out] T[] data, int start, int count, int tupleSize)
		{
			return default(bool);
		}

		[Token(Token = "0x60023C1")]
		public static bool SetArray1Arg<T>(int arg1, GetArray1ArgDel<T> func, [Out] T[] data, int start, int count)
		{
			return default(bool);
		}

		[Token(Token = "0x60023C2")]
		public static bool SetArray2Arg<ARG2, T>(int arg1, ARG2 arg2, GetArray2ArgDel<ARG2, T> func, [Out] T[] data, int start, int count)
		{
			return default(bool);
		}

		[Token(Token = "0x60023C3")]
		public static bool SetArray<ARG2, T>(int arg1, ARG2 arg2, GetArray1ArgDel<T> func1, GetArray2ArgDel<ARG2, T> func2, [Out] T[] data, int start, int count, int tupleSize)
		{
			return default(bool);
		}

		[Token(Token = "0x60023C4")]
		public static bool DoArrayElementsMatch<T>(T[] array1, T[] array2)
		{
			return default(bool);
		}

		[Token(Token = "0x60023C5")]
		public static bool DoArrayElementsMatch<T>(T[] array1, int startOffset1, T[] array2, int startOffset2, int length)
		{
			return default(bool);
		}

		[Token(Token = "0x60023C6")]
		public static bool GetAttributeArray<T>(int geoID, int partID, string name, ref HAPI_AttributeInfo info, T[] items, GetAttributeArrayInputFunc<T> getFunc, int count)
		{
			return default(bool);
		}

		[Token(Token = "0x60023C7")]
		public static bool GetAttribute<T>(HEU_SessionBase session, int geoID, int partID, string name, ref HAPI_AttributeInfo info, ref T[] data, GetAttributeArrayInputFunc<T> getFunc)
		{
			return default(bool);
		}

		[Token(Token = "0x60023C8")]
		public static bool GetAttributeStrict<T>(HEU_SessionBase session, int geoID, int partID, HAPI_AttributeOwner attrOwner, string name, ref HAPI_AttributeInfo info, ref T[] data, GetAttributeArrayInputFunc<T> getFunc)
		{
			return default(bool);
		}

		[Token(Token = "0x60023C9")]
		[Address(RVA = "0x1530A68", Offset = "0x1530A68", VA = "0x1530A68")]
		public static void GetAttributeStringDataHelper(HEU_SessionBase session, int geoID, int partID, string name, ref HAPI_AttributeInfo info, ref int[] data)
		{
		}

		[Token(Token = "0x60023CA")]
		[Address(RVA = "0x151F758", Offset = "0x151F758", VA = "0x151F758")]
		public static string[] GetAttributeStringData(HEU_SessionBase session, int geoID, int partID, string name, ref HAPI_AttributeInfo attrInfo)
		{
			return null;
		}

		[Token(Token = "0x60023CB")]
		public static bool SetAttributeArray<T>(int geoID, int partID, string attrName, ref HAPI_AttributeInfo attrInfo, T[] items, SetAttributeArrayFunc<T> setFunc, int count)
		{
			return default(bool);
		}

		[Token(Token = "0x60023CC")]
		public static bool SetAttribute<T>(int geoID, int partID, string attrName, ref HAPI_AttributeInfo attrInfo, T[] items, SetAttributeArrayFunc<T> setFunc)
		{
			return default(bool);
		}

		[Token(Token = "0x60023CD")]
		[Address(RVA = "0x1530C48", Offset = "0x1530C48", VA = "0x1530C48")]
		public static bool CheckAttributeExists(HEU_SessionBase session, int geoID, int partID, string attribName, HAPI_AttributeOwner attribOwner)
		{
			return default(bool);
		}

		[Token(Token = "0x60023CE")]
		[Address(RVA = "0x151F520", Offset = "0x151F520", VA = "0x151F520")]
		public static bool GetAttributeInfo(HEU_SessionBase session, int geoID, int partID, string attribName, ref HAPI_AttributeInfo attribInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x60023CF")]
		[Address(RVA = "0x1530C9C", Offset = "0x1530C9C", VA = "0x1530C9C")]
		public static bool HasValidInstanceAttribute(HEU_SessionBase session, int geoID, int partID, string attribName)
		{
			return default(bool);
		}

		[Token(Token = "0x60023D0")]
		[Address(RVA = "0x152BA64", Offset = "0x152BA64", VA = "0x152BA64")]
		public static void UpdateGeneratedAttributeStore(HEU_SessionBase session, int geoID, int partID, GameObject go)
		{
		}

		[Token(Token = "0x60023D1")]
		[Address(RVA = "0x1530F94", Offset = "0x1530F94", VA = "0x1530F94")]
		public static HEU_OutputAttribute CreateOutputAttributeHelper(string attrName, ref HAPI_AttributeInfo attrInfo)
		{
			return null;
		}

		[Token(Token = "0x60023D2")]
		[Address(RVA = "0x1530CE8", Offset = "0x1530CE8", VA = "0x1530CE8")]
		public static HEU_OutputAttribute CreateOutputAttribute(HEU_SessionBase session, int geoID, int partID, string attrName, ref HAPI_AttributeInfo attrInfo)
		{
			return null;
		}

		[Token(Token = "0x60023D3")]
		[Address(RVA = "0x153102C", Offset = "0x153102C", VA = "0x153102C")]
		public static void CopyWorldTransformValues(Transform src, Transform dest)
		{
		}

		[Token(Token = "0x60023D4")]
		[Address(RVA = "0x1531098", Offset = "0x1531098", VA = "0x1531098")]
		public static void ApplyTransformTo(Transform src, Transform target)
		{
		}

		[Token(Token = "0x60023D5")]
		[Address(RVA = "0x1531198", Offset = "0x1531198", VA = "0x1531198")]
		public static void CopyLocalTransformValues(Transform src, Transform dest)
		{
		}

		[Token(Token = "0x60023D6")]
		[Address(RVA = "0x1531204", Offset = "0x1531204", VA = "0x1531204")]
		public static List<GameObject> GetChildGameObjects(GameObject parentGO)
		{
			return null;
		}

		[Token(Token = "0x60023D7")]
		[Address(RVA = "0x15314B4", Offset = "0x15314B4", VA = "0x15314B4")]
		public static List<GameObject> GetChildGameObjectsWithNamePattern(GameObject parentGO, string pattern, bool bExclude)
		{
			return null;
		}

		[Token(Token = "0x60023D8")]
		[Address(RVA = "0x15317DC", Offset = "0x15317DC", VA = "0x15317DC")]
		public static List<GameObject> GetInstanceChildObjects(GameObject parentGO)
		{
			return null;
		}

		[Token(Token = "0x60023D9")]
		[Address(RVA = "0x1531830", Offset = "0x1531830", VA = "0x1531830")]
		public static List<GameObject> GetNonInstanceChildObjects(GameObject parentGO)
		{
			return null;
		}

		[Token(Token = "0x60023DA")]
		[Address(RVA = "0x1531884", Offset = "0x1531884", VA = "0x1531884")]
		public static GameObject GetGameObjectByName(List<GameObject> goList, string name)
		{
			return null;
		}

		[Token(Token = "0x60023DB")]
		[Address(RVA = "0x15319BC", Offset = "0x15319BC", VA = "0x15319BC")]
		public static GameObject GetGameObjectByNameInProjectOnly(string name)
		{
			return null;
		}

		[Token(Token = "0x60023DC")]
		[Address(RVA = "0x1531A50", Offset = "0x1531A50", VA = "0x1531A50")]
		public static bool IsGameObjectInProject(GameObject go)
		{
			return default(bool);
		}

		[Token(Token = "0x60023DD")]
		[Address(RVA = "0x1531A68", Offset = "0x1531A68", VA = "0x1531A68")]
		public static GameObject GetGameObjectByNameInScene(string name)
		{
			return null;
		}

		[Token(Token = "0x60023DE")]
		[Address(RVA = "0x1531ADC", Offset = "0x1531ADC", VA = "0x1531ADC")]
		public static HEU_HoudiniAssetRoot GetHDAByGameObjectNameInScene(string name)
		{
			return null;
		}

		[Token(Token = "0x60023DF")]
		public static T GetOrCreateComponent<T>(GameObject gameObject) where T : Component
		{
			return null;
		}

		[Token(Token = "0x60023E0")]
		[Address(RVA = "0x1531B50", Offset = "0x1531B50", VA = "0x1531B50")]
		public static void DestroyGeneratedComponents(GameObject gameObject)
		{
		}

		[Token(Token = "0x60023E1")]
		[Address(RVA = "0x1531C18", Offset = "0x1531C18", VA = "0x1531C18")]
		public static void DestroyGeneratedMeshComponents(GameObject gameObject)
		{
		}

		[Token(Token = "0x60023E2")]
		[Address(RVA = "0x1531CA4", Offset = "0x1531CA4", VA = "0x1531CA4")]
		public static void DestroyTerrainComponents(GameObject gameObject)
		{
		}

		[Token(Token = "0x60023E3")]
		public static void DestroyComponent<T>(GameObject gameObject) where T : Component
		{
		}

		[Token(Token = "0x60023E4")]
		[Address(RVA = "0x152CF6C", Offset = "0x152CF6C", VA = "0x152CF6C")]
		public static void DestroyImmediate(UnityEngine.Object obj, bool bAllowDestroyingAssets = false, bool bRegisterUndo = false)
		{
		}

		[Token(Token = "0x60023E5")]
		[Address(RVA = "0x1531E18", Offset = "0x1531E18", VA = "0x1531E18")]
		public static void DestroyBakedGameObjects(List<GameObject> gameObjectsToDestroy)
		{
		}

		[Token(Token = "0x60023E6")]
		[Address(RVA = "0x1531E20", Offset = "0x1531E20", VA = "0x1531E20")]
		public static void DestroyBakedGameObjectsWithEndName(List<GameObject> gameObjectsToDestroy, string endName)
		{
		}

		[Token(Token = "0x60023E7")]
		[Address(RVA = "0x153218C", Offset = "0x153218C", VA = "0x153218C")]
		public static void DestroyLODGroup(GameObject targetGO, bool bDontDeletePersistantResources)
		{
		}

		[Token(Token = "0x60023E8")]
		[Address(RVA = "0x1531F28", Offset = "0x1531F28", VA = "0x1531F28")]
		public static void DestroyGeneratedMeshMaterialsLODGroups(GameObject targetGO, bool bDontDeletePersistantResources)
		{
		}

		[Token(Token = "0x60023E9")]
		[Address(RVA = "0x1532338", Offset = "0x1532338", VA = "0x1532338")]
		public static void DestroyGeneratedMaterial(Material material)
		{
		}

		[Token(Token = "0x60023EA")]
		[Address(RVA = "0x1532454", Offset = "0x1532454", VA = "0x1532454")]
		public static void DestroyMeshCollider(MeshCollider meshCollider, bool bDontDeletePersistantResources)
		{
		}

		[Token(Token = "0x60023EB")]
		[Address(RVA = "0x152D294", Offset = "0x152D294", VA = "0x152D294")]
		public static void SetGameObjectRenderVisiblity(GameObject gameObject, bool bVisible)
		{
		}

		[Token(Token = "0x60023EC")]
		[Address(RVA = "0x152D384", Offset = "0x152D384", VA = "0x152D384")]
		public static void SetGameObjectChildrenRenderVisibility(GameObject gameObject, bool bVisible)
		{
		}

		[Token(Token = "0x60023ED")]
		[Address(RVA = "0x152D478", Offset = "0x152D478", VA = "0x152D478")]
		public static void SetGameObjectColliderState(GameObject gameObject, bool bEnabled)
		{
		}

		[Token(Token = "0x60023EE")]
		[Address(RVA = "0x152D568", Offset = "0x152D568", VA = "0x152D568")]
		public static void SetGameObjectChildrenColliderState(GameObject gameObject, bool bVisible)
		{
		}

		[Token(Token = "0x60023EF")]
		[Address(RVA = "0x1532550", Offset = "0x1532550", VA = "0x1532550")]
		public static string ColorToString(Color c)
		{
			return null;
		}

		[Token(Token = "0x60023F0")]
		[Address(RVA = "0x153275C", Offset = "0x153275C", VA = "0x153275C")]
		public static Color StringToColor(string colorString)
		{
			return default(Color);
		}

		[Token(Token = "0x60023F1")]
		[Address(RVA = "0x15328E0", Offset = "0x15328E0", VA = "0x15328E0")]
		public static bool DoesUnityTagExist(string tagName)
		{
			return default(bool);
		}

		[Token(Token = "0x60023F2")]
		[Address(RVA = "0x15328E8", Offset = "0x15328E8", VA = "0x15328E8")]
		public static void SetLayer(GameObject rootGO, int layer, bool bIncludeChildren)
		{
		}

		[Token(Token = "0x60023F3")]
		[Address(RVA = "0x15329D8", Offset = "0x15329D8", VA = "0x15329D8")]
		public static void SetTag(GameObject rootGO, string tag, bool bIncludeChildren)
		{
		}

		[Token(Token = "0x60023F4")]
		[Address(RVA = "0x1532AC8", Offset = "0x1532AC8", VA = "0x1532AC8")]
		public static bool IsMouseWithinSceneView(Camera camera, Vector2 mousePosition)
		{
			return default(bool);
		}

		[Token(Token = "0x60023F5")]
		[Address(RVA = "0x1532B44", Offset = "0x1532B44", VA = "0x1532B44")]
		public static bool IsMouseOverRect(Camera camera, Vector2 mousePosition, ref Rect rect)
		{
			return default(bool);
		}

		[Token(Token = "0x60023F6")]
		[Address(RVA = "0x1532B94", Offset = "0x1532B94", VA = "0x1532B94")]
		public static Type GetSystemTypeByName(string typeName)
		{
			return null;
		}

		[Token(Token = "0x60023F7")]
		[Address(RVA = "0x1532C08", Offset = "0x1532C08", VA = "0x1532C08")]
		public static void AssignUnityTag(HEU_SessionBase session, int geoID, int partID, GameObject gameObject)
		{
		}

		[Token(Token = "0x60023F8")]
		[Address(RVA = "0x1532EB8", Offset = "0x1532EB8", VA = "0x1532EB8")]
		public static void AssignUnityLayer(HEU_SessionBase session, int geoID, int partID, GameObject gameObject)
		{
		}

		[Token(Token = "0x60023F9")]
		[Address(RVA = "0x15330C8", Offset = "0x15330C8", VA = "0x15330C8")]
		public static void MakeStaticIfHasAttribute(HEU_SessionBase session, int geoID, int partID, GameObject gameObject)
		{
		}

		[Token(Token = "0x60023FA")]
		[Address(RVA = "0x15331EC", Offset = "0x15331EC", VA = "0x15331EC")]
		public static string GetUnityScriptAttributeValue(HEU_SessionBase session, int geoID, int partID)
		{
			return null;
		}

		[Token(Token = "0x60023FB")]
		[Address(RVA = "0x153334C", Offset = "0x153334C", VA = "0x153334C")]
		public static string GetAttributeStringValueSingle(HEU_SessionBase session, int geoID, int partID, string attrName, HAPI_AttributeOwner attrOwner)
		{
			return null;
		}

		[Token(Token = "0x60023FC")]
		[Address(RVA = "0x15335E8", Offset = "0x15335E8", VA = "0x15335E8")]
		public static string GetAttributeStringValueSingleStrict(HEU_SessionBase session, int geoID, int partID, string attrName, HAPI_AttributeOwner attrOwner)
		{
			return null;
		}

		[Token(Token = "0x60023FD")]
		[Address(RVA = "0x1533988", Offset = "0x1533988", VA = "0x1533988")]
		public static bool GetAttributeFloatSingle(HEU_SessionBase session, int geoID, int partID, string attrName, out float value)
		{
			return default(bool);
		}

		[Token(Token = "0x60023FE")]
		[Address(RVA = "0x1533AEC", Offset = "0x1533AEC", VA = "0x1533AEC")]
		public static bool GetAttributeIntSingle(HEU_SessionBase session, int geoID, int partID, string attrName, out int value)
		{
			return default(bool);
		}

		[Token(Token = "0x60023FF")]
		[Address(RVA = "0x1533C50", Offset = "0x1533C50", VA = "0x1533C50")]
		public static bool GetAttributeColorSingle(HEU_SessionBase session, int geoID, int partID, string attrName, ref Color value)
		{
			return default(bool);
		}

		[Token(Token = "0x6002400")]
		[Address(RVA = "0x1533E70", Offset = "0x1533E70", VA = "0x1533E70")]
		public static bool HasAttribute(HEU_SessionBase session, int geoID, int partID, string attrName, HAPI_AttributeOwner attrOwner)
		{
			return default(bool);
		}

		[Token(Token = "0x6002401")]
		[Address(RVA = "0x1533F28", Offset = "0x1533F28", VA = "0x1533F28")]
		public static void AttachScriptWithInvokeFunction(string scriptSet, GameObject gameObject)
		{
		}

		[Token(Token = "0x6002402")]
		[Address(RVA = "0x15344E8", Offset = "0x15344E8", VA = "0x15344E8")]
		public static bool IsInCameraView(Camera camera, Vector3 point)
		{
			return default(bool);
		}

		[Token(Token = "0x6002403")]
		[Address(RVA = "0x1534584", Offset = "0x1534584", VA = "0x1534584")]
		public static List<HEU_Handle> FindOrGenerateHandles(HEU_SessionBase session, ref HAPI_AssetInfo assetInfo, int assetID, string assetName, HEU_Parameters parameters, List<HEU_Handle> currentHandles)
		{
			return null;
		}

		[Token(Token = "0x6002404")]
		[Address(RVA = "0x1534948", Offset = "0x1534948", VA = "0x1534948")]
		public static void CopyComponents(GameObject srcGO, GameObject destGO)
		{
		}

		[Token(Token = "0x6002405")]
		[Address(RVA = "0x153494C", Offset = "0x153494C", VA = "0x153494C")]
		public static Texture LoadTextureFromFile(string filePath)
		{
			return null;
		}

		[Token(Token = "0x6002406")]
		[Address(RVA = "0x1534B64", Offset = "0x1534B64", VA = "0x1534B64")]
		public static Texture2D MakeTexture(int width, int height, Color color)
		{
			return null;
		}

		[Token(Token = "0x6002407")]
		[Address(RVA = "0x1534C9C", Offset = "0x1534C9C", VA = "0x1534C9C")]
		public static string ReplaceFirstOccurrence(string srcStr, string searchStr, string replaceStr)
		{
			return null;
		}

		[Token(Token = "0x6002408")]
		[Address(RVA = "0x1534D40", Offset = "0x1534D40", VA = "0x1534D40")]
		public static void SetParentWithCleanTransform(Transform parentTransform, Transform childTransform)
		{
		}

		[Token(Token = "0x6002409")]
		[Address(RVA = "0x1534E1C", Offset = "0x1534E1C", VA = "0x1534E1C")]
		public static void CopyHAPITransform(ref HAPI_Transform src, ref HAPI_Transform dest)
		{
		}

		[Token(Token = "0x600240A")]
		[Address(RVA = "0x1534EB8", Offset = "0x1534EB8", VA = "0x1534EB8")]
		public static string GetMaterialAttributeValueFromPart(HEU_SessionBase session, int geoID, int partID)
		{
			return null;
		}

		[Token(Token = "0x600240B")]
		[Address(RVA = "0x152D148", Offset = "0x152D148", VA = "0x152D148")]
		public static void ReplaceColliderMeshFromMeshFilter(GameObject targetGO, GameObject sourceColliderGO)
		{
		}

		[Token(Token = "0x600240C")]
		[Address(RVA = "0x1535028", Offset = "0x1535028", VA = "0x1535028")]
		public static void ReplaceColliderMeshFromMeshCollider(GameObject targetGO, GameObject sourceColliderGO)
		{
		}

		[Token(Token = "0x600240D")]
		[Address(RVA = "0x153516C", Offset = "0x153516C", VA = "0x153516C")]
		public HEU_GeneralUtility()
		{
		}
	}
	[Token(Token = "0x2000479")]
	public static class ArrayExtensions
	{
		[Token(Token = "0x600240E")]
		public static void Init<T>(this T[] array, T defaultValue)
		{
		}

		[Token(Token = "0x600240F")]
		public static void Init<T>(this List<T> array, T defaultValue)
		{
		}

		[Token(Token = "0x6002410")]
		public static void CopyToWithResize<T>(this T[] srcArray, ref T[] destArray)
		{
		}
	}
	[Token(Token = "0x200047A")]
	public class ReverseCompare : IComparer
	{
		[Token(Token = "0x6002411")]
		[Address(RVA = "0x16D27C8", Offset = "0x16D27C8", VA = "0x16D27C8", Slot = "4")]
		public int Compare(object x, object y)
		{
			return default(int);
		}

		[Token(Token = "0x6002412")]
		[Address(RVA = "0x16D2848", Offset = "0x16D2848", VA = "0x16D2848")]
		public ReverseCompare()
		{
		}
	}
	[Token(Token = "0x200047B")]
	public class HEU_GenerateGeoCache
	{
		[Token(Token = "0x20006AE")]
		public class HEU_ColliderInfo
		{
			[Token(Token = "0x20006D1")]
			public enum ColliderType
			{
				[Token(Token = "0x400214A")]
				NONE,
				[Token(Token = "0x400214B")]
				BOX,
				[Token(Token = "0x400214C")]
				SPHERE,
				[Token(Token = "0x400214D")]
				MESH,
				[Token(Token = "0x400214E")]
				SIMPLE_BOX,
				[Token(Token = "0x400214F")]
				SIMPLE_SPHERE,
				[Token(Token = "0x4002150")]
				SIMPLE_CAPSULE
			}

			[Token(Token = "0x40020B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ColliderType _colliderType;

			[Token(Token = "0x40020B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 _colliderCenter;

			[Token(Token = "0x40020B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 _colliderSize;

			[Token(Token = "0x40020B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float _colliderRadius;

			[Token(Token = "0x40020B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool _convexCollider;

			[Token(Token = "0x40020B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string _collisionGroupName;

			[Token(Token = "0x40020B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Vector3[] _collisionVertices;

			[Token(Token = "0x40020B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public int[] _collisionIndices;

			[Token(Token = "0x40020BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public MeshTopology _meshTopology;

			[Token(Token = "0x40020BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public bool _isTrigger;

			[Token(Token = "0x6002C41")]
			[Address(RVA = "0x12C7C38", Offset = "0x12C7C38", VA = "0x12C7C38")]
			public HEU_ColliderInfo()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20006AF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0E0B8", Offset = "0xA0E0B8")]
		private sealed class <>c
		{
			[Token(Token = "0x40020BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40020BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<float> <>9__65_0;

			[Token(Token = "0x6002C43")]
			[Address(RVA = "0x12C9E74", Offset = "0x12C9E74", VA = "0x12C9E74")]
			public <>c()
			{
			}

			[Token(Token = "0x6002C44")]
			[Address(RVA = "0x12C9E7C", Offset = "0x12C9E7C", VA = "0x12C9E7C")]
			internal int <GenerateLODMeshesFromGeoGroups>b__65_0(float a, float b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4001793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA20184", Offset = "0xA20184")]
		private int <AssetID>k__BackingField;

		[Token(Token = "0x4001794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public HAPI_GeoInfo _geoInfo;

		[Token(Token = "0x4001795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public HAPI_PartInfo _partInfo;

		[Token(Token = "0x4001796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public string _partName;

		[Token(Token = "0x4001797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public int[] _vertexList;

		[Token(Token = "0x4001798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public int[] _faceCounts;

		[Token(Token = "0x4001799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public int[] _houdiniMaterialIDs;

		[Token(Token = "0x400179A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool _singleFaceUnityMaterial;

		[Token(Token = "0x400179B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		public bool _singleFaceHoudiniMaterial;

		[Token(Token = "0x400179C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Dictionary<int, HEU_UnityMaterialInfo> _unityMaterialInfos;

		[Token(Token = "0x400179D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public HAPI_AttributeInfo _unityMaterialAttrInfo;

		[Token(Token = "0x400179E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public int[] _unityMaterialAttrName;

		[Token(Token = "0x400179F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Dictionary<int, string> _unityMaterialAttrStringsMap;

		[Token(Token = "0x40017A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public HAPI_AttributeInfo _substanceMaterialAttrNameInfo;

		[Token(Token = "0x40017A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public int[] _substanceMaterialAttrName;

		[Token(Token = "0x40017A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public Dictionary<int, string> _substanceMaterialAttrStringsMap;

		[Token(Token = "0x40017A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public HAPI_AttributeInfo _substanceMaterialAttrIndexInfo;

		[Token(Token = "0x40017A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public int[] _substanceMaterialAttrIndex;

		[Token(Token = "0x40017A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public List<HEU_MaterialData> _inUseMaterials;

		[Token(Token = "0x40017A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public HAPI_AttributeInfo _posAttrInfo;

		[Token(Token = "0x40017A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public HAPI_AttributeInfo[] _uvsAttrInfo;

		[Token(Token = "0x40017A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public HAPI_AttributeInfo _normalAttrInfo;

		[Token(Token = "0x40017A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public HAPI_AttributeInfo _colorAttrInfo;

		[Token(Token = "0x40017AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		public HAPI_AttributeInfo _alphaAttrInfo;

		[Token(Token = "0x40017AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		public HAPI_AttributeInfo _tangentAttrInfo;

		[Token(Token = "0x40017AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		public float[] _posAttr;

		[Token(Token = "0x40017AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		public float[][] _uvsAttr;

		[Token(Token = "0x40017AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		public float[] _normalAttr;

		[Token(Token = "0x40017AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		public float[] _colorAttr;

		[Token(Token = "0x40017B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		public float[] _alphaAttr;

		[Token(Token = "0x40017B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		public float[] _tangentAttr;

		[Token(Token = "0x40017B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		public string[] _groups;

		[Token(Token = "0x40017B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		public bool _hasGroupGeometry;

		[Token(Token = "0x40017B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		public Dictionary<string, int[]> _groupSplitVertexIndices;

		[Token(Token = "0x40017B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		public Dictionary<string, List<int>> _groupSplitFaceIndices;

		[Token(Token = "0x40017B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		public Dictionary<string, List<int>> _groupVertexOffsets;

		[Token(Token = "0x40017B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		public int[] _allCollisionVertexList;

		[Token(Token = "0x40017B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		public int[] _allCollisionFaceIndices;

		[Token(Token = "0x40017B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		public float _normalCosineThreshold;

		[Token(Token = "0x40017BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
		public bool _hasLODGroups;

		[Token(Token = "0x40017BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		public float[] _LODTransitionValues;

		[Token(Token = "0x40017BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		public bool _isMeshReadWrite;

		[Token(Token = "0x40017BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		public List<HEU_ColliderInfo> _colliderInfos;

		[Token(Token = "0x40017BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		public List<HEU_MaterialData> _materialCache;

		[Token(Token = "0x40017BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		public Dictionary<int, HEU_MaterialData> _materialIDToDataMap;

		[Token(Token = "0x40017C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		public string _assetCacheFolderPath;

		[Token(Token = "0x40017C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		[SerializeField]
		public HEU_MeshIndexFormat _meshIndexFormat;

		[Token(Token = "0x17000407")]
		public int GeoID
		{
			[Token(Token = "0x6002413")]
			[Address(RVA = "0x12BF8EC", Offset = "0x12BF8EC", VA = "0x12BF8EC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000408")]
		public int PartID
		{
			[Token(Token = "0x6002414")]
			[Address(RVA = "0x12BF8F4", Offset = "0x12BF8F4", VA = "0x12BF8F4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000409")]
		public int AssetID
		{
			[Token(Token = "0x6002415")]
			[Address(RVA = "0x12BF8FC", Offset = "0x12BF8FC", VA = "0x12BF8FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2EAA0", Offset = "0xA2EAA0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002416")]
			[Address(RVA = "0x12BF904", Offset = "0x12BF904", VA = "0x12BF904")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2EAB0", Offset = "0xA2EAB0")]
			set
			{
			}
		}

		[Token(Token = "0x6002417")]
		[Address(RVA = "0x12BF90C", Offset = "0x12BF90C", VA = "0x12BF90C")]
		public static HEU_GenerateGeoCache GetPopulatedGeoCache(HEU_SessionBase session, int assetID, int geoID, int partID, bool bUseLODGroups, List<HEU_MaterialData> materialCache, string assetCacheFolderPath)
		{
			return null;
		}

		[Token(Token = "0x6002418")]
		[Address(RVA = "0x12BFD4C", Offset = "0x12BFD4C", VA = "0x12BFD4C")]
		public void PopulateUnityMaterialData(HEU_SessionBase session)
		{
		}

		[Token(Token = "0x6002419")]
		[Address(RVA = "0x12C1A68", Offset = "0x12C1A68", VA = "0x12C1A68")]
		public static int GetMaterialKeyFromAttributeIndex(HEU_GenerateGeoCache geoCache, int attributeIndex, out string unityMaterialName, out string substanceName, out int substanceIndex)
		{
			return default(int);
		}

		[Token(Token = "0x600241A")]
		[Address(RVA = "0x12C1968", Offset = "0x12C1968", VA = "0x12C1968")]
		public static void CreateMaterialInfoEntryFromAttributeIndex(HEU_GenerateGeoCache geoCache, int materialAttributeIndex)
		{
		}

		[Token(Token = "0x600241B")]
		[Address(RVA = "0x12C039C", Offset = "0x12C039C", VA = "0x12C039C")]
		public bool PopulateGeometryData(HEU_SessionBase session, bool bUseLODGroups)
		{
			return default(bool);
		}

		[Token(Token = "0x600241C")]
		[Address(RVA = "0x12C1BE0", Offset = "0x12C1BE0", VA = "0x12C1BE0")]
		public static void ParseLODTransitionAttribute(HEU_SessionBase session, int geoID, int partID, ref float[] LODTransitionValues)
		{
		}

		[Token(Token = "0x600241D")]
		[Address(RVA = "0x12C1D98", Offset = "0x12C1D98", VA = "0x12C1D98")]
		public static void UpdateColliders(HEU_GenerateGeoCache geoCache, HEU_GeneratedOutputData outputData)
		{
		}

		[Token(Token = "0x600241E")]
		[Address(RVA = "0x12C20B8", Offset = "0x12C20B8", VA = "0x12C20B8")]
		public static void UpdateCollider(HEU_GenerateGeoCache geoCache, HEU_GeneratedOutputData outputData, HEU_ColliderInfo colliderInfo)
		{
		}

		[Token(Token = "0x600241F")]
		[Address(RVA = "0x12C2684", Offset = "0x12C2684", VA = "0x12C2684")]
		private static void GetFinalMaterialsFromComparingNewWithPrevious(GameObject gameObject, Material[] previousMaterials, Material[] newMaterials, ref Material[] finalMaterials)
		{
		}

		[Token(Token = "0x6002420")]
		[Address(RVA = "0x12C28FC", Offset = "0x12C28FC", VA = "0x12C28FC")]
		public static bool GenerateMeshFromSingleGroup(HEU_SessionBase session, HEU_GeoGroup GeoGroup, HEU_GenerateGeoCache geoCache, HEU_GeneratedOutput generatedOutput, int defaultMaterialKey, bool bGenerateUVs, bool bGenerateTangents, bool bGenerateNormals, bool bPartInstanced)
		{
			return default(bool);
		}

		[Token(Token = "0x6002421")]
		[Address(RVA = "0x12C3698", Offset = "0x12C3698", VA = "0x12C3698")]
		public static bool GenerateLODMeshesFromGeoGroups(HEU_SessionBase session, List<HEU_GeoGroup> GeoGroupMeshes, HEU_GenerateGeoCache geoCache, HEU_GeneratedOutput generatedOutput, int defaultMaterialKey, bool bGenerateUVs, bool bGenerateTangents, bool bGenerateNormals, bool bPartInstanced)
		{
			return default(bool);
		}

		[Token(Token = "0x6002422")]
		[Address(RVA = "0x12C2AB4", Offset = "0x12C2AB4", VA = "0x12C2AB4")]
		public static bool GenerateMeshFromGeoGroup(HEU_SessionBase session, HEU_GeoGroup GeoGroup, HEU_GenerateGeoCache geoCache, int defaultMaterialKey, bool bGenerateUVs, bool bGenerateTangents, bool bGenerateNormals, bool bPartInstanced, out Mesh newMesh, out Material[] newMaterials)
		{
			return default(bool);
		}

		[Token(Token = "0x6002423")]
		[Address(RVA = "0x12C4998", Offset = "0x12C4998", VA = "0x12C4998")]
		public static Mesh CombineQuadMeshes(Dictionary<int, HEU_MeshData> subMeshesMap, List<int> subMeshIndices, bool bGenerateNormals)
		{
			return null;
		}

		[Token(Token = "0x6002424")]
		[Address(RVA = "0x12C4EC4", Offset = "0x12C4EC4", VA = "0x12C4EC4")]
		public static Mesh CombineMeshes(Dictionary<int, HEU_MeshData> subMeshesMap, List<int> submeshIndices, bool bGenerateUVs, bool bGenerateNormals, HEU_MeshIndexFormat meshIndexFormat)
		{
			return null;
		}

		[Token(Token = "0x6002425")]
		[Address(RVA = "0x12C46C8", Offset = "0x12C46C8", VA = "0x12C46C8")]
		public static Mesh CreateMeshFromMeshData(HEU_MeshData submesh, bool bGenerateUVs, bool bGenerateNormals, HEU_MeshIndexFormat meshIndexFormat)
		{
			return null;
		}

		[Token(Token = "0x6002426")]
		[Address(RVA = "0x12C52A4", Offset = "0x12C52A4", VA = "0x12C52A4")]
		public static void TransferRegularAttributesToVertices(int[] groupVertexList, int[] allFaceCounts, List<int> groupFaces, List<int> groupVertexOffset, ref HAPI_AttributeInfo attribInfo, float[] inData, ref float[] outData)
		{
		}

		[Token(Token = "0x6002427")]
		[Address(RVA = "0x12C551C", Offset = "0x12C551C", VA = "0x12C551C")]
		public static bool GenerateGeoGroupUsingGeoCacheVertices(HEU_SessionBase session, HEU_GenerateGeoCache geoCache, bool bGenerateUVs, bool bGenerateTangents, bool bGenerateNormals, bool bUseLODGroups, bool bPartInstanced, out List<HEU_GeoGroup> LODGroupMeshes, out int defaultMaterialKey)
		{
			return default(bool);
		}

		[Token(Token = "0x6002428")]
		[Address(RVA = "0x12C804C", Offset = "0x12C804C", VA = "0x12C804C")]
		public static bool GenerateGeoGroupUsingGeoCachePoints(HEU_SessionBase session, HEU_GenerateGeoCache geoCache, bool bGenerateUVs, bool bGenerateTangents, bool bGenerateNormals, bool bUseLODGroups, bool bPartInstanced, out List<HEU_GeoGroup> LODGroupMeshes, out int defaultMaterialKey)
		{
			return default(bool);
		}

		[Token(Token = "0x6002429")]
		[Address(RVA = "0x12C7C40", Offset = "0x12C7C40", VA = "0x12C7C40")]
		public static MeshTopology CalculateGroupMeshTopology(List<int> groupFaces, int[] allFaceCounts)
		{
			return default(MeshTopology);
		}

		[Token(Token = "0x600242A")]
		[Address(RVA = "0x12BFBE4", Offset = "0x12BFBE4", VA = "0x12BFBE4")]
		public HEU_GenerateGeoCache()
		{
		}
	}
	[Token(Token = "0x200047C")]
	public class HEU_GeoGroup : IComparable<HEU_GeoGroup>
	{
		[Token(Token = "0x40017C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string _groupName;

		[Token(Token = "0x40017C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Dictionary<int, HEU_MeshData> _subMeshesMap;

		[Token(Token = "0x40017C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<HEU_VertexEntry>[] _sharedNormalIndices;

		[Token(Token = "0x600242B")]
		[Address(RVA = "0x12CAA3C", Offset = "0x12CAA3C", VA = "0x12CAA3C", Slot = "4")]
		public int CompareTo(HEU_GeoGroup other)
		{
			return default(int);
		}

		[Token(Token = "0x600242C")]
		[Address(RVA = "0x12C7F2C", Offset = "0x12C7F2C", VA = "0x12C7F2C")]
		public void SetupNormalIndices(int indicesCount)
		{
		}

		[Token(Token = "0x600242D")]
		[Address(RVA = "0x12C7EBC", Offset = "0x12C7EBC", VA = "0x12C7EBC")]
		public HEU_GeoGroup()
		{
		}
	}
	[Token(Token = "0x200047D")]
	public class HEU_VertexEntry
	{
		[Token(Token = "0x40017C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int _meshKey;

		[Token(Token = "0x40017C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int _vertexIndex;

		[Token(Token = "0x40017C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int _normalIndex;

		[Token(Token = "0x600242E")]
		[Address(RVA = "0x163D9E4", Offset = "0x163D9E4", VA = "0x163D9E4")]
		public HEU_VertexEntry(int meshKey, int vertexIndex, int normalIndex)
		{
		}
	}
	[Token(Token = "0x200047E")]
	public static class HEU_GeometryUtility
	{
		[Token(Token = "0x600242F")]
		[Address(RVA = "0x12C5230", Offset = "0x12C5230", VA = "0x12C5230")]
		public static Vector2[] GeneratePerTriangle(Mesh meshSrc)
		{
			return null;
		}

		[Token(Token = "0x6002430")]
		[Address(RVA = "0x12CEE84", Offset = "0x12CEE84", VA = "0x12CEE84")]
		public static void GenerateSecondaryUVSet(Mesh meshsrc)
		{
		}

		[Token(Token = "0x6002431")]
		[Address(RVA = "0x12C4040", Offset = "0x12C4040", VA = "0x12C4040")]
		public static void CalculateMeshTangents(Mesh mesh)
		{
		}

		[Token(Token = "0x6002432")]
		[Address(RVA = "0x12CEEF0", Offset = "0x12CEEF0", VA = "0x12CEEF0")]
		public static Mesh GenerateCubeMeshFromPoints(Vector3[] points, Color[] pointsColor, float size = 1f)
		{
			return null;
		}

		[Token(Token = "0x6002433")]
		[Address(RVA = "0x12CF9B8", Offset = "0x12CF9B8", VA = "0x12CF9B8")]
		public static string GetInstanceOutputName(string partName, string[] userPrefix, int index)
		{
			return null;
		}
	}
	[Token(Token = "0x200047F")]
	public class HEU_InputData
	{
		[Token(Token = "0x40017C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject _inputObject;

		[Token(Token = "0x6002434")]
		[Address(RVA = "0x168F9C0", Offset = "0x168F9C0", VA = "0x168F9C0")]
		public HEU_InputData()
		{
		}
	}
	[Token(Token = "0x2000480")]
	public abstract class HEU_InputInterface
	{
		[Token(Token = "0x40017C9")]
		public const int DEFAULT_PRIORITY = 100;

		[Token(Token = "0x40017CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected int _priority;

		[Token(Token = "0x1700040A")]
		public int Priority
		{
			[Token(Token = "0x6002435")]
			[Address(RVA = "0x168FA04", Offset = "0x168FA04", VA = "0x168FA04")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6002436")]
		[Address(RVA = "0x168FA0C", Offset = "0x168FA0C", VA = "0x168FA0C")]
		public HEU_InputInterface(int priority)
		{
		}

		[Token(Token = "0x6002437")]
		[Address(RVA = "0x168FA38", Offset = "0x168FA38", VA = "0x168FA38")]
		public void RegisterInterface()
		{
		}

		[Token(Token = "0x6002438")]
		public abstract bool IsThisInputObjectSupported(GameObject inputObject);

		[Token(Token = "0x6002439")]
		public abstract bool CreateInputNodeWithDataUpload(HEU_SessionBase session, int connectNodeID, GameObject inputObject, out int inputNodeID);
	}
	[Token(Token = "0x2000481")]
	public class HEU_InputInterfaceMesh : HEU_InputInterface
	{
		[Token(Token = "0x20006B0")]
		public class HEU_InputDataMeshes : HEU_InputData
		{
			[Token(Token = "0x40020BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<HEU_InputDataMesh> _inputMeshes;

			[Token(Token = "0x40020BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool _hasLOD;

			[Token(Token = "0x6002C45")]
			[Address(RVA = "0x1692D48", Offset = "0x1692D48", VA = "0x1692D48")]
			public HEU_InputDataMeshes()
			{
			}
		}

		[Token(Token = "0x20006B1")]
		public class HEU_InputDataMesh
		{
			[Token(Token = "0x40020C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Mesh _mesh;

			[Token(Token = "0x40020C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Material[] _materials;

			[Token(Token = "0x40020C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string _meshPath;

			[Token(Token = "0x40020C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string _meshName;

			[Token(Token = "0x40020C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int _numVertices;

			[Token(Token = "0x40020C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int _numSubMeshes;

			[Token(Token = "0x40020C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public uint[] _indexStart;

			[Token(Token = "0x40020C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public uint[] _indexCount;

			[Token(Token = "0x40020C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public float _LODScreenTransition;

			[Token(Token = "0x40020C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Transform _transform;

			[Token(Token = "0x6002C46")]
			[Address(RVA = "0x1692FC8", Offset = "0x1692FC8", VA = "0x1692FC8")]
			public HEU_InputDataMesh()
			{
			}
		}

		[Token(Token = "0x600243A")]
		[Address(RVA = "0x168FCE8", Offset = "0x168FCE8", VA = "0x168FCE8")]
		private HEU_InputInterfaceMesh()
		{
		}

		[Token(Token = "0x600243B")]
		[Address(RVA = "0x168FD14", Offset = "0x168FD14", VA = "0x168FD14", Slot = "5")]
		public override bool CreateInputNodeWithDataUpload(HEU_SessionBase session, int connectNodeID, GameObject inputObject, out int inputNodeID)
		{
			return default(bool);
		}

		[Token(Token = "0x600243C")]
		[Address(RVA = "0x1692474", Offset = "0x1692474", VA = "0x1692474", Slot = "4")]
		public override bool IsThisInputObjectSupported(GameObject inputObject)
		{
			return default(bool);
		}

		[Token(Token = "0x600243D")]
		[Address(RVA = "0x1692598", Offset = "0x1692598", VA = "0x1692598")]
		public static void GetUVsFromMesh(Mesh mesh, Vector2[] srcUVs, List<Vector3> destUVs, int index)
		{
		}

		[Token(Token = "0x600243E")]
		[Address(RVA = "0x1690100", Offset = "0x1690100", VA = "0x1690100")]
		public bool UploadData(HEU_SessionBase session, int inputNodeID, HEU_InputData inputData)
		{
			return default(bool);
		}

		[Token(Token = "0x600243F")]
		[Address(RVA = "0x168FEF4", Offset = "0x168FEF4", VA = "0x168FEF4")]
		public HEU_InputDataMeshes GenerateMeshDatasFromGameObject(GameObject inputObject)
		{
			return null;
		}

		[Token(Token = "0x6002440")]
		[Address(RVA = "0x1692DB8", Offset = "0x1692DB8", VA = "0x1692DB8")]
		public static HEU_InputDataMesh CreateSingleMeshData(GameObject meshGameObject)
		{
			return null;
		}
	}
	[Token(Token = "0x2000482")]
	public class HEU_InputInterfaceTerrain : HEU_InputInterface
	{
		[Token(Token = "0x20006B2")]
		public class HEU_InputDataTerrain : HEU_InputData
		{
			[Token(Token = "0x40020CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string _heightFieldName;

			[Token(Token = "0x40020CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int _parentNodeID;

			[Token(Token = "0x40020CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float _voxelSize;

			[Token(Token = "0x40020CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Terrain _terrain;

			[Token(Token = "0x40020CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public TerrainData _terrainData;

			[Token(Token = "0x40020CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int _numPointsX;

			[Token(Token = "0x40020D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public int _numPointsY;

			[Token(Token = "0x40020D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public HAPI_Transform _transform;

			[Token(Token = "0x40020D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public float _heightScale;

			[Token(Token = "0x40020D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			public int _heightfieldNodeID;

			[Token(Token = "0x40020D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public int _heightNodeID;

			[Token(Token = "0x40020D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			public int _maskNodeID;

			[Token(Token = "0x40020D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public int _mergeNodeID;

			[Token(Token = "0x6002C47")]
			[Address(RVA = "0x1694CBC", Offset = "0x1694CBC", VA = "0x1694CBC")]
			public HEU_InputDataTerrain()
			{
			}
		}

		[Token(Token = "0x6002441")]
		[Address(RVA = "0x1692FD0", Offset = "0x1692FD0", VA = "0x1692FD0")]
		public HEU_InputInterfaceTerrain()
		{
		}

		[Token(Token = "0x6002442")]
		[Address(RVA = "0x1692FFC", Offset = "0x1692FFC", VA = "0x1692FFC", Slot = "5")]
		public override bool CreateInputNodeWithDataUpload(HEU_SessionBase session, int connectNodeID, GameObject inputObject, out int inputNodeID)
		{
			return default(bool);
		}

		[Token(Token = "0x6002443")]
		[Address(RVA = "0x1694138", Offset = "0x1694138", VA = "0x1694138")]
		private bool SetMaskLayer(HEU_SessionBase session, HEU_InputDataTerrain idt, ref HAPI_VolumeInfo baseVolumeInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x6002444")]
		[Address(RVA = "0x1694510", Offset = "0x1694510", VA = "0x1694510", Slot = "4")]
		public override bool IsThisInputObjectSupported(GameObject inputObject)
		{
			return default(bool);
		}

		[Token(Token = "0x6002445")]
		[Address(RVA = "0x1693548", Offset = "0x1693548", VA = "0x1693548")]
		public bool CreateHeightFieldInputNode(HEU_SessionBase session, HEU_InputDataTerrain idt)
		{
			return default(bool);
		}

		[Token(Token = "0x6002446")]
		[Address(RVA = "0x16936C4", Offset = "0x16936C4", VA = "0x16936C4")]
		public bool UploadHeightValuesWithTransform(HEU_SessionBase session, HEU_InputDataTerrain idt, ref HAPI_VolumeInfo volumeInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x6002447")]
		[Address(RVA = "0x1693BD4", Offset = "0x1693BD4", VA = "0x1693BD4")]
		public bool UploadAlphaMaps(HEU_SessionBase session, HEU_InputDataTerrain idt, ref HAPI_VolumeInfo baseVolumeInfo, out bool bMaskSet)
		{
			return default(bool);
		}

		[Token(Token = "0x6002448")]
		[Address(RVA = "0x1694260", Offset = "0x1694260", VA = "0x1694260")]
		public bool SetHeightFieldData(HEU_SessionBase session, int volumeNodeID, int partID, float[] heightValues, string heightFieldName, ref HAPI_VolumeInfo baseVolumeInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x6002449")]
		[Address(RVA = "0x16945E4", Offset = "0x16945E4", VA = "0x16945E4")]
		public bool SetTerrainDataAttributesToHeightField(HEU_SessionBase session, int geoNodeID, int partID, TerrainData terrainData)
		{
			return default(bool);
		}

		[Token(Token = "0x600244A")]
		[Address(RVA = "0x1694AB4", Offset = "0x1694AB4", VA = "0x1694AB4")]
		public bool SetTerrainLayerAttributesToHeightField(HEU_SessionBase session, int geoNodeID, int partID, TerrainLayer terrainLayer)
		{
			return default(bool);
		}

		[Token(Token = "0x600244B")]
		[Address(RVA = "0x16947D0", Offset = "0x16947D0", VA = "0x16947D0")]
		public void SetTreePrototypes(HEU_SessionBase session, int geoNodeID, int partID, TerrainData terrainData)
		{
		}

		[Token(Token = "0x600244C")]
		[Address(RVA = "0x1694CA0", Offset = "0x1694CA0", VA = "0x1694CA0")]
		public void SetTreeInstances(HEU_SessionBase session, int geoNodeID, int partID, TerrainData terrainData)
		{
		}

		[Token(Token = "0x600244D")]
		[Address(RVA = "0x16931E0", Offset = "0x16931E0", VA = "0x16931E0")]
		public HEU_InputDataTerrain GenerateTerrainDataFromGameObject(GameObject inputObject)
		{
			return null;
		}
	}
	[Token(Token = "0x2000483")]
	public static class HEU_InputMeshUtility
	{
		[Token(Token = "0x600244E")]
		[Address(RVA = "0x1692644", Offset = "0x1692644", VA = "0x1692644")]
		public static bool SetMeshPointAttribute(HEU_SessionBase session, int geoID, int partID, string attrName, int tupleSize, Vector3[] data, ref HAPI_PartInfo partInfo, bool bConvertToHoudiniCoordinateSystem)
		{
			return default(bool);
		}

		[Token(Token = "0x600244F")]
		[Address(RVA = "0x1692898", Offset = "0x1692898", VA = "0x1692898")]
		public static bool SetMeshVertexAttribute(HEU_SessionBase session, int geoID, int partID, string attrName, int tupleSize, Vector3[] data, int[] indices, ref HAPI_PartInfo partInfo, bool bConvertToHoudiniCoordinateSystem)
		{
			return default(bool);
		}

		[Token(Token = "0x6002450")]
		[Address(RVA = "0x1692B30", Offset = "0x1692B30", VA = "0x1692B30")]
		public static bool SetMeshVertexFloatAttribute(HEU_SessionBase session, int geoID, int partID, string attrName, int tupleSize, float[] data, int[] indices, ref HAPI_PartInfo partInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x6002451")]
		[Address(RVA = "0x1694D28", Offset = "0x1694D28", VA = "0x1694D28")]
		public static bool UploadMeshIntoHoudiniNode(HEU_SessionBase session, int assetNodeID, int objectID, int geoID, ref Mesh mesh)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000484")]
	public static class HEU_InputUtility
	{
		[Token(Token = "0x40017CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<HEU_InputInterface> _inputInterfaces;

		[Token(Token = "0x6002452")]
		[Address(RVA = "0x1699B04", Offset = "0x1699B04", VA = "0x1699B04")]
		public static int GetHighestPriority()
		{
			return default(int);
		}

		[Token(Token = "0x6002453")]
		[Address(RVA = "0x168FA9C", Offset = "0x168FA9C", VA = "0x168FA9C")]
		public static void RegisterInputInterface(HEU_InputInterface inputInterface)
		{
		}

		[Token(Token = "0x6002454")]
		[Address(RVA = "0x1699D48", Offset = "0x1699D48", VA = "0x1699D48")]
		public static void UnregisterInputInterface(HEU_InputInterface inputInterface)
		{
		}

		[Token(Token = "0x6002455")]
		[Address(RVA = "0x1699BD4", Offset = "0x1699BD4", VA = "0x1699BD4")]
		public static HEU_InputInterface GetInputInterfaceByType(Type type)
		{
			return null;
		}

		[Token(Token = "0x6002456")]
		[Address(RVA = "0x1699DCC", Offset = "0x1699DCC", VA = "0x1699DCC")]
		public static HEU_InputInterface GetInputInterface(GameObject inputObject)
		{
			return null;
		}

		[Token(Token = "0x6002457")]
		[Address(RVA = "0x1699F08", Offset = "0x1699F08", VA = "0x1699F08")]
		public static HEU_InputInterface GetInputInterface(HEU_InputObjectInfo inputObjectInfo)
		{
			return null;
		}

		[Token(Token = "0x6002458")]
		[Address(RVA = "0x1696AB4", Offset = "0x1696AB4", VA = "0x1696AB4")]
		public static bool CreateInputNodeWithMultiObjects(HEU_SessionBase session, int assetID, ref int connectMergeID, ref List<HEU_InputObjectInfo> inputObjects, ref List<int> inputObjectsConnectedAssetIDs, bool bKeepWorldTransform)
		{
			return default(bool);
		}

		[Token(Token = "0x6002459")]
		[Address(RVA = "0x1697488", Offset = "0x1697488", VA = "0x1697488")]
		public static bool CreateInputNodeWithMultiAssets(HEU_SessionBase session, HEU_HoudiniAsset parentAsset, ref int connectMergeID, ref List<HEU_InputHDAInfo> inputAssetInfos, bool bKeepWorldTransform, int mergeParentID = -1)
		{
			return default(bool);
		}

		[Token(Token = "0x600245A")]
		[Address(RVA = "0x16981F8", Offset = "0x16981F8", VA = "0x16981F8")]
		public static bool UploadInputObjectTransform(HEU_SessionBase session, HEU_InputObjectInfo inputObject, int inputNodeID, bool bKeepWorldTransform)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000485")]
	public class HEU_MeshData
	{
		[Token(Token = "0x40017CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<int> _indices;

		[Token(Token = "0x40017CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Vector3> _vertices;

		[Token(Token = "0x40017CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Color32> _colors;

		[Token(Token = "0x40017CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<Vector3> _normals;

		[Token(Token = "0x40017D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<Vector4> _tangents;

		[Token(Token = "0x40017D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<Vector4>[] _uvs;

		[Token(Token = "0x40017D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<Vector3> _triangleNormals;

		[Token(Token = "0x40017D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Dictionary<int, int> _pointIndexToMeshIndexMap;

		[Token(Token = "0x40017D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public MeshTopology _meshTopology;

		[Token(Token = "0x600245C")]
		[Address(RVA = "0x169D250", Offset = "0x169D250", VA = "0x169D250")]
		public HEU_MeshData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000486")]
	public class HEU_MeshIndexFormat
	{
		[Token(Token = "0x40017D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IndexFormat _indexFormat;

		[Token(Token = "0x600245D")]
		[Address(RVA = "0x169D3B0", Offset = "0x169D3B0", VA = "0x169D3B0")]
		public void CalculateIndexFormat(int numVertices)
		{
		}

		[Token(Token = "0x600245E")]
		[Address(RVA = "0x169D438", Offset = "0x169D438", VA = "0x169D438")]
		public void SetFormatForMesh(Mesh mesh)
		{
		}

		[Token(Token = "0x600245F")]
		[Address(RVA = "0x169D45C", Offset = "0x169D45C", VA = "0x169D45C")]
		public HEU_MeshIndexFormat()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000487")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xA0D200", Offset = "0xA0D200")]
	public class HEU_SerializableDictionary<TKey, TValue> : IDictionary<TKey, TValue>, ICollection<KeyValuePair<TKey, TValue>>, IEnumerable<KeyValuePair<TKey, TValue>>, IEnumerable, ISerializationCallbackReceiver
	{
		[NonSerialized]
		[Token(Token = "0x40017D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<TKey, TValue> _dictionary;

		[Token(Token = "0x40017D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TKey[] _keys;

		[Token(Token = "0x40017D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TValue[] _values;

		[Token(Token = "0x1700040B")]
		public TValue Item
		{
			[Token(Token = "0x6002460")]
			get
			{
				return (TValue)null;
			}
			[Token(Token = "0x6002461")]
			set
			{
			}
		}

		[Token(Token = "0x1700040C")]
		public ICollection<TKey> Keys
		{
			[Token(Token = "0x6002462")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700040D")]
		public ICollection<TValue> Values
		{
			[Token(Token = "0x6002463")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700040E")]
		public int Count
		{
			[Token(Token = "0x6002464")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700040F")]
		public bool IsReadOnly
		{
			[Token(Token = "0x6002465")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002466")]
		public void Add(TKey key, TValue value)
		{
		}

		[Token(Token = "0x6002467")]
		public void Add(KeyValuePair<TKey, TValue> item)
		{
		}

		[Token(Token = "0x6002468")]
		public void Clear()
		{
		}

		[Token(Token = "0x6002469")]
		public bool Contains(KeyValuePair<TKey, TValue> item)
		{
			return default(bool);
		}

		[Token(Token = "0x600246A")]
		public bool ContainsKey(TKey key)
		{
			return default(bool);
		}

		[Token(Token = "0x600246B")]
		public void CopyTo(KeyValuePair<TKey, TValue>[] array, int arrayIndex)
		{
		}

		[Token(Token = "0x600246C")]
		public IEnumerator<KeyValuePair<TKey, TValue>> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x600246D")]
		public bool Remove(TKey key)
		{
			return default(bool);
		}

		[Token(Token = "0x600246E")]
		public bool Remove(KeyValuePair<TKey, TValue> item)
		{
			return default(bool);
		}

		[Token(Token = "0x600246F")]
		public bool TryGetValue(TKey key, out TValue value)
		{
			return default(bool);
		}

		[Token(Token = "0x6002470")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6002471")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6002472")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6002473")]
		public HEU_SerializableDictionary()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000488")]
	public class HEU_ShelfToolData
	{
		[Token(Token = "0x20006B3")]
		public enum ToolType
		{
			[Token(Token = "0x40020D8")]
			GENERATOR,
			[Token(Token = "0x40020D9")]
			OPERATOR_SINGLE,
			[Token(Token = "0x40020DA")]
			OPERATOR_MULTI,
			[Token(Token = "0x40020DB")]
			BATCH
		}

		[Token(Token = "0x40017D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string _name;

		[Token(Token = "0x40017DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ToolType _toolType;

		[Token(Token = "0x40017DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string _toolTip;

		[Token(Token = "0x40017DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string _iconPath;

		[Token(Token = "0x40017DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string _assetPath;

		[Token(Token = "0x40017DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string _helpURL;

		[Token(Token = "0x40017DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string[] _targets;

		[Token(Token = "0x40017E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string _jsonPath;

		[Token(Token = "0x6002474")]
		[Address(RVA = "0x14B429C", Offset = "0x14B429C", VA = "0x14B429C")]
		public HEU_ShelfToolData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000489")]
	public class HEU_Shelf
	{
		[Token(Token = "0x40017E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string _shelfName;

		[Token(Token = "0x40017E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string _shelfPath;

		[Token(Token = "0x40017E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool _defaultShelf;

		[Token(Token = "0x40017E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<HEU_ShelfToolData> _tools;

		[Token(Token = "0x6002475")]
		[Address(RVA = "0x14B422C", Offset = "0x14B422C", VA = "0x14B422C")]
		public HEU_Shelf()
		{
		}
	}
	[Token(Token = "0x200048A")]
	public class HEU_ShelfTools
	{
		[Token(Token = "0x40017E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private static List<HEU_Shelf> _shelves;

		[Token(Token = "0x40017E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		private static bool _shelvesLoaded;

		[Token(Token = "0x40017E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private static int _currentSelectedShelf;

		[Token(Token = "0x40017E8")]
		public const string TARGET_ALL = "all";

		[Token(Token = "0x40017E9")]
		public const string TARGET_UNITY = "unity";

		[Token(Token = "0x6002476")]
		[Address(RVA = "0x14B4300", Offset = "0x14B4300", VA = "0x14B4300")]
		public static bool AreShelvesLoaded()
		{
			return default(bool);
		}

		[Token(Token = "0x6002477")]
		[Address(RVA = "0x14B4368", Offset = "0x14B4368", VA = "0x14B4368")]
		public static void SetReloadShelves()
		{
		}

		[Token(Token = "0x6002478")]
		[Address(RVA = "0x14B43D0", Offset = "0x14B43D0", VA = "0x14B43D0")]
		public static void ClearShelves()
		{
		}

		[Token(Token = "0x6002479")]
		[Address(RVA = "0x14B444C", Offset = "0x14B444C", VA = "0x14B444C")]
		public static int GetNumShelves()
		{
			return default(int);
		}

		[Token(Token = "0x600247A")]
		[Address(RVA = "0x14B44C0", Offset = "0x14B44C0", VA = "0x14B44C0")]
		public static int GetCurrentShelfIndex()
		{
			return default(int);
		}

		[Token(Token = "0x600247B")]
		[Address(RVA = "0x14B4528", Offset = "0x14B4528", VA = "0x14B4528")]
		public static void SetCurrentShelf(int index)
		{
		}

		[Token(Token = "0x600247C")]
		[Address(RVA = "0x14B4594", Offset = "0x14B4594", VA = "0x14B4594")]
		public static HEU_Shelf GetShelf(int index)
		{
			return null;
		}

		[Token(Token = "0x600247D")]
		[Address(RVA = "0x14B466C", Offset = "0x14B466C", VA = "0x14B466C")]
		public static HEU_Shelf GetShelf(string shelfName)
		{
			return null;
		}

		[Token(Token = "0x600247E")]
		[Address(RVA = "0x14B47BC", Offset = "0x14B47BC", VA = "0x14B47BC")]
		public static string GetShelfStorageEntry(string shelfName, string shelfPath)
		{
			return null;
		}

		[Token(Token = "0x600247F")]
		[Address(RVA = "0x14B4820", Offset = "0x14B4820", VA = "0x14B4820")]
		public static void GetSplitShelfEntry(string shelfEntry, out string shelfName, out string shelfPath)
		{
		}

		[Token(Token = "0x6002480")]
		[Address(RVA = "0x14B48EC", Offset = "0x14B48EC", VA = "0x14B48EC")]
		public static void LoadShelves()
		{
		}

		[Token(Token = "0x6002481")]
		[Address(RVA = "0x14B50B8", Offset = "0x14B50B8", VA = "0x14B50B8")]
		public static bool LoadToolsFromDirectory(string folderPath, out List<HEU_ShelfToolData> tools)
		{
			return default(bool);
		}

		[Token(Token = "0x6002482")]
		[Address(RVA = "0x14B54F4", Offset = "0x14B54F4", VA = "0x14B54F4")]
		public static HEU_ShelfToolData LoadToolFromJsonFile(string jsonFilePath)
		{
			return null;
		}

		[Token(Token = "0x6002483")]
		[Address(RVA = "0x14B56F4", Offset = "0x14B56F4", VA = "0x14B56F4")]
		public static HEU_ShelfToolData LoadToolFromJsonString(string json, string jsonFilePath)
		{
			return null;
		}

		[Token(Token = "0x6002484")]
		[Address(RVA = "0x14B5000", Offset = "0x14B5000", VA = "0x14B5000")]
		public static HEU_Shelf AddShelf(string shelfName, string shelfPath)
		{
			return null;
		}

		[Token(Token = "0x6002485")]
		[Address(RVA = "0x14B6368", Offset = "0x14B6368", VA = "0x14B6368")]
		public static void RemoveShelf(int shelfIndex)
		{
		}

		[Token(Token = "0x6002486")]
		[Address(RVA = "0x14B5324", Offset = "0x14B5324", VA = "0x14B5324")]
		public static void SaveShelf()
		{
		}

		[Token(Token = "0x6002487")]
		[Address(RVA = "0x14B64F0", Offset = "0x14B64F0", VA = "0x14B64F0")]
		public static void ExecuteTool(int toolSlot)
		{
		}

		[Token(Token = "0x6002488")]
		[Address(RVA = "0x14B68EC", Offset = "0x14B68EC", VA = "0x14B68EC")]
		public static void ExecuteToolGenerator(string toolName, string toolPath, Vector3 targetPosition, Quaternion targetRotation, Vector3 targetScale)
		{
		}

		[Token(Token = "0x6002489")]
		[Address(RVA = "0x14B7720", Offset = "0x14B7720", VA = "0x14B7720")]
		public static bool IsValidInput(GameObject gameObject)
		{
			return default(bool);
		}

		[Token(Token = "0x600248A")]
		[Address(RVA = "0x14B6B10", Offset = "0x14B6B10", VA = "0x14B6B10")]
		public static void ExecuteToolNoInput(string toolName, string toolPath)
		{
		}

		[Token(Token = "0x600248B")]
		[Address(RVA = "0x14B6CD8", Offset = "0x14B6CD8", VA = "0x14B6CD8")]
		public static void ExecuteToolOperatorSingle(string toolName, string toolPath, GameObject[] inputObjects)
		{
		}

		[Token(Token = "0x600248C")]
		[Address(RVA = "0x14B71D0", Offset = "0x14B71D0", VA = "0x14B71D0")]
		public static void ExecuteToolOperatorMultiple(string toolName, string toolPath, GameObject[] inputObjects)
		{
		}

		[Token(Token = "0x600248D")]
		[Address(RVA = "0x14B76A4", Offset = "0x14B76A4", VA = "0x14B76A4")]
		public static void ExecuteToolBatch(string toolName, string toolPath, GameObject[] batchObjects)
		{
		}

		[Token(Token = "0x600248E")]
		[Address(RVA = "0x14B7830", Offset = "0x14B7830", VA = "0x14B7830")]
		public static string GetToolResourcePath(HEU_ShelfToolData tool, string inPath, string ext)
		{
			return null;
		}

		[Token(Token = "0x600248F")]
		[Address(RVA = "0x14B6230", Offset = "0x14B6230", VA = "0x14B6230")]
		public static string GetToolIconPath(HEU_ShelfToolData tool, string inPath)
		{
			return null;
		}

		[Token(Token = "0x6002490")]
		[Address(RVA = "0x14B60F0", Offset = "0x14B60F0", VA = "0x14B60F0")]
		public static string GetToolAssetPath(HEU_ShelfToolData tool, string inPath)
		{
			return null;
		}

		[Token(Token = "0x6002491")]
		[Address(RVA = "0x14B7914", Offset = "0x14B7914", VA = "0x14B7914")]
		public HEU_ShelfTools()
		{
		}
	}
	[Token(Token = "0x200048B")]
	public enum JSONNodeType
	{
		[Token(Token = "0x40017EB")]
		Array = 1,
		[Token(Token = "0x40017EC")]
		Object = 2,
		[Token(Token = "0x40017ED")]
		String = 3,
		[Token(Token = "0x40017EE")]
		Number = 4,
		[Token(Token = "0x40017EF")]
		NullValue = 5,
		[Token(Token = "0x40017F0")]
		Boolean = 6,
		[Token(Token = "0x40017F1")]
		None = 7,
		[Token(Token = "0x40017F2")]
		Custom = 255
	}
	[Token(Token = "0x200048C")]
	public enum JSONTextMode
	{
		[Token(Token = "0x40017F4")]
		Compact,
		[Token(Token = "0x40017F5")]
		Indent
	}
	[Token(Token = "0x200048D")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xA0D238", Offset = "0xA0D238")]
	public abstract class JSONNode
	{
		[Token(Token = "0x20006B4")]
		public struct Enumerator
		{
			[Token(Token = "0x20006D2")]
			private enum Type
			{
				[Token(Token = "0x4002152")]
				None,
				[Token(Token = "0x4002153")]
				Array,
				[Token(Token = "0x4002154")]
				Object
			}

			[Token(Token = "0x40020DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Type type;

			[Token(Token = "0x40020DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private Dictionary<string, JSONNode>.Enumerator m_Object;

			[Token(Token = "0x40020DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<JSONNode>.Enumerator m_Array;

			[Token(Token = "0x170005BB")]
			public bool IsValid
			{
				[Token(Token = "0x6002C48")]
				[Address(RVA = "0xB9694C", Offset = "0xB9694C", VA = "0xB9694C")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170005BC")]
			public KeyValuePair<string, JSONNode> Current
			{
				[Token(Token = "0x6002C4B")]
				[Address(RVA = "0xB969D4", Offset = "0xB969D4", VA = "0xB969D4")]
				get
				{
					return default(KeyValuePair<string, JSONNode>);
				}
			}

			[Token(Token = "0x6002C49")]
			[Address(RVA = "0xB9695C", Offset = "0xB9695C", VA = "0xB9695C")]
			public Enumerator(List<JSONNode>.Enumerator aArrayEnum)
			{
			}

			[Token(Token = "0x6002C4A")]
			[Address(RVA = "0xB96998", Offset = "0xB96998", VA = "0xB96998")]
			public Enumerator(Dictionary<string, JSONNode>.Enumerator aDictEnum)
			{
			}

			[Token(Token = "0x6002C4C")]
			[Address(RVA = "0xB969DC", Offset = "0xB969DC", VA = "0xB969DC")]
			public bool MoveNext()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20006B5")]
		public struct ValueEnumerator
		{
			[Token(Token = "0x40020DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Enumerator m_Enumerator;

			[Token(Token = "0x170005BD")]
			public JSONNode Current
			{
				[Token(Token = "0x6002C50")]
				[Address(RVA = "0xB96BAC", Offset = "0xB96BAC", VA = "0xB96BAC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C4D")]
			[Address(RVA = "0xB96B14", Offset = "0xB96B14", VA = "0xB96B14")]
			public ValueEnumerator(List<JSONNode>.Enumerator aArrayEnum)
			{
			}

			[Token(Token = "0x6002C4E")]
			[Address(RVA = "0xB96B5C", Offset = "0xB96B5C", VA = "0xB96B5C")]
			public ValueEnumerator(Dictionary<string, JSONNode>.Enumerator aDictEnum)
			{
			}

			[Token(Token = "0x6002C4F")]
			[Address(RVA = "0xB96B90", Offset = "0xB96B90", VA = "0xB96B90")]
			public ValueEnumerator(Enumerator aEnumerator)
			{
			}

			[Token(Token = "0x6002C51")]
			[Address(RVA = "0xB96BB4", Offset = "0xB96BB4", VA = "0xB96BB4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C52")]
			[Address(RVA = "0xB96BBC", Offset = "0xB96BBC", VA = "0xB96BBC")]
			public ValueEnumerator GetEnumerator()
			{
				return default(ValueEnumerator);
			}
		}

		[Token(Token = "0x20006B6")]
		public struct KeyEnumerator
		{
			[Token(Token = "0x40020E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Enumerator m_Enumerator;

			[Token(Token = "0x170005BE")]
			public string Current
			{
				[Token(Token = "0x6002C56")]
				[Address(RVA = "0xB96AB8", Offset = "0xB96AB8", VA = "0xB96AB8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C53")]
			[Address(RVA = "0xB96A20", Offset = "0xB96A20", VA = "0xB96A20")]
			public KeyEnumerator(List<JSONNode>.Enumerator aArrayEnum)
			{
			}

			[Token(Token = "0x6002C54")]
			[Address(RVA = "0xB96A68", Offset = "0xB96A68", VA = "0xB96A68")]
			public KeyEnumerator(Dictionary<string, JSONNode>.Enumerator aDictEnum)
			{
			}

			[Token(Token = "0x6002C55")]
			[Address(RVA = "0xB96A9C", Offset = "0xB96A9C", VA = "0xB96A9C")]
			public KeyEnumerator(Enumerator aEnumerator)
			{
			}

			[Token(Token = "0x6002C57")]
			[Address(RVA = "0xB96AC0", Offset = "0xB96AC0", VA = "0xB96AC0")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C58")]
			[Address(RVA = "0xB96AC8", Offset = "0xB96AC8", VA = "0xB96AC8")]
			public KeyEnumerator GetEnumerator()
			{
				return default(KeyEnumerator);
			}
		}

		[Token(Token = "0x20006B7")]
		public class LinqEnumerator : IEnumerator<KeyValuePair<string, JSONNode>>, IEnumerator, IDisposable, IEnumerable<KeyValuePair<string, JSONNode>>, IEnumerable
		{
			[Token(Token = "0x40020E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private JSONNode m_Node;

			[Token(Token = "0x40020E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Enumerator m_Enumerator;

			[Token(Token = "0x170005BF")]
			public KeyValuePair<string, JSONNode> Current
			{
				[Token(Token = "0x6002C5A")]
				[Address(RVA = "0x1647D10", Offset = "0x1647D10", VA = "0x1647D10", Slot = "4")]
				get
				{
					return default(KeyValuePair<string, JSONNode>);
				}
			}

			[Token(Token = "0x170005C0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C5B")]
				[Address(RVA = "0x1647D18", Offset = "0x1647D18", VA = "0x1647D18", Slot = "7")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C59")]
			[Address(RVA = "0x1643B88", Offset = "0x1643B88", VA = "0x1643B88")]
			internal LinqEnumerator(JSONNode aNode)
			{
			}

			[Token(Token = "0x6002C5C")]
			[Address(RVA = "0x1647D84", Offset = "0x1647D84", VA = "0x1647D84", Slot = "6")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C5D")]
			[Address(RVA = "0x1647D8C", Offset = "0x1647D8C", VA = "0x1647D8C", Slot = "5")]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002C5E")]
			[Address(RVA = "0x1647DAC", Offset = "0x1647DAC", VA = "0x1647DAC", Slot = "9")]
			public IEnumerator<KeyValuePair<string, JSONNode>> GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002C5F")]
			[Address(RVA = "0x1647E10", Offset = "0x1647E10", VA = "0x1647E10", Slot = "8")]
			public void Reset()
			{
			}

			[Token(Token = "0x6002C60")]
			[Address(RVA = "0x1647EBC", Offset = "0x1647EBC", VA = "0x1647EBC", Slot = "10")]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x20006B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0E0C8", Offset = "0xA0E0C8")]
		private sealed class <get_Children>d__40 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x40020E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x170005C1")]
			private JSONNode System.Collections.Generic.IEnumerator<HoudiniEngineUnity.JSONNode>.Current
			{
				[Token(Token = "0x6002C64")]
				[Address(RVA = "0x1647238", Offset = "0x1647238", VA = "0x1647238", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005C2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C66")]
				[Address(RVA = "0x16472A0", Offset = "0x16472A0", VA = "0x16472A0", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C61")]
			[Address(RVA = "0x1643904", Offset = "0x1643904", VA = "0x1643904")]
			[DebuggerHidden]
			public <get_Children>d__40(int <>1__state)
			{
			}

			[Token(Token = "0x6002C62")]
			[Address(RVA = "0x164721C", Offset = "0x164721C", VA = "0x164721C", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C63")]
			[Address(RVA = "0x1647220", Offset = "0x1647220", VA = "0x1647220", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C65")]
			[Address(RVA = "0x1647240", Offset = "0x1647240", VA = "0x1647240", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002C67")]
			[Address(RVA = "0x16472A8", Offset = "0x16472A8", VA = "0x16472A8", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<HoudiniEngineUnity.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002C68")]
			[Address(RVA = "0x1647340", Offset = "0x1647340", VA = "0x1647340", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x20006B9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0E0D8", Offset = "0xA0E0D8")]
		private sealed class <get_DeepChildren>d__42 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x40020E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40020E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONNode <>4__this;

			[Token(Token = "0x40020EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private IEnumerator<JSONNode> <>7__wrap1;

			[Token(Token = "0x40020EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private IEnumerator<JSONNode> <>7__wrap2;

			[Token(Token = "0x170005C3")]
			private JSONNode System.Collections.Generic.IEnumerator<HoudiniEngineUnity.JSONNode>.Current
			{
				[Token(Token = "0x6002C6E")]
				[Address(RVA = "0x1647974", Offset = "0x1647974", VA = "0x1647974", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005C4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C70")]
				[Address(RVA = "0x16479DC", Offset = "0x16479DC", VA = "0x16479DC", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C69")]
			[Address(RVA = "0x16439BC", Offset = "0x16439BC", VA = "0x16439BC")]
			[DebuggerHidden]
			public <get_DeepChildren>d__42(int <>1__state)
			{
			}

			[Token(Token = "0x6002C6A")]
			[Address(RVA = "0x1647344", Offset = "0x1647344", VA = "0x1647344", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C6B")]
			[Address(RVA = "0x1647554", Offset = "0x1647554", VA = "0x1647554", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C6C")]
			[Address(RVA = "0x1647494", Offset = "0x1647494", VA = "0x1647494")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002C6D")]
			[Address(RVA = "0x16473D4", Offset = "0x16473D4", VA = "0x16473D4")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x6002C6F")]
			[Address(RVA = "0x164797C", Offset = "0x164797C", VA = "0x164797C", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002C71")]
			[Address(RVA = "0x16479E4", Offset = "0x16479E4", VA = "0x16479E4", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<HoudiniEngineUnity.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002C72")]
			[Address(RVA = "0x1647A90", Offset = "0x1647A90", VA = "0x1647A90", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x40017F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool forceASCII;

		[Token(Token = "0x40017F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public static bool longAsString;

		[Token(Token = "0x40017F8")]
		[ThreadStatic]
		private static StringBuilder m_EscapeBuilder;

		[Token(Token = "0x40017F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static JSONContainerType VectorContainerType;

		[Token(Token = "0x40017FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static JSONContainerType QuaternionContainerType;

		[Token(Token = "0x40017FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static JSONContainerType RectContainerType;

		[Token(Token = "0x17000410")]
		public abstract JSONNodeType Tag
		{
			[Token(Token = "0x6002493")]
			get;
		}

		[Token(Token = "0x17000411")]
		public virtual JSONNode Item
		{
			[Token(Token = "0x6002494")]
			[Address(RVA = "0x1643764", Offset = "0x1643764", VA = "0x1643764", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002495")]
			[Address(RVA = "0x164376C", Offset = "0x164376C", VA = "0x164376C", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x17000412")]
		public virtual JSONNode Item
		{
			[Token(Token = "0x6002496")]
			[Address(RVA = "0x1643770", Offset = "0x1643770", VA = "0x1643770", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002497")]
			[Address(RVA = "0x1643778", Offset = "0x1643778", VA = "0x1643778", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x17000413")]
		public virtual string Value
		{
			[Token(Token = "0x6002498")]
			[Address(RVA = "0x164377C", Offset = "0x164377C", VA = "0x164377C", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002499")]
			[Address(RVA = "0x16437C4", Offset = "0x16437C4", VA = "0x16437C4", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x17000414")]
		public virtual int Count
		{
			[Token(Token = "0x600249A")]
			[Address(RVA = "0x16437C8", Offset = "0x16437C8", VA = "0x16437C8", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000415")]
		public virtual bool IsNumber
		{
			[Token(Token = "0x600249B")]
			[Address(RVA = "0x16437D0", Offset = "0x16437D0", VA = "0x16437D0", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000416")]
		public virtual bool IsString
		{
			[Token(Token = "0x600249C")]
			[Address(RVA = "0x16437D8", Offset = "0x16437D8", VA = "0x16437D8", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000417")]
		public virtual bool IsBoolean
		{
			[Token(Token = "0x600249D")]
			[Address(RVA = "0x16437E0", Offset = "0x16437E0", VA = "0x16437E0", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000418")]
		public virtual bool IsNull
		{
			[Token(Token = "0x600249E")]
			[Address(RVA = "0x16437E8", Offset = "0x16437E8", VA = "0x16437E8", Slot = "15")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000419")]
		public virtual bool IsArray
		{
			[Token(Token = "0x600249F")]
			[Address(RVA = "0x16437F0", Offset = "0x16437F0", VA = "0x16437F0", Slot = "16")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700041A")]
		public virtual bool IsObject
		{
			[Token(Token = "0x60024A0")]
			[Address(RVA = "0x16437F8", Offset = "0x16437F8", VA = "0x16437F8", Slot = "17")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700041B")]
		public virtual bool Inline
		{
			[Token(Token = "0x60024A1")]
			[Address(RVA = "0x1643800", Offset = "0x1643800", VA = "0x1643800", Slot = "18")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60024A2")]
			[Address(RVA = "0x1643808", Offset = "0x1643808", VA = "0x1643808", Slot = "19")]
			set
			{
			}
		}

		[Token(Token = "0x1700041C")]
		public virtual IEnumerable<JSONNode> Children
		{
			[Token(Token = "0x60024A8")]
			[Address(RVA = "0x1643894", Offset = "0x1643894", VA = "0x1643894", Slot = "25")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA2EAC0", Offset = "0xA2EAC0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700041D")]
		public IEnumerable<JSONNode> DeepChildren
		{
			[Token(Token = "0x60024A9")]
			[Address(RVA = "0x164393C", Offset = "0x164393C", VA = "0x164393C")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA2EB24", Offset = "0xA2EB24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700041E")]
		public IEnumerable<KeyValuePair<string, JSONNode>> Linq
		{
			[Token(Token = "0x60024AE")]
			[Address(RVA = "0x1643B28", Offset = "0x1643B28", VA = "0x1643B28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700041F")]
		public KeyEnumerator Keys
		{
			[Token(Token = "0x60024AF")]
			[Address(RVA = "0x1643C4C", Offset = "0x1643C4C", VA = "0x1643C4C")]
			get
			{
				return default(KeyEnumerator);
			}
		}

		[Token(Token = "0x17000420")]
		public ValueEnumerator Values
		{
			[Token(Token = "0x60024B0")]
			[Address(RVA = "0x1643C94", Offset = "0x1643C94", VA = "0x1643C94")]
			get
			{
				return default(ValueEnumerator);
			}
		}

		[Token(Token = "0x17000421")]
		public virtual double AsDouble
		{
			[Token(Token = "0x60024B1")]
			[Address(RVA = "0x1643CDC", Offset = "0x1643CDC", VA = "0x1643CDC", Slot = "29")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60024B2")]
			[Address(RVA = "0x1643DB8", Offset = "0x1643DB8", VA = "0x1643DB8", Slot = "30")]
			set
			{
			}
		}

		[Token(Token = "0x17000422")]
		public virtual int AsInt
		{
			[Token(Token = "0x60024B3")]
			[Address(RVA = "0x1643E50", Offset = "0x1643E50", VA = "0x1643E50", Slot = "31")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60024B4")]
			[Address(RVA = "0x1643E74", Offset = "0x1643E74", VA = "0x1643E74", Slot = "32")]
			set
			{
			}
		}

		[Token(Token = "0x17000423")]
		public virtual float AsFloat
		{
			[Token(Token = "0x60024B5")]
			[Address(RVA = "0x1643E8C", Offset = "0x1643E8C", VA = "0x1643E8C", Slot = "33")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60024B6")]
			[Address(RVA = "0x1643EB0", Offset = "0x1643EB0", VA = "0x1643EB0", Slot = "34")]
			set
			{
			}
		}

		[Token(Token = "0x17000424")]
		public virtual bool AsBool
		{
			[Token(Token = "0x60024B7")]
			[Address(RVA = "0x1643EC4", Offset = "0x1643EC4", VA = "0x1643EC4", Slot = "35")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60024B8")]
			[Address(RVA = "0x1643F8C", Offset = "0x1643F8C", VA = "0x1643F8C", Slot = "36")]
			set
			{
			}
		}

		[Token(Token = "0x17000425")]
		public virtual long AsLong
		{
			[Token(Token = "0x60024B9")]
			[Address(RVA = "0x1644008", Offset = "0x1644008", VA = "0x1644008", Slot = "37")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x60024BA")]
			[Address(RVA = "0x1644048", Offset = "0x1644048", VA = "0x1644048", Slot = "38")]
			set
			{
			}
		}

		[Token(Token = "0x17000426")]
		public virtual JSONArray AsArray
		{
			[Token(Token = "0x60024BB")]
			[Address(RVA = "0x1644088", Offset = "0x1644088", VA = "0x1644088", Slot = "39")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000427")]
		public virtual JSONObject AsObject
		{
			[Token(Token = "0x60024BC")]
			[Address(RVA = "0x1644108", Offset = "0x1644108", VA = "0x1644108", Slot = "40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000428")]
		internal static StringBuilder EscapeBuilder
		{
			[Token(Token = "0x60024CE")]
			[Address(RVA = "0x16448AC", Offset = "0x16448AC", VA = "0x16448AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024A3")]
		[Address(RVA = "0x164380C", Offset = "0x164380C", VA = "0x164380C", Slot = "20")]
		public virtual void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x60024A4")]
		[Address(RVA = "0x1643810", Offset = "0x1643810", VA = "0x1643810", Slot = "21")]
		public virtual void Add(JSONNode aItem)
		{
		}

		[Token(Token = "0x60024A5")]
		[Address(RVA = "0x164387C", Offset = "0x164387C", VA = "0x164387C", Slot = "22")]
		public virtual JSONNode Remove(string aKey)
		{
			return null;
		}

		[Token(Token = "0x60024A6")]
		[Address(RVA = "0x1643884", Offset = "0x1643884", VA = "0x1643884", Slot = "23")]
		public virtual JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x60024A7")]
		[Address(RVA = "0x164388C", Offset = "0x164388C", VA = "0x164388C", Slot = "24")]
		public virtual JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x60024AA")]
		[Address(RVA = "0x16439F4", Offset = "0x16439F4", VA = "0x16439F4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60024AB")]
		[Address(RVA = "0x1643A88", Offset = "0x1643A88", VA = "0x1643A88", Slot = "26")]
		public virtual string ToString(int aIndent)
		{
			return null;
		}

		[Token(Token = "0x60024AC")]
		internal abstract void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode);

		[Token(Token = "0x60024AD")]
		public abstract Enumerator GetEnumerator();

		[Token(Token = "0x60024BD")]
		[Address(RVA = "0x1644188", Offset = "0x1644188", VA = "0x1644188")]
		public static implicit operator JSONNode(string s)
		{
			return null;
		}

		[Token(Token = "0x60024BE")]
		[Address(RVA = "0x16441E8", Offset = "0x16441E8", VA = "0x16441E8")]
		public static implicit operator string(JSONNode d)
		{
			return null;
		}

		[Token(Token = "0x60024BF")]
		[Address(RVA = "0x164427C", Offset = "0x164427C", VA = "0x164427C")]
		public static implicit operator JSONNode(double n)
		{
			return null;
		}

		[Token(Token = "0x60024C0")]
		[Address(RVA = "0x16442E4", Offset = "0x16442E4", VA = "0x16442E4")]
		public static implicit operator double(JSONNode d)
		{
			return default(double);
		}

		[Token(Token = "0x60024C1")]
		[Address(RVA = "0x164437C", Offset = "0x164437C", VA = "0x164437C")]
		public static implicit operator JSONNode(float n)
		{
			return null;
		}

		[Token(Token = "0x60024C2")]
		[Address(RVA = "0x16443E4", Offset = "0x16443E4", VA = "0x16443E4")]
		public static implicit operator float(JSONNode d)
		{
			return default(float);
		}

		[Token(Token = "0x60024C3")]
		[Address(RVA = "0x164447C", Offset = "0x164447C", VA = "0x164447C")]
		public static implicit operator JSONNode(int n)
		{
			return null;
		}

		[Token(Token = "0x60024C4")]
		[Address(RVA = "0x16444DC", Offset = "0x16444DC", VA = "0x16444DC")]
		public static implicit operator int(JSONNode d)
		{
			return default(int);
		}

		[Token(Token = "0x60024C5")]
		[Address(RVA = "0x1644574", Offset = "0x1644574", VA = "0x1644574")]
		public static implicit operator JSONNode(long n)
		{
			return null;
		}

		[Token(Token = "0x60024C6")]
		[Address(RVA = "0x1644644", Offset = "0x1644644", VA = "0x1644644")]
		public static implicit operator long(JSONNode d)
		{
			return default(long);
		}

		[Token(Token = "0x60024C7")]
		[Address(RVA = "0x16446DC", Offset = "0x16446DC", VA = "0x16446DC")]
		public static implicit operator JSONNode(bool b)
		{
			return null;
		}

		[Token(Token = "0x60024C8")]
		[Address(RVA = "0x164473C", Offset = "0x164473C", VA = "0x164473C")]
		public static implicit operator bool(JSONNode d)
		{
			return default(bool);
		}

		[Token(Token = "0x60024C9")]
		[Address(RVA = "0x16447D4", Offset = "0x16447D4", VA = "0x16447D4")]
		public static implicit operator JSONNode(KeyValuePair<string, JSONNode> aKeyValue)
		{
			return null;
		}

		[Token(Token = "0x60024CA")]
		[Address(RVA = "0x1641CB0", Offset = "0x1641CB0", VA = "0x1641CB0")]
		public static bool operator ==(JSONNode a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x60024CB")]
		[Address(RVA = "0x1644818", Offset = "0x1644818", VA = "0x1644818")]
		public static bool operator !=(JSONNode a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x60024CC")]
		[Address(RVA = "0x1644898", Offset = "0x1644898", VA = "0x1644898", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60024CD")]
		[Address(RVA = "0x16448A4", Offset = "0x16448A4", VA = "0x16448A4", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60024CF")]
		[Address(RVA = "0x164497C", Offset = "0x164497C", VA = "0x164497C")]
		internal static string Escape(string aText)
		{
			return null;
		}

		[Token(Token = "0x60024D0")]
		[Address(RVA = "0x1644C1C", Offset = "0x1644C1C", VA = "0x1644C1C")]
		private static JSONNode ParseElement(string token, bool quoted)
		{
			return null;
		}

		[Token(Token = "0x60024D1")]
		[Address(RVA = "0x1641330", Offset = "0x1641330", VA = "0x1641330")]
		public static JSONNode Parse(string aJSON)
		{
			return null;
		}

		[Token(Token = "0x60024D2")]
		[Address(RVA = "0x1644E20", Offset = "0x1644E20", VA = "0x1644E20")]
		private static JSONNode GetContainer(JSONContainerType aType)
		{
			return null;
		}

		[Token(Token = "0x60024D3")]
		[Address(RVA = "0x1644E9C", Offset = "0x1644E9C", VA = "0x1644E9C")]
		public static implicit operator JSONNode(Vector2 aVec)
		{
			return null;
		}

		[Token(Token = "0x60024D4")]
		[Address(RVA = "0x164507C", Offset = "0x164507C", VA = "0x164507C")]
		public static implicit operator JSONNode(Vector3 aVec)
		{
			return null;
		}

		[Token(Token = "0x60024D5")]
		[Address(RVA = "0x16452E0", Offset = "0x16452E0", VA = "0x16452E0")]
		public static implicit operator JSONNode(Vector4 aVec)
		{
			return null;
		}

		[Token(Token = "0x60024D6")]
		[Address(RVA = "0x16455B8", Offset = "0x16455B8", VA = "0x16455B8")]
		public static implicit operator JSONNode(Quaternion aRot)
		{
			return null;
		}

		[Token(Token = "0x60024D7")]
		[Address(RVA = "0x1645890", Offset = "0x1645890", VA = "0x1645890")]
		public static implicit operator JSONNode(Rect aRect)
		{
			return null;
		}

		[Token(Token = "0x60024D8")]
		[Address(RVA = "0x1645BC4", Offset = "0x1645BC4", VA = "0x1645BC4")]
		public static implicit operator JSONNode(RectOffset aRect)
		{
			return null;
		}

		[Token(Token = "0x60024D9")]
		[Address(RVA = "0x1645EF0", Offset = "0x1645EF0", VA = "0x1645EF0")]
		public static implicit operator Vector2(JSONNode aNode)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60024DA")]
		[Address(RVA = "0x1645F70", Offset = "0x1645F70", VA = "0x1645F70")]
		public static implicit operator Vector3(JSONNode aNode)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60024DB")]
		[Address(RVA = "0x1645FF0", Offset = "0x1645FF0", VA = "0x1645FF0")]
		public static implicit operator Vector4(JSONNode aNode)
		{
			return default(Vector4);
		}

		[Token(Token = "0x60024DC")]
		[Address(RVA = "0x1646070", Offset = "0x1646070", VA = "0x1646070")]
		public static implicit operator Quaternion(JSONNode aNode)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60024DD")]
		[Address(RVA = "0x16460F0", Offset = "0x16460F0", VA = "0x16460F0")]
		public static implicit operator Rect(JSONNode aNode)
		{
			return default(Rect);
		}

		[Token(Token = "0x60024DE")]
		[Address(RVA = "0x1646128", Offset = "0x1646128", VA = "0x1646128")]
		public static implicit operator RectOffset(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x60024DF")]
		[Address(RVA = "0x16461A0", Offset = "0x16461A0", VA = "0x16461A0")]
		public Vector2 ReadVector2(Vector2 aDefault)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60024E0")]
		[Address(RVA = "0x16462FC", Offset = "0x16462FC", VA = "0x16462FC")]
		public Vector2 ReadVector2(string aXName, string aYName)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60024E1")]
		[Address(RVA = "0x1645F04", Offset = "0x1645F04", VA = "0x1645F04")]
		public Vector2 ReadVector2()
		{
			return default(Vector2);
		}

		[Token(Token = "0x60024E2")]
		[Address(RVA = "0x1644F40", Offset = "0x1644F40", VA = "0x1644F40")]
		public JSONNode WriteVector2(Vector2 aVec, string aXName = "x", string aYName = "y")
		{
			return null;
		}

		[Token(Token = "0x60024E3")]
		[Address(RVA = "0x1646410", Offset = "0x1646410", VA = "0x1646410")]
		public Vector3 ReadVector3(Vector3 aDefault)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60024E4")]
		[Address(RVA = "0x16465E8", Offset = "0x16465E8", VA = "0x16465E8")]
		public Vector3 ReadVector3(string aXName, string aYName, string aZName)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60024E5")]
		[Address(RVA = "0x1645F84", Offset = "0x1645F84", VA = "0x1645F84")]
		public Vector3 ReadVector3()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60024E6")]
		[Address(RVA = "0x164513C", Offset = "0x164513C", VA = "0x164513C")]
		public JSONNode WriteVector3(Vector3 aVec, string aXName = "x", string aYName = "y", string aZName = "z")
		{
			return null;
		}

		[Token(Token = "0x60024E7")]
		[Address(RVA = "0x164674C", Offset = "0x164674C", VA = "0x164674C")]
		public Vector4 ReadVector4(Vector4 aDefault)
		{
			return default(Vector4);
		}

		[Token(Token = "0x60024E8")]
		[Address(RVA = "0x1646004", Offset = "0x1646004", VA = "0x1646004")]
		public Vector4 ReadVector4()
		{
			return default(Vector4);
		}

		[Token(Token = "0x60024E9")]
		[Address(RVA = "0x1645384", Offset = "0x1645384", VA = "0x1645384")]
		public JSONNode WriteVector4(Vector4 aVec)
		{
			return null;
		}

		[Token(Token = "0x60024EA")]
		[Address(RVA = "0x1646988", Offset = "0x1646988", VA = "0x1646988")]
		public Quaternion ReadQuaternion(Quaternion aDefault)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60024EB")]
		[Address(RVA = "0x1646084", Offset = "0x1646084", VA = "0x1646084")]
		public Quaternion ReadQuaternion()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60024EC")]
		[Address(RVA = "0x164565C", Offset = "0x164565C", VA = "0x164565C")]
		public JSONNode WriteQuaternion(Quaternion aRot)
		{
			return null;
		}

		[Token(Token = "0x60024ED")]
		[Address(RVA = "0x1646BC4", Offset = "0x1646BC4", VA = "0x1646BC4")]
		public Rect ReadRect(Rect aDefault)
		{
			return default(Rect);
		}

		[Token(Token = "0x60024EE")]
		[Address(RVA = "0x1646114", Offset = "0x1646114", VA = "0x1646114")]
		public Rect ReadRect()
		{
			return default(Rect);
		}

		[Token(Token = "0x60024EF")]
		[Address(RVA = "0x1645934", Offset = "0x1645934", VA = "0x1645934")]
		public JSONNode WriteRect(Rect aRect)
		{
			return null;
		}

		[Token(Token = "0x60024F0")]
		[Address(RVA = "0x1646E00", Offset = "0x1646E00", VA = "0x1646E00")]
		public RectOffset ReadRectOffset(RectOffset aDefault)
		{
			return null;
		}

		[Token(Token = "0x60024F1")]
		[Address(RVA = "0x164613C", Offset = "0x164613C", VA = "0x164613C")]
		public RectOffset ReadRectOffset()
		{
			return null;
		}

		[Token(Token = "0x60024F2")]
		[Address(RVA = "0x1645C40", Offset = "0x1645C40", VA = "0x1645C40")]
		public JSONNode WriteRectOffset(RectOffset aRect)
		{
			return null;
		}

		[Token(Token = "0x60024F3")]
		[Address(RVA = "0x1647058", Offset = "0x1647058", VA = "0x1647058")]
		public Matrix4x4 ReadMatrix()
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x60024F4")]
		[Address(RVA = "0x1647168", Offset = "0x1647168", VA = "0x1647168")]
		public JSONNode WriteMatrix(Matrix4x4 aMatrix)
		{
			return null;
		}

		[Token(Token = "0x60024F5")]
		[Address(RVA = "0x16424EC", Offset = "0x16424EC", VA = "0x16424EC")]
		protected JSONNode()
		{
		}
	}
	[Token(Token = "0x200048E")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xA0D270", Offset = "0xA0D270")]
	public class JSONArray : JSONNode
	{
		[Token(Token = "0x20006BA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0E0E8", Offset = "0xA0E0E8")]
		private sealed class <get_Children>d__22 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x40020EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40020EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONArray <>4__this;

			[Token(Token = "0x40020F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x170005C5")]
			private JSONNode System.Collections.Generic.IEnumerator<HoudiniEngineUnity.JSONNode>.Current
			{
				[Token(Token = "0x6002C77")]
				[Address(RVA = "0x16426BC", Offset = "0x16426BC", VA = "0x16426BC", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005C6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C79")]
				[Address(RVA = "0x1642724", Offset = "0x1642724", VA = "0x1642724", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C73")]
			[Address(RVA = "0x16422AC", Offset = "0x16422AC", VA = "0x16422AC")]
			[DebuggerHidden]
			public <get_Children>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x6002C74")]
			[Address(RVA = "0x16424F4", Offset = "0x16424F4", VA = "0x16424F4", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C75")]
			[Address(RVA = "0x1642568", Offset = "0x1642568", VA = "0x1642568", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C76")]
			[Address(RVA = "0x1642510", Offset = "0x1642510", VA = "0x1642510")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002C78")]
			[Address(RVA = "0x16426C4", Offset = "0x16426C4", VA = "0x16426C4", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002C7A")]
			[Address(RVA = "0x164272C", Offset = "0x164272C", VA = "0x164272C", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<HoudiniEngineUnity.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002C7B")]
			[Address(RVA = "0x16427D8", Offset = "0x16427D8", VA = "0x16427D8", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x40017FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<JSONNode> m_List;

		[Token(Token = "0x40017FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inline;

		[Token(Token = "0x17000429")]
		public override bool Inline
		{
			[Token(Token = "0x60024F7")]
			[Address(RVA = "0x16419B4", Offset = "0x16419B4", VA = "0x16419B4", Slot = "18")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60024F8")]
			[Address(RVA = "0x16419BC", Offset = "0x16419BC", VA = "0x16419BC", Slot = "19")]
			set
			{
			}
		}

		[Token(Token = "0x1700042A")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x60024F9")]
			[Address(RVA = "0x16419C8", Offset = "0x16419C8", VA = "0x16419C8", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x1700042B")]
		public override bool IsArray
		{
			[Token(Token = "0x60024FA")]
			[Address(RVA = "0x16419D0", Offset = "0x16419D0", VA = "0x16419D0", Slot = "16")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700042C")]
		public override JSONNode Item
		{
			[Token(Token = "0x60024FC")]
			[Address(RVA = "0x1641A94", Offset = "0x1641A94", VA = "0x1641A94", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x60024FD")]
			[Address(RVA = "0x1641BB4", Offset = "0x1641BB4", VA = "0x1641BB4", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x1700042D")]
		public override JSONNode Item
		{
			[Token(Token = "0x60024FE")]
			[Address(RVA = "0x1641EE0", Offset = "0x1641EE0", VA = "0x1641EE0", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x60024FF")]
			[Address(RVA = "0x1641F40", Offset = "0x1641F40", VA = "0x1641F40", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x1700042E")]
		public override int Count
		{
			[Token(Token = "0x6002500")]
			[Address(RVA = "0x1642000", Offset = "0x1642000", VA = "0x1642000", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700042F")]
		public override IEnumerable<JSONNode> Children
		{
			[Token(Token = "0x6002504")]
			[Address(RVA = "0x164222C", Offset = "0x164222C", VA = "0x164222C", Slot = "25")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA2EB88", Offset = "0xA2EB88")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024FB")]
		[Address(RVA = "0x16419D8", Offset = "0x16419D8", VA = "0x16419D8", Slot = "28")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x6002501")]
		[Address(RVA = "0x1642050", Offset = "0x1642050", VA = "0x1642050", Slot = "20")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6002502")]
		[Address(RVA = "0x1642110", Offset = "0x1642110", VA = "0x1642110", Slot = "23")]
		public override JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x6002503")]
		[Address(RVA = "0x16421BC", Offset = "0x16421BC", VA = "0x16421BC", Slot = "24")]
		public override JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x6002505")]
		[Address(RVA = "0x16422E4", Offset = "0x16422E4", VA = "0x16422E4", Slot = "27")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x6002506")]
		[Address(RVA = "0x164245C", Offset = "0x164245C", VA = "0x164245C")]
		public JSONArray()
		{
		}
	}
	[Token(Token = "0x200048F")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xA0D2A8", Offset = "0xA0D2A8")]
	public class JSONObject : JSONNode
	{
		[Token(Token = "0x20006BB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0E0F8", Offset = "0xA0E0F8")]
		private sealed class <>c__DisplayClass21_0
		{
			[Token(Token = "0x40020F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public JSONNode aNode;

			[Token(Token = "0x6002C7C")]
			[Address(RVA = "0x164905C", Offset = "0x164905C", VA = "0x164905C")]
			public <>c__DisplayClass21_0()
			{
			}

			[Token(Token = "0x6002C7D")]
			[Address(RVA = "0x16493E8", Offset = "0x16493E8", VA = "0x16493E8")]
			internal bool <Remove>b__0(KeyValuePair<string, JSONNode> k)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20006BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0E108", Offset = "0xA0E108")]
		private sealed class <get_Children>d__23 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x40020F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40020F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONObject <>4__this;

			[Token(Token = "0x40020F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Dictionary<string, JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x170005C7")]
			private JSONNode System.Collections.Generic.IEnumerator<HoudiniEngineUnity.JSONNode>.Current
			{
				[Token(Token = "0x6002C82")]
				[Address(RVA = "0x1649630", Offset = "0x1649630", VA = "0x1649630", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005C8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C84")]
				[Address(RVA = "0x1649698", Offset = "0x1649698", VA = "0x1649698", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C7E")]
			[Address(RVA = "0x16490E4", Offset = "0x16490E4", VA = "0x16490E4")]
			[DebuggerHidden]
			public <get_Children>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x6002C7F")]
			[Address(RVA = "0x1649460", Offset = "0x1649460", VA = "0x1649460", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C80")]
			[Address(RVA = "0x16494D4", Offset = "0x16494D4", VA = "0x16494D4", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C81")]
			[Address(RVA = "0x164947C", Offset = "0x164947C", VA = "0x164947C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002C83")]
			[Address(RVA = "0x1649638", Offset = "0x1649638", VA = "0x1649638", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002C85")]
			[Address(RVA = "0x16496A0", Offset = "0x16496A0", VA = "0x16496A0", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<HoudiniEngineUnity.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002C86")]
			[Address(RVA = "0x164974C", Offset = "0x164974C", VA = "0x164974C", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x40017FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<string, JSONNode> m_Dict;

		[Token(Token = "0x40017FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inline;

		[Token(Token = "0x17000430")]
		public override bool Inline
		{
			[Token(Token = "0x6002507")]
			[Address(RVA = "0x1648750", Offset = "0x1648750", VA = "0x1648750", Slot = "18")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002508")]
			[Address(RVA = "0x1648758", Offset = "0x1648758", VA = "0x1648758", Slot = "19")]
			set
			{
			}
		}

		[Token(Token = "0x17000431")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x6002509")]
			[Address(RVA = "0x1648764", Offset = "0x1648764", VA = "0x1648764", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x17000432")]
		public override bool IsObject
		{
			[Token(Token = "0x600250A")]
			[Address(RVA = "0x164876C", Offset = "0x164876C", VA = "0x164876C", Slot = "17")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000433")]
		public override JSONNode Item
		{
			[Token(Token = "0x600250C")]
			[Address(RVA = "0x164880C", Offset = "0x164880C", VA = "0x164880C", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x600250D")]
			[Address(RVA = "0x16488C8", Offset = "0x16488C8", VA = "0x16488C8", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x17000434")]
		public override JSONNode Item
		{
			[Token(Token = "0x600250E")]
			[Address(RVA = "0x16489DC", Offset = "0x16489DC", VA = "0x16489DC", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x600250F")]
			[Address(RVA = "0x1648A74", Offset = "0x1648A74", VA = "0x1648A74", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x17000435")]
		public override int Count
		{
			[Token(Token = "0x6002510")]
			[Address(RVA = "0x1648B90", Offset = "0x1648B90", VA = "0x1648B90", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000436")]
		public override IEnumerable<JSONNode> Children
		{
			[Token(Token = "0x6002515")]
			[Address(RVA = "0x1649064", Offset = "0x1649064", VA = "0x1649064", Slot = "25")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA2EBEC", Offset = "0xA2EBEC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600250B")]
		[Address(RVA = "0x1648774", Offset = "0x1648774", VA = "0x1648774", Slot = "28")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x6002511")]
		[Address(RVA = "0x1648BE8", Offset = "0x1648BE8", VA = "0x1648BE8", Slot = "20")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6002512")]
		[Address(RVA = "0x1648D6C", Offset = "0x1648D6C", VA = "0x1648D6C", Slot = "22")]
		public override JSONNode Remove(string aKey)
		{
			return null;
		}

		[Token(Token = "0x6002513")]
		[Address(RVA = "0x1648E28", Offset = "0x1648E28", VA = "0x1648E28", Slot = "23")]
		public override JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x6002514")]
		[Address(RVA = "0x1648EE4", Offset = "0x1648EE4", VA = "0x1648EE4", Slot = "24")]
		public override JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x6002516")]
		[Address(RVA = "0x164911C", Offset = "0x164911C", VA = "0x164911C", Slot = "27")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x6002517")]
		[Address(RVA = "0x1642D78", Offset = "0x1642D78", VA = "0x1642D78")]
		public JSONObject()
		{
		}
	}
	[Token(Token = "0x2000490")]
	public class JSONString : JSONNode
	{
		[Token(Token = "0x4001800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string m_Data;

		[Token(Token = "0x17000437")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x6002518")]
			[Address(RVA = "0x1649750", Offset = "0x1649750", VA = "0x1649750", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x17000438")]
		public override bool IsString
		{
			[Token(Token = "0x6002519")]
			[Address(RVA = "0x1649758", Offset = "0x1649758", VA = "0x1649758", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000439")]
		public override string Value
		{
			[Token(Token = "0x600251B")]
			[Address(RVA = "0x1649780", Offset = "0x1649780", VA = "0x1649780", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x600251C")]
			[Address(RVA = "0x1649788", Offset = "0x1649788", VA = "0x1649788", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x600251A")]
		[Address(RVA = "0x1649760", Offset = "0x1649760", VA = "0x1649760", Slot = "28")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x600251D")]
		[Address(RVA = "0x16433B8", Offset = "0x16433B8", VA = "0x16433B8")]
		public JSONString(string aData)
		{
		}

		[Token(Token = "0x600251E")]
		[Address(RVA = "0x1649790", Offset = "0x1649790", VA = "0x1649790", Slot = "27")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x600251F")]
		[Address(RVA = "0x1649848", Offset = "0x1649848", VA = "0x1649848", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6002520")]
		[Address(RVA = "0x164995C", Offset = "0x164995C", VA = "0x164995C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000491")]
	public class JSONNumber : JSONNode
	{
		[Token(Token = "0x4001801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private double m_Data;

		[Token(Token = "0x1700043A")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x6002521")]
			[Address(RVA = "0x164828C", Offset = "0x164828C", VA = "0x164828C", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x1700043B")]
		public override bool IsNumber
		{
			[Token(Token = "0x6002522")]
			[Address(RVA = "0x1648294", Offset = "0x1648294", VA = "0x1648294", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700043C")]
		public override string Value
		{
			[Token(Token = "0x6002524")]
			[Address(RVA = "0x16482BC", Offset = "0x16482BC", VA = "0x16482BC", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002525")]
			[Address(RVA = "0x1648334", Offset = "0x1648334", VA = "0x1648334", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x1700043D")]
		public override double AsDouble
		{
			[Token(Token = "0x6002526")]
			[Address(RVA = "0x16483F8", Offset = "0x16483F8", VA = "0x16483F8", Slot = "29")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6002527")]
			[Address(RVA = "0x1648400", Offset = "0x1648400", VA = "0x1648400", Slot = "30")]
			set
			{
			}
		}

		[Token(Token = "0x1700043E")]
		public override long AsLong
		{
			[Token(Token = "0x6002528")]
			[Address(RVA = "0x1648408", Offset = "0x1648408", VA = "0x1648408", Slot = "37")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x6002529")]
			[Address(RVA = "0x1648414", Offset = "0x1648414", VA = "0x1648414", Slot = "38")]
			set
			{
			}
		}

		[Token(Token = "0x6002523")]
		[Address(RVA = "0x164829C", Offset = "0x164829C", VA = "0x164829C", Slot = "28")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x600252A")]
		[Address(RVA = "0x1643000", Offset = "0x1643000", VA = "0x1643000")]
		public JSONNumber(double aData)
		{
		}

		[Token(Token = "0x600252B")]
		[Address(RVA = "0x1648420", Offset = "0x1648420", VA = "0x1648420")]
		public JSONNumber(string aData)
		{
		}

		[Token(Token = "0x600252C")]
		[Address(RVA = "0x16484A8", Offset = "0x16484A8", VA = "0x16484A8", Slot = "27")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x600252D")]
		[Address(RVA = "0x16484E8", Offset = "0x16484E8", VA = "0x16484E8")]
		private static bool IsNumeric(object value)
		{
			return default(bool);
		}

		[Token(Token = "0x600252E")]
		[Address(RVA = "0x1648618", Offset = "0x1648618", VA = "0x1648618", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600252F")]
		[Address(RVA = "0x1648744", Offset = "0x1648744", VA = "0x1648744", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000492")]
	public class JSONBool : JSONNode
	{
		[Token(Token = "0x4001802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool m_Data;

		[Token(Token = "0x1700043F")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x6002530")]
			[Address(RVA = "0x16427DC", Offset = "0x16427DC", VA = "0x16427DC", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x17000440")]
		public override bool IsBoolean
		{
			[Token(Token = "0x6002531")]
			[Address(RVA = "0x16427E4", Offset = "0x16427E4", VA = "0x16427E4", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000441")]
		public override string Value
		{
			[Token(Token = "0x6002533")]
			[Address(RVA = "0x164280C", Offset = "0x164280C", VA = "0x164280C", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002534")]
			[Address(RVA = "0x1642818", Offset = "0x1642818", VA = "0x1642818", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x17000442")]
		public override bool AsBool
		{
			[Token(Token = "0x6002535")]
			[Address(RVA = "0x16428A4", Offset = "0x16428A4", VA = "0x16428A4", Slot = "35")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002536")]
			[Address(RVA = "0x16428AC", Offset = "0x16428AC", VA = "0x16428AC", Slot = "36")]
			set
			{
			}
		}

		[Token(Token = "0x6002532")]
		[Address(RVA = "0x16427EC", Offset = "0x16427EC", VA = "0x16427EC", Slot = "28")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x6002537")]
		[Address(RVA = "0x16428B8", Offset = "0x16428B8", VA = "0x16428B8")]
		public JSONBool(bool aData)
		{
		}

		[Token(Token = "0x6002538")]
		[Address(RVA = "0x1642938", Offset = "0x1642938", VA = "0x1642938")]
		public JSONBool(string aData)
		{
		}

		[Token(Token = "0x6002539")]
		[Address(RVA = "0x16429C0", Offset = "0x16429C0", VA = "0x16429C0", Slot = "27")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x600253A")]
		[Address(RVA = "0x1642A3C", Offset = "0x1642A3C", VA = "0x1642A3C", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600253B")]
		[Address(RVA = "0x1642AC4", Offset = "0x1642AC4", VA = "0x1642AC4", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000493")]
	public class JSONNull : JSONNode
	{
		[Token(Token = "0x4001803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static JSONNull m_StaticInstance;

		[Token(Token = "0x4001804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static bool reuseSameInstance;

		[Token(Token = "0x17000443")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x600253E")]
			[Address(RVA = "0x1648094", Offset = "0x1648094", VA = "0x1648094", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x17000444")]
		public override bool IsNull
		{
			[Token(Token = "0x600253F")]
			[Address(RVA = "0x164809C", Offset = "0x164809C", VA = "0x164809C", Slot = "15")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000445")]
		public override string Value
		{
			[Token(Token = "0x6002541")]
			[Address(RVA = "0x16480C4", Offset = "0x16480C4", VA = "0x16480C4", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002542")]
			[Address(RVA = "0x164810C", Offset = "0x164810C", VA = "0x164810C", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x17000446")]
		public override bool AsBool
		{
			[Token(Token = "0x6002543")]
			[Address(RVA = "0x1648110", Offset = "0x1648110", VA = "0x1648110", Slot = "35")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002544")]
			[Address(RVA = "0x1648118", Offset = "0x1648118", VA = "0x1648118", Slot = "36")]
			set
			{
			}
		}

		[Token(Token = "0x600253C")]
		[Address(RVA = "0x1641E40", Offset = "0x1641E40", VA = "0x1641E40")]
		public static JSONNull CreateOrGet()
		{
			return null;
		}

		[Token(Token = "0x600253D")]
		[Address(RVA = "0x164802C", Offset = "0x164802C", VA = "0x164802C")]
		private JSONNull()
		{
		}

		[Token(Token = "0x6002540")]
		[Address(RVA = "0x16480A4", Offset = "0x16480A4", VA = "0x16480A4", Slot = "28")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x6002545")]
		[Address(RVA = "0x164811C", Offset = "0x164811C", VA = "0x164811C", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6002546")]
		[Address(RVA = "0x16481B8", Offset = "0x16481B8", VA = "0x16481B8", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6002547")]
		[Address(RVA = "0x16481C0", Offset = "0x16481C0", VA = "0x16481C0", Slot = "27")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}
	}
	[Token(Token = "0x2000494")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xA0D2E0", Offset = "0xA0D2E0")]
	internal class JSONLazyCreator : JSONNode
	{
		[Token(Token = "0x4001805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private JSONNode m_Node;

		[Token(Token = "0x4001806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string m_Key;

		[Token(Token = "0x17000447")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x6002549")]
			[Address(RVA = "0x1642AD0", Offset = "0x1642AD0", VA = "0x1642AD0", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x17000448")]
		public override JSONNode Item
		{
			[Token(Token = "0x600254E")]
			[Address(RVA = "0x1642B78", Offset = "0x1642B78", VA = "0x1642B78", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x600254F")]
			[Address(RVA = "0x1642BD8", Offset = "0x1642BD8", VA = "0x1642BD8", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x17000449")]
		public override JSONNode Item
		{
			[Token(Token = "0x6002550")]
			[Address(RVA = "0x1642C6C", Offset = "0x1642C6C", VA = "0x1642C6C", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002551")]
			[Address(RVA = "0x1642CDC", Offset = "0x1642CDC", VA = "0x1642CDC", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x1700044A")]
		public override int AsInt
		{
			[Token(Token = "0x6002558")]
			[Address(RVA = "0x1642F88", Offset = "0x1642F88", VA = "0x1642F88", Slot = "31")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002559")]
			[Address(RVA = "0x164307C", Offset = "0x164307C", VA = "0x164307C", Slot = "32")]
			set
			{
			}
		}

		[Token(Token = "0x1700044B")]
		public override float AsFloat
		{
			[Token(Token = "0x600255A")]
			[Address(RVA = "0x16430F8", Offset = "0x16430F8", VA = "0x16430F8", Slot = "33")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600255B")]
			[Address(RVA = "0x1643170", Offset = "0x1643170", VA = "0x1643170", Slot = "34")]
			set
			{
			}
		}

		[Token(Token = "0x1700044C")]
		public override double AsDouble
		{
			[Token(Token = "0x600255C")]
			[Address(RVA = "0x16431EC", Offset = "0x16431EC", VA = "0x16431EC", Slot = "29")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x600255D")]
			[Address(RVA = "0x1643264", Offset = "0x1643264", VA = "0x1643264", Slot = "30")]
			set
			{
			}
		}

		[Token(Token = "0x1700044D")]
		public override long AsLong
		{
			[Token(Token = "0x600255E")]
			[Address(RVA = "0x16432E0", Offset = "0x16432E0", VA = "0x16432E0", Slot = "37")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x600255F")]
			[Address(RVA = "0x1643434", Offset = "0x1643434", VA = "0x1643434", Slot = "38")]
			set
			{
			}
		}

		[Token(Token = "0x1700044E")]
		public override bool AsBool
		{
			[Token(Token = "0x6002560")]
			[Address(RVA = "0x164353C", Offset = "0x164353C", VA = "0x164353C", Slot = "35")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002561")]
			[Address(RVA = "0x16435B4", Offset = "0x16435B4", VA = "0x16435B4", Slot = "36")]
			set
			{
			}
		}

		[Token(Token = "0x1700044F")]
		public override JSONArray AsArray
		{
			[Token(Token = "0x6002562")]
			[Address(RVA = "0x1643630", Offset = "0x1643630", VA = "0x1643630", Slot = "39")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000450")]
		public override JSONObject AsObject
		{
			[Token(Token = "0x6002563")]
			[Address(RVA = "0x164369C", Offset = "0x164369C", VA = "0x164369C", Slot = "40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600254A")]
		[Address(RVA = "0x1642AD8", Offset = "0x1642AD8", VA = "0x1642AD8", Slot = "28")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x600254B")]
		[Address(RVA = "0x1641B38", Offset = "0x1641B38", VA = "0x1641B38")]
		public JSONLazyCreator(JSONNode aNode)
		{
		}

		[Token(Token = "0x600254C")]
		[Address(RVA = "0x1642AF8", Offset = "0x1642AF8", VA = "0x1642AF8")]
		public JSONLazyCreator(JSONNode aNode, string aKey)
		{
		}

		[Token(Token = "0x600254D")]
		private T Set<T>(T aVal) where T : JSONNode
		{
			return null;
		}

		[Token(Token = "0x6002552")]
		[Address(RVA = "0x1642E08", Offset = "0x1642E08", VA = "0x1642E08", Slot = "21")]
		public override void Add(JSONNode aItem)
		{
		}

		[Token(Token = "0x6002553")]
		[Address(RVA = "0x1642E9C", Offset = "0x1642E9C", VA = "0x1642E9C", Slot = "20")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6002554")]
		[Address(RVA = "0x1642F38", Offset = "0x1642F38", VA = "0x1642F38")]
		public static bool operator ==(JSONLazyCreator a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6002555")]
		[Address(RVA = "0x1642F50", Offset = "0x1642F50", VA = "0x1642F50")]
		public static bool operator !=(JSONLazyCreator a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6002556")]
		[Address(RVA = "0x1642F68", Offset = "0x1642F68", VA = "0x1642F68", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6002557")]
		[Address(RVA = "0x1642F80", Offset = "0x1642F80", VA = "0x1642F80", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6002564")]
		[Address(RVA = "0x1643708", Offset = "0x1643708", VA = "0x1643708", Slot = "27")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}
	}
	[Token(Token = "0x2000495")]
	public static class JSON
	{
		[Token(Token = "0x6002565")]
		[Address(RVA = "0x16412CC", Offset = "0x16412CC", VA = "0x16412CC")]
		public static JSONNode Parse(string aJSON)
		{
			return null;
		}
	}
	[Token(Token = "0x2000496")]
	public enum JSONContainerType
	{
		[Token(Token = "0x4001808")]
		Array,
		[Token(Token = "0x4001809")]
		Object
	}
	[Token(Token = "0x2000497")]
	public static class HEU_TerrainUtility
	{
		[Token(Token = "0x6002566")]
		[Address(RVA = "0x1634350", Offset = "0x1634350", VA = "0x1634350")]
		public static bool GenerateTerrainFromVolume(HEU_SessionBase session, ref HAPI_VolumeInfo volumeInfo, int geoID, int partID, GameObject gameObject, ref TerrainData terrainData, out Vector3 volumePositionOffset, ref Terrain terrain)
		{
			return default(bool);
		}

		[Token(Token = "0x6002567")]
		[Address(RVA = "0x1634DBC", Offset = "0x1634DBC", VA = "0x1634DBC")]
		public static void SetTerrainMaterial(Terrain terrain, string specifiedMaterialName)
		{
		}

		[Token(Token = "0x6002568")]
		[Address(RVA = "0x1634EA0", Offset = "0x1634EA0", VA = "0x1634EA0")]
		public static float[] GetNormalizedHeightmapFromPartWithMinMax(HEU_SessionBase session, int geoID, int partID, int heightMapWidth, int heightMapHeight, ref float minHeight, ref float maxHeight, ref float heightRange, bool bUseHeightRangeOverride)
		{
			return null;
		}

		[Token(Token = "0x6002569")]
		[Address(RVA = "0x1635630", Offset = "0x1635630", VA = "0x1635630")]
		public static int[,] GetDetailMapFromPart(HEU_SessionBase session, int geoID, int partID, out int detailResolution)
		{
			return null;
		}

		[Token(Token = "0x600256A")]
		[Address(RVA = "0x1635420", Offset = "0x1635420", VA = "0x1635420")]
		public static bool GetHeightmapFromPart(HEU_SessionBase session, int xLength, int yLength, int geoID, int partID, ref float[] heightValues, ref float minHeight, ref float maxHeight)
		{
			return default(bool);
		}

		[Token(Token = "0x600256B")]
		[Address(RVA = "0x1635310", Offset = "0x1635310", VA = "0x1635310")]
		public static float[,] ConvertHeightMapHoudiniToUnity(int heightMapWidth, int heightMapHeight, float[] heightValues)
		{
			return null;
		}

		[Token(Token = "0x600256C")]
		[Address(RVA = "0x1635900", Offset = "0x1635900", VA = "0x1635900")]
		public static float[,,] ConvertHeightFieldToAlphaMap(int heightMapWidth, int heightMapHeight, List<float[]> heightFields)
		{
			return null;
		}

		[Token(Token = "0x600256D")]
		[Address(RVA = "0x1635AB4", Offset = "0x1635AB4", VA = "0x1635AB4")]
		public static float[,,] AppendConvertedHeightFieldToAlphaMap(int heightMapWidth, int heightMapHeight, float[,,] existingAlphaMaps, List<float[]> heightFields, float[] strengths, List<int> alphaMapIndices)
		{
			return null;
		}

		[Token(Token = "0x600256E")]
		[Address(RVA = "0x1635D7C", Offset = "0x1635D7C", VA = "0x1635D7C")]
		public static Vector3 GetVolumePositionOffset(HEU_SessionBase session, int geoID, int partID, Vector3 volumePosition, float terrainSizeX, float heightMapSize, int mapWidth, int mapHeight, float minHeight)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600256F")]
		[Address(RVA = "0x1635E64", Offset = "0x1635E64", VA = "0x1635E64")]
		public static List<HEU_TreePrototypeInfo> GetTreePrototypeInfosFromPart(HEU_SessionBase session, int geoID, int partID)
		{
			return null;
		}

		[Token(Token = "0x6002570")]
		[Address(RVA = "0x16360EC", Offset = "0x16360EC", VA = "0x16360EC")]
		public static void PopulateScatterTrees(HEU_SessionBase session, int geoID, int partID, int pointCount, ref HEU_VolumeScatterTrees scatterTrees)
		{
		}

		[Token(Token = "0x6002571")]
		[Address(RVA = "0x1636B50", Offset = "0x1636B50", VA = "0x1636B50")]
		public static void ApplyScatterTrees(TerrainData terrainData, HEU_VolumeScatterTrees scatterTrees)
		{
		}

		[Token(Token = "0x6002572")]
		[Address(RVA = "0x1636FB4", Offset = "0x1636FB4", VA = "0x1636FB4")]
		public static void PopulateDetailPrototype(HEU_SessionBase session, int geoID, int partID, ref HEU_DetailPrototype detailPrototype)
		{
		}

		[Token(Token = "0x6002573")]
		[Address(RVA = "0x163732C", Offset = "0x163732C", VA = "0x163732C")]
		public static void PopulateDetailProperties(HEU_SessionBase session, int geoID, int partID, ref HEU_DetailProperties detailProperties)
		{
		}

		[Token(Token = "0x6002574")]
		[Address(RVA = "0x16375F0", Offset = "0x16375F0", VA = "0x16375F0")]
		public static void ApplyDetailLayers(Terrain terrain, TerrainData terrainData, HEU_DetailProperties detailProperties, List<HEU_DetailPrototype> heuDetailPrototypes, List<int[,]> convertedDetailMaps)
		{
		}

		[Token(Token = "0x6002575")]
		[Address(RVA = "0x1637A30", Offset = "0x1637A30", VA = "0x1637A30")]
		private static int GetTerrainLayerIndexByName(string layerName, TerrainLayer[] terrainLayers)
		{
			return default(int);
		}

		[Token(Token = "0x6002576")]
		[Address(RVA = "0x1637BB4", Offset = "0x1637BB4", VA = "0x1637BB4")]
		public static int GetTerrainLayerIndex(TerrainLayer layer, TerrainLayer[] terrainLayers)
		{
			return default(int);
		}

		[Token(Token = "0x6002577")]
		[Address(RVA = "0x1637C8C", Offset = "0x1637C8C", VA = "0x1637C8C")]
		public static bool VolumeLayerHasAttributes(HEU_SessionBase session, int geoID, int partID)
		{
			return default(bool);
		}

		[Token(Token = "0x6002578")]
		[Address(RVA = "0x1637F88", Offset = "0x1637F88", VA = "0x1637F88")]
		public static HFLayerType GetHeightfieldLayerType(HEU_SessionBase session, int geoID, int partID, string volumeName)
		{
			return default(HFLayerType);
		}

		[Token(Token = "0x6002579")]
		[Address(RVA = "0x16355AC", Offset = "0x16355AC", VA = "0x16355AC")]
		public static float GetHeightRangeFromHeightfield(HEU_SessionBase session, int geoID, int partID)
		{
			return default(float);
		}

		[Token(Token = "0x600257A")]
		[Address(RVA = "0x16380D0", Offset = "0x16380D0", VA = "0x16380D0")]
		public static string GetTerrainDataExportPathFromHeightfieldAttribute(HEU_SessionBase session, int geoID, int partID)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000498")]
	public class HEU_ToolsInfo : ScriptableObject
	{
		[Token(Token = "0x20006BD")]
		public enum PaintMergeMode
		{
			[Token(Token = "0x40020F8")]
			REPLACE,
			[Token(Token = "0x40020F9")]
			ADD,
			[Token(Token = "0x40020FA")]
			SUBTRACT,
			[Token(Token = "0x40020FB")]
			MULTIPLY
		}

		[Token(Token = "0x20006BE")]
		public enum PaintMeshVisibility
		{
			[Token(Token = "0x40020FD")]
			AUTO,
			[Token(Token = "0x40020FE")]
			SHOW,
			[Token(Token = "0x40020FF")]
			HIDE
		}

		[Token(Token = "0x400180A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float _paintBrushSize;

		[Token(Token = "0x400180B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float _paintBrushOpacity;

		[Token(Token = "0x400180C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int[] _paintIntValue;

		[Token(Token = "0x400180D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float[] _paintFloatValue;

		[Token(Token = "0x400180E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string[] _paintStringValue;

		[Token(Token = "0x400180F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int _lastAttributesGeoID;

		[Token(Token = "0x4001810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int _lastAttributesPartID;

		[Token(Token = "0x4001811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string _lastAttributeNodeName;

		[Token(Token = "0x4001812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string _lastAttributeName;

		[Token(Token = "0x4001813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Color _brushHandleColor;

		[Token(Token = "0x4001814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Color _affectedAreaPaintColor;

		[Token(Token = "0x4001815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool _liveUpdate;

		[Token(Token = "0x4001816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		public bool _isPainting;

		[Token(Token = "0x4001817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float _editPointBoxSize;

		[Token(Token = "0x4001818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Color _editPointBoxUnselectedColor;

		[Token(Token = "0x4001819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Color _editPointBoxSelectedColor;

		[Token(Token = "0x400181A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool _recacheRequired;

		[Token(Token = "0x400181B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public PaintMergeMode _paintMergeMode;

		[Token(Token = "0x400181C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public bool _showOnlyEditGeometry;

		[Token(Token = "0x400181D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		public bool _alwaysCookUpstream;

		[Token(Token = "0x400181E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public PaintMeshVisibility _paintMeshVisiblity;

		[Token(Token = "0x600257B")]
		[Address(RVA = "0x163D3A4", Offset = "0x163D3A4", VA = "0x163D3A4")]
		public HEU_ToolsInfo()
		{
		}
	}
	[Token(Token = "0x2000499")]
	public enum HFLayerType
	{
		[Token(Token = "0x4001820")]
		DEFAULT,
		[Token(Token = "0x4001821")]
		HEIGHT,
		[Token(Token = "0x4001822")]
		MASK,
		[Token(Token = "0x4001823")]
		DETAIL
	}
	[Serializable]
	[Token(Token = "0x200049A")]
	public class HEU_VolumeLayer
	{
		[Token(Token = "0x4001824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string _layerName;

		[Token(Token = "0x4001825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HEU_PartData _part;

		[Token(Token = "0x4001826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float _strength;

		[Token(Token = "0x4001827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool _uiExpanded;

		[Token(Token = "0x4001828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int _tile;

		[Token(Token = "0x4001829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int _xLength;

		[Token(Token = "0x400182A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int _yLength;

		[NonSerialized]
		[Token(Token = "0x400182B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool _hasLayerAttributes;

		[Token(Token = "0x400182C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TerrainLayer _terrainLayer;

		[Token(Token = "0x400182D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public HFLayerType _layerType;

		[Token(Token = "0x400182E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public HEU_DetailPrototype _detailPrototype;

		[Token(Token = "0x600257C")]
		[Address(RVA = "0x163E6F4", Offset = "0x163E6F4", VA = "0x163E6F4")]
		public HEU_VolumeLayer()
		{
		}
	}
	[Token(Token = "0x200049B")]
	public class HEU_VolumeScatterTrees
	{
		[Token(Token = "0x400182F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<HEU_TreePrototypeInfo> _treePrototypInfos;

		[Token(Token = "0x4001830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color32[] _colors;

		[Token(Token = "0x4001831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float[] _heightScales;

		[Token(Token = "0x4001832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color32[] _lightmapColors;

		[Token(Token = "0x4001833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3[] _positions;

		[Token(Token = "0x4001834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int[] _prototypeIndices;

		[Token(Token = "0x4001835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float[] _rotations;

		[Token(Token = "0x4001836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float[] _widthScales;

		[Token(Token = "0x600257D")]
		[Address(RVA = "0x1636B48", Offset = "0x1636B48", VA = "0x1636B48")]
		public HEU_VolumeScatterTrees()
		{
		}
	}
	[Token(Token = "0x200049C")]
	public class HEU_TreePrototypeInfo
	{
		[Token(Token = "0x4001837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string _prefabPath;

		[Token(Token = "0x4001838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float _bendfactor;

		[Token(Token = "0x600257E")]
		[Address(RVA = "0x16360E4", Offset = "0x16360E4", VA = "0x16360E4")]
		public HEU_TreePrototypeInfo()
		{
		}
	}
	[Token(Token = "0x200049D")]
	public class HEU_DetailProperties
	{
		[Token(Token = "0x4001839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float _detailDistance;

		[Token(Token = "0x400183A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float _detailDensity;

		[Token(Token = "0x400183B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int _detailResolution;

		[Token(Token = "0x400183C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int _detailResolutionPerPatch;

		[Token(Token = "0x600257F")]
		[Address(RVA = "0x152F578", Offset = "0x152F578", VA = "0x152F578")]
		public HEU_DetailProperties()
		{
		}
	}
	[Token(Token = "0x200049E")]
	public class HEU_DetailPrototype
	{
		[Token(Token = "0x400183D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string _prototypePrefab;

		[Token(Token = "0x400183E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string _prototypeTexture;

		[Token(Token = "0x400183F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float _bendFactor;

		[Token(Token = "0x4001840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Color _dryColor;

		[Token(Token = "0x4001841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Color _healthyColor;

		[Token(Token = "0x4001842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float _maxHeight;

		[Token(Token = "0x4001843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float _maxWidth;

		[Token(Token = "0x4001844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float _minHeight;

		[Token(Token = "0x4001845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float _minWidth;

		[Token(Token = "0x4001846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float _noiseSpread;

		[Token(Token = "0x4001847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int _renderMode;

		[Token(Token = "0x6002580")]
		[Address(RVA = "0x152F590", Offset = "0x152F590", VA = "0x152F590")]
		public HEU_DetailPrototype()
		{
		}
	}
	[Token(Token = "0x200049F")]
	public class HEU_VolumeCache : ScriptableObject
	{
		[Token(Token = "0x4001848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private HEU_GeoNode _ownerNode;

		[Token(Token = "0x4001849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<HEU_VolumeLayer> _layers;

		[Token(Token = "0x400184A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<HEU_VolumeLayer> _updatedLayers;

		[Token(Token = "0x400184B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int _tileIndex;

		[Token(Token = "0x400184C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private bool _isDirty;

		[Token(Token = "0x400184D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private string _geoName;

		[Token(Token = "0x400184E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private string _objName;

		[Token(Token = "0x400184F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool _uiExpanded;

		[Token(Token = "0x4001850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TerrainData _terrainData;

		[Token(Token = "0x4001851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private HEU_VolumeScatterTrees _scatterTrees;

		[Token(Token = "0x4001852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private HEU_DetailProperties _detailProperties;

		[Token(Token = "0x17000451")]
		public bool IsDirty
		{
			[Token(Token = "0x6002581")]
			[Address(RVA = "0x163DA24", Offset = "0x163DA24", VA = "0x163DA24")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002582")]
			[Address(RVA = "0x163DA2C", Offset = "0x163DA2C", VA = "0x163DA2C")]
			set
			{
			}
		}

		[Token(Token = "0x17000452")]
		public int TileIndex
		{
			[Token(Token = "0x6002583")]
			[Address(RVA = "0x163DA38", Offset = "0x163DA38", VA = "0x163DA38")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000453")]
		public string ObjectName
		{
			[Token(Token = "0x6002584")]
			[Address(RVA = "0x163DA40", Offset = "0x163DA40", VA = "0x163DA40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000454")]
		public string GeoName
		{
			[Token(Token = "0x6002585")]
			[Address(RVA = "0x163DA48", Offset = "0x163DA48", VA = "0x163DA48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000455")]
		public bool UIExpanded
		{
			[Token(Token = "0x6002586")]
			[Address(RVA = "0x163DA50", Offset = "0x163DA50", VA = "0x163DA50")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002587")]
			[Address(RVA = "0x163DA58", Offset = "0x163DA58", VA = "0x163DA58")]
			set
			{
			}
		}

		[Token(Token = "0x6002588")]
		[Address(RVA = "0x163DA64", Offset = "0x163DA64", VA = "0x163DA64")]
		public static List<HEU_VolumeCache> UpdateVolumeCachesFromParts(HEU_SessionBase session, HEU_GeoNode ownerNode, List<HEU_PartData> volumeParts, List<HEU_VolumeCache> volumeCaches)
		{
			return null;
		}

		[Token(Token = "0x6002589")]
		[Address(RVA = "0x163E590", Offset = "0x163E590", VA = "0x163E590")]
		public void Initialize(HEU_GeoNode ownerNode, int tileIndex)
		{
		}

		[Token(Token = "0x600258A")]
		[Address(RVA = "0x163E5DC", Offset = "0x163E5DC", VA = "0x163E5DC")]
		public void ResetParameters()
		{
		}

		[Token(Token = "0x600258B")]
		[Address(RVA = "0x163E7D8", Offset = "0x163E7D8", VA = "0x163E7D8")]
		public HEU_VolumeLayer GetLayer(string layerName)
		{
			return null;
		}

		[Token(Token = "0x600258C")]
		[Address(RVA = "0x163E20C", Offset = "0x163E20C", VA = "0x163E20C")]
		public void StartUpdateLayers()
		{
		}

		[Token(Token = "0x600258D")]
		[Address(RVA = "0x163E5D0", Offset = "0x163E5D0", VA = "0x163E5D0")]
		public void FinishUpdateLayers()
		{
		}

		[Token(Token = "0x600258E")]
		[Address(RVA = "0x163E904", Offset = "0x163E904", VA = "0x163E904")]
		private void GetPartLayerAttributes(HEU_SessionBase session, int geoID, int partID, HEU_VolumeLayer layer)
		{
		}

		[Token(Token = "0x600258F")]
		[Address(RVA = "0x163EA50", Offset = "0x163EA50", VA = "0x163EA50")]
		private bool LoadLayerTextureFromAttribute(HEU_SessionBase session, int geoID, int partID, string attrName, out Texture2D outTexture)
		{
			return default(bool);
		}

		[Token(Token = "0x6002590")]
		[Address(RVA = "0x163EC8C", Offset = "0x163EC8C", VA = "0x163EC8C")]
		private bool LoadLayerFloatFromAttribute(HEU_SessionBase session, int geoID, int partID, string attrName, ref float floatValue)
		{
			return default(bool);
		}

		[Token(Token = "0x6002591")]
		[Address(RVA = "0x163EDB8", Offset = "0x163EDB8", VA = "0x163EDB8")]
		private bool LoadLayerColorFromAttribute(HEU_SessionBase session, int geoID, int partID, string attrName, ref Color colorValue)
		{
			return default(bool);
		}

		[Token(Token = "0x6002592")]
		[Address(RVA = "0x163EF88", Offset = "0x163EF88", VA = "0x163EF88")]
		private bool LoadLayerVector2FromAttribute(HEU_SessionBase session, int geoID, int partID, string attrName, ref Vector2 vectorValue)
		{
			return default(bool);
		}

		[Token(Token = "0x6002593")]
		[Address(RVA = "0x163E274", Offset = "0x163E274", VA = "0x163E274")]
		public void UpdateLayerFromPart(HEU_SessionBase session, HEU_PartData part)
		{
		}

		[Token(Token = "0x6002594")]
		[Address(RVA = "0x163F0F8", Offset = "0x163F0F8", VA = "0x163F0F8")]
		public void GenerateTerrainWithAlphamaps(HEU_SessionBase session, HEU_HoudiniAsset houdiniAsset, bool bRebuild)
		{
		}

		[Token(Token = "0x6002595")]
		[Address(RVA = "0x164090C", Offset = "0x164090C", VA = "0x164090C")]
		public void LoadLayerPropertiesFromAttributes(HEU_SessionBase session, int geoID, int partID, TerrainLayer terrainLayer, bool bNewTerrainLayer, Texture2D defaultTexture)
		{
		}

		[Token(Token = "0x6002596")]
		[Address(RVA = "0x1640C88", Offset = "0x1640C88", VA = "0x1640C88")]
		public void PopulateScatterTrees(HEU_SessionBase session, int geoID, int partID, int pointCount)
		{
		}

		[Token(Token = "0x6002597")]
		[Address(RVA = "0x1640CA4", Offset = "0x1640CA4", VA = "0x1640CA4")]
		public void PopulateDetailPrototype(HEU_SessionBase session, int geoID, int partID, HEU_VolumeLayer layer)
		{
		}

		[Token(Token = "0x6002598")]
		[Address(RVA = "0x1640CCC", Offset = "0x1640CCC", VA = "0x1640CCC")]
		public void PopulatePreset(HEU_VolumeCachePreset cachePreset)
		{
		}

		[Token(Token = "0x6002599")]
		[Address(RVA = "0x16405EC", Offset = "0x16405EC", VA = "0x16405EC")]
		public bool ApplyPreset(HEU_VolumeCachePreset volumeCachePreset)
		{
			return default(bool);
		}

		[Token(Token = "0x600259A")]
		[Address(RVA = "0x1640EC8", Offset = "0x1640EC8", VA = "0x1640EC8")]
		public void CopyValuesTo(HEU_VolumeCache destCache)
		{
		}

		[Token(Token = "0x600259B")]
		[Address(RVA = "0x1641070", Offset = "0x1641070", VA = "0x1641070")]
		public static void CopyDetailProperties(HEU_DetailProperties srcProp, HEU_DetailProperties destProp)
		{
		}

		[Token(Token = "0x600259C")]
		[Address(RVA = "0x163E704", Offset = "0x163E704", VA = "0x163E704")]
		public static void CopyLayer(HEU_VolumeLayer srcLayer, HEU_VolumeLayer destLayer)
		{
		}

		[Token(Token = "0x600259D")]
		[Address(RVA = "0x16410A4", Offset = "0x16410A4", VA = "0x16410A4")]
		public static void CopyPrototype(HEU_DetailPrototype srcProto, HEU_DetailPrototype destProto)
		{
		}

		[Token(Token = "0x600259E")]
		[Address(RVA = "0x1640874", Offset = "0x1640874", VA = "0x1640874")]
		public static Texture2D LoadDefaultSplatTexture()
		{
			return null;
		}

		[Token(Token = "0x600259F")]
		[Address(RVA = "0x163EB64", Offset = "0x163EB64", VA = "0x163EB64")]
		public static Texture2D LoadAssetTexture(string path)
		{
			return null;
		}

		[Token(Token = "0x60025A0")]
		[Address(RVA = "0x1641108", Offset = "0x1641108", VA = "0x1641108")]
		public HEU_VolumeCache()
		{
		}
	}
}
